{
 "*": {
  "data": {
   "imports": [
    "superset_config"
   ]
  },
  "type": "star-import"
 },
 "superset": {
  "data": {
   "symbols_in_volume": [
    "flask.Flask",
    "flask.current_app",
    "flask.current_app.config",
    "superset.extensions.cache_manager.cache",
    "superset.extensions.cache_manager.data_cache",
    "superset.extensions.cache_manager.thumbnail_cache",
    "superset.extensions.feature_flag_manager.get_feature_flags",
    "superset.extensions.feature_flag_manager.is_feature_enabled",
    "superset.extensions.manifest_processor.get_manifest_files",
    "superset.extensions.results_backend_manager.results_backend",
    "superset.extensions.results_backend_manager.should_use_msgpack",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "superset.ConnectorRegistry": {
  "data": {
   "shadows": "superset.connectors.connector_registry.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "superset.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "superset.SupersetSecurityManager": {
  "data": {
   "shadows": "superset.security.SupersetSecurityManager"
  },
  "type": "import"
 },
 "superset.annotation_layers": {
  "data": {},
  "type": "module"
 },
 "superset.annotation_layers.annotations": {
  "data": {},
  "type": "module"
 },
 "superset.annotation_layers.annotations.api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.annotation_layers.annotations.api.logging"
   ]
  },
  "type": "module"
 },
 "superset.annotation_layers.annotations.api.Annotation": {
  "data": {
   "shadows": "superset.models.annotations.Annotation"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.AnnotationAllTextFilter": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.filters.AnnotationAllTextFilter"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.AnnotationBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.AnnotationCreateFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationCreateFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.AnnotationDeleteFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationDeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.AnnotationInvalidError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationInvalidError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.AnnotationLayerNotFoundError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.AnnotationNotFoundError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationNotFoundError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.AnnotationPostSchema": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.schemas.AnnotationPostSchema"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.AnnotationPutSchema": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.schemas.AnnotationPutSchema"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.AnnotationRestApi": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.annotation_layers.annotations.filters.AnnotationAllTextFilter",
    "superset.annotation_layers.annotations.schemas.AnnotationPostSchema",
    "superset.annotation_layers.annotations.schemas.AnnotationPutSchema",
    "superset.annotation_layers.annotations.schemas.get_delete_ids_schema",
    "superset.annotation_layers.annotations.schemas.openapi_spec_methods_override",
    "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.REST_MODEL_VIEW_CRUD_SET",
    "superset.models.annotations.Annotation",
    "superset.views.base_api.BaseSupersetModelRestApi"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.api.AnnotationRestApi._apply_layered_relation_to_rison": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.api.AnnotationRestApi.bulk_delete": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "flask_babel.ngettext",
    "len",
    "str",
    "superset.annotation_layers.annotations.commands.bulk_delete.BulkDeleteAnnotationCommand",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationBulkDeleteFailedError",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationNotFoundError",
    "superset.annotation_layers.annotations.schemas.get_delete_ids_schema",
    "superset.views.base_api.statsd_metrics",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.api.AnnotationRestApi.delete": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.permission_name",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "str",
    "superset.annotation_layers.annotations.api.logger",
    "superset.annotation_layers.annotations.commands.delete.DeleteAnnotationCommand",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationDeleteFailedError",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationNotFoundError",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.api.AnnotationRestApi.get": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "flask.Response",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.permission_name",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "flask_appbuilder.api.schemas.get_item_schema",
    "int",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.api.AnnotationRestApi.get_list": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "flask.Response",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.permission_name",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "flask_appbuilder.api.schemas.get_list_schema",
    "int",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.api.AnnotationRestApi.post": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.permission_name",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "marshmallow.ValidationError",
    "str",
    "superset.annotation_layers.annotations.api.logger",
    "superset.annotation_layers.annotations.commands.create.CreateAnnotationCommand",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationCreateFailedError",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationInvalidError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.api.AnnotationRestApi.put": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.permission_name",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "marshmallow.ValidationError",
    "str",
    "superset.annotation_layers.annotations.api.logger",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationInvalidError",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationNotFoundError",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationUpdateFailedError",
    "superset.annotation_layers.annotations.commands.update.UpdateAnnotationCommand",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.api.AnnotationUpdateFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationUpdateFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.BaseSupersetModelRestApi": {
  "data": {
   "shadows": "superset.views.base_api.BaseSupersetModelRestApi"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.BulkDeleteAnnotationCommand": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.bulk_delete.BulkDeleteAnnotationCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.CreateAnnotationCommand": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.create.CreateAnnotationCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.DeleteAnnotationCommand": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.delete.DeleteAnnotationCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.MODEL_API_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.UpdateAnnotationCommand": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.update.UpdateAnnotationCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.expose": {
  "data": {
   "shadows": "flask_appbuilder.api.expose"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.get_delete_ids_schema": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.schemas.get_delete_ids_schema"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.get_item_schema": {
  "data": {
   "shadows": "flask_appbuilder.api.schemas.get_item_schema"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.get_list_schema": {
  "data": {
   "shadows": "flask_appbuilder.api.schemas.get_list_schema"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.logger": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "superset.annotation_layers.annotations.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.ngettext": {
  "data": {
   "shadows": "flask_babel.ngettext"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.openapi_spec_methods_override": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.schemas.openapi_spec_methods_override"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.permission_name": {
  "data": {
   "shadows": "flask_appbuilder.api.permission_name"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.protect": {
  "data": {
   "shadows": "flask_appbuilder.api.protect"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.rison": {
  "data": {
   "shadows": "flask_appbuilder.api.rison"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.safe": {
  "data": {
   "shadows": "flask_appbuilder.api.safe"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.api.statsd_metrics": {
  "data": {
   "shadows": "superset.views.base_api.statsd_metrics"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands": {
  "data": {},
  "type": "module"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.annotation_layers.annotations.commands.bulk_delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.Annotation": {
  "data": {
   "shadows": "superset.models.annotations.Annotation"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.AnnotationBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.AnnotationDAO": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.dao.AnnotationDAO"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.AnnotationNotFoundError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationNotFoundError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.BulkDeleteAnnotationCommand": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.BulkDeleteAnnotationCommand.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.models.annotations.Annotation",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.BulkDeleteAnnotationCommand.run": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "superset.annotation_layers.annotations.commands.bulk_delete.logger",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationBulkDeleteFailedError",
    "superset.annotation_layers.annotations.dao.AnnotationDAO.bulk_delete",
    "superset.dao.exceptions.DAODeleteFailedError"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.BulkDeleteAnnotationCommand.validate": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationNotFoundError",
    "superset.annotation_layers.annotations.dao.AnnotationDAO.find_by_ids"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.annotation_layers.annotations.commands.bulk_delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.annotation_layers.annotations.commands.create.logging"
   ]
  },
  "type": "module"
 },
 "superset.annotation_layers.annotations.commands.create.AnnotationCreateFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationCreateFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.AnnotationDAO": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.dao.AnnotationDAO"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.AnnotationDatesValidationError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationDatesValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.AnnotationInvalidError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationInvalidError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.AnnotationLayerDAO": {
  "data": {
   "shadows": "superset.annotation_layers.dao.AnnotationLayerDAO"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.AnnotationLayerNotFoundError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.AnnotationUniquenessValidationError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationUniquenessValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.CreateAnnotationCommand": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.commands.create.CreateAnnotationCommand.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.commands.create.CreateAnnotationCommand.run": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.annotation_layers.annotations.commands.create.logger",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationCreateFailedError",
    "superset.annotation_layers.annotations.dao.AnnotationDAO.create",
    "superset.dao.exceptions.DAOCreateFailedError"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.commands.create.CreateAnnotationCommand.validate": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "datetime.datetime",
    "int",
    "isinstance",
    "list",
    "marshmallow.ValidationError",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationDatesValidationError",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationInvalidError",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationUniquenessValidationError",
    "superset.annotation_layers.annotations.dao.AnnotationDAO.validate_update_uniqueness",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError",
    "superset.annotation_layers.dao.AnnotationLayerDAO.find_by_id",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.commands.create.DAOCreateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOCreateFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.create.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.annotation_layers.annotations.commands.create.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.annotation_layers.annotations.commands.delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.annotation_layers.annotations.commands.delete.Annotation": {
  "data": {
   "shadows": "superset.models.annotations.Annotation"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.delete.AnnotationDAO": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.dao.AnnotationDAO"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.delete.AnnotationDeleteFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationDeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.delete.AnnotationNotFoundError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationNotFoundError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.delete.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.delete.DeleteAnnotationCommand": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.commands.delete.DeleteAnnotationCommand.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.models.annotations.Annotation",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.commands.delete.DeleteAnnotationCommand.run": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.annotation_layers.annotations.commands.delete.logger",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationDeleteFailedError",
    "superset.annotation_layers.annotations.dao.AnnotationDAO.delete",
    "superset.dao.exceptions.DAODeleteFailedError"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.commands.delete.DeleteAnnotationCommand.validate": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationNotFoundError",
    "superset.annotation_layers.annotations.dao.AnnotationDAO.find_by_id"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.commands.delete.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.delete.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.annotation_layers.annotations.commands.delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.exceptions": {
  "data": {},
  "type": "module"
 },
 "superset.annotation_layers.annotations.commands.exceptions.AnnotationBulkDeleteFailedError": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.DeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.commands.exceptions.AnnotationCreateFailedError": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CreateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.commands.exceptions.AnnotationDatesValidationError": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "marshmallow.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.commands.exceptions.AnnotationDatesValidationError.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.commands.exceptions.AnnotationDeleteFailedError": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.commands.exceptions.AnnotationInvalidError": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandInvalidError"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.commands.exceptions.AnnotationNotFoundError": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.commands.exceptions.AnnotationUniquenessValidationError": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "marshmallow.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.commands.exceptions.AnnotationUniquenessValidationError.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.commands.exceptions.AnnotationUpdateFailedError": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CreateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.commands.exceptions.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.exceptions.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.exceptions.CreateFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.CreateFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.exceptions.DeleteFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.DeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.exceptions.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.exceptions._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.annotation_layers.annotations.commands.update.logging"
   ]
  },
  "type": "module"
 },
 "superset.annotation_layers.annotations.commands.update.Annotation": {
  "data": {
   "shadows": "superset.models.annotations.Annotation"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.AnnotationDAO": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.dao.AnnotationDAO"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.AnnotationDatesValidationError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationDatesValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.AnnotationInvalidError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationInvalidError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.AnnotationLayerDAO": {
  "data": {
   "shadows": "superset.annotation_layers.dao.AnnotationLayerDAO"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.AnnotationLayerNotFoundError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.AnnotationNotFoundError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationNotFoundError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.AnnotationUniquenessValidationError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationUniquenessValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.AnnotationUpdateFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.commands.exceptions.AnnotationUpdateFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.DAOUpdateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOUpdateFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.UpdateAnnotationCommand": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.commands.update.UpdateAnnotationCommand.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "str",
    "superset.models.annotations.Annotation",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.commands.update.UpdateAnnotationCommand.run": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationUpdateFailedError",
    "superset.annotation_layers.annotations.commands.update.logger",
    "superset.annotation_layers.annotations.dao.AnnotationDAO.update",
    "superset.dao.exceptions.DAOUpdateFailedError"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.commands.update.UpdateAnnotationCommand.validate": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datetime.datetime",
    "int",
    "list",
    "marshmallow.ValidationError",
    "str",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationDatesValidationError",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationInvalidError",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationNotFoundError",
    "superset.annotation_layers.annotations.commands.exceptions.AnnotationUniquenessValidationError",
    "superset.annotation_layers.annotations.dao.AnnotationDAO.find_by_id",
    "superset.annotation_layers.annotations.dao.AnnotationDAO.validate_update_uniqueness",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError",
    "superset.annotation_layers.dao.AnnotationLayerDAO.find_by_id",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.commands.update.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.commands.update.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.annotation_layers.annotations.commands.update.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.dao": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.annotation_layers.annotations.dao.logging"
   ]
  },
  "type": "module"
 },
 "superset.annotation_layers.annotations.dao.Annotation": {
  "data": {
   "shadows": "superset.models.annotations.Annotation"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.dao.AnnotationDAO": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "superset.dao.base.BaseDAO",
    "superset.models.annotations.Annotation"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.dao.AnnotationDAO.bulk_delete": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.exc.SQLAlchemyError",
    "staticmethod",
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.query",
    "superset.extensions.db.session.rollback",
    "superset.models.annotations.Annotation",
    "superset.models.annotations.Annotation.id.in_",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.dao.AnnotationDAO.validate_update_uniqueness": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "bool",
    "int",
    "staticmethod",
    "str",
    "superset.extensions.db.session.query",
    "superset.models.annotations.Annotation",
    "superset.models.annotations.Annotation.id",
    "superset.models.annotations.Annotation.layer_id",
    "superset.models.annotations.Annotation.short_descr",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.dao.BaseDAO": {
  "data": {
   "shadows": "superset.dao.base.BaseDAO"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.dao.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.dao.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.dao.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.dao.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.dao.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.dao.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.annotation_layers.annotations.dao.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.filters": {
  "data": {},
  "type": "module"
 },
 "superset.annotation_layers.annotations.filters.Annotation": {
  "data": {
   "shadows": "superset.models.annotations.Annotation"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.filters.AnnotationAllTextFilter": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.filters.AnnotationAllTextFilter.apply": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sqlalchemy.or_",
    "sqlalchemy.orm.query.Query",
    "superset.models.annotations.Annotation.long_descr.ilike",
    "superset.models.annotations.Annotation.short_descr.ilike",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.annotations.filters.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.filters.BaseFilter": {
  "data": {
   "shadows": "superset.views.base.BaseFilter"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.filters.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.query.Query"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.filters._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.filters.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.schemas": {
  "data": {},
  "type": "module"
 },
 "superset.annotation_layers.annotations.schemas.AnnotationPostSchema": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.DateTime",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "superset.annotation_layers.annotations.schemas.annotation_end_dttm",
    "superset.annotation_layers.annotations.schemas.annotation_json_metadata",
    "superset.annotation_layers.annotations.schemas.annotation_long_descr",
    "superset.annotation_layers.annotations.schemas.annotation_short_descr",
    "superset.annotation_layers.annotations.schemas.annotation_start_dttm",
    "superset.annotation_layers.annotations.schemas.validate_json"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.schemas.AnnotationPutSchema": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.DateTime",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "superset.annotation_layers.annotations.schemas.annotation_end_dttm",
    "superset.annotation_layers.annotations.schemas.annotation_json_metadata",
    "superset.annotation_layers.annotations.schemas.annotation_long_descr",
    "superset.annotation_layers.annotations.schemas.annotation_short_descr",
    "superset.annotation_layers.annotations.schemas.annotation_start_dttm",
    "superset.annotation_layers.annotations.schemas.validate_json"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.annotations.schemas.Length": {
  "data": {
   "shadows": "marshmallow.validate.Length"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.schemas.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.schemas.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.schemas.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.schemas.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.schemas.annotation_end_dttm": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.annotation_layers.annotations.schemas.annotation_json_metadata": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "superset.annotation_layers.annotations.schemas.annotation_layer": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "superset.annotation_layers.annotations.schemas.annotation_long_descr": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "superset.annotation_layers.annotations.schemas.annotation_short_descr": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "superset.annotation_layers.annotations.schemas.annotation_start_dttm": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.annotation_layers.annotations.schemas.fields": {
  "data": {
   "shadows": "marshmallow.fields"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.schemas.get_delete_ids_schema": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "superset.annotation_layers.annotations.schemas.openapi_spec_methods_override": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.annotation_layers.annotations.schemas.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.annotation_layers.annotations.schemas.validate_json": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "marshmallow.ValidationError",
    "str",
    "superset.exceptions.SupersetException",
    "superset.utils.core.validate_json",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.annotation_layers.api.logging"
   ]
  },
  "type": "module"
 },
 "superset.annotation_layers.api.AnnotationLayer": {
  "data": {
   "shadows": "superset.models.annotations.AnnotationLayer"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.AnnotationLayerAllTextFilter": {
  "data": {
   "shadows": "superset.annotation_layers.filters.AnnotationLayerAllTextFilter"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.AnnotationLayerBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.AnnotationLayerBulkDeleteIntegrityError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerBulkDeleteIntegrityError"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.AnnotationLayerCreateFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerCreateFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.AnnotationLayerDeleteFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerDeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.AnnotationLayerDeleteIntegrityError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerDeleteIntegrityError"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.AnnotationLayerInvalidError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerInvalidError"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.AnnotationLayerNotFoundError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.AnnotationLayerPostSchema": {
  "data": {
   "shadows": "superset.annotation_layers.schemas.AnnotationLayerPostSchema"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.AnnotationLayerPutSchema": {
  "data": {
   "shadows": "superset.annotation_layers.schemas.AnnotationLayerPutSchema"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.AnnotationLayerRestApi": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.annotation_layers.filters.AnnotationLayerAllTextFilter",
    "superset.annotation_layers.schemas.AnnotationLayerPostSchema",
    "superset.annotation_layers.schemas.AnnotationLayerPutSchema",
    "superset.annotation_layers.schemas.get_delete_ids_schema",
    "superset.annotation_layers.schemas.openapi_spec_methods_override",
    "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.RELATED",
    "superset.constants.RouteMethod.REST_MODEL_VIEW_CRUD_SET",
    "superset.models.annotations.AnnotationLayer",
    "superset.views.base_api.BaseSupersetModelRestApi"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.api.AnnotationLayerRestApi.bulk_delete": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "flask_babel.ngettext",
    "len",
    "str",
    "superset.annotation_layers.commands.bulk_delete.BulkDeleteAnnotationLayerCommand",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerBulkDeleteFailedError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerBulkDeleteIntegrityError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError",
    "superset.annotation_layers.schemas.get_delete_ids_schema",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.api.AnnotationLayerRestApi.delete": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.permission_name",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "str",
    "superset.annotation_layers.api.logger",
    "superset.annotation_layers.commands.delete.DeleteAnnotationLayerCommand",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerDeleteFailedError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerDeleteIntegrityError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.api.AnnotationLayerRestApi.post": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.permission_name",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "marshmallow.ValidationError",
    "str",
    "superset.annotation_layers.api.logger",
    "superset.annotation_layers.commands.create.CreateAnnotationLayerCommand",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerCreateFailedError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerInvalidError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.api.AnnotationLayerRestApi.put": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.permission_name",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "marshmallow.ValidationError",
    "str",
    "superset.annotation_layers.api.logger",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerInvalidError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerUpdateFailedError",
    "superset.annotation_layers.commands.update.UpdateAnnotationLayerCommand",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.api.AnnotationLayerUpdateFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerUpdateFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.BaseSupersetModelRestApi": {
  "data": {
   "shadows": "superset.views.base_api.BaseSupersetModelRestApi"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.BulkDeleteAnnotationLayerCommand": {
  "data": {
   "shadows": "superset.annotation_layers.commands.bulk_delete.BulkDeleteAnnotationLayerCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.CreateAnnotationLayerCommand": {
  "data": {
   "shadows": "superset.annotation_layers.commands.create.CreateAnnotationLayerCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.DeleteAnnotationLayerCommand": {
  "data": {
   "shadows": "superset.annotation_layers.commands.delete.DeleteAnnotationLayerCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.MODEL_API_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.UpdateAnnotationLayerCommand": {
  "data": {
   "shadows": "superset.annotation_layers.commands.update.UpdateAnnotationLayerCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.event_logger": {
  "data": {
   "shadows": "superset.extensions.event_logger"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.expose": {
  "data": {
   "shadows": "flask_appbuilder.api.expose"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.get_delete_ids_schema": {
  "data": {
   "shadows": "superset.annotation_layers.schemas.get_delete_ids_schema"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.logger": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "superset.annotation_layers.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.ngettext": {
  "data": {
   "shadows": "flask_babel.ngettext"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.openapi_spec_methods_override": {
  "data": {
   "shadows": "superset.annotation_layers.schemas.openapi_spec_methods_override"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.permission_name": {
  "data": {
   "shadows": "flask_appbuilder.api.permission_name"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.protect": {
  "data": {
   "shadows": "flask_appbuilder.api.protect"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.rison": {
  "data": {
   "shadows": "flask_appbuilder.api.rison"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.safe": {
  "data": {
   "shadows": "flask_appbuilder.api.safe"
  },
  "type": "import"
 },
 "superset.annotation_layers.api.statsd_metrics": {
  "data": {
   "shadows": "superset.views.base_api.statsd_metrics"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands": {
  "data": {},
  "type": "module"
 },
 "superset.annotation_layers.commands.bulk_delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.annotation_layers.commands.bulk_delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.annotation_layers.commands.bulk_delete.AnnotationLayer": {
  "data": {
   "shadows": "superset.models.annotations.AnnotationLayer"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.bulk_delete.AnnotationLayerBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.bulk_delete.AnnotationLayerBulkDeleteIntegrityError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerBulkDeleteIntegrityError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.bulk_delete.AnnotationLayerDAO": {
  "data": {
   "shadows": "superset.annotation_layers.dao.AnnotationLayerDAO"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.bulk_delete.AnnotationLayerNotFoundError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.bulk_delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.bulk_delete.BulkDeleteAnnotationLayerCommand": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.commands.bulk_delete.BulkDeleteAnnotationLayerCommand.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.models.annotations.AnnotationLayer",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.commands.bulk_delete.BulkDeleteAnnotationLayerCommand.run": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "superset.annotation_layers.commands.bulk_delete.logger",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerBulkDeleteFailedError",
    "superset.annotation_layers.dao.AnnotationLayerDAO.bulk_delete",
    "superset.dao.exceptions.DAODeleteFailedError"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.commands.bulk_delete.BulkDeleteAnnotationLayerCommand.validate": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerBulkDeleteIntegrityError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError",
    "superset.annotation_layers.dao.AnnotationLayerDAO.find_by_ids",
    "superset.annotation_layers.dao.AnnotationLayerDAO.has_annotations"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.commands.bulk_delete.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.bulk_delete.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.bulk_delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.bulk_delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.bulk_delete.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.annotation_layers.commands.bulk_delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.create": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.annotation_layers.commands.create.logging"
   ]
  },
  "type": "module"
 },
 "superset.annotation_layers.commands.create.AnnotationLayerCreateFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerCreateFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.create.AnnotationLayerDAO": {
  "data": {
   "shadows": "superset.annotation_layers.dao.AnnotationLayerDAO"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.create.AnnotationLayerInvalidError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerInvalidError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.create.AnnotationLayerNameUniquenessValidationError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerNameUniquenessValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.create.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.create.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.create.CreateAnnotationLayerCommand": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.commands.create.CreateAnnotationLayerCommand.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.commands.create.CreateAnnotationLayerCommand.run": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.annotation_layers.commands.create.logger",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerCreateFailedError",
    "superset.annotation_layers.dao.AnnotationLayerDAO.create",
    "superset.dao.exceptions.DAOCreateFailedError"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.commands.create.CreateAnnotationLayerCommand.validate": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "list",
    "marshmallow.ValidationError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerInvalidError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerNameUniquenessValidationError",
    "superset.annotation_layers.dao.AnnotationLayerDAO.validate_update_uniqueness",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.commands.create.DAOCreateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOCreateFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.create.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.create.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.create.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.create.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.create.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.create.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.annotation_layers.commands.create.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.annotation_layers.commands.delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.annotation_layers.commands.delete.AnnotationLayer": {
  "data": {
   "shadows": "superset.models.annotations.AnnotationLayer"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.delete.AnnotationLayerDAO": {
  "data": {
   "shadows": "superset.annotation_layers.dao.AnnotationLayerDAO"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.delete.AnnotationLayerDeleteFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerDeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.delete.AnnotationLayerDeleteIntegrityError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerDeleteIntegrityError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.delete.AnnotationLayerNotFoundError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.delete.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.delete.DeleteAnnotationLayerCommand": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.commands.delete.DeleteAnnotationLayerCommand.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.models.annotations.AnnotationLayer",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.commands.delete.DeleteAnnotationLayerCommand.run": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.annotation_layers.commands.delete.logger",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerDeleteFailedError",
    "superset.annotation_layers.dao.AnnotationLayerDAO.delete",
    "superset.dao.exceptions.DAODeleteFailedError"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.commands.delete.DeleteAnnotationLayerCommand.validate": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "superset.annotation_layers.commands.exceptions.AnnotationLayerDeleteIntegrityError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError",
    "superset.annotation_layers.dao.AnnotationLayerDAO.find_by_id",
    "superset.annotation_layers.dao.AnnotationLayerDAO.has_annotations"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.commands.delete.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.delete.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.annotation_layers.commands.delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.exceptions": {
  "data": {},
  "type": "module"
 },
 "superset.annotation_layers.commands.exceptions.AnnotationLayerBulkDeleteFailedError": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.DeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.commands.exceptions.AnnotationLayerBulkDeleteIntegrityError": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.commands.exceptions.AnnotationLayerCreateFailedError": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CreateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.commands.exceptions.AnnotationLayerDeleteFailedError": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.commands.exceptions.AnnotationLayerDeleteIntegrityError": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.commands.exceptions.AnnotationLayerInvalidError": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandInvalidError"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.commands.exceptions.AnnotationLayerNameUniquenessValidationError": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "superset.commands.exceptions.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.commands.exceptions.AnnotationLayerNameUniquenessValidationError.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.commands.exceptions.AnnotationLayerUpdateFailedError": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CreateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.commands.exceptions.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.exceptions.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.exceptions.CreateFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.CreateFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.exceptions.DeleteFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.DeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.exceptions.ValidationError": {
  "data": {
   "shadows": "superset.commands.exceptions.ValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.exceptions._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.annotation_layers.commands.update.logging"
   ]
  },
  "type": "module"
 },
 "superset.annotation_layers.commands.update.AnnotationLayer": {
  "data": {
   "shadows": "superset.models.annotations.AnnotationLayer"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.AnnotationLayerDAO": {
  "data": {
   "shadows": "superset.annotation_layers.dao.AnnotationLayerDAO"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.AnnotationLayerInvalidError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerInvalidError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.AnnotationLayerNameUniquenessValidationError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerNameUniquenessValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.AnnotationLayerNotFoundError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.AnnotationLayerUpdateFailedError": {
  "data": {
   "shadows": "superset.annotation_layers.commands.exceptions.AnnotationLayerUpdateFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.DAOUpdateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOUpdateFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.UpdateAnnotationLayerCommand": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.commands.update.UpdateAnnotationLayerCommand.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "str",
    "superset.models.annotations.AnnotationLayer",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.commands.update.UpdateAnnotationLayerCommand.run": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerUpdateFailedError",
    "superset.annotation_layers.commands.update.logger",
    "superset.annotation_layers.dao.AnnotationLayerDAO.update",
    "superset.dao.exceptions.DAOUpdateFailedError"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.commands.update.UpdateAnnotationLayerCommand.validate": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "list",
    "marshmallow.ValidationError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerInvalidError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerNameUniquenessValidationError",
    "superset.annotation_layers.commands.exceptions.AnnotationLayerNotFoundError",
    "superset.annotation_layers.dao.AnnotationLayerDAO.find_by_id",
    "superset.annotation_layers.dao.AnnotationLayerDAO.validate_update_uniqueness",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.commands.update.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.annotation_layers.commands.update.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.annotation_layers.commands.update.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.annotation_layers.dao": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.annotation_layers.dao.logging"
   ]
  },
  "type": "module"
 },
 "superset.annotation_layers.dao.Annotation": {
  "data": {
   "shadows": "superset.models.annotations.Annotation"
  },
  "type": "import"
 },
 "superset.annotation_layers.dao.AnnotationLayer": {
  "data": {
   "shadows": "superset.models.annotations.AnnotationLayer"
  },
  "type": "import"
 },
 "superset.annotation_layers.dao.AnnotationLayerDAO": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "superset.dao.base.BaseDAO",
    "superset.models.annotations.AnnotationLayer"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.dao.AnnotationLayerDAO.bulk_delete": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.exc.SQLAlchemyError",
    "staticmethod",
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.query",
    "superset.extensions.db.session.rollback",
    "superset.models.annotations.AnnotationLayer",
    "superset.models.annotations.AnnotationLayer.id.in_",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.dao.AnnotationLayerDAO.has_annotations": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "bool",
    "int",
    "isinstance",
    "list",
    "staticmethod",
    "superset.extensions.db.session.query",
    "superset.models.annotations.Annotation",
    "superset.models.annotations.AnnotationLayer",
    "superset.models.annotations.AnnotationLayer.id",
    "superset.models.annotations.AnnotationLayer.id.in_",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.dao.AnnotationLayerDAO.validate_update_uniqueness": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bool",
    "int",
    "staticmethod",
    "str",
    "superset.extensions.db.session.query",
    "superset.models.annotations.AnnotationLayer",
    "superset.models.annotations.AnnotationLayer.id",
    "superset.models.annotations.AnnotationLayer.name",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.dao.BaseDAO": {
  "data": {
   "shadows": "superset.dao.base.BaseDAO"
  },
  "type": "import"
 },
 "superset.annotation_layers.dao.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.annotation_layers.dao.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.annotation_layers.dao.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.annotation_layers.dao.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.annotation_layers.dao.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.annotation_layers.dao.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.annotation_layers.dao.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.annotation_layers.dao.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.annotation_layers.filters": {
  "data": {},
  "type": "module"
 },
 "superset.annotation_layers.filters.AnnotationLayer": {
  "data": {
   "shadows": "superset.models.annotations.AnnotationLayer"
  },
  "type": "import"
 },
 "superset.annotation_layers.filters.AnnotationLayerAllTextFilter": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.filters.AnnotationLayerAllTextFilter.apply": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sqlalchemy.or_",
    "sqlalchemy.orm.query.Query",
    "superset.models.annotations.AnnotationLayer.descr.ilike",
    "superset.models.annotations.AnnotationLayer.name.ilike",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.annotation_layers.filters.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.annotation_layers.filters.BaseFilter": {
  "data": {
   "shadows": "superset.views.base.BaseFilter"
  },
  "type": "import"
 },
 "superset.annotation_layers.filters.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.query.Query"
  },
  "type": "import"
 },
 "superset.annotation_layers.filters._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.annotation_layers.filters.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.annotation_layers.schemas": {
  "data": {},
  "type": "module"
 },
 "superset.annotation_layers.schemas.AnnotationLayerPostSchema": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "superset.annotation_layers.schemas.annotation_layer_descr",
    "superset.annotation_layers.schemas.annotation_layer_name"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.schemas.AnnotationLayerPutSchema": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "superset.annotation_layers.schemas.annotation_layer_descr",
    "superset.annotation_layers.schemas.annotation_layer_name"
   ]
  },
  "type": "class"
 },
 "superset.annotation_layers.schemas.Length": {
  "data": {
   "shadows": "marshmallow.validate.Length"
  },
  "type": "import"
 },
 "superset.annotation_layers.schemas.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.annotation_layers.schemas.annotation_layer_descr": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.annotation_layers.schemas.annotation_layer_name": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.annotation_layers.schemas.fields": {
  "data": {
   "shadows": "marshmallow.fields"
  },
  "type": "import"
 },
 "superset.annotation_layers.schemas.get_delete_ids_schema": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.annotation_layers.schemas.openapi_spec_methods_override": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "superset.app": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.app.logging"
   ]
  },
  "type": "module"
 },
 "superset.app.APP_DIR": {
  "data": {
   "shadows": "superset.extensions.APP_DIR"
  },
  "type": "import"
 },
 "superset.app.AccessRequestsModelView": {
  "data": {
   "shadows": "superset.views.access_requests.AccessRequestsModelView"
  },
  "type": "import"
 },
 "superset.app.AlertLogModelView": {
  "data": {
   "shadows": "superset.views.alerts.AlertLogModelView"
  },
  "type": "import"
 },
 "superset.app.AlertModelView": {
  "data": {
   "shadows": "superset.views.alerts.AlertModelView"
  },
  "type": "import"
 },
 "superset.app.AlertObservationModelView": {
  "data": {
   "shadows": "superset.views.alerts.AlertObservationModelView"
  },
  "type": "import"
 },
 "superset.app.AlertView": {
  "data": {
   "shadows": "superset.views.alerts.AlertView"
  },
  "type": "import"
 },
 "superset.app.AnnotationLayerModelView": {
  "data": {
   "shadows": "superset.views.annotations.AnnotationLayerModelView"
  },
  "type": "import"
 },
 "superset.app.AnnotationLayerRestApi": {
  "data": {
   "shadows": "superset.annotation_layers.api.AnnotationLayerRestApi"
  },
  "type": "import"
 },
 "superset.app.AnnotationModelView": {
  "data": {
   "shadows": "superset.views.annotations.AnnotationModelView"
  },
  "type": "import"
 },
 "superset.app.AnnotationRestApi": {
  "data": {
   "shadows": "superset.annotation_layers.annotations.api.AnnotationRestApi"
  },
  "type": "import"
 },
 "superset.app.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.app.Api": {
  "data": {
   "shadows": "superset.views.api.Api"
  },
  "type": "import"
 },
 "superset.app.AsyncEventsRestApi": {
  "data": {
   "shadows": "superset.async_events.api.AsyncEventsRestApi"
  },
  "type": "import"
 },
 "superset.app.CORS": {
  "data": {
   "shadows": "flask_cors.CORS"
  },
  "type": "import"
 },
 "superset.app.CacheRestApi": {
  "data": {
   "shadows": "superset.cachekeys.api.CacheRestApi"
  },
  "type": "import"
 },
 "superset.app.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.app.ChartRestApi": {
  "data": {
   "shadows": "superset.charts.api.ChartRestApi"
  },
  "type": "import"
 },
 "superset.app.Compress": {
  "data": {
   "shadows": "flask_compress.Compress"
  },
  "type": "import"
 },
 "superset.app.ConnectorRegistry": {
  "data": {
   "shadows": "superset.connectors.connector_registry.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.app.CssTemplateAsyncModelView": {
  "data": {
   "shadows": "superset.views.css_templates.CssTemplateAsyncModelView"
  },
  "type": "import"
 },
 "superset.app.CssTemplateModelView": {
  "data": {
   "shadows": "superset.views.css_templates.CssTemplateModelView"
  },
  "type": "import"
 },
 "superset.app.CssTemplateRestApi": {
  "data": {
   "shadows": "superset.css_templates.api.CssTemplateRestApi"
  },
  "type": "import"
 },
 "superset.app.CsvToDatabaseView": {
  "data": {
   "shadows": "superset.views.database.views.CsvToDatabaseView"
  },
  "type": "import"
 },
 "superset.app.DBEventLogger": {
  "data": {
   "shadows": "superset.utils.log.DBEventLogger"
  },
  "type": "import"
 },
 "superset.app.Dashboard": {
  "data": {
   "shadows": "superset.views.dashboard.views.Dashboard"
  },
  "type": "import"
 },
 "superset.app.DashboardEmailScheduleView": {
  "data": {
   "shadows": "superset.views.schedules.DashboardEmailScheduleView"
  },
  "type": "import"
 },
 "superset.app.DashboardModelView": {
  "data": {
   "shadows": "superset.views.dashboard.views.DashboardModelView"
  },
  "type": "import"
 },
 "superset.app.DashboardModelViewAsync": {
  "data": {
   "shadows": "superset.views.dashboard.views.DashboardModelViewAsync"
  },
  "type": "import"
 },
 "superset.app.DashboardRestApi": {
  "data": {
   "shadows": "superset.dashboards.api.DashboardRestApi"
  },
  "type": "import"
 },
 "superset.app.DatabaseRestApi": {
  "data": {
   "shadows": "superset.databases.api.DatabaseRestApi"
  },
  "type": "import"
 },
 "superset.app.DatabaseView": {
  "data": {
   "shadows": "superset.views.database.views.DatabaseView"
  },
  "type": "import"
 },
 "superset.app.DatasetRestApi": {
  "data": {
   "shadows": "superset.datasets.api.DatasetRestApi"
  },
  "type": "import"
 },
 "superset.app.Datasource": {
  "data": {
   "shadows": "superset.views.datasource.Datasource"
  },
  "type": "import"
 },
 "superset.app.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.app.Druid": {
  "data": {
   "shadows": "superset.connectors.druid.views.Druid"
  },
  "type": "import"
 },
 "superset.app.DruidClusterModelView": {
  "data": {
   "shadows": "superset.connectors.druid.views.DruidClusterModelView"
  },
  "type": "import"
 },
 "superset.app.DruidColumnInlineView": {
  "data": {
   "shadows": "superset.connectors.druid.views.DruidColumnInlineView"
  },
  "type": "import"
 },
 "superset.app.DruidDatasourceModelView": {
  "data": {
   "shadows": "superset.connectors.druid.views.DruidDatasourceModelView"
  },
  "type": "import"
 },
 "superset.app.DruidMetricInlineView": {
  "data": {
   "shadows": "superset.connectors.druid.views.DruidMetricInlineView"
  },
  "type": "import"
 },
 "superset.app.DynamicPluginsView": {
  "data": {
   "shadows": "superset.views.dynamic_plugins.DynamicPluginsView"
  },
  "type": "import"
 },
 "superset.app.ExcelToDatabaseView": {
  "data": {
   "shadows": "superset.views.database.views.ExcelToDatabaseView"
  },
  "type": "import"
 },
 "superset.app.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "superset.app.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.app.IndexView": {
  "data": {
   "shadows": "flask_appbuilder.IndexView"
  },
  "type": "import"
 },
 "superset.app.KV": {
  "data": {
   "shadows": "superset.views.key_value.KV"
  },
  "type": "import"
 },
 "superset.app.LogModelView": {
  "data": {
   "shadows": "superset.views.log.views.LogModelView"
  },
  "type": "import"
 },
 "superset.app.LogRestApi": {
  "data": {
   "shadows": "superset.views.log.api.LogRestApi"
  },
  "type": "import"
 },
 "superset.app.ObjectTypeConverter": {
  "data": {
   "shadows": "superset.utils.url_map_converters.ObjectTypeConverter"
  },
  "type": "import"
 },
 "superset.app.ProxyFix": {
  "data": {
   "shadows": "werkzeug.middleware.proxy_fix.ProxyFix"
  },
  "type": "import"
 },
 "superset.app.QueryRestApi": {
  "data": {
   "shadows": "superset.queries.api.QueryRestApi"
  },
  "type": "import"
 },
 "superset.app.R": {
  "data": {
   "shadows": "superset.views.redirects.R"
  },
  "type": "import"
 },
 "superset.app.RegexConverter": {
  "data": {
   "shadows": "superset.utils.url_map_converters.RegexConverter"
  },
  "type": "import"
 },
 "superset.app.ReportExecutionLogRestApi": {
  "data": {
   "shadows": "superset.reports.logs.api.ReportExecutionLogRestApi"
  },
  "type": "import"
 },
 "superset.app.ReportScheduleRestApi": {
  "data": {
   "shadows": "superset.reports.api.ReportScheduleRestApi"
  },
  "type": "import"
 },
 "superset.app.ReportView": {
  "data": {
   "shadows": "superset.views.alerts.ReportView"
  },
  "type": "import"
 },
 "superset.app.RowLevelSecurityFiltersModelView": {
  "data": {
   "shadows": "superset.connectors.sqla.views.RowLevelSecurityFiltersModelView"
  },
  "type": "import"
 },
 "superset.app.SavedQueryRestApi": {
  "data": {
   "shadows": "superset.queries.saved_queries.api.SavedQueryRestApi"
  },
  "type": "import"
 },
 "superset.app.SavedQueryView": {
  "data": {
   "shadows": "superset.views.sql_lab.SavedQueryView"
  },
  "type": "import"
 },
 "superset.app.SavedQueryViewApi": {
  "data": {
   "shadows": "superset.views.sql_lab.SavedQueryViewApi"
  },
  "type": "import"
 },
 "superset.app.SliceAsync": {
  "data": {
   "shadows": "superset.views.chart.views.SliceAsync"
  },
  "type": "import"
 },
 "superset.app.SliceEmailScheduleView": {
  "data": {
   "shadows": "superset.views.schedules.SliceEmailScheduleView"
  },
  "type": "import"
 },
 "superset.app.SliceModelView": {
  "data": {
   "shadows": "superset.views.chart.views.SliceModelView"
  },
  "type": "import"
 },
 "superset.app.SqlLab": {
  "data": {
   "shadows": "superset.views.sql_lab.SqlLab"
  },
  "type": "import"
 },
 "superset.app.SqlMetricInlineView": {
  "data": {
   "shadows": "superset.connectors.sqla.views.SqlMetricInlineView"
  },
  "type": "import"
 },
 "superset.app.Superset": {
  "data": {
   "shadows": "superset.views.core.Superset"
  },
  "type": "import"
 },
 "superset.app.SupersetAppInitializer": {
  "data": {
   "lineno": 78
  },
  "type": "class"
 },
 "superset.app.SupersetAppInitializer.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "flask.Flask",
    "super",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.configure_async_queries": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "superset.extensions.async_query_manager.init_app",
    "superset.extensions.feature_flag_manager.is_feature_enabled"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.configure_auth_provider": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "superset.extensions.machine_auth_provider_factory.init_app"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.configure_cache": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "superset.extensions.cache_manager.init_app",
    "superset.extensions.results_backend_manager.init_app"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.configure_celery": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "superset.extensions.celery_app.Task",
    "superset.extensions.celery_app.config_from_object",
    "superset.extensions.celery_app.set_default"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.configure_celery.AppContextTask": {
  "data": {
   "lineno": 109
  },
  "type": "class"
 },
 "superset.app.SupersetAppInitializer.configure_celery.AppContextTask.__call__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.configure_data_sources": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "superset.connectors.connector_registry.ConnectorRegistry.register_sources"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.configure_fab": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "Exception",
    "issubclass",
    "superset.app.SupersetIndexView",
    "superset.app.logging",
    "superset.extensions.appbuilder.base_template",
    "superset.extensions.appbuilder.indexview",
    "superset.extensions.appbuilder.init_app",
    "superset.extensions.appbuilder.security_manager_class",
    "superset.extensions.db.session",
    "superset.security.SupersetSecurityManager"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.configure_feature_flags": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "superset.extensions.feature_flag_manager.init_app"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.configure_logging": {
  "data": {
   "lineno": 655
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.configure_middlewares": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "ChunkedEncodingFix",
    "OSError",
    "flask_compress.Compress",
    "flask_cors.CORS",
    "middleware",
    "superset.app.os",
    "superset.extensions.talisman.init_app",
    "werkzeug.middleware.proxy_fix.ProxyFix"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.configure_middlewares.ChunkedEncodingFix": {
  "data": {
   "lineno": 621
  },
  "type": "class"
 },
 "superset.app.SupersetAppInitializer.configure_middlewares.ChunkedEncodingFix.__call__": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.configure_middlewares.ChunkedEncodingFix.__init__": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "flask.Flask"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.configure_url_map_converters": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "superset.utils.url_map_converters.ObjectTypeConverter",
    "superset.utils.url_map_converters.RegexConverter"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.configure_wtf": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "superset.extensions.csrf.exempt",
    "superset.extensions.csrf.init_app"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.init_app": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.init_app_in_ctx": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "flask_app_mutator"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.init_views": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ImportError",
    "flask_babel.gettext",
    "flask_babel.lazy_gettext",
    "superset.annotation_layers.annotations.api.AnnotationRestApi",
    "superset.annotation_layers.api.AnnotationLayerRestApi",
    "superset.async_events.api.AsyncEventsRestApi",
    "superset.cachekeys.api.CacheRestApi",
    "superset.charts.api.ChartRestApi",
    "superset.connectors.druid.views.Druid",
    "superset.connectors.druid.views.DruidClusterModelView",
    "superset.connectors.druid.views.DruidColumnInlineView",
    "superset.connectors.druid.views.DruidDatasourceModelView",
    "superset.connectors.druid.views.DruidMetricInlineView",
    "superset.connectors.sqla.views.RowLevelSecurityFiltersModelView",
    "superset.connectors.sqla.views.SqlMetricInlineView",
    "superset.connectors.sqla.views.TableColumnInlineView",
    "superset.connectors.sqla.views.TableModelView",
    "superset.css_templates.api.CssTemplateRestApi",
    "superset.dashboards.api.DashboardRestApi",
    "superset.databases.api.DatabaseRestApi",
    "superset.datasets.api.DatasetRestApi",
    "superset.extensions.appbuilder.add_api",
    "superset.extensions.appbuilder.add_link",
    "superset.extensions.appbuilder.add_separator",
    "superset.extensions.appbuilder.add_view",
    "superset.extensions.appbuilder.add_view_no_menu",
    "superset.extensions.appbuilder.app.config",
    "superset.extensions.feature_flag_manager.is_feature_enabled",
    "superset.queries.api.QueryRestApi",
    "superset.queries.saved_queries.api.SavedQueryRestApi",
    "superset.reports.api.ReportScheduleRestApi",
    "superset.reports.logs.api.ReportExecutionLogRestApi",
    "superset.views.access_requests.AccessRequestsModelView",
    "superset.views.alerts.AlertLogModelView",
    "superset.views.alerts.AlertModelView",
    "superset.views.alerts.AlertObservationModelView",
    "superset.views.alerts.AlertView",
    "superset.views.alerts.ReportView",
    "superset.views.annotations.AnnotationLayerModelView",
    "superset.views.annotations.AnnotationModelView",
    "superset.views.api.Api",
    "superset.views.chart.views.SliceAsync",
    "superset.views.chart.views.SliceModelView",
    "superset.views.core.Superset",
    "superset.views.css_templates.CssTemplateAsyncModelView",
    "superset.views.css_templates.CssTemplateModelView",
    "superset.views.dashboard.views.Dashboard",
    "superset.views.dashboard.views.DashboardModelView",
    "superset.views.dashboard.views.DashboardModelViewAsync",
    "superset.views.database.views.CsvToDatabaseView",
    "superset.views.database.views.DatabaseView",
    "superset.views.database.views.ExcelToDatabaseView",
    "superset.views.datasource.Datasource",
    "superset.views.dynamic_plugins.DynamicPluginsView",
    "superset.views.key_value.KV",
    "superset.views.log.api.LogRestApi",
    "superset.views.log.views.LogModelView",
    "superset.views.redirects.R",
    "superset.views.schedules.DashboardEmailScheduleView",
    "superset.views.schedules.SliceEmailScheduleView",
    "superset.views.sql_lab.SavedQueryView",
    "superset.views.sql_lab.SavedQueryViewApi",
    "superset.views.sql_lab.SqlLab",
    "superset.views.sql_lab.TabStateView",
    "superset.views.sql_lab.TableSchemaView",
    "superset.views.tags.TagView"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.post_init": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.pre_init": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "superset.app.os",
    "superset.app.wtforms_json"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.register_blueprints": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "Exception",
    "superset.app.logger"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.setup_bundle_manifest": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "superset.extensions.manifest_processor.init_app"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.setup_db": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "superset.extensions.APP_DIR",
    "superset.extensions.db",
    "superset.extensions.db.engine",
    "superset.extensions.db.init_app",
    "superset.extensions.migrate.init_app",
    "superset.utils.core.pessimistic_connection_handling"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetAppInitializer.setup_event_logger": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "superset.extensions._event_logger",
    "superset.utils.log.DBEventLogger",
    "superset.utils.log.get_event_logger_from_cfg_value"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetIndexView": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "flask_appbuilder.IndexView"
   ]
  },
  "type": "class"
 },
 "superset.app.SupersetIndexView.index": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "flask.redirect",
    "flask_appbuilder.expose",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.app.SupersetSecurityManager": {
  "data": {
   "shadows": "superset.security.SupersetSecurityManager"
  },
  "type": "import"
 },
 "superset.app.TabStateView": {
  "data": {
   "shadows": "superset.views.sql_lab.TabStateView"
  },
  "type": "import"
 },
 "superset.app.TableColumnInlineView": {
  "data": {
   "shadows": "superset.connectors.sqla.views.TableColumnInlineView"
  },
  "type": "import"
 },
 "superset.app.TableModelView": {
  "data": {
   "shadows": "superset.connectors.sqla.views.TableModelView"
  },
  "type": "import"
 },
 "superset.app.TableSchemaView": {
  "data": {
   "shadows": "superset.views.sql_lab.TableSchemaView"
  },
  "type": "import"
 },
 "superset.app.TagView": {
  "data": {
   "shadows": "superset.views.tags.TagView"
  },
  "type": "import"
 },
 "superset.app._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.app.__": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.app._event_logger": {
  "data": {
   "shadows": "superset.extensions._event_logger"
  },
  "type": "import"
 },
 "superset.app.appbuilder": {
  "data": {
   "shadows": "superset.extensions.appbuilder"
  },
  "type": "import"
 },
 "superset.app.async_query_manager": {
  "data": {
   "shadows": "superset.extensions.async_query_manager"
  },
  "type": "import"
 },
 "superset.app.cache_manager": {
  "data": {
   "shadows": "superset.extensions.cache_manager"
  },
  "type": "import"
 },
 "superset.app.celery_app": {
  "data": {
   "shadows": "superset.extensions.celery_app"
  },
  "type": "import"
 },
 "superset.app.create_app": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "flask.Flask",
    "superset.app.logger",
    "superset.app.os"
   ]
  },
  "type": "function"
 },
 "superset.app.csrf": {
  "data": {
   "shadows": "superset.extensions.csrf"
  },
  "type": "import"
 },
 "superset.app.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.app.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.app.feature_flag_manager": {
  "data": {
   "shadows": "superset.extensions.feature_flag_manager"
  },
  "type": "import"
 },
 "superset.app.get_event_logger_from_cfg_value": {
  "data": {
   "shadows": "superset.utils.log.get_event_logger_from_cfg_value"
  },
  "type": "import"
 },
 "superset.app.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "superset.app.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.app.machine_auth_provider_factory": {
  "data": {
   "shadows": "superset.extensions.machine_auth_provider_factory"
  },
  "type": "import"
 },
 "superset.app.manifest_processor": {
  "data": {
   "shadows": "superset.extensions.manifest_processor"
  },
  "type": "import"
 },
 "superset.app.migrate": {
  "data": {
   "shadows": "superset.extensions.migrate"
  },
  "type": "import"
 },
 "superset.app.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "superset.app.pessimistic_connection_handling": {
  "data": {
   "shadows": "superset.utils.core.pessimistic_connection_handling"
  },
  "type": "import"
 },
 "superset.app.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "superset.app.results_backend_manager": {
  "data": {
   "shadows": "superset.extensions.results_backend_manager"
  },
  "type": "import"
 },
 "superset.app.talisman": {
  "data": {
   "shadows": "superset.extensions.talisman"
  },
  "type": "import"
 },
 "superset.app.wtforms_json": {
  "data": {
   "shadows": "wtforms_json"
  },
  "type": "import"
 },
 "superset.app.xlrd": {
  "data": {
   "shadows": "xlrd"
  },
  "type": "import"
 },
 "superset.appbuilder": {
  "data": {
   "shadows": "superset.extensions.appbuilder"
  },
  "type": "import"
 },
 "superset.async_events": {
  "data": {},
  "type": "module"
 },
 "superset.async_events.api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.async_events.api.logging"
   ]
  },
  "type": "module"
 },
 "superset.async_events.api.AsyncEventsRestApi": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "flask_appbuilder.api.BaseApi"
   ]
  },
  "type": "class"
 },
 "superset.async_events.api.AsyncEventsRestApi.events": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "events",
    "flask.Response",
    "flask.request",
    "flask.request.args.get",
    "flask_appbuilder.api.safe",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.permission_name",
    "flask_appbuilder.security.decorators.protect",
    "superset.extensions.async_query_manager.parse_jwt_from_request",
    "superset.extensions.async_query_manager.read_events",
    "superset.extensions.event_logger.log_this",
    "superset.utils.async_query_manager.AsyncQueryTokenException"
   ]
  },
  "type": "function"
 },
 "superset.async_events.api.AsyncQueryTokenException": {
  "data": {
   "shadows": "superset.utils.async_query_manager.AsyncQueryTokenException"
  },
  "type": "import"
 },
 "superset.async_events.api.BaseApi": {
  "data": {
   "shadows": "flask_appbuilder.api.BaseApi"
  },
  "type": "import"
 },
 "superset.async_events.api.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.async_events.api.async_query_manager": {
  "data": {
   "shadows": "superset.extensions.async_query_manager"
  },
  "type": "import"
 },
 "superset.async_events.api.event_logger": {
  "data": {
   "shadows": "superset.extensions.event_logger"
  },
  "type": "import"
 },
 "superset.async_events.api.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.async_events.api.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.async_events.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.async_events.api.permission_name": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.permission_name"
  },
  "type": "import"
 },
 "superset.async_events.api.protect": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.protect"
  },
  "type": "import"
 },
 "superset.async_events.api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.async_events.api.safe": {
  "data": {
   "shadows": "flask_appbuilder.api.safe"
  },
  "type": "import"
 },
 "superset.cache": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.cache_manager": {
  "data": {
   "shadows": "superset.extensions.cache_manager"
  },
  "type": "import"
 },
 "superset.cachekeys": {
  "data": {},
  "type": "module"
 },
 "superset.cachekeys.api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.cachekeys.api.logging"
   ]
  },
  "type": "module"
 },
 "superset.cachekeys.api.BaseSupersetModelRestApi": {
  "data": {
   "shadows": "superset.views.base_api.BaseSupersetModelRestApi"
  },
  "type": "import"
 },
 "superset.cachekeys.api.CacheInvalidationRequestSchema": {
  "data": {
   "shadows": "superset.cachekeys.schemas.CacheInvalidationRequestSchema"
  },
  "type": "import"
 },
 "superset.cachekeys.api.CacheKey": {
  "data": {
   "shadows": "superset.models.cache.CacheKey"
  },
  "type": "import"
 },
 "superset.cachekeys.api.CacheRestApi": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.cachekeys.schemas.CacheInvalidationRequestSchema",
    "superset.models.cache.CacheKey",
    "superset.views.base_api.BaseSupersetModelRestApi"
   ]
  },
  "type": "class"
 },
 "superset.cachekeys.api.CacheRestApi.invalidate": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "KeyError",
    "flask.Response",
    "flask.request.json",
    "flask_appbuilder.api.safe",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.protect",
    "len",
    "marshmallow.exceptions.ValidationError",
    "set",
    "sqlalchemy.exc.SQLAlchemyError",
    "str",
    "superset.cachekeys.api.logger",
    "superset.cachekeys.schemas.CacheInvalidationRequestSchema",
    "superset.connectors.connector_registry.ConnectorRegistry.get_datasource_by_name",
    "superset.extensions.cache_manager.cache.delete_many",
    "superset.extensions.db.session",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.execute",
    "superset.extensions.db.session.query",
    "superset.extensions.db.session.rollback",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.models.cache.CacheKey",
    "superset.models.cache.CacheKey.__table__.delete",
    "superset.models.cache.CacheKey.cache_key.in_",
    "superset.models.cache.CacheKey.datasource_uid.in_",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.cachekeys.api.ConnectorRegistry": {
  "data": {
   "shadows": "superset.connectors.connector_registry.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.cachekeys.api.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.cachekeys.api.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.cachekeys.api.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.cachekeys.api.ValidationError": {
  "data": {
   "shadows": "marshmallow.exceptions.ValidationError"
  },
  "type": "import"
 },
 "superset.cachekeys.api.cache_manager": {
  "data": {
   "shadows": "superset.extensions.cache_manager"
  },
  "type": "import"
 },
 "superset.cachekeys.api.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.cachekeys.api.event_logger": {
  "data": {
   "shadows": "superset.extensions.event_logger"
  },
  "type": "import"
 },
 "superset.cachekeys.api.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.cachekeys.api.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.cachekeys.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.cachekeys.api.protect": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.protect"
  },
  "type": "import"
 },
 "superset.cachekeys.api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.cachekeys.api.safe": {
  "data": {
   "shadows": "flask_appbuilder.api.safe"
  },
  "type": "import"
 },
 "superset.cachekeys.api.statsd_metrics": {
  "data": {
   "shadows": "superset.views.base_api.statsd_metrics"
  },
  "type": "import"
 },
 "superset.cachekeys.schemas": {
  "data": {},
  "type": "module"
 },
 "superset.cachekeys.schemas.CacheInvalidationRequestSchema": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "marshmallow.fields.String",
    "superset.cachekeys.schemas.Datasource",
    "superset.charts.schemas.datasource_uid_description"
   ]
  },
  "type": "class"
 },
 "superset.cachekeys.schemas.Datasource": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.String",
    "marshmallow.validate.OneOf",
    "superset.charts.schemas.datasource_name_description",
    "superset.charts.schemas.datasource_type_description"
   ]
  },
  "type": "class"
 },
 "superset.cachekeys.schemas.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.cachekeys.schemas.datasource_name_description": {
  "data": {
   "shadows": "superset.charts.schemas.datasource_name_description"
  },
  "type": "import"
 },
 "superset.cachekeys.schemas.datasource_type_description": {
  "data": {
   "shadows": "superset.charts.schemas.datasource_type_description"
  },
  "type": "import"
 },
 "superset.cachekeys.schemas.datasource_uid_description": {
  "data": {
   "shadows": "superset.charts.schemas.datasource_uid_description"
  },
  "type": "import"
 },
 "superset.cachekeys.schemas.fields": {
  "data": {
   "shadows": "marshmallow.fields"
  },
  "type": "import"
 },
 "superset.cachekeys.schemas.validate": {
  "data": {
   "shadows": "marshmallow.validate"
  },
  "type": "import"
 },
 "superset.charts": {
  "data": {},
  "type": "module"
 },
 "superset.charts.api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.charts.api.logging"
   ]
  },
  "type": "module"
 },
 "superset.charts.api.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.charts.api.AsyncQueryTokenException": {
  "data": {
   "shadows": "superset.utils.async_query_manager.AsyncQueryTokenException"
  },
  "type": "import"
 },
 "superset.charts.api.BaseSupersetModelRestApi": {
  "data": {
   "shadows": "superset.views.base_api.BaseSupersetModelRestApi"
  },
  "type": "import"
 },
 "superset.charts.api.BulkDeleteChartCommand": {
  "data": {
   "shadows": "superset.charts.commands.bulk_delete.BulkDeleteChartCommand"
  },
  "type": "import"
 },
 "superset.charts.api.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "superset.charts.api.CHART_SCHEMAS": {
  "data": {
   "shadows": "superset.charts.schemas.CHART_SCHEMAS"
  },
  "type": "import"
 },
 "superset.charts.api.ChartAllTextFilter": {
  "data": {
   "shadows": "superset.charts.filters.ChartAllTextFilter"
  },
  "type": "import"
 },
 "superset.charts.api.ChartBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.charts.api.ChartCreateFailedError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartCreateFailedError"
  },
  "type": "import"
 },
 "superset.charts.api.ChartDAO": {
  "data": {
   "shadows": "superset.charts.dao.ChartDAO"
  },
  "type": "import"
 },
 "superset.charts.api.ChartDataCacheLoadError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartDataCacheLoadError"
  },
  "type": "import"
 },
 "superset.charts.api.ChartDataCommand": {
  "data": {
   "shadows": "superset.charts.commands.data.ChartDataCommand"
  },
  "type": "import"
 },
 "superset.charts.api.ChartDataQueryFailedError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartDataQueryFailedError"
  },
  "type": "import"
 },
 "superset.charts.api.ChartDataResultFormat": {
  "data": {
   "shadows": "superset.utils.core.ChartDataResultFormat"
  },
  "type": "import"
 },
 "superset.charts.api.ChartDataResultType": {
  "data": {
   "shadows": "superset.utils.core.ChartDataResultType"
  },
  "type": "import"
 },
 "superset.charts.api.ChartDeleteFailedError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartDeleteFailedError"
  },
  "type": "import"
 },
 "superset.charts.api.ChartFavoriteFilter": {
  "data": {
   "shadows": "superset.charts.filters.ChartFavoriteFilter"
  },
  "type": "import"
 },
 "superset.charts.api.ChartFilter": {
  "data": {
   "shadows": "superset.charts.filters.ChartFilter"
  },
  "type": "import"
 },
 "superset.charts.api.ChartForbiddenError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartForbiddenError"
  },
  "type": "import"
 },
 "superset.charts.api.ChartInvalidError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartInvalidError"
  },
  "type": "import"
 },
 "superset.charts.api.ChartNotFoundError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartNotFoundError"
  },
  "type": "import"
 },
 "superset.charts.api.ChartPostSchema": {
  "data": {
   "shadows": "superset.charts.schemas.ChartPostSchema"
  },
  "type": "import"
 },
 "superset.charts.api.ChartPutSchema": {
  "data": {
   "shadows": "superset.charts.schemas.ChartPutSchema"
  },
  "type": "import"
 },
 "superset.charts.api.ChartRestApi": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.charts.filters.ChartAllTextFilter",
    "superset.charts.filters.ChartFavoriteFilter",
    "superset.charts.filters.ChartFilter",
    "superset.charts.schemas.CHART_SCHEMAS",
    "superset.charts.schemas.ChartPostSchema",
    "superset.charts.schemas.ChartPutSchema",
    "superset.charts.schemas.get_delete_ids_schema",
    "superset.charts.schemas.get_export_ids_schema",
    "superset.charts.schemas.get_fav_star_ids_schema",
    "superset.charts.schemas.openapi_spec_methods_override",
    "superset.charts.schemas.screenshot_query_schema",
    "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.EXPORT",
    "superset.constants.RouteMethod.IMPORT",
    "superset.constants.RouteMethod.RELATED",
    "superset.constants.RouteMethod.REST_MODEL_VIEW_CRUD_SET",
    "superset.models.slice.Slice",
    "superset.views.base_api.BaseSupersetModelRestApi",
    "superset.views.base_api.RelatedFieldFilter",
    "superset.views.filters.FilterRelatedOwners"
   ]
  },
  "type": "class"
 },
 "superset.charts.api.ChartRestApi.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "super",
    "superset.is_feature_enabled"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartRestApi.bulk_delete": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "flask_babel.ngettext",
    "len",
    "str",
    "superset.charts.commands.bulk_delete.BulkDeleteChartCommand",
    "superset.charts.commands.exceptions.ChartBulkDeleteFailedError",
    "superset.charts.commands.exceptions.ChartForbiddenError",
    "superset.charts.commands.exceptions.ChartNotFoundError",
    "superset.charts.schemas.get_delete_ids_schema",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "typing.Any",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartRestApi.cache_screenshot": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "int",
    "str",
    "superset.charts.schemas.screenshot_query_schema",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.utils.screenshots.ChartScreenshot",
    "superset.utils.urls.get_url_path",
    "superset.views.base_api.statsd_metrics",
    "trigger_celery",
    "typing.Dict",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartRestApi.cache_screenshot.trigger_celery": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "superset.charts.api.logger",
    "superset.tasks.thumbnails.cache_chart_thumbnail.delay",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartRestApi.data": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "TypeError",
    "flask.request",
    "flask.request.form",
    "flask.request.form.get",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "flask_babel.gettext",
    "marshmallow.ValidationError",
    "superset.charts.api.json",
    "superset.charts.commands.data.ChartDataCommand",
    "superset.exceptions.SupersetSecurityException",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.is_feature_enabled",
    "superset.utils.async_query_manager.AsyncQueryTokenException",
    "superset.utils.core.ChartDataResultFormat.JSON",
    "superset.utils.core.ChartDataResultType.FULL",
    "superset.views.base_api.statsd_metrics",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartRestApi.data_from_cache": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "flask_babel.gettext",
    "marshmallow.ValidationError",
    "str",
    "superset.charts.api.logger",
    "superset.charts.commands.data.ChartDataCommand",
    "superset.charts.commands.exceptions.ChartDataCacheLoadError",
    "superset.exceptions.SupersetSecurityException",
    "superset.extensions.event_logger.log_this",
    "superset.views.base_api.statsd_metrics",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartRestApi.delete": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "str",
    "superset.charts.api.logger",
    "superset.charts.commands.delete.DeleteChartCommand",
    "superset.charts.commands.exceptions.ChartDeleteFailedError",
    "superset.charts.commands.exceptions.ChartForbiddenError",
    "superset.charts.commands.exceptions.ChartNotFoundError",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartRestApi.export": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "flask.send_file",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "io.BytesIO",
    "superset.charts.commands.exceptions.ChartNotFoundError",
    "superset.charts.commands.export.ExportChartsCommand",
    "superset.charts.schemas.get_export_ids_schema",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "typing.Any",
    "werkzeug.wrappers.Response",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartRestApi.favorite_status": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "flask.g.user.id",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "superset.charts.dao.ChartDAO.favorited_ids",
    "superset.charts.dao.ChartDAO.find_by_ids",
    "superset.charts.schemas.get_fav_star_ids_schema",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "typing.Any",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartRestApi.get_data_response": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "bool",
    "flask.make_response",
    "superset.charts.api.simplejson",
    "superset.charts.commands.data.ChartDataCommand",
    "superset.charts.commands.exceptions.ChartDataCacheLoadError",
    "superset.charts.commands.exceptions.ChartDataQueryFailedError",
    "superset.utils.core.ChartDataResultFormat.CSV",
    "superset.utils.core.ChartDataResultFormat.JSON",
    "superset.utils.core.json_int_dttm_ser",
    "superset.views.core.CsvResponse",
    "superset.views.core.generate_download_headers",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartRestApi.import_": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "Exception",
    "flask.request.files.get",
    "flask.request.form",
    "flask.request.form.get",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "str",
    "superset.charts.api.json",
    "superset.charts.api.logger",
    "superset.charts.commands.importers.dispatcher.ImportChartsCommand",
    "superset.commands.exceptions.CommandInvalidError",
    "superset.commands.importers.v1.utils.is_valid_config",
    "superset.commands.importers.v1.utils.remove_root",
    "superset.views.base_api.statsd_metrics",
    "werkzeug.wrappers.Response",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartRestApi.post": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "flask.g.user",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "marshmallow.ValidationError",
    "str",
    "superset.charts.api.logger",
    "superset.charts.commands.create.CreateChartCommand",
    "superset.charts.commands.exceptions.ChartCreateFailedError",
    "superset.charts.commands.exceptions.ChartInvalidError",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartRestApi.put": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "flask.g.user",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "marshmallow.ValidationError",
    "str",
    "superset.charts.api.logger",
    "superset.charts.commands.exceptions.ChartForbiddenError",
    "superset.charts.commands.exceptions.ChartInvalidError",
    "superset.charts.commands.exceptions.ChartNotFoundError",
    "superset.charts.commands.exceptions.ChartUpdateFailedError",
    "superset.charts.commands.update.UpdateChartCommand",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartRestApi.screenshot": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "str",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.thumbnail_cache",
    "superset.utils.screenshots.ChartScreenshot.get_from_cache_key",
    "superset.views.base_api.statsd_metrics",
    "werkzeug.wrappers.Response",
    "werkzeug.wsgi.FileWrapper"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartRestApi.thumbnail": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "bool",
    "flask.redirect",
    "flask.url_for",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "int",
    "str",
    "superset.charts.api.logger",
    "superset.charts.schemas.thumbnail_query_schema",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.tasks.thumbnails.cache_chart_thumbnail.delay",
    "superset.thumbnail_cache",
    "superset.utils.screenshots.ChartScreenshot",
    "superset.utils.urls.get_url_path",
    "superset.views.base_api.statsd_metrics",
    "typing.Dict",
    "werkzeug.wrappers.Response",
    "werkzeug.wsgi.FileWrapper"
   ]
  },
  "type": "function"
 },
 "superset.charts.api.ChartScreenshot": {
  "data": {
   "shadows": "superset.utils.screenshots.ChartScreenshot"
  },
  "type": "import"
 },
 "superset.charts.api.ChartUpdateFailedError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartUpdateFailedError"
  },
  "type": "import"
 },
 "superset.charts.api.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.charts.api.CreateChartCommand": {
  "data": {
   "shadows": "superset.charts.commands.create.CreateChartCommand"
  },
  "type": "import"
 },
 "superset.charts.api.CsvResponse": {
  "data": {
   "shadows": "superset.views.core.CsvResponse"
  },
  "type": "import"
 },
 "superset.charts.api.DeleteChartCommand": {
  "data": {
   "shadows": "superset.charts.commands.delete.DeleteChartCommand"
  },
  "type": "import"
 },
 "superset.charts.api.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.charts.api.ExportChartsCommand": {
  "data": {
   "shadows": "superset.charts.commands.export.ExportChartsCommand"
  },
  "type": "import"
 },
 "superset.charts.api.FileWrapper": {
  "data": {
   "shadows": "werkzeug.wsgi.FileWrapper"
  },
  "type": "import"
 },
 "superset.charts.api.FilterRelatedOwners": {
  "data": {
   "shadows": "superset.views.filters.FilterRelatedOwners"
  },
  "type": "import"
 },
 "superset.charts.api.ImportChartsCommand": {
  "data": {
   "shadows": "superset.charts.commands.importers.dispatcher.ImportChartsCommand"
  },
  "type": "import"
 },
 "superset.charts.api.MODEL_API_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.charts.api.RelatedFieldFilter": {
  "data": {
   "shadows": "superset.views.base_api.RelatedFieldFilter"
  },
  "type": "import"
 },
 "superset.charts.api.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.charts.api.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.charts.api.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.charts.api.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.charts.api.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.charts.api.UpdateChartCommand": {
  "data": {
   "shadows": "superset.charts.commands.update.UpdateChartCommand"
  },
  "type": "import"
 },
 "superset.charts.api.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.charts.api.WerkzeugResponse": {
  "data": {
   "shadows": "werkzeug.wrappers.Response"
  },
  "type": "import"
 },
 "superset.charts.api.ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "superset.charts.api._": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.charts.api.cache_chart_thumbnail": {
  "data": {
   "shadows": "superset.tasks.thumbnails.cache_chart_thumbnail"
  },
  "type": "import"
 },
 "superset.charts.api.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.charts.api.event_logger": {
  "data": {
   "shadows": "superset.extensions.event_logger"
  },
  "type": "import"
 },
 "superset.charts.api.expose": {
  "data": {
   "shadows": "flask_appbuilder.api.expose"
  },
  "type": "import"
 },
 "superset.charts.api.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.charts.api.generate_download_headers": {
  "data": {
   "shadows": "superset.views.core.generate_download_headers"
  },
  "type": "import"
 },
 "superset.charts.api.get_delete_ids_schema": {
  "data": {
   "shadows": "superset.charts.schemas.get_delete_ids_schema"
  },
  "type": "import"
 },
 "superset.charts.api.get_export_ids_schema": {
  "data": {
   "shadows": "superset.charts.schemas.get_export_ids_schema"
  },
  "type": "import"
 },
 "superset.charts.api.get_fav_star_ids_schema": {
  "data": {
   "shadows": "superset.charts.schemas.get_fav_star_ids_schema"
  },
  "type": "import"
 },
 "superset.charts.api.get_url_path": {
  "data": {
   "shadows": "superset.utils.urls.get_url_path"
  },
  "type": "import"
 },
 "superset.charts.api.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.charts.api.is_valid_config": {
  "data": {
   "shadows": "superset.commands.importers.v1.utils.is_valid_config"
  },
  "type": "import"
 },
 "superset.charts.api.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.charts.api.json_int_dttm_ser": {
  "data": {
   "shadows": "superset.utils.core.json_int_dttm_ser"
  },
  "type": "import"
 },
 "superset.charts.api.logger": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "superset.charts.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.charts.api.make_response": {
  "data": {
   "shadows": "flask.make_response"
  },
  "type": "import"
 },
 "superset.charts.api.ngettext": {
  "data": {
   "shadows": "flask_babel.ngettext"
  },
  "type": "import"
 },
 "superset.charts.api.openapi_spec_methods_override": {
  "data": {
   "shadows": "superset.charts.schemas.openapi_spec_methods_override"
  },
  "type": "import"
 },
 "superset.charts.api.protect": {
  "data": {
   "shadows": "flask_appbuilder.api.protect"
  },
  "type": "import"
 },
 "superset.charts.api.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "superset.charts.api.remove_root": {
  "data": {
   "shadows": "superset.commands.importers.v1.utils.remove_root"
  },
  "type": "import"
 },
 "superset.charts.api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.charts.api.rison": {
  "data": {
   "shadows": "flask_appbuilder.api.rison"
  },
  "type": "import"
 },
 "superset.charts.api.safe": {
  "data": {
   "shadows": "flask_appbuilder.api.safe"
  },
  "type": "import"
 },
 "superset.charts.api.screenshot_query_schema": {
  "data": {
   "shadows": "superset.charts.schemas.screenshot_query_schema"
  },
  "type": "import"
 },
 "superset.charts.api.send_file": {
  "data": {
   "shadows": "flask.send_file"
  },
  "type": "import"
 },
 "superset.charts.api.simplejson": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.charts.api.statsd_metrics": {
  "data": {
   "shadows": "superset.views.base_api.statsd_metrics"
  },
  "type": "import"
 },
 "superset.charts.api.thumbnail_cache": {
  "data": {
   "shadows": "superset.thumbnail_cache"
  },
  "type": "import"
 },
 "superset.charts.api.thumbnail_query_schema": {
  "data": {
   "shadows": "superset.charts.schemas.thumbnail_query_schema"
  },
  "type": "import"
 },
 "superset.charts.api.url_for": {
  "data": {
   "shadows": "flask.url_for"
  },
  "type": "import"
 },
 "superset.charts.commands": {
  "data": {},
  "type": "module"
 },
 "superset.charts.commands.bulk_delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.charts.commands.bulk_delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.charts.commands.bulk_delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete.BulkDeleteChartCommand": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.bulk_delete.BulkDeleteChartCommand.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.models.slice.Slice",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.bulk_delete.BulkDeleteChartCommand.run": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "superset.charts.commands.bulk_delete.logger",
    "superset.charts.commands.exceptions.ChartBulkDeleteFailedError",
    "superset.charts.dao.ChartDAO.bulk_delete",
    "superset.commands.exceptions.DeleteFailedError"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.bulk_delete.BulkDeleteChartCommand.validate": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "len",
    "superset.charts.commands.exceptions.ChartBulkDeleteFailedReportsExistError",
    "superset.charts.commands.exceptions.ChartForbiddenError",
    "superset.charts.commands.exceptions.ChartNotFoundError",
    "superset.charts.dao.ChartDAO.find_by_ids",
    "superset.exceptions.SupersetSecurityException",
    "superset.reports.dao.ReportScheduleDAO.find_by_chart_ids",
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.bulk_delete.ChartBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete.ChartBulkDeleteFailedReportsExistError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartBulkDeleteFailedReportsExistError"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete.ChartDAO": {
  "data": {
   "shadows": "superset.charts.dao.ChartDAO"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete.ChartForbiddenError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartForbiddenError"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete.ChartNotFoundError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartNotFoundError"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete.DeleteFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.DeleteFailedError"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete.ReportScheduleDAO": {
  "data": {
   "shadows": "superset.reports.dao.ReportScheduleDAO"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.charts.commands.bulk_delete.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.charts.commands.bulk_delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.charts.commands.create": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.charts.commands.create.logging"
   ]
  },
  "type": "module"
 },
 "superset.charts.commands.create.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.charts.commands.create.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.charts.commands.create.ChartCreateFailedError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartCreateFailedError"
  },
  "type": "import"
 },
 "superset.charts.commands.create.ChartDAO": {
  "data": {
   "shadows": "superset.charts.dao.ChartDAO"
  },
  "type": "import"
 },
 "superset.charts.commands.create.ChartInvalidError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartInvalidError"
  },
  "type": "import"
 },
 "superset.charts.commands.create.CreateChartCommand": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.create.CreateChartCommand.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.create.CreateChartCommand.run": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.charts.commands.create.logger",
    "superset.charts.commands.exceptions.ChartCreateFailedError",
    "superset.charts.dao.ChartDAO.create",
    "superset.dao.exceptions.DAOCreateFailedError"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.create.CreateChartCommand.validate": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "marshmallow.ValidationError",
    "superset.charts.commands.exceptions.ChartInvalidError",
    "superset.charts.commands.exceptions.DashboardsNotFoundValidationError",
    "superset.commands.utils.get_datasource_by_id",
    "superset.commands.utils.populate_owners",
    "superset.dashboards.dao.DashboardDAO.find_by_ids",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.create.DAOCreateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOCreateFailedError"
  },
  "type": "import"
 },
 "superset.charts.commands.create.DashboardDAO": {
  "data": {
   "shadows": "superset.dashboards.dao.DashboardDAO"
  },
  "type": "import"
 },
 "superset.charts.commands.create.DashboardsNotFoundValidationError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.DashboardsNotFoundValidationError"
  },
  "type": "import"
 },
 "superset.charts.commands.create.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.charts.commands.create.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.charts.commands.create.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.charts.commands.create.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.charts.commands.create.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.charts.commands.create.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.charts.commands.create.get_datasource_by_id": {
  "data": {
   "shadows": "superset.commands.utils.get_datasource_by_id"
  },
  "type": "import"
 },
 "superset.charts.commands.create.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.charts.commands.create.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.charts.commands.create.populate_owners": {
  "data": {
   "shadows": "superset.commands.utils.populate_owners"
  },
  "type": "import"
 },
 "superset.charts.commands.data": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.charts.commands.data.logging"
   ]
  },
  "type": "module"
 },
 "superset.charts.commands.data.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.charts.commands.data.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.charts.commands.data.CacheLoadError": {
  "data": {
   "shadows": "superset.exceptions.CacheLoadError"
  },
  "type": "import"
 },
 "superset.charts.commands.data.ChartDataCacheLoadError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartDataCacheLoadError"
  },
  "type": "import"
 },
 "superset.charts.commands.data.ChartDataCommand": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.data.ChartDataCommand.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "str",
    "superset.common.query_context.QueryContext",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.data.ChartDataCommand.load_query_context_from_cache": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "str",
    "superset.cache.get",
    "superset.charts.commands.exceptions.ChartDataCacheLoadError",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.data.ChartDataCommand.run": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "str",
    "superset.charts.commands.exceptions.ChartDataCacheLoadError",
    "superset.charts.commands.exceptions.ChartDataQueryFailedError",
    "superset.exceptions.CacheLoadError",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.data.ChartDataCommand.run_async": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "str",
    "superset.extensions.async_query_manager.init_job",
    "superset.tasks.async_queries.load_chart_data_into_cache.delay",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.data.ChartDataCommand.set_query_context": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "KeyError",
    "marshmallow.ValidationError",
    "str",
    "superset.charts.schemas.ChartDataQueryContextSchema",
    "superset.common.query_context.QueryContext",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.data.ChartDataCommand.validate": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "superset.charts.commands.data.ChartDataCommand.validate_async_request": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "flask.Request",
    "superset.extensions.async_query_manager.parse_jwt_from_request"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.data.ChartDataQueryContextSchema": {
  "data": {
   "shadows": "superset.charts.schemas.ChartDataQueryContextSchema"
  },
  "type": "import"
 },
 "superset.charts.commands.data.ChartDataQueryFailedError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartDataQueryFailedError"
  },
  "type": "import"
 },
 "superset.charts.commands.data.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.charts.commands.data.QueryContext": {
  "data": {
   "shadows": "superset.common.query_context.QueryContext"
  },
  "type": "import"
 },
 "superset.charts.commands.data.Request": {
  "data": {
   "shadows": "flask.Request"
  },
  "type": "import"
 },
 "superset.charts.commands.data.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.charts.commands.data.async_query_manager": {
  "data": {
   "shadows": "superset.extensions.async_query_manager"
  },
  "type": "import"
 },
 "superset.charts.commands.data.cache": {
  "data": {
   "shadows": "superset.cache"
  },
  "type": "import"
 },
 "superset.charts.commands.data.load_chart_data_into_cache": {
  "data": {
   "shadows": "superset.tasks.async_queries.load_chart_data_into_cache"
  },
  "type": "import"
 },
 "superset.charts.commands.data.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.charts.commands.data.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.charts.commands.delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.charts.commands.delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.charts.commands.delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.ChartDAO": {
  "data": {
   "shadows": "superset.charts.dao.ChartDAO"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.ChartDeleteFailedError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartDeleteFailedError"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.ChartDeleteFailedReportsExistError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartDeleteFailedReportsExistError"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.ChartForbiddenError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartForbiddenError"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.ChartNotFoundError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartNotFoundError"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.DeleteChartCommand": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.delete.DeleteChartCommand.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.models.slice.Slice",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.delete.DeleteChartCommand.run": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.charts.commands.delete.logger",
    "superset.charts.commands.exceptions.ChartDeleteFailedError",
    "superset.charts.dao.ChartDAO.delete",
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.models.dashboard.Dashboard.clear_cache_for_slice"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.delete.DeleteChartCommand.validate": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.charts.commands.exceptions.ChartDeleteFailedReportsExistError",
    "superset.charts.commands.exceptions.ChartForbiddenError",
    "superset.charts.commands.exceptions.ChartNotFoundError",
    "superset.charts.dao.ChartDAO.find_by_id",
    "superset.exceptions.SupersetSecurityException",
    "superset.reports.dao.ReportScheduleDAO.find_by_chart_id",
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.delete.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.ReportScheduleDAO": {
  "data": {
   "shadows": "superset.reports.dao.ReportScheduleDAO"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.charts.commands.delete._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.charts.commands.delete.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.charts.commands.delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.charts.commands.exceptions": {
  "data": {},
  "type": "module"
 },
 "superset.charts.commands.exceptions.ChartBulkDeleteFailedError": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.DeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.ChartBulkDeleteFailedReportsExistError": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.charts.commands.exceptions.ChartBulkDeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.ChartCreateFailedError": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CreateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.ChartDataCacheLoadError": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.ChartDataQueryFailedError": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.ChartDeleteFailedError": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.DeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.ChartDeleteFailedReportsExistError": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.charts.commands.exceptions.ChartDeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.ChartForbiddenError": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.ForbiddenError"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.ChartImportError": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.ImportFailedError"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.ChartInvalidError": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandInvalidError"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.ChartNotFoundError": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.ChartUpdateFailedError": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.UpdateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.charts.commands.exceptions.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.charts.commands.exceptions.CreateFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.CreateFailedError"
  },
  "type": "import"
 },
 "superset.charts.commands.exceptions.DashboardsNotFoundValidationError": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.DashboardsNotFoundValidationError.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.exceptions.DatabaseNotFoundValidationError": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.DatabaseNotFoundValidationError.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.exceptions.DatasourceTypeUpdateRequiredValidationError": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.exceptions.DatasourceTypeUpdateRequiredValidationError.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.exceptions.DeleteFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.DeleteFailedError"
  },
  "type": "import"
 },
 "superset.charts.commands.exceptions.ForbiddenError": {
  "data": {
   "shadows": "superset.commands.exceptions.ForbiddenError"
  },
  "type": "import"
 },
 "superset.charts.commands.exceptions.ImportFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.ImportFailedError"
  },
  "type": "import"
 },
 "superset.charts.commands.exceptions.UpdateFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.UpdateFailedError"
  },
  "type": "import"
 },
 "superset.charts.commands.exceptions.ValidationError": {
  "data": {
   "shadows": "marshmallow.validate.ValidationError"
  },
  "type": "import"
 },
 "superset.charts.commands.exceptions._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.charts.commands.export": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.charts.commands.export.logging"
   ]
  },
  "type": "module"
 },
 "superset.charts.commands.export.ChartDAO": {
  "data": {
   "shadows": "superset.charts.dao.ChartDAO"
  },
  "type": "import"
 },
 "superset.charts.commands.export.ChartNotFoundError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartNotFoundError"
  },
  "type": "import"
 },
 "superset.charts.commands.export.EXPORT_VERSION": {
  "data": {
   "shadows": "superset.utils.dict_import_export.EXPORT_VERSION"
  },
  "type": "import"
 },
 "superset.charts.commands.export.ExportChartsCommand": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "superset.charts.commands.exceptions.ChartNotFoundError",
    "superset.charts.dao.ChartDAO",
    "superset.commands.export.ExportModelsCommand"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.export.ExportChartsCommand._export": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "superset.charts.commands.export.REMOVE_KEYS",
    "superset.charts.commands.export.json",
    "superset.charts.commands.export.logger",
    "superset.charts.commands.export.yaml",
    "superset.datasets.commands.export.ExportDatasetsCommand",
    "superset.models.slice.Slice",
    "superset.utils.dict_import_export.EXPORT_VERSION",
    "typing.Iterator",
    "typing.Tuple",
    "werkzeug.utils.secure_filename"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.export.ExportDatasetsCommand": {
  "data": {
   "shadows": "superset.datasets.commands.export.ExportDatasetsCommand"
  },
  "type": "import"
 },
 "superset.charts.commands.export.ExportModelsCommand": {
  "data": {
   "shadows": "superset.commands.export.ExportModelsCommand"
  },
  "type": "import"
 },
 "superset.charts.commands.export.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "superset.charts.commands.export.REMOVE_KEYS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.charts.commands.export.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.charts.commands.export.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.charts.commands.export.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.charts.commands.export.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.charts.commands.export.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.charts.commands.export.secure_filename": {
  "data": {
   "shadows": "werkzeug.utils.secure_filename"
  },
  "type": "import"
 },
 "superset.charts.commands.export.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "superset.charts.commands.importers": {
  "data": {},
  "type": "module"
 },
 "superset.charts.commands.importers.dispatcher": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.charts.commands.importers.dispatcher.logging",
    "superset.charts.commands.importers.v1.ImportChartsCommand"
   ]
  },
  "type": "module"
 },
 "superset.charts.commands.importers.dispatcher.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.dispatcher.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.dispatcher.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.dispatcher.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.dispatcher.ImportChartsCommand": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.importers.dispatcher.ImportChartsCommand.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.importers.dispatcher.ImportChartsCommand.run": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Exception",
    "marshmallow.exceptions.ValidationError",
    "superset.charts.commands.importers.dispatcher.command_versions",
    "superset.charts.commands.importers.dispatcher.logger",
    "superset.commands.exceptions.CommandInvalidError",
    "superset.commands.importers.exceptions.IncorrectVersionError",
    "version"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.importers.dispatcher.ImportChartsCommand.validate": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "superset.charts.commands.importers.dispatcher.IncorrectVersionError": {
  "data": {
   "shadows": "superset.commands.importers.exceptions.IncorrectVersionError"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.dispatcher.ValidationError": {
  "data": {
   "shadows": "marshmallow.exceptions.ValidationError"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.dispatcher.command_versions": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.charts.commands.importers.dispatcher.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.charts.commands.importers.dispatcher.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.dispatcher.v1": {
  "data": {
   "shadows": "superset.charts.commands.importers.v1"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1": {
  "data": {},
  "type": "module"
 },
 "superset.charts.commands.importers.v1.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.ChartDAO": {
  "data": {
   "shadows": "superset.charts.dao.ChartDAO"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.ChartImportError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartImportError"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.ImportChartsCommand": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "str",
    "superset.charts.commands.exceptions.ChartImportError",
    "superset.charts.dao.ChartDAO",
    "superset.charts.schemas.ImportV1ChartSchema",
    "superset.commands.importers.v1.ImportModelsCommand",
    "superset.databases.schemas.ImportV1DatabaseSchema",
    "superset.datasets.schemas.ImportV1DatasetSchema",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.importers.v1.ImportChartsCommand._import": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "bool",
    "int",
    "set",
    "sqlalchemy.orm.Session",
    "staticmethod",
    "str",
    "superset.charts.commands.importers.v1.utils.import_chart",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.databases.commands.importers.v1.utils.import_database",
    "superset.datasets.commands.importers.v1.utils.import_dataset",
    "typing.Any",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.importers.v1.ImportModelsCommand": {
  "data": {
   "shadows": "superset.commands.importers.v1.ImportModelsCommand"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.ImportV1ChartSchema": {
  "data": {
   "shadows": "superset.charts.schemas.ImportV1ChartSchema"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.ImportV1DatabaseSchema": {
  "data": {
   "shadows": "superset.databases.schemas.ImportV1DatabaseSchema"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.ImportV1DatasetSchema": {
  "data": {
   "shadows": "superset.datasets.schemas.ImportV1DatasetSchema"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.import_chart": {
  "data": {
   "shadows": "superset.charts.commands.importers.v1.utils.import_chart"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.import_database": {
  "data": {
   "shadows": "superset.databases.commands.importers.v1.utils.import_database"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.import_dataset": {
  "data": {
   "shadows": "superset.datasets.commands.importers.v1.utils.import_dataset"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.utils": {
  "data": {},
  "type": "module"
 },
 "superset.charts.commands.importers.v1.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.utils.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.utils.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.charts.commands.importers.v1.utils.import_chart": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.orm.Session",
    "str",
    "superset.charts.commands.importers.v1.utils.json",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.import_from_dict",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.importers.v1.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.charts.commands.update": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.charts.commands.update.logging"
   ]
  },
  "type": "module"
 },
 "superset.charts.commands.update.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.charts.commands.update.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.charts.commands.update.ChartDAO": {
  "data": {
   "shadows": "superset.charts.dao.ChartDAO"
  },
  "type": "import"
 },
 "superset.charts.commands.update.ChartForbiddenError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartForbiddenError"
  },
  "type": "import"
 },
 "superset.charts.commands.update.ChartInvalidError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartInvalidError"
  },
  "type": "import"
 },
 "superset.charts.commands.update.ChartNotFoundError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartNotFoundError"
  },
  "type": "import"
 },
 "superset.charts.commands.update.ChartUpdateFailedError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.ChartUpdateFailedError"
  },
  "type": "import"
 },
 "superset.charts.commands.update.DAOUpdateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOUpdateFailedError"
  },
  "type": "import"
 },
 "superset.charts.commands.update.DashboardDAO": {
  "data": {
   "shadows": "superset.dashboards.dao.DashboardDAO"
  },
  "type": "import"
 },
 "superset.charts.commands.update.DashboardsNotFoundValidationError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.DashboardsNotFoundValidationError"
  },
  "type": "import"
 },
 "superset.charts.commands.update.DatasourceTypeUpdateRequiredValidationError": {
  "data": {
   "shadows": "superset.charts.commands.exceptions.DatasourceTypeUpdateRequiredValidationError"
  },
  "type": "import"
 },
 "superset.charts.commands.update.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.charts.commands.update.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.charts.commands.update.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.charts.commands.update.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.charts.commands.update.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.charts.commands.update.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.charts.commands.update.UpdateChartCommand": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.charts.commands.update.UpdateChartCommand.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "str",
    "superset.models.slice.Slice",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.update.UpdateChartCommand.run": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.charts.commands.exceptions.ChartUpdateFailedError",
    "superset.charts.commands.update.logger",
    "superset.charts.dao.ChartDAO.update",
    "superset.dao.exceptions.DAOUpdateFailedError"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.update.UpdateChartCommand.validate": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "marshmallow.ValidationError",
    "superset.charts.commands.exceptions.ChartForbiddenError",
    "superset.charts.commands.exceptions.ChartInvalidError",
    "superset.charts.commands.exceptions.ChartNotFoundError",
    "superset.charts.commands.exceptions.DashboardsNotFoundValidationError",
    "superset.charts.commands.exceptions.DatasourceTypeUpdateRequiredValidationError",
    "superset.charts.dao.ChartDAO.find_by_id",
    "superset.commands.utils.get_datasource_by_id",
    "superset.commands.utils.populate_owners",
    "superset.dashboards.dao.DashboardDAO.find_by_ids",
    "superset.exceptions.SupersetSecurityException",
    "superset.views.base.check_ownership",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.charts.commands.update.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.charts.commands.update.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.charts.commands.update.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.charts.commands.update.get_datasource_by_id": {
  "data": {
   "shadows": "superset.commands.utils.get_datasource_by_id"
  },
  "type": "import"
 },
 "superset.charts.commands.update.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.charts.commands.update.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.charts.commands.update.populate_owners": {
  "data": {
   "shadows": "superset.commands.utils.populate_owners"
  },
  "type": "import"
 },
 "superset.charts.dao": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.charts.dao.logging",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.charts.dao.BaseDAO": {
  "data": {
   "shadows": "superset.dao.base.BaseDAO"
  },
  "type": "import"
 },
 "superset.charts.dao.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.charts.dao.ChartDAO": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "superset.charts.filters.ChartFilter",
    "superset.dao.base.BaseDAO",
    "superset.models.slice.Slice"
   ]
  },
  "type": "class"
 },
 "superset.charts.dao.ChartDAO.bulk_delete": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.exc.SQLAlchemyError",
    "staticmethod",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.merge",
    "superset.extensions.db.session.query",
    "superset.extensions.db.session.rollback",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.id.in_",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.charts.dao.ChartDAO.favorited_ids": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "superset.extensions.db.session.query",
    "superset.models.core.FavStar",
    "superset.models.core.FavStar.class_name",
    "superset.models.core.FavStar.obj_id",
    "superset.models.core.FavStar.obj_id.in_",
    "superset.models.core.FavStar.user_id",
    "superset.models.core.FavStarClassName.CHART",
    "superset.models.slice.Slice",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.charts.dao.ChartDAO.overwrite": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bool",
    "staticmethod",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.merge",
    "superset.models.slice.Slice"
   ]
  },
  "type": "function"
 },
 "superset.charts.dao.ChartDAO.save": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "bool",
    "staticmethod",
    "superset.extensions.db.session.add",
    "superset.extensions.db.session.commit",
    "superset.models.slice.Slice"
   ]
  },
  "type": "function"
 },
 "superset.charts.dao.ChartFilter": {
  "data": {
   "shadows": "superset.charts.filters.ChartFilter"
  },
  "type": "import"
 },
 "superset.charts.dao.FavStar": {
  "data": {
   "shadows": "superset.models.core.FavStar"
  },
  "type": "import"
 },
 "superset.charts.dao.FavStarClassName": {
  "data": {
   "shadows": "superset.models.core.FavStarClassName"
  },
  "type": "import"
 },
 "superset.charts.dao.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.charts.dao.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.charts.dao.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.charts.dao.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.charts.dao.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.charts.dao.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.charts.dao.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.charts.dao.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.charts.filters": {
  "data": {},
  "type": "module"
 },
 "superset.charts.filters.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.charts.filters.BaseFavoriteFilter": {
  "data": {
   "shadows": "superset.views.base_api.BaseFavoriteFilter"
  },
  "type": "import"
 },
 "superset.charts.filters.BaseFilter": {
  "data": {
   "shadows": "superset.views.base.BaseFilter"
  },
  "type": "import"
 },
 "superset.charts.filters.ChartAllTextFilter": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.charts.filters.ChartAllTextFilter.apply": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sqlalchemy.or_",
    "sqlalchemy.orm.query.Query",
    "superset.connectors.sqla.models.SqlaTable.table_name.ilike",
    "superset.models.slice.Slice.description.ilike",
    "superset.models.slice.Slice.slice_name.ilike",
    "superset.models.slice.Slice.viz_type.ilike",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.charts.filters.ChartFavoriteFilter": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "superset.models.slice.Slice",
    "superset.views.base_api.BaseFavoriteFilter"
   ]
  },
  "type": "class"
 },
 "superset.charts.filters.ChartFilter": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.charts.filters.ChartFilter.apply": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "sqlalchemy.or_",
    "sqlalchemy.orm.query.Query",
    "superset.security_manager.can_access_all_datasources",
    "superset.security_manager.user_view_menu_names",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.charts.filters.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.query.Query"
  },
  "type": "import"
 },
 "superset.charts.filters.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.charts.filters.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.charts.filters._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.charts.filters.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.charts.filters.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.charts.schemas": {
  "data": {
   "symbols_in_volume": [
    "superset.charts.schemas.ChartCacheScreenshotResponseSchema",
    "superset.charts.schemas.ChartDataAdhocMetricSchema",
    "superset.charts.schemas.ChartDataAggregateOptionsSchema",
    "superset.charts.schemas.ChartDataAsyncResponseSchema",
    "superset.charts.schemas.ChartDataBoxplotOptionsSchema",
    "superset.charts.schemas.ChartDataContributionOptionsSchema",
    "superset.charts.schemas.ChartDataGeodeticParseOptionsSchema",
    "superset.charts.schemas.ChartDataGeohashDecodeOptionsSchema",
    "superset.charts.schemas.ChartDataGeohashEncodeOptionsSchema",
    "superset.charts.schemas.ChartDataPivotOptionsSchema",
    "superset.charts.schemas.ChartDataProphetOptionsSchema",
    "superset.charts.schemas.ChartDataQueryContextSchema",
    "superset.charts.schemas.ChartDataResponseSchema",
    "superset.charts.schemas.ChartDataRollingOptionsSchema",
    "superset.charts.schemas.ChartDataSelectOptionsSchema",
    "superset.charts.schemas.ChartDataSortOptionsSchema",
    "superset.charts.schemas.ChartGetDatasourceResponseSchema",
    "superset.charts.schemas.GetFavStarIdsSchema",
    "superset.charts.schemas.width_height_schema"
   ]
  },
  "type": "module"
 },
 "superset.charts.schemas.AnnotationDataSchema": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Dict",
    "marshmallow.fields.List",
    "marshmallow.fields.String"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.AnnotationLayerSchema": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "flask_babel.gettext",
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Dict",
    "marshmallow.fields.Float",
    "marshmallow.fields.List",
    "marshmallow.fields.Raw",
    "marshmallow.fields.String",
    "marshmallow.validate.OneOf",
    "marshmallow.validate.Range",
    "superset.utils.core.AnnotationType"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.AnnotationType": {
  "data": {
   "shadows": "superset.utils.core.AnnotationType"
  },
  "type": "import"
 },
 "superset.charts.schemas.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.charts.schemas.CHART_SCHEMAS": {
  "data": {
   "lineno": 1143
  },
  "type": "constant"
 },
 "superset.charts.schemas.ChartCacheScreenshotResponseSchema": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.String"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataAdhocMetricSchema": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Nested",
    "marshmallow.fields.String",
    "marshmallow.validate.OneOf",
    "superset.charts.schemas.ChartDataColumnSchema"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataAggregateConfigField": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "marshmallow.fields.Dict"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataAggregateConfigField.__init__": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "superset.charts.schemas.ChartDataAggregateOptionsSchema": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "marshmallow.fields.List",
    "marshmallow.fields.String",
    "superset.charts.schemas.ChartDataAggregateConfigField",
    "superset.charts.schemas.ChartDataPostProcessingOperationOptionsSchema"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataAsyncResponseSchema": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.String"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataBoxplotOptionsSchema": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "flask_babel.gettext",
    "marshmallow.fields.Float",
    "marshmallow.fields.List",
    "marshmallow.fields.Raw",
    "marshmallow.fields.String",
    "marshmallow.fields.Tuple",
    "marshmallow.validate.OneOf",
    "marshmallow.validate.Range",
    "superset.charts.schemas.ChartDataPostProcessingOperationOptionsSchema",
    "superset.utils.core.PostProcessingBoxplotWhiskerType"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataColumnSchema": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.String",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataContributionOptionsSchema": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "marshmallow.fields.String",
    "marshmallow.validate.OneOf",
    "superset.charts.schemas.ChartDataPostProcessingOperationOptionsSchema",
    "superset.utils.core.PostProcessingContributionOrientation"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataDatasourceSchema": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "id",
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.String",
    "marshmallow.validate.OneOf",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataExtrasSchema": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "marshmallow.fields.String",
    "marshmallow.validate.OneOf",
    "superset.charts.schemas.ChartDataFilterSchema",
    "superset.charts.schemas.TIME_GRAINS"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataFilterSchema": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Raw",
    "marshmallow.fields.String",
    "superset.utils.core.FilterOperator",
    "superset.utils.schema.OneOfCaseInsensitive"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataGeodeticParseOptionsSchema": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "marshmallow.fields.String",
    "superset.charts.schemas.ChartDataPostProcessingOperationOptionsSchema"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataGeohashDecodeOptionsSchema": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "marshmallow.fields.String",
    "superset.charts.schemas.ChartDataPostProcessingOperationOptionsSchema"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataGeohashEncodeOptionsSchema": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "marshmallow.fields.String",
    "superset.charts.schemas.ChartDataPostProcessingOperationOptionsSchema"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataPivotOptionsSchema": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "marshmallow.fields.Boolean",
    "marshmallow.fields.List",
    "marshmallow.fields.Number",
    "marshmallow.fields.String",
    "superset.charts.schemas.ChartDataAggregateConfigField",
    "superset.charts.schemas.ChartDataPostProcessingOperationOptionsSchema"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataPostProcessingOperationOptionsSchema": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "marshmallow.Schema"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataPostProcessingOperationSchema": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Dict",
    "marshmallow.fields.String",
    "marshmallow.validate.OneOf"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataProphetOptionsSchema": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "flask_babel.gettext",
    "marshmallow.fields.Float",
    "marshmallow.fields.Integer",
    "marshmallow.fields.Raw",
    "marshmallow.fields.String",
    "marshmallow.validate.OneOf",
    "marshmallow.validate.Range",
    "superset.charts.schemas.ChartDataPostProcessingOperationOptionsSchema",
    "superset.charts.schemas.TIME_GRAINS"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataQueryContextSchema": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "marshmallow_enum.EnumField",
    "superset.charts.schemas.ChartDataDatasourceSchema",
    "superset.charts.schemas.ChartDataQueryObjectSchema",
    "superset.utils.core.ChartDataResultFormat",
    "superset.utils.core.ChartDataResultType"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataQueryContextSchema.make_query_context": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "marshmallow.post_load",
    "str",
    "superset.common.query_context.QueryContext",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.charts.schemas.ChartDataQueryObjectSchema": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "flask_babel.gettext",
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Dict",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "marshmallow.fields.Raw",
    "marshmallow.fields.String",
    "marshmallow.validate.Range",
    "superset.charts.schemas.AnnotationLayerSchema",
    "superset.charts.schemas.ChartDataExtrasSchema",
    "superset.charts.schemas.ChartDataFilterSchema",
    "superset.charts.schemas.ChartDataPostProcessingOperationSchema"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataQueryObjectSchema.Meta": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "marshmallow.EXCLUDE"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataResponseResult": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Dict",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.String",
    "marshmallow.validate.OneOf"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataResponseSchema": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "superset.charts.schemas.ChartDataResponseResult"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataResultFormat": {
  "data": {
   "shadows": "superset.utils.core.ChartDataResultFormat"
  },
  "type": "import"
 },
 "superset.charts.schemas.ChartDataResultType": {
  "data": {
   "shadows": "superset.utils.core.ChartDataResultType"
  },
  "type": "import"
 },
 "superset.charts.schemas.ChartDataRollingOptionsSchema": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Dict",
    "marshmallow.fields.Integer",
    "marshmallow.fields.String",
    "marshmallow.validate.OneOf",
    "superset.charts.schemas.ChartDataPostProcessingOperationOptionsSchema"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataSelectOptionsSchema": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "marshmallow.fields.Dict",
    "marshmallow.fields.List",
    "marshmallow.fields.String",
    "superset.charts.schemas.ChartDataPostProcessingOperationOptionsSchema"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartDataSortOptionsSchema": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "marshmallow.fields.Dict",
    "superset.charts.schemas.ChartDataAggregateConfigField",
    "superset.charts.schemas.ChartDataPostProcessingOperationOptionsSchema"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartFavStarResponseResult": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "id",
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Integer"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartGetDatasourceObjectDataResponseSchema": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Integer"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartGetDatasourceObjectResponseSchema": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Nested",
    "marshmallow.fields.String",
    "superset.charts.schemas.ChartGetDatasourceObjectDataResponseSchema"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartGetDatasourceResponseSchema": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.Nested",
    "superset.charts.schemas.ChartGetDatasourceObjectResponseSchema"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartPostSchema": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "marshmallow.validate.OneOf",
    "superset.charts.schemas.cache_timeout_description",
    "superset.charts.schemas.dashboards_description",
    "superset.charts.schemas.datasource_id_description",
    "superset.charts.schemas.datasource_name_description",
    "superset.charts.schemas.datasource_type_description",
    "superset.charts.schemas.description_description",
    "superset.charts.schemas.owners_description",
    "superset.charts.schemas.params_description",
    "superset.charts.schemas.slice_name_description",
    "superset.charts.schemas.viz_type_description",
    "superset.utils.schema.validate_json"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ChartPutSchema": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "marshmallow.validate.OneOf",
    "superset.charts.schemas.cache_timeout_description",
    "superset.charts.schemas.dashboards_description",
    "superset.charts.schemas.datasource_id_description",
    "superset.charts.schemas.datasource_type_description",
    "superset.charts.schemas.description_description",
    "superset.charts.schemas.owners_description",
    "superset.charts.schemas.params_description",
    "superset.charts.schemas.slice_name_description",
    "superset.charts.schemas.viz_type_description"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.charts.schemas.EXCLUDE": {
  "data": {
   "shadows": "marshmallow.EXCLUDE"
  },
  "type": "import"
 },
 "superset.charts.schemas.EnumField": {
  "data": {
   "shadows": "marshmallow_enum.EnumField"
  },
  "type": "import"
 },
 "superset.charts.schemas.FilterOperator": {
  "data": {
   "shadows": "superset.utils.core.FilterOperator"
  },
  "type": "import"
 },
 "superset.charts.schemas.GetFavStarIdsSchema": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "superset.charts.schemas.ChartFavStarResponseResult"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.ImportV1ChartSchema": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Dict",
    "marshmallow.fields.Integer",
    "marshmallow.fields.String",
    "marshmallow.fields.UUID"
   ]
  },
  "type": "class"
 },
 "superset.charts.schemas.Length": {
  "data": {
   "shadows": "marshmallow.validate.Length"
  },
  "type": "import"
 },
 "superset.charts.schemas.PostProcessingBoxplotWhiskerType": {
  "data": {
   "shadows": "superset.utils.core.PostProcessingBoxplotWhiskerType"
  },
  "type": "import"
 },
 "superset.charts.schemas.PostProcessingContributionOrientation": {
  "data": {
   "shadows": "superset.utils.core.PostProcessingContributionOrientation"
  },
  "type": "import"
 },
 "superset.charts.schemas.QueryContext": {
  "data": {
   "shadows": "superset.common.query_context.QueryContext"
  },
  "type": "import"
 },
 "superset.charts.schemas.Range": {
  "data": {
   "shadows": "marshmallow.validate.Range"
  },
  "type": "import"
 },
 "superset.charts.schemas.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.charts.schemas.TIME_GRAINS": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "superset.charts.schemas._": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.charts.schemas.cache_timeout_description": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "superset.charts.schemas.dashboards_description": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "superset.charts.schemas.datasource_id_description": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "superset.charts.schemas.datasource_name_description": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "superset.charts.schemas.datasource_type_description": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "superset.charts.schemas.datasource_uid_description": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "superset.charts.schemas.description_description": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "superset.charts.schemas.fields": {
  "data": {
   "shadows": "marshmallow.fields"
  },
  "type": "import"
 },
 "superset.charts.schemas.get_delete_ids_schema": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.charts.schemas.get_export_ids_schema": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "superset.charts.schemas.get_fav_star_ids_schema": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "superset.charts.schemas.openapi_spec_methods_override": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "superset.charts.schemas.owners_description": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "superset.charts.schemas.params_description": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "superset.charts.schemas.post_load": {
  "data": {
   "shadows": "marshmallow.post_load"
  },
  "type": "import"
 },
 "superset.charts.schemas.screenshot_query_schema": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "superset.charts.schemas.slice_name_description": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "superset.charts.schemas.thumbnail_query_schema": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.charts.schemas.utils": {
  "data": {
   "shadows": "superset.utils.schema"
  },
  "type": "import"
 },
 "superset.charts.schemas.validate": {
  "data": {
   "shadows": "marshmallow.validate"
  },
  "type": "import"
 },
 "superset.charts.schemas.viz_type_description": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "superset.charts.schemas.width_height_schema": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "superset.cli": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "superset.cli.feature_flags",
    "superset.cli.feature_flags_func",
    "superset.cli.logging",
    "superset.config.DEFAULT_FEATURE_FLAGS.copy",
    "superset.config.FEATURE_FLAGS",
    "superset.config.GET_FEATURE_FLAGS_FUNC"
   ]
  },
  "type": "module"
 },
 "superset.cli.APISpec": {
  "data": {
   "shadows": "apispec.APISpec"
  },
  "type": "import"
 },
 "superset.cli.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.cli.BaseApi": {
  "data": {
   "shadows": "flask_appbuilder.api.BaseApi"
  },
  "type": "import"
 },
 "superset.cli.CallableTask": {
  "data": {
   "shadows": "celery.utils.abstract.CallableTask"
  },
  "type": "import"
 },
 "superset.cli.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.cli.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.cli.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.cli.DruidCluster": {
  "data": {
   "shadows": "superset.connectors.druid.models.DruidCluster"
  },
  "type": "import"
 },
 "superset.cli.ExportDashboardsCommand": {
  "data": {
   "shadows": "superset.dashboards.commands.export.ExportDashboardsCommand"
  },
  "type": "import"
 },
 "superset.cli.ExportDatasetsCommand": {
  "data": {
   "shadows": "superset.datasets.commands.export.ExportDatasetsCommand"
  },
  "type": "import"
 },
 "superset.cli.FlaskGroup": {
  "data": {
   "shadows": "flask.cli.FlaskGroup"
  },
  "type": "import"
 },
 "superset.cli.Fore": {
  "data": {
   "shadows": "colorama.Fore"
  },
  "type": "import"
 },
 "superset.cli.ImportDashboardsCommand": {
  "data": {
   "shadows": "superset.dashboards.commands.importers.v0.ImportDashboardsCommand"
  },
  "type": "import"
 },
 "superset.cli.ImportDatasetsCommand": {
  "data": {
   "shadows": "superset.datasets.commands.importers.v0.ImportDatasetsCommand"
  },
  "type": "import"
 },
 "superset.cli.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.cli.MarshmallowPlugin": {
  "data": {
   "shadows": "apispec.ext.marshmallow.MarshmallowPlugin"
  },
  "type": "import"
 },
 "superset.cli.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.cli.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.cli.Path": {
  "data": {
   "shadows": "pathlib2.Path"
  },
  "type": "import"
 },
 "superset.cli.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "superset.cli.ScheduleType": {
  "data": {
   "shadows": "superset.models.schedules.ScheduleType"
  },
  "type": "import"
 },
 "superset.cli.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.cli.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.cli.Style": {
  "data": {
   "shadows": "colorama.Style"
  },
  "type": "import"
 },
 "superset.cli.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.cli.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.cli.ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "superset.cli.add_favorites": {
  "data": {
   "shadows": "superset.common.tags.add_favorites"
  },
  "type": "import"
 },
 "superset.cli.add_owners": {
  "data": {
   "shadows": "superset.common.tags.add_owners"
  },
  "type": "import"
 },
 "superset.cli.add_types": {
  "data": {
   "shadows": "superset.common.tags.add_types"
  },
  "type": "import"
 },
 "superset.cli.alert": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "datetime.timedelta",
    "flask.cli.with_appcontext",
    "superset.cli.click",
    "superset.cli.superset",
    "superset.models.schedules.ScheduleType.alert",
    "superset.tasks.schedules.schedule_window",
    "superset.utils.celery.session_scope"
   ]
  },
  "type": "function"
 },
 "superset.cli.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.cli.appbuilder": {
  "data": {
   "shadows": "superset.appbuilder"
  },
  "type": "import"
 },
 "superset.cli.cache_chart_thumbnail": {
  "data": {
   "shadows": "superset.tasks.thumbnails.cache_chart_thumbnail"
  },
  "type": "import"
 },
 "superset.cli.cache_dashboard_thumbnail": {
  "data": {
   "shadows": "superset.tasks.thumbnails.cache_dashboard_thumbnail"
  },
  "type": "import"
 },
 "superset.cli.celery_app": {
  "data": {
   "shadows": "superset.extensions.celery_app"
  },
  "type": "import"
 },
 "superset.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "superset.cli.compute_thumbnails": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "bool",
    "compute_generic_thumbnail",
    "flask.cli.with_appcontext",
    "int",
    "superset.cli.click",
    "superset.cli.superset",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "superset.tasks.thumbnails.cache_chart_thumbnail",
    "superset.tasks.thumbnails.cache_dashboard_thumbnail"
   ]
  },
  "type": "function"
 },
 "superset.cli.compute_thumbnails.compute_generic_thumbnail": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "celery.utils.abstract.CallableTask",
    "enumerate",
    "func",
    "int",
    "len",
    "str",
    "superset.cli.click",
    "superset.extensions.db.session.query",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "superset.utils.urls.get_url_path",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.cli.config": {
  "data": {
   "shadows": "superset.config"
  },
  "type": "import"
 },
 "superset.cli.create_app": {
  "data": {
   "shadows": "superset.app.create_app"
  },
  "type": "import"
 },
 "superset.cli.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.cli.dashboard_import_export": {
  "data": {
   "shadows": "superset.utils.dashboard_import_export"
  },
  "type": "import"
 },
 "superset.cli.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.cli.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.cli.dict_import_export": {
  "data": {
   "shadows": "superset.utils.dict_import_export"
  },
  "type": "import"
 },
 "superset.cli.examples": {
  "data": {
   "shadows": "superset.examples"
  },
  "type": "import"
 },
 "superset.cli.export_dashboards": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "bool",
    "flask.cli.with_appcontext",
    "open",
    "print",
    "str",
    "superset.cli.click",
    "superset.cli.logger",
    "superset.cli.superset",
    "superset.extensions.db.session",
    "superset.utils.dashboard_import_export.export_dashboards",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.cli.export_datasource_schema": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "bool",
    "flask.cli.with_appcontext",
    "superset.cli.click",
    "superset.cli.superset",
    "superset.cli.sys",
    "superset.cli.yaml",
    "superset.utils.dict_import_export.export_schema_to_dict"
   ]
  },
  "type": "function"
 },
 "superset.cli.export_datasources": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "bool",
    "flask.cli.with_appcontext",
    "open",
    "str",
    "superset.cli.click",
    "superset.cli.logger",
    "superset.cli.superset",
    "superset.cli.sys",
    "superset.cli.yaml",
    "superset.extensions.db.session",
    "superset.utils.dict_import_export.export_to_dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.cli.feature_flags": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "superset.cli.feature_flags_func": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "superset.cli.flower": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "colorama.Fore.BLUE",
    "colorama.Fore.GREEN",
    "colorama.Fore.YELLOW",
    "flask.cli.with_appcontext",
    "int",
    "print",
    "str",
    "subprocess.Popen",
    "superset.cli.click",
    "superset.cli.logger",
    "superset.cli.superset",
    "superset.extensions.celery_app.conf.BROKER_URL"
   ]
  },
  "type": "function"
 },
 "superset.cli.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.cli.get_url_path": {
  "data": {
   "shadows": "superset.utils.urls.get_url_path"
  },
  "type": "import"
 },
 "superset.cli.import_dashboards": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "flask.cli.with_appcontext",
    "flask.g.user",
    "open",
    "pathlib2.Path",
    "str",
    "superset.cli.click",
    "superset.cli.logger",
    "superset.cli.superset",
    "superset.dashboards.commands.importers.v0.ImportDashboardsCommand",
    "superset.security_manager.find_user",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.cli.import_datasources": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "flask.cli.with_appcontext",
    "open",
    "pathlib2.Path",
    "str",
    "superset.cli.click",
    "superset.cli.logger",
    "superset.cli.superset",
    "superset.datasets.commands.importers.v0.ImportDatasetsCommand",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.cli.init": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "flask.cli.with_appcontext",
    "superset.appbuilder.add_permissions",
    "superset.cli.superset",
    "superset.security_manager.sync_role_definitions"
   ]
  },
  "type": "function"
 },
 "superset.cli.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.cli.load_examples": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "bool",
    "flask.cli.with_appcontext",
    "superset.cli.click",
    "superset.cli.load_examples_run",
    "superset.cli.superset"
   ]
  },
  "type": "function"
 },
 "superset.cli.load_examples_run": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "bool",
    "print",
    "superset.examples.load_bart_lines",
    "superset.examples.load_birth_names",
    "superset.examples.load_country_map_data",
    "superset.examples.load_css_templates",
    "superset.examples.load_deck_dash",
    "superset.examples.load_energy",
    "superset.examples.load_flights",
    "superset.examples.load_from_configs",
    "superset.examples.load_long_lat_data",
    "superset.examples.load_misc_dashboard",
    "superset.examples.load_multi_line",
    "superset.examples.load_multiformat_time_series",
    "superset.examples.load_paris_iris_geojson",
    "superset.examples.load_random_time_series_data",
    "superset.examples.load_sf_population_polygons",
    "superset.examples.load_tabbed_dashboard",
    "superset.examples.load_world_bank_health_n_pop",
    "superset.utils.core.get_example_database"
   ]
  },
  "type": "function"
 },
 "superset.cli.load_test_users": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "colorama.Fore.GREEN",
    "flask.cli.with_appcontext",
    "load_test_users_run",
    "print",
    "superset.cli.superset"
   ]
  },
  "type": "function"
 },
 "superset.cli.load_test_users_run": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "superset.app.config",
    "superset.security_manager",
    "superset.utils.core.get_example_database"
   ]
  },
  "type": "function"
 },
 "superset.cli.logger": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.cli.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.cli.normalize_token": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.cli.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "superset.cli.refresh_druid": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "datetime.datetime.now",
    "flask.cli.with_appcontext",
    "print",
    "str",
    "superset.cli.click",
    "superset.cli.logger",
    "superset.cli.superset",
    "superset.connectors.druid.models.DruidCluster",
    "superset.extensions.db.session"
   ]
  },
  "type": "function"
 },
 "superset.cli.schedule_window": {
  "data": {
   "shadows": "superset.tasks.schedules.schedule_window"
  },
  "type": "import"
 },
 "superset.cli.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.cli.session_scope": {
  "data": {
   "shadows": "superset.utils.celery.session_scope"
  },
  "type": "import"
 },
 "superset.cli.set_database_uri": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "flask.cli.with_appcontext",
    "str",
    "superset.cli.click",
    "superset.cli.superset",
    "superset.utils.core.get_or_create_db"
   ]
  },
  "type": "function"
 },
 "superset.cli.superset": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "flask.cli.FlaskGroup",
    "flask.cli.with_appcontext",
    "superset.app.create_app",
    "superset.cli.click",
    "superset.cli.normalize_token"
   ]
  },
  "type": "function"
 },
 "superset.cli.superset.make_shell_context": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "dict",
    "str",
    "superset.app",
    "superset.app.shell_context_processor",
    "superset.extensions.db",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.cli.sync_tags": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "flask.cli.with_appcontext",
    "flask_appbuilder.Model.metadata",
    "superset.cli.superset",
    "superset.common.tags.add_favorites",
    "superset.common.tags.add_owners",
    "superset.common.tags.add_types",
    "superset.extensions.db.engine"
   ]
  },
  "type": "function"
 },
 "superset.cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "superset.cli.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.cli.update_api_docs": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "apispec.APISpec",
    "apispec.ext.marshmallow.MarshmallowPlugin",
    "dict",
    "flask.cli.with_appcontext",
    "flask.current_app.appbuilder.app_name",
    "flask.current_app.appbuilder.baseviews",
    "flask_appbuilder.api.BaseApi",
    "isinstance",
    "open",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "superset.cli.click",
    "superset.cli.json",
    "superset.cli.superset"
   ]
  },
  "type": "function"
 },
 "superset.cli.update_datasources_cache": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "Exception",
    "flask.cli.with_appcontext",
    "print",
    "str",
    "superset.cli.superset",
    "superset.extensions.db.session.query",
    "superset.models.core.Database"
   ]
  },
  "type": "function"
 },
 "superset.cli.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.cli.version": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "bool",
    "colorama.Fore.BLUE",
    "colorama.Fore.CYAN",
    "colorama.Fore.YELLOW",
    "colorama.Style.RESET_ALL",
    "flask.cli.with_appcontext",
    "print",
    "superset.app.config",
    "superset.cli.click",
    "superset.cli.superset",
    "superset.extensions.db.engine"
   ]
  },
  "type": "function"
 },
 "superset.cli.with_appcontext": {
  "data": {
   "shadows": "flask.cli.with_appcontext"
  },
  "type": "import"
 },
 "superset.cli.worker": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "flask.cli.with_appcontext",
    "int",
    "superset.app.config",
    "superset.cli.click",
    "superset.cli.logger",
    "superset.cli.superset",
    "superset.extensions.celery_app.Worker",
    "superset.extensions.celery_app.conf.update"
   ]
  },
  "type": "function"
 },
 "superset.cli.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "superset.commands": {
  "data": {},
  "type": "module"
 },
 "superset.commands.base": {
  "data": {},
  "type": "module"
 },
 "superset.commands.base.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "superset.commands.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.commands.base.BaseCommand": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "superset.commands.base.BaseCommand.run": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.commands.base.BaseCommand.validate": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "superset.commands.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "superset.commands.exceptions": {
  "data": {},
  "type": "module"
 },
 "superset.commands.exceptions.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.commands.exceptions.CommandException": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.commands.exceptions.CommandException.__repr__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.commands.exceptions.CommandInvalidError": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.commands.exceptions.CommandInvalidError.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "marshmallow.ValidationError",
    "str",
    "super",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.commands.exceptions.CommandInvalidError.add": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "marshmallow.ValidationError"
   ]
  },
  "type": "function"
 },
 "superset.commands.exceptions.CommandInvalidError.add_list": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "marshmallow.ValidationError",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.commands.exceptions.CommandInvalidError.normalized_messages": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.commands.exceptions.CreateFailedError": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.commands.exceptions.DatasourceNotFoundValidationError": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "marshmallow.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.commands.exceptions.DatasourceNotFoundValidationError.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.commands.exceptions.DeleteFailedError": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.commands.exceptions.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.commands.exceptions.ForbiddenError": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.commands.exceptions.ImportFailedError": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.commands.exceptions.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.commands.exceptions.OwnersNotFoundValidationError": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "marshmallow.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.commands.exceptions.OwnersNotFoundValidationError.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.commands.exceptions.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.commands.exceptions.UpdateFailedError": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.commands.exceptions.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.commands.exceptions._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.commands.export": {
  "data": {},
  "type": "module"
 },
 "superset.commands.export.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.commands.export.BaseDAO": {
  "data": {
   "shadows": "superset.dao.base.BaseDAO"
  },
  "type": "import"
 },
 "superset.commands.export.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.commands.export.EXPORT_VERSION": {
  "data": {
   "shadows": "superset.utils.dict_import_export.EXPORT_VERSION"
  },
  "type": "import"
 },
 "superset.commands.export.ExportModelsCommand": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand",
    "superset.commands.exceptions.CommandException",
    "superset.dao.base.BaseDAO"
   ]
  },
  "type": "class"
 },
 "superset.commands.export.ExportModelsCommand.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.commands.export.ExportModelsCommand._export": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError",
    "flask_appbuilder.Model",
    "staticmethod",
    "str",
    "typing.Iterator",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.commands.export.ExportModelsCommand.run": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "datetime.timezone.utc",
    "str",
    "superset.commands.export.METADATA_FILE_NAME",
    "superset.commands.export.yaml",
    "superset.utils.dict_import_export.EXPORT_VERSION",
    "typing.Iterator",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.commands.export.ExportModelsCommand.validate": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "superset.commands.export.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "superset.commands.export.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.commands.export.METADATA_FILE_NAME": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.commands.export.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.commands.export.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.commands.export.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.commands.export.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "superset.commands.export.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "superset.commands.importers": {
  "data": {},
  "type": "module"
 },
 "superset.commands.importers.exceptions": {
  "data": {},
  "type": "module"
 },
 "superset.commands.importers.exceptions.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.commands.importers.exceptions.IncorrectVersionError": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.commands.importers.v1": {
  "data": {},
  "type": "module"
 },
 "superset.commands.importers.v1.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.BaseDAO": {
  "data": {
   "shadows": "superset.dao.base.BaseDAO"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.ImportModelsCommand": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "str",
    "superset.commands.base.BaseCommand",
    "superset.commands.exceptions.CommandException",
    "superset.dao.base.BaseDAO",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "superset.commands.importers.v1.ImportModelsCommand.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.commands.importers.v1.ImportModelsCommand._get_uuids": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "superset.db.session.query",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.commands.importers.v1.ImportModelsCommand._import": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "sqlalchemy.orm.Session",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.commands.importers.v1.ImportModelsCommand.run": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception",
    "superset.db.session",
    "superset.db.session.commit",
    "superset.db.session.rollback"
   ]
  },
  "type": "function"
 },
 "superset.commands.importers.v1.ImportModelsCommand.validate": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "marshmallow.exceptions.ValidationError",
    "marshmallow.validate.Equal",
    "str",
    "superset.commands.exceptions.CommandInvalidError",
    "superset.commands.importers.v1.utils.METADATA_FILE_NAME",
    "superset.commands.importers.v1.utils.load_metadata",
    "superset.commands.importers.v1.utils.load_yaml",
    "superset.db.session.query",
    "superset.models.core.Database.password",
    "superset.models.core.Database.uuid",
    "type_validator",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.commands.importers.v1.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.METADATA_FILE_NAME": {
  "data": {
   "shadows": "superset.commands.importers.v1.utils.METADATA_FILE_NAME"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.ValidationError": {
  "data": {
   "shadows": "marshmallow.exceptions.ValidationError"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples": {
  "data": {},
  "type": "module"
 },
 "superset.commands.importers.v1.examples.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.BaseDAO": {
  "data": {
   "shadows": "superset.dao.base.BaseDAO"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.ImportExamplesCommand": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "str",
    "superset.charts.schemas.ImportV1ChartSchema",
    "superset.commands.exceptions.CommandException",
    "superset.commands.importers.v1.ImportModelsCommand",
    "superset.dao.base.BaseDAO",
    "superset.dashboards.schemas.ImportV1DashboardSchema",
    "superset.databases.schemas.ImportV1DatabaseSchema",
    "superset.datasets.schemas.ImportV1DatasetSchema",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "superset.commands.importers.v1.examples.ImportExamplesCommand.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.commands.importers.v1.examples.ImportExamplesCommand._import": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bool",
    "int",
    "sqlalchemy.orm.Session",
    "sqlalchemy.sql.select",
    "staticmethod",
    "str",
    "superset.charts.commands.importers.v1.utils.import_chart",
    "superset.dashboards.commands.importers.v1.utils.find_chart_uuids",
    "superset.dashboards.commands.importers.v1.utils.import_dashboard",
    "superset.dashboards.commands.importers.v1.utils.update_id_refs",
    "superset.databases.commands.importers.v1.utils.import_database",
    "superset.datasets.commands.importers.v1.utils.import_dataset",
    "superset.db.session.query",
    "superset.models.core.Database",
    "superset.models.dashboard.dashboard_slices.c.dashboard_id",
    "superset.models.dashboard.dashboard_slices.c.slice_id",
    "superset.models.dashboard.dashboard_slices.insert",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.commands.importers.v1.examples.ImportExamplesCommand.run": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception",
    "superset.db.session",
    "superset.db.session.commit",
    "superset.db.session.rollback"
   ]
  },
  "type": "function"
 },
 "superset.commands.importers.v1.examples.ImportModelsCommand": {
  "data": {
   "shadows": "superset.commands.importers.v1.ImportModelsCommand"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.ImportV1ChartSchema": {
  "data": {
   "shadows": "superset.charts.schemas.ImportV1ChartSchema"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.ImportV1DashboardSchema": {
  "data": {
   "shadows": "superset.dashboards.schemas.ImportV1DashboardSchema"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.ImportV1DatabaseSchema": {
  "data": {
   "shadows": "superset.databases.schemas.ImportV1DatabaseSchema"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.ImportV1DatasetSchema": {
  "data": {
   "shadows": "superset.datasets.schemas.ImportV1DatasetSchema"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.dashboard_slices": {
  "data": {
   "shadows": "superset.models.dashboard.dashboard_slices"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.find_chart_uuids": {
  "data": {
   "shadows": "superset.dashboards.commands.importers.v1.utils.find_chart_uuids"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.import_chart": {
  "data": {
   "shadows": "superset.charts.commands.importers.v1.utils.import_chart"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.import_dashboard": {
  "data": {
   "shadows": "superset.dashboards.commands.importers.v1.utils.import_dashboard"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.import_database": {
  "data": {
   "shadows": "superset.databases.commands.importers.v1.utils.import_database"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.import_dataset": {
  "data": {
   "shadows": "superset.datasets.commands.importers.v1.utils.import_dataset"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.select": {
  "data": {
   "shadows": "sqlalchemy.sql.select"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.examples.update_id_refs": {
  "data": {
   "shadows": "superset.dashboards.commands.importers.v1.utils.update_id_refs"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.load_metadata": {
  "data": {
   "shadows": "superset.commands.importers.v1.utils.load_metadata"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.load_yaml": {
  "data": {
   "shadows": "superset.commands.importers.v1.utils.load_yaml"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.commands.importers.v1.utils.logging"
   ]
  },
  "type": "module"
 },
 "superset.commands.importers.v1.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.utils.IMPORT_VERSION": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.commands.importers.v1.utils.IncorrectVersionError": {
  "data": {
   "shadows": "superset.commands.importers.exceptions.IncorrectVersionError"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.utils.METADATA_FILE_NAME": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.commands.importers.v1.utils.MetadataSchema": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.DateTime",
    "marshmallow.fields.String",
    "marshmallow.validate.Equal",
    "superset.commands.importers.v1.utils.IMPORT_VERSION",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.commands.importers.v1.utils.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.utils.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.utils.ValidationError": {
  "data": {
   "shadows": "marshmallow.exceptions.ValidationError"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.utils.fields": {
  "data": {
   "shadows": "marshmallow.fields"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.utils.is_valid_config": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bool",
    "pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.commands.importers.v1.utils.load_metadata": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "marshmallow.exceptions.ValidationError",
    "str",
    "superset.commands.importers.exceptions.IncorrectVersionError",
    "superset.commands.importers.v1.utils.METADATA_FILE_NAME",
    "superset.commands.importers.v1.utils.MetadataSchema",
    "superset.commands.importers.v1.utils.load_yaml",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.commands.importers.v1.utils.load_yaml": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "marshmallow.exceptions.ValidationError",
    "str",
    "superset.commands.importers.v1.utils.logger",
    "superset.commands.importers.v1.utils.yaml",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.commands.importers.v1.utils.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.commands.importers.v1.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.utils.remove_root": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.commands.importers.v1.utils.validate": {
  "data": {
   "shadows": "marshmallow.validate"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.utils.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "superset.commands.importers.v1.validate": {
  "data": {
   "shadows": "marshmallow.validate"
  },
  "type": "import"
 },
 "superset.commands.utils": {
  "data": {},
  "type": "module"
 },
 "superset.commands.utils.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.commands.utils.ConnectorRegistry": {
  "data": {
   "shadows": "superset.connectors.connector_registry.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.commands.utils.DatasetNotFoundError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetNotFoundError"
  },
  "type": "import"
 },
 "superset.commands.utils.DatasourceNotFoundValidationError": {
  "data": {
   "shadows": "superset.commands.exceptions.DatasourceNotFoundValidationError"
  },
  "type": "import"
 },
 "superset.commands.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.commands.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.commands.utils.OwnersNotFoundValidationError": {
  "data": {
   "shadows": "superset.commands.exceptions.OwnersNotFoundValidationError"
  },
  "type": "import"
 },
 "superset.commands.utils.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.commands.utils.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.commands.utils.get_datasource_by_id": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "int",
    "str",
    "superset.commands.exceptions.DatasourceNotFoundValidationError",
    "superset.connectors.base.models.BaseDatasource",
    "superset.connectors.connector_registry.ConnectorRegistry.get_datasource",
    "superset.datasets.commands.exceptions.DatasetNotFoundError",
    "superset.extensions.db.session"
   ]
  },
  "type": "function"
 },
 "superset.commands.utils.populate_owners": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "list",
    "superset.commands.exceptions.OwnersNotFoundValidationError",
    "superset.extensions.security_manager.get_user_by_id",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.commands.utils.security_manager": {
  "data": {
   "shadows": "superset.extensions.security_manager"
  },
  "type": "import"
 },
 "superset.common": {
  "data": {},
  "type": "module"
 },
 "superset.common.query_context": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.app.config",
    "superset.common.query_context.config",
    "superset.common.query_context.logging",
    "superset.stats_logger.BaseStatsLogger"
   ]
  },
  "type": "module"
 },
 "superset.common.query_context.AnnotationLayerDAO": {
  "data": {
   "shadows": "superset.annotation_layers.dao.AnnotationLayerDAO"
  },
  "type": "import"
 },
 "superset.common.query_context.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.common.query_context.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.common.query_context.BaseStatsLogger": {
  "data": {
   "shadows": "superset.stats_logger.BaseStatsLogger"
  },
  "type": "import"
 },
 "superset.common.query_context.CacheLoadError": {
  "data": {
   "shadows": "superset.exceptions.CacheLoadError"
  },
  "type": "import"
 },
 "superset.common.query_context.ChartDAO": {
  "data": {
   "shadows": "superset.charts.dao.ChartDAO"
  },
  "type": "import"
 },
 "superset.common.query_context.ClassVar": {
  "data": {
   "shadows": "typing.ClassVar"
  },
  "type": "import"
 },
 "superset.common.query_context.ConnectorRegistry": {
  "data": {
   "shadows": "superset.connectors.connector_registry.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.common.query_context.DTTM_ALIAS": {
  "data": {
   "shadows": "superset.utils.core.DTTM_ALIAS"
  },
  "type": "import"
 },
 "superset.common.query_context.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.common.query_context.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.common.query_context.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.common.query_context.QueryContext": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "superset.common.query_object.QueryObject",
    "superset.connectors.base.models.BaseDatasource",
    "superset.utils.core.ChartDataResultFormat",
    "superset.utils.core.ChartDataResultType",
    "typing.ClassVar",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.common.query_context.QueryContext.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "superset.common.query_object.QueryObject",
    "superset.connectors.connector_registry.ConnectorRegistry.get_datasource",
    "superset.db.session",
    "superset.utils.core.ChartDataResultFormat",
    "superset.utils.core.ChartDataResultFormat.JSON",
    "superset.utils.core.ChartDataResultType",
    "superset.utils.core.ChartDataResultType.FULL",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.common.query_context.QueryContext.cache_key": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "str",
    "superset.utils.cache.generate_cache_key",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.common.query_context.QueryContext.cache_timeout": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "property",
    "superset.common.query_context.config"
   ]
  },
  "type": "function"
 },
 "superset.common.query_context.QueryContext.df_metrics_to_num": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.to_numeric",
    "staticmethod",
    "superset.common.query_object.QueryObject"
   ]
  },
  "type": "function"
 },
 "superset.common.query_context.QueryContext.get_annotation_data": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "str",
    "superset.common.query_object.QueryObject",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.common.query_context.QueryContext.get_data": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.RangeIndex",
    "str",
    "superset.common.query_context.config",
    "superset.utils.core.ChartDataResultFormat.CSV",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.common.query_context.QueryContext.get_df_payload": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "flask_babel.gettext",
    "len",
    "pandas.DataFrame",
    "str",
    "superset.common.query_context.logger",
    "superset.common.query_object.QueryObject",
    "superset.exceptions.CacheLoadError",
    "superset.exceptions.QueryObjectValidationError",
    "superset.extensions.cache_manager.data_cache",
    "superset.extensions.cache_manager.data_cache.get",
    "superset.utils.cache.set_and_log_cache",
    "superset.utils.core.QueryStatus.FAILED",
    "superset.utils.core.QueryStatus.SUCCESS",
    "superset.utils.core.error_msg_from_exception",
    "superset.utils.core.get_column_names_from_metrics",
    "superset.utils.core.get_stacktrace",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.common.query_context.QueryContext.get_native_annotation_data": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "getattr",
    "staticmethod",
    "str",
    "superset.annotation_layers.dao.AnnotationLayerDAO.find_by_ids",
    "superset.common.query_object.QueryObject",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.common.query_context.QueryContext.get_payload": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "str",
    "superset.extensions.cache_manager.cache",
    "superset.utils.cache.set_and_log_cache",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.common.query_context.QueryContext.get_query_result": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "datetime.timedelta",
    "numpy.inf",
    "numpy.nan",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "str",
    "superset.common.query_object.QueryObject",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.core.DTTM_ALIAS.apply",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.common.query_context.QueryContext.get_single_payload": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "min",
    "set",
    "str",
    "superset.common.query_context.config",
    "superset.common.query_context.copy",
    "superset.common.query_context.math",
    "superset.common.query_object.QueryObject",
    "superset.utils.core.ChartDataResultType.QUERY",
    "superset.utils.core.ChartDataResultType.RESULTS",
    "superset.utils.core.ChartDataResultType.SAMPLES",
    "superset.utils.core.QueryStatus.FAILED",
    "superset.utils.core.get_time_filter_status",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.common.query_context.QueryContext.get_viz_annotation_data": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "bool",
    "staticmethod",
    "str",
    "superset.charts.dao.ChartDAO.find_by_id",
    "superset.exceptions.QueryObjectValidationError",
    "superset.exceptions.SupersetException",
    "superset.utils.core.error_msg_from_exception",
    "superset.views.utils.get_viz",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.common.query_context.QueryContext.query_cache_key": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "str",
    "superset.common.query_object.QueryObject",
    "superset.extensions.security_manager.get_rls_ids",
    "superset.is_feature_enabled",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.common.query_context.QueryContext.raise_for_access": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "superset.extensions.security_manager.raise_for_access"
   ]
  },
  "type": "function"
 },
 "superset.common.query_context.QueryObject": {
  "data": {
   "shadows": "superset.common.query_object.QueryObject"
  },
  "type": "import"
 },
 "superset.common.query_context.QueryObjectValidationError": {
  "data": {
   "shadows": "superset.exceptions.QueryObjectValidationError"
  },
  "type": "import"
 },
 "superset.common.query_context.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.common.query_context.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.common.query_context._": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.common.query_context.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.common.query_context.cache_manager": {
  "data": {
   "shadows": "superset.extensions.cache_manager"
  },
  "type": "import"
 },
 "superset.common.query_context.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.common.query_context.config": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "superset.common.query_context.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "superset.common.query_context.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.common.query_context.generate_cache_key": {
  "data": {
   "shadows": "superset.utils.cache.generate_cache_key"
  },
  "type": "import"
 },
 "superset.common.query_context.get_viz": {
  "data": {
   "shadows": "superset.views.utils.get_viz"
  },
  "type": "import"
 },
 "superset.common.query_context.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.common.query_context.logger": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "superset.common.query_context.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.common.query_context.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "superset.common.query_context.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "superset.common.query_context.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.common.query_context.security_manager": {
  "data": {
   "shadows": "superset.extensions.security_manager"
  },
  "type": "import"
 },
 "superset.common.query_context.set_and_log_cache": {
  "data": {
   "shadows": "superset.utils.cache.set_and_log_cache"
  },
  "type": "import"
 },
 "superset.common.query_context.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.common.query_context.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.common.query_object": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.app.config",
    "superset.common.query_object.DeprecatedField",
    "superset.common.query_object.logging"
   ]
  },
  "type": "module"
 },
 "superset.common.query_object.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.common.query_object.DEPRECATED_EXTRAS_FIELDS": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "superset.common.query_object.DEPRECATED_FIELDS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "superset.common.query_object.DTTM_ALIAS": {
  "data": {
   "shadows": "superset.utils.core.DTTM_ALIAS"
  },
  "type": "import"
 },
 "superset.common.query_object.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "superset.common.query_object.DeprecatedField": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "str",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "superset.common.query_object.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.common.query_object.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.common.query_object.Metric": {
  "data": {
   "shadows": "superset.typing.Metric"
  },
  "type": "import"
 },
 "superset.common.query_object.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "superset.common.query_object.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.common.query_object.QueryObject": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime",
    "datetime.timedelta",
    "filter",
    "int",
    "str",
    "superset.typing.Metric",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "superset.common.query_object.QueryObject.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "bool",
    "hasattr",
    "int",
    "isinstance",
    "setattr",
    "str",
    "superset.common.query_object.DEPRECATED_EXTRAS_FIELDS",
    "superset.common.query_object.DEPRECATED_FIELDS",
    "superset.common.query_object.config",
    "superset.common.query_object.logger",
    "superset.is_feature_enabled",
    "superset.typing.Metric",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.date_parser.get_since_until",
    "superset.utils.date_parser.parse_human_timedelta",
    "superset.views.utils.get_time_range_endpoints",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.common.query_object.QueryObject.cache_key": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "str",
    "superset.common.query_object.hashlib",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.common.query_object.QueryObject.exec_post_processing": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "flask_babel.gettext",
    "getattr",
    "hasattr",
    "pandas.DataFrame",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.pandas_postprocessing"
   ]
  },
  "type": "function"
 },
 "superset.common.query_object.QueryObject.json_dumps": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "bool",
    "simplejson.dumps",
    "staticmethod",
    "str",
    "superset.utils.core.json_int_dttm_ser",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.common.query_object.QueryObject.metric_names": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.utils.core.get_metric_names",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.common.query_object.QueryObject.to_dict": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "str",
    "superset.is_feature_enabled",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.common.query_object.QueryObjectValidationError": {
  "data": {
   "shadows": "superset.exceptions.QueryObjectValidationError"
  },
  "type": "import"
 },
 "superset.common.query_object.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.common.query_object._": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.common.query_object.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.common.query_object.config": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.common.query_object.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.common.query_object.get_metric_names": {
  "data": {
   "shadows": "superset.utils.core.get_metric_names"
  },
  "type": "import"
 },
 "superset.common.query_object.get_since_until": {
  "data": {
   "shadows": "superset.utils.date_parser.get_since_until"
  },
  "type": "import"
 },
 "superset.common.query_object.get_time_range_endpoints": {
  "data": {
   "shadows": "superset.views.utils.get_time_range_endpoints"
  },
  "type": "import"
 },
 "superset.common.query_object.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "superset.common.query_object.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.common.query_object.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.common.query_object.json_int_dttm_ser": {
  "data": {
   "shadows": "superset.utils.core.json_int_dttm_ser"
  },
  "type": "import"
 },
 "superset.common.query_object.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.common.query_object.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.common.query_object.pandas_postprocessing": {
  "data": {
   "shadows": "superset.utils.pandas_postprocessing"
  },
  "type": "import"
 },
 "superset.common.query_object.parse_human_timedelta": {
  "data": {
   "shadows": "superset.utils.date_parser.parse_human_timedelta"
  },
  "type": "import"
 },
 "superset.common.query_object.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.common.tags": {
  "data": {},
  "type": "module"
 },
 "superset.common.tags.Engine": {
  "data": {
   "shadows": "sqlalchemy.engine.Engine"
  },
  "type": "import"
 },
 "superset.common.tags.IntegrityError": {
  "data": {
   "shadows": "sqlalchemy.exc.IntegrityError"
  },
  "type": "import"
 },
 "superset.common.tags.Metadata": {
  "data": {
   "shadows": "sqlalchemy.Metadata"
  },
  "type": "import"
 },
 "superset.common.tags.ObjectTypes": {
  "data": {
   "shadows": "superset.models.tags.ObjectTypes"
  },
  "type": "import"
 },
 "superset.common.tags.TagTypes": {
  "data": {
   "shadows": "superset.models.tags.TagTypes"
  },
  "type": "import"
 },
 "superset.common.tags.add_favorites": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "sqlalchemy.Metadata",
    "sqlalchemy.engine.Engine",
    "sqlalchemy.exc.IntegrityError",
    "sqlalchemy.sql.and_",
    "sqlalchemy.sql.func.lower",
    "sqlalchemy.sql.functions.concat",
    "sqlalchemy.sql.join",
    "sqlalchemy.sql.select",
    "superset.models.tags.TagTypes.type"
   ]
  },
  "type": "function"
 },
 "superset.common.tags.add_owners": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "sqlalchemy.Metadata",
    "sqlalchemy.engine.Engine",
    "sqlalchemy.exc.IntegrityError",
    "sqlalchemy.sql.and_",
    "sqlalchemy.sql.functions.concat",
    "sqlalchemy.sql.join",
    "sqlalchemy.sql.literal",
    "sqlalchemy.sql.select",
    "superset.models.tags.ObjectTypes.chart.name",
    "superset.models.tags.ObjectTypes.dashboard.name",
    "superset.models.tags.ObjectTypes.query.name",
    "superset.models.tags.TagTypes.owner"
   ]
  },
  "type": "function"
 },
 "superset.common.tags.add_types": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sqlalchemy.Metadata",
    "sqlalchemy.engine.Engine",
    "sqlalchemy.exc.IntegrityError",
    "sqlalchemy.sql.and_",
    "sqlalchemy.sql.join",
    "sqlalchemy.sql.literal",
    "sqlalchemy.sql.select",
    "superset.models.tags.ObjectTypes.__members__",
    "superset.models.tags.ObjectTypes.chart.name",
    "superset.models.tags.ObjectTypes.dashboard.name",
    "superset.models.tags.ObjectTypes.query.name",
    "superset.models.tags.TagTypes.type"
   ]
  },
  "type": "function"
 },
 "superset.common.tags.and_": {
  "data": {
   "shadows": "sqlalchemy.sql.and_"
  },
  "type": "import"
 },
 "superset.common.tags.func": {
  "data": {
   "shadows": "sqlalchemy.sql.func"
  },
  "type": "import"
 },
 "superset.common.tags.functions": {
  "data": {
   "shadows": "sqlalchemy.sql.functions"
  },
  "type": "import"
 },
 "superset.common.tags.join": {
  "data": {
   "shadows": "sqlalchemy.sql.join"
  },
  "type": "import"
 },
 "superset.common.tags.literal": {
  "data": {
   "shadows": "sqlalchemy.sql.literal"
  },
  "type": "import"
 },
 "superset.common.tags.select": {
  "data": {
   "shadows": "sqlalchemy.sql.select"
  },
  "type": "import"
 },
 "superset.conf": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.config": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "bool",
    "cachelib.base.BaseCache",
    "collections.OrderedDict",
    "datetime.date",
    "dateutil.tz.tzutc",
    "dir",
    "flask.Blueprint",
    "flask_appbuilder.security.manager.AUTH_DB",
    "getattr",
    "list",
    "pandas.io.parsers.STR_NA_VALUES",
    "print",
    "setattr",
    "str",
    "superset.config.BASE_DIR",
    "superset.config.CONFIG_PATH_ENV_VAR",
    "superset.config.CSV_EXTENSIONS",
    "superset.config.CSV_TO_HIVE_UPLOAD_DIRECTORY",
    "superset.config.CeleryConfig",
    "superset.config.DATA_DIR",
    "superset.config.EXCEL_EXTENSIONS",
    "superset.config.PACKAGE_JSON_FILE",
    "superset.config.VERSION_INFO_FILE",
    "superset.config.VERSION_SHA_LENGTH",
    "superset.config.WEBDRIVER_BASEURL",
    "superset.config._try_json_readsha",
    "superset.config._try_json_readversion",
    "superset.config.cfg_path",
    "superset.config.imp",
    "superset.config.logger",
    "superset.config.logging",
    "superset.config.module",
    "superset.config.os",
    "superset.config.override_conf",
    "superset.config.superset_config",
    "superset.config.sys",
    "superset.jinja_context.BaseTemplateProcessor",
    "superset.stats_logger.DummyStatsLogger",
    "superset.typing.CacheConfig",
    "superset.utils.core.is_test",
    "superset.utils.log.DBEventLogger",
    "superset.utils.logging_configurator.DefaultLoggingConfigurator",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.TYPE_CHECKING",
    "typing.Type"
   ]
  },
  "type": "module"
 },
 "superset.config.ALERT_REPORTS_CRON_WINDOW_SIZE": {
  "data": {
   "lineno": 872
  },
  "type": "constant"
 },
 "superset.config.ALLOWED_EXTENSIONS": {
  "data": {
   "lineno": 459
  },
  "type": "constant"
 },
 "superset.config.APP_ICON": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "superset.config.APP_ICON_WIDTH": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "superset.config.APP_NAME": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "superset.config.AUTH_DB": {
  "data": {
   "shadows": "flask_appbuilder.security.manager.AUTH_DB"
  },
  "type": "import"
 },
 "superset.config.AUTH_TYPE": {
  "data": {
   "lineno": 237
  },
  "type": "constant"
 },
 "superset.config.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.config.BABEL_DEFAULT_FOLDER": {
  "data": {
   "lineno": 273
  },
  "type": "constant"
 },
 "superset.config.BABEL_DEFAULT_LOCALE": {
  "data": {
   "lineno": 271
  },
  "type": "constant"
 },
 "superset.config.BACKUP_COUNT": {
  "data": {
   "lineno": 538
  },
  "type": "constant"
 },
 "superset.config.BASE_DIR": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "superset.config.BUG_REPORT_URL": {
  "data": {
   "lineno": 947
  },
  "type": "constant"
 },
 "superset.config.BaseCache": {
  "data": {
   "shadows": "cachelib.base.BaseCache"
  },
  "type": "import"
 },
 "superset.config.BaseTemplateProcessor": {
  "data": {
   "shadows": "superset.jinja_context.BaseTemplateProcessor"
  },
  "type": "import"
 },
 "superset.config.Blueprint": {
  "data": {
   "shadows": "flask.Blueprint"
  },
  "type": "import"
 },
 "superset.config.CACHE_DEFAULT_TIMEOUT": {
  "data": {
   "lineno": 434
  },
  "type": "constant"
 },
 "superset.config.CELERY_CONFIG": {
  "data": {
   "lineno": 609
  },
  "type": "constant"
 },
 "superset.config.CONFIG_PATH_ENV_VAR": {
  "data": {
   "lineno": 766
  },
  "type": "constant"
 },
 "superset.config.CSV_DEFAULT_NA_NAMES": {
  "data": {
   "lineno": 742
  },
  "type": "constant"
 },
 "superset.config.CSV_EXPORT": {
  "data": {
   "lineno": 464
  },
  "type": "constant"
 },
 "superset.config.CSV_EXTENSIONS": {
  "data": {
   "lineno": 458
  },
  "type": "constant"
 },
 "superset.config.CSV_TO_HIVE_UPLOAD_DIRECTORY": {
  "data": {
   "lineno": 719
  },
  "type": "constant"
 },
 "superset.config.CSV_TO_HIVE_UPLOAD_S3_BUCKET": {
  "data": {
   "lineno": 715
  },
  "type": "constant"
 },
 "superset.config.CUSTOM_SECURITY_MANAGER": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "superset.config.CacheConfig": {
  "data": {
   "shadows": "superset.typing.CacheConfig"
  },
  "type": "import"
 },
 "superset.config.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.config.CeleryConfig": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "celery.schedules.crontab"
   ]
  },
  "type": "class"
 },
 "superset.config.DASHBOARD_TEMPLATE_ID": {
  "data": {
   "lineno": 834
  },
  "type": "constant"
 },
 "superset.config.DATASET_HEALTH_CHECK": {
  "data": {
   "lineno": 1085
  },
  "type": "constant"
 },
 "superset.config.DATA_DIR": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "superset.config.DBEventLogger": {
  "data": {
   "shadows": "superset.utils.log.DBEventLogger"
  },
  "type": "import"
 },
 "superset.config.DB_CONNECTION_MUTATOR": {
  "data": {
   "lineno": 851
  },
  "type": "constant"
 },
 "superset.config.DEBUG": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "superset.config.DEFAULT_DB_ID": {
  "data": {
   "lineno": 626
  },
  "type": "constant"
 },
 "superset.config.DEFAULT_MODULE_DS_MAP": {
  "data": {
   "lineno": 508
  },
  "type": "constant"
 },
 "superset.config.DEFAULT_RELATIVE_END_TIME": {
  "data": {
   "lineno": 962
  },
  "type": "constant"
 },
 "superset.config.DEFAULT_RELATIVE_START_TIME": {
  "data": {
   "lineno": 961
  },
  "type": "constant"
 },
 "superset.config.DEFAULT_SQLLAB_LIMIT": {
  "data": {
   "lineno": 570
  },
  "type": "constant"
 },
 "superset.config.DISPLAY_MAX_ROW": {
  "data": {
   "lineno": 566
  },
  "type": "constant"
 },
 "superset.config.DOCUMENTATION_ICON": {
  "data": {
   "lineno": 952
  },
  "type": "constant"
 },
 "superset.config.DOCUMENTATION_TEXT": {
  "data": {
   "lineno": 951
  },
  "type": "constant"
 },
 "superset.config.DOCUMENTATION_URL": {
  "data": {
   "lineno": 950
  },
  "type": "constant"
 },
 "superset.config.DRUID_ANALYSIS_TYPES": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "superset.config.DRUID_IS_ACTIVE": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "superset.config.DRUID_METADATA_LINKS_ENABLED": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "superset.config.DRUID_TZ": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "superset.config.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.config.DefaultLoggingConfigurator": {
  "data": {
   "shadows": "superset.utils.logging_configurator.DefaultLoggingConfigurator"
  },
  "type": "import"
 },
 "superset.config.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.config.DummyStatsLogger": {
  "data": {
   "shadows": "superset.stats_logger.DummyStatsLogger"
  },
  "type": "import"
 },
 "superset.config.EMAIL_ASYNC_TIME_LIMIT_SEC": {
  "data": {
   "lineno": 893
  },
  "type": "constant"
 },
 "superset.config.EMAIL_NOTIFICATIONS": {
  "data": {
   "lineno": 779
  },
  "type": "constant"
 },
 "superset.config.EMAIL_PAGE_RENDER_WAIT": {
  "data": {
   "lineno": 944
  },
  "type": "constant"
 },
 "superset.config.EMAIL_REPORTS_CRON_RESOLUTION": {
  "data": {
   "lineno": 889
  },
  "type": "constant"
 },
 "superset.config.EMAIL_REPORTS_SUBJECT_PREFIX": {
  "data": {
   "lineno": 908
  },
  "type": "constant"
 },
 "superset.config.EMAIL_REPORTS_USER": {
  "data": {
   "lineno": 907
  },
  "type": "constant"
 },
 "superset.config.EMAIL_REPORT_BCC_ADDRESS": {
  "data": {
   "lineno": 901
  },
  "type": "constant"
 },
 "superset.config.EMAIL_REPORT_FROM_ADDRESS": {
  "data": {
   "lineno": 897
  },
  "type": "constant"
 },
 "superset.config.ENABLE_ACCESS_REQUEST": {
  "data": {
   "lineno": 776
  },
  "type": "constant"
 },
 "superset.config.ENABLE_ALERTS": {
  "data": {
   "lineno": 868
  },
  "type": "constant"
 },
 "superset.config.ENABLE_CHUNK_ENCODING": {
  "data": {
   "lineno": 788
  },
  "type": "constant"
 },
 "superset.config.ENABLE_CORS": {
  "data": {
   "lineno": 446
  },
  "type": "constant"
 },
 "superset.config.ENABLE_JAVASCRIPT_CONTROLS": {
  "data": {
   "lineno": 831
  },
  "type": "constant"
 },
 "superset.config.ENABLE_PROXY_FIX": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "superset.config.ENABLE_SCHEDULED_EMAIL_REPORTS": {
  "data": {
   "lineno": 863
  },
  "type": "constant"
 },
 "superset.config.ENABLE_TIME_ROTATE": {
  "data": {
   "lineno": 533
  },
  "type": "constant"
 },
 "superset.config.ESTIMATE_QUERY_COST": {
  "data": {
   "lineno": 648
  },
  "type": "constant"
 },
 "superset.config.EVENT_LOGGER": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "superset.config.EXCEL_EXTENSIONS": {
  "data": {
   "lineno": 457
  },
  "type": "constant"
 },
 "superset.config.FAB_ADD_SECURITY_PERMISSION_VIEW": {
  "data": {
   "lineno": 796
  },
  "type": "constant"
 },
 "superset.config.FAB_ADD_SECURITY_PERMISSION_VIEWS_VIEW": {
  "data": {
   "lineno": 798
  },
  "type": "constant"
 },
 "superset.config.FAB_ADD_SECURITY_VIEWS": {
  "data": {
   "lineno": 795
  },
  "type": "constant"
 },
 "superset.config.FAB_ADD_SECURITY_VIEW_MENU_VIEW": {
  "data": {
   "lineno": 797
  },
  "type": "constant"
 },
 "superset.config.FAB_API_SWAGGER_UI": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "superset.config.FAVICONS": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "superset.config.FILENAME": {
  "data": {
   "lineno": 535
  },
  "type": "constant"
 },
 "superset.config.FILTER_SELECT_ROW_LIMIT": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "superset.config.FLASK_APP_MUTATOR": {
  "data": {
   "lineno": 772
  },
  "type": "constant"
 },
 "superset.config.FLASK_USE_RELOAD": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "superset.config.GLOBAL_ASYNC_QUERIES_JWT_COOKIE_NAME": {
  "data": {
   "lineno": 1050
  },
  "type": "constant"
 },
 "superset.config.GLOBAL_ASYNC_QUERIES_JWT_COOKIE_SECURE": {
  "data": {
   "lineno": 1051
  },
  "type": "constant"
 },
 "superset.config.GLOBAL_ASYNC_QUERIES_JWT_SECRET": {
  "data": {
   "lineno": 1052
  },
  "type": "constant"
 },
 "superset.config.GLOBAL_ASYNC_QUERIES_POLLING_DELAY": {
  "data": {
   "lineno": 1054
  },
  "type": "constant"
 },
 "superset.config.GLOBAL_ASYNC_QUERIES_REDIS_CONFIG": {
  "data": {
   "lineno": 1041
  },
  "type": "constant"
 },
 "superset.config.GLOBAL_ASYNC_QUERIES_REDIS_STREAM_LIMIT": {
  "data": {
   "lineno": 1048
  },
  "type": "constant"
 },
 "superset.config.GLOBAL_ASYNC_QUERIES_REDIS_STREAM_LIMIT_FIREHOSE": {
  "data": {
   "lineno": 1049
  },
  "type": "constant"
 },
 "superset.config.GLOBAL_ASYNC_QUERIES_REDIS_STREAM_PREFIX": {
  "data": {
   "lineno": 1047
  },
  "type": "constant"
 },
 "superset.config.GLOBAL_ASYNC_QUERIES_TRANSPORT": {
  "data": {
   "lineno": 1053
  },
  "type": "constant"
 },
 "superset.config.HIVE_POLL_INTERVAL": {
  "data": {
   "lineno": 821
  },
  "type": "constant"
 },
 "superset.config.IMG_UPLOAD_FOLDER": {
  "data": {
   "lineno": 425
  },
  "type": "constant"
 },
 "superset.config.IMG_UPLOAD_URL": {
  "data": {
   "lineno": 428
  },
  "type": "constant"
 },
 "superset.config.INTERVAL": {
  "data": {
   "lineno": 537
  },
  "type": "constant"
 },
 "superset.config.LANGUAGES": {
  "data": {
   "lineno": 290
  },
  "type": "constant"
 },
 "superset.config.LOGGING_CONFIGURATOR": {
  "data": {
   "lineno": 521
  },
  "type": "constant"
 },
 "superset.config.LOGO_TARGET_PATH": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "superset.config.LOG_FORMAT": {
  "data": {
   "lineno": 525
  },
  "type": "constant"
 },
 "superset.config.LOG_LEVEL": {
  "data": {
   "lineno": 526
  },
  "type": "constant"
 },
 "superset.config.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.config.MACHINE_AUTH_PROVIDER_CLASS": {
  "data": {
   "lineno": 886
  },
  "type": "constant"
 },
 "superset.config.MAPBOX_API_KEY": {
  "data": {
   "lineno": 556
  },
  "type": "constant"
 },
 "superset.config.MAX_TABLE_NAMES": {
  "data": {
   "lineno": 573
  },
  "type": "constant"
 },
 "superset.config.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.config.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "superset.config.PACKAGE_JSON_FILE": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "superset.config.PERMISSION_INSTRUCTIONS_LINK": {
  "data": {
   "lineno": 809
  },
  "type": "constant"
 },
 "superset.config.PRESTO_POLL_INTERVAL": {
  "data": {
   "lineno": 825
  },
  "type": "constant"
 },
 "superset.config.PREVENT_UNSAFE_DB_CONNECTIONS": {
  "data": {
   "lineno": 1009
  },
  "type": "constant"
 },
 "superset.config.PROXY_FIX_CONFIG": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "superset.config.QUERY_LOGGER": {
  "data": {
   "lineno": 553
  },
  "type": "constant"
 },
 "superset.config.QUERY_SEARCH_LIMIT": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "superset.config.RESULTS_BACKEND_USE_MSGPACK": {
  "data": {
   "lineno": 711
  },
  "type": "constant"
 },
 "superset.config.ROBOT_PERMISSION_ROLES": {
  "data": {
   "lineno": 764
  },
  "type": "constant"
 },
 "superset.config.ROLLOVER": {
  "data": {
   "lineno": 536
  },
  "type": "constant"
 },
 "superset.config.ROW_LIMIT": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "superset.config.SAMPLES_ROW_LIMIT": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "superset.config.SCHEDULED_EMAIL_DEBUG_MODE": {
  "data": {
   "lineno": 881
  },
  "type": "constant"
 },
 "superset.config.SCREENSHOT_LOAD_WAIT": {
  "data": {
   "lineno": 415
  },
  "type": "constant"
 },
 "superset.config.SCREENSHOT_LOCATE_WAIT": {
  "data": {
   "lineno": 414
  },
  "type": "constant"
 },
 "superset.config.SECRET_KEY": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "superset.config.SEND_FILE_MAX_AGE_DEFAULT": {
  "data": {
   "lineno": 1001
  },
  "type": "constant"
 },
 "superset.config.SESSION_COOKIE_HTTPONLY": {
  "data": {
   "lineno": 996
  },
  "type": "constant"
 },
 "superset.config.SESSION_COOKIE_SAMESITE": {
  "data": {
   "lineno": 998
  },
  "type": "constant"
 },
 "superset.config.SESSION_COOKIE_SECURE": {
  "data": {
   "lineno": 997
  },
  "type": "constant"
 },
 "superset.config.SHOW_STACKTRACE": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "superset.config.SILENCE_FAB": {
  "data": {
   "lineno": 793
  },
  "type": "constant"
 },
 "superset.config.SIP_15_DEFAULT_TIME_RANGE_ENDPOINTS": {
  "data": {
   "lineno": 1025
  },
  "type": "constant"
 },
 "superset.config.SIP_15_ENABLED": {
  "data": {
   "lineno": 1023
  },
  "type": "constant"
 },
 "superset.config.SIP_15_TOAST_MESSAGE": {
  "data": {
   "lineno": 1026
  },
  "type": "constant"
 },
 "superset.config.SLACK_API_TOKEN": {
  "data": {
   "lineno": 875
  },
  "type": "constant"
 },
 "superset.config.SLACK_PROXY": {
  "data": {
   "lineno": 876
  },
  "type": "constant"
 },
 "superset.config.SMTP_HOST": {
  "data": {
   "lineno": 780
  },
  "type": "constant"
 },
 "superset.config.SMTP_MAIL_FROM": {
  "data": {
   "lineno": 786
  },
  "type": "constant"
 },
 "superset.config.SMTP_PASSWORD": {
  "data": {
   "lineno": 785
  },
  "type": "constant"
 },
 "superset.config.SMTP_PORT": {
  "data": {
   "lineno": 784
  },
  "type": "constant"
 },
 "superset.config.SMTP_SSL": {
  "data": {
   "lineno": 782
  },
  "type": "constant"
 },
 "superset.config.SMTP_STARTTLS": {
  "data": {
   "lineno": 781
  },
  "type": "constant"
 },
 "superset.config.SMTP_USER": {
  "data": {
   "lineno": 783
  },
  "type": "constant"
 },
 "superset.config.SQLALCHEMY_CUSTOM_PASSWORD_STORE": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "superset.config.SQLALCHEMY_DATABASE_URI": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "superset.config.SQLALCHEMY_EXAMPLES_URI": {
  "data": {
   "lineno": 1005
  },
  "type": "constant"
 },
 "superset.config.SQLALCHEMY_TRACK_MODIFICATIONS": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "superset.config.SQLA_TABLE_MUTATOR": {
  "data": {
   "lineno": 1037
  },
  "type": "constant"
 },
 "superset.config.SQLLAB_ASYNC_TIME_LIMIT_SEC": {
  "data": {
   "lineno": 639
  },
  "type": "constant"
 },
 "superset.config.SQLLAB_CTAS_NO_LIMIT": {
  "data": {
   "lineno": 678
  },
  "type": "constant"
 },
 "superset.config.SQLLAB_DEFAULT_DBID": {
  "data": {
   "lineno": 635
  },
  "type": "constant"
 },
 "superset.config.SQLLAB_QUERY_COST_ESTIMATE_TIMEOUT": {
  "data": {
   "lineno": 644
  },
  "type": "constant"
 },
 "superset.config.SQLLAB_SAVE_WARNING_MESSAGE": {
  "data": {
   "lineno": 576
  },
  "type": "constant"
 },
 "superset.config.SQLLAB_SCHEDULE_WARNING_MESSAGE": {
  "data": {
   "lineno": 577
  },
  "type": "constant"
 },
 "superset.config.SQLLAB_TIMEOUT": {
  "data": {
   "lineno": 629
  },
  "type": "constant"
 },
 "superset.config.SQLLAB_VALIDATION_TIMEOUT": {
  "data": {
   "lineno": 632
  },
  "type": "constant"
 },
 "superset.config.SQL_MAX_ROW": {
  "data": {
   "lineno": 561
  },
  "type": "constant"
 },
 "superset.config.SQL_QUERY_MUTATOR": {
  "data": {
   "lineno": 860
  },
  "type": "constant"
 },
 "superset.config.SQL_VALIDATORS_BY_ENGINE": {
  "data": {
   "lineno": 965
  },
  "type": "constant"
 },
 "superset.config.STATS_LOGGER": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "superset.config.STORE_CACHE_KEYS_IN_METADATA_DB": {
  "data": {
   "lineno": 443
  },
  "type": "constant"
 },
 "superset.config.STR_NA_VALUES": {
  "data": {
   "shadows": "pandas.io.parsers.STR_NA_VALUES"
  },
  "type": "import"
 },
 "superset.config.SUPERSET_CELERY_WORKERS": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "superset.config.SUPERSET_DASHBOARD_PERIODICAL_REFRESH_LIMIT": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "superset.config.SUPERSET_DASHBOARD_PERIODICAL_REFRESH_WARNING_MESSAGE": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "superset.config.SUPERSET_DASHBOARD_POSITION_DATA_LIMIT": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "superset.config.SUPERSET_LOG_VIEW": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "superset.config.SUPERSET_WEBSERVER_ADDRESS": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "superset.config.SUPERSET_WEBSERVER_DOMAINS": {
  "data": {
   "lineno": 454
  },
  "type": "constant"
 },
 "superset.config.SUPERSET_WEBSERVER_PORT": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "superset.config.SUPERSET_WEBSERVER_PROTOCOL": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "superset.config.SUPERSET_WEBSERVER_TIMEOUT": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "superset.config.SUPERSET_WORKERS": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "superset.config.TALISMAN_CONFIG": {
  "data": {
   "lineno": 973
  },
  "type": "constant"
 },
 "superset.config.TALISMAN_ENABLED": {
  "data": {
   "lineno": 971
  },
  "type": "constant"
 },
 "superset.config.THUMBNAIL_SELENIUM_USER": {
  "data": {
   "lineno": 405
  },
  "type": "constant"
 },
 "superset.config.TIME_ROTATE_LOG_LEVEL": {
  "data": {
   "lineno": 534
  },
  "type": "constant"
 },
 "superset.config.TRACKING_URL_TRANSFORMER": {
  "data": {
   "lineno": 818
  },
  "type": "constant"
 },
 "superset.config.TROUBLESHOOTING_LINK": {
  "data": {
   "lineno": 802
  },
  "type": "constant"
 },
 "superset.config.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.config.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.config.UPLOAD_CHUNK_SIZE": {
  "data": {
   "lineno": 422
  },
  "type": "constant"
 },
 "superset.config.UPLOAD_FOLDER": {
  "data": {
   "lineno": 421
  },
  "type": "constant"
 },
 "superset.config.VERSION_INFO_FILE": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "superset.config.VERSION_SHA": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "superset.config.VERSION_SHA_LENGTH": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "superset.config.VERSION_STRING": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "superset.config.VIZ_ROW_LIMIT": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "superset.config.WEBDRIVER_AUTH_FUNC": {
  "data": {
   "lineno": 924
  },
  "type": "constant"
 },
 "superset.config.WEBDRIVER_BASEURL": {
  "data": {
   "lineno": 939
  },
  "type": "constant"
 },
 "superset.config.WEBDRIVER_BASEURL_USER_FRIENDLY": {
  "data": {
   "lineno": 941
  },
  "type": "constant"
 },
 "superset.config.WEBDRIVER_OPTION_ARGS": {
  "data": {
   "lineno": 932
  },
  "type": "constant"
 },
 "superset.config.WEBDRIVER_TYPE": {
  "data": {
   "lineno": 917
  },
  "type": "constant"
 },
 "superset.config.WEBDRIVER_WINDOW": {
  "data": {
   "lineno": 920
  },
  "type": "constant"
 },
 "superset.config.WTF_CSRF_ENABLED": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "superset.config.WTF_CSRF_EXEMPT_LIST": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "superset.config.WTF_CSRF_TIME_LIMIT": {
  "data": {
   "lineno": 805
  },
  "type": "constant"
 },
 "superset.config._try_json_readsha": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "Exception",
    "int",
    "open",
    "str",
    "superset.config.json",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.config._try_json_readversion": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "Exception",
    "open",
    "str",
    "superset.config.json",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.config.cfg_path": {
  "data": {
   "lineno": 1060
  },
  "type": "constant"
 },
 "superset.config.crontab": {
  "data": {
   "shadows": "celery.schedules.crontab"
  },
  "type": "import"
 },
 "superset.config.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "superset.config.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "superset.config.importlib.util": {
  "data": {
   "shadows": "importlib.util"
  },
  "type": "import"
 },
 "superset.config.is_test": {
  "data": {
   "shadows": "superset.utils.core.is_test"
  },
  "type": "import"
 },
 "superset.config.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.config.logger": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "superset.config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.config.models": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models"
  },
  "type": "import"
 },
 "superset.config.module": {
  "data": {
   "lineno": 1061
  },
  "type": "constant"
 },
 "superset.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "superset.config.override_conf": {
  "data": {
   "lineno": 1062
  },
  "type": "constant"
 },
 "superset.config.superset_config": {
  "data": {
   "shadows": "superset_config"
  },
  "type": "import"
 },
 "superset.config.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "superset.config.tz": {
  "data": {
   "shadows": "dateutil.tz"
  },
  "type": "import"
 },
 "superset.connectors": {
  "data": {},
  "type": "module"
 },
 "superset.connectors.base": {
  "data": {},
  "type": "module"
 },
 "superset.connectors.base.models": {
  "data": {},
  "type": "module"
 },
 "superset.connectors.base.models.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.connectors.base.models.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.connectors.base.models.BaseColumn": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "str",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.helpers.ImportExportMixin",
    "type",
    "typing.Any",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.connectors.base.models.BaseColumn.__repr__": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseColumn.data": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "property",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseColumn.expression": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseColumn.is_numeric": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "any",
    "bool",
    "map",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseColumn.is_string": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "any",
    "bool",
    "map",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseColumn.is_temporal": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "any",
    "bool",
    "map",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseColumn.python_date_format": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.security.sqla.models.User",
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "str",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.helpers.ImportExportMixin",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.connectors.base.models.BaseDatasource.__eq__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "NotImplemented",
    "bool",
    "isinstance",
    "object",
    "superset.connectors.base.models.BaseDatasource"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.__hash__": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "hash",
    "int"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.add_missing_metrics": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.column_class": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.column_formats": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.column_names": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "property",
    "sorted",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.columns_types": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.connection": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.data": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.connectors.base.models.json",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.data_for_slices": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "set",
    "str",
    "superset.connectors.base.models.COLUMN_FORM_DATA_PARAMS",
    "superset.connectors.base.models.METRIC_FORM_DATA_PARAMS",
    "superset.models.slice.Slice",
    "superset.utils.core.get_iterable",
    "superset.utils.core.get_metric_name",
    "superset.utils.core.is_adhoc_metric",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.datasource_name": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.default_query": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "sqlalchemy.orm.Query",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.dttm_cols": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.explore_url": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.external_metadata": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.filter_values_handler": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "bool",
    "handle_single_value",
    "isinstance",
    "list",
    "staticmethod",
    "superset.typing.FilterValues",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.filter_values_handler.handle_single_value": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "superset.constants.NULL_STRING",
    "superset.typing.FilterValue",
    "superset.utils.core.cast_to_num",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.filterable_column_names": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "property",
    "sorted",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.get_column": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.get_extra_cache_keys": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "superset.typing.QueryObjectDict",
    "typing.Hashable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.get_fk_many_from_list": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "fkmany_class",
    "getattr",
    "setattr",
    "sqlalchemy.Column",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.List",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.get_query_str": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.kind": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.connectors.base.models.DatasourceKind"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.main_dttm_col": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.metric_class": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.name": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.query": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "NotImplementedError",
    "superset.models.helpers.QueryResult",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.raise_for_access": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "superset.security_manager.raise_for_access"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.schema": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.select_star": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.short_data": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.slices": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "sqlalchemy.and_",
    "sqlalchemy.ext.declarative.declared_attr",
    "sqlalchemy.orm.RelationshipProperty",
    "sqlalchemy.orm.foreign",
    "sqlalchemy.orm.relationship",
    "superset.models.slice.Slice.datasource_id",
    "superset.models.slice.Slice.datasource_type"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.type": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.uid": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.update_from_object": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "setattr",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.url": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseDatasource.values_for_column": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "str",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseMetric": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "str",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.helpers.ImportExportMixin",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.connectors.base.models.BaseMetric.data": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "getattr",
    "property",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseMetric.expression": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.BaseMetric.perm": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.models.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "superset.connectors.base.models.COLUMN_FORM_DATA_PARAMS": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "superset.connectors.base.models.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.connectors.base.models.DatasourceKind": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.connectors.base.models.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.connectors.base.models.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "superset.connectors.base.models.FilterValue": {
  "data": {
   "shadows": "superset.typing.FilterValue"
  },
  "type": "import"
 },
 "superset.connectors.base.models.FilterValues": {
  "data": {
   "shadows": "superset.typing.FilterValues"
  },
  "type": "import"
 },
 "superset.connectors.base.models.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "superset.connectors.base.models.ImportExportMixin": {
  "data": {
   "shadows": "superset.models.helpers.ImportExportMixin"
  },
  "type": "import"
 },
 "superset.connectors.base.models.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.connectors.base.models.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.connectors.base.models.METRIC_FORM_DATA_PARAMS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.connectors.base.models.NULL_STRING": {
  "data": {
   "shadows": "superset.constants.NULL_STRING"
  },
  "type": "import"
 },
 "superset.connectors.base.models.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.connectors.base.models.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.Query"
  },
  "type": "import"
 },
 "superset.connectors.base.models.QueryObjectDict": {
  "data": {
   "shadows": "superset.typing.QueryObjectDict"
  },
  "type": "import"
 },
 "superset.connectors.base.models.QueryResult": {
  "data": {
   "shadows": "superset.models.helpers.QueryResult"
  },
  "type": "import"
 },
 "superset.connectors.base.models.RelationshipProperty": {
  "data": {
   "shadows": "sqlalchemy.orm.RelationshipProperty"
  },
  "type": "import"
 },
 "superset.connectors.base.models.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.connectors.base.models.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.connectors.base.models.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.connectors.base.models.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.connectors.base.models.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.connectors.base.models.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.connectors.base.models.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "superset.connectors.base.models.declared_attr": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declared_attr"
  },
  "type": "import"
 },
 "superset.connectors.base.models.foreign": {
  "data": {
   "shadows": "sqlalchemy.orm.foreign"
  },
  "type": "import"
 },
 "superset.connectors.base.models.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.connectors.base.models.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.connectors.base.models.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.connectors.base.models.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.connectors.base.views": {
  "data": {},
  "type": "module"
 },
 "superset.connectors.base.views.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.connectors.base.views.BS3TextFieldROWidget": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "flask_appbuilder.fieldwidgets.BS3TextFieldWidget"
   ]
  },
  "type": "class"
 },
 "superset.connectors.base.views.BS3TextFieldROWidget.__call__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "flask.Markup",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.views.BS3TextFieldWidget": {
  "data": {
   "shadows": "flask_appbuilder.fieldwidgets.BS3TextFieldWidget"
  },
  "type": "import"
 },
 "superset.connectors.base.views.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.connectors.base.views.DatasourceModelView": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "superset.views.base.SupersetModelView"
   ]
  },
  "type": "class"
 },
 "superset.connectors.base.views.DatasourceModelView.pre_delete": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "flask.Markup",
    "superset.connectors.base.models.BaseDatasource",
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "function"
 },
 "superset.connectors.base.views.Markup": {
  "data": {
   "shadows": "flask.Markup"
  },
  "type": "import"
 },
 "superset.connectors.base.views.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.connectors.base.views.SupersetModelView": {
  "data": {
   "shadows": "superset.views.base.SupersetModelView"
  },
  "type": "import"
 },
 "superset.connectors.connector_registry": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.connectors.connector_registry.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.connectors.connector_registry.ConnectorRegistry": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "str",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "superset.connectors.connector_registry.ConnectorRegistry.get_all_datasources": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.orm.Session",
    "superset.connectors.connector_registry.ConnectorRegistry",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.connector_registry.ConnectorRegistry.get_datasource": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "sqlalchemy.orm.Session",
    "str",
    "superset.datasets.commands.exceptions.DatasetNotFoundError"
   ]
  },
  "type": "function"
 },
 "superset.connectors.connector_registry.ConnectorRegistry.get_datasource_by_name": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.orm.Session",
    "str",
    "superset.connectors.connector_registry.ConnectorRegistry",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.connector_registry.ConnectorRegistry.get_eager_datasource": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "sqlalchemy.orm.Session",
    "sqlalchemy.orm.subqueryload",
    "str",
    "superset.connectors.connector_registry.ConnectorRegistry"
   ]
  },
  "type": "function"
 },
 "superset.connectors.connector_registry.ConnectorRegistry.query_datasources_by_name": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.orm.Session",
    "str",
    "superset.connectors.connector_registry.ConnectorRegistry",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.connector_registry.ConnectorRegistry.query_datasources_by_permissions": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.or_",
    "sqlalchemy.orm.Session",
    "str",
    "superset.connectors.connector_registry.ConnectorRegistry",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.connectors.connector_registry.ConnectorRegistry.register_sources": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "__import__",
    "classmethod",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.connector_registry.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.connectors.connector_registry.DatasetNotFoundError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetNotFoundError"
  },
  "type": "import"
 },
 "superset.connectors.connector_registry.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.connectors.connector_registry.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.connectors.connector_registry.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.connectors.connector_registry.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "superset.connectors.connector_registry.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.connectors.connector_registry.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.connectors.connector_registry.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.connectors.connector_registry.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.connectors.connector_registry.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.connectors.connector_registry.subqueryload": {
  "data": {
   "shadows": "sqlalchemy.orm.subqueryload"
  },
  "type": "import"
 },
 "superset.connectors.druid": {
  "data": {},
  "type": "module"
 },
 "superset.connectors.druid.models": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "__name__",
    "flask_appbuilder.Model.metadata",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Table",
    "sqlalchemy.event.listen",
    "superset.conf.get",
    "superset.connectors.druid.models.DruidCluster",
    "superset.connectors.druid.models.DruidDatasource",
    "superset.connectors.druid.models.logging",
    "superset.connectors.druid.models.metadata",
    "superset.is_feature_enabled",
    "superset.security_manager.set_perm"
   ]
  },
  "type": "module"
 },
 "superset.connectors.druid.models.Aggregation": {
  "data": {
   "shadows": "pydruid.utils.having.Aggregation"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.BaseColumn": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseColumn"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.BaseMetric": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseMetric"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Bound": {
  "data": {
   "shadows": "pydruid.utils.filters.Bound"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Const": {
  "data": {
   "shadows": "pydruid.utils.postaggregator.Const"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.CustomPostAggregator": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pydruid.utils.postaggregator.Postaggregator"
   ]
  },
  "type": "class"
 },
 "superset.connectors.druid.models.CustomPostAggregator.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DRUID_TZ": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "superset.connectors.druid.models.DTTM_ALIAS": {
  "data": {
   "shadows": "superset.utils.core.DTTM_ALIAS"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.DimSelector": {
  "data": {
   "shadows": "superset.utils.core.DimSelector"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Dimension": {
  "data": {
   "shadows": "pydruid.utils.filters.Dimension"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.DruidCluster": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy_utils.EncryptedType",
    "superset.conf.get",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.helpers.ImportExportMixin",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.connectors.druid.models.DruidCluster.__html__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidCluster.__repr__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidCluster.data": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidCluster.druid_version": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.utils.core.memoized"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidCluster.get_base_broker_url": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidCluster.get_base_url": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "str",
    "superset.connectors.druid.models.re"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidCluster.get_datasources": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "str",
    "superset.connectors.druid.models.json",
    "superset.connectors.druid.models.requests",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidCluster.get_druid_version": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "str",
    "superset.connectors.druid.models.json",
    "superset.connectors.druid.models.requests"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidCluster.get_perm": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidCluster.get_pydruid_client": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "pydruid.client.PyDruid"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidCluster.name": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidCluster.perm": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "sqlalchemy.String",
    "sqlalchemy.sql.expression.cast",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidCluster.refresh": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "DruidColumn",
    "DruidDatasource",
    "bool",
    "flask_babel.lazy_gettext",
    "len",
    "list",
    "multiprocessing.pool.ThreadPool",
    "range",
    "str",
    "superset.connectors.druid.models._fetch_metadata_for",
    "superset.connectors.druid.models.metadata",
    "superset.db.session",
    "superset.utils.core.flasher",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidCluster.refresh_datasources": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "bool",
    "filter",
    "list",
    "str",
    "superset.conf.get",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidCluster.unique_name": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidColumn": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "sqlalchemy.UniqueConstraint",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship",
    "superset.connectors.base.models.BaseColumn"
   ]
  },
  "type": "class"
 },
 "superset.connectors.druid.models.DruidColumn.__repr__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidColumn.dimension_spec": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.connectors.druid.models.json",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidColumn.expression": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidColumn.get_metrics": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "DruidMetric",
    "str",
    "superset.connectors.druid.models.json",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidColumn.refresh_metrics": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "DruidMetric",
    "DruidMetric.datasource_id",
    "DruidMetric.metric_name.in_",
    "getattr",
    "setattr",
    "superset.db.session.add",
    "superset.db.session.no_autoflush",
    "superset.db.session.query"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.UniqueConstraint",
    "sqlalchemy.orm.relationship",
    "superset.connectors.base.models.BaseDatasource",
    "superset.connectors.druid.models.DruidCluster",
    "superset.connectors.druid.models.DruidColumn",
    "superset.connectors.druid.models.DruidMetric",
    "superset.connectors.druid.models.druiddatasource_user",
    "superset.security_manager.user_model",
    "type",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "superset.connectors.druid.models.DruidDatasource.__repr__": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource._add_filter_from_pre_query_data": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pydruid.utils.filters.Dimension",
    "pydruid.utils.filters.Filter",
    "superset.connectors.druid.models.DruidDatasource",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource._create_extraction_fn": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "Exception",
    "flask_babel.lazy_gettext",
    "pydruid.utils.dimensions.MapLookupExtraction",
    "pydruid.utils.dimensions.RegexExtraction",
    "pydruid.utils.dimensions.RegisteredLookupExtraction",
    "pydruid.utils.dimensions.TimeFormatExtraction",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource._dimensions_to_values": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "staticmethod",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource._get_having_obj": {
  "data": {
   "lineno": 1625,
   "symbols_in_volume": [
    "pydruid.utils.having.Aggregation",
    "str",
    "superset.utils.core.DimSelector",
    "superset.utils.core.FilterOperator.EQUALS.value",
    "superset.utils.core.FilterOperator.GREATER_THAN.value",
    "superset.utils.core.FilterOperator.LESS_THAN.value"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource._get_ordering": {
  "data": {
   "lineno": 1621,
   "symbols_in_volume": [
    "bool",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.cluster_name": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.connectors.druid.models.DruidCluster",
    "superset.db.session.query"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.connection": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.database": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "property",
    "superset.connectors.druid.models.DruidCluster"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.datasource_link": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "flask.Markup",
    "flask.escape",
    "flask_appbuilder.models.decorators.renders",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.datasource_type": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.druid_type_from_adhoc_metric": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.external_metadata": {
  "data": {
   "lineno": 1681,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.find_postaggs_for": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "superset.connectors.druid.models.DruidMetric",
    "superset.connectors.druid.models.POST_AGG_TYPE",
    "typing.Dict",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.full_name": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.utils.core.get_datasource_full_name"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.get_aggregations": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "flask_babel.lazy_gettext",
    "len",
    "staticmethod",
    "str",
    "superset.connectors.druid.models.DruidDatasource",
    "superset.connectors.druid.models.POST_AGG_TYPE",
    "superset.exceptions.SupersetException",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.get_datasource_by_name": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls.datasource_name",
    "sqlalchemy.orm.Session",
    "str",
    "superset.connectors.druid.models.DruidCluster",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.get_dimensions": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "str",
    "superset.connectors.druid.models.DruidColumn",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.get_filters": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "classmethod",
    "cls._get_ordering",
    "cls.filter_values_handler",
    "len",
    "pydruid.utils.filters.Bound",
    "pydruid.utils.filters.Dimension",
    "pydruid.utils.filters.Filter",
    "str",
    "superset.connectors.druid.models.DruidColumn",
    "superset.connectors.druid.models.DruidDatasource",
    "superset.typing.FilterValues",
    "superset.utils.core.FilterOperator.EQUALS.value",
    "superset.utils.core.FilterOperator.GREATER_THAN.value",
    "superset.utils.core.FilterOperator.GREATER_THAN_OR_EQUALS.value",
    "superset.utils.core.FilterOperator.IN.value",
    "superset.utils.core.FilterOperator.IS_NOT_NULL.value",
    "superset.utils.core.FilterOperator.IS_NULL.value",
    "superset.utils.core.FilterOperator.LESS_THAN.value",
    "superset.utils.core.FilterOperator.LESS_THAN_OR_EQUALS.value",
    "superset.utils.core.FilterOperator.NOT_EQUALS.value",
    "superset.utils.core.FilterOperator.NOT_IN.value",
    "superset.utils.core.FilterOperator.REGEX.value",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.get_having_filters": {
  "data": {
   "lineno": 1639,
   "symbols_in_volume": [
    "all",
    "str",
    "superset.utils.core.FilterOperator.EQUALS.value",
    "superset.utils.core.FilterOperator.GREATER_THAN.value",
    "superset.utils.core.FilterOperator.GREATER_THAN_OR_EQUALS.value",
    "superset.utils.core.FilterOperator.LESS_THAN.value",
    "superset.utils.core.FilterOperator.LESS_THAN_OR_EQUALS.value",
    "superset.utils.core.FilterOperator.NOT_EQUALS.value",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.get_metric_obj": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.get_perm": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.get_post_agg": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "pydruid.utils.postaggregator.Const",
    "pydruid.utils.postaggregator.Field",
    "pydruid.utils.postaggregator.HyperUniqueCardinality",
    "pydruid.utils.postaggregator.Postaggregator",
    "pydruid.utils.postaggregator.Quantile",
    "pydruid.utils.postaggregator.Quantiles",
    "staticmethod",
    "str",
    "superset.connectors.druid.models.CustomPostAggregator",
    "superset.connectors.druid.models.JavascriptPostAggregator",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.get_query_str": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "int",
    "str",
    "superset.typing.QueryObjectDict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.get_schema_perm": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "str",
    "superset.security_manager.get_schema_perm",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.granularity": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "isinstance",
    "staticmethod",
    "str",
    "superset.utils.date_parser.parse_human_datetime",
    "superset.utils.date_parser.parse_human_timedelta",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.homogenize_types": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "staticmethod",
    "str",
    "superset.constants.NULL_STRING",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.intervals_from_dttms": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "datetime.datetime",
    "str",
    "superset.connectors.druid.models.DRUID_TZ"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.latest_metadata": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "datetime.datetime",
    "datetime.datetime.now",
    "datetime.timedelta",
    "dateutil.parser.parse",
    "distutils.version.LooseVersion",
    "str",
    "superset.connectors.druid.models.logger",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.link": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "flask.Markup",
    "flask.escape",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.metrics_and_post_aggs": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict",
    "isinstance",
    "set",
    "staticmethod",
    "str",
    "superset.connectors.druid.models.DruidDatasource",
    "superset.connectors.druid.models.DruidMetric",
    "superset.connectors.druid.models.POST_AGG_TYPE",
    "superset.typing.Metric",
    "superset.utils.core.is_adhoc_metric",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.name": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.num_cols": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.query": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "pandas.DataFrame",
    "str",
    "superset.connectors.druid.models.DruidDatasource",
    "superset.connectors.druid.models.IS_SIP_38",
    "superset.models.helpers.QueryResult",
    "superset.typing.QueryObjectDict",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.core.DTTM_ALIAS.apply",
    "superset.utils.core.get_metric_names",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.query.increment_timestamp": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "str",
    "superset.connectors.druid.models.DRUID_TZ",
    "superset.utils.date_parser.parse_human_datetime"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.query_datasources_by_name": {
  "data": {
   "lineno": 1671,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.orm.Session",
    "str",
    "superset.models.core.Database",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.recursive_get_fields": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "list",
    "set",
    "staticmethod",
    "str",
    "superset.connectors.druid.models.DruidDatasource",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.refresh_metrics": {
  "data": {
   "lineno": 642
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.resolve_postagg": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "len",
    "set",
    "staticmethod",
    "str",
    "superset.connectors.druid.models.DruidDatasource",
    "superset.connectors.druid.models.DruidMetric",
    "typing.Any",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.run_query": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "bool",
    "copy.deepcopy",
    "datetime.datetime",
    "dict",
    "distutils.version.LooseVersion",
    "filter",
    "int",
    "isinstance",
    "len",
    "list",
    "min",
    "pandas.DataFrame",
    "set",
    "str",
    "superset.conf.get",
    "superset.connectors.druid.models.DRUID_TZ",
    "superset.connectors.druid.models.DruidDatasource",
    "superset.connectors.druid.models.IS_SIP_38",
    "superset.connectors.druid.models.json",
    "superset.connectors.druid.models.logger",
    "superset.exceptions.SupersetException",
    "superset.typing.Metric",
    "superset.utils.core.get_metric_name",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.sanitize_metric_object": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "staticmethod",
    "superset.typing.Metric",
    "superset.utils.core.is_adhoc_metric"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.schema": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "len",
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.sync_to_db_from_config": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "cls",
    "flask_appbuilder.security.sqla.models.User",
    "str",
    "superset.connectors.druid.models.DruidCluster",
    "superset.connectors.druid.models.DruidColumn",
    "superset.connectors.druid.models.DruidMetric",
    "superset.connectors.druid.models.json",
    "superset.db.session",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.time_column_grains": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.time_offset": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "superset.typing.Granularity"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.update_from_object": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidDatasource.values_for_column": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.now",
    "dict",
    "int",
    "pydruid.utils.aggregators.count",
    "str",
    "superset.connectors.druid.models.logger",
    "superset.utils.date_parser.parse_human_datetime",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidMetric": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "sqlalchemy.UniqueConstraint",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship",
    "superset.connectors.base.models.BaseMetric",
    "superset.connectors.druid.models.json"
   ]
  },
  "type": "class"
 },
 "superset.connectors.druid.models.DruidMetric.expression": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "property",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidMetric.get_perm": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidMetric.json_obj": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "Exception",
    "property",
    "str",
    "superset.connectors.druid.models.json",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.DruidMetric.perm": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.EncryptedType": {
  "data": {
   "shadows": "sqlalchemy_utils.EncryptedType"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Field": {
  "data": {
   "shadows": "pydruid.utils.postaggregator.Field"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Filter": {
  "data": {
   "shadows": "pydruid.utils.filters.Filter"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.FilterOperator": {
  "data": {
   "shadows": "superset.utils.core.FilterOperator"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.FilterValues": {
  "data": {
   "shadows": "superset.typing.FilterValues"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Granularity": {
  "data": {
   "shadows": "superset.typing.Granularity"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Having": {
  "data": {
   "shadows": "pydruid.utils.having.Having"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.HyperUniqueCardinality": {
  "data": {
   "shadows": "pydruid.utils.postaggregator.HyperUniqueCardinality"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.IS_SIP_38": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "superset.connectors.druid.models.ImportExportMixin": {
  "data": {
   "shadows": "superset.models.helpers.ImportExportMixin"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.JavascriptPostAggregator": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pydruid.utils.postaggregator.Postaggregator"
   ]
  },
  "type": "class"
 },
 "superset.connectors.druid.models.JavascriptPostAggregator.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.MapLookupExtraction": {
  "data": {
   "shadows": "pydruid.utils.dimensions.MapLookupExtraction"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Markup": {
  "data": {
   "shadows": "flask.Markup"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Metric": {
  "data": {
   "shadows": "superset.typing.Metric"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.NULL_STRING": {
  "data": {
   "shadows": "superset.constants.NULL_STRING"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.POST_AGG_TYPE": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "superset.connectors.druid.models.Postaggregator": {
  "data": {
   "shadows": "pydruid.utils.postaggregator.Postaggregator"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.PyDruid": {
  "data": {
   "shadows": "pydruid.client.PyDruid"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Quantile": {
  "data": {
   "shadows": "pydruid.utils.postaggregator.Quantile"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Quantiles": {
  "data": {
   "shadows": "pydruid.utils.postaggregator.Quantiles"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.QueryObjectDict": {
  "data": {
   "shadows": "superset.typing.QueryObjectDict"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.QueryResult": {
  "data": {
   "shadows": "superset.models.helpers.QueryResult"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.RegexExtraction": {
  "data": {
   "shadows": "pydruid.utils.dimensions.RegexExtraction"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.RegisteredLookupExtraction": {
  "data": {
   "shadows": "pydruid.utils.dimensions.RegisteredLookupExtraction"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.ThreadPool": {
  "data": {
   "shadows": "multiprocessing.pool.ThreadPool"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.TimeFormatExtraction": {
  "data": {
   "shadows": "pydruid.utils.dimensions.TimeFormatExtraction"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.UniqueConstraint": {
  "data": {
   "shadows": "sqlalchemy.UniqueConstraint"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.connectors.druid.models._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.connectors.druid.models._fetch_metadata_for": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.models.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.conf": {
  "data": {
   "shadows": "superset.conf"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.count": {
  "data": {
   "shadows": "pydruid.utils.aggregators.count"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.dparse": {
  "data": {
   "shadows": "dateutil.parser.parse"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.druiddatasource_user": {
  "data": {
   "lineno": 438
  },
  "type": "constant"
 },
 "superset.connectors.druid.models.escape": {
  "data": {
   "shadows": "flask.escape"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.expression": {
  "data": {
   "shadows": "sqlalchemy.sql.expression"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.flasher": {
  "data": {
   "shadows": "superset.utils.core.flasher"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.hybrid_property": {
  "data": {
   "shadows": "sqlalchemy.ext.hybrid.hybrid_property"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.logger": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "superset.connectors.druid.models.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.metadata": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "superset.connectors.druid.models.parse_human_datetime": {
  "data": {
   "shadows": "superset.utils.date_parser.parse_human_datetime"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.parse_human_timedelta": {
  "data": {
   "shadows": "superset.utils.date_parser.parse_human_timedelta"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.renders": {
  "data": {
   "shadows": "flask_appbuilder.models.decorators.renders"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.connectors.druid.models.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.connectors.druid.views": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.connectors.druid.views.logging"
   ]
  },
  "type": "module"
 },
 "superset.connectors.druid.views.BS3TextFieldROWidget": {
  "data": {
   "shadows": "superset.connectors.base.views.BS3TextFieldROWidget"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.BaseSupersetView": {
  "data": {
   "shadows": "superset.views.base.BaseSupersetView"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.CompactCRUDMixin": {
  "data": {
   "shadows": "flask_appbuilder.CompactCRUDMixin"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.ConnectorRegistry": {
  "data": {
   "shadows": "superset.connectors.connector_registry.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.DatasourceFilter": {
  "data": {
   "shadows": "superset.views.base.DatasourceFilter"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.DatasourceModelView": {
  "data": {
   "shadows": "superset.connectors.base.views.DatasourceModelView"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.DeleteMixin": {
  "data": {
   "shadows": "superset.views.base.DeleteMixin"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.Druid": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "superset.views.base.BaseSupersetView"
   ]
  },
  "type": "class"
 },
 "superset.connectors.druid.views.Druid.refresh_datasources": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "datetime.datetime.now",
    "flask.flash",
    "flask.redirect",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "flask_babel.lazy_gettext",
    "superset.connectors.connector_registry.ConnectorRegistry.sources.cluster_class",
    "superset.connectors.druid.views.logger",
    "superset.db.session",
    "superset.typing.FlaskResponse",
    "superset.utils.core.error_msg_from_exception"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.views.Druid.scan_new_datasources": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.views.DruidClusterModelView": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.connectors.druid.models.DruidCluster",
    "superset.constants.RouteMethod.CRUD_SET",
    "superset.views.base.DeleteMixin",
    "superset.views.base.SupersetModelView",
    "superset.views.base.YamlExportMixin"
   ]
  },
  "type": "class"
 },
 "superset.connectors.druid.views.DruidClusterModelView._delete": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "int",
    "superset.views.base.DeleteMixin._delete"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.views.DruidClusterModelView.pre_add": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "superset.security_manager.add_permission_view_menu"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.views.DruidClusterModelView.pre_update": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "superset.connectors.druid.views.DruidColumnInlineView": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "flask_appbuilder.CompactCRUDMixin",
    "flask_appbuilder.fieldwidgets.Select2Widget",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.connectors.druid.models.DruidColumn",
    "superset.connectors.druid.models.DruidDatasource",
    "superset.constants.RouteMethod.RELATED_VIEW_SET",
    "superset.db.session.query",
    "superset.utils.core.markdown",
    "superset.views.base.ListWidgetWithCheckboxes",
    "superset.views.base.SupersetModelView",
    "wtforms.ext.sqlalchemy.fields.QuerySelectField"
   ]
  },
  "type": "class"
 },
 "superset.connectors.druid.views.DruidColumnInlineView.post_add": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "superset.connectors.druid.views.DruidColumnInlineView.post_update": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "superset.connectors.druid.views.DruidColumnInlineView.pre_update": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "str",
    "superset.connectors.druid.views.json"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.views.DruidDatasourceModelView": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "flask.Markup",
    "flask_appbuilder.fieldwidgets.Select2Widget",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.connectors.base.views.BS3TextFieldROWidget",
    "superset.connectors.base.views.DatasourceModelView",
    "superset.connectors.druid.models.DruidCluster",
    "superset.connectors.druid.models.DruidDatasource",
    "superset.connectors.druid.views.DruidColumnInlineView",
    "superset.connectors.druid.views.DruidMetricInlineView",
    "superset.constants.RouteMethod.CRUD_SET",
    "superset.db.session.query",
    "superset.views.base.DatasourceFilter",
    "superset.views.base.DeleteMixin",
    "superset.views.base.YamlExportMixin",
    "wtforms.StringField",
    "wtforms.ext.sqlalchemy.fields.QuerySelectField"
   ]
  },
  "type": "class"
 },
 "superset.connectors.druid.views.DruidDatasourceModelView._delete": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "int",
    "superset.views.base.DeleteMixin._delete"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.views.DruidDatasourceModelView.post_add": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "superset.security_manager.add_permission_view_menu"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.views.DruidDatasourceModelView.post_update": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "superset.connectors.druid.views.DruidDatasourceModelView.pre_add": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "Exception",
    "superset.connectors.druid.models.DruidDatasource",
    "superset.connectors.druid.models.DruidDatasource.cluster_id",
    "superset.connectors.druid.models.DruidDatasource.datasource_name",
    "superset.db.session.no_autoflush",
    "superset.db.session.query",
    "superset.views.base.get_dataset_exist_error_msg"
   ]
  },
  "type": "function"
 },
 "superset.connectors.druid.views.DruidMetricInlineView": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "flask_appbuilder.CompactCRUDMixin",
    "flask_appbuilder.fieldwidgets.Select2Widget",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.connectors.druid.models.DruidDatasource",
    "superset.connectors.druid.models.DruidMetric",
    "superset.constants.RouteMethod.RELATED_VIEW_SET",
    "superset.db.session.query",
    "superset.utils.core.markdown",
    "superset.views.base.SupersetModelView",
    "superset.views.base.validate_json",
    "wtforms.ext.sqlalchemy.fields.QuerySelectField"
   ]
  },
  "type": "class"
 },
 "superset.connectors.druid.views.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.ListWidgetWithCheckboxes": {
  "data": {
   "shadows": "superset.views.base.ListWidgetWithCheckboxes"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.Markup": {
  "data": {
   "shadows": "flask.Markup"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.QuerySelectField": {
  "data": {
   "shadows": "wtforms.ext.sqlalchemy.fields.QuerySelectField"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.Select2Widget": {
  "data": {
   "shadows": "flask_appbuilder.fieldwidgets.Select2Widget"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.StringField": {
  "data": {
   "shadows": "wtforms.StringField"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.SupersetModelView": {
  "data": {
   "shadows": "superset.views.base.SupersetModelView"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.YamlExportMixin": {
  "data": {
   "shadows": "superset.views.base.YamlExportMixin"
  },
  "type": "import"
 },
 "superset.connectors.druid.views._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.flash": {
  "data": {
   "shadows": "flask.flash"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.get_dataset_exist_error_msg": {
  "data": {
   "shadows": "superset.views.base.get_dataset_exist_error_msg"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.has_access": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.logger": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "superset.connectors.druid.views.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.models": {
  "data": {
   "shadows": "superset.connectors.druid.models"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.connectors.druid.views.validate_json": {
  "data": {
   "shadows": "superset.views.base.validate_json"
  },
  "type": "import"
 },
 "superset.connectors.sqla": {
  "data": {},
  "type": "module"
 },
 "superset.connectors.sqla.models": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "flask_appbuilder.Model.metadata",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Table",
    "sqlalchemy.event.listen",
    "superset.app.config",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.connectors.sqla.models.logging",
    "superset.connectors.sqla.models.metadata",
    "superset.security_manager.set_perm"
   ]
  },
  "type": "module"
 },
 "superset.connectors.sqla.models.Annotation": {
  "data": {
   "shadows": "superset.models.annotations.Annotation"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.AnnotationDatasource": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "superset.connectors.base.models.BaseDatasource",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.connectors.sqla.models.AnnotationDatasource.get_query_str": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.AnnotationDatasource.query": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "Exception",
    "datetime.timedelta",
    "pandas.DataFrame",
    "pandas.read_sql_query",
    "superset.connectors.sqla.models.logger",
    "superset.db.engine",
    "superset.db.session.query",
    "superset.models.annotations.Annotation",
    "superset.models.annotations.Annotation.end_dttm",
    "superset.models.annotations.Annotation.layer_id",
    "superset.models.annotations.Annotation.start_dttm",
    "superset.models.helpers.QueryResult",
    "superset.typing.QueryObjectDict",
    "superset.utils.core.QueryStatus.FAILED",
    "superset.utils.core.QueryStatus.SUCCESS",
    "superset.utils.core.error_msg_from_exception"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.AnnotationDatasource.values_for_column": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "str",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.BaseColumn": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseColumn"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.BaseMetric": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseMetric"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.BaseTemplateProcessor": {
  "data": {
   "shadows": "superset.jinja_context.BaseTemplateProcessor"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.ColumnElement": {
  "data": {
   "shadows": "sqlalchemy.sql.ColumnElement"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Enum": {
  "data": {
   "shadows": "sqlalchemy.Enum"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.ErrorLevel": {
  "data": {
   "shadows": "superset.errors.ErrorLevel"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.ExtraCache": {
  "data": {
   "shadows": "superset.jinja_context.ExtraCache"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Hashable": {
  "data": {
   "shadows": "typing.Hashable"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Label": {
  "data": {
   "shadows": "sqlalchemy.sql.expression.Label"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Markup": {
  "data": {
   "shadows": "flask.Markup"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.MetadataResult": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "list",
    "str",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "superset.connectors.sqla.models.Metric": {
  "data": {
   "shadows": "superset.typing.Metric"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.NULL_STRING": {
  "data": {
   "shadows": "superset.constants.NULL_STRING"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.ParsedQuery": {
  "data": {
   "shadows": "superset.sql_parse.ParsedQuery"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.Query"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.QueryObjectDict": {
  "data": {
   "shadows": "superset.typing.QueryObjectDict"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.QueryObjectValidationError": {
  "data": {
   "shadows": "superset.exceptions.QueryObjectValidationError"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.QueryResult": {
  "data": {
   "shadows": "superset.models.helpers.QueryResult"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.QueryStringExtended": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "str",
    "typing.List",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "superset.connectors.sqla.models.RLSFilterRoles": {
  "data": {
   "lineno": 1503
  },
  "type": "constant"
 },
 "superset.connectors.sqla.models.RLSFilterTables": {
  "data": {
   "lineno": 1511
  },
  "type": "constant"
 },
 "superset.connectors.sqla.models.RelationshipProperty": {
  "data": {
   "shadows": "sqlalchemy.orm.RelationshipProperty"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.RowLevelSecurityFilter": {
  "data": {
   "lineno": 1520,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Enum",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.relationship",
    "superset.connectors.sqla.models.RLSFilterRoles",
    "superset.connectors.sqla.models.RLSFilterTables",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.models.helpers.AuditMixinNullable",
    "superset.security_manager.role_model",
    "superset.utils.core.RowLevelSecurityFilterType"
   ]
  },
  "type": "class"
 },
 "superset.connectors.sqla.models.Select": {
  "data": {
   "shadows": "sqlalchemy.sql.expression.Select"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.SqlMetric": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "list",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship",
    "sqlalchemy.schema.UniqueConstraint",
    "sqlalchemy.sql.table",
    "superset.connectors.base.models.BaseMetric"
   ]
  },
  "type": "class"
 },
 "superset.connectors.sqla.models.SqlMetric.certification_details": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlMetric.certified_by": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlMetric.data": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "getattr",
    "property",
    "str",
    "super",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlMetric.get_extra_dict": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "TypeError",
    "str",
    "superset.connectors.sqla.models.json",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlMetric.get_perm": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlMetric.get_sqla_col": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.sql.literal_column",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlMetric.is_certified": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlMetric.perm": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaQuery": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "sqlalchemy.sql.expression.Select",
    "str",
    "typing.Any",
    "typing.List",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "superset.connectors.sqla.models.SqlaTable": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.distinct",
    "sqlalchemy.func.AVG",
    "sqlalchemy.func.COUNT",
    "sqlalchemy.func.MAX",
    "sqlalchemy.func.MIN",
    "sqlalchemy.func.SUM",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship",
    "sqlalchemy.schema.UniqueConstraint",
    "superset.connectors.base.models.BaseDatasource",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.connectors.sqla.models.TableColumn",
    "superset.connectors.sqla.models.sqlatable_user",
    "superset.security_manager.user_model",
    "type",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "superset.connectors.sqla.models.SqlaTable.__repr__": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable._get_sqla_row_level_filters": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "collections.defaultdict",
    "flask_babel.lazy_gettext",
    "int",
    "jinja2.exceptions.TemplateError",
    "list",
    "sqlalchemy.or_",
    "sqlalchemy.sql.text",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.jinja_context.BaseTemplateProcessor",
    "superset.security_manager.get_rls_filters",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable._get_timeseries_orderby": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "dict",
    "flask_babel.lazy_gettext",
    "isinstance",
    "sqlalchemy.Column",
    "str",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.connectors.sqla.models.TableColumn",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.Metric",
    "superset.utils.core.is_adhoc_metric",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable._get_top_groups": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "sqlalchemy.and_",
    "sqlalchemy.or_",
    "sqlalchemy.sql.ColumnElement",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.adhoc_metric_to_sqla": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.sql.column",
    "sqlalchemy.sql.literal_column",
    "str",
    "superset.utils.core.AdhocMetricExpressionType.SIMPLE",
    "superset.utils.core.AdhocMetricExpressionType.SQL",
    "superset.utils.core.get_metric_name",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.any_dttm_col": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.changed_by_name": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.changed_by_url": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.connection": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.data": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "property",
    "str",
    "super",
    "superset.utils.core.choicify",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.database_name": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.datasource_name": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.datasource_type": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.default_query": {
  "data": {
   "lineno": 1430,
   "symbols_in_volume": [
    "sqlalchemy.orm.Query",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.description_markeddown": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.utils.core.markdown"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.dttm_cols": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.external_metadata": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "Exception",
    "contextlib.closing",
    "flask_babel.lazy_gettext",
    "isinstance",
    "len",
    "sqlalchemy.types.TypeEngine",
    "str",
    "superset.errors.ErrorLevel.ERROR",
    "superset.errors.SupersetError",
    "superset.errors.SupersetErrorType.DATASOURCE_SECURITY_ACCESS_ERROR",
    "superset.exceptions.SupersetSecurityException",
    "superset.result_set.SupersetResultSet",
    "superset.sql_parse.ParsedQuery",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.extra_dict": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "TypeError",
    "property",
    "str",
    "superset.connectors.sqla.models.json",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.fetch_metadata": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "bool",
    "str",
    "superset.connectors.sqla.models.MetadataResult",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.connectors.sqla.models.TableColumn",
    "superset.connectors.sqla.models.config",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.db.session.query",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.full_name": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.utils.core.get_datasource_full_name"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.get_datasource_by_name": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.orm.Session",
    "str",
    "superset.models.core.Database",
    "superset.models.core.Database.database_name",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.get_extra_cache_keys": {
  "data": {
   "lineno": 1464,
   "symbols_in_volume": [
    "super",
    "superset.typing.QueryObjectDict",
    "typing.Hashable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.get_from_clause": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "jinja2.exceptions.TemplateError",
    "len",
    "sqlalchemy.sql.expression.TextAsFrom",
    "sqlalchemy.sql.table",
    "sqlalchemy.text",
    "superset.connectors.sqla.models.sqlparse",
    "superset.exceptions.QueryObjectValidationError",
    "superset.jinja_context.BaseTemplateProcessor",
    "superset.sql_parse.ParsedQuery",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.get_perm": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.get_query_str": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "str",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.get_query_str_extended": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "superset.connectors.sqla.models.QueryStringExtended",
    "superset.connectors.sqla.models.logger",
    "superset.connectors.sqla.models.sqlparse",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.get_schema_perm": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "str",
    "superset.security_manager.get_schema_perm",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.get_sqla_query": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "all",
    "bool",
    "collections.OrderedDict",
    "datetime.datetime",
    "dict",
    "dict.fromkeys",
    "direction",
    "filter",
    "flask_babel.lazy_gettext",
    "int",
    "isinstance",
    "jinja2.exceptions.TemplateError",
    "list",
    "sqlalchemy.Column",
    "sqlalchemy.and_",
    "sqlalchemy.asc",
    "sqlalchemy.desc",
    "sqlalchemy.or_",
    "sqlalchemy.select",
    "sqlalchemy.sql.ColumnElement",
    "sqlalchemy.sql.column",
    "sqlalchemy.sql.expression.Label",
    "sqlalchemy.sql.literal_column",
    "sqlalchemy.text",
    "str",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.connectors.sqla.models.SqlaQuery",
    "superset.connectors.sqla.models.TableColumn",
    "superset.constants.NULL_STRING",
    "superset.exceptions.QueryObjectValidationError",
    "superset.is_feature_enabled",
    "superset.typing.Metric",
    "superset.utils.core.FilterOperator.EQUALS.value",
    "superset.utils.core.FilterOperator.GREATER_THAN.value",
    "superset.utils.core.FilterOperator.GREATER_THAN_OR_EQUALS.value",
    "superset.utils.core.FilterOperator.IN.value",
    "superset.utils.core.FilterOperator.IS_NOT_NULL.value",
    "superset.utils.core.FilterOperator.IS_NULL.value",
    "superset.utils.core.FilterOperator.LESS_THAN.value",
    "superset.utils.core.FilterOperator.LESS_THAN_OR_EQUALS.value",
    "superset.utils.core.FilterOperator.LIKE.value",
    "superset.utils.core.FilterOperator.NOT_EQUALS.value",
    "superset.utils.core.FilterOperator.NOT_IN.value",
    "superset.utils.core.cast_to_num",
    "superset.utils.core.is_adhoc_metric",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.get_sqla_table": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "sqlalchemy.sql.table"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.get_sqla_table_object": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "sqlalchemy.Table"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.get_template_processor": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "superset.jinja_context.BaseTemplateProcessor",
    "superset.jinja_context.get_template_processor",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.has_extra_cache_key_calls": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "bool",
    "str",
    "superset.is_feature_enabled",
    "superset.jinja_context.ExtraCache.regex.search",
    "superset.security_manager.get_rls_filters",
    "superset.typing.QueryObjectDict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.health_check": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "bool",
    "check",
    "check.version",
    "superset.connectors.sqla.models.config",
    "superset.connectors.sqla.models.json",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.extensions.event_logger.log_context"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.health_check_message": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.html": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.link": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "flask.Markup",
    "flask.escape",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.make_sqla_column_compatible": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.mutate_query_from_config": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "sql_query_mutator",
    "str",
    "superset.connectors.sqla.models.config",
    "superset.security_manager",
    "superset.utils.core.get_username"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.name": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.num_cols": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.query": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime.now",
    "pandas.DataFrame",
    "superset.connectors.sqla.models.logger",
    "superset.models.helpers.QueryResult",
    "superset.typing.QueryObjectDict",
    "superset.utils.core.QueryStatus.FAILED",
    "superset.utils.core.QueryStatus.SUCCESS",
    "superset.utils.core.error_msg_from_exception"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.query.mutator": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.query_datasources_by_name": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.orm.Session",
    "str",
    "superset.models.core.Database",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.select_star": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.sql_url": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.time_column_grains": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.SqlaTable.values_for_column": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "int",
    "jinja2.exceptions.TemplateError",
    "pandas.read_sql_query",
    "sqlalchemy.select",
    "sqlalchemy.sql.text",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.SupersetError": {
  "data": {
   "shadows": "superset.errors.SupersetError"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.SupersetErrorType": {
  "data": {
   "shadows": "superset.errors.SupersetErrorType"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.SupersetResultSet": {
  "data": {
   "shadows": "superset.result_set.SupersetResultSet"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.TableColumn": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship",
    "sqlalchemy.schema.UniqueConstraint",
    "sqlalchemy.sql.table",
    "superset.connectors.base.models.BaseColumn"
   ]
  },
  "type": "class"
 },
 "superset.connectors.sqla.models.TableColumn.data": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "property",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.TableColumn.datasource": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "property",
    "sqlalchemy.orm.RelationshipProperty"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.TableColumn.dttm_sql_literal": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "int",
    "sqlalchemy.DateTime",
    "str",
    "superset.utils.core.TimeRangeEndpoint",
    "superset.utils.core.TimeRangeEndpoint.EXCLUSIVE",
    "superset.utils.core.TimeRangeEndpoint.INCLUSIVE",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.TableColumn.get_sqla_col": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.sql.column",
    "sqlalchemy.sql.literal_column",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.TableColumn.get_time_filter": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "sqlalchemy.DateTime",
    "sqlalchemy.and_",
    "sqlalchemy.sql.ColumnElement",
    "sqlalchemy.sql.text",
    "superset.utils.core.TimeRangeEndpoint",
    "superset.utils.core.TimeRangeEndpoint.EXCLUSIVE",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.TableColumn.get_timestamp_expression": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "sqlalchemy.DateTime",
    "sqlalchemy.sql.column",
    "sqlalchemy.sql.expression.Label",
    "sqlalchemy.sql.literal_column",
    "str",
    "superset.db_engine_specs.base.TimestampExpression",
    "superset.utils.core.DTTM_ALIAS",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.TableColumn.is_numeric": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "bool",
    "property",
    "superset.utils.core.DbColumnType.NUMERIC"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.TableColumn.is_string": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "bool",
    "property",
    "superset.utils.core.DbColumnType.STRING"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.TableColumn.is_temporal": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "bool",
    "property",
    "superset.utils.core.DbColumnType.TEMPORAL"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.models.TemplateError": {
  "data": {
   "shadows": "jinja2.exceptions.TemplateError"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.TextAsFrom": {
  "data": {
   "shadows": "sqlalchemy.sql.expression.TextAsFrom"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.TimestampExpression": {
  "data": {
   "shadows": "superset.db_engine_specs.base.TimestampExpression"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.TypeEngine": {
  "data": {
   "shadows": "sqlalchemy.types.TypeEngine"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.UniqueConstraint": {
  "data": {
   "shadows": "sqlalchemy.schema.UniqueConstraint"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.asc": {
  "data": {
   "shadows": "sqlalchemy.asc"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.column": {
  "data": {
   "shadows": "sqlalchemy.sql.column"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.config": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "superset.connectors.sqla.models.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.desc": {
  "data": {
   "shadows": "sqlalchemy.desc"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.escape": {
  "data": {
   "shadows": "flask.escape"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.event_logger": {
  "data": {
   "shadows": "superset.extensions.event_logger"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.get_template_processor": {
  "data": {
   "shadows": "superset.jinja_context.get_template_processor"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.literal_column": {
  "data": {
   "shadows": "sqlalchemy.sql.literal_column"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.logger": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "superset.connectors.sqla.models.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.metadata": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "superset.connectors.sqla.models.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.select": {
  "data": {
   "shadows": "sqlalchemy.select"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.sqlatable_user": {
  "data": {
   "lineno": 423
  },
  "type": "constant"
 },
 "superset.connectors.sqla.models.sqlparse": {
  "data": {
   "shadows": "sqlparse"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.table": {
  "data": {
   "shadows": "sqlalchemy.sql.table"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.text": {
  "data": {
   "shadows": "sqlalchemy.sql.text"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.connectors.sqla.models.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.connectors.sqla.views.logging"
   ]
  },
  "type": "module"
 },
 "superset.connectors.sqla.views.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.CompactCRUDMixin": {
  "data": {
   "shadows": "flask_appbuilder.CompactCRUDMixin"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.DatasourceFilter": {
  "data": {
   "shadows": "superset.views.base.DatasourceFilter"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.DatasourceModelView": {
  "data": {
   "shadows": "superset.connectors.base.views.DatasourceModelView"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.DeleteMixin": {
  "data": {
   "shadows": "superset.views.base.DeleteMixin"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.ListWidgetWithCheckboxes": {
  "data": {
   "shadows": "superset.views.base.ListWidgetWithCheckboxes"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.MODEL_VIEW_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.Markup": {
  "data": {
   "shadows": "flask.Markup"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.QuerySelectField": {
  "data": {
   "shadows": "wtforms.ext.sqlalchemy.fields.QuerySelectField"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.Regexp": {
  "data": {
   "shadows": "wtforms.validators.Regexp"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.RowLevelSecurityFiltersModelView": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.app.config",
    "superset.connectors.sqla.models.RowLevelSecurityFilter",
    "superset.connectors.sqla.views.RowLevelSecurityListWidget",
    "superset.views.base.DeleteMixin",
    "superset.views.base.SupersetListWidget",
    "superset.views.base.SupersetModelView",
    "typing.cast"
   ]
  },
  "type": "class"
 },
 "superset.connectors.sqla.views.RowLevelSecurityListWidget": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "superset.views.base.SupersetListWidget"
   ]
  },
  "type": "class"
 },
 "superset.connectors.sqla.views.RowLevelSecurityListWidget.__init__": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "flask.current_app.appbuilder",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.Select2Widget": {
  "data": {
   "shadows": "flask_appbuilder.fieldwidgets.Select2Widget"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.SqlMetricInlineView": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "flask_appbuilder.CompactCRUDMixin",
    "flask_appbuilder.fieldwidgets.Select2Widget",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.API_SET",
    "superset.constants.RouteMethod.RELATED_VIEW_SET",
    "superset.db.session.query",
    "superset.utils.core.markdown",
    "superset.views.base.SupersetModelView",
    "wtforms.ext.sqlalchemy.fields.QuerySelectField"
   ]
  },
  "type": "class"
 },
 "superset.connectors.sqla.views.SqlMetricInlineView.pre_add": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.SqlMetricInlineView.pre_delete": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.SqlMetricInlineView.pre_update": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.SupersetListWidget": {
  "data": {
   "shadows": "superset.views.base.SupersetListWidget"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.SupersetModelView": {
  "data": {
   "shadows": "superset.views.base.SupersetModelView"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.TableColumnInlineView": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "flask.Markup",
    "flask_appbuilder.CompactCRUDMixin",
    "flask_appbuilder.fieldwidgets.Select2Widget",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.connectors.sqla.models.TableColumn",
    "superset.connectors.sqla.views.re",
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.API_SET",
    "superset.constants.RouteMethod.RELATED_VIEW_SET",
    "superset.db.session.query",
    "superset.utils.core.markdown",
    "superset.views.base.ListWidgetWithCheckboxes",
    "superset.views.base.SupersetModelView",
    "wtforms.ext.sqlalchemy.fields.QuerySelectField",
    "wtforms.validators.Regexp"
   ]
  },
  "type": "class"
 },
 "superset.connectors.sqla.views.TableColumnInlineView.pre_add": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.TableColumnInlineView.pre_delete": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.TableColumnInlineView.pre_update": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.TableModelView": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "flask.Markup",
    "flask_appbuilder.fieldwidgets.Select2Widget",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.connectors.base.views.DatasourceModelView",
    "superset.connectors.sqla.models.Database",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.connectors.sqla.views.SqlMetricInlineView",
    "superset.connectors.sqla.views.TableColumnInlineView",
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.CRUD_SET",
    "superset.db.session.query",
    "superset.utils.core.markdown",
    "superset.views.base.DatasourceFilter",
    "superset.views.base.DeleteMixin",
    "superset.views.base.YamlExportMixin",
    "wtforms.ext.sqlalchemy.fields.QuerySelectField"
   ]
  },
  "type": "class"
 },
 "superset.connectors.sqla.views.TableModelView._delete": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "int",
    "superset.views.base.DeleteMixin._delete"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.TableModelView.edit": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "flask.redirect",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "isinstance",
    "str",
    "super",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.TableModelView.list": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "super",
    "superset.is_feature_enabled",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.TableModelView.post_add": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "bool",
    "flask.flash",
    "flask_babel.lazy_gettext",
    "superset.views.base.create_table_permissions"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.TableModelView.post_update": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.TableModelView.pre_add": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "superset.views.base.validate_sqlatable"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.TableModelView.pre_update": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.TableModelView.refresh": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "Exception",
    "RefreshResults",
    "flask.flash",
    "flask.redirect",
    "flask_appbuilder.actions.action",
    "flask_babel.gettext",
    "flask_babel.lazy_gettext",
    "isinstance",
    "len",
    "list",
    "superset.typing.FlaskResponse",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.connectors.sqla.views.TableModelView.refresh.RefreshResults": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataclasses.field",
    "dict",
    "list",
    "str",
    "superset.connectors.sqla.views.TableModelView",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "superset.connectors.sqla.views.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.YamlExportMixin": {
  "data": {
   "shadows": "superset.views.base.YamlExportMixin"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.__": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.action": {
  "data": {
   "shadows": "flask_appbuilder.actions.action"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.create_table_permissions": {
  "data": {
   "shadows": "superset.views.base.create_table_permissions"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.flash": {
  "data": {
   "shadows": "flask.flash"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.has_access": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "superset.connectors.sqla.views.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.models": {
  "data": {
   "shadows": "superset.connectors.sqla.models"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.connectors.sqla.views.validate_sqlatable": {
  "data": {
   "shadows": "superset.views.base.validate_sqlatable"
  },
  "type": "import"
 },
 "superset.constants": {
  "data": {},
  "type": "module"
 },
 "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "superset.constants.NULL_STRING": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "superset.constants.RouteMethod": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "superset.create_app": {
  "data": {
   "shadows": "superset.app.create_app"
  },
  "type": "import"
 },
 "superset.css_templates": {
  "data": {},
  "type": "module"
 },
 "superset.css_templates.api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.css_templates.api.logging"
   ]
  },
  "type": "module"
 },
 "superset.css_templates.api.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.css_templates.api.BaseSupersetModelRestApi": {
  "data": {
   "shadows": "superset.views.base_api.BaseSupersetModelRestApi"
  },
  "type": "import"
 },
 "superset.css_templates.api.BulkDeleteCssTemplateCommand": {
  "data": {
   "shadows": "superset.css_templates.commands.bulk_delete.BulkDeleteCssTemplateCommand"
  },
  "type": "import"
 },
 "superset.css_templates.api.CssTemplate": {
  "data": {
   "shadows": "superset.models.core.CssTemplate"
  },
  "type": "import"
 },
 "superset.css_templates.api.CssTemplateAllTextFilter": {
  "data": {
   "shadows": "superset.css_templates.filters.CssTemplateAllTextFilter"
  },
  "type": "import"
 },
 "superset.css_templates.api.CssTemplateBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.css_templates.commands.exceptions.CssTemplateBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.css_templates.api.CssTemplateNotFoundError": {
  "data": {
   "shadows": "superset.css_templates.commands.exceptions.CssTemplateNotFoundError"
  },
  "type": "import"
 },
 "superset.css_templates.api.CssTemplateRestApi": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.RELATED",
    "superset.constants.RouteMethod.REST_MODEL_VIEW_CRUD_SET",
    "superset.css_templates.filters.CssTemplateAllTextFilter",
    "superset.css_templates.schemas.get_delete_ids_schema",
    "superset.css_templates.schemas.openapi_spec_methods_override",
    "superset.models.core.CssTemplate",
    "superset.views.base_api.BaseSupersetModelRestApi"
   ]
  },
  "type": "class"
 },
 "superset.css_templates.api.CssTemplateRestApi.bulk_delete": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "flask_babel.ngettext",
    "len",
    "str",
    "superset.css_templates.commands.bulk_delete.BulkDeleteCssTemplateCommand",
    "superset.css_templates.commands.exceptions.CssTemplateBulkDeleteFailedError",
    "superset.css_templates.commands.exceptions.CssTemplateNotFoundError",
    "superset.css_templates.schemas.get_delete_ids_schema",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.css_templates.api.MODEL_API_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.css_templates.api.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.css_templates.api.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.css_templates.api.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.css_templates.api.event_logger": {
  "data": {
   "shadows": "superset.extensions.event_logger"
  },
  "type": "import"
 },
 "superset.css_templates.api.expose": {
  "data": {
   "shadows": "flask_appbuilder.api.expose"
  },
  "type": "import"
 },
 "superset.css_templates.api.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.css_templates.api.get_delete_ids_schema": {
  "data": {
   "shadows": "superset.css_templates.schemas.get_delete_ids_schema"
  },
  "type": "import"
 },
 "superset.css_templates.api.logger": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "superset.css_templates.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.css_templates.api.ngettext": {
  "data": {
   "shadows": "flask_babel.ngettext"
  },
  "type": "import"
 },
 "superset.css_templates.api.openapi_spec_methods_override": {
  "data": {
   "shadows": "superset.css_templates.schemas.openapi_spec_methods_override"
  },
  "type": "import"
 },
 "superset.css_templates.api.protect": {
  "data": {
   "shadows": "flask_appbuilder.api.protect"
  },
  "type": "import"
 },
 "superset.css_templates.api.rison": {
  "data": {
   "shadows": "flask_appbuilder.api.rison"
  },
  "type": "import"
 },
 "superset.css_templates.api.safe": {
  "data": {
   "shadows": "flask_appbuilder.api.safe"
  },
  "type": "import"
 },
 "superset.css_templates.api.statsd_metrics": {
  "data": {
   "shadows": "superset.views.base_api.statsd_metrics"
  },
  "type": "import"
 },
 "superset.css_templates.commands": {
  "data": {},
  "type": "module"
 },
 "superset.css_templates.commands.bulk_delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.css_templates.commands.bulk_delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.css_templates.commands.bulk_delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.css_templates.commands.bulk_delete.BulkDeleteCssTemplateCommand": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.css_templates.commands.bulk_delete.BulkDeleteCssTemplateCommand.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.models.core.CssTemplate",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.css_templates.commands.bulk_delete.BulkDeleteCssTemplateCommand.run": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "superset.css_templates.commands.bulk_delete.logger",
    "superset.css_templates.commands.exceptions.CssTemplateBulkDeleteFailedError",
    "superset.css_templates.dao.CssTemplateDAO.bulk_delete",
    "superset.dao.exceptions.DAODeleteFailedError"
   ]
  },
  "type": "function"
 },
 "superset.css_templates.commands.bulk_delete.BulkDeleteCssTemplateCommand.validate": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "superset.css_templates.commands.exceptions.CssTemplateNotFoundError",
    "superset.css_templates.dao.CssTemplateDAO.find_by_ids"
   ]
  },
  "type": "function"
 },
 "superset.css_templates.commands.bulk_delete.CssTemplate": {
  "data": {
   "shadows": "superset.models.core.CssTemplate"
  },
  "type": "import"
 },
 "superset.css_templates.commands.bulk_delete.CssTemplateBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.css_templates.commands.exceptions.CssTemplateBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.css_templates.commands.bulk_delete.CssTemplateDAO": {
  "data": {
   "shadows": "superset.css_templates.dao.CssTemplateDAO"
  },
  "type": "import"
 },
 "superset.css_templates.commands.bulk_delete.CssTemplateNotFoundError": {
  "data": {
   "shadows": "superset.css_templates.commands.exceptions.CssTemplateNotFoundError"
  },
  "type": "import"
 },
 "superset.css_templates.commands.bulk_delete.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.css_templates.commands.bulk_delete.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.css_templates.commands.bulk_delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.css_templates.commands.bulk_delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.css_templates.commands.bulk_delete.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.css_templates.commands.bulk_delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.css_templates.commands.exceptions": {
  "data": {},
  "type": "module"
 },
 "superset.css_templates.commands.exceptions.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.css_templates.commands.exceptions.CssTemplateBulkDeleteFailedError": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.DeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.css_templates.commands.exceptions.CssTemplateNotFoundError": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.css_templates.commands.exceptions.DeleteFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.DeleteFailedError"
  },
  "type": "import"
 },
 "superset.css_templates.commands.exceptions._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.css_templates.dao": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.css_templates.dao.logging"
   ]
  },
  "type": "module"
 },
 "superset.css_templates.dao.BaseDAO": {
  "data": {
   "shadows": "superset.dao.base.BaseDAO"
  },
  "type": "import"
 },
 "superset.css_templates.dao.CssTemplate": {
  "data": {
   "shadows": "superset.models.core.CssTemplate"
  },
  "type": "import"
 },
 "superset.css_templates.dao.CssTemplateDAO": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "superset.dao.base.BaseDAO",
    "superset.models.core.CssTemplate"
   ]
  },
  "type": "class"
 },
 "superset.css_templates.dao.CssTemplateDAO.bulk_delete": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.exc.SQLAlchemyError",
    "staticmethod",
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.query",
    "superset.extensions.db.session.rollback",
    "superset.models.core.CssTemplate",
    "superset.models.core.CssTemplate.id.in_",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.css_templates.dao.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.css_templates.dao.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.css_templates.dao.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.css_templates.dao.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.css_templates.dao.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.css_templates.dao.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.css_templates.dao.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.css_templates.filters": {
  "data": {},
  "type": "module"
 },
 "superset.css_templates.filters.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.css_templates.filters.BaseFilter": {
  "data": {
   "shadows": "superset.views.base.BaseFilter"
  },
  "type": "import"
 },
 "superset.css_templates.filters.CssTemplate": {
  "data": {
   "shadows": "superset.models.core.CssTemplate"
  },
  "type": "import"
 },
 "superset.css_templates.filters.CssTemplateAllTextFilter": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.css_templates.filters.CssTemplateAllTextFilter.apply": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sqlalchemy.or_",
    "sqlalchemy.orm.query.Query",
    "superset.models.core.CssTemplate.css.ilike",
    "superset.models.core.CssTemplate.template_name.ilike",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.css_templates.filters.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.query.Query"
  },
  "type": "import"
 },
 "superset.css_templates.filters._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.css_templates.filters.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.css_templates.schemas": {
  "data": {},
  "type": "module"
 },
 "superset.css_templates.schemas.get_delete_ids_schema": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.css_templates.schemas.openapi_spec_methods_override": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "superset.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.dao": {
  "data": {},
  "type": "module"
 },
 "superset.dao.base": {
  "data": {},
  "type": "module"
 },
 "superset.dao.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.dao.base.BaseDAO": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "flask_appbuilder.models.filters.BaseFilter",
    "flask_appbuilder.models.sqla.Model",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "superset.dao.base.BaseDAO.create": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "flask_appbuilder.models.sqla.Model",
    "setattr",
    "sqlalchemy.exc.SQLAlchemyError",
    "str",
    "superset.dao.exceptions.DAOConfigError",
    "superset.dao.exceptions.DAOCreateFailedError",
    "superset.extensions.db.session.add",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.rollback",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.dao.base.BaseDAO.delete": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "flask_appbuilder.models.sqla.Model",
    "sqlalchemy.exc.SQLAlchemyError",
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.delete",
    "superset.extensions.db.session.rollback"
   ]
  },
  "type": "function"
 },
 "superset.dao.base.BaseDAO.find_all": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "classmethod",
    "flask_appbuilder.models.sqla.Model",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.extensions.db.session",
    "superset.extensions.db.session.query",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.dao.base.BaseDAO.find_by_id": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "classmethod",
    "flask_appbuilder.models.sqla.Model",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "int",
    "sqlalchemy.orm.Session",
    "superset.extensions.db.session"
   ]
  },
  "type": "function"
 },
 "superset.dao.base.BaseDAO.find_by_ids": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "classmethod",
    "flask_appbuilder.models.sqla.Model",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "getattr",
    "int",
    "superset.extensions.db.session",
    "superset.extensions.db.session.query",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.dao.base.BaseDAO.update": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "flask_appbuilder.models.sqla.Model",
    "setattr",
    "sqlalchemy.exc.SQLAlchemyError",
    "str",
    "superset.dao.exceptions.DAOUpdateFailedError",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.merge",
    "superset.extensions.db.session.rollback",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.dao.base.BaseFilter": {
  "data": {
   "shadows": "flask_appbuilder.models.filters.BaseFilter"
  },
  "type": "import"
 },
 "superset.dao.base.DAOConfigError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOConfigError"
  },
  "type": "import"
 },
 "superset.dao.base.DAOCreateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOCreateFailedError"
  },
  "type": "import"
 },
 "superset.dao.base.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.dao.base.DAOUpdateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOUpdateFailedError"
  },
  "type": "import"
 },
 "superset.dao.base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.dao.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.dao.base.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.dao.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.dao.base.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.dao.base.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.dao.base.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.dao.base.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.dao.base.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.dao.exceptions": {
  "data": {},
  "type": "module"
 },
 "superset.dao.exceptions.DAOConfigError": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "superset.dao.exceptions.DAOException"
   ]
  },
  "type": "class"
 },
 "superset.dao.exceptions.DAOCreateFailedError": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "superset.dao.exceptions.DAOException"
   ]
  },
  "type": "class"
 },
 "superset.dao.exceptions.DAODeleteFailedError": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "superset.dao.exceptions.DAOException"
   ]
  },
  "type": "class"
 },
 "superset.dao.exceptions.DAOException": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.dao.exceptions.DAOUpdateFailedError": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "superset.dao.exceptions.DAOException"
   ]
  },
  "type": "class"
 },
 "superset.dao.exceptions.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.dashboards": {
  "data": {},
  "type": "module"
 },
 "superset.dashboards.api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.dashboards.api.logging"
   ]
  },
  "type": "module"
 },
 "superset.dashboards.api.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.dashboards.api.BaseSupersetModelRestApi": {
  "data": {
   "shadows": "superset.views.base_api.BaseSupersetModelRestApi"
  },
  "type": "import"
 },
 "superset.dashboards.api.BulkDeleteDashboardCommand": {
  "data": {
   "shadows": "superset.dashboards.commands.bulk_delete.BulkDeleteDashboardCommand"
  },
  "type": "import"
 },
 "superset.dashboards.api.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "superset.dashboards.api.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.dashboards.api.CreateDashboardCommand": {
  "data": {
   "shadows": "superset.dashboards.commands.create.CreateDashboardCommand"
  },
  "type": "import"
 },
 "superset.dashboards.api.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardCreateFailedError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardCreateFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardDAO": {
  "data": {
   "shadows": "superset.dashboards.dao.DashboardDAO"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardDeleteFailedError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardDeleteFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardFavoriteFilter": {
  "data": {
   "shadows": "superset.dashboards.filters.DashboardFavoriteFilter"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardFilter": {
  "data": {
   "shadows": "superset.dashboards.filters.DashboardFilter"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardForbiddenError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardForbiddenError"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardImportError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardImportError"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardInvalidError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardInvalidError"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardNotFoundError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardNotFoundError"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardPostSchema": {
  "data": {
   "shadows": "superset.dashboards.schemas.DashboardPostSchema"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardPutSchema": {
  "data": {
   "shadows": "superset.dashboards.schemas.DashboardPutSchema"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardRestApi": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.EXPORT",
    "superset.constants.RouteMethod.IMPORT",
    "superset.constants.RouteMethod.RELATED",
    "superset.constants.RouteMethod.REST_MODEL_VIEW_CRUD_SET",
    "superset.dashboards.filters.DashboardFavoriteFilter",
    "superset.dashboards.filters.DashboardFilter",
    "superset.dashboards.filters.DashboardTitleOrSlugFilter",
    "superset.dashboards.schemas.DashboardPostSchema",
    "superset.dashboards.schemas.DashboardPutSchema",
    "superset.dashboards.schemas.GetFavStarIdsSchema",
    "superset.dashboards.schemas.get_delete_ids_schema",
    "superset.dashboards.schemas.get_export_ids_schema",
    "superset.dashboards.schemas.get_fav_star_ids_schema",
    "superset.dashboards.schemas.openapi_spec_methods_override",
    "superset.dashboards.schemas.thumbnail_query_schema",
    "superset.models.dashboard.Dashboard",
    "superset.views.base_api.BaseSupersetModelRestApi",
    "superset.views.base_api.RelatedFieldFilter",
    "superset.views.filters.FilterRelatedOwners"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.api.DashboardRestApi.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "super",
    "superset.is_feature_enabled"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.api.DashboardRestApi.bulk_delete": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "flask_babel.ngettext",
    "len",
    "str",
    "superset.dashboards.commands.bulk_delete.BulkDeleteDashboardCommand",
    "superset.dashboards.commands.exceptions.DashboardBulkDeleteFailedError",
    "superset.dashboards.commands.exceptions.DashboardForbiddenError",
    "superset.dashboards.commands.exceptions.DashboardNotFoundError",
    "superset.dashboards.schemas.get_delete_ids_schema",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "typing.Any",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.api.DashboardRestApi.delete": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "str",
    "superset.dashboards.api.logger",
    "superset.dashboards.commands.delete.DeleteDashboardCommand",
    "superset.dashboards.commands.exceptions.DashboardDeleteFailedError",
    "superset.dashboards.commands.exceptions.DashboardForbiddenError",
    "superset.dashboards.commands.exceptions.DashboardNotFoundError",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.api.DashboardRestApi.export": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "flask.make_response",
    "flask.send_file",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "io.BytesIO",
    "superset.dashboards.commands.exceptions.DashboardNotFoundError",
    "superset.dashboards.commands.export.ExportDashboardsCommand",
    "superset.dashboards.schemas.get_export_ids_schema",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.is_feature_enabled",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.Dashboard.export_dashboards",
    "superset.models.dashboard.Dashboard.id.in_",
    "superset.views.base.generate_download_headers",
    "superset.views.base_api.statsd_metrics",
    "typing.Any",
    "werkzeug.wrappers.Response",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.api.DashboardRestApi.favorite_status": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "flask.g.user.id",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "superset.dashboards.dao.DashboardDAO.favorited_ids",
    "superset.dashboards.dao.DashboardDAO.find_by_ids",
    "superset.dashboards.schemas.get_fav_star_ids_schema",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "typing.Any",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.api.DashboardRestApi.import_": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "flask.request.files.get",
    "flask.request.form",
    "flask.request.form.get",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "str",
    "superset.commands.exceptions.CommandInvalidError",
    "superset.commands.importers.v1.utils.remove_root",
    "superset.dashboards.api.json",
    "superset.dashboards.api.logger",
    "superset.dashboards.commands.exceptions.DashboardImportError",
    "superset.dashboards.commands.importers.dispatcher.ImportDashboardsCommand",
    "superset.views.base_api.statsd_metrics",
    "werkzeug.wrappers.Response",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.api.DashboardRestApi.post": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "flask.g.user",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "marshmallow.ValidationError",
    "str",
    "superset.dashboards.api.logger",
    "superset.dashboards.commands.create.CreateDashboardCommand",
    "superset.dashboards.commands.exceptions.DashboardCreateFailedError",
    "superset.dashboards.commands.exceptions.DashboardInvalidError",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.api.DashboardRestApi.put": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "flask.g.user",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "marshmallow.ValidationError",
    "str",
    "superset.dashboards.api.logger",
    "superset.dashboards.commands.exceptions.DashboardForbiddenError",
    "superset.dashboards.commands.exceptions.DashboardInvalidError",
    "superset.dashboards.commands.exceptions.DashboardNotFoundError",
    "superset.dashboards.commands.exceptions.DashboardUpdateFailedError",
    "superset.dashboards.commands.update.UpdateDashboardCommand",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.api.DashboardRestApi.thumbnail": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "bool",
    "flask.redirect",
    "flask.url_for",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "int",
    "str",
    "superset.dashboards.schemas.thumbnail_query_schema",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.tasks.thumbnails.cache_dashboard_thumbnail.delay",
    "superset.thumbnail_cache",
    "superset.utils.screenshots.DashboardScreenshot",
    "superset.utils.urls.get_url_path",
    "typing.Dict",
    "werkzeug.wrappers.Response",
    "werkzeug.wsgi.FileWrapper"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.api.DashboardScreenshot": {
  "data": {
   "shadows": "superset.utils.screenshots.DashboardScreenshot"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardTitleOrSlugFilter": {
  "data": {
   "shadows": "superset.dashboards.filters.DashboardTitleOrSlugFilter"
  },
  "type": "import"
 },
 "superset.dashboards.api.DashboardUpdateFailedError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardUpdateFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.api.DeleteDashboardCommand": {
  "data": {
   "shadows": "superset.dashboards.commands.delete.DeleteDashboardCommand"
  },
  "type": "import"
 },
 "superset.dashboards.api.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.dashboards.api.ExportDashboardsCommand": {
  "data": {
   "shadows": "superset.dashboards.commands.export.ExportDashboardsCommand"
  },
  "type": "import"
 },
 "superset.dashboards.api.FileWrapper": {
  "data": {
   "shadows": "werkzeug.wsgi.FileWrapper"
  },
  "type": "import"
 },
 "superset.dashboards.api.FilterRelatedOwners": {
  "data": {
   "shadows": "superset.views.filters.FilterRelatedOwners"
  },
  "type": "import"
 },
 "superset.dashboards.api.GetFavStarIdsSchema": {
  "data": {
   "shadows": "superset.dashboards.schemas.GetFavStarIdsSchema"
  },
  "type": "import"
 },
 "superset.dashboards.api.ImportDashboardsCommand": {
  "data": {
   "shadows": "superset.dashboards.commands.importers.dispatcher.ImportDashboardsCommand"
  },
  "type": "import"
 },
 "superset.dashboards.api.MODEL_API_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.dashboards.api.RelatedFieldFilter": {
  "data": {
   "shadows": "superset.views.base_api.RelatedFieldFilter"
  },
  "type": "import"
 },
 "superset.dashboards.api.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.dashboards.api.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.dashboards.api.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.dashboards.api.UpdateDashboardCommand": {
  "data": {
   "shadows": "superset.dashboards.commands.update.UpdateDashboardCommand"
  },
  "type": "import"
 },
 "superset.dashboards.api.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.dashboards.api.WerkzeugResponse": {
  "data": {
   "shadows": "werkzeug.wrappers.Response"
  },
  "type": "import"
 },
 "superset.dashboards.api.ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "superset.dashboards.api.cache_dashboard_thumbnail": {
  "data": {
   "shadows": "superset.tasks.thumbnails.cache_dashboard_thumbnail"
  },
  "type": "import"
 },
 "superset.dashboards.api.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.dashboards.api.event_logger": {
  "data": {
   "shadows": "superset.extensions.event_logger"
  },
  "type": "import"
 },
 "superset.dashboards.api.expose": {
  "data": {
   "shadows": "flask_appbuilder.api.expose"
  },
  "type": "import"
 },
 "superset.dashboards.api.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.dashboards.api.generate_download_headers": {
  "data": {
   "shadows": "superset.views.base.generate_download_headers"
  },
  "type": "import"
 },
 "superset.dashboards.api.get_delete_ids_schema": {
  "data": {
   "shadows": "superset.dashboards.schemas.get_delete_ids_schema"
  },
  "type": "import"
 },
 "superset.dashboards.api.get_export_ids_schema": {
  "data": {
   "shadows": "superset.dashboards.schemas.get_export_ids_schema"
  },
  "type": "import"
 },
 "superset.dashboards.api.get_fav_star_ids_schema": {
  "data": {
   "shadows": "superset.dashboards.schemas.get_fav_star_ids_schema"
  },
  "type": "import"
 },
 "superset.dashboards.api.get_url_path": {
  "data": {
   "shadows": "superset.utils.urls.get_url_path"
  },
  "type": "import"
 },
 "superset.dashboards.api.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.dashboards.api.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.dashboards.api.logger": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "superset.dashboards.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.dashboards.api.make_response": {
  "data": {
   "shadows": "flask.make_response"
  },
  "type": "import"
 },
 "superset.dashboards.api.ngettext": {
  "data": {
   "shadows": "flask_babel.ngettext"
  },
  "type": "import"
 },
 "superset.dashboards.api.openapi_spec_methods_override": {
  "data": {
   "shadows": "superset.dashboards.schemas.openapi_spec_methods_override"
  },
  "type": "import"
 },
 "superset.dashboards.api.protect": {
  "data": {
   "shadows": "flask_appbuilder.api.protect"
  },
  "type": "import"
 },
 "superset.dashboards.api.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "superset.dashboards.api.remove_root": {
  "data": {
   "shadows": "superset.commands.importers.v1.utils.remove_root"
  },
  "type": "import"
 },
 "superset.dashboards.api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.dashboards.api.rison": {
  "data": {
   "shadows": "flask_appbuilder.api.rison"
  },
  "type": "import"
 },
 "superset.dashboards.api.safe": {
  "data": {
   "shadows": "flask_appbuilder.api.safe"
  },
  "type": "import"
 },
 "superset.dashboards.api.send_file": {
  "data": {
   "shadows": "flask.send_file"
  },
  "type": "import"
 },
 "superset.dashboards.api.statsd_metrics": {
  "data": {
   "shadows": "superset.views.base_api.statsd_metrics"
  },
  "type": "import"
 },
 "superset.dashboards.api.thumbnail_cache": {
  "data": {
   "shadows": "superset.thumbnail_cache"
  },
  "type": "import"
 },
 "superset.dashboards.api.thumbnail_query_schema": {
  "data": {
   "shadows": "superset.dashboards.schemas.thumbnail_query_schema"
  },
  "type": "import"
 },
 "superset.dashboards.api.url_for": {
  "data": {
   "shadows": "flask.url_for"
  },
  "type": "import"
 },
 "superset.dashboards.commands": {
  "data": {},
  "type": "module"
 },
 "superset.dashboards.commands.bulk_delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.dashboards.commands.bulk_delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.dashboards.commands.bulk_delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete.BulkDeleteDashboardCommand": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.bulk_delete.BulkDeleteDashboardCommand.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.models.dashboard.Dashboard",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.bulk_delete.BulkDeleteDashboardCommand.run": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "superset.commands.exceptions.DeleteFailedError",
    "superset.dashboards.commands.bulk_delete.logger",
    "superset.dashboards.commands.exceptions.DashboardBulkDeleteFailedError",
    "superset.dashboards.dao.DashboardDAO.bulk_delete"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.bulk_delete.BulkDeleteDashboardCommand.validate": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "len",
    "superset.dashboards.commands.exceptions.DashboardBulkDeleteFailedReportsExistError",
    "superset.dashboards.commands.exceptions.DashboardForbiddenError",
    "superset.dashboards.commands.exceptions.DashboardNotFoundError",
    "superset.dashboards.dao.DashboardDAO.find_by_ids",
    "superset.exceptions.SupersetSecurityException",
    "superset.reports.dao.ReportScheduleDAO.find_by_dashboard_ids",
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.bulk_delete.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete.DashboardBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete.DashboardBulkDeleteFailedReportsExistError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardBulkDeleteFailedReportsExistError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete.DashboardDAO": {
  "data": {
   "shadows": "superset.dashboards.dao.DashboardDAO"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete.DashboardForbiddenError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardForbiddenError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete.DashboardNotFoundError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardNotFoundError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete.DeleteFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.DeleteFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete.ReportScheduleDAO": {
  "data": {
   "shadows": "superset.reports.dao.ReportScheduleDAO"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.dashboards.commands.bulk_delete.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.dashboards.commands.bulk_delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.dashboards.commands.create.logging"
   ]
  },
  "type": "module"
 },
 "superset.dashboards.commands.create.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create.CreateDashboardCommand": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.create.CreateDashboardCommand.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.create.CreateDashboardCommand.run": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.dao.exceptions.DAOCreateFailedError",
    "superset.dashboards.commands.create.logger",
    "superset.dashboards.commands.exceptions.DashboardCreateFailedError",
    "superset.dashboards.dao.DashboardDAO.create",
    "superset.dashboards.dao.DashboardDAO.update_charts_owners"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.create.CreateDashboardCommand.validate": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "int",
    "list",
    "marshmallow.ValidationError",
    "str",
    "superset.commands.utils.populate_owners",
    "superset.dashboards.commands.exceptions.DashboardInvalidError",
    "superset.dashboards.commands.exceptions.DashboardSlugExistsValidationError",
    "superset.dashboards.dao.DashboardDAO.validate_slug_uniqueness",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.create.DAOCreateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOCreateFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create.DashboardCreateFailedError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardCreateFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create.DashboardDAO": {
  "data": {
   "shadows": "superset.dashboards.dao.DashboardDAO"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create.DashboardInvalidError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardInvalidError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create.DashboardSlugExistsValidationError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardSlugExistsValidationError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.dashboards.commands.create.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.dashboards.commands.create.populate_owners": {
  "data": {
   "shadows": "superset.commands.utils.populate_owners"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.dashboards.commands.delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.dashboards.commands.delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete.DashboardDAO": {
  "data": {
   "shadows": "superset.dashboards.dao.DashboardDAO"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete.DashboardDeleteFailedError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardDeleteFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete.DashboardDeleteFailedReportsExistError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardDeleteFailedReportsExistError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete.DashboardForbiddenError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardForbiddenError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete.DashboardNotFoundError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardNotFoundError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete.DeleteDashboardCommand": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.delete.DeleteDashboardCommand.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.models.dashboard.Dashboard",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.delete.DeleteDashboardCommand.run": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.dashboards.commands.delete.logger",
    "superset.dashboards.commands.exceptions.DashboardDeleteFailedError",
    "superset.dashboards.dao.DashboardDAO.delete"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.delete.DeleteDashboardCommand.validate": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.dashboards.commands.exceptions.DashboardDeleteFailedReportsExistError",
    "superset.dashboards.commands.exceptions.DashboardForbiddenError",
    "superset.dashboards.commands.exceptions.DashboardNotFoundError",
    "superset.dashboards.dao.DashboardDAO.find_by_id",
    "superset.exceptions.SupersetSecurityException",
    "superset.reports.dao.ReportScheduleDAO.find_by_dashboard_id",
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.delete.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete.ReportScheduleDAO": {
  "data": {
   "shadows": "superset.reports.dao.ReportScheduleDAO"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.dashboards.commands.delete.logger": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.dashboards.commands.delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.dashboards.commands.exceptions": {
  "data": {},
  "type": "module"
 },
 "superset.dashboards.commands.exceptions.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.dashboards.commands.exceptions.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.exceptions.CreateFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.CreateFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.exceptions.DashboardBulkDeleteFailedError": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CreateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.exceptions.DashboardBulkDeleteFailedReportsExistError": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.dashboards.commands.exceptions.DashboardBulkDeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.exceptions.DashboardCreateFailedError": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CreateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.exceptions.DashboardDeleteFailedError": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.DeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.exceptions.DashboardDeleteFailedReportsExistError": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.dashboards.commands.exceptions.DashboardDeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.exceptions.DashboardForbiddenError": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.ForbiddenError"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.exceptions.DashboardImportError": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.ImportFailedError"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.exceptions.DashboardInvalidError": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandInvalidError"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.exceptions.DashboardNotFoundError": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.exceptions.DashboardSlugExistsValidationError": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.exceptions.DashboardSlugExistsValidationError.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.exceptions.DashboardUpdateFailedError": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.UpdateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.exceptions.DeleteFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.DeleteFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.exceptions.ForbiddenError": {
  "data": {
   "shadows": "superset.commands.exceptions.ForbiddenError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.exceptions.ImportFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.ImportFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.exceptions.UpdateFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.UpdateFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.exceptions.ValidationError": {
  "data": {
   "shadows": "marshmallow.validate.ValidationError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.exceptions._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.dashboards.commands.export.logging"
   ]
  },
  "type": "module"
 },
 "superset.dashboards.commands.export.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.DEFAULT_CHART_HEIGHT": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.dashboards.commands.export.DEFAULT_CHART_WIDTH": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.dashboards.commands.export.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.DashboardDAO": {
  "data": {
   "shadows": "superset.dashboards.dao.DashboardDAO"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.DashboardNotFoundError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardNotFoundError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.EXPORT_VERSION": {
  "data": {
   "shadows": "superset.utils.dict_import_export.EXPORT_VERSION"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.ExportChartsCommand": {
  "data": {
   "shadows": "superset.charts.commands.export.ExportChartsCommand"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.ExportDashboardsCommand": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "superset.commands.export.ExportModelsCommand",
    "superset.dashboards.commands.exceptions.DashboardNotFoundError",
    "superset.dashboards.dao.DashboardDAO"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.export.ExportDashboardsCommand._export": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "TypeError",
    "staticmethod",
    "str",
    "superset.charts.commands.export.ExportChartsCommand",
    "superset.dashboards.commands.export.JSON_KEYS",
    "superset.dashboards.commands.export.append_charts",
    "superset.dashboards.commands.export.get_default_position",
    "superset.dashboards.commands.export.json",
    "superset.dashboards.commands.export.logger",
    "superset.dashboards.commands.export.yaml",
    "superset.dashboards.commands.importers.v1.utils.find_chart_uuids",
    "superset.models.dashboard.Dashboard",
    "superset.utils.dict_import_export.EXPORT_VERSION",
    "typing.Iterator",
    "typing.Optional",
    "typing.Tuple",
    "werkzeug.utils.secure_filename"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.export.ExportModelsCommand": {
  "data": {
   "shadows": "superset.commands.export.ExportModelsCommand"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.JSON_KEYS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.dashboards.commands.export.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.append_charts": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "str",
    "superset.dashboards.commands.export.DEFAULT_CHART_HEIGHT",
    "superset.dashboards.commands.export.DEFAULT_CHART_WIDTH",
    "superset.dashboards.commands.export.suffix",
    "superset.models.slice.Slice",
    "typing.Any",
    "typing.Dict",
    "typing.Set",
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.export.find_chart_uuids": {
  "data": {
   "shadows": "superset.dashboards.commands.importers.v1.utils.find_chart_uuids"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.get_default_position": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.export.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.dashboards.commands.export.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.secure_filename": {
  "data": {
   "shadows": "werkzeug.utils.secure_filename"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "superset.dashboards.commands.export.suffix": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "int",
    "range",
    "str",
    "superset.dashboards.commands.export.random",
    "superset.dashboards.commands.export.string"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.export.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers": {
  "data": {},
  "type": "module"
 },
 "superset.dashboards.commands.importers.dispatcher": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.dashboards.commands.importers.dispatcher.logging",
    "superset.dashboards.commands.importers.v0.ImportDashboardsCommand",
    "superset.dashboards.commands.importers.v1.ImportDashboardsCommand"
   ]
  },
  "type": "module"
 },
 "superset.dashboards.commands.importers.dispatcher.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.dispatcher.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.dispatcher.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.dispatcher.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.dispatcher.ImportDashboardsCommand": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.importers.dispatcher.ImportDashboardsCommand.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.dispatcher.ImportDashboardsCommand.run": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Exception",
    "marshmallow.exceptions.ValidationError",
    "superset.commands.exceptions.CommandInvalidError",
    "superset.commands.importers.exceptions.IncorrectVersionError",
    "superset.dashboards.commands.importers.dispatcher.command_versions",
    "superset.dashboards.commands.importers.dispatcher.logger",
    "version"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.dispatcher.ImportDashboardsCommand.validate": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.dispatcher.IncorrectVersionError": {
  "data": {
   "shadows": "superset.commands.importers.exceptions.IncorrectVersionError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.dispatcher.ValidationError": {
  "data": {
   "shadows": "marshmallow.exceptions.ValidationError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.dispatcher.command_versions": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.dashboards.commands.importers.dispatcher.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.dashboards.commands.importers.dispatcher.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.dispatcher.v0": {
  "data": {
   "shadows": "superset.dashboards.commands.importers.v0"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.dispatcher.v1": {
  "data": {
   "shadows": "superset.dashboards.commands.importers.v1"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.dashboards.commands.importers.v0.logging"
   ]
  },
  "type": "module"
 },
 "superset.dashboards.commands.importers.v0.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.ConnectorRegistry": {
  "data": {
   "shadows": "superset.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.DashboardImportException": {
  "data": {
   "shadows": "superset.exceptions.DashboardImportException"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.DruidCluster": {
  "data": {
   "shadows": "superset.connectors.druid.models.DruidCluster"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.DruidColumn": {
  "data": {
   "shadows": "superset.connectors.druid.models.DruidColumn"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.DruidDatasource": {
  "data": {
   "shadows": "superset.connectors.druid.models.DruidDatasource"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.DruidMetric": {
  "data": {
   "shadows": "superset.connectors.druid.models.DruidMetric"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.ImportDashboardsCommand": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.importers.v0.ImportDashboardsCommand.__init__": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.v0.ImportDashboardsCommand.run": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "superset.dashboards.commands.importers.v0.import_dashboards",
    "superset.dashboards.commands.importers.v0.logger",
    "superset.db.session"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.v0.ImportDashboardsCommand.validate": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError",
    "superset.dashboards.commands.importers.v0.json",
    "superset.dashboards.commands.importers.v0.logger"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.v0.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.SqlMetric": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlMetric"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.TableColumn": {
  "data": {
   "shadows": "superset.connectors.sqla.models.TableColumn"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.convert_filter_scopes": {
  "data": {
   "shadows": "superset.utils.dashboard_filter_scopes_converter.convert_filter_scopes"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.copy_filter_scopes": {
  "data": {
   "shadows": "superset.utils.dashboard_filter_scopes_converter.copy_filter_scopes"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.decode_dashboards": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "str",
    "superset.connectors.druid.models.DruidCluster",
    "superset.connectors.druid.models.DruidColumn",
    "superset.connectors.druid.models.DruidDatasource",
    "superset.connectors.druid.models.DruidMetric",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.connectors.sqla.models.TableColumn",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.v0.import_chart": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "int",
    "sqlalchemy.orm.make_transient",
    "str",
    "superset.ConnectorRegistry.get_datasource_by_name",
    "superset.dashboards.commands.importers.v0.logger",
    "superset.db.session",
    "superset.models.slice.Slice",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.v0.import_dashboard": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "alter_positions",
    "copy.copy",
    "int",
    "len",
    "str",
    "superset.dashboards.commands.importers.v0.import_chart",
    "superset.dashboards.commands.importers.v0.json",
    "superset.dashboards.commands.importers.v0.logger",
    "superset.db.session",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.id.in_",
    "superset.utils.dashboard_filter_scopes_converter.convert_filter_scopes",
    "superset.utils.dashboard_filter_scopes_converter.copy_filter_scopes",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.v0.import_dashboard.alter_positions": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "superset.dashboards.commands.importers.v0.json",
    "superset.models.dashboard.Dashboard",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.v0.import_dashboards": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "int",
    "sqlalchemy.orm.Session",
    "str",
    "superset.dashboards.commands.importers.v0.decode_dashboards",
    "superset.dashboards.commands.importers.v0.import_dashboard",
    "superset.dashboards.commands.importers.v0.json",
    "superset.dashboards.commands.importers.v0.time",
    "superset.datasets.commands.importers.v0.import_dataset",
    "superset.exceptions.DashboardImportException",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.v0.import_dataset": {
  "data": {
   "shadows": "superset.datasets.commands.importers.v0.import_dataset"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.dashboards.commands.importers.v0.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.make_transient": {
  "data": {
   "shadows": "sqlalchemy.orm.make_transient"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v0.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1": {
  "data": {},
  "type": "module"
 },
 "superset.dashboards.commands.importers.v1.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.DashboardDAO": {
  "data": {
   "shadows": "superset.dashboards.dao.DashboardDAO"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.DashboardImportError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardImportError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.ImportDashboardsCommand": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "str",
    "superset.charts.schemas.ImportV1ChartSchema",
    "superset.commands.importers.v1.ImportModelsCommand",
    "superset.dashboards.commands.exceptions.DashboardImportError",
    "superset.dashboards.dao.DashboardDAO",
    "superset.dashboards.schemas.ImportV1DashboardSchema",
    "superset.databases.schemas.ImportV1DatabaseSchema",
    "superset.datasets.schemas.ImportV1DatasetSchema",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.importers.v1.ImportDashboardsCommand._import": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "bool",
    "int",
    "set",
    "sqlalchemy.orm.Session",
    "sqlalchemy.sql.select",
    "staticmethod",
    "str",
    "superset.charts.commands.importers.v1.utils.import_chart",
    "superset.dashboards.commands.importers.v1.utils.find_chart_uuids",
    "superset.dashboards.commands.importers.v1.utils.import_dashboard",
    "superset.dashboards.commands.importers.v1.utils.update_id_refs",
    "superset.databases.commands.importers.v1.utils.import_database",
    "superset.datasets.commands.importers.v1.utils.import_dataset",
    "superset.models.dashboard.dashboard_slices.c.dashboard_id",
    "superset.models.dashboard.dashboard_slices.c.slice_id",
    "superset.models.dashboard.dashboard_slices.insert",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.v1.ImportModelsCommand": {
  "data": {
   "shadows": "superset.commands.importers.v1.ImportModelsCommand"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.ImportV1ChartSchema": {
  "data": {
   "shadows": "superset.charts.schemas.ImportV1ChartSchema"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.ImportV1DashboardSchema": {
  "data": {
   "shadows": "superset.dashboards.schemas.ImportV1DashboardSchema"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.ImportV1DatabaseSchema": {
  "data": {
   "shadows": "superset.databases.schemas.ImportV1DatabaseSchema"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.ImportV1DatasetSchema": {
  "data": {
   "shadows": "superset.datasets.schemas.ImportV1DatasetSchema"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.dashboard_slices": {
  "data": {
   "shadows": "superset.models.dashboard.dashboard_slices"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.find_chart_uuids": {
  "data": {
   "shadows": "superset.dashboards.commands.importers.v1.utils.find_chart_uuids"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.import_chart": {
  "data": {
   "shadows": "superset.charts.commands.importers.v1.utils.import_chart"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.import_dashboard": {
  "data": {
   "shadows": "superset.dashboards.commands.importers.v1.utils.import_dashboard"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.import_database": {
  "data": {
   "shadows": "superset.databases.commands.importers.v1.utils.import_database"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.import_dataset": {
  "data": {
   "shadows": "superset.datasets.commands.importers.v1.utils.import_dataset"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.select": {
  "data": {
   "shadows": "sqlalchemy.sql.select"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.update_id_refs": {
  "data": {
   "shadows": "superset.dashboards.commands.importers.v1.utils.update_id_refs"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.dashboards.commands.importers.v1.utils.logging"
   ]
  },
  "type": "module"
 },
 "superset.dashboards.commands.importers.v1.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.utils.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.utils.JSON_KEYS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.dashboards.commands.importers.v1.utils.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.utils.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.utils.build_uuid_to_id_map": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.v1.utils.find_chart_uuids": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "build_uuid_to_id_map",
    "set",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.v1.utils.import_dashboard": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "sqlalchemy.orm.Session",
    "str",
    "superset.dashboards.commands.importers.v1.utils.JSON_KEYS",
    "superset.dashboards.commands.importers.v1.utils.json",
    "superset.dashboards.commands.importers.v1.utils.logger",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.Dashboard.import_from_dict",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.importers.v1.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.utils.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.dashboards.commands.importers.v1.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.dashboards.commands.importers.v1.utils.update_id_refs": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "str",
    "superset.dashboards.commands.importers.v1.utils.build_uuid_to_id_map",
    "superset.dashboards.commands.importers.v1.utils.json",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.update": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.dashboards.commands.update.logging"
   ]
  },
  "type": "module"
 },
 "superset.dashboards.commands.update.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.DAOUpdateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOUpdateFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.DashboardDAO": {
  "data": {
   "shadows": "superset.dashboards.dao.DashboardDAO"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.DashboardForbiddenError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardForbiddenError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.DashboardInvalidError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardInvalidError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.DashboardNotFoundError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardNotFoundError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.DashboardSlugExistsValidationError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardSlugExistsValidationError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.DashboardUpdateFailedError": {
  "data": {
   "shadows": "superset.dashboards.commands.exceptions.DashboardUpdateFailedError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.UpdateDashboardCommand": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.commands.update.UpdateDashboardCommand.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "str",
    "superset.models.dashboard.Dashboard",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.update.UpdateDashboardCommand.run": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.dao.exceptions.DAOUpdateFailedError",
    "superset.dashboards.commands.exceptions.DashboardUpdateFailedError",
    "superset.dashboards.commands.update.logger",
    "superset.dashboards.dao.DashboardDAO.update",
    "superset.dashboards.dao.DashboardDAO.update_charts_owners"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.update.UpdateDashboardCommand.validate": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "int",
    "marshmallow.ValidationError",
    "str",
    "superset.commands.utils.populate_owners",
    "superset.dashboards.commands.exceptions.DashboardForbiddenError",
    "superset.dashboards.commands.exceptions.DashboardInvalidError",
    "superset.dashboards.commands.exceptions.DashboardNotFoundError",
    "superset.dashboards.commands.exceptions.DashboardSlugExistsValidationError",
    "superset.dashboards.dao.DashboardDAO.find_by_id",
    "superset.dashboards.dao.DashboardDAO.validate_update_slug_uniqueness",
    "superset.exceptions.SupersetSecurityException",
    "superset.views.base.check_ownership",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.commands.update.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.dashboards.commands.update.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.dashboards.commands.update.populate_owners": {
  "data": {
   "shadows": "superset.commands.utils.populate_owners"
  },
  "type": "import"
 },
 "superset.dashboards.dao": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.dashboards.dao.logging"
   ]
  },
  "type": "module"
 },
 "superset.dashboards.dao.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.dashboards.dao.BaseDAO": {
  "data": {
   "shadows": "superset.dao.base.BaseDAO"
  },
  "type": "import"
 },
 "superset.dashboards.dao.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.dashboards.dao.DashboardDAO": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "superset.dao.base.BaseDAO",
    "superset.dashboards.filters.DashboardFilter",
    "superset.models.dashboard.Dashboard"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.dao.DashboardDAO.bulk_delete": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.exc.SQLAlchemyError",
    "staticmethod",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.merge",
    "superset.extensions.db.session.query",
    "superset.extensions.db.session.rollback",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.Dashboard.id.in_",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.dao.DashboardDAO.favorited_ids": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "superset.extensions.db.session.query",
    "superset.models.core.FavStar",
    "superset.models.core.FavStar.class_name",
    "superset.models.core.FavStar.obj_id",
    "superset.models.core.FavStar.obj_id.in_",
    "superset.models.core.FavStar.user_id",
    "superset.models.core.FavStarClassName.DASHBOARD",
    "superset.models.dashboard.Dashboard",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.dao.DashboardDAO.set_dash_metadata": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "slice",
    "slice.id",
    "slice.uuid",
    "staticmethod",
    "str",
    "superset.dashboards.dao.json",
    "superset.extensions.db.session",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.id.in_",
    "superset.utils.dashboard_filter_scopes_converter.copy_filter_scopes",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.dao.DashboardDAO.update_charts_owners": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "bool",
    "list",
    "set",
    "staticmethod",
    "superset.extensions.db.session.commit",
    "superset.models.dashboard.Dashboard"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.dao.DashboardDAO.validate_slug_uniqueness": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "bool",
    "staticmethod",
    "str",
    "superset.extensions.db.session.query",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.Dashboard.slug"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.dao.DashboardDAO.validate_update_slug_uniqueness": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "bool",
    "int",
    "staticmethod",
    "str",
    "superset.extensions.db.session.query",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.Dashboard.id",
    "superset.models.dashboard.Dashboard.slug",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.dao.DashboardFilter": {
  "data": {
   "shadows": "superset.dashboards.filters.DashboardFilter"
  },
  "type": "import"
 },
 "superset.dashboards.dao.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.dashboards.dao.FavStar": {
  "data": {
   "shadows": "superset.models.core.FavStar"
  },
  "type": "import"
 },
 "superset.dashboards.dao.FavStarClassName": {
  "data": {
   "shadows": "superset.models.core.FavStarClassName"
  },
  "type": "import"
 },
 "superset.dashboards.dao.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.dashboards.dao.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.dashboards.dao.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.dashboards.dao.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.dashboards.dao.copy_filter_scopes": {
  "data": {
   "shadows": "superset.utils.dashboard_filter_scopes_converter.copy_filter_scopes"
  },
  "type": "import"
 },
 "superset.dashboards.dao.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.dashboards.dao.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.dashboards.dao.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.dashboards.dao.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.dashboards.filters": {
  "data": {},
  "type": "module"
 },
 "superset.dashboards.filters.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.dashboards.filters.BaseFavoriteFilter": {
  "data": {
   "shadows": "superset.views.base_api.BaseFavoriteFilter"
  },
  "type": "import"
 },
 "superset.dashboards.filters.BaseFilter": {
  "data": {
   "shadows": "superset.views.base.BaseFilter"
  },
  "type": "import"
 },
 "superset.dashboards.filters.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.dashboards.filters.DashboardFavoriteFilter": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "superset.models.dashboard.Dashboard",
    "superset.views.base_api.BaseFavoriteFilter"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.filters.DashboardFilter": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.filters.DashboardFilter.apply": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "list",
    "sqlalchemy.and_",
    "sqlalchemy.or_",
    "sqlalchemy.orm.query.Query",
    "superset.db.session.query",
    "superset.models.core.FavStar.class_name",
    "superset.models.core.FavStar.obj_id",
    "superset.models.core.FavStar.user_id",
    "superset.models.dashboard.Dashboard.id",
    "superset.models.dashboard.Dashboard.id.in_",
    "superset.models.dashboard.Dashboard.owners",
    "superset.models.dashboard.Dashboard.published",
    "superset.models.dashboard.Dashboard.slices",
    "superset.models.slice.Slice.perm.in_",
    "superset.models.slice.Slice.schema_perm.in_",
    "superset.security_manager.can_access_all_datasources",
    "superset.security_manager.user_model.get_user_id",
    "superset.security_manager.user_model.id",
    "superset.security_manager.user_view_menu_names",
    "superset.views.base.get_user_roles",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.filters.DashboardTitleOrSlugFilter": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.filters.DashboardTitleOrSlugFilter.apply": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "sqlalchemy.or_",
    "sqlalchemy.orm.query.Query",
    "superset.models.dashboard.Dashboard.dashboard_title.ilike",
    "superset.models.dashboard.Dashboard.slug.ilike",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.filters.FavStar": {
  "data": {
   "shadows": "superset.models.core.FavStar"
  },
  "type": "import"
 },
 "superset.dashboards.filters.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.query.Query"
  },
  "type": "import"
 },
 "superset.dashboards.filters.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.dashboards.filters._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.dashboards.filters.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "superset.dashboards.filters.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.dashboards.filters.get_user_roles": {
  "data": {
   "shadows": "superset.views.base.get_user_roles"
  },
  "type": "import"
 },
 "superset.dashboards.filters.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.dashboards.filters.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.dashboards.schemas": {
  "data": {},
  "type": "module"
 },
 "superset.dashboards.schemas.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.dashboards.schemas.BaseDashboardSchema": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "marshmallow.Schema"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.schemas.BaseDashboardSchema.post_load": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "marshmallow.post_load",
    "str",
    "superset.dashboards.schemas.re",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.schemas.ChartFavStarResponseResult": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "id",
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Integer"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.schemas.DashboardJSONMetadataSchema": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Dict",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.Str"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.schemas.DashboardPostSchema": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "superset.dashboards.schemas.BaseDashboardSchema",
    "superset.dashboards.schemas.dashboard_title_description",
    "superset.dashboards.schemas.json_metadata_description",
    "superset.dashboards.schemas.owners_description",
    "superset.dashboards.schemas.position_json_description",
    "superset.dashboards.schemas.published_description",
    "superset.dashboards.schemas.slug_description",
    "superset.dashboards.schemas.validate_json",
    "superset.dashboards.schemas.validate_json_metadata"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.schemas.DashboardPutSchema": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "superset.dashboards.schemas.BaseDashboardSchema",
    "superset.dashboards.schemas.css_description",
    "superset.dashboards.schemas.dashboard_title_description",
    "superset.dashboards.schemas.json_metadata_description",
    "superset.dashboards.schemas.owners_description",
    "superset.dashboards.schemas.position_json_description",
    "superset.dashboards.schemas.published_description",
    "superset.dashboards.schemas.slug_description",
    "superset.dashboards.schemas.validate_json",
    "superset.dashboards.schemas.validate_json_metadata"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.schemas.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.dashboards.schemas.GetFavStarIdsSchema": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "superset.dashboards.schemas.ChartFavStarResponseResult"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.schemas.ImportV1DashboardSchema": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Dict",
    "marshmallow.fields.String",
    "marshmallow.fields.UUID"
   ]
  },
  "type": "class"
 },
 "superset.dashboards.schemas.Length": {
  "data": {
   "shadows": "marshmallow.validate.Length"
  },
  "type": "import"
 },
 "superset.dashboards.schemas.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.dashboards.schemas.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.dashboards.schemas.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.dashboards.schemas.ValidationError": {
  "data": {
   "shadows": "marshmallow.validate.ValidationError"
  },
  "type": "import"
 },
 "superset.dashboards.schemas.css_description": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "superset.dashboards.schemas.dashboard_title_description": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.dashboards.schemas.fields": {
  "data": {
   "shadows": "marshmallow.fields"
  },
  "type": "import"
 },
 "superset.dashboards.schemas.get_delete_ids_schema": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.dashboards.schemas.get_export_ids_schema": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.dashboards.schemas.get_fav_star_ids_schema": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.dashboards.schemas.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.dashboards.schemas.json_metadata_description": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "superset.dashboards.schemas.openapi_spec_methods_override": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "superset.dashboards.schemas.owners_description": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.dashboards.schemas.position_json_description": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.dashboards.schemas.post_load": {
  "data": {
   "shadows": "marshmallow.post_load"
  },
  "type": "import"
 },
 "superset.dashboards.schemas.published_description": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "superset.dashboards.schemas.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.dashboards.schemas.slug_description": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.dashboards.schemas.thumbnail_query_schema": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.dashboards.schemas.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.dashboards.schemas.validate_json": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "marshmallow.validate.ValidationError",
    "str",
    "superset.exceptions.SupersetException",
    "superset.utils.core.validate_json",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.dashboards.schemas.validate_json_metadata": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "DashboardJSONMetadataSchema",
    "bytearray",
    "bytes",
    "marshmallow.validate.ValidationError",
    "str",
    "superset.dashboards.schemas.json",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.data_cache": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "superset.databases": {
  "data": {},
  "type": "module"
 },
 "superset.databases.api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.databases.api.logging"
   ]
  },
  "type": "module"
 },
 "superset.databases.api.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.databases.api.BaseSupersetModelRestApi": {
  "data": {
   "shadows": "superset.views.base_api.BaseSupersetModelRestApi"
  },
  "type": "import"
 },
 "superset.databases.api.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "superset.databases.api.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.databases.api.CreateDatabaseCommand": {
  "data": {
   "shadows": "superset.databases.commands.create.CreateDatabaseCommand"
  },
  "type": "import"
 },
 "superset.databases.api.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.databases.api.DatabaseConnectionFailedError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseConnectionFailedError"
  },
  "type": "import"
 },
 "superset.databases.api.DatabaseCreateFailedError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseCreateFailedError"
  },
  "type": "import"
 },
 "superset.databases.api.DatabaseDAO": {
  "data": {
   "shadows": "superset.databases.dao.DatabaseDAO"
  },
  "type": "import"
 },
 "superset.databases.api.DatabaseDeleteDatasetsExistFailedError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseDeleteDatasetsExistFailedError"
  },
  "type": "import"
 },
 "superset.databases.api.DatabaseDeleteFailedError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseDeleteFailedError"
  },
  "type": "import"
 },
 "superset.databases.api.DatabaseFilter": {
  "data": {
   "shadows": "superset.databases.filters.DatabaseFilter"
  },
  "type": "import"
 },
 "superset.databases.api.DatabaseImportError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseImportError"
  },
  "type": "import"
 },
 "superset.databases.api.DatabaseInvalidError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseInvalidError"
  },
  "type": "import"
 },
 "superset.databases.api.DatabaseNotFoundError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseNotFoundError"
  },
  "type": "import"
 },
 "superset.databases.api.DatabasePostSchema": {
  "data": {
   "shadows": "superset.databases.schemas.DatabasePostSchema"
  },
  "type": "import"
 },
 "superset.databases.api.DatabasePutSchema": {
  "data": {
   "shadows": "superset.databases.schemas.DatabasePutSchema"
  },
  "type": "import"
 },
 "superset.databases.api.DatabaseRelatedObjectsResponse": {
  "data": {
   "shadows": "superset.databases.schemas.DatabaseRelatedObjectsResponse"
  },
  "type": "import"
 },
 "superset.databases.api.DatabaseRestApi": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.EXPORT",
    "superset.constants.RouteMethod.IMPORT",
    "superset.constants.RouteMethod.REST_MODEL_VIEW_CRUD_SET",
    "superset.databases.filters.DatabaseFilter",
    "superset.databases.schemas.DatabasePostSchema",
    "superset.databases.schemas.DatabasePutSchema",
    "superset.databases.schemas.DatabaseRelatedObjectsResponse",
    "superset.databases.schemas.DatabaseTestConnectionSchema",
    "superset.databases.schemas.SchemasResponseSchema",
    "superset.databases.schemas.SelectStarResponseSchema",
    "superset.databases.schemas.TableMetadataResponseSchema",
    "superset.databases.schemas.database_schemas_query_schema",
    "superset.databases.schemas.get_export_ids_schema",
    "superset.models.core.Database",
    "superset.views.base_api.BaseSupersetModelRestApi"
   ]
  },
  "type": "class"
 },
 "superset.databases.api.DatabaseRestApi.delete": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "str",
    "superset.databases.api.logger",
    "superset.databases.commands.delete.DeleteDatabaseCommand",
    "superset.databases.commands.exceptions.DatabaseDeleteDatasetsExistFailedError",
    "superset.databases.commands.exceptions.DatabaseDeleteFailedError",
    "superset.databases.commands.exceptions.DatabaseNotFoundError",
    "superset.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.databases.api.DatabaseRestApi.export": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "flask.Response",
    "flask.send_file",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "io.BytesIO",
    "superset.databases.commands.exceptions.DatabaseNotFoundError",
    "superset.databases.commands.export.ExportDatabasesCommand",
    "superset.databases.schemas.get_export_ids_schema",
    "superset.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "typing.Any",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "superset.databases.api.DatabaseRestApi.import_": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "flask.Response",
    "flask.request.files.get",
    "flask.request.form",
    "flask.request.form.get",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "str",
    "superset.commands.exceptions.CommandInvalidError",
    "superset.commands.importers.v1.utils.remove_root",
    "superset.databases.api.json",
    "superset.databases.api.logger",
    "superset.databases.commands.exceptions.DatabaseImportError",
    "superset.databases.commands.importers.dispatcher.ImportDatabasesCommand",
    "superset.views.base_api.statsd_metrics",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "superset.databases.api.DatabaseRestApi.post": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "marshmallow.ValidationError",
    "str",
    "superset.databases.api.logger",
    "superset.databases.commands.create.CreateDatabaseCommand",
    "superset.databases.commands.exceptions.DatabaseConnectionFailedError",
    "superset.databases.commands.exceptions.DatabaseCreateFailedError",
    "superset.databases.commands.exceptions.DatabaseInvalidError",
    "superset.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.databases.api.DatabaseRestApi.put": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "marshmallow.ValidationError",
    "str",
    "superset.databases.api.logger",
    "superset.databases.commands.exceptions.DatabaseConnectionFailedError",
    "superset.databases.commands.exceptions.DatabaseInvalidError",
    "superset.databases.commands.exceptions.DatabaseNotFoundError",
    "superset.databases.commands.exceptions.DatabaseUpdateFailedError",
    "superset.databases.commands.update.UpdateDatabaseCommand",
    "superset.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.databases.api.DatabaseRestApi.related_objects": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "flask.Response",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "len",
    "superset.databases.dao.DatabaseDAO.find_by_id",
    "superset.databases.dao.DatabaseDAO.get_related_objects",
    "superset.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.databases.api.DatabaseRestApi.schemas": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "int",
    "sqlalchemy.exc.OperationalError",
    "superset.databases.schemas.database_schemas_query_schema",
    "superset.event_logger.log_this_with_context",
    "superset.extensions.security_manager.get_schemas_accessible_by_user",
    "superset.typing.FlaskResponse",
    "superset.views.base_api.statsd_metrics",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.databases.api.DatabaseRestApi.select_star": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "sqlalchemy.exc.NoSuchTableError",
    "str",
    "superset.databases.decorators.check_datasource_access",
    "superset.event_logger.log_this_with_context",
    "superset.models.core.Database",
    "superset.typing.FlaskResponse",
    "superset.views.base_api.statsd_metrics",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.databases.api.DatabaseRestApi.table_metadata": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "sqlalchemy.exc.SQLAlchemyError",
    "str",
    "superset.databases.decorators.check_datasource_access",
    "superset.databases.utils.get_table_metadata",
    "superset.event_logger.log_this_with_context",
    "superset.models.core.Database",
    "superset.typing.FlaskResponse",
    "superset.utils.core.error_msg_from_exception",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.databases.api.DatabaseRestApi.test_connection": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "flask.g.user",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "marshmallow.ValidationError",
    "str",
    "superset.databases.commands.exceptions.DatabaseTestConnectionFailedError",
    "superset.databases.commands.test_connection.TestConnectionDatabaseCommand",
    "superset.databases.schemas.DatabaseTestConnectionSchema",
    "superset.event_logger.log_this_with_context",
    "superset.typing.FlaskResponse",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.databases.api.DatabaseTestConnectionFailedError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseTestConnectionFailedError"
  },
  "type": "import"
 },
 "superset.databases.api.DatabaseTestConnectionSchema": {
  "data": {
   "shadows": "superset.databases.schemas.DatabaseTestConnectionSchema"
  },
  "type": "import"
 },
 "superset.databases.api.DatabaseUpdateFailedError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseUpdateFailedError"
  },
  "type": "import"
 },
 "superset.databases.api.DeleteDatabaseCommand": {
  "data": {
   "shadows": "superset.databases.commands.delete.DeleteDatabaseCommand"
  },
  "type": "import"
 },
 "superset.databases.api.ExportDatabasesCommand": {
  "data": {
   "shadows": "superset.databases.commands.export.ExportDatabasesCommand"
  },
  "type": "import"
 },
 "superset.databases.api.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.databases.api.ImportDatabasesCommand": {
  "data": {
   "shadows": "superset.databases.commands.importers.dispatcher.ImportDatabasesCommand"
  },
  "type": "import"
 },
 "superset.databases.api.MODEL_API_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.databases.api.NoSuchTableError": {
  "data": {
   "shadows": "sqlalchemy.exc.NoSuchTableError"
  },
  "type": "import"
 },
 "superset.databases.api.OperationalError": {
  "data": {
   "shadows": "sqlalchemy.exc.OperationalError"
  },
  "type": "import"
 },
 "superset.databases.api.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.databases.api.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.databases.api.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.databases.api.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.databases.api.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.databases.api.SchemasResponseSchema": {
  "data": {
   "shadows": "superset.databases.schemas.SchemasResponseSchema"
  },
  "type": "import"
 },
 "superset.databases.api.SelectStarResponseSchema": {
  "data": {
   "shadows": "superset.databases.schemas.SelectStarResponseSchema"
  },
  "type": "import"
 },
 "superset.databases.api.TableMetadataResponseSchema": {
  "data": {
   "shadows": "superset.databases.schemas.TableMetadataResponseSchema"
  },
  "type": "import"
 },
 "superset.databases.api.TestConnectionDatabaseCommand": {
  "data": {
   "shadows": "superset.databases.commands.test_connection.TestConnectionDatabaseCommand"
  },
  "type": "import"
 },
 "superset.databases.api.UpdateDatabaseCommand": {
  "data": {
   "shadows": "superset.databases.commands.update.UpdateDatabaseCommand"
  },
  "type": "import"
 },
 "superset.databases.api.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.databases.api.ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "superset.databases.api.check_datasource_access": {
  "data": {
   "shadows": "superset.databases.decorators.check_datasource_access"
  },
  "type": "import"
 },
 "superset.databases.api.database_schemas_query_schema": {
  "data": {
   "shadows": "superset.databases.schemas.database_schemas_query_schema"
  },
  "type": "import"
 },
 "superset.databases.api.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.databases.api.error_msg_from_exception": {
  "data": {
   "shadows": "superset.utils.core.error_msg_from_exception"
  },
  "type": "import"
 },
 "superset.databases.api.event_logger": {
  "data": {
   "shadows": "superset.event_logger"
  },
  "type": "import"
 },
 "superset.databases.api.expose": {
  "data": {
   "shadows": "flask_appbuilder.api.expose"
  },
  "type": "import"
 },
 "superset.databases.api.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.databases.api.get_export_ids_schema": {
  "data": {
   "shadows": "superset.databases.schemas.get_export_ids_schema"
  },
  "type": "import"
 },
 "superset.databases.api.get_table_metadata": {
  "data": {
   "shadows": "superset.databases.utils.get_table_metadata"
  },
  "type": "import"
 },
 "superset.databases.api.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.databases.api.logger": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "superset.databases.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.databases.api.protect": {
  "data": {
   "shadows": "flask_appbuilder.api.protect"
  },
  "type": "import"
 },
 "superset.databases.api.remove_root": {
  "data": {
   "shadows": "superset.commands.importers.v1.utils.remove_root"
  },
  "type": "import"
 },
 "superset.databases.api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.databases.api.rison": {
  "data": {
   "shadows": "flask_appbuilder.api.rison"
  },
  "type": "import"
 },
 "superset.databases.api.safe": {
  "data": {
   "shadows": "flask_appbuilder.api.safe"
  },
  "type": "import"
 },
 "superset.databases.api.security_manager": {
  "data": {
   "shadows": "superset.extensions.security_manager"
  },
  "type": "import"
 },
 "superset.databases.api.send_file": {
  "data": {
   "shadows": "flask.send_file"
  },
  "type": "import"
 },
 "superset.databases.api.statsd_metrics": {
  "data": {
   "shadows": "superset.views.base_api.statsd_metrics"
  },
  "type": "import"
 },
 "superset.databases.commands": {
  "data": {},
  "type": "module"
 },
 "superset.databases.commands.create": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.databases.commands.create.logging"
   ]
  },
  "type": "module"
 },
 "superset.databases.commands.create.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.databases.commands.create.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.databases.commands.create.CreateDatabaseCommand": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.create.CreateDatabaseCommand.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.create.CreateDatabaseCommand.run": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Exception",
    "flask_appbuilder.models.sqla.Model",
    "superset.dao.exceptions.DAOCreateFailedError",
    "superset.databases.commands.create.logger",
    "superset.databases.commands.exceptions.DatabaseConnectionFailedError",
    "superset.databases.commands.exceptions.DatabaseCreateFailedError",
    "superset.databases.commands.test_connection.TestConnectionDatabaseCommand",
    "superset.databases.dao.DatabaseDAO.create",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.rollback",
    "superset.extensions.security_manager.add_permission_view_menu",
    "superset.extensions.security_manager.get_schema_perm"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.create.CreateDatabaseCommand.validate": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "list",
    "marshmallow.ValidationError",
    "str",
    "superset.databases.commands.exceptions.DatabaseExistsValidationError",
    "superset.databases.commands.exceptions.DatabaseInvalidError",
    "superset.databases.commands.exceptions.DatabaseRequiredFieldValidationError",
    "superset.databases.dao.DatabaseDAO.validate_uniqueness",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.create.DAOCreateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOCreateFailedError"
  },
  "type": "import"
 },
 "superset.databases.commands.create.DatabaseConnectionFailedError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseConnectionFailedError"
  },
  "type": "import"
 },
 "superset.databases.commands.create.DatabaseCreateFailedError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseCreateFailedError"
  },
  "type": "import"
 },
 "superset.databases.commands.create.DatabaseDAO": {
  "data": {
   "shadows": "superset.databases.dao.DatabaseDAO"
  },
  "type": "import"
 },
 "superset.databases.commands.create.DatabaseExistsValidationError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseExistsValidationError"
  },
  "type": "import"
 },
 "superset.databases.commands.create.DatabaseInvalidError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseInvalidError"
  },
  "type": "import"
 },
 "superset.databases.commands.create.DatabaseRequiredFieldValidationError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseRequiredFieldValidationError"
  },
  "type": "import"
 },
 "superset.databases.commands.create.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.databases.commands.create.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.databases.commands.create.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.databases.commands.create.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.databases.commands.create.TestConnectionDatabaseCommand": {
  "data": {
   "shadows": "superset.databases.commands.test_connection.TestConnectionDatabaseCommand"
  },
  "type": "import"
 },
 "superset.databases.commands.create.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.databases.commands.create.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.databases.commands.create.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.databases.commands.create.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.databases.commands.create.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.databases.commands.create.security_manager": {
  "data": {
   "shadows": "superset.extensions.security_manager"
  },
  "type": "import"
 },
 "superset.databases.commands.delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.databases.commands.delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.databases.commands.delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.databases.commands.delete.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.databases.commands.delete.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.databases.commands.delete.DatabaseDAO": {
  "data": {
   "shadows": "superset.databases.dao.DatabaseDAO"
  },
  "type": "import"
 },
 "superset.databases.commands.delete.DatabaseDeleteDatasetsExistFailedError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseDeleteDatasetsExistFailedError"
  },
  "type": "import"
 },
 "superset.databases.commands.delete.DatabaseDeleteFailedError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseDeleteFailedError"
  },
  "type": "import"
 },
 "superset.databases.commands.delete.DatabaseDeleteFailedReportsExistError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseDeleteFailedReportsExistError"
  },
  "type": "import"
 },
 "superset.databases.commands.delete.DatabaseNotFoundError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseNotFoundError"
  },
  "type": "import"
 },
 "superset.databases.commands.delete.DeleteDatabaseCommand": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.delete.DeleteDatabaseCommand.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.models.core.Database",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.delete.DeleteDatabaseCommand.run": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.databases.commands.delete.logger",
    "superset.databases.commands.exceptions.DatabaseDeleteFailedError",
    "superset.databases.dao.DatabaseDAO.delete"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.delete.DeleteDatabaseCommand.validate": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.databases.commands.exceptions.DatabaseDeleteDatasetsExistFailedError",
    "superset.databases.commands.exceptions.DatabaseDeleteFailedReportsExistError",
    "superset.databases.commands.exceptions.DatabaseNotFoundError",
    "superset.databases.dao.DatabaseDAO.find_by_id",
    "superset.reports.dao.ReportScheduleDAO.find_by_database_id"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.delete.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.databases.commands.delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.databases.commands.delete.ReportScheduleDAO": {
  "data": {
   "shadows": "superset.reports.dao.ReportScheduleDAO"
  },
  "type": "import"
 },
 "superset.databases.commands.delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.databases.commands.delete._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.databases.commands.delete.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.databases.commands.delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.databases.commands.exceptions": {
  "data": {},
  "type": "module"
 },
 "superset.databases.commands.exceptions.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.databases.commands.exceptions.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.databases.commands.exceptions.CreateFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.CreateFailedError"
  },
  "type": "import"
 },
 "superset.databases.commands.exceptions.DatabaseConnectionFailedError": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.databases.commands.exceptions.DatabaseCreateFailedError",
    "superset.databases.commands.exceptions.DatabaseUpdateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseCreateFailedError": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CreateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseDeleteDatasetsExistFailedError": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.DeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseDeleteFailedError": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.DeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseDeleteFailedReportsExistError": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.databases.commands.exceptions.DatabaseDeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseExistsValidationError": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseExistsValidationError.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.exceptions.DatabaseExtraJSONValidationError": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseExtraJSONValidationError.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.exceptions.DatabaseExtraValidationError": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseExtraValidationError.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.exceptions.DatabaseImportError": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.ImportFailedError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseInvalidError": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandInvalidError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseNotFoundError": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseRequiredFieldValidationError": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseRequiredFieldValidationError.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.exceptions.DatabaseSecurityUnsafeError": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.databases.commands.exceptions.DatabaseTestConnectionFailedError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseTestConnectionDriverError": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.databases.commands.exceptions.DatabaseTestConnectionFailedError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseTestConnectionFailedError": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseTestConnectionUnexpectedError": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.databases.commands.exceptions.DatabaseTestConnectionFailedError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DatabaseUpdateFailedError": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.UpdateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.exceptions.DeleteFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.DeleteFailedError"
  },
  "type": "import"
 },
 "superset.databases.commands.exceptions.ImportFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.ImportFailedError"
  },
  "type": "import"
 },
 "superset.databases.commands.exceptions.UpdateFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.UpdateFailedError"
  },
  "type": "import"
 },
 "superset.databases.commands.exceptions.ValidationError": {
  "data": {
   "shadows": "marshmallow.validate.ValidationError"
  },
  "type": "import"
 },
 "superset.databases.commands.exceptions._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.databases.commands.export": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.databases.commands.export.logging"
   ]
  },
  "type": "module"
 },
 "superset.databases.commands.export.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.databases.commands.export.DatabaseDAO": {
  "data": {
   "shadows": "superset.databases.dao.DatabaseDAO"
  },
  "type": "import"
 },
 "superset.databases.commands.export.DatabaseNotFoundError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseNotFoundError"
  },
  "type": "import"
 },
 "superset.databases.commands.export.EXPORT_VERSION": {
  "data": {
   "shadows": "superset.utils.dict_import_export.EXPORT_VERSION"
  },
  "type": "import"
 },
 "superset.databases.commands.export.ExportDatabasesCommand": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "superset.commands.export.ExportModelsCommand",
    "superset.databases.commands.exceptions.DatabaseNotFoundError",
    "superset.databases.dao.DatabaseDAO"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.export.ExportDatabasesCommand._export": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "superset.databases.commands.export.json",
    "superset.databases.commands.export.logger",
    "superset.databases.commands.export.yaml",
    "superset.models.core.Database",
    "superset.utils.dict_import_export.EXPORT_VERSION",
    "typing.Iterator",
    "typing.Tuple",
    "werkzeug.utils.secure_filename"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.export.ExportModelsCommand": {
  "data": {
   "shadows": "superset.commands.export.ExportModelsCommand"
  },
  "type": "import"
 },
 "superset.databases.commands.export.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "superset.databases.commands.export.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.databases.commands.export.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.databases.commands.export.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.databases.commands.export.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.databases.commands.export.secure_filename": {
  "data": {
   "shadows": "werkzeug.utils.secure_filename"
  },
  "type": "import"
 },
 "superset.databases.commands.export.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "superset.databases.commands.importers": {
  "data": {},
  "type": "module"
 },
 "superset.databases.commands.importers.dispatcher": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.databases.commands.importers.dispatcher.logging",
    "superset.databases.commands.importers.v1.ImportDatabasesCommand"
   ]
  },
  "type": "module"
 },
 "superset.databases.commands.importers.dispatcher.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.dispatcher.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.dispatcher.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.dispatcher.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.dispatcher.ImportDatabasesCommand": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.importers.dispatcher.ImportDatabasesCommand.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.importers.dispatcher.ImportDatabasesCommand.run": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception",
    "marshmallow.exceptions.ValidationError",
    "superset.commands.exceptions.CommandInvalidError",
    "superset.commands.importers.exceptions.IncorrectVersionError",
    "superset.databases.commands.importers.dispatcher.command_versions",
    "superset.databases.commands.importers.dispatcher.logger",
    "version"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.importers.dispatcher.ImportDatabasesCommand.validate": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "superset.databases.commands.importers.dispatcher.IncorrectVersionError": {
  "data": {
   "shadows": "superset.commands.importers.exceptions.IncorrectVersionError"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.dispatcher.ValidationError": {
  "data": {
   "shadows": "marshmallow.exceptions.ValidationError"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.dispatcher.command_versions": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.databases.commands.importers.dispatcher.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.databases.commands.importers.dispatcher.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.dispatcher.v1": {
  "data": {
   "shadows": "superset.databases.commands.importers.v1"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1": {
  "data": {},
  "type": "module"
 },
 "superset.databases.commands.importers.v1.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.DatabaseDAO": {
  "data": {
   "shadows": "superset.databases.dao.DatabaseDAO"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.DatabaseImportError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseImportError"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.ImportDatabasesCommand": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "str",
    "superset.commands.importers.v1.ImportModelsCommand",
    "superset.databases.commands.exceptions.DatabaseImportError",
    "superset.databases.dao.DatabaseDAO",
    "superset.databases.schemas.ImportV1DatabaseSchema",
    "superset.datasets.schemas.ImportV1DatasetSchema",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.importers.v1.ImportDatabasesCommand._import": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "bool",
    "int",
    "sqlalchemy.orm.Session",
    "staticmethod",
    "str",
    "superset.databases.commands.importers.v1.utils.import_database",
    "superset.datasets.commands.importers.v1.utils.import_dataset",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.importers.v1.ImportModelsCommand": {
  "data": {
   "shadows": "superset.commands.importers.v1.ImportModelsCommand"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.ImportV1DatabaseSchema": {
  "data": {
   "shadows": "superset.databases.schemas.ImportV1DatabaseSchema"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.ImportV1DatasetSchema": {
  "data": {
   "shadows": "superset.datasets.schemas.ImportV1DatasetSchema"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.import_database": {
  "data": {
   "shadows": "superset.databases.commands.importers.v1.utils.import_database"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.import_dataset": {
  "data": {
   "shadows": "superset.datasets.commands.importers.v1.utils.import_dataset"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.utils": {
  "data": {},
  "type": "module"
 },
 "superset.databases.commands.importers.v1.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.utils.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.utils.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.databases.commands.importers.v1.utils.import_database": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.orm.Session",
    "str",
    "superset.databases.commands.importers.v1.utils.json",
    "superset.models.core.Database",
    "superset.models.core.Database.import_from_dict",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.importers.v1.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.databases.commands.test_connection.logging"
   ]
  },
  "type": "module"
 },
 "superset.databases.commands.test_connection.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.DBAPIError": {
  "data": {
   "shadows": "sqlalchemy.exc.DBAPIError"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.DBSecurityException": {
  "data": {
   "shadows": "superset.security.analytics_db_safety.DBSecurityException"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.DatabaseDAO": {
  "data": {
   "shadows": "superset.databases.dao.DatabaseDAO"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.DatabaseSecurityUnsafeError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseSecurityUnsafeError"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.DatabaseTestConnectionDriverError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseTestConnectionDriverError"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.DatabaseTestConnectionFailedError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseTestConnectionFailedError"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.DatabaseTestConnectionUnexpectedError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseTestConnectionUnexpectedError"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.NoSuchModuleError": {
  "data": {
   "shadows": "sqlalchemy.exc.NoSuchModuleError"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.TestConnectionDatabaseCommand": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.test_connection.TestConnectionDatabaseCommand.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "str",
    "superset.models.core.Database",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.test_connection.TestConnectionDatabaseCommand.run": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "ModuleNotFoundError",
    "contextlib.closing",
    "flask_babel.gettext",
    "sqlalchemy.engine.url.make_url",
    "sqlalchemy.exc.DBAPIError",
    "sqlalchemy.exc.NoSuchModuleError",
    "str",
    "superset.databases.commands.exceptions.DatabaseSecurityUnsafeError",
    "superset.databases.commands.exceptions.DatabaseTestConnectionDriverError",
    "superset.databases.commands.exceptions.DatabaseTestConnectionFailedError",
    "superset.databases.commands.exceptions.DatabaseTestConnectionUnexpectedError",
    "superset.databases.dao.DatabaseDAO.build_db_for_connection_test",
    "superset.security.analytics_db_safety.DBSecurityException"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.test_connection.TestConnectionDatabaseCommand.validate": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "superset.databases.dao.DatabaseDAO.get_database_by_name"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.test_connection.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection._": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.databases.commands.test_connection.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.databases.commands.test_connection.make_url": {
  "data": {
   "shadows": "sqlalchemy.engine.url.make_url"
  },
  "type": "import"
 },
 "superset.databases.commands.update": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.databases.commands.update.logging"
   ]
  },
  "type": "module"
 },
 "superset.databases.commands.update.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.databases.commands.update.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.databases.commands.update.DAOUpdateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOUpdateFailedError"
  },
  "type": "import"
 },
 "superset.databases.commands.update.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.databases.commands.update.DatabaseConnectionFailedError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseConnectionFailedError"
  },
  "type": "import"
 },
 "superset.databases.commands.update.DatabaseDAO": {
  "data": {
   "shadows": "superset.databases.dao.DatabaseDAO"
  },
  "type": "import"
 },
 "superset.databases.commands.update.DatabaseExistsValidationError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseExistsValidationError"
  },
  "type": "import"
 },
 "superset.databases.commands.update.DatabaseInvalidError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseInvalidError"
  },
  "type": "import"
 },
 "superset.databases.commands.update.DatabaseNotFoundError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseNotFoundError"
  },
  "type": "import"
 },
 "superset.databases.commands.update.DatabaseUpdateFailedError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseUpdateFailedError"
  },
  "type": "import"
 },
 "superset.databases.commands.update.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.databases.commands.update.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.databases.commands.update.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.databases.commands.update.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.databases.commands.update.UpdateDatabaseCommand": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.databases.commands.update.UpdateDatabaseCommand.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "str",
    "superset.models.core.Database",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.update.UpdateDatabaseCommand.run": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception",
    "flask_appbuilder.models.sqla.Model",
    "superset.dao.exceptions.DAOUpdateFailedError",
    "superset.databases.commands.exceptions.DatabaseConnectionFailedError",
    "superset.databases.commands.exceptions.DatabaseUpdateFailedError",
    "superset.databases.commands.update.logger",
    "superset.databases.dao.DatabaseDAO.update",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.rollback",
    "superset.extensions.security_manager.add_permission_view_menu",
    "superset.extensions.security_manager.get_schema_perm"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.update.UpdateDatabaseCommand.validate": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "list",
    "marshmallow.ValidationError",
    "str",
    "superset.databases.commands.exceptions.DatabaseExistsValidationError",
    "superset.databases.commands.exceptions.DatabaseInvalidError",
    "superset.databases.commands.exceptions.DatabaseNotFoundError",
    "superset.databases.dao.DatabaseDAO.find_by_id",
    "superset.databases.dao.DatabaseDAO.validate_update_uniqueness",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.databases.commands.update.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.databases.commands.update.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.databases.commands.update.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.databases.commands.update.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.databases.commands.update.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.databases.commands.update.security_manager": {
  "data": {
   "shadows": "superset.extensions.security_manager"
  },
  "type": "import"
 },
 "superset.databases.dao": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.databases.dao.logging"
   ]
  },
  "type": "module"
 },
 "superset.databases.dao.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.databases.dao.BaseDAO": {
  "data": {
   "shadows": "superset.dao.base.BaseDAO"
  },
  "type": "import"
 },
 "superset.databases.dao.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.databases.dao.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.databases.dao.DatabaseDAO": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "superset.dao.base.BaseDAO",
    "superset.databases.filters.DatabaseFilter",
    "superset.models.core.Database"
   ]
  },
  "type": "class"
 },
 "superset.databases.dao.DatabaseDAO.build_db_for_connection_test": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "bool",
    "staticmethod",
    "str",
    "superset.models.core.Database",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.databases.dao.DatabaseDAO.get_database_by_name": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "superset.extensions.db.session.query",
    "superset.models.core.Database",
    "superset.models.core.Database.database_name",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.databases.dao.DatabaseDAO.get_related_objects": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "int",
    "str",
    "superset.extensions.db.session.query",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.Dashboard.slices",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.datasource_id.in_",
    "superset.models.slice.Slice.datasource_type",
    "superset.models.slice.Slice.id.in_",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.databases.dao.DatabaseDAO.validate_uniqueness": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bool",
    "staticmethod",
    "str",
    "superset.extensions.db.session.query",
    "superset.models.core.Database",
    "superset.models.core.Database.database_name"
   ]
  },
  "type": "function"
 },
 "superset.databases.dao.DatabaseDAO.validate_update_uniqueness": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bool",
    "int",
    "staticmethod",
    "str",
    "superset.extensions.db.session.query",
    "superset.models.core.Database",
    "superset.models.core.Database.database_name",
    "superset.models.core.Database.id"
   ]
  },
  "type": "function"
 },
 "superset.databases.dao.DatabaseFilter": {
  "data": {
   "shadows": "superset.databases.filters.DatabaseFilter"
  },
  "type": "import"
 },
 "superset.databases.dao.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.databases.dao.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.databases.dao.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.databases.dao.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.databases.dao.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.databases.dao.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.databases.decorators": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.databases.decorators.logging"
   ]
  },
  "type": "module"
 },
 "superset.databases.decorators.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.databases.decorators.BaseSupersetModelRestApi": {
  "data": {
   "shadows": "superset.views.base_api.BaseSupersetModelRestApi"
  },
  "type": "import"
 },
 "superset.databases.decorators.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.databases.decorators.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.databases.decorators.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.databases.decorators.Table": {
  "data": {
   "shadows": "superset.sql_parse.Table"
  },
  "type": "import"
 },
 "superset.databases.decorators._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.databases.decorators.check_datasource_access": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "f",
    "superset.databases.decorators.functools",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.databases.decorators.check_datasource_access.wraps": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "f",
    "flask.g.user",
    "flask_babel.lazy_gettext",
    "int",
    "str",
    "superset.databases.decorators.logger",
    "superset.models.core.Database",
    "superset.sql_parse.Table",
    "superset.utils.core.parse_js_uri_path_item",
    "superset.views.base_api.BaseSupersetModelRestApi",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.databases.decorators.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "superset.databases.decorators.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.databases.decorators.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.databases.decorators.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.databases.decorators.parse_js_uri_path_item": {
  "data": {
   "shadows": "superset.utils.core.parse_js_uri_path_item"
  },
  "type": "import"
 },
 "superset.databases.filters": {
  "data": {},
  "type": "module"
 },
 "superset.databases.filters.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.databases.filters.BaseFilter": {
  "data": {
   "shadows": "superset.views.base.BaseFilter"
  },
  "type": "import"
 },
 "superset.databases.filters.DatabaseFilter": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.databases.filters.DatabaseFilter.apply": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sqlalchemy.or_",
    "sqlalchemy.orm.Query",
    "superset.security_manager.can_access_all_databases",
    "superset.security_manager.user_view_menu_names",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.databases.filters.DatabaseFilter.schema_access_databases": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "str",
    "superset.security_manager.unpack_schema_perm",
    "superset.security_manager.user_view_menu_names",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.databases.filters.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.Query"
  },
  "type": "import"
 },
 "superset.databases.filters.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.databases.filters.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.databases.filters.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.databases.schemas": {
  "data": {
   "symbols_in_volume": [
    "superset.utils.core.markdown"
   ]
  },
  "type": "module"
 },
 "superset.databases.schemas.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.databases.schemas.ArgumentError": {
  "data": {
   "shadows": "sqlalchemy.exc.ArgumentError"
  },
  "type": "import"
 },
 "superset.databases.schemas.CertificateException": {
  "data": {
   "shadows": "superset.exceptions.CertificateException"
  },
  "type": "import"
 },
 "superset.databases.schemas.DatabasePostSchema": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Integer",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "superset.databases.schemas.allow_csv_upload_description",
    "superset.databases.schemas.allow_ctas_description",
    "superset.databases.schemas.allow_cvas_description",
    "superset.databases.schemas.allow_dml_description",
    "superset.databases.schemas.allow_multi_schema_metadata_fetch_description",
    "superset.databases.schemas.allow_run_async_description",
    "superset.databases.schemas.cache_timeout_description",
    "superset.databases.schemas.database_name_description",
    "superset.databases.schemas.encrypted_extra_description",
    "superset.databases.schemas.encrypted_extra_validator",
    "superset.databases.schemas.expose_in_sqllab_description",
    "superset.databases.schemas.extra_description",
    "superset.databases.schemas.extra_validator",
    "superset.databases.schemas.force_ctas_schema_description",
    "superset.databases.schemas.impersonate_user_description",
    "superset.databases.schemas.server_cert_description",
    "superset.databases.schemas.server_cert_validator",
    "superset.databases.schemas.sqlalchemy_uri_description",
    "superset.databases.schemas.sqlalchemy_uri_validator"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.DatabasePutSchema": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Integer",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "superset.databases.schemas.allow_csv_upload_description",
    "superset.databases.schemas.allow_ctas_description",
    "superset.databases.schemas.allow_cvas_description",
    "superset.databases.schemas.allow_dml_description",
    "superset.databases.schemas.allow_multi_schema_metadata_fetch_description",
    "superset.databases.schemas.allow_run_async_description",
    "superset.databases.schemas.cache_timeout_description",
    "superset.databases.schemas.database_name_description",
    "superset.databases.schemas.encrypted_extra_description",
    "superset.databases.schemas.encrypted_extra_validator",
    "superset.databases.schemas.expose_in_sqllab_description",
    "superset.databases.schemas.extra_description",
    "superset.databases.schemas.extra_validator",
    "superset.databases.schemas.force_ctas_schema_description",
    "superset.databases.schemas.impersonate_user_description",
    "superset.databases.schemas.server_cert_description",
    "superset.databases.schemas.server_cert_validator",
    "superset.databases.schemas.sqlalchemy_uri_description",
    "superset.databases.schemas.sqlalchemy_uri_validator"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.DatabaseRelatedChart": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "id",
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.String"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.DatabaseRelatedCharts": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "superset.databases.schemas.DatabaseRelatedChart"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.DatabaseRelatedDashboard": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "id",
    "marshmallow.Schema",
    "marshmallow.fields.Dict",
    "marshmallow.fields.Integer",
    "marshmallow.fields.String"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.DatabaseRelatedDashboards": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "superset.databases.schemas.DatabaseRelatedDashboard"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.DatabaseRelatedObjectsResponse": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Nested",
    "superset.databases.schemas.DatabaseRelatedCharts",
    "superset.databases.schemas.DatabaseRelatedDashboards"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.DatabaseTestConnectionSchema": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "superset.databases.schemas.database_name_description",
    "superset.databases.schemas.encrypted_extra_description",
    "superset.databases.schemas.encrypted_extra_validator",
    "superset.databases.schemas.extra_description",
    "superset.databases.schemas.extra_validator",
    "superset.databases.schemas.impersonate_user_description",
    "superset.databases.schemas.server_cert_description",
    "superset.databases.schemas.server_cert_validator",
    "superset.databases.schemas.sqlalchemy_uri_description",
    "superset.databases.schemas.sqlalchemy_uri_validator"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.databases.schemas.ImportV1DatabaseExtraSchema": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Dict",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.Raw",
    "marshmallow.fields.Str",
    "marshmallow.fields.String"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.ImportV1DatabaseSchema": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Integer",
    "marshmallow.fields.Nested",
    "marshmallow.fields.String",
    "marshmallow.fields.UUID",
    "superset.databases.schemas.ImportV1DatabaseExtraSchema"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.ImportV1DatabaseSchema.validate_password": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError",
    "marshmallow.validates_schema",
    "str",
    "superset.models.core.PASSWORD_MASK",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.databases.schemas.Length": {
  "data": {
   "shadows": "marshmallow.validate.Length"
  },
  "type": "import"
 },
 "superset.databases.schemas.MetaData": {
  "data": {
   "shadows": "sqlalchemy.MetaData"
  },
  "type": "import"
 },
 "superset.databases.schemas.PASSWORD_MASK": {
  "data": {
   "shadows": "superset.models.core.PASSWORD_MASK"
  },
  "type": "import"
 },
 "superset.databases.schemas.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.databases.schemas.SchemasResponseSchema": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.List",
    "marshmallow.fields.String"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.SelectStarResponseSchema": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.String"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.TableMetadataColumnsResponseSchema": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.List",
    "marshmallow.fields.String",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.TableMetadataForeignKeysIndexesResponseSchema": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "marshmallow.fields.String",
    "superset.databases.schemas.TableMetadataOptionsResponseSchema",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.TableMetadataOptionsResponseSchema": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Bool"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.TableMetadataPrimaryKeyResponseSchema": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.List",
    "marshmallow.fields.String",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.TableMetadataResponseSchema": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "marshmallow.fields.String",
    "superset.databases.schemas.TableMetadataColumnsResponseSchema",
    "superset.databases.schemas.TableMetadataForeignKeysIndexesResponseSchema",
    "superset.databases.schemas.TableMetadataPrimaryKeyResponseSchema"
   ]
  },
  "type": "class"
 },
 "superset.databases.schemas.ValidationError": {
  "data": {
   "shadows": "marshmallow.validate.ValidationError"
  },
  "type": "import"
 },
 "superset.databases.schemas._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.databases.schemas.allow_csv_upload_description": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "superset.databases.schemas.allow_ctas_description": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "superset.databases.schemas.allow_cvas_description": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "superset.databases.schemas.allow_dml_description": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "superset.databases.schemas.allow_multi_schema_metadata_fetch_description": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "superset.databases.schemas.allow_run_async_description": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "superset.databases.schemas.cache_timeout_description": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "superset.databases.schemas.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.databases.schemas.database_name_description": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.databases.schemas.database_schemas_query_schema": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.databases.schemas.encrypted_extra_description": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "superset.databases.schemas.encrypted_extra_validator": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "marshmallow.validate.ValidationError",
    "str",
    "superset.databases.schemas.json"
   ]
  },
  "type": "function"
 },
 "superset.databases.schemas.expose_in_sqllab_description": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "superset.databases.schemas.extra_description": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "superset.databases.schemas.extra_validator": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "marshmallow.validate.ValidationError",
    "sqlalchemy.MetaData",
    "str",
    "superset.databases.schemas.inspect",
    "superset.databases.schemas.json"
   ]
  },
  "type": "function"
 },
 "superset.databases.schemas.fields": {
  "data": {
   "shadows": "marshmallow.fields"
  },
  "type": "import"
 },
 "superset.databases.schemas.force_ctas_schema_description": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "superset.databases.schemas.get_export_ids_schema": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "superset.databases.schemas.impersonate_user_description": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "superset.databases.schemas.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "superset.databases.schemas.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.databases.schemas.make_url": {
  "data": {
   "shadows": "sqlalchemy.engine.url.make_url"
  },
  "type": "import"
 },
 "superset.databases.schemas.markdown": {
  "data": {
   "shadows": "superset.utils.core.markdown"
  },
  "type": "import"
 },
 "superset.databases.schemas.parse_ssl_cert": {
  "data": {
   "shadows": "superset.utils.core.parse_ssl_cert"
  },
  "type": "import"
 },
 "superset.databases.schemas.server_cert_description": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "superset.databases.schemas.server_cert_validator": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "marshmallow.validate.ValidationError",
    "str",
    "superset.exceptions.CertificateException",
    "superset.utils.core.parse_ssl_cert"
   ]
  },
  "type": "function"
 },
 "superset.databases.schemas.sqlalchemy_uri_description": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "superset.databases.schemas.sqlalchemy_uri_validator": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "flask.current_app.config.get",
    "flask_babel.lazy_gettext",
    "marshmallow.validate.ValidationError",
    "sqlalchemy.engine.url.make_url",
    "sqlalchemy.exc.ArgumentError",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.databases.schemas.urllib.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "superset.databases.schemas.validates_schema": {
  "data": {
   "shadows": "marshmallow.validates_schema"
  },
  "type": "import"
 },
 "superset.databases.utils": {
  "data": {
   "symbols_in_volume": [
    "superset.app.config"
   ]
  },
  "type": "module"
 },
 "superset.databases.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.databases.utils.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.databases.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.databases.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.databases.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.databases.utils.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.databases.utils.custom_password_store": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "superset.databases.utils.get_col_type": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.databases.utils.get_foreign_keys_metadata": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "str",
    "superset.models.core.Database",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.databases.utils.get_indexes_metadata": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "str",
    "superset.models.core.Database",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.databases.utils.get_table_metadata": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "str",
    "superset.databases.utils.get_col_type",
    "superset.databases.utils.get_foreign_keys_metadata",
    "superset.databases.utils.get_indexes_metadata",
    "superset.models.core.Database",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.dataframe": {
  "data": {},
  "type": "module"
 },
 "superset.dataframe.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.dataframe.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.dataframe.JS_MAX_INTEGER": {
  "data": {
   "shadows": "superset.utils.core.JS_MAX_INTEGER"
  },
  "type": "import"
 },
 "superset.dataframe.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.dataframe.df_to_records": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abs",
    "int",
    "isinstance",
    "list",
    "pandas.DataFrame",
    "str",
    "superset.utils.core.JS_MAX_INTEGER",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.dataframe.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.datasets": {
  "data": {},
  "type": "module"
 },
 "superset.datasets.api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.datasets.api.logging"
   ]
  },
  "type": "module"
 },
 "superset.datasets.api.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.datasets.api.BaseSupersetModelRestApi": {
  "data": {
   "shadows": "superset.views.base_api.BaseSupersetModelRestApi"
  },
  "type": "import"
 },
 "superset.datasets.api.BulkDeleteDatasetCommand": {
  "data": {
   "shadows": "superset.datasets.commands.bulk_delete.BulkDeleteDatasetCommand"
  },
  "type": "import"
 },
 "superset.datasets.api.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "superset.datasets.api.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.datasets.api.CreateDatasetCommand": {
  "data": {
   "shadows": "superset.datasets.commands.create.CreateDatasetCommand"
  },
  "type": "import"
 },
 "superset.datasets.api.DatabaseFilter": {
  "data": {
   "shadows": "superset.databases.filters.DatabaseFilter"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasetBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasetCreateFailedError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetCreateFailedError"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasetDAO": {
  "data": {
   "shadows": "superset.datasets.dao.DatasetDAO"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasetDeleteFailedError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetDeleteFailedError"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasetForbiddenError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetForbiddenError"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasetImportError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetImportError"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasetInvalidError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetInvalidError"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasetIsNullOrEmptyFilter": {
  "data": {
   "shadows": "superset.datasets.filters.DatasetIsNullOrEmptyFilter"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasetNotFoundError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetNotFoundError"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasetPostSchema": {
  "data": {
   "shadows": "superset.datasets.schemas.DatasetPostSchema"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasetPutSchema": {
  "data": {
   "shadows": "superset.datasets.schemas.DatasetPutSchema"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasetRefreshFailedError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetRefreshFailedError"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasetRelatedObjectsResponse": {
  "data": {
   "shadows": "superset.datasets.schemas.DatasetRelatedObjectsResponse"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasetRestApi": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.DISTINCT",
    "superset.constants.RouteMethod.EXPORT",
    "superset.constants.RouteMethod.IMPORT",
    "superset.constants.RouteMethod.RELATED",
    "superset.constants.RouteMethod.REST_MODEL_VIEW_CRUD_SET",
    "superset.databases.filters.DatabaseFilter",
    "superset.datasets.filters.DatasetIsNullOrEmptyFilter",
    "superset.datasets.schemas.DatasetPostSchema",
    "superset.datasets.schemas.DatasetPutSchema",
    "superset.datasets.schemas.DatasetRelatedObjectsResponse",
    "superset.datasets.schemas.get_export_ids_schema",
    "superset.views.base.DatasourceFilter",
    "superset.views.base_api.BaseSupersetModelRestApi",
    "superset.views.base_api.RelatedFieldFilter",
    "superset.views.filters.FilterRelatedOwners"
   ]
  },
  "type": "class"
 },
 "superset.datasets.api.DatasetRestApi.bulk_delete": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "flask_babel.ngettext",
    "len",
    "str",
    "superset.datasets.commands.bulk_delete.BulkDeleteDatasetCommand",
    "superset.datasets.commands.exceptions.DatasetBulkDeleteFailedError",
    "superset.datasets.commands.exceptions.DatasetForbiddenError",
    "superset.datasets.commands.exceptions.DatasetNotFoundError",
    "superset.datasets.schemas.get_delete_ids_schema",
    "superset.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.datasets.api.DatasetRestApi.delete": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "str",
    "superset.datasets.api.logger",
    "superset.datasets.commands.delete.DeleteDatasetCommand",
    "superset.datasets.commands.exceptions.DatasetDeleteFailedError",
    "superset.datasets.commands.exceptions.DatasetForbiddenError",
    "superset.datasets.commands.exceptions.DatasetNotFoundError",
    "superset.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.datasets.api.DatasetRestApi.export": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "flask.Response",
    "flask.send_file",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "io.BytesIO",
    "len",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.connectors.sqla.models.SqlaTable.id.in_",
    "superset.datasets.api.yaml",
    "superset.datasets.commands.exceptions.DatasetNotFoundError",
    "superset.datasets.commands.export.ExportDatasetsCommand",
    "superset.datasets.schemas.get_export_ids_schema",
    "superset.event_logger.log_this_with_context",
    "superset.is_feature_enabled",
    "superset.views.base.generate_download_headers",
    "superset.views.base_api.statsd_metrics",
    "typing.Any",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "superset.datasets.api.DatasetRestApi.import_": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "flask.Response",
    "flask.request.files.get",
    "flask.request.form",
    "flask.request.form.get",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "str",
    "superset.commands.exceptions.CommandInvalidError",
    "superset.commands.importers.v1.utils.remove_root",
    "superset.datasets.api.json",
    "superset.datasets.api.logger",
    "superset.datasets.commands.exceptions.DatasetImportError",
    "superset.datasets.commands.importers.dispatcher.ImportDatasetsCommand",
    "superset.views.base_api.statsd_metrics",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "superset.datasets.api.DatasetRestApi.post": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "marshmallow.ValidationError",
    "str",
    "superset.datasets.api.logger",
    "superset.datasets.commands.create.CreateDatasetCommand",
    "superset.datasets.commands.exceptions.DatasetCreateFailedError",
    "superset.datasets.commands.exceptions.DatasetInvalidError",
    "superset.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.datasets.api.DatasetRestApi.put": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "bool",
    "distutils.util.strtobool",
    "flask.Response",
    "flask.g.user",
    "flask.request.args",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "marshmallow.ValidationError",
    "str",
    "superset.datasets.api.logger",
    "superset.datasets.commands.exceptions.DatasetForbiddenError",
    "superset.datasets.commands.exceptions.DatasetInvalidError",
    "superset.datasets.commands.exceptions.DatasetNotFoundError",
    "superset.datasets.commands.exceptions.DatasetUpdateFailedError",
    "superset.datasets.commands.update.UpdateDatasetCommand",
    "superset.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.datasets.api.DatasetRestApi.refresh": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "str",
    "superset.datasets.api.logger",
    "superset.datasets.commands.exceptions.DatasetForbiddenError",
    "superset.datasets.commands.exceptions.DatasetNotFoundError",
    "superset.datasets.commands.exceptions.DatasetRefreshFailedError",
    "superset.datasets.commands.refresh.RefreshDatasetCommand",
    "superset.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.datasets.api.DatasetRestApi.related_objects": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "flask.Response",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "len",
    "superset.datasets.dao.DatasetDAO.find_by_id",
    "superset.datasets.dao.DatasetDAO.get_related_objects",
    "superset.event_logger.log_this_with_context",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.datasets.api.DatasetUpdateFailedError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetUpdateFailedError"
  },
  "type": "import"
 },
 "superset.datasets.api.DatasourceFilter": {
  "data": {
   "shadows": "superset.views.base.DatasourceFilter"
  },
  "type": "import"
 },
 "superset.datasets.api.DeleteDatasetCommand": {
  "data": {
   "shadows": "superset.datasets.commands.delete.DeleteDatasetCommand"
  },
  "type": "import"
 },
 "superset.datasets.api.ExportDatasetsCommand": {
  "data": {
   "shadows": "superset.datasets.commands.export.ExportDatasetsCommand"
  },
  "type": "import"
 },
 "superset.datasets.api.FilterRelatedOwners": {
  "data": {
   "shadows": "superset.views.filters.FilterRelatedOwners"
  },
  "type": "import"
 },
 "superset.datasets.api.ImportDatasetsCommand": {
  "data": {
   "shadows": "superset.datasets.commands.importers.dispatcher.ImportDatasetsCommand"
  },
  "type": "import"
 },
 "superset.datasets.api.MODEL_API_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.datasets.api.RefreshDatasetCommand": {
  "data": {
   "shadows": "superset.datasets.commands.refresh.RefreshDatasetCommand"
  },
  "type": "import"
 },
 "superset.datasets.api.RelatedFieldFilter": {
  "data": {
   "shadows": "superset.views.base_api.RelatedFieldFilter"
  },
  "type": "import"
 },
 "superset.datasets.api.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.datasets.api.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.datasets.api.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.datasets.api.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.datasets.api.UpdateDatasetCommand": {
  "data": {
   "shadows": "superset.datasets.commands.update.UpdateDatasetCommand"
  },
  "type": "import"
 },
 "superset.datasets.api.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.datasets.api.ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "superset.datasets.api.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.datasets.api.event_logger": {
  "data": {
   "shadows": "superset.event_logger"
  },
  "type": "import"
 },
 "superset.datasets.api.expose": {
  "data": {
   "shadows": "flask_appbuilder.api.expose"
  },
  "type": "import"
 },
 "superset.datasets.api.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.datasets.api.generate_download_headers": {
  "data": {
   "shadows": "superset.views.base.generate_download_headers"
  },
  "type": "import"
 },
 "superset.datasets.api.get_delete_ids_schema": {
  "data": {
   "shadows": "superset.datasets.schemas.get_delete_ids_schema"
  },
  "type": "import"
 },
 "superset.datasets.api.get_export_ids_schema": {
  "data": {
   "shadows": "superset.datasets.schemas.get_export_ids_schema"
  },
  "type": "import"
 },
 "superset.datasets.api.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.datasets.api.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.datasets.api.logger": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "superset.datasets.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.datasets.api.ngettext": {
  "data": {
   "shadows": "flask_babel.ngettext"
  },
  "type": "import"
 },
 "superset.datasets.api.protect": {
  "data": {
   "shadows": "flask_appbuilder.api.protect"
  },
  "type": "import"
 },
 "superset.datasets.api.remove_root": {
  "data": {
   "shadows": "superset.commands.importers.v1.utils.remove_root"
  },
  "type": "import"
 },
 "superset.datasets.api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.datasets.api.rison": {
  "data": {
   "shadows": "flask_appbuilder.api.rison"
  },
  "type": "import"
 },
 "superset.datasets.api.safe": {
  "data": {
   "shadows": "flask_appbuilder.api.safe"
  },
  "type": "import"
 },
 "superset.datasets.api.send_file": {
  "data": {
   "shadows": "flask.send_file"
  },
  "type": "import"
 },
 "superset.datasets.api.statsd_metrics": {
  "data": {
   "shadows": "superset.views.base_api.statsd_metrics"
  },
  "type": "import"
 },
 "superset.datasets.api.strtobool": {
  "data": {
   "shadows": "distutils.util.strtobool"
  },
  "type": "import"
 },
 "superset.datasets.api.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "superset.datasets.commands": {
  "data": {},
  "type": "module"
 },
 "superset.datasets.commands.bulk_delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.datasets.commands.bulk_delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.datasets.commands.bulk_delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.datasets.commands.bulk_delete.BulkDeleteDatasetCommand": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.bulk_delete.BulkDeleteDatasetCommand.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.connectors.sqla.models.SqlaTable",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.bulk_delete.BulkDeleteDatasetCommand.run": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "superset.commands.exceptions.DeleteFailedError",
    "superset.datasets.commands.bulk_delete.logger",
    "superset.datasets.commands.exceptions.DatasetBulkDeleteFailedError",
    "superset.datasets.dao.DatasetDAO.bulk_delete",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.delete",
    "superset.extensions.db.session.query",
    "superset.extensions.security_manager.find_view_menu",
    "superset.extensions.security_manager.permissionview_model"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.bulk_delete.BulkDeleteDatasetCommand.validate": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "len",
    "superset.datasets.commands.exceptions.DatasetForbiddenError",
    "superset.datasets.commands.exceptions.DatasetNotFoundError",
    "superset.datasets.dao.DatasetDAO.find_by_ids",
    "superset.exceptions.SupersetSecurityException",
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.bulk_delete.DatasetBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.datasets.commands.bulk_delete.DatasetDAO": {
  "data": {
   "shadows": "superset.datasets.dao.DatasetDAO"
  },
  "type": "import"
 },
 "superset.datasets.commands.bulk_delete.DatasetForbiddenError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetForbiddenError"
  },
  "type": "import"
 },
 "superset.datasets.commands.bulk_delete.DatasetNotFoundError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetNotFoundError"
  },
  "type": "import"
 },
 "superset.datasets.commands.bulk_delete.DeleteFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.DeleteFailedError"
  },
  "type": "import"
 },
 "superset.datasets.commands.bulk_delete.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.datasets.commands.bulk_delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.datasets.commands.bulk_delete.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.datasets.commands.bulk_delete.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.datasets.commands.bulk_delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.datasets.commands.bulk_delete.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.datasets.commands.bulk_delete.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.datasets.commands.bulk_delete.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.datasets.commands.bulk_delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.datasets.commands.bulk_delete.security_manager": {
  "data": {
   "shadows": "superset.extensions.security_manager"
  },
  "type": "import"
 },
 "superset.datasets.commands.create": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.datasets.commands.create.logging"
   ]
  },
  "type": "module"
 },
 "superset.datasets.commands.create.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.CreateDatasetCommand": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.create.CreateDatasetCommand.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.create.CreateDatasetCommand.run": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "sqlalchemy.exc.SQLAlchemyError",
    "superset.dao.exceptions.DAOCreateFailedError",
    "superset.datasets.commands.create.logger",
    "superset.datasets.commands.exceptions.DatasetCreateFailedError",
    "superset.datasets.dao.DatasetDAO.create",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.rollback",
    "superset.extensions.security_manager.add_permission_view_menu"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.create.CreateDatasetCommand.validate": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "int",
    "list",
    "marshmallow.ValidationError",
    "superset.commands.utils.populate_owners",
    "superset.datasets.commands.exceptions.DatabaseNotFoundValidationError",
    "superset.datasets.commands.exceptions.DatasetExistsValidationError",
    "superset.datasets.commands.exceptions.DatasetInvalidError",
    "superset.datasets.commands.exceptions.TableNotFoundValidationError",
    "superset.datasets.dao.DatasetDAO.get_database_by_id",
    "superset.datasets.dao.DatasetDAO.validate_table_exists",
    "superset.datasets.dao.DatasetDAO.validate_uniqueness",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.create.DAOCreateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOCreateFailedError"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.DatabaseNotFoundValidationError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatabaseNotFoundValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.DatasetCreateFailedError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetCreateFailedError"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.DatasetDAO": {
  "data": {
   "shadows": "superset.datasets.dao.DatasetDAO"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.DatasetExistsValidationError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetExistsValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.DatasetInvalidError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetInvalidError"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.TableNotFoundValidationError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.TableNotFoundValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.logger": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.datasets.commands.create.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.populate_owners": {
  "data": {
   "shadows": "superset.commands.utils.populate_owners"
  },
  "type": "import"
 },
 "superset.datasets.commands.create.security_manager": {
  "data": {
   "shadows": "superset.extensions.security_manager"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.datasets.commands.delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.datasets.commands.delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.DatasetDAO": {
  "data": {
   "shadows": "superset.datasets.dao.DatasetDAO"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.DatasetDeleteFailedError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetDeleteFailedError"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.DatasetForbiddenError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetForbiddenError"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.DatasetNotFoundError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetNotFoundError"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.DeleteDatasetCommand": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.delete.DeleteDatasetCommand.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.connectors.sqla.models.SqlaTable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.delete.DeleteDatasetCommand.run": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "sqlalchemy.exc.SQLAlchemyError",
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.datasets.commands.delete.logger",
    "superset.datasets.commands.exceptions.DatasetDeleteFailedError",
    "superset.datasets.dao.DatasetDAO.delete",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.delete",
    "superset.extensions.db.session.query",
    "superset.extensions.db.session.rollback",
    "superset.extensions.security_manager.find_view_menu",
    "superset.extensions.security_manager.permissionview_model"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.delete.DeleteDatasetCommand.validate": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "superset.datasets.commands.exceptions.DatasetForbiddenError",
    "superset.datasets.commands.exceptions.DatasetNotFoundError",
    "superset.datasets.dao.DatasetDAO.find_by_id",
    "superset.exceptions.SupersetSecurityException",
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.delete.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.datasets.commands.delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.datasets.commands.delete.security_manager": {
  "data": {
   "shadows": "superset.extensions.security_manager"
  },
  "type": "import"
 },
 "superset.datasets.commands.exceptions": {
  "data": {},
  "type": "module"
 },
 "superset.datasets.commands.exceptions.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.datasets.commands.exceptions.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.datasets.commands.exceptions.CreateFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.CreateFailedError"
  },
  "type": "import"
 },
 "superset.datasets.commands.exceptions.DatabaseChangeValidationError": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatabaseChangeValidationError.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.exceptions.DatabaseNotFoundValidationError": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatabaseNotFoundValidationError.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.exceptions.DatasetBulkDeleteFailedError": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.DeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetColumnNotFoundValidationError": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetColumnNotFoundValidationError.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.exceptions.DatasetColumnsDuplicateValidationError": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetColumnsDuplicateValidationError.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.exceptions.DatasetColumnsExistsValidationError": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetColumnsExistsValidationError.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.exceptions.DatasetCreateFailedError": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CreateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetDeleteFailedError": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.DeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetExistsValidationError": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetExistsValidationError.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "str",
    "super",
    "superset.datasets.commands.exceptions.get_dataset_exist_error_msg"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.exceptions.DatasetForbiddenError": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.ForbiddenError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetImportError": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.ImportFailedError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetInvalidError": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandInvalidError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetMetricsDuplicateValidationError": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetMetricsDuplicateValidationError.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.exceptions.DatasetMetricsExistsValidationError": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetMetricsExistsValidationError.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.exceptions.DatasetMetricsNotFoundValidationError": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetMetricsNotFoundValidationError.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.exceptions.DatasetNotFoundError": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetRefreshFailedError": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.UpdateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DatasetUpdateFailedError": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.UpdateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.DeleteFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.DeleteFailedError"
  },
  "type": "import"
 },
 "superset.datasets.commands.exceptions.ForbiddenError": {
  "data": {
   "shadows": "superset.commands.exceptions.ForbiddenError"
  },
  "type": "import"
 },
 "superset.datasets.commands.exceptions.ImportFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.ImportFailedError"
  },
  "type": "import"
 },
 "superset.datasets.commands.exceptions.OwnersNotFoundValidationError": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.OwnersNotFoundValidationError.__init__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.exceptions.TableNotFoundValidationError": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.exceptions.TableNotFoundValidationError.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.exceptions.UpdateFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.UpdateFailedError"
  },
  "type": "import"
 },
 "superset.datasets.commands.exceptions.ValidationError": {
  "data": {
   "shadows": "marshmallow.validate.ValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.exceptions._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.datasets.commands.exceptions.get_dataset_exist_error_msg": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.export": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.datasets.commands.export.logging"
   ]
  },
  "type": "module"
 },
 "superset.datasets.commands.export.DatasetDAO": {
  "data": {
   "shadows": "superset.datasets.dao.DatasetDAO"
  },
  "type": "import"
 },
 "superset.datasets.commands.export.DatasetNotFoundError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetNotFoundError"
  },
  "type": "import"
 },
 "superset.datasets.commands.export.EXPORT_VERSION": {
  "data": {
   "shadows": "superset.utils.dict_import_export.EXPORT_VERSION"
  },
  "type": "import"
 },
 "superset.datasets.commands.export.ExportDatasetsCommand": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "superset.commands.export.ExportModelsCommand",
    "superset.datasets.commands.exceptions.DatasetNotFoundError",
    "superset.datasets.dao.DatasetDAO"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.export.ExportDatasetsCommand._export": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.datasets.commands.export.JSON_KEYS",
    "superset.datasets.commands.export.json",
    "superset.datasets.commands.export.logger",
    "superset.datasets.commands.export.yaml",
    "superset.utils.dict_import_export.EXPORT_VERSION",
    "typing.Iterator",
    "typing.Tuple",
    "werkzeug.utils.secure_filename"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.export.ExportModelsCommand": {
  "data": {
   "shadows": "superset.commands.export.ExportModelsCommand"
  },
  "type": "import"
 },
 "superset.datasets.commands.export.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "superset.datasets.commands.export.JSON_KEYS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.datasets.commands.export.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.datasets.commands.export.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.datasets.commands.export.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.datasets.commands.export.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.datasets.commands.export.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.datasets.commands.export.secure_filename": {
  "data": {
   "shadows": "werkzeug.utils.secure_filename"
  },
  "type": "import"
 },
 "superset.datasets.commands.export.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers": {
  "data": {},
  "type": "module"
 },
 "superset.datasets.commands.importers.dispatcher": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.datasets.commands.importers.dispatcher.logging",
    "superset.datasets.commands.importers.v0.ImportDatasetsCommand",
    "superset.datasets.commands.importers.v1.ImportDatasetsCommand"
   ]
  },
  "type": "module"
 },
 "superset.datasets.commands.importers.dispatcher.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.dispatcher.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.dispatcher.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.dispatcher.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.dispatcher.ImportDatasetsCommand": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.importers.dispatcher.ImportDatasetsCommand.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.dispatcher.ImportDatasetsCommand.run": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Exception",
    "marshmallow.exceptions.ValidationError",
    "superset.commands.exceptions.CommandInvalidError",
    "superset.commands.importers.exceptions.IncorrectVersionError",
    "superset.datasets.commands.importers.dispatcher.command_versions",
    "superset.datasets.commands.importers.dispatcher.logger",
    "version"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.dispatcher.ImportDatasetsCommand.validate": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.dispatcher.IncorrectVersionError": {
  "data": {
   "shadows": "superset.commands.importers.exceptions.IncorrectVersionError"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.dispatcher.ValidationError": {
  "data": {
   "shadows": "marshmallow.exceptions.ValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.dispatcher.command_versions": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.datasets.commands.importers.dispatcher.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.datasets.commands.importers.dispatcher.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.dispatcher.v0": {
  "data": {
   "shadows": "superset.datasets.commands.importers.v0"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.dispatcher.v1": {
  "data": {
   "shadows": "superset.datasets.commands.importers.v1"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.datasets.commands.importers.v0.logging"
   ]
  },
  "type": "module"
 },
 "superset.datasets.commands.importers.v0.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.BaseColumn": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseColumn"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.BaseMetric": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseMetric"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.DATABASES_KEY": {
  "data": {
   "shadows": "superset.utils.dict_import_export.DATABASES_KEY"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.DRUID_CLUSTERS_KEY": {
  "data": {
   "shadows": "superset.utils.dict_import_export.DRUID_CLUSTERS_KEY"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.DatabaseNotFoundError": {
  "data": {
   "shadows": "superset.databases.commands.exceptions.DatabaseNotFoundError"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.DruidCluster": {
  "data": {
   "shadows": "superset.connectors.druid.models.DruidCluster"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.DruidColumn": {
  "data": {
   "shadows": "superset.connectors.druid.models.DruidColumn"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.DruidDatasource": {
  "data": {
   "shadows": "superset.connectors.druid.models.DruidDatasource"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.DruidMetric": {
  "data": {
   "shadows": "superset.connectors.druid.models.DruidMetric"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.ImportDatasetsCommand": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.importers.v0.ImportDatasetsCommand.__init__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.ImportDatasetsCommand.run": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "superset.connectors.sqla.models.SqlaTable.import_from_dict",
    "superset.datasets.commands.importers.v0.import_from_dict",
    "superset.datasets.commands.importers.v0.json",
    "superset.datasets.commands.importers.v0.logger",
    "superset.db.session",
    "superset.db.session.query",
    "superset.models.core.Database"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.ImportDatasetsCommand.validate": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "superset.commands.importers.exceptions.IncorrectVersionError",
    "superset.datasets.commands.importers.v0.logger",
    "superset.datasets.commands.importers.v0.yaml",
    "superset.utils.dict_import_export.DATABASES_KEY",
    "superset.utils.dict_import_export.DRUID_CLUSTERS_KEY"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.IncorrectVersionError": {
  "data": {
   "shadows": "superset.commands.importers.exceptions.IncorrectVersionError"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.SqlMetric": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlMetric"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.TableColumn": {
  "data": {
   "shadows": "superset.connectors.sqla.models.TableColumn"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.import_column": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "import_simple_obj",
    "isinstance",
    "sqlalchemy.orm.Session",
    "superset.connectors.base.models.BaseColumn",
    "superset.connectors.sqla.models.TableColumn",
    "superset.datasets.commands.importers.v0.lookup_druid_column",
    "superset.datasets.commands.importers.v0.lookup_sqla_column"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.import_dataset": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "import_datasource",
    "int",
    "isinstance",
    "superset.connectors.base.models.BaseDatasource",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.datasets.commands.importers.v0.lookup_druid_cluster",
    "superset.datasets.commands.importers.v0.lookup_druid_datasource",
    "superset.datasets.commands.importers.v0.lookup_sqla_database",
    "superset.datasets.commands.importers.v0.lookup_sqla_table",
    "superset.db.session",
    "superset.models.core.Database",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.import_datasource": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "getattr",
    "int",
    "lookup_database",
    "lookup_datasource",
    "sqlalchemy.orm.Session",
    "sqlalchemy.orm.session.make_transient",
    "superset.datasets.commands.importers.v0.import_column",
    "superset.datasets.commands.importers.v0.import_metric",
    "superset.datasets.commands.importers.v0.logger",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.import_from_dict": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "sqlalchemy.orm.Session",
    "str",
    "superset.connectors.druid.models.DruidCluster.import_from_dict",
    "superset.datasets.commands.importers.v0.logger",
    "superset.models.core.Database.import_from_dict",
    "superset.utils.dict_import_export.DATABASES_KEY",
    "superset.utils.dict_import_export.DRUID_CLUSTERS_KEY",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.import_metric": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "import_simple_obj",
    "isinstance",
    "sqlalchemy.orm.Session",
    "superset.connectors.base.models.BaseMetric",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.datasets.commands.importers.v0.lookup_druid_metric",
    "superset.datasets.commands.importers.v0.lookup_sqla_metric"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.import_simple_obj": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "lookup_obj",
    "sqlalchemy.orm.Session",
    "sqlalchemy.orm.session.make_transient",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.datasets.commands.importers.v0.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.lookup_druid_cluster": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "superset.connectors.druid.models.DruidCluster",
    "superset.connectors.druid.models.DruidDatasource",
    "superset.db.session.query",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.lookup_druid_column": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "superset.connectors.druid.models.DruidColumn",
    "superset.connectors.druid.models.DruidColumn.column_name",
    "superset.connectors.druid.models.DruidColumn.datasource_id"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.lookup_druid_datasource": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "superset.connectors.druid.models.DruidDatasource",
    "superset.connectors.druid.models.DruidDatasource.cluster_id",
    "superset.connectors.druid.models.DruidDatasource.datasource_name",
    "superset.db.session.query",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.lookup_druid_metric": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "superset.connectors.druid.models.DruidMetric",
    "superset.connectors.druid.models.DruidMetric.datasource_id",
    "superset.connectors.druid.models.DruidMetric.metric_name"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.lookup_sqla_column": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "superset.connectors.sqla.models.TableColumn",
    "superset.connectors.sqla.models.TableColumn.column_name",
    "superset.connectors.sqla.models.TableColumn.table_id"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.lookup_sqla_database": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "superset.connectors.sqla.models.SqlaTable",
    "superset.databases.commands.exceptions.DatabaseNotFoundError",
    "superset.db.session.query",
    "superset.models.core.Database",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.lookup_sqla_metric": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.connectors.sqla.models.SqlMetric.metric_name",
    "superset.connectors.sqla.models.SqlMetric.table_id"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.lookup_sqla_table": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "superset.connectors.sqla.models.SqlaTable",
    "superset.connectors.sqla.models.SqlaTable.schema",
    "superset.connectors.sqla.models.SqlaTable.table_name",
    "superset.db.session.query",
    "superset.models.core.Database",
    "superset.models.core.Database.id",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v0.make_transient": {
  "data": {
   "shadows": "sqlalchemy.orm.session.make_transient"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v0.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1": {
  "data": {},
  "type": "module"
 },
 "superset.datasets.commands.importers.v1.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.DatasetDAO": {
  "data": {
   "shadows": "superset.datasets.dao.DatasetDAO"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.DatasetImportError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetImportError"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.ImportDatasetsCommand": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "str",
    "superset.commands.importers.v1.ImportModelsCommand",
    "superset.databases.schemas.ImportV1DatabaseSchema",
    "superset.datasets.commands.exceptions.DatasetImportError",
    "superset.datasets.dao.DatasetDAO",
    "superset.datasets.schemas.ImportV1DatasetSchema",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.importers.v1.ImportDatasetsCommand._import": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "bool",
    "int",
    "set",
    "sqlalchemy.orm.Session",
    "staticmethod",
    "str",
    "superset.databases.commands.importers.v1.utils.import_database",
    "superset.datasets.commands.importers.v1.utils.import_dataset",
    "typing.Any",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v1.ImportModelsCommand": {
  "data": {
   "shadows": "superset.commands.importers.v1.ImportModelsCommand"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.ImportV1DatabaseSchema": {
  "data": {
   "shadows": "superset.databases.schemas.ImportV1DatabaseSchema"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.ImportV1DatasetSchema": {
  "data": {
   "shadows": "superset.datasets.schemas.ImportV1DatasetSchema"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.import_database": {
  "data": {
   "shadows": "superset.databases.commands.importers.v1.utils.import_database"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.import_dataset": {
  "data": {
   "shadows": "superset.datasets.commands.importers.v1.utils.import_dataset"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Date",
    "sqlalchemy.DateTime",
    "sqlalchemy.Float",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.datasets.commands.importers.v1.utils.logging",
    "superset.datasets.commands.importers.v1.utils.re"
   ]
  },
  "type": "module"
 },
 "superset.datasets.commands.importers.v1.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.BigInteger": {
  "data": {
   "shadows": "sqlalchemy.BigInteger"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.CHUNKSIZE": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.datasets.commands.importers.v1.utils.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.Date": {
  "data": {
   "shadows": "sqlalchemy.Date"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.Float": {
  "data": {
   "shadows": "sqlalchemy.Float"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.JSON_KEYS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "superset.datasets.commands.importers.v1.utils.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.VARCHAR": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.datasets.commands.importers.v1.utils.VisitableType": {
  "data": {
   "shadows": "sqlalchemy.sql.visitors.VisitableType"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.get_dtype": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "sqlalchemy.sql.visitors.VisitableType",
    "str",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.datasets.commands.importers.v1.utils.get_sqla_type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v1.utils.get_example_database": {
  "data": {
   "shadows": "superset.utils.core.get_example_database"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.get_sqla_type": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Exception",
    "int",
    "sqlalchemy.String",
    "sqlalchemy.sql.visitors.VisitableType",
    "str",
    "superset.datasets.commands.importers.v1.utils.VARCHAR",
    "superset.datasets.commands.importers.v1.utils.type_map"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v1.utils.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.import_dataset": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "load_data",
    "sqlalchemy.orm.Session",
    "str",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.connectors.sqla.models.SqlaTable.import_from_dict",
    "superset.datasets.commands.importers.v1.utils.JSON_KEYS",
    "superset.datasets.commands.importers.v1.utils.json",
    "superset.datasets.commands.importers.v1.utils.logger",
    "superset.utils.core.get_example_database",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v1.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.load_data": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "isinstance",
    "pandas.read_csv",
    "pandas.to_datetime",
    "sqlalchemy.Date",
    "sqlalchemy.DateTime",
    "sqlalchemy.orm.Session",
    "str",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.datasets.commands.importers.v1.utils.CHUNKSIZE",
    "superset.datasets.commands.importers.v1.utils.get_dtype",
    "superset.datasets.commands.importers.v1.utils.gzip",
    "superset.datasets.commands.importers.v1.utils.logger",
    "superset.models.core.Database",
    "superset.utils.core.get_example_database",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.importers.v1.utils.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.datasets.commands.importers.v1.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.request": {
  "data": {
   "shadows": "urllib.request"
  },
  "type": "import"
 },
 "superset.datasets.commands.importers.v1.utils.type_map": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.datasets.commands.refresh": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.datasets.commands.refresh.logging"
   ]
  },
  "type": "module"
 },
 "superset.datasets.commands.refresh.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.datasets.commands.refresh.DatasetDAO": {
  "data": {
   "shadows": "superset.datasets.dao.DatasetDAO"
  },
  "type": "import"
 },
 "superset.datasets.commands.refresh.DatasetForbiddenError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetForbiddenError"
  },
  "type": "import"
 },
 "superset.datasets.commands.refresh.DatasetNotFoundError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetNotFoundError"
  },
  "type": "import"
 },
 "superset.datasets.commands.refresh.DatasetRefreshFailedError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetRefreshFailedError"
  },
  "type": "import"
 },
 "superset.datasets.commands.refresh.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.datasets.commands.refresh.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.datasets.commands.refresh.RefreshDatasetCommand": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.refresh.RefreshDatasetCommand.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.connectors.sqla.models.SqlaTable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.refresh.RefreshDatasetCommand.run": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Exception",
    "flask_appbuilder.models.sqla.Model",
    "superset.datasets.commands.exceptions.DatasetRefreshFailedError",
    "superset.datasets.commands.refresh.logger"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.refresh.RefreshDatasetCommand.validate": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "superset.datasets.commands.exceptions.DatasetForbiddenError",
    "superset.datasets.commands.exceptions.DatasetNotFoundError",
    "superset.datasets.dao.DatasetDAO.find_by_id",
    "superset.exceptions.SupersetSecurityException",
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.refresh.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.datasets.commands.refresh.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.datasets.commands.refresh.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.datasets.commands.refresh.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.datasets.commands.refresh.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.datasets.commands.refresh.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.datasets.commands.update": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.datasets.commands.update.logging"
   ]
  },
  "type": "module"
 },
 "superset.datasets.commands.update.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.DAOUpdateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOUpdateFailedError"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.DatabaseChangeValidationError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatabaseChangeValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.DatasetColumnNotFoundValidationError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetColumnNotFoundValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.DatasetColumnsDuplicateValidationError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetColumnsDuplicateValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.DatasetColumnsExistsValidationError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetColumnsExistsValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.DatasetDAO": {
  "data": {
   "shadows": "superset.datasets.dao.DatasetDAO"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.DatasetExistsValidationError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetExistsValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.DatasetForbiddenError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetForbiddenError"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.DatasetInvalidError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetInvalidError"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.DatasetMetricsDuplicateValidationError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetMetricsDuplicateValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.DatasetMetricsExistsValidationError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetMetricsExistsValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.DatasetMetricsNotFoundValidationError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetMetricsNotFoundValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.DatasetNotFoundError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetNotFoundError"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.DatasetUpdateFailedError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetUpdateFailedError"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.UpdateDatasetCommand": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.datasets.commands.update.UpdateDatasetCommand.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "str",
    "superset.connectors.sqla.models.SqlaTable",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.update.UpdateDatasetCommand._get_duplicates": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "collections.Counter",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.update.UpdateDatasetCommand._validate_columns": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "int",
    "marshmallow.ValidationError",
    "str",
    "superset.datasets.commands.exceptions.DatasetColumnNotFoundValidationError",
    "superset.datasets.commands.exceptions.DatasetColumnsDuplicateValidationError",
    "superset.datasets.commands.exceptions.DatasetColumnsExistsValidationError",
    "superset.datasets.dao.DatasetDAO.validate_columns_exist",
    "superset.datasets.dao.DatasetDAO.validate_columns_uniqueness",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.update.UpdateDatasetCommand._validate_metrics": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "int",
    "marshmallow.ValidationError",
    "str",
    "superset.datasets.commands.exceptions.DatasetMetricsDuplicateValidationError",
    "superset.datasets.commands.exceptions.DatasetMetricsExistsValidationError",
    "superset.datasets.commands.exceptions.DatasetMetricsNotFoundValidationError",
    "superset.datasets.dao.DatasetDAO.validate_metrics_exist",
    "superset.datasets.dao.DatasetDAO.validate_metrics_uniqueness",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.update.UpdateDatasetCommand.run": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.dao.exceptions.DAOUpdateFailedError",
    "superset.datasets.commands.exceptions.DatasetUpdateFailedError",
    "superset.datasets.commands.update.logger",
    "superset.datasets.dao.DatasetDAO.update"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.update.UpdateDatasetCommand.validate": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "int",
    "list",
    "marshmallow.ValidationError",
    "superset.commands.utils.populate_owners",
    "superset.datasets.commands.exceptions.DatabaseChangeValidationError",
    "superset.datasets.commands.exceptions.DatasetExistsValidationError",
    "superset.datasets.commands.exceptions.DatasetForbiddenError",
    "superset.datasets.commands.exceptions.DatasetInvalidError",
    "superset.datasets.commands.exceptions.DatasetNotFoundError",
    "superset.datasets.dao.DatasetDAO.find_by_id",
    "superset.datasets.dao.DatasetDAO.validate_update_uniqueness",
    "superset.exceptions.SupersetSecurityException",
    "superset.views.base.check_ownership",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.commands.update.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.logger": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "superset.datasets.commands.update.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.datasets.commands.update.populate_owners": {
  "data": {
   "shadows": "superset.commands.utils.populate_owners"
  },
  "type": "import"
 },
 "superset.datasets.dao": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.datasets.dao.logging"
   ]
  },
  "type": "module"
 },
 "superset.datasets.dao.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.datasets.dao.BaseDAO": {
  "data": {
   "shadows": "superset.dao.base.BaseDAO"
  },
  "type": "import"
 },
 "superset.datasets.dao.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.datasets.dao.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.datasets.dao.DatasetColumnDAO": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "superset.connectors.sqla.models.TableColumn",
    "superset.dao.base.BaseDAO"
   ]
  },
  "type": "class"
 },
 "superset.datasets.dao.DatasetDAO": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "superset.connectors.sqla.models.SqlaTable",
    "superset.dao.base.BaseDAO",
    "superset.views.base.DatasourceFilter"
   ]
  },
  "type": "class"
 },
 "superset.datasets.dao.DatasetDAO.bulk_delete": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.exc.SQLAlchemyError",
    "staticmethod",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.connectors.sqla.models.SqlMetric.table_id.in_",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.connectors.sqla.models.SqlaTable.id.in_",
    "superset.connectors.sqla.models.TableColumn",
    "superset.connectors.sqla.models.TableColumn.table_id.in_",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.merge",
    "superset.extensions.db.session.query",
    "superset.extensions.db.session.rollback",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.create_column": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "str",
    "superset.connectors.sqla.models.TableColumn",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.create_metric": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "str",
    "superset.connectors.sqla.models.SqlMetric",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.get_database_by_id": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "int",
    "sqlalchemy.exc.SQLAlchemyError",
    "staticmethod",
    "str",
    "superset.datasets.dao.logger",
    "superset.extensions.db.session.query",
    "superset.models.core.Database",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.get_owner_by_id": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "flask.current_app.appbuilder.sm.user_model",
    "int",
    "object",
    "staticmethod",
    "superset.extensions.db.session.query",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.get_related_objects": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "dict",
    "int",
    "staticmethod",
    "str",
    "superset.extensions.db.session.query",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.Dashboard.slices",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.datasource_id",
    "superset.models.slice.Slice.datasource_type",
    "superset.models.slice.Slice.id.in_",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.update": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "list",
    "str",
    "super",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.connectors.sqla.models.TableColumn",
    "superset.datasets.dao.DatasetDAO",
    "superset.extensions.db.session.query",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.update_column": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "str",
    "superset.connectors.sqla.models.TableColumn",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.update_metric": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "str",
    "superset.connectors.sqla.models.SqlMetric",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.validate_columns_exist": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "staticmethod",
    "superset.connectors.sqla.models.TableColumn.id",
    "superset.connectors.sqla.models.TableColumn.id.in_",
    "superset.connectors.sqla.models.TableColumn.table_id",
    "superset.extensions.db.session.query",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.validate_columns_uniqueness": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "staticmethod",
    "str",
    "superset.connectors.sqla.models.TableColumn.column_name.in_",
    "superset.connectors.sqla.models.TableColumn.id",
    "superset.connectors.sqla.models.TableColumn.table_id",
    "superset.extensions.db.session.query",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.validate_metrics_exist": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "staticmethod",
    "superset.connectors.sqla.models.SqlMetric.id",
    "superset.connectors.sqla.models.SqlMetric.id.in_",
    "superset.connectors.sqla.models.SqlMetric.table_id",
    "superset.extensions.db.session.query",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.validate_metrics_uniqueness": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "staticmethod",
    "str",
    "superset.connectors.sqla.models.SqlMetric.id",
    "superset.connectors.sqla.models.SqlMetric.metric_name.in_",
    "superset.connectors.sqla.models.SqlMetric.table_id",
    "superset.extensions.db.session.query",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.validate_table_exists": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.exc.SQLAlchemyError",
    "staticmethod",
    "str",
    "superset.datasets.dao.logger",
    "superset.models.core.Database",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.validate_uniqueness": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bool",
    "int",
    "staticmethod",
    "str",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.connectors.sqla.models.SqlaTable.database_id",
    "superset.connectors.sqla.models.SqlaTable.schema",
    "superset.connectors.sqla.models.SqlaTable.table_name",
    "superset.extensions.db.session.query",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetDAO.validate_update_uniqueness": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "bool",
    "int",
    "staticmethod",
    "str",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.connectors.sqla.models.SqlaTable.database_id",
    "superset.connectors.sqla.models.SqlaTable.id",
    "superset.connectors.sqla.models.SqlaTable.table_name",
    "superset.extensions.db.session.query"
   ]
  },
  "type": "function"
 },
 "superset.datasets.dao.DatasetMetricDAO": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "superset.connectors.sqla.models.SqlMetric",
    "superset.dao.base.BaseDAO"
   ]
  },
  "type": "class"
 },
 "superset.datasets.dao.DatasourceFilter": {
  "data": {
   "shadows": "superset.views.base.DatasourceFilter"
  },
  "type": "import"
 },
 "superset.datasets.dao.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.datasets.dao.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.datasets.dao.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.datasets.dao.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.datasets.dao.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.datasets.dao.SqlMetric": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlMetric"
  },
  "type": "import"
 },
 "superset.datasets.dao.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.datasets.dao.TableColumn": {
  "data": {
   "shadows": "superset.connectors.sqla.models.TableColumn"
  },
  "type": "import"
 },
 "superset.datasets.dao.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.datasets.dao.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.datasets.dao.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.datasets.dao.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.datasets.filters": {
  "data": {},
  "type": "module"
 },
 "superset.datasets.filters.BaseFilter": {
  "data": {
   "shadows": "superset.views.base.BaseFilter"
  },
  "type": "import"
 },
 "superset.datasets.filters.DatasetIsNullOrEmptyFilter": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.datasets.filters.DatasetIsNullOrEmptyFilter.apply": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.not_",
    "sqlalchemy.or_",
    "sqlalchemy.orm.query.Query",
    "superset.connectors.sqla.models.SqlaTable.sql",
    "superset.connectors.sqla.models.SqlaTable.sql.is_"
   ]
  },
  "type": "function"
 },
 "superset.datasets.filters.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.query.Query"
  },
  "type": "import"
 },
 "superset.datasets.filters.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.datasets.filters._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.datasets.filters.not_": {
  "data": {
   "shadows": "sqlalchemy.not_"
  },
  "type": "import"
 },
 "superset.datasets.filters.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.datasets.schemas": {
  "data": {},
  "type": "module"
 },
 "superset.datasets.schemas.DatasetColumnsPutSchema": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "id",
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Integer",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "superset.datasets.schemas.validate_python_date_format",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.datasets.schemas.DatasetMetricsPutSchema": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "id",
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.String",
    "marshmallow.validate.Length"
   ]
  },
  "type": "class"
 },
 "superset.datasets.schemas.DatasetPostSchema": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.String",
    "marshmallow.validate.Length"
   ]
  },
  "type": "class"
 },
 "superset.datasets.schemas.DatasetPutSchema": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "superset.datasets.schemas.DatasetColumnsPutSchema",
    "superset.datasets.schemas.DatasetMetricsPutSchema"
   ]
  },
  "type": "class"
 },
 "superset.datasets.schemas.DatasetRelatedChart": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "id",
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.String"
   ]
  },
  "type": "class"
 },
 "superset.datasets.schemas.DatasetRelatedCharts": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "superset.datasets.schemas.DatasetRelatedChart"
   ]
  },
  "type": "class"
 },
 "superset.datasets.schemas.DatasetRelatedDashboard": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "id",
    "marshmallow.Schema",
    "marshmallow.fields.Dict",
    "marshmallow.fields.Integer",
    "marshmallow.fields.String"
   ]
  },
  "type": "class"
 },
 "superset.datasets.schemas.DatasetRelatedDashboards": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "superset.datasets.schemas.DatasetRelatedDashboard"
   ]
  },
  "type": "class"
 },
 "superset.datasets.schemas.DatasetRelatedObjectsResponse": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Nested",
    "superset.datasets.schemas.DatasetRelatedCharts",
    "superset.datasets.schemas.DatasetRelatedDashboards"
   ]
  },
  "type": "class"
 },
 "superset.datasets.schemas.ImportV1ColumnSchema": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.String",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.datasets.schemas.ImportV1DatasetSchema": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Dict",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "marshmallow.fields.String",
    "marshmallow.fields.URL",
    "marshmallow.fields.UUID",
    "superset.datasets.schemas.ImportV1ColumnSchema",
    "superset.datasets.schemas.ImportV1MetricSchema"
   ]
  },
  "type": "class"
 },
 "superset.datasets.schemas.ImportV1MetricSchema": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Dict",
    "marshmallow.fields.String"
   ]
  },
  "type": "class"
 },
 "superset.datasets.schemas.Length": {
  "data": {
   "shadows": "marshmallow.validate.Length"
  },
  "type": "import"
 },
 "superset.datasets.schemas.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.datasets.schemas.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.datasets.schemas._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.datasets.schemas.fields": {
  "data": {
   "shadows": "marshmallow.fields"
  },
  "type": "import"
 },
 "superset.datasets.schemas.get_delete_ids_schema": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "superset.datasets.schemas.get_export_ids_schema": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "superset.datasets.schemas.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.datasets.schemas.validate_python_date_format": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "marshmallow.ValidationError",
    "str",
    "superset.datasets.schemas.re"
   ]
  },
  "type": "function"
 },
 "superset.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.db_engine_specs": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dir",
    "getattr",
    "importlib.import_module",
    "issubclass",
    "pathlib.Path",
    "str",
    "superset.db_engine_specs.attribute",
    "superset.db_engine_specs.base.BaseEngineSpec",
    "superset.db_engine_specs.imported_module",
    "superset.db_engine_specs.inspect",
    "superset.db_engine_specs.pkgutil",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "module"
 },
 "superset.db_engine_specs.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.db_engine_specs.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "superset.db_engine_specs.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.db_engine_specs.athena": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.athena.AthenaEngineSpec": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.athena.AthenaEngineSpec._mutate_label": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.athena.AthenaEngineSpec.convert_dttm": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.TIMESTAMP",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.athena.AthenaEngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.athena.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.athena.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.athena.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.athena.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.attribute": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.db_engine_specs.base": {
  "data": {
   "symbols_in_volume": [
    "str",
    "superset.app.config",
    "superset.db_engine_specs.base.logging",
    "superset.utils.core.QueryStatus",
    "typing.Dict",
    "typing.Optional",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.db_engine_specs.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.BaseEngineSpec": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "sqlalchemy.types.TypeEngine",
    "str",
    "superset.db_engine_specs.base.LimitMethod",
    "superset.db_engine_specs.base.re",
    "superset.utils.core.DbColumnType",
    "superset.utils.core.DbColumnType.NUMERIC",
    "superset.utils.core.DbColumnType.STRING",
    "superset.utils.core.DbColumnType.TEMPORAL",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Match",
    "typing.Optional",
    "typing.Pattern",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.base.BaseEngineSpec._extract_error_message": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "str",
    "superset.utils.core.error_msg_from_exception"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec._get_fields": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.column",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec._mutate_label": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec._truncate_label": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "str",
    "superset.db_engine_specs.base.hashlib"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.adjust_database_uri": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.url.URL",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.alter_new_orm_column": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.apply_limit_to_sql": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "sqlalchemy.select",
    "sqlalchemy.sql.expression.TextAsFrom",
    "sqlalchemy.sql.text",
    "str",
    "superset.db_engine_specs.base.LimitMethod",
    "superset.sql_parse.ParsedQuery"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.column_datatype_to_string": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "classmethod",
    "hasattr",
    "sqlalchemy.engine.interfaces.Dialect",
    "sqlalchemy.types.TypeEngine",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.convert_dttm": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.create_table_from_csv": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "superset.sql_parse.Table",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.create_table_from_excel": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "classmethod",
    "pandas.read_excel",
    "str",
    "superset.sql_parse.Table",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.csv_to_df": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.read_csv",
    "staticmethod",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.df_to_sql": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "classmethod",
    "pandas.DataFrame",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.epoch_ms_to_dttm": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.estimate_query_cost": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "contextlib.closing",
    "flask.g.user",
    "flask.g.user.username",
    "str",
    "superset.sql_parse.ParsedQuery",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.estimate_statement_cost": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.execute": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.expand_data": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "classmethod",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.extra_table_metadata": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.extract_error_message": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.extract_errors": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "str",
    "superset.db_engine_specs.base.dataclasses",
    "superset.errors.ErrorLevel.ERROR",
    "superset.errors.SupersetError",
    "superset.errors.SupersetErrorType.GENERIC_DB_ENGINE_ERROR",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.fetch_data": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "superset.db_engine_specs.base.LimitMethod",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_all_datasource_names": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "str",
    "superset.utils.core.DatasourceName",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_allow_cost_estimate": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_columns": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.reflection.Inspector",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_configuration_for_impersonation": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_datatype": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_engine": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.base.Engine",
    "str",
    "superset.utils.core.get_username",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_extra_params": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "superset.db_engine_specs.base.json",
    "superset.db_engine_specs.base.logger",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_function_names": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_limit_from_sql": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "str",
    "superset.sql_parse.ParsedQuery",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_schema_names": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "classmethod",
    "sorted",
    "sqlalchemy.engine.reflection.Inspector",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_sqla_column_type": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "callable",
    "classmethod",
    "sqla_type",
    "sqlalchemy.types.TypeEngine",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_table_comment": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "classmethod",
    "dict",
    "isinstance",
    "sqlalchemy.engine.reflection.Inspector",
    "str",
    "superset.db_engine_specs.base.logger",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_table_names": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "classmethod",
    "sorted",
    "sqlalchemy.engine.reflection.Inspector",
    "str",
    "superset.db_engine_specs.base.re",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_time_grain_expressions": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "superset.db_engine_specs.base.config",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_time_grains": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "classmethod",
    "flask_babel.lazy_gettext",
    "superset.db_engine_specs.base.TimeGrain",
    "superset.db_engine_specs.base.config",
    "tuple",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_timestamp_expr": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "sqlalchemy.DateTime",
    "sqlalchemy.sql.expression.ColumnClause",
    "str",
    "superset.db_engine_specs.base.TimestampExpression",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.get_view_names": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "classmethod",
    "sorted",
    "sqlalchemy.engine.reflection.Inspector",
    "str",
    "superset.db_engine_specs.base.re",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.handle_cursor": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.orm.Session",
    "superset.models.sql_lab.Query",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.is_db_column_type_match": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "any",
    "bool",
    "classmethod",
    "str",
    "superset.utils.core.DbColumnType",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.is_readonly_query": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "superset.sql_parse.ParsedQuery"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.make_label_compatible": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "sqlalchemy.sql.quoted_name",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.make_select_compatible": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.sql.expression.ColumnElement",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.modify_url_for_impersonation": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "sqlalchemy.engine.url.URL",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.mutate_db_for_connection_test": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.normalize_indexes": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.patch": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.process_statement": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "classmethod",
    "sql_query_mutator",
    "str",
    "superset.db_engine_specs.base.config",
    "superset.security_manager",
    "superset.sql_parse.ParsedQuery"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.pyodbc_rows_to_tuples": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "staticmethod",
    "tuple",
    "type",
    "typing.Any",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.query_cost_formatter": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.select_star": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "int",
    "quote",
    "sqlalchemy.engine.base.Engine",
    "sqlalchemy.select",
    "sqlalchemy.sql.text",
    "str",
    "superset.db_engine_specs.base.sqlparse",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.set_or_update_query_limit": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "str",
    "superset.sql_parse.ParsedQuery"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.BaseEngineSpec.where_latest_partition": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.sql.expression.Select",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.ColumnClause": {
  "data": {
   "shadows": "sqlalchemy.sql.expression.ColumnClause"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.ColumnElement": {
  "data": {
   "shadows": "sqlalchemy.sql.expression.ColumnElement"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.Compiled": {
  "data": {
   "shadows": "sqlalchemy.engine.interfaces.Compiled"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.Dialect": {
  "data": {
   "shadows": "sqlalchemy.engine.interfaces.Dialect"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.Engine": {
  "data": {
   "shadows": "sqlalchemy.engine.base.Engine"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.ErrorLevel": {
  "data": {
   "shadows": "superset.errors.ErrorLevel"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.Inspector": {
  "data": {
   "shadows": "sqlalchemy.engine.reflection.Inspector"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.LimitMethod": {
  "data": {
   "lineno": 128
  },
  "type": "class"
 },
 "superset.db_engine_specs.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.Match": {
  "data": {
   "shadows": "typing.Match"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.ParsedQuery": {
  "data": {
   "shadows": "superset.sql_parse.ParsedQuery"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.Pattern": {
  "data": {
   "shadows": "typing.Pattern"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.Query": {
  "data": {
   "shadows": "superset.models.sql_lab.Query"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.QueryStatus": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "superset.db_engine_specs.base.Select": {
  "data": {
   "shadows": "sqlalchemy.sql.expression.Select"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.SupersetError": {
  "data": {
   "shadows": "superset.errors.SupersetError"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.SupersetErrorType": {
  "data": {
   "shadows": "superset.errors.SupersetErrorType"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.Table": {
  "data": {
   "shadows": "superset.sql_parse.Table"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.TableColumn": {
  "data": {
   "shadows": "superset.connectors.sqla.models.TableColumn"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.TextAsFrom": {
  "data": {
   "shadows": "sqlalchemy.sql.expression.TextAsFrom"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.TimeGrain": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "str",
    "typing.NamedTuple",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.base.TimestampExpression": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "sqlalchemy.sql.expression.ColumnClause"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.base.TimestampExpression.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "sqlalchemy.sql.expression.ColumnClause",
    "str",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.TimestampExpression._constructor": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "property",
    "sqlalchemy.sql.expression.ColumnClause"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.TypeEngine": {
  "data": {
   "shadows": "sqlalchemy.types.TypeEngine"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.URL": {
  "data": {
   "shadows": "sqlalchemy.engine.url.URL"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.column": {
  "data": {
   "shadows": "sqlalchemy.column"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.compile_timegrain_expression": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "sqlalchemy.engine.interfaces.Compiled",
    "sqlalchemy.ext.compiler.compiles",
    "str",
    "superset.db_engine_specs.base.TimestampExpression",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.base.compiles": {
  "data": {
   "shadows": "sqlalchemy.ext.compiler.compiles"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.config": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "superset.db_engine_specs.base.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.logger": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "superset.db_engine_specs.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.quoted_name": {
  "data": {
   "shadows": "sqlalchemy.sql.quoted_name"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.select": {
  "data": {
   "shadows": "sqlalchemy.select"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.sql_parse": {
  "data": {
   "shadows": "superset.sql_parse"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.sqlparse": {
  "data": {
   "shadows": "sqlparse"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.text": {
  "data": {
   "shadows": "sqlalchemy.sql.text"
  },
  "type": "import"
 },
 "superset.db_engine_specs.base.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.db_engine_specs.bigquery.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.BigQueryEngineSpec": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.bigquery.BigQueryEngineSpec._get_fields": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.literal_column",
    "sqlalchemy.sql.expression.ColumnClause",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.bigquery.BigQueryEngineSpec._mutate_label": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "superset.db_engine_specs.bigquery.hashlib",
    "superset.db_engine_specs.bigquery.re"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.bigquery.BigQueryEngineSpec._truncate_label": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "superset.db_engine_specs.bigquery.hashlib"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.bigquery.BigQueryEngineSpec.convert_dttm": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.DATETIME",
    "superset.utils.core.TemporalType.TIME",
    "superset.utils.core.TemporalType.TIMESTAMP",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.bigquery.BigQueryEngineSpec.df_to_sql": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "classmethod",
    "google.oauth2.service_account.Credentials.from_service_account_info",
    "pandas.DataFrame",
    "superset.db_engine_specs.bigquery.pandas_gbq",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.bigquery.BigQueryEngineSpec.epoch_ms_to_dttm": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.bigquery.BigQueryEngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.bigquery.BigQueryEngineSpec.extra_table_metadata": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.bigquery.BigQueryEngineSpec.fetch_data": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "super",
    "type",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.bigquery.BigQueryEngineSpec.normalize_indexes": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.bigquery.ColumnClause": {
  "data": {
   "shadows": "sqlalchemy.sql.expression.ColumnClause"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.literal_column": {
  "data": {
   "shadows": "sqlalchemy.literal_column"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.pandas_gbq": {
  "data": {
   "shadows": "pandas_gbq"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.service_account": {
  "data": {
   "shadows": "google.oauth2.service_account"
  },
  "type": "import"
 },
 "superset.db_engine_specs.bigquery.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.clickhouse": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.clickhouse.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.clickhouse.ClickHouseEngineSpec": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.clickhouse.ClickHouseEngineSpec.convert_dttm": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.DATETIME",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.clickhouse.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.clickhouse.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.clickhouse.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.cockroachdb": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.cockroachdb.CockroachDbEngineSpec": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "superset.db_engine_specs.postgres.PostgresEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.cockroachdb.PostgresEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.postgres.PostgresEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.db2": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.db2.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.db2.Db2EngineSpec": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec",
    "superset.db_engine_specs.base.LimitMethod.WRAP_SQL"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.db2.Db2EngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.db2.LimitMethod": {
  "data": {
   "shadows": "superset.db_engine_specs.base.LimitMethod"
  },
  "type": "import"
 },
 "superset.db_engine_specs.dremio": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.dremio.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.dremio.DremioBaseEngineSpec": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.dremio.DremioBaseEngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.drill": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.drill.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.drill.DrillEngineSpec": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.drill.DrillEngineSpec.adjust_database_uri": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.url.URL",
    "str",
    "typing.Optional",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.drill.DrillEngineSpec.convert_dttm": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.TIMESTAMP",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.drill.DrillEngineSpec.epoch_ms_to_dttm": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.drill.DrillEngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.drill.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.drill.URL": {
  "data": {
   "shadows": "sqlalchemy.engine.url.URL"
  },
  "type": "import"
 },
 "superset.db_engine_specs.drill.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.drill.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "superset.db_engine_specs.drill.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.druid": {
  "data": {
   "symbols_in_volume": [
    "superset.db_engine_specs.druid.logging",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.db_engine_specs.druid.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.db_engine_specs.druid.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.druid.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.db_engine_specs.druid.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.db_engine_specs.druid.DruidEngineSpec": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.druid.DruidEngineSpec.alter_new_orm_column": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.druid.DruidEngineSpec.convert_dttm": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.DATETIME",
    "superset.utils.core.TemporalType.TIMESTAMP",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.druid.DruidEngineSpec.get_extra_params": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "superset.db_engine_specs.druid.json",
    "superset.db_engine_specs.druid.logger",
    "superset.utils.core.create_ssl_cert_file",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.druid.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.druid.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.db_engine_specs.druid.TableColumn": {
  "data": {
   "shadows": "superset.connectors.sqla.models.TableColumn"
  },
  "type": "import"
 },
 "superset.db_engine_specs.druid.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.druid.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.db_engine_specs.druid.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.db_engine_specs.druid.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.db_engine_specs.druid.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.elasticsearch": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.elasticsearch.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.elasticsearch.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.db_engine_specs.elasticsearch.ElasticSearchEngineSpec": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "int",
    "str",
    "superset.db_engine_specs.base.BaseEngineSpec",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.elasticsearch.ElasticSearchEngineSpec.convert_dttm": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATETIME",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.elasticsearch.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.elasticsearch.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.elasticsearch.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.exasol": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.exasol.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.db_engine_specs.exasol.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.exasol.ExasolEngineSpec": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.exasol.ExasolEngineSpec.fetch_data": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "super",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.exasol.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.db_engine_specs.exasol.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.exasol.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.db_engine_specs.gsheets": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.gsheets.GSheetsEngineSpec": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "superset.db_engine_specs.sqlite.SqliteEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.gsheets.SqliteEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.sqlite.SqliteEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hana": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.hana.HanaEngineSpec": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.LimitMethod.WRAP_SQL",
    "superset.db_engine_specs.postgres.PostgresBaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.hana.HanaEngineSpec.convert_dttm": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.TIMESTAMP",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hana.LimitMethod": {
  "data": {
   "shadows": "superset.db_engine_specs.base.LimitMethod"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hana.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hana.PostgresBaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.postgres.PostgresBaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hana.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hana.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.app.config",
    "superset.conf.get",
    "superset.db_engine_specs.hive.logging",
    "superset.utils.core.QueryStatus",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.db_engine_specs.hive.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.ColumnClause": {
  "data": {
   "shadows": "sqlalchemy.sql.expression.ColumnClause"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.Engine": {
  "data": {
   "shadows": "sqlalchemy.engine.base.Engine"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "superset.db_engine_specs.hive.re",
    "superset.db_engine_specs.presto.PrestoEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec._extract_error_message": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "str",
    "superset.db_engine_specs.hive.re"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec._get_fields": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.sql.expression.ColumnClause",
    "str",
    "superset.db_engine_specs.base.BaseEngineSpec._get_fields",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec._latest_partition_from_df": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "classmethod",
    "pandas.DataFrame",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec._partition_query": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.adjust_database_uri": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.url.URL",
    "str",
    "typing.Optional",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.convert_dttm": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.TIMESTAMP",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.create_table_from_csv": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "classmethod",
    "convert_to_hive_type",
    "flask.g.user",
    "int",
    "sqlalchemy.text",
    "str",
    "superset.db_engine_specs.hive.config",
    "superset.db_engine_specs.hive.upload_to_s3",
    "superset.exceptions.SupersetException",
    "superset.sql_parse.Table",
    "tableschema.Table",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.create_table_from_csv.convert_to_hive_type": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.execute": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "bool",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.fetch_data": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "Exception",
    "TCLIService.ttypes.TOperationState.ERROR_STATE",
    "classmethod",
    "int",
    "super",
    "superset.db_engine_specs.hive.pyhive",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.get_all_datasource_names": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "superset.db_engine_specs.base.BaseEngineSpec.get_all_datasource_names",
    "superset.utils.core.DatasourceName",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.get_columns": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.reflection.Inspector",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.get_configuration_for_impersonation": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "sqlalchemy.engine.url.make_url",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.get_create_table_stmt": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "sqlalchemy.text",
    "str",
    "superset.sql_parse.Table",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.get_function_names": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "superset.extensions.cache_manager.cache.memoize",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.get_tracking_url": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.handle_cursor": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "pyhive.hive.ttypes.TOperationState.INITIALIZED_STATE",
    "pyhive.hive.ttypes.TOperationState.RUNNING_STATE",
    "sqlalchemy.orm.Session",
    "str",
    "superset.db_engine_specs.hive.QueryStatus",
    "superset.db_engine_specs.hive.hive_poll_interval",
    "superset.db_engine_specs.hive.logger",
    "superset.db_engine_specs.hive.time",
    "superset.db_engine_specs.hive.tracking_url_trans",
    "superset.models.sql_lab.Query",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.is_readonly_query": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "super",
    "superset.sql_parse.ParsedQuery"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.latest_sub_partition": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.modify_url_for_impersonation": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "sqlalchemy.engine.url.URL",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.patch": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "TCLIService.TCLIService",
    "TCLIService.constants",
    "TCLIService.ttypes",
    "classmethod",
    "superset.db_engines.hive.Cursor.fetch_logs",
    "superset.db_engines.hive.TCLIService",
    "superset.db_engines.hive.constants",
    "superset.db_engines.hive.fetch_logs",
    "superset.db_engines.hive.ttypes"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.progress": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "int",
    "len",
    "str",
    "sum",
    "superset.db_engine_specs.hive.logger",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.select_star": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "int",
    "sqlalchemy.engine.base.Engine",
    "str",
    "super",
    "superset.db_engine_specs.presto.PrestoEngineSpec",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.HiveEngineSpec.where_latest_partition": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "sqlalchemy.Column",
    "sqlalchemy.sql.expression.Select",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.Inspector": {
  "data": {
   "shadows": "sqlalchemy.engine.reflection.Inspector"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.ParsedQuery": {
  "data": {
   "shadows": "superset.sql_parse.ParsedQuery"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.PrestoEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.presto.PrestoEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.Query": {
  "data": {
   "shadows": "superset.models.sql_lab.Query"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.QueryStatus": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "superset.db_engine_specs.hive.Select": {
  "data": {
   "shadows": "sqlalchemy.sql.expression.Select"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.Table": {
  "data": {
   "shadows": "superset.sql_parse.Table"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.TableSchemaTable": {
  "data": {
   "shadows": "tableschema.Table"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.URL": {
  "data": {
   "shadows": "sqlalchemy.engine.url.URL"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.cache_manager": {
  "data": {
   "shadows": "superset.extensions.cache_manager"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.conf": {
  "data": {
   "shadows": "superset.conf"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.config": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "superset.db_engine_specs.hive.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.hive": {
  "data": {
   "shadows": "pyhive.hive"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.hive_poll_interval": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "superset.db_engine_specs.hive.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "superset.db_engine_specs.hive.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.make_url": {
  "data": {
   "shadows": "sqlalchemy.engine.url.make_url"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.patched_TCLIService": {
  "data": {
   "shadows": "TCLIService.TCLIService"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.patched_constants": {
  "data": {
   "shadows": "TCLIService.constants"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.patched_hive": {
  "data": {
   "shadows": "superset.db_engines.hive"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.patched_ttypes": {
  "data": {
   "shadows": "TCLIService.ttypes"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.pyhive": {
  "data": {
   "shadows": "pyhive"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.text": {
  "data": {
   "shadows": "sqlalchemy.text"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.tracking_url_trans": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "superset.db_engine_specs.hive.ttypes": {
  "data": {
   "shadows": "TCLIService.ttypes"
  },
  "type": "import"
 },
 "superset.db_engine_specs.hive.upload_to_s3": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Exception",
    "str",
    "superset.db_engine_specs.hive.boto3",
    "superset.db_engine_specs.hive.config",
    "superset.db_engine_specs.hive.logger",
    "superset.db_engine_specs.hive.os",
    "superset.sql_parse.Table"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.hive.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.impala": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.impala.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.impala.ImpalaEngineSpec": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.impala.ImpalaEngineSpec.convert_dttm": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.TIMESTAMP",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.impala.ImpalaEngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.impala.ImpalaEngineSpec.get_schema_names": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.reflection.Inspector",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.impala.Inspector": {
  "data": {
   "shadows": "sqlalchemy.engine.reflection.Inspector"
  },
  "type": "import"
 },
 "superset.db_engine_specs.impala.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.db_engine_specs.impala.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.impala.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.impala.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "superset.db_engine_specs.imported_module": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.db_engine_specs.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "superset.db_engine_specs.kylin": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.kylin.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.kylin.KylinEngineSpec": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.kylin.KylinEngineSpec.convert_dttm": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.TIMESTAMP",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.kylin.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.kylin.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.kylin.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mssql": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.db_engine_specs.mssql.logging",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.db_engine_specs.mssql.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mssql.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mssql.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mssql.LimitMethod": {
  "data": {
   "shadows": "superset.db_engine_specs.base.LimitMethod"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mssql.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mssql.MssqlEngineSpec": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "sqlalchemy.types.String",
    "sqlalchemy.types.UnicodeText",
    "superset.db_engine_specs.base.BaseEngineSpec",
    "superset.db_engine_specs.base.LimitMethod.WRAP_SQL",
    "superset.db_engine_specs.mssql.re"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.mssql.MssqlEngineSpec.convert_dttm": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.DATETIME",
    "superset.utils.core.TemporalType.SMALLDATETIME",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.mssql.MssqlEngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.mssql.MssqlEngineSpec.extract_error_message": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.mssql.MssqlEngineSpec.fetch_data": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "super",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.mssql.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mssql.String": {
  "data": {
   "shadows": "sqlalchemy.types.String"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mssql.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mssql.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mssql.UnicodeText": {
  "data": {
   "shadows": "sqlalchemy.types.UnicodeText"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mssql.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mssql.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.db_engine_specs.mssql.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mssql.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mssql.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mysql": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.mysql.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mysql.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mysql.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mysql.MySQLEngineSpec": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "str",
    "superset.db_engine_specs.base.BaseEngineSpec",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.mysql.MySQLEngineSpec._extract_error_message": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "KeyError",
    "classmethod",
    "isinstance",
    "len",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.mysql.MySQLEngineSpec.adjust_database_uri": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.url.URL",
    "str",
    "typing.Optional",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.mysql.MySQLEngineSpec.convert_dttm": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.DATETIME",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.mysql.MySQLEngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.mysql.MySQLEngineSpec.get_datatype": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "classmethod",
    "dir",
    "getattr",
    "int",
    "isinstance",
    "str",
    "superset.db_engine_specs.mysql.MySQLdb",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.mysql.MySQLdb": {
  "data": {
   "shadows": "MySQLdb"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mysql.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mysql.URL": {
  "data": {
   "shadows": "sqlalchemy.engine.url.URL"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mysql.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mysql.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "superset.db_engine_specs.mysql.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.oracle": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.oracle.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.db_engine_specs.oracle.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.oracle.LimitMethod": {
  "data": {
   "shadows": "superset.db_engine_specs.base.LimitMethod"
  },
  "type": "import"
 },
 "superset.db_engine_specs.oracle.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.db_engine_specs.oracle.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.oracle.OracleEngineSpec": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec",
    "superset.db_engine_specs.base.LimitMethod.WRAP_SQL"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.oracle.OracleEngineSpec.convert_dttm": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.DATETIME",
    "superset.utils.core.TemporalType.TIMESTAMP",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.oracle.OracleEngineSpec.epoch_ms_to_dttm": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.oracle.OracleEngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.oracle.OracleEngineSpec.fetch_data": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "super",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.oracle.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.db_engine_specs.oracle.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.oracle.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.pinot": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.pinot.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.pinot.ColumnClause": {
  "data": {
   "shadows": "sqlalchemy.sql.expression.ColumnClause"
  },
  "type": "import"
 },
 "superset.db_engine_specs.pinot.ColumnElement": {
  "data": {
   "shadows": "sqlalchemy.sql.expression.ColumnElement"
  },
  "type": "import"
 },
 "superset.db_engine_specs.pinot.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.db_engine_specs.pinot.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.db_engine_specs.pinot.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.pinot.PinotEngineSpec": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bool",
    "str",
    "superset.db_engine_specs.base.BaseEngineSpec",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.pinot.PinotEngineSpec.get_timestamp_expr": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "classmethod",
    "sqlalchemy.sql.expression.ColumnClause",
    "str",
    "superset.db_engine_specs.base.TimestampExpression",
    "superset.db_engine_specs.pinot.datetime",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.pinot.PinotEngineSpec.make_select_compatible": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.sql.expression.ColumnElement",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.pinot.TimestampExpression": {
  "data": {
   "shadows": "superset.db_engine_specs.base.TimestampExpression"
  },
  "type": "import"
 },
 "superset.db_engine_specs.pinot.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "superset.db_engine_specs.postgres": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.db_engine_specs.postgres.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.db_engine_specs.postgres.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.postgres.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.db_engine_specs.postgres.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.db_engine_specs.postgres.FixedOffsetTimezone": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pytz._FixedOffset"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.postgres.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.db_engine_specs.postgres.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.postgres.PGInspector": {
  "data": {
   "shadows": "sqlalchemy.dialects.postgresql.base.PGInspector"
  },
  "type": "import"
 },
 "superset.db_engine_specs.postgres.PostgresBaseEngineSpec": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.postgres.PostgresBaseEngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.postgres.PostgresBaseEngineSpec.fetch_data": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "super",
    "superset.db_engine_specs.postgres.FixedOffsetTimezone",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.postgres.PostgresEngineSpec": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "superset.db_engine_specs.postgres.PostgresBaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.postgres.PostgresEngineSpec.convert_dttm": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.TIMESTAMP",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.postgres.PostgresEngineSpec.estimate_statement_cost": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "str",
    "superset.db_engine_specs.postgres.re",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.postgres.PostgresEngineSpec.get_allow_cost_estimate": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.postgres.PostgresEngineSpec.get_table_names": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "classmethod",
    "sorted",
    "sqlalchemy.dialects.postgresql.base.PGInspector",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.postgres.PostgresEngineSpec.query_cost_formatter": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.postgres.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.db_engine_specs.postgres.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.db_engine_specs.postgres._FixedOffset": {
  "data": {
   "shadows": "pytz._FixedOffset"
  },
  "type": "import"
 },
 "superset.db_engine_specs.postgres.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.postgres.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.db_engine_specs.postgres.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.app.config",
    "superset.db_engine_specs.presto.logging",
    "superset.utils.core.QueryStatus",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.db_engine_specs.presto.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.Array": {
  "data": {
   "shadows": "superset.models.sql_types.presto_sql_types.Array"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.COLUMN_NOT_RESOLVED_ERROR_REGEX": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "superset.db_engine_specs.presto.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.ColumnClause": {
  "data": {
   "shadows": "sqlalchemy.sql.expression.ColumnClause"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.DatabaseError": {
  "data": {
   "shadows": "pyhive.exc.DatabaseError"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.Engine": {
  "data": {
   "shadows": "sqlalchemy.engine.base.Engine"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.ErrorLevel": {
  "data": {
   "shadows": "superset.errors.ErrorLevel"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.Inspector": {
  "data": {
   "shadows": "sqlalchemy.engine.reflection.Inspector"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.Interval": {
  "data": {
   "shadows": "superset.models.sql_types.presto_sql_types.Interval"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.Map": {
  "data": {
   "shadows": "superset.models.sql_types.presto_sql_types.Map"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.ParsedQuery": {
  "data": {
   "shadows": "superset.sql_parse.ParsedQuery"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "int",
    "sqlalchemy.types.BigInteger",
    "sqlalchemy.types.Boolean",
    "sqlalchemy.types.CHAR",
    "sqlalchemy.types.DATE",
    "sqlalchemy.types.DECIMAL",
    "sqlalchemy.types.Float",
    "sqlalchemy.types.Integer",
    "sqlalchemy.types.JSON",
    "sqlalchemy.types.SmallInteger",
    "sqlalchemy.types.String",
    "sqlalchemy.types.TIMESTAMP",
    "sqlalchemy.types.Time",
    "sqlalchemy.types.VARBINARY",
    "sqlalchemy.types.VARCHAR",
    "superset.db_engine_specs.base.BaseEngineSpec",
    "superset.db_engine_specs.presto.re",
    "superset.models.sql_types.presto_sql_types.Array",
    "superset.models.sql_types.presto_sql_types.Interval",
    "superset.models.sql_types.presto_sql_types.Map",
    "superset.models.sql_types.presto_sql_types.Row",
    "superset.models.sql_types.presto_sql_types.TinyInteger"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec._create_column_info": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.types.TypeEngine",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec._extract_error_message": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "dict",
    "flask_babel.lazy_gettext",
    "hasattr",
    "isinstance",
    "str",
    "superset.utils.core.error_msg_from_exception",
    "type"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec._get_fields": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "classmethod",
    "enumerate",
    "sqlalchemy.literal_column",
    "sqlalchemy.sql.expression.ColumnClause",
    "str",
    "superset.db_engine_specs.presto.re",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec._get_full_name": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec._has_nested_data_types": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "str",
    "superset.db_engine_specs.presto.re"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec._is_column_name_quoted": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec._latest_partition_from_df": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "classmethod",
    "pandas.DataFrame",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec._parse_structural_column": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "range",
    "sqlalchemy.types.String",
    "str",
    "superset.db_engine_specs.presto.logger",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec._partition_query": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "distutils.version.StrictVersion",
    "int",
    "str",
    "superset.db_engine_specs.presto.textwrap",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec._show_columns": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "classmethod",
    "quote",
    "sqlalchemy.engine.reflection.Inspector",
    "sqlalchemy.engine.result.RowProxy",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec._split_data_type": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "superset.db_engine_specs.presto.re",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.adjust_database_uri": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.url.URL",
    "str",
    "typing.Optional",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.convert_dttm": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.TIMESTAMP",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.estimate_statement_cost": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "classmethod",
    "simplejson.loads",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.expand_data": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "classmethod",
    "collections.defaultdict",
    "collections.deque",
    "enumerate",
    "flask_babel.lazy_gettext",
    "int",
    "isinstance",
    "len",
    "range",
    "str",
    "superset.db_engine_specs.presto.get_children",
    "superset.is_feature_enabled",
    "superset.result_set.destringify",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union",
    "typing.cast",
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.extra_table_metadata": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "len",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.cast",
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.extract_errors": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "flask_babel.gettext",
    "str",
    "superset.db_engine_specs.presto.COLUMN_NOT_RESOLVED_ERROR_REGEX",
    "superset.db_engine_specs.presto.TABLE_DOES_NOT_EXIST_ERROR_REGEX",
    "superset.db_engine_specs.presto.dataclasses",
    "superset.db_engine_specs.presto.re",
    "superset.errors.ErrorLevel.ERROR",
    "superset.errors.SupersetError",
    "superset.errors.SupersetErrorType.COLUMN_DOES_NOT_EXIST_ERROR",
    "superset.errors.SupersetErrorType.GENERIC_DB_ENGINE_ERROR",
    "superset.errors.SupersetErrorType.TABLE_DOES_NOT_EXIST_ERROR",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.get_all_datasource_names": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "superset.utils.core.DatasourceName",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.get_allow_cost_estimate": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "distutils.version.StrictVersion",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.get_columns": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "classmethod",
    "getattr",
    "len",
    "sqlalchemy.engine.reflection.Inspector",
    "sqlalchemy.types.String",
    "str",
    "superset.db_engine_specs.presto.logger",
    "superset.is_feature_enabled",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.get_create_view": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "classmethod",
    "contextlib.closing",
    "pyhive.exc.DatabaseError",
    "str",
    "superset.db_engine_specs.presto.time",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.get_function_names": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "superset.cache_manager.data_cache.memoize",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.get_table_names": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "classmethod",
    "list",
    "set",
    "sqlalchemy.engine.reflection.Inspector",
    "str",
    "super",
    "superset.is_feature_enabled",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.get_view_names": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "classmethod",
    "contextlib.closing",
    "sqlalchemy.engine.reflection.Inspector",
    "str",
    "superset.is_feature_enabled",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.handle_cursor": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "sqlalchemy.orm.Session",
    "superset.db_engine_specs.presto.QueryStatus",
    "superset.db_engine_specs.presto.config",
    "superset.db_engine_specs.presto.logger",
    "superset.db_engine_specs.presto.time",
    "superset.models.sql_lab.Query",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.is_readonly_query": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "super",
    "superset.sql_parse.ParsedQuery"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.latest_partition": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "len",
    "str",
    "superset.cache_manager.data_cache.memoize",
    "superset.exceptions.SupersetTemplateException",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.latest_sub_partition": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "str",
    "superset.exceptions.SupersetTemplateException",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.query_cost_formatter": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "humanize",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.query_cost_formatter.humanize": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.select_star": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "int",
    "sqlalchemy.engine.base.Engine",
    "str",
    "super",
    "superset.db_engine_specs.presto.re",
    "superset.is_feature_enabled",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.PrestoEngineSpec.where_latest_partition": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "sqlalchemy.Column",
    "sqlalchemy.sql.expression.Select",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.Query": {
  "data": {
   "shadows": "superset.models.sql_lab.Query"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.QueryStatus": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "superset.db_engine_specs.presto.Row": {
  "data": {
   "shadows": "superset.models.sql_types.presto_sql_types.Row"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.RowProxy": {
  "data": {
   "shadows": "sqlalchemy.engine.result.RowProxy"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.Select": {
  "data": {
   "shadows": "sqlalchemy.sql.expression.Select"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.StrictVersion": {
  "data": {
   "shadows": "distutils.version.StrictVersion"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.SupersetError": {
  "data": {
   "shadows": "superset.errors.SupersetError"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.SupersetErrorType": {
  "data": {
   "shadows": "superset.errors.SupersetErrorType"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.SupersetTemplateException": {
  "data": {
   "shadows": "superset.exceptions.SupersetTemplateException"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.TABLE_DOES_NOT_EXIST_ERROR_REGEX": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "superset.db_engine_specs.presto.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.TinyInteger": {
  "data": {
   "shadows": "superset.models.sql_types.presto_sql_types.TinyInteger"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.URL": {
  "data": {
   "shadows": "sqlalchemy.engine.url.URL"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.__": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.cache_manager": {
  "data": {
   "shadows": "superset.cache_manager"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.config": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "superset.db_engine_specs.presto.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.destringify": {
  "data": {
   "shadows": "superset.result_set.destringify"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.get_children": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Exception",
    "len",
    "list",
    "str",
    "superset.db_engine_specs.presto.re",
    "superset.utils.core.split",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.presto.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.literal_column": {
  "data": {
   "shadows": "sqlalchemy.literal_column"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.logger": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "superset.db_engine_specs.presto.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.types": {
  "data": {
   "shadows": "sqlalchemy.types"
  },
  "type": "import"
 },
 "superset.db_engine_specs.presto.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.redshift": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.redshift.PostgresBaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.postgres.PostgresBaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.redshift.RedshiftEngineSpec": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "superset.db_engine_specs.postgres.PostgresBaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.redshift.RedshiftEngineSpec._mutate_label": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.snowflake": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.db_engine_specs.snowflake.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.db_engine_specs.snowflake.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.snowflake.PostgresBaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.postgres.PostgresBaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.snowflake.SnowflakeEngineSpec": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "superset.db_engine_specs.postgres.PostgresBaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.snowflake.SnowflakeEngineSpec.adjust_database_uri": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.url.URL",
    "str",
    "typing.Optional",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.snowflake.SnowflakeEngineSpec.convert_dttm": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.DATE",
    "superset.utils.core.TemporalType.DATETIME",
    "superset.utils.core.TemporalType.TIMESTAMP",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.snowflake.SnowflakeEngineSpec.epoch_ms_to_dttm": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.snowflake.SnowflakeEngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.snowflake.SnowflakeEngineSpec.mutate_db_for_connection_test": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "staticmethod",
    "superset.db_engine_specs.snowflake.json"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.snowflake.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.db_engine_specs.snowflake.URL": {
  "data": {
   "shadows": "sqlalchemy.engine.url.URL"
  },
  "type": "import"
 },
 "superset.db_engine_specs.snowflake.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.snowflake.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.db_engine_specs.snowflake.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "superset.db_engine_specs.snowflake.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.solr": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.solr.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.solr.SolrEngineSpec": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.sqlite": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.db_engine_specs.sqlite.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.sqlite.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.db_engine_specs.sqlite.Inspector": {
  "data": {
   "shadows": "sqlalchemy.engine.reflection.Inspector"
  },
  "type": "import"
 },
 "superset.db_engine_specs.sqlite.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.db_engine_specs.sqlite.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engine_specs.sqlite.SqliteEngineSpec": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.sqlite.SqliteEngineSpec.convert_dttm": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "classmethod",
    "datetime.datetime",
    "str",
    "superset.utils.core.TemporalType.TEXT",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.sqlite.SqliteEngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.sqlite.SqliteEngineSpec.get_all_datasource_names": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "str",
    "superset.utils.core.DatasourceName",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.sqlite.SqliteEngineSpec.get_table_names": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "classmethod",
    "sorted",
    "sqlalchemy.engine.reflection.Inspector",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.sqlite.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.db_engine_specs.sqlite.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.db_engine_specs.sqlite.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.db_engine_specs.teradata": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.teradata.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.base.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.teradata.LimitMethod": {
  "data": {
   "shadows": "superset.db_engine_specs.base.LimitMethod"
  },
  "type": "import"
 },
 "superset.db_engine_specs.teradata.TeradataEngineSpec": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.BaseEngineSpec",
    "superset.db_engine_specs.base.LimitMethod.WRAP_SQL"
   ]
  },
  "type": "class"
 },
 "superset.db_engine_specs.teradata.TeradataEngineSpec.epoch_to_dttm": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.db_engine_specs.vertica": {
  "data": {},
  "type": "module"
 },
 "superset.db_engine_specs.vertica.PostgresBaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.postgres.PostgresBaseEngineSpec"
  },
  "type": "import"
 },
 "superset.db_engine_specs.vertica.VerticaEngineSpec": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "superset.db_engine_specs.postgres.PostgresBaseEngineSpec"
   ]
  },
  "type": "class"
 },
 "superset.db_engines": {
  "data": {},
  "type": "module"
 },
 "superset.db_engines.hive": {
  "data": {
   "symbols_in_volume": [
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.db_engines.hive.Cursor": {
  "data": {
   "shadows": "pyhive.hive.Cursor"
  },
  "type": "import"
 },
 "superset.db_engines.hive.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.db_engines.hive.TFetchOrientation": {
  "data": {
   "shadows": "TCLIService.ttypes.TFetchOrientation"
  },
  "type": "import"
 },
 "superset.db_engines.hive.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.db_engines.hive.Thrift": {
  "data": {
   "shadows": "thrift.Thrift"
  },
  "type": "import"
 },
 "superset.db_engines.hive.fetch_logs": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "TCLIService.ttypes.TApplicationException",
    "TCLIService.ttypes.TFetchOrientation.FETCH_NEXT",
    "TCLIService.ttypes.TFetchResultsReq",
    "TCLIService.ttypes.TGetLogReq",
    "int",
    "len",
    "pyhive.hive.ProgrammingError",
    "pyhive.hive._check_status",
    "pyhive.hive._unwrap_column",
    "str",
    "thrift.Thrift.TApplicationException",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.db_engines.hive.hive": {
  "data": {
   "shadows": "pyhive.hive"
  },
  "type": "import"
 },
 "superset.db_engines.hive.ttypes": {
  "data": {
   "shadows": "TCLIService.ttypes"
  },
  "type": "import"
 },
 "superset.errors": {
  "data": {
   "symbols_in_volume": [
    "flask_babel.gettext",
    "superset.errors.SupersetErrorType"
   ]
  },
  "type": "module"
 },
 "superset.errors.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.errors.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.errors.ERROR_TYPES_TO_ISSUE_CODES_MAPPING": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "superset.errors.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "superset.errors.ErrorLevel": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.errors.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.errors.SupersetError": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "str",
    "superset.errors.ErrorLevel",
    "superset.errors.SupersetErrorType",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.errors.SupersetError.__post_init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "superset.errors.ERROR_TYPES_TO_ISSUE_CODES_MAPPING"
   ]
  },
  "type": "function"
 },
 "superset.errors.SupersetErrorType": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.errors._": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.errors.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "superset.event_logger": {
  "data": {
   "shadows": "superset.extensions.event_logger"
  },
  "type": "import"
 },
 "superset.examples": {
  "data": {},
  "type": "module"
 },
 "superset.examples.bart_lines": {
  "data": {},
  "type": "module"
 },
 "superset.examples.bart_lines.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.examples.bart_lines.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.examples.bart_lines.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.bart_lines.get_example_database": {
  "data": {
   "shadows": "superset.utils.core.get_example_database"
  },
  "type": "import"
 },
 "superset.examples.bart_lines.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.examples.bart_lines.load_bart_lines": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TBL",
    "bool",
    "get_example_data",
    "pandas.read_json",
    "print",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.db.session.query",
    "superset.examples.bart_lines.json",
    "superset.examples.bart_lines.polyline",
    "superset.utils.core.get_example_database"
   ]
  },
  "type": "function"
 },
 "superset.examples.bart_lines.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.examples.bart_lines.polyline": {
  "data": {
   "shadows": "polyline"
  },
  "type": "import"
 },
 "superset.examples.birth_names": {
  "data": {
   "symbols_in_volume": [
    "superset.examples.birth_names.admin",
    "superset.exceptions.NoDataException",
    "superset.security_manager.find_user"
   ]
  },
  "type": "module"
 },
 "superset.examples.birth_names.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.examples.birth_names.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.examples.birth_names.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.examples.birth_names.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.examples.birth_names.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.examples.birth_names.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.examples.birth_names.NoDataException": {
  "data": {
   "shadows": "superset.exceptions.NoDataException"
  },
  "type": "import"
 },
 "superset.examples.birth_names.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.examples.birth_names.SqlMetric": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlMetric"
  },
  "type": "import"
 },
 "superset.examples.birth_names.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.examples.birth_names.TableColumn": {
  "data": {
   "shadows": "superset.connectors.sqla.models.TableColumn"
  },
  "type": "import"
 },
 "superset.examples.birth_names.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.examples.birth_names.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.examples.birth_names._add_table_metrics": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "any",
    "sqlalchemy.sql.column",
    "str",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.connectors.sqla.models.TableColumn",
    "superset.db.engine"
   ]
  },
  "type": "function"
 },
 "superset.examples.birth_names._set_table_metadata": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "superset.examples.birth_names.admin": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.examples.birth_names.column": {
  "data": {
   "shadows": "sqlalchemy.sql.column"
  },
  "type": "import"
 },
 "superset.examples.birth_names.create_dashboard": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "print",
    "superset.db.session.add",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.examples.birth_names.admin",
    "superset.examples.birth_names.json",
    "superset.examples.birth_names.textwrap",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "typing.List",
    "update_slice_ids"
   ]
  },
  "type": "function"
 },
 "superset.examples.birth_names.create_slices": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "bool",
    "dict",
    "get_slice_json",
    "merge_slice",
    "print",
    "superset.connectors.base.models.BaseDatasource",
    "superset.examples.birth_names.admin",
    "superset.examples.birth_names.gen_filter",
    "superset.models.slice.Slice",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.examples.birth_names.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.birth_names.gen_filter": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.examples.birth_names.get_example_database": {
  "data": {
   "shadows": "superset.utils.core.get_example_database"
  },
  "type": "import"
 },
 "superset.examples.birth_names.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.examples.birth_names.load_birth_names": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "TBL",
    "_add_table_metrics",
    "_set_table_metadata",
    "bool",
    "create_dashboard",
    "create_slices",
    "print",
    "superset.db.session.add",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.examples.birth_names.load_data",
    "superset.utils.core.get_example_database"
   ]
  },
  "type": "function"
 },
 "superset.examples.birth_names.load_data": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bool",
    "get_example_data",
    "pandas.read_json",
    "pandas.to_datetime",
    "print",
    "sqlalchemy.DateTime",
    "sqlalchemy.String",
    "str",
    "superset.models.core.Database"
   ]
  },
  "type": "function"
 },
 "superset.examples.birth_names.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.examples.birth_names.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.examples.birth_names.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "superset.examples.countries": {
  "data": {
   "symbols_in_volume": [
    "str",
    "superset.examples.countries.lookups",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "superset.examples.countries.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.examples.countries.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.examples.countries.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.examples.countries.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.examples.countries.get": {
  "data": {
   "lineno": 2501,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.examples.countries.lookups": {
  "data": {
   "lineno": 2494
  },
  "type": "constant"
 },
 "superset.examples.country_map": {
  "data": {},
  "type": "module"
 },
 "superset.examples.country_map.BigInteger": {
  "data": {
   "shadows": "sqlalchemy.BigInteger"
  },
  "type": "import"
 },
 "superset.examples.country_map.Date": {
  "data": {
   "shadows": "sqlalchemy.Date"
  },
  "type": "import"
 },
 "superset.examples.country_map.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.examples.country_map.SqlMetric": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlMetric"
  },
  "type": "import"
 },
 "superset.examples.country_map.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.examples.country_map.column": {
  "data": {
   "shadows": "sqlalchemy.sql.column"
  },
  "type": "import"
 },
 "superset.examples.country_map.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "superset.examples.country_map.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.country_map.load_country_map_data": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "TBL",
    "any",
    "bool",
    "get_example_data",
    "get_slice_json",
    "merge_slice",
    "pandas.read_csv",
    "print",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Date",
    "sqlalchemy.String",
    "sqlalchemy.sql.column",
    "str",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.db.engine",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.db.session.query",
    "superset.examples.country_map.datetime",
    "superset.models.slice.Slice",
    "superset.utils.core.get_example_database"
   ]
  },
  "type": "function"
 },
 "superset.examples.country_map.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.examples.country_map.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.examples.css_templates": {
  "data": {},
  "type": "module"
 },
 "superset.examples.css_templates.CssTemplate": {
  "data": {
   "shadows": "superset.models.core.CssTemplate"
  },
  "type": "import"
 },
 "superset.examples.css_templates.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.css_templates.load_css_templates": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "print",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.db.session.query",
    "superset.examples.css_templates.textwrap",
    "superset.models.core.CssTemplate"
   ]
  },
  "type": "function"
 },
 "superset.examples.css_templates.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "superset.examples.deck": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.examples.deck.load_deck_dash"
   ]
  },
  "type": "module"
 },
 "superset.examples.deck.COLOR_RED": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.examples.deck.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.examples.deck.POSITION_JSON": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.examples.deck.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.examples.deck.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.deck.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.examples.deck.load_deck_dash": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "get_slice_json",
    "merge_slice",
    "print",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.db.session.query",
    "superset.examples.deck.COLOR_RED",
    "superset.examples.deck.POSITION_JSON",
    "superset.examples.deck.json",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "update_slice_ids"
   ]
  },
  "type": "function"
 },
 "superset.examples.energy": {
  "data": {},
  "type": "module"
 },
 "superset.examples.energy.Float": {
  "data": {
   "shadows": "sqlalchemy.Float"
  },
  "type": "import"
 },
 "superset.examples.energy.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.examples.energy.SqlMetric": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlMetric"
  },
  "type": "import"
 },
 "superset.examples.energy.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.examples.energy.column": {
  "data": {
   "shadows": "sqlalchemy.sql.column"
  },
  "type": "import"
 },
 "superset.examples.energy.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.energy.load_energy": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "TBL",
    "any",
    "bool",
    "get_example_data",
    "merge_slice",
    "pandas.read_json",
    "print",
    "sqlalchemy.Float",
    "sqlalchemy.String",
    "sqlalchemy.sql.column",
    "str",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.db.engine",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.db.session.query",
    "superset.examples.energy.textwrap",
    "superset.models.slice.Slice",
    "superset.utils.core.get_example_database"
   ]
  },
  "type": "function"
 },
 "superset.examples.energy.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.examples.energy.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "superset.examples.energy.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.examples.flights": {
  "data": {},
  "type": "module"
 },
 "superset.examples.flights.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.examples.flights.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.flights.load_flights": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TBL",
    "bool",
    "get_example_data",
    "pandas.read_csv",
    "pandas.to_datetime",
    "print",
    "sqlalchemy.DateTime",
    "str",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.db.session.query",
    "superset.utils.core.get_example_database"
   ]
  },
  "type": "function"
 },
 "superset.examples.flights.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.examples.flights.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.examples.helpers": {
  "data": {
   "symbols_in_volume": [
    "set",
    "str",
    "superset.app.config",
    "superset.connectors.connector_registry.ConnectorRegistry.sources",
    "superset.examples.helpers.config",
    "superset.examples.helpers.os",
    "superset.models.core.Database",
    "typing.Set"
   ]
  },
  "type": "module"
 },
 "superset.examples.helpers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.examples.helpers.BASE_URL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.examples.helpers.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "superset.examples.helpers.ConnectorRegistry": {
  "data": {
   "shadows": "superset.connectors.connector_registry.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.examples.helpers.DB": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.examples.helpers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.examples.helpers.EXAMPLES_FOLDER": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.examples.helpers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.examples.helpers.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.examples.helpers.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.examples.helpers.TBL": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.examples.helpers.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.examples.helpers.config": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.examples.helpers.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.helpers.get_example_data": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "bool",
    "io.BytesIO",
    "str",
    "superset.examples.helpers.BASE_URL",
    "superset.examples.helpers.zlib",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "superset.examples.helpers.get_slice_json": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "str",
    "superset.examples.helpers.json",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.examples.helpers.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.examples.helpers.merge_slice": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "superset.db.session.add",
    "superset.db.session.commit",
    "superset.db.session.delete",
    "superset.db.session.query",
    "superset.models.slice.Slice"
   ]
  },
  "type": "function"
 },
 "superset.examples.helpers.models": {
  "data": {
   "shadows": "superset.models.core"
  },
  "type": "import"
 },
 "superset.examples.helpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "superset.examples.helpers.request": {
  "data": {
   "shadows": "urllib.request"
  },
  "type": "import"
 },
 "superset.examples.helpers.update_slice_ids": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "sorted",
    "str",
    "superset.models.slice.Slice",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.examples.helpers.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "superset.examples.long_lat": {
  "data": {},
  "type": "module"
 },
 "superset.examples.long_lat.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.examples.long_lat.Float": {
  "data": {
   "shadows": "sqlalchemy.Float"
  },
  "type": "import"
 },
 "superset.examples.long_lat.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.examples.long_lat.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.examples.long_lat.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "superset.examples.long_lat.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.long_lat.geohash": {
  "data": {
   "shadows": "geohash"
  },
  "type": "import"
 },
 "superset.examples.long_lat.load_long_lat_data": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "TBL",
    "bool",
    "get_example_data",
    "get_slice_json",
    "len",
    "merge_slice",
    "pandas.read_csv",
    "print",
    "range",
    "sqlalchemy.DateTime",
    "sqlalchemy.Float",
    "sqlalchemy.String",
    "str",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.db.session.query",
    "superset.examples.long_lat.datetime",
    "superset.examples.long_lat.geohash",
    "superset.examples.long_lat.random",
    "superset.models.slice.Slice",
    "superset.utils.core.get_example_database"
   ]
  },
  "type": "function"
 },
 "superset.examples.long_lat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.examples.long_lat.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "superset.examples.long_lat.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.examples.misc_dashboard": {
  "data": {},
  "type": "module"
 },
 "superset.examples.misc_dashboard.DASH_SLUG": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.examples.misc_dashboard.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.examples.misc_dashboard.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.examples.misc_dashboard.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.misc_dashboard.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.examples.misc_dashboard.load_misc_dashboard": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "print",
    "sorted",
    "superset.db.session.commit",
    "superset.db.session.expunge_all",
    "superset.db.session.merge",
    "superset.db.session.query",
    "superset.examples.misc_dashboard.DASH_SLUG",
    "superset.examples.misc_dashboard.json",
    "superset.examples.misc_dashboard.textwrap",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.slice_name.in_",
    "update_slice_ids"
   ]
  },
  "type": "function"
 },
 "superset.examples.misc_dashboard.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "superset.examples.multi_line": {
  "data": {},
  "type": "module"
 },
 "superset.examples.multi_line.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.examples.multi_line.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.multi_line.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.examples.multi_line.load_multi_line": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bool",
    "load_birth_names",
    "load_world_bank_health_n_pop",
    "merge_slice",
    "superset.db.session.query",
    "superset.examples.multi_line.json",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.slice_name.in_"
   ]
  },
  "type": "function"
 },
 "superset.examples.multiformat_time_series": {
  "data": {},
  "type": "module"
 },
 "superset.examples.multiformat_time_series.BigInteger": {
  "data": {
   "shadows": "sqlalchemy.BigInteger"
  },
  "type": "import"
 },
 "superset.examples.multiformat_time_series.Date": {
  "data": {
   "shadows": "sqlalchemy.Date"
  },
  "type": "import"
 },
 "superset.examples.multiformat_time_series.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.examples.multiformat_time_series.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.examples.multiformat_time_series.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.examples.multiformat_time_series.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.examples.multiformat_time_series.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.examples.multiformat_time_series.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.examples.multiformat_time_series.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.multiformat_time_series.get_example_database": {
  "data": {
   "shadows": "superset.utils.core.get_example_database"
  },
  "type": "import"
 },
 "superset.examples.multiformat_time_series.load_multiformat_time_series": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "TBL",
    "bool",
    "enumerate",
    "get_example_data",
    "get_slice_json",
    "merge_slice",
    "pandas.read_json",
    "pandas.to_datetime",
    "print",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Date",
    "sqlalchemy.DateTime",
    "sqlalchemy.String",
    "str",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.db.session.query",
    "superset.models.slice.Slice",
    "superset.utils.core.get_example_database",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.examples.multiformat_time_series.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.examples.paris": {
  "data": {},
  "type": "module"
 },
 "superset.examples.paris.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.examples.paris.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.examples.paris.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.paris.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.examples.paris.load_paris_iris_geojson": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TBL",
    "bool",
    "get_example_data",
    "pandas.read_json",
    "print",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.db.session.query",
    "superset.examples.paris.json",
    "superset.utils.core.get_example_database"
   ]
  },
  "type": "function"
 },
 "superset.examples.paris.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.examples.paris.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.examples.random_time_series": {
  "data": {},
  "type": "module"
 },
 "superset.examples.random_time_series.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.examples.random_time_series.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.examples.random_time_series.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.examples.random_time_series.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.random_time_series.load_random_time_series_data": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TBL",
    "bool",
    "get_example_data",
    "get_slice_json",
    "merge_slice",
    "pandas.read_json",
    "pandas.to_datetime",
    "print",
    "sqlalchemy.DateTime",
    "sqlalchemy.String",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.db.session.query",
    "superset.models.slice.Slice",
    "superset.utils.core.get_example_database"
   ]
  },
  "type": "function"
 },
 "superset.examples.random_time_series.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.examples.random_time_series.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.examples.sf_population_polygons": {
  "data": {},
  "type": "module"
 },
 "superset.examples.sf_population_polygons.BigInteger": {
  "data": {
   "shadows": "sqlalchemy.BigInteger"
  },
  "type": "import"
 },
 "superset.examples.sf_population_polygons.Float": {
  "data": {
   "shadows": "sqlalchemy.Float"
  },
  "type": "import"
 },
 "superset.examples.sf_population_polygons.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.examples.sf_population_polygons.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.sf_population_polygons.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.examples.sf_population_polygons.load_sf_population_polygons": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TBL",
    "bool",
    "get_example_data",
    "pandas.read_json",
    "print",
    "sqlalchemy.BigInteger",
    "sqlalchemy.Float",
    "sqlalchemy.Text",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.db.session.query",
    "superset.examples.sf_population_polygons.json",
    "superset.utils.core.get_example_database"
   ]
  },
  "type": "function"
 },
 "superset.examples.sf_population_polygons.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.examples.sf_population_polygons.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.examples.tabbed_dashboard": {
  "data": {},
  "type": "module"
 },
 "superset.examples.tabbed_dashboard.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.examples.tabbed_dashboard.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.examples.tabbed_dashboard.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.tabbed_dashboard.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.examples.tabbed_dashboard.load_tabbed_dashboard": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "bool",
    "print",
    "set",
    "sorted",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.db.session.query",
    "superset.examples.tabbed_dashboard.json",
    "superset.examples.tabbed_dashboard.textwrap",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "update_slice_ids"
   ]
  },
  "type": "function"
 },
 "superset.examples.tabbed_dashboard.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "superset.examples.utils": {
  "data": {},
  "type": "module"
 },
 "superset.examples.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.examples.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.examples.utils.ImportExamplesCommand": {
  "data": {
   "shadows": "superset.commands.importers.v1.examples.ImportExamplesCommand"
  },
  "type": "import"
 },
 "superset.examples.utils.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "superset.examples.utils.YAML_EXTENSIONS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "superset.examples.utils.load_contents": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pathlib.Path",
    "pkg_resources.resource_isdir",
    "pkg_resources.resource_listdir",
    "pkg_resources.resource_stream",
    "str",
    "superset.examples.utils.YAML_EXTENSIONS",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.examples.utils.load_from_configs": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bool",
    "load_contents",
    "superset.commands.importers.v1.examples.ImportExamplesCommand"
   ]
  },
  "type": "function"
 },
 "superset.examples.utils.resource_isdir": {
  "data": {
   "shadows": "pkg_resources.resource_isdir"
  },
  "type": "import"
 },
 "superset.examples.utils.resource_listdir": {
  "data": {
   "shadows": "pkg_resources.resource_listdir"
  },
  "type": "import"
 },
 "superset.examples.utils.resource_stream": {
  "data": {
   "shadows": "pkg_resources.resource_stream"
  },
  "type": "import"
 },
 "superset.examples.world_bank": {
  "data": {},
  "type": "module"
 },
 "superset.examples.world_bank.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.examples.world_bank.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.examples.world_bank.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.examples.world_bank.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.examples.world_bank.SqlMetric": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlMetric"
  },
  "type": "import"
 },
 "superset.examples.world_bank.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.examples.world_bank.column": {
  "data": {
   "shadows": "sqlalchemy.sql.column"
  },
  "type": "import"
 },
 "superset.examples.world_bank.create_slices": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "get_slice_json",
    "superset.models.slice.Slice",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.examples.world_bank.dashboard_positions": {
  "data": {
   "lineno": 370
  },
  "type": "constant"
 },
 "superset.examples.world_bank.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.examples.world_bank.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.examples.world_bank.load_world_bank_health_n_pop": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "TBL",
    "any",
    "bool",
    "create_slices",
    "get_example_data",
    "merge_slice",
    "pandas.read_json",
    "pandas.to_datetime",
    "print",
    "sqlalchemy.DateTime",
    "sqlalchemy.String",
    "sqlalchemy.sql.column",
    "str",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.db.engine",
    "superset.db.session.commit",
    "superset.db.session.merge",
    "superset.db.session.query",
    "superset.examples.world_bank.json",
    "superset.examples.world_bank.os",
    "superset.models.dashboard.Dashboard",
    "superset.utils.core.get_example_database",
    "superset.utils.core.readfile",
    "update_slice_ids"
   ]
  },
  "type": "function"
 },
 "superset.examples.world_bank.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "superset.examples.world_bank.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.examples.world_bank.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.exceptions": {
  "data": {},
  "type": "module"
 },
 "superset.exceptions.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.exceptions.CacheLoadError": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.CertificateException": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "flask_babel.gettext",
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.DashboardImportException": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.DatabaseNotFound": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.exceptions.ErrorLevel": {
  "data": {
   "shadows": "superset.errors.ErrorLevel"
  },
  "type": "import"
 },
 "superset.exceptions.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.exceptions.NoDataException": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.NullValueException": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.exceptions.QueryObjectValidationError": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.SerializationError": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.SpatialException": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.SupersetError": {
  "data": {
   "shadows": "superset.errors.SupersetError"
  },
  "type": "import"
 },
 "superset.exceptions.SupersetErrorException": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.SupersetErrorException.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "str",
    "super",
    "superset.errors.ErrorLevel",
    "superset.errors.SupersetError",
    "superset.errors.SupersetErrorType",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.exceptions.SupersetErrorType": {
  "data": {
   "shadows": "superset.errors.SupersetErrorType"
  },
  "type": "import"
 },
 "superset.exceptions.SupersetException": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.SupersetException.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Exception",
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.exceptions.SupersetException.exception": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Exception",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.exceptions.SupersetGenericDBErrorException": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "superset.exceptions.SupersetErrorException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.SupersetGenericDBErrorException.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "str",
    "super",
    "superset.errors.ErrorLevel",
    "superset.errors.ErrorLevel.ERROR",
    "superset.errors.SupersetErrorType.GENERIC_DB_ENGINE_ERROR",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.exceptions.SupersetSecurityException": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.SupersetSecurityException.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "str",
    "super",
    "superset.errors.SupersetError",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.exceptions.SupersetTemplateException": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.SupersetTemplateParamsErrorException": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "superset.exceptions.SupersetErrorException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.SupersetTemplateParamsErrorException.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "str",
    "super",
    "superset.errors.ErrorLevel",
    "superset.errors.ErrorLevel.ERROR",
    "superset.errors.SupersetErrorType.MISSING_TEMPLATE_PARAMS_ERROR",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.exceptions.SupersetTimeoutException": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "superset.exceptions.SupersetErrorException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.SupersetVizException": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.exceptions.SupersetVizException.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "str",
    "super",
    "superset.errors.SupersetError",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.exceptions._": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.extensions": {
  "data": {
   "symbols_in_volume": [
    "flask_appbuilder.AppBuilder",
    "flask_appbuilder.SQLA",
    "flask_migrate.Migrate",
    "flask_talisman.Talisman",
    "flask_wtf.csrf.CSRFProtect",
    "str",
    "superset.extensions.APP_DIR",
    "superset.extensions.ResultsBackendManager",
    "superset.extensions.UIManifestProcessor",
    "superset.extensions.appbuilder",
    "superset.extensions.celery",
    "superset.extensions.os",
    "superset.utils.async_query_manager.AsyncQueryManager",
    "superset.utils.cache_manager.CacheManager",
    "superset.utils.feature_flag_manager.FeatureFlagManager",
    "superset.utils.machine_auth.MachineAuthProviderFactory",
    "typing.Any",
    "typing.Dict",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "superset.extensions.APP_DIR": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "superset.extensions.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.extensions.AppBuilder": {
  "data": {
   "shadows": "flask_appbuilder.AppBuilder"
  },
  "type": "import"
 },
 "superset.extensions.AsyncQueryManager": {
  "data": {
   "shadows": "superset.utils.async_query_manager.AsyncQueryManager"
  },
  "type": "import"
 },
 "superset.extensions.BaseCache": {
  "data": {
   "shadows": "cachelib.base.BaseCache"
  },
  "type": "import"
 },
 "superset.extensions.CSRFProtect": {
  "data": {
   "shadows": "flask_wtf.csrf.CSRFProtect"
  },
  "type": "import"
 },
 "superset.extensions.CacheManager": {
  "data": {
   "shadows": "superset.utils.cache_manager.CacheManager"
  },
  "type": "import"
 },
 "superset.extensions.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.extensions.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.extensions.FeatureFlagManager": {
  "data": {
   "shadows": "superset.utils.feature_flag_manager.FeatureFlagManager"
  },
  "type": "import"
 },
 "superset.extensions.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "superset.extensions.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.extensions.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "superset.extensions.MachineAuthProviderFactory": {
  "data": {
   "shadows": "superset.utils.machine_auth.MachineAuthProviderFactory"
  },
  "type": "import"
 },
 "superset.extensions.Migrate": {
  "data": {
   "shadows": "flask_migrate.Migrate"
  },
  "type": "import"
 },
 "superset.extensions.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.extensions.ResultsBackendManager": {
  "data": {
   "lineno": 36
  },
  "type": "class"
 },
 "superset.extensions.ResultsBackendManager.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.extensions.ResultsBackendManager.init_app": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "flask.Flask"
   ]
  },
  "type": "function"
 },
 "superset.extensions.ResultsBackendManager.results_backend": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "cachelib.base.BaseCache",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.extensions.ResultsBackendManager.should_use_msgpack": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.extensions.SQLA": {
  "data": {
   "shadows": "flask_appbuilder.SQLA"
  },
  "type": "import"
 },
 "superset.extensions.Talisman": {
  "data": {
   "shadows": "flask_talisman.Talisman"
  },
  "type": "import"
 },
 "superset.extensions.UIManifestProcessor": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "superset.extensions.UIManifestProcessor.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "flask.Flask",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.extensions.UIManifestProcessor.get_manifest_files": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.extensions.UIManifestProcessor.init_app": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "flask.Flask"
   ]
  },
  "type": "function"
 },
 "superset.extensions.UIManifestProcessor.init_app.get_manifest": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dict",
    "get_files",
    "set",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.extensions.UIManifestProcessor.init_app.get_manifest.get_files": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.extensions.UIManifestProcessor.parse_manifest_json": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Exception",
    "open",
    "superset.extensions.json"
   ]
  },
  "type": "function"
 },
 "superset.extensions.appbuilder": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "superset.extensions.async_query_manager": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "superset.extensions.cache_manager": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "superset.extensions.celery": {
  "data": {
   "shadows": "celery"
  },
  "type": "import"
 },
 "superset.extensions.celery_app": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "superset.extensions.csrf": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "superset.extensions.db": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "superset.extensions.event_logger": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "superset.extensions.feature_flag_manager": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "superset.extensions.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.extensions.machine_auth_provider_factory": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "superset.extensions.manifest_processor": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "superset.extensions.migrate": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "superset.extensions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "superset.extensions.results_backend_manager": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "superset.extensions.security_manager": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "superset.extensions.talisman": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "superset.feature_flag_manager": {
  "data": {
   "shadows": "superset.extensions.feature_flag_manager"
  },
  "type": "import"
 },
 "superset.forms": {
  "data": {},
  "type": "module"
 },
 "superset.forms.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.forms.BS3TextFieldWidget": {
  "data": {
   "shadows": "flask_appbuilder.fieldwidgets.BS3TextFieldWidget"
  },
  "type": "import"
 },
 "superset.forms.CommaSeparatedListField": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "flask_appbuilder.fieldwidgets.BS3TextFieldWidget",
    "str",
    "typing.List",
    "wtforms.Field"
   ]
  },
  "type": "class"
 },
 "superset.forms.CommaSeparatedListField._value": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.forms.CommaSeparatedListField.process_formdata": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.forms.Field": {
  "data": {
   "shadows": "wtforms.Field"
  },
  "type": "import"
 },
 "superset.forms.JsonListField": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "flask_appbuilder.fieldwidgets.BS3TextFieldWidget",
    "str",
    "typing.List",
    "wtforms.Field"
   ]
  },
  "type": "class"
 },
 "superset.forms.JsonListField._value": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "str",
    "superset.forms.json"
   ]
  },
  "type": "function"
 },
 "superset.forms.JsonListField.process_formdata": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "str",
    "superset.forms.json",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.forms.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.forms.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.forms.filter_not_empty_values": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "typing.Any",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.forms.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.get_feature_flags": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.get_manifest_files": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.is_feature_enabled": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "superset.jinja_context": {
  "data": {
   "symbols_in_volume": [
    "superset.jinja_context.HiveTemplateProcessor",
    "superset.jinja_context.NONE_TYPE",
    "superset.jinja_context.PrestoTemplateProcessor",
    "type",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.jinja_context.ALLOWED_TYPES": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.jinja_context.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.jinja_context.BaseTemplateProcessor": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.jinja_context.BaseTemplateProcessor.__init__": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "jinja2.DebugUndefined",
    "jinja2.sandbox.SandboxedEnvironment",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.BaseTemplateProcessor.process_template": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "str",
    "superset.jinja_context.validate_template_context",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.BaseTemplateProcessor.set_context": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "superset.jinja_context.context_addons",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.COLLECTION_TYPES": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "superset.jinja_context.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.jinja_context.DEFAULT_PROCESSORS": {
  "data": {
   "lineno": 417
  },
  "type": "constant"
 },
 "superset.jinja_context.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.jinja_context.DebugUndefined": {
  "data": {
   "shadows": "jinja2.DebugUndefined"
  },
  "type": "import"
 },
 "superset.jinja_context.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.jinja_context.ExtraCache": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "superset.jinja_context.re"
   ]
  },
  "type": "class"
 },
 "superset.jinja_context.ExtraCache.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "typing.Any",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.ExtraCache.cache_key_wrapper": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.ExtraCache.current_user_id": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "bool",
    "flask.g",
    "flask.g.user",
    "flask.g.user.id",
    "hasattr",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.ExtraCache.current_username": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "bool",
    "flask.g.user",
    "flask.g.user.username",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.ExtraCache.url_param": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "bool",
    "flask.request.args.get",
    "flask_babel.gettext",
    "str",
    "superset.views.utils.get_form_data",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.HiveTemplateProcessor": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "superset.jinja_context.PrestoTemplateProcessor"
   ]
  },
  "type": "class"
 },
 "superset.jinja_context.JinjaTemplateProcessor": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "superset.jinja_context.BaseTemplateProcessor"
   ]
  },
  "type": "class"
 },
 "superset.jinja_context.JinjaTemplateProcessor.set_context": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "functools.partial",
    "super",
    "superset.jinja_context.ExtraCache",
    "superset.jinja_context.filter_values",
    "superset.jinja_context.safe_proxy",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.jinja_context.NONE_TYPE": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.jinja_context.NoOpTemplateProcessor": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "superset.jinja_context.BaseTemplateProcessor"
   ]
  },
  "type": "class"
 },
 "superset.jinja_context.NoOpTemplateProcessor.process_template": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.jinja_context.PrestoEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.presto.PrestoEngineSpec"
  },
  "type": "import"
 },
 "superset.jinja_context.PrestoTemplateProcessor": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "superset.jinja_context.JinjaTemplateProcessor"
   ]
  },
  "type": "class"
 },
 "superset.jinja_context.PrestoTemplateProcessor._schema_table": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.PrestoTemplateProcessor.first_latest_partition": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.PrestoTemplateProcessor.latest_partitions": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "str",
    "superset.db_engine_specs.presto.PrestoEngineSpec",
    "typing.List",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.PrestoTemplateProcessor.latest_sub_partition": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "str",
    "superset.db_engine_specs.presto.PrestoEngineSpec",
    "typing.Any",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.PrestoTemplateProcessor.set_context": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "functools.partial",
    "super",
    "superset.jinja_context.safe_proxy",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.Query": {
  "data": {
   "shadows": "superset.models.sql_lab.Query"
  },
  "type": "import"
 },
 "superset.jinja_context.SandboxedEnvironment": {
  "data": {
   "shadows": "jinja2.sandbox.SandboxedEnvironment"
  },
  "type": "import"
 },
 "superset.jinja_context.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.jinja_context.SupersetTemplateException": {
  "data": {
   "shadows": "superset.exceptions.SupersetTemplateException"
  },
  "type": "import"
 },
 "superset.jinja_context.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.jinja_context.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.jinja_context._": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.jinja_context.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.jinja_context.context_addons": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "flask.current_app.config.get",
    "str",
    "superset.utils.core.memoized",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.convert_legacy_filters_into_adhoc": {
  "data": {
   "shadows": "superset.utils.core.convert_legacy_filters_into_adhoc"
  },
  "type": "import"
 },
 "superset.jinja_context.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.jinja_context.feature_flag_manager": {
  "data": {
   "shadows": "superset.extensions.feature_flag_manager"
  },
  "type": "import"
 },
 "superset.jinja_context.filter_values": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "filter",
    "filter.get",
    "flask_babel.gettext",
    "isinstance",
    "list",
    "str",
    "superset.utils.core.convert_legacy_filters_into_adhoc",
    "superset.utils.core.merge_extra_filters",
    "superset.views.utils.get_form_data",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.jinja_context.get_form_data": {
  "data": {
   "shadows": "superset.views.utils.get_form_data"
  },
  "type": "import"
 },
 "superset.jinja_context.get_template_processor": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "superset.extensions.feature_flag_manager.is_feature_enabled",
    "superset.jinja_context.BaseTemplateProcessor",
    "superset.jinja_context.JinjaTemplateProcessor",
    "superset.jinja_context.NoOpTemplateProcessor",
    "superset.jinja_context.get_template_processors",
    "template_processor",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.get_template_processors": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "flask.current_app.config.get",
    "str",
    "superset.jinja_context.DEFAULT_PROCESSORS",
    "superset.utils.core.memoized",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.jinja_context.memoized": {
  "data": {
   "shadows": "superset.utils.core.memoized"
  },
  "type": "import"
 },
 "superset.jinja_context.merge_extra_filters": {
  "data": {
   "shadows": "superset.utils.core.merge_extra_filters"
  },
  "type": "import"
 },
 "superset.jinja_context.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "superset.jinja_context.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.jinja_context.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.jinja_context.safe_proxy": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "TypeError",
    "flask_babel.gettext",
    "func",
    "func.__name__",
    "superset.exceptions.SupersetTemplateException",
    "superset.jinja_context.ALLOWED_TYPES",
    "superset.jinja_context.COLLECTION_TYPES",
    "superset.jinja_context.json",
    "type",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.validate_context_types": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "TypeError",
    "flask_babel.gettext",
    "str",
    "superset.exceptions.SupersetTemplateException",
    "superset.jinja_context.ALLOWED_TYPES",
    "superset.jinja_context.COLLECTION_TYPES",
    "superset.jinja_context.context_addons",
    "superset.jinja_context.json",
    "type",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.jinja_context.validate_template_context": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "str",
    "superset.jinja_context.validate_context_types",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.legacy": {
  "data": {},
  "type": "module"
 },
 "superset.legacy.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.legacy.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.legacy.update_time_range": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.manifest_processor": {
  "data": {
   "shadows": "superset.extensions.manifest_processor"
  },
  "type": "import"
 },
 "superset.migrations": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.env": {
  "data": {
   "symbols_in_volume": [
    "alembic.context.config",
    "alembic.context.is_offline_mode",
    "flask.current_app.config",
    "flask_appbuilder.Base.metadata",
    "logging.config.fileConfig",
    "superset.migrations.env.DATABASE_URI",
    "superset.migrations.env.config",
    "superset.migrations.env.logger",
    "superset.migrations.env.logging",
    "superset.migrations.env.run_migrations_offline",
    "superset.migrations.env.run_migrations_online"
   ]
  },
  "type": "module"
 },
 "superset.migrations.env.Base": {
  "data": {
   "shadows": "flask_appbuilder.Base"
  },
  "type": "import"
 },
 "superset.migrations.env.DATABASE_URI": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.migrations.env.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.migrations.env.MigrationContext": {
  "data": {
   "shadows": "alembic.runtime.migration.MigrationContext"
  },
  "type": "import"
 },
 "superset.migrations.env.MigrationScript": {
  "data": {
   "shadows": "alembic.operations.ops.MigrationScript"
  },
  "type": "import"
 },
 "superset.migrations.env.config": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.migrations.env.context": {
  "data": {
   "shadows": "alembic.context"
  },
  "type": "import"
 },
 "superset.migrations.env.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.migrations.env.engine_from_config": {
  "data": {
   "shadows": "sqlalchemy.engine_from_config"
  },
  "type": "import"
 },
 "superset.migrations.env.fileConfig": {
  "data": {
   "shadows": "logging.config.fileConfig"
  },
  "type": "import"
 },
 "superset.migrations.env.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.migrations.env.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.env.pool": {
  "data": {
   "shadows": "sqlalchemy.pool"
  },
  "type": "import"
 },
 "superset.migrations.env.run_migrations_offline": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "alembic.context.begin_transaction",
    "alembic.context.configure",
    "alembic.context.run_migrations",
    "superset.migrations.env.config"
   ]
  },
  "type": "function"
 },
 "superset.migrations.env.run_migrations_online": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "alembic.context.begin_transaction",
    "alembic.context.configure",
    "alembic.context.run_migrations",
    "flask.current_app.extensions.configure_args",
    "sqlalchemy.engine_from_config",
    "sqlalchemy.pool.NullPool",
    "superset.migrations.env.config",
    "superset.migrations.env.target_metadata"
   ]
  },
  "type": "function"
 },
 "superset.migrations.env.run_migrations_online.process_revision_directives": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "alembic.operations.ops.MigrationScript",
    "alembic.runtime.migration.MigrationContext",
    "getattr",
    "str",
    "superset.migrations.env.config",
    "superset.migrations.env.logger",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.migrations.env.target_metadata": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.migrations.shared": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.shared.security_converge": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Sequence",
    "sqlalchemy.Table",
    "sqlalchemy.UniqueConstraint",
    "sqlalchemy.ext.declarative.declarative_base",
    "superset.migrations.shared.security_converge.Base",
    "superset.migrations.shared.security_converge.Pvm",
    "superset.migrations.shared.security_converge.logging",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "superset.migrations.shared.security_converge.Base": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.migrations.shared.security_converge.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.Load": {
  "data": {
   "shadows": "sqlalchemy.orm.Load"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.Permission": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Sequence",
    "sqlalchemy.String",
    "superset.migrations.shared.security_converge.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.shared.security_converge.Permission.__repr__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge.PermissionView": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Sequence",
    "sqlalchemy.UniqueConstraint",
    "sqlalchemy.orm.relationship",
    "superset.migrations.shared.security_converge.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.shared.security_converge.PermissionView.__repr__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge.Pvm": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.migrations.shared.security_converge.PvmMigrationMapType": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.migrations.shared.security_converge.Role": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Sequence",
    "sqlalchemy.String",
    "sqlalchemy.orm.relationship",
    "superset.migrations.shared.security_converge.Base",
    "superset.migrations.shared.security_converge.assoc_permissionview_role"
   ]
  },
  "type": "class"
 },
 "superset.migrations.shared.security_converge.Role.__repr__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge.Sequence": {
  "data": {
   "shadows": "sqlalchemy.Sequence"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.UniqueConstraint": {
  "data": {
   "shadows": "sqlalchemy.UniqueConstraint"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.ViewMenu": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Sequence",
    "sqlalchemy.String",
    "superset.migrations.shared.security_converge.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.shared.security_converge.ViewMenu.__eq__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "object"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge.ViewMenu.__neq__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "object"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge.ViewMenu.__repr__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge._add_permission": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "str",
    "superset.migrations.shared.security_converge.Permission"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge._add_permission_view": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.Permission",
    "superset.migrations.shared.security_converge.PermissionView",
    "superset.migrations.shared.security_converge.ViewMenu"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge._add_view_menu": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "str",
    "superset.migrations.shared.security_converge.ViewMenu"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge._delete_old_permissions": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.Permission",
    "superset.migrations.shared.security_converge.PermissionView",
    "superset.migrations.shared.security_converge.ViewMenu",
    "superset.migrations.shared.security_converge.logger",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge._find_pvm": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "str",
    "superset.migrations.shared.security_converge.Permission",
    "superset.migrations.shared.security_converge.PermissionView",
    "superset.migrations.shared.security_converge.ViewMenu"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge.add_pvms": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.orm.Session",
    "str",
    "superset.migrations.shared.security_converge.PermissionView",
    "superset.migrations.shared.security_converge._add_permission",
    "superset.migrations.shared.security_converge._add_permission_view",
    "superset.migrations.shared.security_converge._add_view_menu",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge.assoc_permissionview_role": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "superset.migrations.shared.security_converge.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.get_reversed_new_pvms": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "str",
    "superset.migrations.shared.security_converge.PvmMigrationMapType",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge.get_reversed_pvm_map": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "superset.migrations.shared.security_converge.PvmMigrationMapType"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.migrations.shared.security_converge.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.shared.security_converge.migrate_roles": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.orm.Load",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.PermissionView",
    "superset.migrations.shared.security_converge.PvmMigrationMapType",
    "superset.migrations.shared.security_converge.Role",
    "superset.migrations.shared.security_converge._delete_old_permissions",
    "superset.migrations.shared.security_converge._find_pvm",
    "superset.migrations.shared.security_converge.logger",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.migrations.shared.security_converge.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.migrations.shared.utils": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.shared.utils.NoSuchTableError": {
  "data": {
   "shadows": "sqlalchemy.exc.NoSuchTableError"
  },
  "type": "import"
 },
 "superset.migrations.shared.utils.engine_from_config": {
  "data": {
   "shadows": "sqlalchemy.engine_from_config"
  },
  "type": "import"
 },
 "superset.migrations.shared.utils.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.shared.utils.reflection": {
  "data": {
   "shadows": "sqlalchemy.engine.reflection"
  },
  "type": "import"
 },
 "superset.migrations.shared.utils.table_has_column": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "alembic.op.get_context",
    "any",
    "bool",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "sqlalchemy.engine_from_config",
    "sqlalchemy.exc.NoSuchTableError",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.0a6f12f60c73_add_role_level_security": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.0a6f12f60c73_add_role_level_security.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.0a6f12f60c73_add_role_level_security.downgrade": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.0a6f12f60c73_add_role_level_security.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.0a6f12f60c73_add_role_level_security.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.0a6f12f60c73_add_role_level_security.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.0a6f12f60c73_add_role_level_security.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.0b1f1ab473c0_add_extra_column_to_query": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.0b1f1ab473c0_add_extra_column_to_query.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.0b1f1ab473c0_add_extra_column_to_query.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.0b1f1ab473c0_add_extra_column_to_query.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.0b1f1ab473c0_add_extra_column_to_query.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.0b1f1ab473c0_add_extra_column_to_query.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.0b1f1ab473c0_add_extra_column_to_query.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.0c5070e96b57_add_user_attributes_table": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.0c5070e96b57_add_user_attributes_table.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.0c5070e96b57_add_user_attributes_table.downgrade": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.0c5070e96b57_add_user_attributes_table.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.0c5070e96b57_add_user_attributes_table.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.0c5070e96b57_add_user_attributes_table.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.0c5070e96b57_add_user_attributes_table.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.11c737c17cc6_deprecate_restricted_metrics": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.11c737c17cc6_deprecate_restricted_metrics.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.11c737c17cc6_deprecate_restricted_metrics.downgrade": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.BOOLEAN",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.11c737c17cc6_deprecate_restricted_metrics.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.11c737c17cc6_deprecate_restricted_metrics.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.11c737c17cc6_deprecate_restricted_metrics.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.11c737c17cc6_deprecate_restricted_metrics.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.down_revision": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.downgrade": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.find_constraint_name",
    "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.naming_convention"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.find_constraint_name": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "superset.db",
    "superset.utils.core.generic_find_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.generic_find_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.naming_convention": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.revision": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.upgrade": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.find_constraint_name",
    "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.logging",
    "superset.migrations.versions.1226819ee0e3_fix_wrong_constraint_on_table_columns.naming_convention"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1296d28ec131_druid_exports": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.1296d28ec131_druid_exports.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.1296d28ec131_druid_exports.downgrade": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1296d28ec131_druid_exports.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.1296d28ec131_druid_exports.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.1296d28ec131_druid_exports.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.1296d28ec131_druid_exports.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.12d55656cbca_is_featured": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.12d55656cbca_is_featured.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.12d55656cbca_is_featured.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.12d55656cbca_is_featured.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.12d55656cbca_is_featured.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.12d55656cbca_is_featured.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.12d55656cbca_is_featured.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.130915240929_is_sqllab_viz_flow": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.130915240929_is_sqllab_viz_flow.Base": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.migrations.versions.130915240929_is_sqllab_viz_flow.Table": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "superset.migrations.versions.130915240929_is_sqllab_viz_flow.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.130915240929_is_sqllab_viz_flow.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.130915240929_is_sqllab_viz_flow.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.130915240929_is_sqllab_viz_flow.down_revision": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.migrations.versions.130915240929_is_sqllab_viz_flow.downgrade": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.130915240929_is_sqllab_viz_flow.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.130915240929_is_sqllab_viz_flow.revision": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.migrations.versions.130915240929_is_sqllab_viz_flow.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.130915240929_is_sqllab_viz_flow.upgrade": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "alembic.op.get_bind",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.false",
    "superset.db.Session",
    "superset.db.session.close",
    "superset.migrations.versions.130915240929_is_sqllab_viz_flow.Table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1495eb914ad3_time_range": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.Base": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.Slice": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "superset.migrations.versions.1495eb914ad3_time_range.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.down_revision": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.downgrade": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.1495eb914ad3_time_range.Slice",
    "superset.migrations.versions.1495eb914ad3_time_range.json",
    "superset.migrations.versions.1495eb914ad3_time_range.logging"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.revision": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.update_time_range": {
  "data": {
   "shadows": "superset.legacy.update_time_range"
  },
  "type": "import"
 },
 "superset.migrations.versions.1495eb914ad3_time_range.upgrade": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.legacy.update_time_range",
    "superset.migrations.versions.1495eb914ad3_time_range.Slice",
    "superset.migrations.versions.1495eb914ad3_time_range.json",
    "superset.migrations.versions.1495eb914ad3_time_range.logging"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.175ea3592453_cache_lookup": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.175ea3592453_cache_lookup.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.175ea3592453_cache_lookup.downgrade": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "alembic.op.drop_index",
    "alembic.op.drop_table",
    "alembic.op.f"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.175ea3592453_cache_lookup.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.175ea3592453_cache_lookup.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.175ea3592453_cache_lookup.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.175ea3592453_cache_lookup.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.create_index",
    "alembic.op.create_table",
    "alembic.op.f",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.18532d70ab98_fix_table_unique_constraint_in_mysql": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.18532d70ab98_fix_table_unique_constraint_in_mysql.Inspector": {
  "data": {
   "shadows": "sqlalchemy.engine.reflection.Inspector"
  },
  "type": "import"
 },
 "superset.migrations.versions.18532d70ab98_fix_table_unique_constraint_in_mysql.MySQLDialect": {
  "data": {
   "shadows": "sqlalchemy.dialects.mysql.base.MySQLDialect"
  },
  "type": "import"
 },
 "superset.migrations.versions.18532d70ab98_fix_table_unique_constraint_in_mysql.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.18532d70ab98_fix_table_unique_constraint_in_mysql.downgrade": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "superset.migrations.versions.18532d70ab98_fix_table_unique_constraint_in_mysql.generic_find_uq_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_uq_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.18532d70ab98_fix_table_unique_constraint_in_mysql.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.18532d70ab98_fix_table_unique_constraint_in_mysql.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.18532d70ab98_fix_table_unique_constraint_in_mysql.upgrade": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "alembic.op.drop_constraint",
    "alembic.op.get_bind",
    "isinstance",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "superset.utils.core.generic_find_uq_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.18dc26817ad2_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.18dc26817ad2_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.18dc26817ad2_.downgrade": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.migrations.versions.18dc26817ad2_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.18dc26817ad2_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.18dc26817ad2_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.18dc26817ad2_.upgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.18e88e1cc004_making_audit_nullable": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.18e88e1cc004_making_audit_nullable.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.18e88e1cc004_making_audit_nullable.downgrade": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "superset.migrations.versions.18e88e1cc004_making_audit_nullable.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.18e88e1cc004_making_audit_nullable.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.18e88e1cc004_making_audit_nullable.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.18e88e1cc004_making_audit_nullable.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.alter_column",
    "alembic.op.create_unique_constraint",
    "alembic.op.drop_column",
    "alembic.op.drop_constraint",
    "sqlalchemy.DATETIME",
    "sqlalchemy.INTEGER"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.Base": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.DashboardSlices": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.down_revision": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.downgrade": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.batch_alter_table",
    "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.logging"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.revision": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.upgrade": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.and_",
    "superset.db.Session",
    "superset.db.func.count",
    "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.DashboardSlices",
    "superset.migrations.versions.190188938582_adding_unique_constraint_on_dashboard_slices_tbl.logging"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.19a814813610_adding_metric_warning_text": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.19a814813610_adding_metric_warning_text.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.19a814813610_adding_metric_warning_text.downgrade": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.19a814813610_adding_metric_warning_text.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.19a814813610_adding_metric_warning_text.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.19a814813610_adding_metric_warning_text.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.19a814813610_adding_metric_warning_text.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1a1d627ebd8e_position_json": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.1a1d627ebd8e_position_json.MediumText": {
  "data": {
   "shadows": "superset.utils.core.MediumText"
  },
  "type": "import"
 },
 "superset.migrations.versions.1a1d627ebd8e_position_json.down_revision": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.migrations.versions.1a1d627ebd8e_position_json.downgrade": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.Text",
    "superset.utils.core.MediumText"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1a1d627ebd8e_position_json.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.1a1d627ebd8e_position_json.revision": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.migrations.versions.1a1d627ebd8e_position_json.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.1a1d627ebd8e_position_json.upgrade": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.Text",
    "superset.utils.core.MediumText"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1a48a5411020_adding_slug_to_dash": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.1a48a5411020_adding_slug_to_dash.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.1a48a5411020_adding_slug_to_dash.downgrade": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "alembic.op.drop_column",
    "alembic.op.drop_constraint"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1a48a5411020_adding_slug_to_dash.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.1a48a5411020_adding_slug_to_dash.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.1a48a5411020_adding_slug_to_dash.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.1a48a5411020_adding_slug_to_dash.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "alembic.op.create_unique_constraint",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1d2ddd543133_log_dt": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.1d2ddd543133_log_dt.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.1d2ddd543133_log_dt.downgrade": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1d2ddd543133_log_dt.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.1d2ddd543133_log_dt.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.1d2ddd543133_log_dt.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.1d2ddd543133_log_dt.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Date"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1d9e835a84f9_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.1d9e835a84f9_.down_revision": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.migrations.versions.1d9e835a84f9_.downgrade": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1d9e835a84f9_.expression": {
  "data": {
   "shadows": "sqlalchemy.sql.expression"
  },
  "type": "import"
 },
 "superset.migrations.versions.1d9e835a84f9_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.1d9e835a84f9_.revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.1d9e835a84f9_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.1d9e835a84f9_.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.sql.expression.true"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1e2841a4128_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.1e2841a4128_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.1e2841a4128_.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1e2841a4128_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.1e2841a4128_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.1e2841a4128_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.1e2841a4128_.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards": {
  "data": {
   "symbols_in_volume": [
    "superset.migrations.shared.security_converge.Pvm"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.NEW_PVMS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.PVM_MAP": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.Pvm": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.Pvm"
  },
  "type": "import"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.add_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.add_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.downgrade": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.get_reversed_new_pvms",
    "superset.migrations.shared.security_converge.get_reversed_pvm_map",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.get_reversed_new_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_new_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.get_reversed_pvm_map": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_pvm_map"
  },
  "type": "import"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.migrate_roles": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.migrate_roles"
  },
  "type": "import"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.upgrade": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.NEW_PVMS",
    "superset.migrations.versions.1f6dca87d1a2_security_converge_dashboards.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.Base": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.Slice": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.21e88bc06c02_annotation_migration.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.down_revision": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.downgrade": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "sqlalchemy.or_",
    "superset.db.Session",
    "superset.migrations.versions.21e88bc06c02_annotation_migration.Slice",
    "superset.migrations.versions.21e88bc06c02_annotation_migration.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.revision": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.migrations.versions.21e88bc06c02_annotation_migration.upgrade": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "sqlalchemy.or_",
    "superset.db.Session",
    "superset.migrations.versions.21e88bc06c02_annotation_migration.Slice",
    "superset.migrations.versions.21e88bc06c02_annotation_migration.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Annotation": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Base": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.BaseColumnMixin": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.BaseDatasourceMixin": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.BaseMetricMixin": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Dashboard": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Base",
    "superset.utils.core.MediumText"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Database": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.DruidCluster": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.DruidColumn": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Text",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Base",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.BaseColumnMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.DruidDatasource": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Base",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.BaseDatasourceMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.DruidMetric": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Text",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Base",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.BaseMetricMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.MediumText": {
  "data": {
   "shadows": "superset.utils.core.MediumText"
  },
  "type": "import"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Slice": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.SqlMetric": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Text",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Base",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.BaseMetricMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.SqlaTable": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Base",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.BaseDatasourceMixin",
    "superset.utils.core.MediumText"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.TableColumn": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Base",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.BaseColumnMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.down_revision": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.downgrade": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.revision": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.upgrade": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "getattr",
    "setattr",
    "superset.db.Session",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Annotation",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Dashboard",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Database",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.DruidCluster",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.DruidColumn",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.DruidDatasource",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.DruidMetric",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.Slice",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.SqlMetric",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.SqlaTable",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.TableColumn",
    "superset.migrations.versions.258b5280a45e_form_strip_leading_and_trailing_whitespace.re"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.2591d77e9831_user_id": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.2591d77e9831_user_id.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.2591d77e9831_user_id.downgrade": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.2591d77e9831_user_id.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.2591d77e9831_user_id.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.2591d77e9831_user_id.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.2591d77e9831_user_id.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Table",
    "sqlalchemy.ext.declarative.declarative_base",
    "superset.migrations.versions.27ae655e4247_make_creator_owners.Base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.AuditMixin": {
  "data": {
   "shadows": "flask_appbuilder.models.mixins.AuditMixin"
  },
  "type": "import"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.Base": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.Dashboard": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "flask_appbuilder.models.mixins.AuditMixin",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship",
    "superset.migrations.versions.27ae655e4247_make_creator_owners.Base",
    "superset.migrations.versions.27ae655e4247_make_creator_owners.dashboard_user"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.Slice": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "flask_appbuilder.models.mixins.AuditMixin",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship",
    "superset.migrations.versions.27ae655e4247_make_creator_owners.Base",
    "superset.migrations.versions.27ae655e4247_make_creator_owners.slice_user"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.User": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "superset.migrations.versions.27ae655e4247_make_creator_owners.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.dashboard_user": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.downgrade": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.slice_user": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "superset.migrations.versions.27ae655e4247_make_creator_owners.upgrade": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.27ae655e4247_make_creator_owners.Dashboard",
    "superset.migrations.versions.27ae655e4247_make_creator_owners.Slice"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.289ce07647b_add_encrypted_password_field": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.289ce07647b_add_encrypted_password_field.EncryptedType": {
  "data": {
   "shadows": "sqlalchemy_utils.EncryptedType"
  },
  "type": "import"
 },
 "superset.migrations.versions.289ce07647b_add_encrypted_password_field.down_revision": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.migrations.versions.289ce07647b_add_encrypted_password_field.downgrade": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.289ce07647b_add_encrypted_password_field.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.289ce07647b_add_encrypted_password_field.revision": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.migrations.versions.289ce07647b_add_encrypted_password_field.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.289ce07647b_add_encrypted_password_field.upgrade": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy_utils.EncryptedType"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.2929af7925ed_tz_offsets_in_data_sources": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.2929af7925ed_tz_offsets_in_data_sources.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.2929af7925ed_tz_offsets_in_data_sources.downgrade": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.2929af7925ed_tz_offsets_in_data_sources.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.2929af7925ed_tz_offsets_in_data_sources.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.2929af7925ed_tz_offsets_in_data_sources.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.2929af7925ed_tz_offsets_in_data_sources.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.2e5a0ee25ed4_refractor_alerting": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.2e5a0ee25ed4_refractor_alerting.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.2e5a0ee25ed4_refractor_alerting.downgrade": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.drop_index",
    "alembic.op.drop_table",
    "alembic.op.f",
    "sqlalchemy.Column",
    "sqlalchemy.dialects.mysql.INTEGER",
    "sqlalchemy.dialects.mysql.TEXT",
    "sqlalchemy.dialects.mysql.VARCHAR"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.2e5a0ee25ed4_refractor_alerting.mysql": {
  "data": {
   "shadows": "sqlalchemy.dialects.mysql"
  },
  "type": "import"
 },
 "superset.migrations.versions.2e5a0ee25ed4_refractor_alerting.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.2e5a0ee25ed4_refractor_alerting.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.2e5a0ee25ed4_refractor_alerting.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.2e5a0ee25ed4_refractor_alerting.upgrade": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.create_index",
    "alembic.op.create_table",
    "alembic.op.f",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Float",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.dialects.mysql.VARCHAR"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.2f1d15e8a6af_add_alerts": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.2f1d15e8a6af_add_alerts.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.2f1d15e8a6af_add_alerts.downgrade": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "alembic.op.drop_index",
    "alembic.op.drop_table",
    "alembic.op.f"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.2f1d15e8a6af_add_alerts.mysql": {
  "data": {
   "shadows": "sqlalchemy.dialects.mysql"
  },
  "type": "import"
 },
 "superset.migrations.versions.2f1d15e8a6af_add_alerts.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.2f1d15e8a6af_add_alerts.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.2f1d15e8a6af_add_alerts.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.2f1d15e8a6af_add_alerts.upgrade": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "alembic.op.create_index",
    "alembic.op.create_table",
    "alembic.op.f",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.2fcdcb35e487_saved_queries": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.2fcdcb35e487_saved_queries.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.2fcdcb35e487_saved_queries.downgrade": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.2fcdcb35e487_saved_queries.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.2fcdcb35e487_saved_queries.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.2fcdcb35e487_saved_queries.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.2fcdcb35e487_saved_queries.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.30bb17c0dc76_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.30bb17c0dc76_.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "superset.migrations.versions.30bb17c0dc76_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.30bb17c0dc76_.downgrade": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "datetime.date.today",
    "sqlalchemy.Column",
    "sqlalchemy.Date"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.30bb17c0dc76_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.30bb17c0dc76_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.30bb17c0dc76_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.30bb17c0dc76_.upgrade": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.315b3f4da9b0_adding_log_model": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.315b3f4da9b0_adding_log_model.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.315b3f4da9b0_adding_log_model.downgrade": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.315b3f4da9b0_adding_log_model.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.315b3f4da9b0_adding_log_model.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.315b3f4da9b0_adding_log_model.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.315b3f4da9b0_adding_log_model.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Table",
    "sqlalchemy.ext.declarative.declarative_base",
    "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.Base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.Base": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.Dashboard": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "sqlalchemy.orm.relationship",
    "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.Base",
    "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.dashboard_slices"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.Slice": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.convert_filter_scopes": {
  "data": {
   "shadows": "superset.utils.dashboard_filter_scopes_converter.convert_filter_scopes"
  },
  "type": "import"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.dashboard_slices": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.down_revision": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.downgrade": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.revision": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.upgrade": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "enumerate",
    "len",
    "print",
    "slice",
    "slice.viz_type",
    "superset.db.Session",
    "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.Dashboard",
    "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.json",
    "superset.migrations.versions.3325d4caccc8_dashboard_scoped_filters.logging",
    "superset.utils.dashboard_filter_scopes_converter.convert_filter_scopes"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.33d996bcc382_update_slice_model": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.33d996bcc382_update_slice_model.Base": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.migrations.versions.33d996bcc382_update_slice_model.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.33d996bcc382_update_slice_model.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.33d996bcc382_update_slice_model.Slice": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "superset.migrations.versions.33d996bcc382_update_slice_model.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.33d996bcc382_update_slice_model.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.33d996bcc382_update_slice_model.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.33d996bcc382_update_slice_model.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.33d996bcc382_update_slice_model.down_revision": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.migrations.versions.33d996bcc382_update_slice_model.downgrade": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "alembic.op.drop_column",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.33d996bcc382_update_slice_model.Slice"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.33d996bcc382_update_slice_model.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.33d996bcc382_update_slice_model.revision": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.migrations.versions.33d996bcc382_update_slice_model.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.33d996bcc382_update_slice_model.upgrade": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "alembic.op.get_bind",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "superset.db.Session",
    "superset.migrations.versions.33d996bcc382_update_slice_model.Slice"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3b626e2a6783_sync_db_with_models": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.3b626e2a6783_sync_db_with_models.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.3b626e2a6783_sync_db_with_models.down_revision": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.3b626e2a6783_sync_db_with_models.downgrade": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.add_column",
    "alembic.op.batch_alter_table",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.dialects.mysql.INTEGER",
    "str",
    "superset.db",
    "superset.migrations.versions.3b626e2a6783_sync_db_with_models.logging",
    "superset.utils.core.generic_find_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3b626e2a6783_sync_db_with_models.generic_find_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.3b626e2a6783_sync_db_with_models.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.versions.3b626e2a6783_sync_db_with_models.mysql": {
  "data": {
   "shadows": "sqlalchemy.dialects.mysql"
  },
  "type": "import"
 },
 "superset.migrations.versions.3b626e2a6783_sync_db_with_models.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.3b626e2a6783_sync_db_with_models.revision": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.migrations.versions.3b626e2a6783_sync_db_with_models.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.3b626e2a6783_sync_db_with_models.upgrade": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.batch_alter_table",
    "str",
    "superset.db",
    "superset.migrations.versions.3b626e2a6783_sync_db_with_models.logging",
    "superset.utils.core.generic_find_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3c3ffe173e4f_add_sql_string_to_table": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.3c3ffe173e4f_add_sql_string_to_table.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.3c3ffe173e4f_add_sql_string_to_table.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3c3ffe173e4f_add_sql_string_to_table.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.3c3ffe173e4f_add_sql_string_to_table.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.3c3ffe173e4f_add_sql_string_to_table.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.3c3ffe173e4f_add_sql_string_to_table.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.Base": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.Slice": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.comparison_type_map": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.compute_time_compare": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.datetime",
    "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.db_engine_specs_map",
    "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.isodate",
    "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.isodate_duration_to_string",
    "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.timedelta_to_string",
    "superset.utils.date_parser.parse_human_timedelta"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.db_engine_specs_map": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.down_revision": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.downgrade": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.Slice",
    "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.format_seconds": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.isodate": {
  "data": {
   "shadows": "isodate"
  },
  "type": "import"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.isodate_duration_to_string": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Exception",
    "format_seconds"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.parse_human_timedelta": {
  "data": {
   "shadows": "superset.utils.date_parser.parse_human_timedelta"
  },
  "type": "import"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.revision": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.timedelta_to_string": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "Exception",
    "format_seconds"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.upgrade": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "int",
    "superset.db.Session",
    "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.Slice",
    "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.comparison_type_map",
    "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.compute_time_compare",
    "superset.migrations.versions.3dda56f1c4c6_migrate_num_period_compare_and_period_.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.MetaData",
    "sqlalchemy.Table"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.DruidDatasource": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.SqlaTable": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.down_revision": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.downgrade": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.drop_table",
    "sqlalchemy.Column",
    "sqlalchemy.INTEGER"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.druiddatasource_user": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.generic_find_fk_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_fk_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.revision": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.sqlatable_user": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.upgrade": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.create_table",
    "alembic.op.get_bind",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "superset.db.Session",
    "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.DruidDatasource",
    "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.SqlaTable",
    "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.druiddatasource_user",
    "superset.migrations.versions.3e1b21cd94a4_change_owner_to_m2m_relation_on_.sqlatable_user",
    "superset.utils.core.generic_find_fk_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Sequence",
    "sqlalchemy.Table",
    "sqlalchemy.UniqueConstraint",
    "sqlalchemy.ext.declarative.declarative_base",
    "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Base": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Database": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.UniqueConstraint",
    "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Database.__repr__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Database.name": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Permission": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Sequence",
    "sqlalchemy.String",
    "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.PermissionView": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Sequence",
    "sqlalchemy.UniqueConstraint",
    "sqlalchemy.orm.relationship",
    "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Role": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Sequence",
    "sqlalchemy.String",
    "sqlalchemy.orm.relationship",
    "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Base",
    "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.assoc_permissionview_role"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Sequence": {
  "data": {
   "shadows": "sqlalchemy.Sequence"
  },
  "type": "import"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.SqlaTable": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.UniqueConstraint",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship",
    "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.SqlaTable.get_perm": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.UniqueConstraint": {
  "data": {
   "shadows": "sqlalchemy.UniqueConstraint"
  },
  "type": "import"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.ViewMenu": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Sequence",
    "sqlalchemy.String",
    "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.ViewMenu.__eq__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.ViewMenu.__neq__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.assoc_permissionview_role": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.downgrade": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.orm": {
  "data": {
   "shadows": "sqlalchemy.orm"
  },
  "type": "import"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.sqlatable_user": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.upgrade": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "int",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Permission",
    "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.PermissionView",
    "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.Role",
    "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.SqlaTable",
    "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.ViewMenu",
    "superset.migrations.versions.3fbbc6e8d654_fix_data_access_permissions_for_virtual_.re"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports": {
  "data": {
   "symbols_in_volume": [
    "superset.migrations.shared.security_converge.Pvm"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports.NEW_PVMS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports.PVM_MAP": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports.Pvm": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.Pvm"
  },
  "type": "import"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports.add_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.add_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports.downgrade": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.get_reversed_new_pvms",
    "superset.migrations.shared.security_converge.get_reversed_pvm_map",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.40f16acf1ba7_security_converge_reports.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports.get_reversed_new_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_new_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports.get_reversed_pvm_map": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_pvm_map"
  },
  "type": "import"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports.migrate_roles": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.migrate_roles"
  },
  "type": "import"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.40f16acf1ba7_security_converge_reports.upgrade": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.40f16acf1ba7_security_converge_reports.NEW_PVMS",
    "superset.migrations.versions.40f16acf1ba7_security_converge_reports.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.41f6a59a61f2_database_options_for_sql_lab": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.41f6a59a61f2_database_options_for_sql_lab.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.41f6a59a61f2_database_options_for_sql_lab.downgrade": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.41f6a59a61f2_database_options_for_sql_lab.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.41f6a59a61f2_database_options_for_sql_lab.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.41f6a59a61f2_database_options_for_sql_lab.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.41f6a59a61f2_database_options_for_sql_lab.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases": {
  "data": {
   "symbols_in_volume": [
    "superset.migrations.shared.security_converge.Pvm"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.NEW_PVMS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.PVM_MAP": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.Pvm": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.Pvm"
  },
  "type": "import"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.add_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.add_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.downgrade": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.get_reversed_new_pvms",
    "superset.migrations.shared.security_converge.get_reversed_pvm_map",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.42b4c9e01447_security_converge_databases.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.get_reversed_new_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_new_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.get_reversed_pvm_map": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_pvm_map"
  },
  "type": "import"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.migrate_roles": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.migrate_roles"
  },
  "type": "import"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.42b4c9e01447_security_converge_databases.upgrade": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.42b4c9e01447_security_converge_databases.NEW_PVMS",
    "superset.migrations.versions.42b4c9e01447_security_converge_databases.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.430039611635_log_more": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.430039611635_log_more.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.430039611635_log_more.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.430039611635_log_more.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.430039611635_log_more.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.430039611635_log_more.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.430039611635_log_more.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.43df8de3a5f4_dash_json": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.43df8de3a5f4_dash_json.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.43df8de3a5f4_dash_json.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.43df8de3a5f4_dash_json.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.43df8de3a5f4_dash_json.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.43df8de3a5f4_dash_json.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.43df8de3a5f4_dash_json.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.Base": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.Database": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "superset.migrations.versions.4451805bbaa1_remove_double_percents.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.Slice": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.4451805bbaa1_remove_double_percents.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.Table": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "superset.migrations.versions.4451805bbaa1_remove_double_percents.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.create_engine": {
  "data": {
   "shadows": "sqlalchemy.create_engine"
  },
  "type": "import"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.downgrade": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "superset.migrations.versions.4451805bbaa1_remove_double_percents.replace"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.replace": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "sqlalchemy.create_engine",
    "superset.db.Session",
    "superset.migrations.versions.4451805bbaa1_remove_double_percents.Database",
    "superset.migrations.versions.4451805bbaa1_remove_double_percents.Slice",
    "superset.migrations.versions.4451805bbaa1_remove_double_percents.Table",
    "superset.migrations.versions.4451805bbaa1_remove_double_percents.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.4451805bbaa1_remove_double_percents.upgrade": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "superset.migrations.versions.4451805bbaa1_remove_double_percents.replace"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.4500485bde7d_allow_run_sync_async": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.4500485bde7d_allow_run_sync_async.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.4500485bde7d_allow_run_sync_async.downgrade": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.4500485bde7d_allow_run_sync_async.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.4500485bde7d_allow_run_sync_async.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.4500485bde7d_allow_run_sync_async.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.4500485bde7d_allow_run_sync_async.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets": {
  "data": {
   "symbols_in_volume": [
    "superset.migrations.shared.security_converge.Pvm"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets.NEW_PVMS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets.PVM_MAP": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets.Pvm": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.Pvm"
  },
  "type": "import"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets.add_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.add_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets.downgrade": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.get_reversed_new_pvms",
    "superset.migrations.shared.security_converge.get_reversed_pvm_map",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.45731db65d9c_security_converge_datasets.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets.get_reversed_new_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_new_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets.get_reversed_pvm_map": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_pvm_map"
  },
  "type": "import"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets.migrate_roles": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.migrate_roles"
  },
  "type": "import"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.45731db65d9c_security_converge_datasets.upgrade": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.45731db65d9c_security_converge_datasets.NEW_PVMS",
    "superset.migrations.versions.45731db65d9c_security_converge_datasets.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.45e7da7cfeba_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.45e7da7cfeba_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.45e7da7cfeba_.downgrade": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.migrations.versions.45e7da7cfeba_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.45e7da7cfeba_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.45e7da7cfeba_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.45e7da7cfeba_.upgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.46ba6aaaac97_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.46ba6aaaac97_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.46ba6aaaac97_.downgrade": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.migrations.versions.46ba6aaaac97_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.46ba6aaaac97_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.46ba6aaaac97_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.46ba6aaaac97_.upgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.46f444d8b9b7_remove_coordinator_from_druid_cluster_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.46f444d8b9b7_remove_coordinator_from_druid_cluster_.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.46f444d8b9b7_remove_coordinator_from_druid_cluster_.downgrade": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.46f444d8b9b7_remove_coordinator_from_druid_cluster_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.46f444d8b9b7_remove_coordinator_from_druid_cluster_.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.46f444d8b9b7_remove_coordinator_from_druid_cluster_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.46f444d8b9b7_remove_coordinator_from_druid_cluster_.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.472d2f73dfd4_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.472d2f73dfd4_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.472d2f73dfd4_.downgrade": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.migrations.versions.472d2f73dfd4_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.472d2f73dfd4_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.472d2f73dfd4_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.472d2f73dfd4_.upgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.4736ec66ce19_": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.MetaData",
    "sqlalchemy.String",
    "sqlalchemy.Table"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.4736ec66ce19_.conv": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "superset.migrations.versions.4736ec66ce19_.datasources": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "superset.migrations.versions.4736ec66ce19_.down_revision": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.4736ec66ce19_.downgrade": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.MetaData",
    "sqlalchemy.String",
    "sqlalchemy.Table",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "superset.migrations.versions.4736ec66ce19_.conv",
    "superset.migrations.versions.4736ec66ce19_.datasources",
    "superset.utils.core.generic_find_fk_constraint_name",
    "superset.utils.core.generic_find_uq_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.4736ec66ce19_.generic_find_fk_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_fk_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.4736ec66ce19_.generic_find_fk_constraint_names": {
  "data": {
   "shadows": "superset.utils.core.generic_find_fk_constraint_names"
  },
  "type": "import"
 },
 "superset.migrations.versions.4736ec66ce19_.generic_find_uq_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_uq_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.4736ec66ce19_.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.versions.4736ec66ce19_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.4736ec66ce19_.revision": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.migrations.versions.4736ec66ce19_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.4736ec66ce19_.upgrade": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.MetaData",
    "sqlalchemy.String",
    "sqlalchemy.Table",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "superset.migrations.versions.4736ec66ce19_.conv",
    "superset.migrations.versions.4736ec66ce19_.datasources",
    "superset.migrations.versions.4736ec66ce19_.logging",
    "superset.utils.core.generic_find_fk_constraint_names",
    "superset.utils.core.generic_find_uq_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.49b5a32daba5_add_report_schedules": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.49b5a32daba5_add_report_schedules.OperationalError": {
  "data": {
   "shadows": "sqlalchemy.exc.OperationalError"
  },
  "type": "import"
 },
 "superset.migrations.versions.49b5a32daba5_add_report_schedules.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.49b5a32daba5_add_report_schedules.downgrade": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.drop_constraint",
    "alembic.op.drop_index",
    "alembic.op.drop_table",
    "alembic.op.f"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.49b5a32daba5_add_report_schedules.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.49b5a32daba5_add_report_schedules.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.49b5a32daba5_add_report_schedules.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.49b5a32daba5_add_report_schedules.upgrade": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.create_index",
    "alembic.op.create_table",
    "alembic.op.create_unique_constraint",
    "alembic.op.f",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Float",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs": {
  "data": {
   "symbols_in_volume": [
    "superset.migrations.shared.security_converge.Pvm"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs.NEW_PVMS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs.PVM_MAP": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs.Pvm": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.Pvm"
  },
  "type": "import"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs.add_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.add_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs.down_revision": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs.downgrade": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.get_reversed_new_pvms",
    "superset.migrations.shared.security_converge.get_reversed_pvm_map",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.4b84f97828aa_security_converge_logs.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs.get_reversed_new_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_new_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs.get_reversed_pvm_map": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_pvm_map"
  },
  "type": "import"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs.migrate_roles": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.migrate_roles"
  },
  "type": "import"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs.revision": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.migrations.versions.4b84f97828aa_security_converge_logs.upgrade": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.4b84f97828aa_security_converge_logs.NEW_PVMS",
    "superset.migrations.versions.4b84f97828aa_security_converge_logs.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.Base": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.Dashboard": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.down_revision": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.downgrade": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.revision": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.upgrade": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "enumerate",
    "len",
    "print",
    "superset.db.Session",
    "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.Dashboard",
    "superset.migrations.versions.4ce8df208545_migrate_time_range_for_default_filters.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.4e6a06bad7a8_init": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.4e6a06bad7a8_init.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.4e6a06bad7a8_init.downgrade": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.4e6a06bad7a8_init.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.4e6a06bad7a8_init.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.4e6a06bad7a8_init.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.4e6a06bad7a8_init.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.UniqueConstraint"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.4fa88fe24e94_owners_many_to_many": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.4fa88fe24e94_owners_many_to_many.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.4fa88fe24e94_owners_many_to_many.downgrade": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.4fa88fe24e94_owners_many_to_many.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.4fa88fe24e94_owners_many_to_many.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.4fa88fe24e94_owners_many_to_many.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.4fa88fe24e94_owners_many_to_many.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.525c854f0005_log_this_plus": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.525c854f0005_log_this_plus.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.525c854f0005_log_this_plus.downgrade": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.525c854f0005_log_this_plus.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.525c854f0005_log_this_plus.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.525c854f0005_log_this_plus.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.525c854f0005_log_this_plus.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.55179c7f25c7_sqla_descr": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.55179c7f25c7_sqla_descr.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.55179c7f25c7_sqla_descr.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.55179c7f25c7_sqla_descr.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.55179c7f25c7_sqla_descr.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.55179c7f25c7_sqla_descr.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.55179c7f25c7_sqla_descr.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.55e910a74826_add_metadata_column_to_annotation_model_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.55e910a74826_add_metadata_column_to_annotation_model_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.55e910a74826_add_metadata_column_to_annotation_model_.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.55e910a74826_add_metadata_column_to_annotation_model_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.55e910a74826_add_metadata_column_to_annotation_model_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.55e910a74826_add_metadata_column_to_annotation_model_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.55e910a74826_add_metadata_column_to_annotation_model_.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.585b0b1a7b18_add_exec_info_to_saved_queries": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.585b0b1a7b18_add_exec_info_to_saved_queries.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.585b0b1a7b18_add_exec_info_to_saved_queries.downgrade": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.585b0b1a7b18_add_exec_info_to_saved_queries.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.585b0b1a7b18_add_exec_info_to_saved_queries.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.585b0b1a7b18_add_exec_info_to_saved_queries.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.585b0b1a7b18_add_exec_info_to_saved_queries.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Integer"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.5a7bad26f2a7_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.5a7bad26f2a7_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.5a7bad26f2a7_.downgrade": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.5a7bad26f2a7_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.5a7bad26f2a7_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.5a7bad26f2a7_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.5a7bad26f2a7_.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.Base": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.Database": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.Slice": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.Sqlatable": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.orm.relationship",
    "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.down_revision": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.downgrade": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.revision": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.upgrade": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "alembic.op.get_bind",
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "superset.db.Session",
    "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.Slice",
    "superset.migrations.versions.5afa9079866a_serialize_schema_permissions_py.Sqlatable"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.5ccf602336a0_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.5ccf602336a0_.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.5ccf602336a0_.downgrade": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "superset.migrations.versions.5ccf602336a0_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.5ccf602336a0_.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.5ccf602336a0_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.5ccf602336a0_.upgrade": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "superset.migrations.versions.5daced1f0e76_reports_add_working_timeout_column": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.5daced1f0e76_reports_add_working_timeout_column.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.5daced1f0e76_reports_add_working_timeout_column.downgrade": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.5daced1f0e76_reports_add_working_timeout_column.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.5daced1f0e76_reports_add_working_timeout_column.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.5daced1f0e76_reports_add_working_timeout_column.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.5daced1f0e76_reports_add_working_timeout_column.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.5e4a03ef0bf0_add_request_access_model": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.5e4a03ef0bf0_add_request_access_model.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.5e4a03ef0bf0_add_request_access_model.downgrade": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.5e4a03ef0bf0_add_request_access_model.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.5e4a03ef0bf0_add_request_access_model.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.5e4a03ef0bf0_add_request_access_model.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.5e4a03ef0bf0_add_request_access_model.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Base": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Database": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Database.grains": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sqlalchemy.engine.url.make_url",
    "superset.db_engine_specs.BaseEngineSpec",
    "superset.db_engine_specs.engines.get"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Slice": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Table": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.db_engine_specs": {
  "data": {
   "shadows": "superset.db_engine_specs"
  },
  "type": "import"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.downgrade": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.duration_by_name": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Database",
    "superset.utils.core.memoized"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.make_url": {
  "data": {
   "shadows": "sqlalchemy.engine.url.make_url"
  },
  "type": "import"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.upgrade": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Database",
    "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Slice",
    "superset.migrations.versions.620241d1153f_update_time_grain_sqla.Table",
    "superset.migrations.versions.620241d1153f_update_time_grain_sqla.duration_by_name",
    "superset.migrations.versions.620241d1153f_update_time_grain_sqla.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.620241d1153f_update_time_grain_sqla.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.migrations.versions.6414e83d82b7_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.6414e83d82b7_.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.6414e83d82b7_.downgrade": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "superset.migrations.versions.6414e83d82b7_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.6414e83d82b7_.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.6414e83d82b7_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.6414e83d82b7_.upgrade": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "superset.migrations.versions.65903709c321_allow_dml": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.65903709c321_allow_dml.down_revision": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.migrations.versions.65903709c321_allow_dml.downgrade": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.drop_column",
    "superset.migrations.versions.65903709c321_allow_dml.logging"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.65903709c321_allow_dml.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.versions.65903709c321_allow_dml.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.65903709c321_allow_dml.revision": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.migrations.versions.65903709c321_allow_dml.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.65903709c321_allow_dml.upgrade": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params.Base": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params.Slice": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.67a6ac9b727b_update_spatial_params.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params.down_revision": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params.downgrade": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params.revision": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.migrations.versions.67a6ac9b727b_update_spatial_params.upgrade": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.67a6ac9b727b_update_spatial_params.Slice",
    "superset.migrations.versions.67a6ac9b727b_update_spatial_params.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.6c7537a6004a_models_for_email_reports": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.6c7537a6004a_models_for_email_reports.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.6c7537a6004a_models_for_email_reports.downgrade": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "alembic.op.drop_index",
    "alembic.op.drop_table",
    "alembic.op.f"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.6c7537a6004a_models_for_email_reports.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.6c7537a6004a_models_for_email_reports.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.6c7537a6004a_models_for_email_reports.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.6c7537a6004a_models_for_email_reports.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.create_index",
    "alembic.op.create_table",
    "alembic.op.f",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Enum",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.705732c70154_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.705732c70154_.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.705732c70154_.downgrade": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "superset.migrations.versions.705732c70154_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.705732c70154_.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.705732c70154_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.705732c70154_.upgrade": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "superset.migrations.versions.72428d1ea401_add_tmp_schema_name_to_the_query_object": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.72428d1ea401_add_tmp_schema_name_to_the_query_object.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.72428d1ea401_add_tmp_schema_name_to_the_query_object.downgrade": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.72428d1ea401_add_tmp_schema_name_to_the_query_object.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.72428d1ea401_add_tmp_schema_name_to_the_query_object.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.72428d1ea401_add_tmp_schema_name_to_the_query_object.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.72428d1ea401_add_tmp_schema_name_to_the_query_object.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.732f1c06bcbf_add_fetch_values_predicate": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.732f1c06bcbf_add_fetch_values_predicate.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.732f1c06bcbf_add_fetch_values_predicate.downgrade": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.732f1c06bcbf_add_fetch_values_predicate.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.732f1c06bcbf_add_fetch_values_predicate.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.732f1c06bcbf_add_fetch_values_predicate.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.732f1c06bcbf_add_fetch_values_predicate.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.73fd22e742ab_add_dynamic_plugins_py": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.73fd22e742ab_add_dynamic_plugins_py.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.73fd22e742ab_add_dynamic_plugins_py.downgrade": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.73fd22e742ab_add_dynamic_plugins_py.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.73fd22e742ab_add_dynamic_plugins_py.postgresql": {
  "data": {
   "shadows": "sqlalchemy.dialects.postgresql"
  },
  "type": "import"
 },
 "superset.migrations.versions.73fd22e742ab_add_dynamic_plugins_py.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.73fd22e742ab_add_dynamic_plugins_py.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.73fd22e742ab_add_dynamic_plugins_py.upgrade": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.UniqueConstraint"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.743a117f0d98_add_slack_to_the_schedule": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.743a117f0d98_add_slack_to_the_schedule.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.743a117f0d98_add_slack_to_the_schedule.downgrade": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.743a117f0d98_add_slack_to_the_schedule.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.743a117f0d98_add_slack_to_the_schedule.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.743a117f0d98_add_slack_to_the_schedule.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.743a117f0d98_add_slack_to_the_schedule.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.7467e77870e4_remove_aggs": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.7467e77870e4_remove_aggs.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.7467e77870e4_remove_aggs.downgrade": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.7467e77870e4_remove_aggs.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.7467e77870e4_remove_aggs.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.7467e77870e4_remove_aggs.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.7467e77870e4_remove_aggs.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.763d4b211ec9_fixing_audit_fk": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.763d4b211ec9_fixing_audit_fk.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.763d4b211ec9_fixing_audit_fk.downgrade": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "alembic.op.alter_column",
    "alembic.op.drop_column",
    "alembic.op.drop_constraint",
    "sqlalchemy.DATETIME",
    "sqlalchemy.INTEGER"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.763d4b211ec9_fixing_audit_fk.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.763d4b211ec9_fixing_audit_fk.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.763d4b211ec9_fixing_audit_fk.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.763d4b211ec9_fixing_audit_fk.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "alembic.op.alter_column",
    "alembic.op.create_foreign_key",
    "sqlalchemy.Column",
    "sqlalchemy.DATETIME",
    "sqlalchemy.DateTime",
    "sqlalchemy.INTEGER",
    "sqlalchemy.Integer"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.Base": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.Slice": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.convert_legacy_filters_into_adhoc": {
  "data": {
   "shadows": "superset.utils.core.convert_legacy_filters_into_adhoc"
  },
  "type": "import"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.downgrade": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.split_adhoc_filters_into_base_filters": {
  "data": {
   "shadows": "superset.utils.core.split_adhoc_filters_into_base_filters"
  },
  "type": "import"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.upgrade": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.Slice",
    "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.copy",
    "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.json",
    "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.logging",
    "superset.utils.core.convert_legacy_filters_into_adhoc"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.78ee127d0d1d_reconvert_legacy_filters_into_adhoc.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "superset.migrations.versions.7dbf98566af7_slice_description": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.7dbf98566af7_slice_description.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.7dbf98566af7_slice_description.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.7dbf98566af7_slice_description.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.7dbf98566af7_slice_description.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.7dbf98566af7_slice_description.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.7dbf98566af7_slice_description.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.7e3ddad2a00b_results_key_to_query": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.7e3ddad2a00b_results_key_to_query.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.7e3ddad2a00b_results_key_to_query.downgrade": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.7e3ddad2a00b_results_key_to_query.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.7e3ddad2a00b_results_key_to_query.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.7e3ddad2a00b_results_key_to_query.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.7e3ddad2a00b_results_key_to_query.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.Base": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.BaseColumnMixin": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.DruidColumn": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "superset.migrations.versions.7f2635b51f5d_update_base_columns.Base",
    "superset.migrations.versions.7f2635b51f5d_update_base_columns.BaseColumnMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.TableColumn": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "superset.migrations.versions.7f2635b51f5d_update_base_columns.Base",
    "superset.migrations.versions.7f2635b51f5d_update_base_columns.BaseColumnMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.conv": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.down_revision": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.downgrade": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "sqlalchemy.String",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "superset.migrations.versions.7f2635b51f5d_update_base_columns.conv",
    "superset.utils.core.generic_find_uq_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.engine": {
  "data": {
   "shadows": "sqlalchemy.engine"
  },
  "type": "import"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.generic_find_uq_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_uq_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.7f2635b51f5d_update_base_columns.upgrade": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "sqlalchemy.String",
    "superset.db.Session",
    "superset.migrations.versions.7f2635b51f5d_update_base_columns.DruidColumn",
    "superset.migrations.versions.7f2635b51f5d_update_base_columns.TableColumn",
    "superset.migrations.versions.7f2635b51f5d_update_base_columns.conv"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.7fcdcde0761c_": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.7fcdcde0761c_.Base": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.7fcdcde0761c_.Dashboard": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.7fcdcde0761c_.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.7fcdcde0761c_.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.7fcdcde0761c_.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.7fcdcde0761c_.down_revision": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.migrations.versions.7fcdcde0761c_.downgrade": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "superset.migrations.versions.7fcdcde0761c_.is_v2_dash": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.7fcdcde0761c_.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.7fcdcde0761c_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.7fcdcde0761c_.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.migrations.versions.7fcdcde0761c_.revision": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.migrations.versions.7fcdcde0761c_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.7fcdcde0761c_.upgrade": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "enumerate",
    "len",
    "print",
    "superset.db.Session",
    "superset.migrations.versions.7fcdcde0761c_.Dashboard",
    "superset.migrations.versions.7fcdcde0761c_.is_v2_dash",
    "superset.migrations.versions.7fcdcde0761c_.json",
    "superset.migrations.versions.7fcdcde0761c_.re"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.Base": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.Slice": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.downgrade": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.Slice",
    "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.upgrade": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.Slice",
    "superset.migrations.versions.80a67c5192fa_single_pie_chart_metric.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.Base": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.Dashboard": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.add_parent_ids": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.down_revision": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.downgrade": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "print",
    "superset.db.Session",
    "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.Dashboard",
    "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.json",
    "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.logging"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.revision": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.upgrade": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "enumerate",
    "len",
    "print",
    "superset.db.Session",
    "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.Dashboard",
    "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.add_parent_ids",
    "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.json",
    "superset.migrations.versions.80aa3f04bc82_add_parent_ids_in_dashboard_layout.logging"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.811494c0cc23_remove_path_from_logs": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.811494c0cc23_remove_path_from_logs.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.811494c0cc23_remove_path_from_logs.downgrade": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "superset.migrations.versions.811494c0cc23_remove_path_from_logs.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.811494c0cc23_remove_path_from_logs.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.811494c0cc23_remove_path_from_logs.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.811494c0cc23_remove_path_from_logs.upgrade": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "superset.migrations.shared.utils.table_has_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.811494c0cc23_remove_path_from_logs.utils": {
  "data": {
   "shadows": "superset.migrations.shared.utils"
  },
  "type": "import"
 },
 "superset.migrations.versions.817e1c9b09d0_add_not_null_to_dbs_sqlalchemy_url": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.817e1c9b09d0_add_not_null_to_dbs_sqlalchemy_url.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.817e1c9b09d0_add_not_null_to_dbs_sqlalchemy_url.downgrade": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.VARCHAR"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.817e1c9b09d0_add_not_null_to_dbs_sqlalchemy_url.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.817e1c9b09d0_add_not_null_to_dbs_sqlalchemy_url.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.817e1c9b09d0_add_not_null_to_dbs_sqlalchemy_url.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.817e1c9b09d0_add_not_null_to_dbs_sqlalchemy_url.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.VARCHAR"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.836c0bf75904_cache_timeouts": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.836c0bf75904_cache_timeouts.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.836c0bf75904_cache_timeouts.downgrade": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.836c0bf75904_cache_timeouts.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.836c0bf75904_cache_timeouts.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.836c0bf75904_cache_timeouts.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.836c0bf75904_cache_timeouts.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.867bf4f117f9_adding_extra_field_to_database_model": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.867bf4f117f9_adding_extra_field_to_database_model.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.867bf4f117f9_adding_extra_field_to_database_model.downgrade": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.867bf4f117f9_adding_extra_field_to_database_model.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.867bf4f117f9_adding_extra_field_to_database_model.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.867bf4f117f9_adding_extra_field_to_database_model.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.867bf4f117f9_adding_extra_field_to_database_model.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.89115a40e8ea_change_table_schema_description_to_long_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.89115a40e8ea_change_table_schema_description_to_long_.MySQLDialect": {
  "data": {
   "shadows": "sqlalchemy.dialects.mysql.base.MySQLDialect"
  },
  "type": "import"
 },
 "superset.migrations.versions.89115a40e8ea_change_table_schema_description_to_long_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.89115a40e8ea_change_table_schema_description_to_long_.downgrade": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "isinstance",
    "sqlalchemy.Text",
    "sqlalchemy.databases.mysql.LONGTEXT",
    "sqlalchemy.dialects.mysql.base.MySQLDialect"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.89115a40e8ea_change_table_schema_description_to_long_.mysql": {
  "data": {
   "shadows": "sqlalchemy.databases.mysql"
  },
  "type": "import"
 },
 "superset.migrations.versions.89115a40e8ea_change_table_schema_description_to_long_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.89115a40e8ea_change_table_schema_description_to_long_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.89115a40e8ea_change_table_schema_description_to_long_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.89115a40e8ea_change_table_schema_description_to_long_.upgrade": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "isinstance",
    "sqlalchemy.Text",
    "sqlalchemy.databases.mysql.LONGTEXT",
    "sqlalchemy.dialects.mysql.base.MySQLDialect"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.8b70aa3d0f87_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.8b70aa3d0f87_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.8b70aa3d0f87_.downgrade": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.migrations.versions.8b70aa3d0f87_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.8b70aa3d0f87_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.8b70aa3d0f87_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.8b70aa3d0f87_.upgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.8e80a26a31db_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.8e80a26a31db_.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.8e80a26a31db_.downgrade": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.8e80a26a31db_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.8e80a26a31db_.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.8e80a26a31db_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.8e80a26a31db_.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates": {
  "data": {
   "symbols_in_volume": [
    "superset.migrations.shared.security_converge.Pvm"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.NEW_PVMS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.PVM_MAP": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.Pvm": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.Pvm"
  },
  "type": "import"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.add_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.add_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.downgrade": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.get_reversed_new_pvms",
    "superset.migrations.shared.security_converge.get_reversed_pvm_map",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.get_reversed_new_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_new_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.get_reversed_pvm_map": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_pvm_map"
  },
  "type": "import"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.migrate_roles": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.migrate_roles"
  },
  "type": "import"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.upgrade": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.NEW_PVMS",
    "superset.migrations.versions.8ee129739cf9_security_converge_css_templates.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.937d04c16b64_update_datasources": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.937d04c16b64_update_datasources.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.937d04c16b64_update_datasources.downgrade": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.937d04c16b64_update_datasources.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.937d04c16b64_update_datasources.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.937d04c16b64_update_datasources.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.937d04c16b64_update_datasources.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.956a063c52b3_adjusting_key_length": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.956a063c52b3_adjusting_key_length.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.956a063c52b3_adjusting_key_length.downgrade": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.String",
    "sqlalchemy.VARCHAR"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.956a063c52b3_adjusting_key_length.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.956a063c52b3_adjusting_key_length.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.956a063c52b3_adjusting_key_length.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.956a063c52b3_adjusting_key_length.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.String",
    "sqlalchemy.VARCHAR"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.960c69cb1f5b_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.960c69cb1f5b_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.960c69cb1f5b_.downgrade": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.960c69cb1f5b_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.960c69cb1f5b_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.960c69cb1f5b_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.960c69cb1f5b_.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query": {
  "data": {
   "symbols_in_volume": [
    "int",
    "sqlalchemy.ext.declarative.declarative_base",
    "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.os"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.Base": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.ImportMixin": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy_utils.UUIDType",
    "uuid.uuid4"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.OperationalError": {
  "data": {
   "shadows": "sqlalchemy.exc.OperationalError"
  },
  "type": "import"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.SavedQuery": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.Base",
    "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.ImportMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.UUIDType": {
  "data": {
   "shadows": "sqlalchemy_utils.UUIDType"
  },
  "type": "import"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.add_uuids": {
  "data": {
   "shadows": "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.add_uuids"
  },
  "type": "import"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.default_batch_size": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.down_revision": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.downgrade": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "superset.db.Session"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.revision": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.upgrade": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "sqlalchemy.Column",
    "sqlalchemy.exc.OperationalError",
    "sqlalchemy_utils.UUIDType",
    "superset.db.Session",
    "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.SavedQuery",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.add_uuids",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.96e99fb176a0_add_import_mixing_to_saved_query.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Table",
    "sqlalchemy.ext.declarative.declarative_base",
    "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.Base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.Base": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.Dashboard": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "sqlalchemy.orm.relationship",
    "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.Base",
    "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.dashboard_slices"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.Slice": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.create_new_markdown_component": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.uuid"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.dashboard_slices": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.down_revision": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.downgrade": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.revision": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.slice_user": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.upgrade": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "collections.defaultdict",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "print",
    "superset.db.Session",
    "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.Dashboard",
    "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.Slice",
    "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.create_new_markdown_component",
    "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.dashboard_slices",
    "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.json",
    "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.logging",
    "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.slice_user"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.978245563a02_migrate_iframe_to_dash_markdown.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "superset.migrations.versions.979c03af3341_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.979c03af3341_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.979c03af3341_.downgrade": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.migrations.versions.979c03af3341_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.979c03af3341_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.979c03af3341_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.979c03af3341_.upgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.a2d606a761d9_adding_favstar_model": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.a2d606a761d9_adding_favstar_model.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.a2d606a761d9_adding_favstar_model.downgrade": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a2d606a761d9_adding_favstar_model.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.a2d606a761d9_adding_favstar_model.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.a2d606a761d9_adding_favstar_model.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.a2d606a761d9_adding_favstar_model.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a33a03f16c4a_add_extra_column_to_savedquery": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.a33a03f16c4a_add_extra_column_to_savedquery.down_revision": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.migrations.versions.a33a03f16c4a_add_extra_column_to_savedquery.downgrade": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a33a03f16c4a_add_extra_column_to_savedquery.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.a33a03f16c4a_add_extra_column_to_savedquery.revision": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.migrations.versions.a33a03f16c4a_add_extra_column_to_savedquery.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.a33a03f16c4a_add_extra_column_to_savedquery.upgrade": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a61b40f9f57f_remove_allow_run_sync": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.a61b40f9f57f_remove_allow_run_sync.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.a61b40f9f57f_remove_allow_run_sync.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a61b40f9f57f_remove_allow_run_sync.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.a61b40f9f57f_remove_allow_run_sync.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.a61b40f9f57f_remove_allow_run_sync.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.a61b40f9f57f_remove_allow_run_sync.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a65458420354_add_result_backend_time_logging": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.a65458420354_add_result_backend_time_logging.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.a65458420354_add_result_backend_time_logging.downgrade": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a65458420354_add_result_backend_time_logging.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.a65458420354_add_result_backend_time_logging.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.a65458420354_add_result_backend_time_logging.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.a65458420354_add_result_backend_time_logging.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Numeric"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a6c18f869a4e_query_start_running_time": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.a6c18f869a4e_query_start_running_time.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.a6c18f869a4e_query_start_running_time.downgrade": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a6c18f869a4e_query_start_running_time.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.a6c18f869a4e_query_start_running_time.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.a6c18f869a4e_query_start_running_time.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.a6c18f869a4e_query_start_running_time.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Numeric"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a72cb0ebeb22_deprecate_dbs_perm_column": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.a72cb0ebeb22_deprecate_dbs_perm_column.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.a72cb0ebeb22_deprecate_dbs_perm_column.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a72cb0ebeb22_deprecate_dbs_perm_column.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.a72cb0ebeb22_deprecate_dbs_perm_column.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.a72cb0ebeb22_deprecate_dbs_perm_column.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.a72cb0ebeb22_deprecate_dbs_perm_column.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a8173232b786_add_path_to_logs": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.a8173232b786_add_path_to_logs.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.a8173232b786_add_path_to_logs.downgrade": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "superset.migrations.shared.utils.table_has_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a8173232b786_add_path_to_logs.mysql": {
  "data": {
   "shadows": "sqlalchemy.dialects.mysql"
  },
  "type": "import"
 },
 "superset.migrations.versions.a8173232b786_add_path_to_logs.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.a8173232b786_add_path_to_logs.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.a8173232b786_add_path_to_logs.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.a8173232b786_add_path_to_logs.upgrade": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "superset.migrations.versions.a8173232b786_add_path_to_logs.utils": {
  "data": {
   "shadows": "superset.migrations.shared.utils"
  },
  "type": "import"
 },
 "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.Base": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.Url": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.downgrade": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.parse_querystring": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "urllib.parse.parse_qsl"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.upgrade": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "enumerate",
    "len",
    "print",
    "superset.db.Session",
    "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.Url",
    "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.json",
    "superset.migrations.versions.a99f2f7c195a_rewriting_url_from_shortner_with_new_.parse_querystring",
    "urllib.parse.quote_plus"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a9c47e2c1547_add_impersonate_user_to_dbs": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.a9c47e2c1547_add_impersonate_user_to_dbs.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.a9c47e2c1547_add_impersonate_user_to_dbs.downgrade": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.a9c47e2c1547_add_impersonate_user_to_dbs.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.a9c47e2c1547_add_impersonate_user_to_dbs.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.a9c47e2c1547_add_impersonate_user_to_dbs.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.a9c47e2c1547_add_impersonate_user_to_dbs.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ab104a954a8f_reports_alter_crontab_size": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.ab104a954a8f_reports_alter_crontab_size.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.ab104a954a8f_reports_alter_crontab_size.downgrade": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.VARCHAR"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ab104a954a8f_reports_alter_crontab_size.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.ab104a954a8f_reports_alter_crontab_size.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.ab104a954a8f_reports_alter_crontab_size.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.ab104a954a8f_reports_alter_crontab_size.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.VARCHAR"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ab3d66c4246e_add_cache_timeout_to_druid_cluster": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.ab3d66c4246e_add_cache_timeout_to_druid_cluster.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.ab3d66c4246e_add_cache_timeout_to_druid_cluster.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ab3d66c4246e_add_cache_timeout_to_druid_cluster.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.ab3d66c4246e_add_cache_timeout_to_druid_cluster.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.ab3d66c4246e_add_cache_timeout_to_druid_cluster.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.ab3d66c4246e_add_cache_timeout_to_druid_cluster.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ab8c66efdd01_resample": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.ab8c66efdd01_resample.Base": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.ab8c66efdd01_resample.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.ab8c66efdd01_resample.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.ab8c66efdd01_resample.Slice": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "superset.migrations.versions.ab8c66efdd01_resample.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.ab8c66efdd01_resample.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.ab8c66efdd01_resample.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.ab8c66efdd01_resample.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.ab8c66efdd01_resample.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.ab8c66efdd01_resample.downgrade": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.ab8c66efdd01_resample.Slice",
    "superset.migrations.versions.ab8c66efdd01_resample.json",
    "superset.migrations.versions.ab8c66efdd01_resample.logging"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ab8c66efdd01_resample.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.ab8c66efdd01_resample.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.versions.ab8c66efdd01_resample.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.ab8c66efdd01_resample.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.ab8c66efdd01_resample.upgrade": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.ab8c66efdd01_resample.Slice",
    "superset.migrations.versions.ab8c66efdd01_resample.json",
    "superset.migrations.versions.ab8c66efdd01_resample.logging"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ad4d656d92bc_add_avg_metric": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.ad4d656d92bc_add_avg_metric.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.ad4d656d92bc_add_avg_metric.downgrade": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ad4d656d92bc_add_avg_metric.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.ad4d656d92bc_add_avg_metric.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.ad4d656d92bc_add_avg_metric.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.ad4d656d92bc_add_avg_metric.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ad82a75afd82_add_query_model": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.ad82a75afd82_add_query_model.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.ad82a75afd82_add_query_model.downgrade": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "alembic.op.drop_column",
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ad82a75afd82_add_query_model.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.ad82a75afd82_add_query_model.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.ad82a75afd82_add_query_model.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.ad82a75afd82_add_query_model.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "alembic.op.create_index",
    "alembic.op.create_table",
    "alembic.op.f",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.Numeric",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ae19b4ee3692_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.ae19b4ee3692_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.ae19b4ee3692_.downgrade": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "superset.migrations.versions.ae19b4ee3692_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.ae19b4ee3692_.upgrade": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.Alert": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.Base": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.RelationshipProperty": {
  "data": {
   "shadows": "sqlalchemy.orm.RelationshipProperty"
  },
  "type": "import"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.SQLObserver": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.SQLObserver.alert": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declared_attr",
    "sqlalchemy.orm.RelationshipProperty",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.SQLObserver.alert_id": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.ext.declarative.declared_attr"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.SQLiteDialect": {
  "data": {
   "shadows": "sqlalchemy.dialects.sqlite.base.SQLiteDialect"
  },
  "type": "import"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.Validator": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.Validator.alert": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declared_attr",
    "sqlalchemy.orm.RelationshipProperty",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.Validator.alert_id": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "int",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.ext.declarative.declared_attr"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.declared_attr": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declared_attr"
  },
  "type": "import"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.down_revision": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.downgrade": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "alembic.op.create_foreign_key",
    "alembic.op.create_table",
    "alembic.op.drop_column",
    "alembic.op.drop_constraint",
    "alembic.op.drop_table",
    "alembic.op.get_bind",
    "isinstance",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "superset.db.Session",
    "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.Alert",
    "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.SQLObserver",
    "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.Validator",
    "superset.utils.core.generic_find_fk_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.generic_find_fk_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_fk_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.revision": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.upgrade": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "alembic.op.create_foreign_key",
    "alembic.op.create_table",
    "alembic.op.drop_column",
    "alembic.op.drop_constraint",
    "alembic.op.drop_table",
    "alembic.op.get_bind",
    "isinstance",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Float",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "superset.db.Session",
    "superset.migrations.versions.af30ca79208f_collapse_alerting_models_into_a_single_.Alert",
    "superset.utils.core.generic_find_fk_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.afb7730f6a9c_remove_empty_filters": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.Base": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.Slice": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.downgrade": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.upgrade": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.Slice",
    "superset.migrations.versions.afb7730f6a9c_remove_empty_filters.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.afc69274c25a_alter_sql_column_data_type_in_query_mysql_table": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.afc69274c25a_alter_sql_column_data_type_in_query_mysql_table.MySQLDialect": {
  "data": {
   "shadows": "sqlalchemy.dialects.mysql.base.MySQLDialect"
  },
  "type": "import"
 },
 "superset.migrations.versions.afc69274c25a_alter_sql_column_data_type_in_query_mysql_table.down_revision": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.migrations.versions.afc69274c25a_alter_sql_column_data_type_in_query_mysql_table.downgrade": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "isinstance",
    "sqlalchemy.Text",
    "sqlalchemy.databases.mysql.LONGTEXT",
    "sqlalchemy.dialects.mysql.base.MySQLDialect"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.afc69274c25a_alter_sql_column_data_type_in_query_mysql_table.mysql": {
  "data": {
   "shadows": "sqlalchemy.databases.mysql"
  },
  "type": "import"
 },
 "superset.migrations.versions.afc69274c25a_alter_sql_column_data_type_in_query_mysql_table.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.afc69274c25a_alter_sql_column_data_type_in_query_mysql_table.revision": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.migrations.versions.afc69274c25a_alter_sql_column_data_type_in_query_mysql_table.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.afc69274c25a_alter_sql_column_data_type_in_query_mysql_table.upgrade": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "isinstance",
    "sqlalchemy.Text",
    "sqlalchemy.databases.mysql.LONGTEXT",
    "sqlalchemy.dialects.mysql.base.MySQLDialect"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b318dfe5fb6c_adding_verbose_name_to_druid_column": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.b318dfe5fb6c_adding_verbose_name_to_druid_column.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.b318dfe5fb6c_adding_verbose_name_to_druid_column.downgrade": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b318dfe5fb6c_adding_verbose_name_to_druid_column.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.b318dfe5fb6c_adding_verbose_name_to_druid_column.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.b318dfe5fb6c_adding_verbose_name_to_druid_column.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.b318dfe5fb6c_adding_verbose_name_to_druid_column.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b347b202819b_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.b347b202819b_.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.b347b202819b_.downgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.b347b202819b_.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.b347b202819b_.upgrade": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "superset.migrations.versions.b4456560d4f3_change_table_unique_constraint": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.b4456560d4f3_change_table_unique_constraint.down_revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.b4456560d4f3_change_table_unique_constraint.downgrade": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.drop_constraint"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b4456560d4f3_change_table_unique_constraint.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.b4456560d4f3_change_table_unique_constraint.revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.b4456560d4f3_change_table_unique_constraint.upgrade": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.create_unique_constraint",
    "alembic.op.drop_constraint"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b46fa1b0b39e_add_params_to_tables": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.b46fa1b0b39e_add_params_to_tables.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.b46fa1b0b39e_add_params_to_tables.downgrade": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.drop_column",
    "str",
    "superset.migrations.versions.b46fa1b0b39e_add_params_to_tables.logging"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b46fa1b0b39e_add_params_to_tables.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.versions.b46fa1b0b39e_add_params_to_tables.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.b46fa1b0b39e_add_params_to_tables.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.b46fa1b0b39e_add_params_to_tables.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.b46fa1b0b39e_add_params_to_tables.upgrade": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b4a38aa87893_deprecate_database_expression": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.b4a38aa87893_deprecate_database_expression.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.b4a38aa87893_deprecate_database_expression.downgrade": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b4a38aa87893_deprecate_database_expression.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.b4a38aa87893_deprecate_database_expression.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.b4a38aa87893_deprecate_database_expression.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.b4a38aa87893_deprecate_database_expression.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin": {
  "data": {
   "symbols_in_volume": [
    "int",
    "sqlalchemy.Column",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.ext.declarative.declarative_base",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.Base",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.ImportMixin",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.models",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.os",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.table_names",
    "superset.utils.core.MediumText",
    "type"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.Base": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.ImportMixin": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy_utils.UUIDType",
    "uuid.uuid4"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.JSONDecodeError": {
  "data": {
   "shadows": "json.decoder.JSONDecodeError"
  },
  "type": "import"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.MySQLDialect": {
  "data": {
   "shadows": "sqlalchemy.dialects.mysql.base.MySQLDialect"
  },
  "type": "import"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.OperationalError": {
  "data": {
   "shadows": "sqlalchemy.exc.OperationalError"
  },
  "type": "import"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.PGDialect": {
  "data": {
   "shadows": "sqlalchemy.dialects.postgresql.base.PGDialect"
  },
  "type": "import"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.UUIDType": {
  "data": {
   "shadows": "sqlalchemy_utils.UUIDType"
  },
  "type": "import"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.add_uuids": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "alembic.op.execute",
    "alembic.op.get_bind",
    "isinstance",
    "map",
    "min",
    "print",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.add_uuids_by_dialect",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.default_batch_size",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.time",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.add_uuids_by_dialect": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.default_batch_size": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.down_revision": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.downgrade": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.models",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.update_dashboards"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.load_only": {
  "data": {
   "shadows": "sqlalchemy.orm.load_only"
  },
  "type": "import"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.models": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.revision": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.table_names": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.update_dashboards": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "enumerate",
    "print",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.default_batch_size",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.models",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.update_position_json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.update_position_json": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "json.decoder.JSONDecodeError",
    "str",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.upgrade": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "sqlalchemy.Column",
    "sqlalchemy.exc.OperationalError",
    "sqlalchemy.orm.load_only",
    "sqlalchemy_utils.UUIDType",
    "superset.db.Session",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.add_uuids",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.models",
    "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.update_dashboards",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.migrations.versions.b56500de1855_add_uuid_column_to_import_mixin.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "superset.migrations.versions.b5998378c225_add_certificate_to_dbs": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.b5998378c225_add_certificate_to_dbs.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.migrations.versions.b5998378c225_add_certificate_to_dbs.EncryptedType": {
  "data": {
   "shadows": "sqlalchemy_utils.EncryptedType"
  },
  "type": "import"
 },
 "superset.migrations.versions.b5998378c225_add_certificate_to_dbs.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.b5998378c225_add_certificate_to_dbs.downgrade": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b5998378c225_add_certificate_to_dbs.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.b5998378c225_add_certificate_to_dbs.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.b5998378c225_add_certificate_to_dbs.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.b5998378c225_add_certificate_to_dbs.upgrade": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "alembic.op.get_bind",
    "sqlalchemy.Column",
    "sqlalchemy.Text",
    "sqlalchemy_utils.EncryptedType",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b6fa807eac07_make_names_non_nullable": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.b6fa807eac07_make_names_non_nullable.conv": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.migrations.versions.b6fa807eac07_make_names_non_nullable.down_revision": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.migrations.versions.b6fa807eac07_make_names_non_nullable.downgrade": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "sqlalchemy.String",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "superset.migrations.versions.b6fa807eac07_make_names_non_nullable.conv",
    "superset.utils.core.generic_find_fk_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.b6fa807eac07_make_names_non_nullable.generic_find_fk_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_fk_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.b6fa807eac07_make_names_non_nullable.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.b6fa807eac07_make_names_non_nullable.revision": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.migrations.versions.b6fa807eac07_make_names_non_nullable.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.b6fa807eac07_make_names_non_nullable.upgrade": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "sqlalchemy.String",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "superset.migrations.versions.b6fa807eac07_make_names_non_nullable.conv",
    "superset.utils.core.generic_find_fk_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bb51420eaf83_add_schema_to_table_model": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.bb51420eaf83_add_schema_to_table_model.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.bb51420eaf83_add_schema_to_table_model.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bb51420eaf83_add_schema_to_table_model.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.bb51420eaf83_add_schema_to_table_model.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.bb51420eaf83_add_schema_to_table_model.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.bb51420eaf83_add_schema_to_table_model.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bcf3126872fc_add_keyvalue": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.bcf3126872fc_add_keyvalue.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.bcf3126872fc_add_keyvalue.downgrade": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bcf3126872fc_add_keyvalue.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.bcf3126872fc_add_keyvalue.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.bcf3126872fc_add_keyvalue.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.bcf3126872fc_add_keyvalue.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.Base": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.Slice": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "superset.migrations.versions.bddc498dd179_adhoc_filters.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.convert_legacy_filters_into_adhoc": {
  "data": {
   "shadows": "superset.utils.core.convert_legacy_filters_into_adhoc"
  },
  "type": "import"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.downgrade": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.bddc498dd179_adhoc_filters.Slice",
    "superset.migrations.versions.bddc498dd179_adhoc_filters.json",
    "superset.utils.core.split_adhoc_filters_into_base_filters"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.split_adhoc_filters_into_base_filters": {
  "data": {
   "shadows": "superset.utils.core.split_adhoc_filters_into_base_filters"
  },
  "type": "import"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.upgrade": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.bddc498dd179_adhoc_filters.Slice",
    "superset.migrations.versions.bddc498dd179_adhoc_filters.json",
    "superset.utils.core.convert_legacy_filters_into_adhoc"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bddc498dd179_adhoc_filters.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions": {
  "data": {
   "symbols_in_volume": [
    "int",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Table",
    "sqlalchemy.ext.declarative.declarative_base",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.Base",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.NUMBER_OF_CHARTS_PER_ROW",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.TOTAL_COLUMNS",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.sys"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.BACKGROUND_TRANSPARENT": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.Base": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.CHART_TYPE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.COLUMN_TYPE": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_GRID_ID": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_GRID_TYPE": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_HEADER_ID": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_HEADER_TYPE": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_ROOT_ID": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_ROOT_TYPE": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_VERSION_KEY": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DEFAULT_CHART_WIDTH": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.Dashboard": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.relationship",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.Base",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.dashboard_slices"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.GRID_COLUMN_COUNT": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.GRID_MIN_COLUMN_COUNT": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.GRID_MIN_ROW_UNITS": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.GRID_RATIO": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.MARKDOWN_TYPE": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.MAX_RECURSIVE_LEVEL": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.MAX_VALUE": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.NUMBER_OF_CHARTS_PER_ROW": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.ROW_HEIGHT": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.ROW_TYPE": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.Slice": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.TOTAL_COLUMNS": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.can_reduce_column_width": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "all",
    "id",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.COLUMN_TYPE",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.GRID_MIN_COLUMN_COUNT",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.ROW_TYPE",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.is_wide_leaf_component"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.convert": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "len",
    "sorted",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.COLUMN_TYPE",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_GRID_TYPE",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.MAX_RECURSIVE_LEVEL",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_boundary",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_chart_holder",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_children_max",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_children_sum",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_col_container",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_row_container",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.has_overlap"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.convert_to_layout": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "dict",
    "filter",
    "isinstance",
    "len",
    "list",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_GRID_ID",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.GRID_COLUMN_COUNT",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.ROW_TYPE",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.convert",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_children_max",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_children_sum",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_empty_layout",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_wide_column_ids",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.is_wide_leaf_component",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.reduce_component_width",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.reduce_row_width"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.dashboard_slices": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.down_revision": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.downgrade": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.generate_id": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.uuid"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_boundary": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "max",
    "min",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.MAX_VALUE"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_chart_holder": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "round",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.CHART_TYPE",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.GRID_MIN_COLUMN_COUNT",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.GRID_MIN_ROW_UNITS",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.GRID_RATIO",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.MARKDOWN_TYPE",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.ROW_HEIGHT",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.generate_id"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_children_max": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_children_sum": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "functools.reduce",
    "sum"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_col_container": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.BACKGROUND_TRANSPARENT",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.COLUMN_TYPE",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.generate_id"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_empty_layout": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_GRID_ID",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_GRID_TYPE",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_ROOT_ID",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_ROOT_TYPE",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_VERSION_KEY"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_header_component": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_HEADER_ID",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_HEADER_TYPE"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_row_container": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.BACKGROUND_TRANSPARENT",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.ROW_TYPE",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.generate_id"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_wide_column_ids": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "can_reduce_column_width",
    "filter",
    "list"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.has_overlap": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.is_v2_dash": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.is_wide_leaf_component": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.CHART_TYPE",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.GRID_MIN_COLUMN_COUNT",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.MARKDOWN_TYPE"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.merge_position": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.reduce_component_width": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.is_wide_leaf_component"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.reduce_row_width": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "filter",
    "list",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_children_sum",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.is_wide_leaf_component"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.revision": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.scan_dashboard_positions_data": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "enumerate",
    "filter",
    "len",
    "list",
    "max",
    "min",
    "sorted",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.MAX_VALUE",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.TOTAL_COLUMNS",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.merge_position"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.upgrade": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "enumerate",
    "int",
    "len",
    "max",
    "print",
    "slice",
    "slice.id",
    "slice.params",
    "slice.slice_name",
    "slice.viz_type",
    "sorted",
    "str",
    "superset.db.Session",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DASHBOARD_HEADER_ID",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.DEFAULT_CHART_WIDTH",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.Dashboard",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.NUMBER_OF_CHARTS_PER_ROW",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.collections",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.convert_to_layout",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.get_header_component",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.is_v2_dash",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.json",
    "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.scan_dashboard_positions_data"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.bebcf3fed1fe_convert_dashboard_v1_positions.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.Base": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.Slice": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.down_revision": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.downgrade": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.revision": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.upgrade": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "enumerate",
    "len",
    "print",
    "str",
    "superset.db.Session",
    "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.Slice",
    "superset.migrations.versions.bf706ae5eb46_cal_heatmap_metric_to_metrics.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c18bd4186f15_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.c18bd4186f15_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.c18bd4186f15_.downgrade": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "superset.migrations.versions.c18bd4186f15_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.c18bd4186f15_.upgrade": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations": {
  "data": {
   "symbols_in_volume": [
    "superset.migrations.shared.security_converge.Pvm"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations.NEW_PVMS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations.PVM_MAP": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations.Pvm": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.Pvm"
  },
  "type": "import"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations.add_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.add_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations.down_revision": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations.downgrade": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.get_reversed_new_pvms",
    "superset.migrations.shared.security_converge.get_reversed_pvm_map",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.c25cb2c78727_security_converge_annotations.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations.get_reversed_new_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_new_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations.get_reversed_pvm_map": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_pvm_map"
  },
  "type": "import"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations.migrate_roles": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.migrate_roles"
  },
  "type": "import"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations.revision": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.c25cb2c78727_security_converge_annotations.upgrade": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.c25cb2c78727_security_converge_annotations.NEW_PVMS",
    "superset.migrations.versions.c25cb2c78727_security_converge_annotations.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c2acd2cf3df2_alter_type_of_dbs_encrypted_extra": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.c2acd2cf3df2_alter_type_of_dbs_encrypted_extra.EncryptedType": {
  "data": {
   "shadows": "sqlalchemy_utils.EncryptedType"
  },
  "type": "import"
 },
 "superset.migrations.versions.c2acd2cf3df2_alter_type_of_dbs_encrypted_extra.down_revision": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.migrations.versions.c2acd2cf3df2_alter_type_of_dbs_encrypted_extra.downgrade": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.Text",
    "sqlalchemy_utils.EncryptedType"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c2acd2cf3df2_alter_type_of_dbs_encrypted_extra.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.c2acd2cf3df2_alter_type_of_dbs_encrypted_extra.revision": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.migrations.versions.c2acd2cf3df2_alter_type_of_dbs_encrypted_extra.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.c2acd2cf3df2_alter_type_of_dbs_encrypted_extra.upgrade": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError",
    "alembic.op.batch_alter_table",
    "sqlalchemy.Text",
    "sqlalchemy_utils.EncryptedType"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission.Base": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission.Slice": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "superset.migrations.versions.c3a8f8611885_materializing_permission.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission.down_revision": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission.downgrade": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission.revision": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.c3a8f8611885_materializing_permission.upgrade": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "alembic.op.get_bind",
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "superset.db.Session",
    "superset.db.session.close",
    "superset.migrations.versions.c3a8f8611885_materializing_permission.Slice"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c5756bec8b47_time_grain_sqla": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.c5756bec8b47_time_grain_sqla.Base": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.migrations.versions.c5756bec8b47_time_grain_sqla.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.c5756bec8b47_time_grain_sqla.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.c5756bec8b47_time_grain_sqla.Slice": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "superset.migrations.versions.c5756bec8b47_time_grain_sqla.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c5756bec8b47_time_grain_sqla.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.c5756bec8b47_time_grain_sqla.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.c5756bec8b47_time_grain_sqla.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.c5756bec8b47_time_grain_sqla.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.c5756bec8b47_time_grain_sqla.downgrade": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.c5756bec8b47_time_grain_sqla.Slice",
    "superset.migrations.versions.c5756bec8b47_time_grain_sqla.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c5756bec8b47_time_grain_sqla.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.c5756bec8b47_time_grain_sqla.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.c5756bec8b47_time_grain_sqla.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.c5756bec8b47_time_grain_sqla.upgrade": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.c5756bec8b47_time_grain_sqla.Slice",
    "superset.migrations.versions.c5756bec8b47_time_grain_sqla.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c611f2b591b8_dim_spec": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.c611f2b591b8_dim_spec.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.c611f2b591b8_dim_spec.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c611f2b591b8_dim_spec.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.c611f2b591b8_dim_spec.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.c611f2b591b8_dim_spec.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.c611f2b591b8_dim_spec.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.Annotation": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.c617da68de7d_form_nullable.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.Base": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.BaseColumnMixin": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.BaseDatasourceMixin": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.BaseMetricMixin": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.Dashboard": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.c617da68de7d_form_nullable.Base",
    "superset.utils.core.MediumText"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.Database": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.c617da68de7d_form_nullable.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.DruidCluster": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "superset.migrations.versions.c617da68de7d_form_nullable.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.DruidColumn": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Text",
    "superset.migrations.versions.c617da68de7d_form_nullable.Base",
    "superset.migrations.versions.c617da68de7d_form_nullable.BaseColumnMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.DruidDatasource": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.c617da68de7d_form_nullable.Base",
    "superset.migrations.versions.c617da68de7d_form_nullable.BaseDatasourceMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.DruidMetric": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Text",
    "superset.migrations.versions.c617da68de7d_form_nullable.Base",
    "superset.migrations.versions.c617da68de7d_form_nullable.BaseMetricMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.MediumText": {
  "data": {
   "shadows": "superset.utils.core.MediumText"
  },
  "type": "import"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.Slice": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.c617da68de7d_form_nullable.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.SqlMetric": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Text",
    "superset.migrations.versions.c617da68de7d_form_nullable.Base",
    "superset.migrations.versions.c617da68de7d_form_nullable.BaseMetricMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.SqlaTable": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.c617da68de7d_form_nullable.Base",
    "superset.migrations.versions.c617da68de7d_form_nullable.BaseDatasourceMixin",
    "superset.utils.core.MediumText"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.TableColumn": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.c617da68de7d_form_nullable.Base",
    "superset.migrations.versions.c617da68de7d_form_nullable.BaseColumnMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.downgrade": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.c617da68de7d_form_nullable.upgrade": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "getattr",
    "setattr",
    "superset.db.Session",
    "superset.migrations.versions.c617da68de7d_form_nullable.Annotation",
    "superset.migrations.versions.c617da68de7d_form_nullable.Dashboard",
    "superset.migrations.versions.c617da68de7d_form_nullable.Database",
    "superset.migrations.versions.c617da68de7d_form_nullable.DruidCluster",
    "superset.migrations.versions.c617da68de7d_form_nullable.DruidColumn",
    "superset.migrations.versions.c617da68de7d_form_nullable.DruidDatasource",
    "superset.migrations.versions.c617da68de7d_form_nullable.DruidMetric",
    "superset.migrations.versions.c617da68de7d_form_nullable.Slice",
    "superset.migrations.versions.c617da68de7d_form_nullable.SqlMetric",
    "superset.migrations.versions.c617da68de7d_form_nullable.SqlaTable",
    "superset.migrations.versions.c617da68de7d_form_nullable.TableColumn"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c829ff0b37d0_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.c829ff0b37d0_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.c829ff0b37d0_.downgrade": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.migrations.versions.c829ff0b37d0_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.c829ff0b37d0_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.c829ff0b37d0_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.c829ff0b37d0_.upgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.Base": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.Enum": {
  "data": {
   "shadows": "sqlalchemy.Enum"
  },
  "type": "import"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.ObjectTypes": {
  "data": {
   "shadows": "superset.models.tags.ObjectTypes"
  },
  "type": "import"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.Tag": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Enum",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "superset.migrations.versions.c82ee8a39623_add_implicit_tags.Base",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.tags.TagTypes",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.TagTypes": {
  "data": {
   "shadows": "superset.models.tags.TagTypes"
  },
  "type": "import"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.TaggedObject": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Enum",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "superset.migrations.versions.c82ee8a39623_add_implicit_tags.Base",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.tags.ObjectTypes"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.User": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "superset.migrations.versions.c82ee8a39623_add_implicit_tags.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.downgrade": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.c82ee8a39623_add_implicit_tags.upgrade": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "superset.migrations.versions.c82ee8a39623_add_implicit_tags.Tag",
    "superset.migrations.versions.c82ee8a39623_add_implicit_tags.TaggedObject"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c878781977c6_alert_reports_shared_uniqueness": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Float",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.MetaData",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.Table",
    "sqlalchemy.Text"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.c878781977c6_alert_reports_shared_uniqueness.Inspector": {
  "data": {
   "shadows": "sqlalchemy.engine.reflection.Inspector"
  },
  "type": "import"
 },
 "superset.migrations.versions.c878781977c6_alert_reports_shared_uniqueness.MySQLDialect": {
  "data": {
   "shadows": "sqlalchemy.dialects.mysql.base.MySQLDialect"
  },
  "type": "import"
 },
 "superset.migrations.versions.c878781977c6_alert_reports_shared_uniqueness.PGDialect": {
  "data": {
   "shadows": "sqlalchemy.dialects.postgresql.base.PGDialect"
  },
  "type": "import"
 },
 "superset.migrations.versions.c878781977c6_alert_reports_shared_uniqueness.SQLiteDialect": {
  "data": {
   "shadows": "sqlalchemy.dialects.sqlite.base.SQLiteDialect"
  },
  "type": "import"
 },
 "superset.migrations.versions.c878781977c6_alert_reports_shared_uniqueness.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.c878781977c6_alert_reports_shared_uniqueness.downgrade": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "superset.migrations.versions.c878781977c6_alert_reports_shared_uniqueness.generic_find_uq_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_uq_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.c878781977c6_alert_reports_shared_uniqueness.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.c878781977c6_alert_reports_shared_uniqueness.report_schedule": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.migrations.versions.c878781977c6_alert_reports_shared_uniqueness.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.c878781977c6_alert_reports_shared_uniqueness.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.c878781977c6_alert_reports_shared_uniqueness.upgrade": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.create_unique_constraint",
    "alembic.op.drop_constraint",
    "alembic.op.drop_index",
    "alembic.op.f",
    "alembic.op.get_bind",
    "isinstance",
    "sqlalchemy.dialects.mysql.base.MySQLDialect",
    "sqlalchemy.dialects.postgresql.base.PGDialect",
    "sqlalchemy.dialects.sqlite.base.SQLiteDialect",
    "superset.migrations.versions.c878781977c6_alert_reports_shared_uniqueness.report_schedule"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.c9495751e314_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.c9495751e314_.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.c9495751e314_.downgrade": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "superset.migrations.versions.c9495751e314_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.c9495751e314_.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.c9495751e314_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.c9495751e314_.upgrade": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "superset.migrations.versions.ca69c70ec99b_tracking_url": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.ca69c70ec99b_tracking_url.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.ca69c70ec99b_tracking_url.downgrade": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ca69c70ec99b_tracking_url.mysql": {
  "data": {
   "shadows": "sqlalchemy.dialects.mysql"
  },
  "type": "import"
 },
 "superset.migrations.versions.ca69c70ec99b_tracking_url.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.ca69c70ec99b_tracking_url.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.ca69c70ec99b_tracking_url.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.ca69c70ec99b_tracking_url.upgrade": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.cca2f5d568c8_add_encrypted_extra_to_dbs": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.cca2f5d568c8_add_encrypted_extra_to_dbs.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.cca2f5d568c8_add_encrypted_extra_to_dbs.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.cca2f5d568c8_add_encrypted_extra_to_dbs.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.cca2f5d568c8_add_encrypted_extra_to_dbs.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.cca2f5d568c8_add_encrypted_extra_to_dbs.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.cca2f5d568c8_add_encrypted_extra_to_dbs.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts": {
  "data": {
   "symbols_in_volume": [
    "superset.migrations.shared.security_converge.Pvm"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts.NEW_PVMS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts.PVM_MAP": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts.Pvm": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.Pvm"
  },
  "type": "import"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts.add_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.add_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts.downgrade": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.get_reversed_new_pvms",
    "superset.migrations.shared.security_converge.get_reversed_pvm_map",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.ccb74baaa89b_security_converge_charts.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts.get_reversed_new_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_new_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts.get_reversed_pvm_map": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_pvm_map"
  },
  "type": "import"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts.migrate_roles": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.migrate_roles"
  },
  "type": "import"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.ccb74baaa89b_security_converge_charts.upgrade": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.ccb74baaa89b_security_converge_charts.NEW_PVMS",
    "superset.migrations.versions.ccb74baaa89b_security_converge_charts.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.cefabc8f7d38_increase_size_of_name_column_in_ab_view_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.cefabc8f7d38_increase_size_of_name_column_in_ab_view_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.cefabc8f7d38_increase_size_of_name_column_in_ab_view_.downgrade": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.cefabc8f7d38_increase_size_of_name_column_in_ab_view_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.cefabc8f7d38_increase_size_of_name_column_in_ab_view_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.cefabc8f7d38_increase_size_of_name_column_in_ab_view_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.cefabc8f7d38_increase_size_of_name_column_in_ab_view_.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.d2424a248d63_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.d2424a248d63_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.d2424a248d63_.downgrade": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "superset.migrations.versions.d2424a248d63_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.d2424a248d63_.upgrade": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "superset.migrations.versions.d39b1e37131d_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.d39b1e37131d_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.d39b1e37131d_.downgrade": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.migrations.versions.d39b1e37131d_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.d39b1e37131d_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.d39b1e37131d_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.d39b1e37131d_.upgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.d6db5a5cdb5d_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.d6db5a5cdb5d_.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.d6db5a5cdb5d_.downgrade": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "superset.migrations.versions.d6db5a5cdb5d_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.d6db5a5cdb5d_.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.d6db5a5cdb5d_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.d6db5a5cdb5d_.upgrade": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "superset.migrations.versions.d6ffdf31bdd4_add_published_column_to_dashboards": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.d6ffdf31bdd4_add_published_column_to_dashboards.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.d6ffdf31bdd4_add_published_column_to_dashboards.downgrade": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.d6ffdf31bdd4_add_published_column_to_dashboards.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.d6ffdf31bdd4_add_published_column_to_dashboards.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.d6ffdf31bdd4_add_published_column_to_dashboards.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.d6ffdf31bdd4_add_published_column_to_dashboards.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.execute",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.d7c1a0d6f2da_remove_limit_used_from_query_model": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.d7c1a0d6f2da_remove_limit_used_from_query_model.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.d7c1a0d6f2da_remove_limit_used_from_query_model.downgrade": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.BOOLEAN",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.d7c1a0d6f2da_remove_limit_used_from_query_model.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.d7c1a0d6f2da_remove_limit_used_from_query_model.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.d7c1a0d6f2da_remove_limit_used_from_query_model.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.d7c1a0d6f2da_remove_limit_used_from_query_model.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.d827694c7555_css_templates": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.d827694c7555_css_templates.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.d827694c7555_css_templates.downgrade": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.d827694c7555_css_templates.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.d827694c7555_css_templates.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.d827694c7555_css_templates.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.d827694c7555_css_templates.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.create_table",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.Base": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.DruidMetric": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.SqlMetric": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.downgrade": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.upgrade": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "alembic.op.get_bind",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "superset.db.Session",
    "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.DruidMetric",
    "superset.migrations.versions.d8bc074f7aad_add_new_field_is_restricted_to_.SqlMetric"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.Annotation": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.d94d33dbe938_form_strip.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.Base": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.BaseColumnMixin": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.BaseDatasourceMixin": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.BaseMetricMixin": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.Dashboard": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.d94d33dbe938_form_strip.Base",
    "superset.utils.core.MediumText"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.Database": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.d94d33dbe938_form_strip.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.DruidCluster": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "superset.migrations.versions.d94d33dbe938_form_strip.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.DruidColumn": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Text",
    "superset.migrations.versions.d94d33dbe938_form_strip.Base",
    "superset.migrations.versions.d94d33dbe938_form_strip.BaseColumnMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.DruidDatasource": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.d94d33dbe938_form_strip.Base",
    "superset.migrations.versions.d94d33dbe938_form_strip.BaseDatasourceMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.DruidMetric": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Text",
    "superset.migrations.versions.d94d33dbe938_form_strip.Base",
    "superset.migrations.versions.d94d33dbe938_form_strip.BaseMetricMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.MediumText": {
  "data": {
   "shadows": "superset.utils.core.MediumText"
  },
  "type": "import"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.Slice": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.d94d33dbe938_form_strip.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.SqlMetric": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Text",
    "superset.migrations.versions.d94d33dbe938_form_strip.Base",
    "superset.migrations.versions.d94d33dbe938_form_strip.BaseMetricMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.SqlaTable": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.d94d33dbe938_form_strip.Base",
    "superset.migrations.versions.d94d33dbe938_form_strip.BaseDatasourceMixin",
    "superset.utils.core.MediumText"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.TableColumn": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.d94d33dbe938_form_strip.Base",
    "superset.migrations.versions.d94d33dbe938_form_strip.BaseColumnMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.downgrade": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.d94d33dbe938_form_strip.upgrade": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "getattr",
    "setattr",
    "superset.db.Session",
    "superset.migrations.versions.d94d33dbe938_form_strip.Annotation",
    "superset.migrations.versions.d94d33dbe938_form_strip.Dashboard",
    "superset.migrations.versions.d94d33dbe938_form_strip.Database",
    "superset.migrations.versions.d94d33dbe938_form_strip.DruidCluster",
    "superset.migrations.versions.d94d33dbe938_form_strip.DruidColumn",
    "superset.migrations.versions.d94d33dbe938_form_strip.DruidDatasource",
    "superset.migrations.versions.d94d33dbe938_form_strip.DruidMetric",
    "superset.migrations.versions.d94d33dbe938_form_strip.Slice",
    "superset.migrations.versions.d94d33dbe938_form_strip.SqlMetric",
    "superset.migrations.versions.d94d33dbe938_form_strip.SqlaTable",
    "superset.migrations.versions.d94d33dbe938_form_strip.TableColumn"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json.Base": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json.Slice": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.db0c65b146bd_update_slice_model_json.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json.downgrade": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.db0c65b146bd_update_slice_model_json.upgrade": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "enumerate",
    "len",
    "print",
    "str",
    "superset.db.Session",
    "superset.migrations.versions.db0c65b146bd_update_slice_model_json.Slice",
    "superset.migrations.versions.db0c65b146bd_update_slice_model_json.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.db4b49eb0782_add_tables_for_sql_lab_state": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.db4b49eb0782_add_tables_for_sql_lab_state.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.db4b49eb0782_add_tables_for_sql_lab_state.downgrade": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "alembic.op.drop_index",
    "alembic.op.drop_table",
    "alembic.op.f"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.db4b49eb0782_add_tables_for_sql_lab_state.mysql": {
  "data": {
   "shadows": "sqlalchemy.dialects.mysql"
  },
  "type": "import"
 },
 "superset.migrations.versions.db4b49eb0782_add_tables_for_sql_lab_state.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.db4b49eb0782_add_tables_for_sql_lab_state.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.db4b49eb0782_add_tables_for_sql_lab_state.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.db4b49eb0782_add_tables_for_sql_lab_state.upgrade": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "alembic.op.create_index",
    "alembic.op.create_table",
    "alembic.op.f",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.db527d8c4c78_add_db_verbose_name": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.db527d8c4c78_add_db_verbose_name.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.db527d8c4c78_add_db_verbose_name.downgrade": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.drop_column",
    "superset.migrations.versions.db527d8c4c78_add_db_verbose_name.logging"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.db527d8c4c78_add_db_verbose_name.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.versions.db527d8c4c78_add_db_verbose_name.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.db527d8c4c78_add_db_verbose_name.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.db527d8c4c78_add_db_verbose_name.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.db527d8c4c78_add_db_verbose_name.upgrade": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.add_column",
    "alembic.op.create_unique_constraint",
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "superset.migrations.versions.db527d8c4c78_add_db_verbose_name.logging"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ddd6ebdd853b_annotations": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.ddd6ebdd853b_annotations.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.ddd6ebdd853b_annotations.downgrade": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "alembic.op.drop_index",
    "alembic.op.drop_table"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ddd6ebdd853b_annotations.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.ddd6ebdd853b_annotations.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.ddd6ebdd853b_annotations.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.ddd6ebdd853b_annotations.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.create_index",
    "alembic.op.create_table",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.de021a1ca60d_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.de021a1ca60d_.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.de021a1ca60d_.downgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.de021a1ca60d_.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.de021a1ca60d_.upgrade": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "superset.migrations.versions.def97f26fdfb_add_index_to_tagged_object": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.def97f26fdfb_add_index_to_tagged_object.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.def97f26fdfb_add_index_to_tagged_object.downgrade": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "alembic.op.drop_index",
    "alembic.op.f"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.def97f26fdfb_add_index_to_tagged_object.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.def97f26fdfb_add_index_to_tagged_object.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.def97f26fdfb_add_index_to_tagged_object.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.create_index",
    "alembic.op.f"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries": {
  "data": {
   "symbols_in_volume": [
    "superset.migrations.shared.security_converge.Pvm"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries.NEW_PVMS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries.PVM_MAP": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries.Pvm": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.Pvm"
  },
  "type": "import"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries.add_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.add_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries.downgrade": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.get_reversed_new_pvms",
    "superset.migrations.shared.security_converge.get_reversed_pvm_map",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.e37912a26567_security_converge_queries.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries.get_reversed_new_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_new_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries.get_reversed_pvm_map": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_pvm_map"
  },
  "type": "import"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries.migrate_roles": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.migrate_roles"
  },
  "type": "import"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.e37912a26567_security_converge_queries.upgrade": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.e37912a26567_security_converge_queries.NEW_PVMS",
    "superset.migrations.versions.e37912a26567_security_converge_queries.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries": {
  "data": {
   "symbols_in_volume": [
    "superset.migrations.shared.security_converge.Pvm"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.NEW_PVMS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.PVM_MAP": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.Pvm": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.Pvm"
  },
  "type": "import"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.add_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.add_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.downgrade": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.get_reversed_new_pvms",
    "superset.migrations.shared.security_converge.get_reversed_pvm_map",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.get_reversed_new_pvms": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_new_pvms"
  },
  "type": "import"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.get_reversed_pvm_map": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.get_reversed_pvm_map"
  },
  "type": "import"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.migrate_roles": {
  "data": {
   "shadows": "superset.migrations.shared.security_converge.migrate_roles"
  },
  "type": "import"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.upgrade": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "print",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "superset.migrations.shared.security_converge.add_pvms",
    "superset.migrations.shared.security_converge.migrate_roles",
    "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.NEW_PVMS",
    "superset.migrations.versions.e38177dbf641_security_converge_saved_queries.PVM_MAP"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e3970889f38e_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.e3970889f38e_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.e3970889f38e_.downgrade": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.migrations.versions.e3970889f38e_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.e3970889f38e_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.e3970889f38e_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.e3970889f38e_.upgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.e46f2d27a08e_materialize_perms": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.e46f2d27a08e_materialize_perms.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.e46f2d27a08e_materialize_perms.downgrade": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e46f2d27a08e_materialize_perms.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.e46f2d27a08e_materialize_perms.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.e46f2d27a08e_materialize_perms.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.e46f2d27a08e_materialize_perms.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e502db2af7be_add_template_params_to_tables": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.e502db2af7be_add_template_params_to_tables.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.e502db2af7be_add_template_params_to_tables.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.drop_column",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e502db2af7be_add_template_params_to_tables.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.e502db2af7be_add_template_params_to_tables.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.e502db2af7be_add_template_params_to_tables.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.e502db2af7be_add_template_params_to_tables.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e553e78e90c5_add_druid_auth_py_py": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.e553e78e90c5_add_druid_auth_py_py.EncryptedType": {
  "data": {
   "shadows": "sqlalchemy_utils.EncryptedType"
  },
  "type": "import"
 },
 "superset.migrations.versions.e553e78e90c5_add_druid_auth_py_py.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.e553e78e90c5_add_druid_auth_py_py.downgrade": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e553e78e90c5_add_druid_auth_py_py.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.e553e78e90c5_add_druid_auth_py_py.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.e553e78e90c5_add_druid_auth_py_py.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.e553e78e90c5_add_druid_auth_py_py.upgrade": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy_utils.EncryptedType"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e557699a813e_add_tables_relation_to_row_level_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.e557699a813e_add_tables_relation_to_row_level_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.e557699a813e_add_tables_relation_to_row_level_.downgrade": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "alembic.op.alter_column",
    "alembic.op.drop_table",
    "alembic.op.get_bind",
    "dict",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.INTEGER",
    "sqlalchemy.MetaData",
    "sqlalchemy.Table",
    "sqlalchemy.select"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e557699a813e_add_tables_relation_to_row_level_.generic_find_fk_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_fk_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.e557699a813e_add_tables_relation_to_row_level_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.e557699a813e_add_tables_relation_to_row_level_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.e557699a813e_add_tables_relation_to_row_level_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.e557699a813e_add_tables_relation_to_row_level_.upgrade": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.create_table",
    "alembic.op.get_bind",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKeyConstraint",
    "sqlalchemy.Integer",
    "sqlalchemy.MetaData",
    "sqlalchemy.PrimaryKeyConstraint",
    "sqlalchemy.Table",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "sqlalchemy.select",
    "superset.utils.core.generic_find_fk_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e5ef6828ac4e_add_rls_filter_type_and_grouping_key": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.e5ef6828ac4e_add_rls_filter_type_and_grouping_key.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.e5ef6828ac4e_add_rls_filter_type_and_grouping_key.downgrade": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.f"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e5ef6828ac4e_add_rls_filter_type_and_grouping_key.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.e5ef6828ac4e_add_rls_filter_type_and_grouping_key.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.e5ef6828ac4e_add_rls_filter_type_and_grouping_key.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.e5ef6828ac4e_add_rls_filter_type_and_grouping_key.upgrade": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.f",
    "alembic.op.get_bind",
    "sqlalchemy.Column",
    "sqlalchemy.MetaData",
    "sqlalchemy.Table",
    "sqlalchemy.VARCHAR",
    "superset.utils.core.RowLevelSecurityFilterType.REGULAR.value"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e5ef6828ac4e_add_rls_filter_type_and_grouping_key.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.migrations.versions.e68c4473c581_allow_multi_schema_metadata_fetch": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.e68c4473c581_allow_multi_schema_metadata_fetch.down_revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.e68c4473c581_allow_multi_schema_metadata_fetch.downgrade": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e68c4473c581_allow_multi_schema_metadata_fetch.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.e68c4473c581_allow_multi_schema_metadata_fetch.revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.e68c4473c581_allow_multi_schema_metadata_fetch.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.e68c4473c581_allow_multi_schema_metadata_fetch.upgrade": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e866bd2d4976_smaller_grid": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.e866bd2d4976_smaller_grid.AuditMixin": {
  "data": {
   "shadows": "flask_appbuilder.models.mixins.AuditMixin"
  },
  "type": "import"
 },
 "superset.migrations.versions.e866bd2d4976_smaller_grid.Base": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.migrations.versions.e866bd2d4976_smaller_grid.Dashboard": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.e866bd2d4976_smaller_grid.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.e866bd2d4976_smaller_grid.RATIO": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.migrations.versions.e866bd2d4976_smaller_grid.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.e866bd2d4976_smaller_grid.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.e866bd2d4976_smaller_grid.down_revision": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.migrations.versions.e866bd2d4976_smaller_grid.downgrade": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "enumerate",
    "len",
    "print",
    "superset.db.Session",
    "superset.migrations.versions.e866bd2d4976_smaller_grid.Dashboard",
    "superset.migrations.versions.e866bd2d4976_smaller_grid.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e866bd2d4976_smaller_grid.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.e866bd2d4976_smaller_grid.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.e866bd2d4976_smaller_grid.revision": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.migrations.versions.e866bd2d4976_smaller_grid.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.e866bd2d4976_smaller_grid.upgrade": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "enumerate",
    "len",
    "print",
    "superset.db.Session",
    "superset.migrations.versions.e866bd2d4976_smaller_grid.Dashboard",
    "superset.migrations.versions.e866bd2d4976_smaller_grid.RATIO",
    "superset.migrations.versions.e866bd2d4976_smaller_grid.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e96dbf2cfef0_datasource_cluster_fk": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.e96dbf2cfef0_datasource_cluster_fk.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.e96dbf2cfef0_datasource_cluster_fk.down_revision": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.migrations.versions.e96dbf2cfef0_datasource_cluster_fk.downgrade": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "sqlalchemy.Column",
    "sqlalchemy.MetaData",
    "sqlalchemy.String",
    "sqlalchemy.Table",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "sqlalchemy.select",
    "superset.utils.core.generic_find_fk_constraint_name",
    "superset.utils.core.generic_find_uq_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e96dbf2cfef0_datasource_cluster_fk.generic_find_fk_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_fk_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.e96dbf2cfef0_datasource_cluster_fk.generic_find_uq_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_uq_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.e96dbf2cfef0_datasource_cluster_fk.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.e96dbf2cfef0_datasource_cluster_fk.revision": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.migrations.versions.e96dbf2cfef0_datasource_cluster_fk.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.e96dbf2cfef0_datasource_cluster_fk.upgrade": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.MetaData",
    "sqlalchemy.Table",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "sqlalchemy.select",
    "superset.utils.core.generic_find_fk_constraint_name",
    "superset.utils.core.generic_find_uq_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.Base": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.BaseMetricMixin": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.DruidMetric": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "superset.migrations.versions.e9df189e5c7e_update_base_metrics.Base",
    "superset.migrations.versions.e9df189e5c7e_update_base_metrics.BaseMetricMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.SqlMetric": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "superset.migrations.versions.e9df189e5c7e_update_base_metrics.Base",
    "superset.migrations.versions.e9df189e5c7e_update_base_metrics.BaseMetricMixin"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.conv": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.down_revision": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.downgrade": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "superset.migrations.versions.e9df189e5c7e_update_base_metrics.conv",
    "superset.utils.core.generic_find_uq_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.engine": {
  "data": {
   "shadows": "sqlalchemy.engine"
  },
  "type": "import"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.generic_find_uq_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_uq_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.revision": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.migrations.versions.e9df189e5c7e_update_base_metrics.upgrade": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.db.Session",
    "superset.migrations.versions.e9df189e5c7e_update_base_metrics.DruidMetric",
    "superset.migrations.versions.e9df189e5c7e_update_base_metrics.SqlMetric",
    "superset.migrations.versions.e9df189e5c7e_update_base_metrics.conv"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ea033256294a_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.ea033256294a_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.ea033256294a_.downgrade": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.migrations.versions.ea033256294a_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.ea033256294a_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.ea033256294a_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.ea033256294a_.upgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.ea396d202291_ctas_method_in_query": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.ea396d202291_ctas_method_in_query.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.ea396d202291_ctas_method_in_query.downgrade": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ea396d202291_ctas_method_in_query.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.ea396d202291_ctas_method_in_query.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.ea396d202291_ctas_method_in_query.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.ea396d202291_ctas_method_in_query.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ec1f88a35cc6_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.ec1f88a35cc6_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.ec1f88a35cc6_.downgrade": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "superset.migrations.versions.ec1f88a35cc6_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.ec1f88a35cc6_.upgrade": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults.Base": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults.Database": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults.down_revision": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults.downgrade": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults.revision": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults.upgrade": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.eca4694defa7_sqllab_setting_defaults.Database"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.ef8843b41dac_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.ef8843b41dac_.down_revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.ef8843b41dac_.downgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.ef8843b41dac_.revision": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.migrations.versions.ef8843b41dac_.upgrade": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "superset.migrations.versions.f0fbf6129e13_adding_verbose_name_to_tablecolumn": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.f0fbf6129e13_adding_verbose_name_to_tablecolumn.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.f0fbf6129e13_adding_verbose_name_to_tablecolumn.downgrade": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.f0fbf6129e13_adding_verbose_name_to_tablecolumn.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.f0fbf6129e13_adding_verbose_name_to_tablecolumn.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.f0fbf6129e13_adding_verbose_name_to_tablecolumn.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.f0fbf6129e13_adding_verbose_name_to_tablecolumn.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.f120347acb39_add_extra_column_to_tables_and_metrics": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.f120347acb39_add_extra_column_to_tables_and_metrics.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.f120347acb39_add_extra_column_to_tables_and_metrics.downgrade": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.f120347acb39_add_extra_column_to_tables_and_metrics.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.f120347acb39_add_extra_column_to_tables_and_metrics.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.f120347acb39_add_extra_column_to_tables_and_metrics.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.f120347acb39_add_extra_column_to_tables_and_metrics.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.f162a1dea4c4_d3format_by_metric": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.f162a1dea4c4_d3format_by_metric.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.f162a1dea4c4_d3format_by_metric.downgrade": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.f162a1dea4c4_d3format_by_metric.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.f162a1dea4c4_d3format_by_metric.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.f162a1dea4c4_d3format_by_metric.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.f162a1dea4c4_d3format_by_metric.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.f18570e03440_add_query_result_key_index": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.f18570e03440_add_query_result_key_index.down_revision": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.migrations.versions.f18570e03440_add_query_result_key_index.downgrade": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "alembic.op.drop_index",
    "alembic.op.f"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.f18570e03440_add_query_result_key_index.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.f18570e03440_add_query_result_key_index.revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.f18570e03440_add_query_result_key_index.upgrade": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "alembic.op.create_index",
    "alembic.op.f"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.f1f2d4af5b90_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.f1f2d4af5b90_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.f1f2d4af5b90_.downgrade": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.f1f2d4af5b90_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.f1f2d4af5b90_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.f1f2d4af5b90_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.f1f2d4af5b90_.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.f231d82b9b26_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.f231d82b9b26_.conv": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.migrations.versions.f231d82b9b26_.down_revision": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.migrations.versions.f231d82b9b26_.downgrade": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "alembic.op.get_bind",
    "sqlalchemy.String",
    "sqlalchemy.engine.reflection.Inspector.from_engine",
    "superset.migrations.versions.f231d82b9b26_.conv",
    "superset.migrations.versions.f231d82b9b26_.names",
    "superset.utils.core.generic_find_uq_constraint_name"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.f231d82b9b26_.generic_find_uq_constraint_name": {
  "data": {
   "shadows": "superset.utils.core.generic_find_uq_constraint_name"
  },
  "type": "import"
 },
 "superset.migrations.versions.f231d82b9b26_.names": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.migrations.versions.f231d82b9b26_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.f231d82b9b26_.revision": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.migrations.versions.f231d82b9b26_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.f231d82b9b26_.upgrade": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "alembic.op.batch_alter_table",
    "sqlalchemy.String",
    "superset.migrations.versions.f231d82b9b26_.conv",
    "superset.migrations.versions.f231d82b9b26_.names"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.f2672aa8350a_add_slack_to_alerts": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.f2672aa8350a_add_slack_to_alerts.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.f2672aa8350a_add_slack_to_alerts.downgrade": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "alembic.op.drop_column"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.f2672aa8350a_add_slack_to_alerts.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.f2672aa8350a_add_slack_to_alerts.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.f2672aa8350a_add_slack_to_alerts.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.f2672aa8350a_add_slack_to_alerts.upgrade": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "alembic.op.add_column",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.f80a3b88324b_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.f80a3b88324b_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.f80a3b88324b_.downgrade": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.migrations.versions.f80a3b88324b_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.f80a3b88324b_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.f80a3b88324b_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.f80a3b88324b_.upgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.f959a6652acd_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.f959a6652acd_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.f959a6652acd_.downgrade": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.migrations.versions.f959a6652acd_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.f959a6652acd_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.f959a6652acd_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.f959a6652acd_.upgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.Base": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.Slice": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.downgrade": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.upgrade": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "any",
    "superset.db.Session",
    "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.Slice",
    "superset.migrations.versions.f9a30386bd74_cleanup_time_grainularity.json"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declarative_base"
   ]
  },
  "type": "module"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.Base": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.Slice": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.migrations.versions.fb13d49b72f9_better_filters.Base"
   ]
  },
  "type": "class"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.declarative_base": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declarative_base"
  },
  "type": "import"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.down_revision": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.downgrade": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.fb13d49b72f9_better_filters.Slice",
    "superset.migrations.versions.fb13d49b72f9_better_filters.json",
    "superset.migrations.versions.fb13d49b72f9_better_filters.logging"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.revision": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.upgrade": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception",
    "alembic.op.get_bind",
    "superset.db.Session",
    "superset.migrations.versions.fb13d49b72f9_better_filters.Slice",
    "superset.migrations.versions.fb13d49b72f9_better_filters.logging",
    "superset.migrations.versions.fb13d49b72f9_better_filters.upgrade_slice"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.fb13d49b72f9_better_filters.upgrade_slice": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "superset.migrations.versions.fb13d49b72f9_better_filters.json",
    "superset.migrations.versions.fb13d49b72f9_better_filters.logging"
   ]
  },
  "type": "function"
 },
 "superset.migrations.versions.fbd55e0f83eb_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.fbd55e0f83eb_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.fbd55e0f83eb_.downgrade": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.migrations.versions.fbd55e0f83eb_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.fbd55e0f83eb_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.fbd55e0f83eb_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.fbd55e0f83eb_.upgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.fc480c87706c_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.fc480c87706c_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.fc480c87706c_.downgrade": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "superset.migrations.versions.fc480c87706c_.op": {
  "data": {
   "shadows": "alembic.op"
  },
  "type": "import"
 },
 "superset.migrations.versions.fc480c87706c_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.fc480c87706c_.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.migrations.versions.fc480c87706c_.upgrade": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "superset.migrations.versions.fee7b758c130_": {
  "data": {},
  "type": "module"
 },
 "superset.migrations.versions.fee7b758c130_.down_revision": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.migrations.versions.fee7b758c130_.downgrade": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "superset.migrations.versions.fee7b758c130_.revision": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.migrations.versions.fee7b758c130_.upgrade": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "superset.models": {
  "data": {},
  "type": "module"
 },
 "superset.models.alerts": {
  "data": {
   "symbols_in_volume": [
    "flask_appbuilder.Model.metadata",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Table",
    "superset.models.alerts.metadata"
   ]
  },
  "type": "module"
 },
 "superset.models.alerts.Alert": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "flask_appbuilder.Model",
    "id",
    "slice",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.relationship",
    "superset.models.alerts.alert_owner",
    "superset.models.alerts.textwrap",
    "superset.models.helpers.AuditMixinNullable",
    "superset.security_manager.user_model"
   ]
  },
  "type": "class"
 },
 "superset.models.alerts.Alert.__str__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.alerts.Alert.database": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declared_attr",
    "sqlalchemy.orm.RelationshipProperty",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "function"
 },
 "superset.models.alerts.Alert.database_id": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "int",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.ext.declarative.declared_attr"
   ]
  },
  "type": "function"
 },
 "superset.models.alerts.Alert.get_last_observation": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "list",
    "superset.db.session.query",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.alerts.Alert.pretty_config": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.models.alerts.json"
   ]
  },
  "type": "function"
 },
 "superset.models.alerts.AlertLog": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "superset.models.alerts.AlertLog.duration": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.models.alerts.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.models.alerts.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.models.alerts.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "superset.models.alerts.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.models.alerts.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.models.alerts.Float": {
  "data": {
   "shadows": "sqlalchemy.Float"
  },
  "type": "import"
 },
 "superset.models.alerts.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.models.alerts.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.models.alerts.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.models.alerts.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.models.alerts.RelationshipProperty": {
  "data": {
   "shadows": "sqlalchemy.orm.RelationshipProperty"
  },
  "type": "import"
 },
 "superset.models.alerts.SQLObservation": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Float",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship"
   ]
  },
  "type": "class"
 },
 "superset.models.alerts.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.models.alerts.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "superset.models.alerts.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.models.alerts.alert_owner": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.models.alerts.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "superset.models.alerts.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.models.alerts.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.models.alerts.declared_attr": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declared_attr"
  },
  "type": "import"
 },
 "superset.models.alerts.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.models.alerts.metadata": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.models.alerts.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.models.alerts.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.models.alerts.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "superset.models.annotations": {
  "data": {},
  "type": "module"
 },
 "superset.models.annotations.Annotation": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Index",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.relationship",
    "superset.models.annotations.AnnotationLayer",
    "superset.models.helpers.AuditMixinNullable"
   ]
  },
  "type": "class"
 },
 "superset.models.annotations.Annotation.__repr__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.annotations.Annotation.data": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.annotations.AnnotationLayer": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.models.helpers.AuditMixinNullable"
   ]
  },
  "type": "class"
 },
 "superset.models.annotations.AnnotationLayer.__repr__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.annotations.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.models.annotations.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.models.annotations.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.models.annotations.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.models.annotations.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.models.annotations.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.models.annotations.Index": {
  "data": {
   "shadows": "sqlalchemy.Index"
  },
  "type": "import"
 },
 "superset.models.annotations.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.models.annotations.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.models.annotations.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.models.annotations.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.models.annotations.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.models.cache": {
  "data": {},
  "type": "module"
 },
 "superset.models.cache.CacheKey": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Integer",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "superset.models.cache.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.models.cache.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.models.cache.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.models.cache.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.models.cache.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.models.cache.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.models.core": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "flask_appbuilder.Model.metadata",
    "sqlalchemy.event.listen",
    "superset.app.config",
    "superset.extensions.security_manager.set_perm",
    "superset.is_feature_enabled",
    "superset.models.core.Database",
    "superset.models.core.FavStar",
    "superset.models.core.config",
    "superset.models.core.logging",
    "superset.models.tags.FavStarUpdater.after_delete",
    "superset.models.tags.FavStarUpdater.after_insert"
   ]
  },
  "type": "module"
 },
 "superset.models.core.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.models.core.ArgumentError": {
  "data": {
   "shadows": "sqlalchemy.exc.ArgumentError"
  },
  "type": "import"
 },
 "superset.models.core.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.models.core.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "superset.models.core.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.models.core.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.models.core.CssTemplate": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.models.helpers.AuditMixinNullable"
   ]
  },
  "type": "class"
 },
 "superset.models.core.DB_CONNECTION_MUTATOR": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "superset.models.core.Database": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.schema.UniqueConstraint",
    "sqlalchemy_utils.EncryptedType",
    "superset.models.core.config",
    "superset.models.core.textwrap",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.helpers.ImportExportMixin",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.models.core.Database.__repr__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.allows_cost_estimate": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.allows_subquery": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.allows_virtual_table_explore": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.apply_limit_to_sql": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.backend": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "property",
    "sqlalchemy.engine.url.make_url",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.compile_sqla_query": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "sqlalchemy.sql.Select",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.connect_args": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.data": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.db_engine_spec": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "property",
    "superset.db_engine_specs.BaseEngineSpec",
    "superset.db_engine_specs.engines.get",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.default_schemas": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.explore_database_id": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.function_names": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "Exception",
    "property",
    "str",
    "superset.models.core.logger",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_all_schema_names": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "superset.extensions.cache_manager.data_cache",
    "superset.utils.cache.memoized_func",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_all_table_names_in_database": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "bool",
    "superset.extensions.cache_manager.data_cache",
    "superset.utils.cache.memoized_func",
    "superset.utils.core.DatasourceName",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_all_table_names_in_schema": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "int",
    "str",
    "superset.extensions.cache_manager.data_cache",
    "superset.models.core.logger",
    "superset.utils.cache.memoized_func",
    "superset.utils.core.DatasourceName",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_all_view_names_in_database": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "bool",
    "superset.extensions.cache_manager.data_cache",
    "superset.utils.cache.memoized_func",
    "superset.utils.core.DatasourceName",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_all_view_names_in_schema": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "int",
    "str",
    "superset.extensions.cache_manager.data_cache",
    "superset.models.core.logger",
    "superset.utils.cache.memoized_func",
    "superset.utils.core.DatasourceName",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_columns": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_db_engine_spec_for_backend": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "superset.db_engine_specs.BaseEngineSpec",
    "superset.db_engine_specs.engines.get",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_df": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "_log_query",
    "contextlib.closing",
    "mutator",
    "needs_conversion",
    "pandas.DataFrame",
    "str",
    "superset.models.core.numpy",
    "superset.models.core.sqlparse",
    "superset.result_set.SupersetResultSet",
    "superset.utils.core.get_username",
    "superset.utils.core.json_dumps_w_dates",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_df._log_query": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "__name__",
    "str",
    "superset.extensions.security_manager",
    "superset.models.core.log_query"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_df.needs_conversion": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "bool",
    "dict",
    "isinstance",
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_dialect": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "sqlalchemy.engine.Dialect",
    "sqlalchemy.engine.url.make_url",
    "superset.utils.core.memoized"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_effective_user": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "flask.g",
    "flask.g.user",
    "flask.g.user.username",
    "hasattr",
    "sqlalchemy.engine.url.URL",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_encrypted_extra": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "str",
    "superset.models.core.json",
    "superset.models.core.logger",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_extra": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_foreign_keys": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_indexes": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_password_masked_url": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "classmethod",
    "copy.deepcopy",
    "sqlalchemy.engine.url.URL",
    "superset.models.core.PASSWORD_MASK"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_password_masked_url_from_uri": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.url.URL",
    "sqlalchemy.engine.url.make_url",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_perm": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_pk_constraint": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_quoter": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_reserved_words": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_schema_access_for_csv_upload": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "flask.g",
    "flask.g.user",
    "hasattr",
    "set",
    "sorted",
    "str",
    "superset.models.core.config",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_sqla_engine": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "bool",
    "flask.request",
    "flask.request.referrer",
    "sqlalchemy.create_engine",
    "sqlalchemy.engine.Engine",
    "sqlalchemy.engine.url.make_url",
    "sqlalchemy.pool.NullPool",
    "str",
    "superset.extensions.security_manager",
    "superset.models.core.DB_CONNECTION_MUTATOR",
    "superset.models.core.logger",
    "superset.utils.core.QuerySource",
    "superset.utils.core.QuerySource.CHART",
    "superset.utils.core.QuerySource.DASHBOARD",
    "superset.utils.core.QuerySource.SQL_LAB",
    "superset.utils.core.memoized",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_table": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "sqlalchemy.MetaData",
    "sqlalchemy.Table",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.get_table_comment": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.grains": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "superset.db_engine_specs.base.TimeGrain",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.has_table": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.Table"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.has_table_by_name": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.inspector": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "property",
    "sqlalchemy.engine.reflection.Inspector",
    "sqlalchemy.inspect"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.metadata_cache_timeout": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.name": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.perm": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "sqlalchemy.String",
    "sqlalchemy.sql.expression.cast",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.safe_sqlalchemy_uri": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.schema_cache_enabled": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.schema_cache_timeout": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.select_star": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "superset.utils.core.QuerySource.SQL_LAB",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.set_sqlalchemy_uri": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "sqlalchemy.engine.url.make_url",
    "str",
    "superset.models.core.PASSWORD_MASK",
    "superset.models.core.custom_password_store"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.sql_url": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.sqlalchemy_uri_decrypted": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "ValueError",
    "property",
    "sqlalchemy.engine.url.make_url",
    "sqlalchemy.exc.ArgumentError",
    "str",
    "superset.models.core.custom_password_store"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.table_cache_enabled": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.table_cache_timeout": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.unique_name": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.core.Database.url_object": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "property",
    "sqlalchemy.engine.url.URL",
    "sqlalchemy.engine.url.make_url"
   ]
  },
  "type": "function"
 },
 "superset.models.core.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.models.core.Dialect": {
  "data": {
   "shadows": "sqlalchemy.engine.Dialect"
  },
  "type": "import"
 },
 "superset.models.core.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.models.core.EncryptedType": {
  "data": {
   "shadows": "sqlalchemy_utils.EncryptedType"
  },
  "type": "import"
 },
 "superset.models.core.Engine": {
  "data": {
   "shadows": "sqlalchemy.engine.Engine"
  },
  "type": "import"
 },
 "superset.models.core.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "superset.models.core.FavStar": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "superset.models.core.FavStarClassName": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.models.core.FavStarUpdater": {
  "data": {
   "shadows": "superset.models.tags.FavStarUpdater"
  },
  "type": "import"
 },
 "superset.models.core.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.models.core.ImportExportMixin": {
  "data": {
   "shadows": "superset.models.helpers.ImportExportMixin"
  },
  "type": "import"
 },
 "superset.models.core.Inspector": {
  "data": {
   "shadows": "sqlalchemy.engine.reflection.Inspector"
  },
  "type": "import"
 },
 "superset.models.core.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.models.core.KeyValue": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "superset.models.core.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.models.core.Log": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.relationship",
    "superset.extensions.security_manager.user_model",
    "superset.models.core.json"
   ]
  },
  "type": "class"
 },
 "superset.models.core.MetaData": {
  "data": {
   "shadows": "sqlalchemy.MetaData"
  },
  "type": "import"
 },
 "superset.models.core.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.models.core.NullPool": {
  "data": {
   "shadows": "sqlalchemy.pool.NullPool"
  },
  "type": "import"
 },
 "superset.models.core.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.models.core.PASSWORD_MASK": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "superset.models.core.Select": {
  "data": {
   "shadows": "sqlalchemy.sql.Select"
  },
  "type": "import"
 },
 "superset.models.core.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.models.core.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.models.core.SupersetResultSet": {
  "data": {
   "shadows": "superset.result_set.SupersetResultSet"
  },
  "type": "import"
 },
 "superset.models.core.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "superset.models.core.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.models.core.TimeGrain": {
  "data": {
   "shadows": "superset.db_engine_specs.base.TimeGrain"
  },
  "type": "import"
 },
 "superset.models.core.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.models.core.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.models.core.URL": {
  "data": {
   "shadows": "sqlalchemy.engine.url.URL"
  },
  "type": "import"
 },
 "superset.models.core.UniqueConstraint": {
  "data": {
   "shadows": "sqlalchemy.schema.UniqueConstraint"
  },
  "type": "import"
 },
 "superset.models.core.Url": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "sqlalchemy.engine.url",
    "superset.models.helpers.AuditMixinNullable"
   ]
  },
  "type": "class"
 },
 "superset.models.core.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.models.core.cache_manager": {
  "data": {
   "shadows": "superset.extensions.cache_manager"
  },
  "type": "import"
 },
 "superset.models.core.cache_util": {
  "data": {
   "shadows": "superset.utils.cache"
  },
  "type": "import"
 },
 "superset.models.core.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "superset.models.core.config": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "superset.models.core.create_engine": {
  "data": {
   "shadows": "sqlalchemy.create_engine"
  },
  "type": "import"
 },
 "superset.models.core.custom_password_store": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "superset.models.core.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.models.core.db_engine_specs": {
  "data": {
   "shadows": "superset.db_engine_specs"
  },
  "type": "import"
 },
 "superset.models.core.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "superset.models.core.expression": {
  "data": {
   "shadows": "sqlalchemy.sql.expression"
  },
  "type": "import"
 },
 "superset.models.core.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.models.core.hybrid_property": {
  "data": {
   "shadows": "sqlalchemy.ext.hybrid.hybrid_property"
  },
  "type": "import"
 },
 "superset.models.core.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.models.core.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.models.core.log_query": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "superset.models.core.logger": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "superset.models.core.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.models.core.make_url": {
  "data": {
   "shadows": "sqlalchemy.engine.url.make_url"
  },
  "type": "import"
 },
 "superset.models.core.metadata": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "superset.models.core.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "superset.models.core.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.models.core.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.models.core.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.models.core.security_manager": {
  "data": {
   "shadows": "superset.extensions.security_manager"
  },
  "type": "import"
 },
 "superset.models.core.sqla": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.models.core.sqlparse": {
  "data": {
   "shadows": "sqlparse"
  },
  "type": "import"
 },
 "superset.models.core.stats_logger": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "superset.models.core.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "superset.models.core.url": {
  "data": {
   "shadows": "sqlalchemy.engine.url"
  },
  "type": "import"
 },
 "superset.models.core.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.models.dashboard": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "flask_appbuilder.Model.metadata",
    "flask_appbuilder.security.sqla.models.User",
    "functools.partial",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Table",
    "sqlalchemy.UniqueConstraint",
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.event.listen",
    "sqlalchemy.orm.mapper.Mapper",
    "superset.app.config",
    "superset.connectors.base.models.BaseDatasource",
    "superset.connectors.druid.models.DruidColumn",
    "superset.connectors.druid.models.DruidMetric",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.connectors.sqla.models.TableColumn",
    "superset.is_feature_enabled",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.OnDashboardChange",
    "superset.models.dashboard.clear_dashboard_cache",
    "superset.models.dashboard.copy_dashboard",
    "superset.models.dashboard.logging",
    "superset.models.dashboard.metadata",
    "superset.models.slice.Slice",
    "superset.models.tags.DashboardUpdater.after_delete",
    "superset.models.tags.DashboardUpdater.after_insert",
    "superset.models.tags.DashboardUpdater.after_update",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "module"
 },
 "superset.models.dashboard.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.models.dashboard.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.models.dashboard.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.models.dashboard.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "superset.models.dashboard.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.models.dashboard.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.models.dashboard.Connection": {
  "data": {
   "shadows": "sqlalchemy.engine.base.Connection"
  },
  "type": "import"
 },
 "superset.models.dashboard.ConnectorRegistry": {
  "data": {
   "shadows": "superset.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.models.dashboard.Dashboard": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.relationship",
    "superset.models.dashboard.dashboard_slices",
    "superset.models.dashboard.dashboard_user",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.helpers.ImportExportMixin",
    "superset.models.slice.Slice",
    "superset.security_manager.user_model",
    "superset.utils.core.MediumText"
   ]
  },
  "type": "class"
 },
 "superset.models.dashboard.Dashboard.__repr__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.changed_by_name": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.changed_by_url": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.charts": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "property",
    "superset.connectors.base.models.BaseDatasource",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.clear_cache": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "superset.extensions.cache_manager.cache.delete_memoized",
    "superset.models.dashboard.Dashboard",
    "superset.utils.decorators.debounce"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.clear_cache_for_datasource": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "int",
    "sqlalchemy.sql.join",
    "sqlalchemy.sql.select",
    "superset.db.engine.execute",
    "superset.models.dashboard.dashboard_slices",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.datasource_id",
    "superset.models.slice.Slice.id",
    "superset.utils.decorators.debounce"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.clear_cache_for_slice": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "int",
    "sqlalchemy.sql.select",
    "superset.db.engine.execute",
    "superset.models.dashboard.dashboard_slices",
    "superset.utils.decorators.debounce"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.dashboard_link": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "flask_appbuilder.models.decorators.renders",
    "markupsafe.Markup",
    "markupsafe.escape"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.data": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.models.dashboard.json",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.datasources": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "property",
    "superset.connectors.base.models.BaseDatasource",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.digest": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.utils.core.md5_hex"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.export_dashboards": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "classmethod",
    "getattr",
    "int",
    "set",
    "sqlalchemy.orm.subqueryload",
    "str",
    "superset.ConnectorRegistry.get_eager_datasource",
    "superset.db.session",
    "superset.db.session.query",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.json",
    "superset.utils.core.DashboardEncoder",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.full_data": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "str",
    "superset.extensions.cache_manager.cache.memoize",
    "superset.is_feature_enabled",
    "superset.utils.core.indexed",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.params": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.position": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.models.dashboard.json",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.sqla_metadata": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "property",
    "sqlalchemy.MetaData"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.table_names": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.thumbnail_url": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.update_thumbnail": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "superset.tasks.thumbnails.cache_dashboard_thumbnail.delay",
    "superset.utils.urls.get_url_path"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.Dashboard.url": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.DashboardUpdater": {
  "data": {
   "shadows": "superset.models.tags.DashboardUpdater"
  },
  "type": "import"
 },
 "superset.models.dashboard.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.models.dashboard.DruidColumn": {
  "data": {
   "shadows": "superset.connectors.druid.models.DruidColumn"
  },
  "type": "import"
 },
 "superset.models.dashboard.DruidMetric": {
  "data": {
   "shadows": "superset.connectors.druid.models.DruidMetric"
  },
  "type": "import"
 },
 "superset.models.dashboard.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.models.dashboard.ImportExportMixin": {
  "data": {
   "shadows": "superset.models.helpers.ImportExportMixin"
  },
  "type": "import"
 },
 "superset.models.dashboard.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.models.dashboard.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.models.dashboard.Mapper": {
  "data": {
   "shadows": "sqlalchemy.orm.mapper.Mapper"
  },
  "type": "import"
 },
 "superset.models.dashboard.Markup": {
  "data": {
   "shadows": "markupsafe.Markup"
  },
  "type": "import"
 },
 "superset.models.dashboard.MetaData": {
  "data": {
   "shadows": "sqlalchemy.MetaData"
  },
  "type": "import"
 },
 "superset.models.dashboard.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.models.dashboard.OnDashboardChange": {
  "data": {
   "lineno": 351
  },
  "type": "constant"
 },
 "superset.models.dashboard.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.models.dashboard.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.models.dashboard.SqlMetric": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlMetric"
  },
  "type": "import"
 },
 "superset.models.dashboard.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.models.dashboard.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "superset.models.dashboard.TableColumn": {
  "data": {
   "shadows": "superset.connectors.sqla.models.TableColumn"
  },
  "type": "import"
 },
 "superset.models.dashboard.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.models.dashboard.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.models.dashboard.UniqueConstraint": {
  "data": {
   "shadows": "sqlalchemy.UniqueConstraint"
  },
  "type": "import"
 },
 "superset.models.dashboard.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.models.dashboard.UserAttribute": {
  "data": {
   "shadows": "superset.models.user_attributes.UserAttribute"
  },
  "type": "import"
 },
 "superset.models.dashboard.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.models.dashboard.cache_dashboard_thumbnail": {
  "data": {
   "shadows": "superset.tasks.thumbnails.cache_dashboard_thumbnail"
  },
  "type": "import"
 },
 "superset.models.dashboard.cache_manager": {
  "data": {
   "shadows": "superset.extensions.cache_manager"
  },
  "type": "import"
 },
 "superset.models.dashboard.clear_dashboard_cache": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.orm.mapper.Mapper",
    "sqlalchemy.orm.session.object_session",
    "superset.connectors.base.models.BaseDatasource",
    "superset.connectors.druid.models.DruidColumn",
    "superset.connectors.druid.models.DruidMetric",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.connectors.sqla.models.TableColumn",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.config": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "superset.models.dashboard.copy_dashboard": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Dashboard",
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "session_class",
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.orm.mapper.Mapper",
    "sqlalchemy.orm.sessionmaker",
    "superset.models.dashboard.config",
    "superset.models.user_attributes.UserAttribute"
   ]
  },
  "type": "function"
 },
 "superset.models.dashboard.dashboard_slices": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "superset.models.dashboard.dashboard_user": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "superset.models.dashboard.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.models.dashboard.debounce": {
  "data": {
   "shadows": "superset.utils.decorators.debounce"
  },
  "type": "import"
 },
 "superset.models.dashboard.escape": {
  "data": {
   "shadows": "markupsafe.escape"
  },
  "type": "import"
 },
 "superset.models.dashboard.get_url_path": {
  "data": {
   "shadows": "superset.utils.urls.get_url_path"
  },
  "type": "import"
 },
 "superset.models.dashboard.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.models.dashboard.join": {
  "data": {
   "shadows": "sqlalchemy.sql.join"
  },
  "type": "import"
 },
 "superset.models.dashboard.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.models.dashboard.logger": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "superset.models.dashboard.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.models.dashboard.metadata": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "superset.models.dashboard.object_session": {
  "data": {
   "shadows": "sqlalchemy.orm.session.object_session"
  },
  "type": "import"
 },
 "superset.models.dashboard.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "superset.models.dashboard.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.models.dashboard.renders": {
  "data": {
   "shadows": "flask_appbuilder.models.decorators.renders"
  },
  "type": "import"
 },
 "superset.models.dashboard.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.models.dashboard.select": {
  "data": {
   "shadows": "sqlalchemy.sql.select"
  },
  "type": "import"
 },
 "superset.models.dashboard.sessionmaker": {
  "data": {
   "shadows": "sqlalchemy.orm.sessionmaker"
  },
  "type": "import"
 },
 "superset.models.dashboard.sqla": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.models.dashboard.subqueryload": {
  "data": {
   "shadows": "sqlalchemy.orm.subqueryload"
  },
  "type": "import"
 },
 "superset.models.dashboard.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request": {
  "data": {
   "symbols_in_volume": [
    "superset.app.config",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.models.datasource_access_request.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request.ConnectorRegistry": {
  "data": {
   "shadows": "superset.connectors.connector_registry.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request.DatasourceAccessRequest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "set",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "superset.models.datasource_access_request.config",
    "superset.models.helpers.AuditMixinNullable"
   ]
  },
  "type": "class"
 },
 "superset.models.datasource_access_request.DatasourceAccessRequest.cls_model": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property",
    "superset.connectors.connector_registry.ConnectorRegistry.sources",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.models.datasource_access_request.DatasourceAccessRequest.datasource": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "superset.models.datasource_access_request.DatasourceAccessRequest.datasource_link": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "flask.Markup",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.datasource_access_request.DatasourceAccessRequest.get_datasource": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "superset.db.session.query",
    "superset.utils.core.memoized"
   ]
  },
  "type": "function"
 },
 "superset.models.datasource_access_request.DatasourceAccessRequest.roles_with_datasource": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.security_manager.find_permission_view_menu"
   ]
  },
  "type": "function"
 },
 "superset.models.datasource_access_request.DatasourceAccessRequest.user_roles": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.datasource_access_request.DatasourceAccessRequest.username": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "flask.Markup",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.models.datasource_access_request.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request.Markup": {
  "data": {
   "shadows": "flask.Markup"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request.config": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.models.datasource_access_request.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.models.datasource_access_request.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.models.dynamic_plugins": {
  "data": {},
  "type": "module"
 },
 "superset.models.dynamic_plugins.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.models.dynamic_plugins.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.models.dynamic_plugins.DynamicPlugin": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.Text",
    "superset.models.helpers.AuditMixinNullable"
   ]
  },
  "type": "class"
 },
 "superset.models.dynamic_plugins.DynamicPlugin.__repr__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.dynamic_plugins.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.models.dynamic_plugins.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.models.dynamic_plugins.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.models.helpers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.models.helpers.logging"
   ]
  },
  "type": "module"
 },
 "superset.models.helpers.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.models.helpers.AuditMixin": {
  "data": {
   "shadows": "flask_appbuilder.models.mixins.AuditMixin"
  },
  "type": "import"
 },
 "superset.models.helpers.AuditMixinNullable": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "flask_appbuilder.models.mixins.AuditMixin",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime"
   ]
  },
  "type": "class"
 },
 "superset.models.helpers.AuditMixinNullable.changed_by_": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "flask.Markup",
    "property",
    "str",
    "superset.models.helpers._user_link",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.AuditMixinNullable.changed_by_fk": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.ext.declarative.declared_attr"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.AuditMixinNullable.changed_by_name": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "flask.escape",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.AuditMixinNullable.changed_on_": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "flask.Markup",
    "flask_appbuilder.models.decorators.renders"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.AuditMixinNullable.changed_on_delta_humanized": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "flask_appbuilder.models.decorators.renders",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.AuditMixinNullable.changed_on_humanized": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "property",
    "str",
    "superset.models.helpers.humanize"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.AuditMixinNullable.changed_on_utc": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "flask_appbuilder.models.decorators.renders",
    "str",
    "superset.models.helpers.pytz"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.AuditMixinNullable.created_by_fk": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.ext.declarative.declared_attr"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.AuditMixinNullable.creator": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "flask.Markup",
    "flask_appbuilder.models.decorators.renders",
    "str",
    "superset.models.helpers._user_link",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.AuditMixinNullable.modified": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "flask.Markup",
    "flask_appbuilder.models.decorators.renders"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.models.helpers.ExtraJSONMixin": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "superset.models.helpers.ExtraJSONMixin.extra": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "TypeError",
    "json.decoder.JSONDecodeError",
    "property",
    "str",
    "superset.models.helpers.json",
    "superset.models.helpers.logger",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ExtraJSONMixin.set_extra_json": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "str",
    "superset.models.helpers.json",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ExtraJSONMixin.set_extra_json_key": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "str",
    "superset.models.helpers.json",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ImportExportMixin": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "sqlalchemy.orm.Mapper",
    "sqlalchemy_utils.UUIDType",
    "str",
    "superset.models.helpers.uuid",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.models.helpers.ImportExportMixin._unique_constrains": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "sqlalchemy.UniqueConstraint",
    "str",
    "typing.List",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ImportExportMixin.alter_params": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "superset.models.helpers.json",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ImportExportMixin.copy": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ImportExportMixin.export_schema": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "formatter",
    "set",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ImportExportMixin.export_schema.formatter": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "sqlalchemy.Column",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ImportExportMixin.export_to_dict": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "bool",
    "cls",
    "cls.__mapper__.relationships.get",
    "cls.__table__.columns",
    "cls.export_parent",
    "enumerate",
    "getattr",
    "len",
    "set",
    "sorted",
    "str",
    "superset.models.helpers.convert_uuids",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ImportExportMixin.import_from_dict": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "classmethod",
    "cls",
    "cls.__mapper__.relationships.argument.class_",
    "cls.export_children",
    "cls.export_parent",
    "getattr",
    "list",
    "set",
    "setattr",
    "sqlalchemy.and_",
    "sqlalchemy.or_",
    "sqlalchemy.orm.Session",
    "sqlalchemy.orm.exc.MultipleResultsFound",
    "str",
    "superset.models.helpers.logger",
    "superset.models.helpers.yaml",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ImportExportMixin.override": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "getattr",
    "setattr",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ImportExportMixin.params_dict": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "property",
    "superset.models.helpers.json_to_dict",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ImportExportMixin.parent_foreign_key_mappings": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ImportExportMixin.remove_params": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "str",
    "superset.models.helpers.json"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ImportExportMixin.reset_ownership": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "flask.g",
    "flask.g.user",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.ImportExportMixin.template_params_dict": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "property",
    "superset.models.helpers.json_to_dict",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.JSONDecodeError": {
  "data": {
   "shadows": "json.decoder.JSONDecodeError"
  },
  "type": "import"
 },
 "superset.models.helpers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.models.helpers.Mapper": {
  "data": {
   "shadows": "sqlalchemy.orm.Mapper"
  },
  "type": "import"
 },
 "superset.models.helpers.Markup": {
  "data": {
   "shadows": "flask.Markup"
  },
  "type": "import"
 },
 "superset.models.helpers.MultipleResultsFound": {
  "data": {
   "shadows": "sqlalchemy.orm.exc.MultipleResultsFound"
  },
  "type": "import"
 },
 "superset.models.helpers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.models.helpers.QueryResult": {
  "data": {
   "lineno": 435
  },
  "type": "class"
 },
 "superset.models.helpers.QueryResult.__init__": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "datetime.timedelta",
    "pandas.DataFrame",
    "str",
    "superset.utils.core.QueryStatus.SUCCESS",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.QueryStatus": {
  "data": {
   "shadows": "superset.utils.core.QueryStatus"
  },
  "type": "import"
 },
 "superset.models.helpers.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.models.helpers.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.models.helpers.UUIDType": {
  "data": {
   "shadows": "sqlalchemy_utils.UUIDType"
  },
  "type": "import"
 },
 "superset.models.helpers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.models.helpers.UniqueConstraint": {
  "data": {
   "shadows": "sqlalchemy.UniqueConstraint"
  },
  "type": "import"
 },
 "superset.models.helpers.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.models.helpers._user_link": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "flask.Markup",
    "flask.escape",
    "flask_appbuilder.security.sqla.models.User",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "superset.models.helpers.convert_uuids": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "str",
    "superset.models.helpers.uuid",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.models.helpers.declared_attr": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declared_attr"
  },
  "type": "import"
 },
 "superset.models.helpers.escape": {
  "data": {
   "shadows": "flask.escape"
  },
  "type": "import"
 },
 "superset.models.helpers.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.models.helpers.humanize": {
  "data": {
   "shadows": "humanize"
  },
  "type": "import"
 },
 "superset.models.helpers.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.models.helpers.json_to_dict": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "str",
    "superset.models.helpers.json",
    "superset.models.helpers.re",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.helpers.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.models.helpers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.models.helpers.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.models.helpers.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.models.helpers.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "superset.models.helpers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.models.helpers.renders": {
  "data": {
   "shadows": "flask_appbuilder.models.decorators.renders"
  },
  "type": "import"
 },
 "superset.models.helpers.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.models.helpers.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.models.helpers.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "superset.models.helpers.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "superset.models.reports": {
  "data": {
   "symbols_in_volume": [
    "flask_appbuilder.Model.metadata",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Table",
    "sqlalchemy.schema.UniqueConstraint",
    "superset.models.reports.metadata"
   ]
  },
  "type": "module"
 },
 "superset.models.reports.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.models.reports.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "superset.models.reports.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.models.reports.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.models.reports.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.models.reports.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.models.reports.Float": {
  "data": {
   "shadows": "sqlalchemy.Float"
  },
  "type": "import"
 },
 "superset.models.reports.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.models.reports.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.models.reports.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.models.reports.ReportEmailFormat": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "str",
    "superset.models.reports.enum"
   ]
  },
  "type": "class"
 },
 "superset.models.reports.ReportExecutionLog": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Float",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship",
    "superset.models.reports.ReportSchedule"
   ]
  },
  "type": "class"
 },
 "superset.models.reports.ReportRecipientType": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "str",
    "superset.models.reports.enum"
   ]
  },
  "type": "class"
 },
 "superset.models.reports.ReportRecipients": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.reports.ReportSchedule",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.models.reports.ReportSchedule": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.Float",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.relationship",
    "sqlalchemy.schema.UniqueConstraint",
    "superset.extensions.security_manager.user_model",
    "superset.models.core.Database",
    "superset.models.dashboard.Dashboard",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.reports.ReportState",
    "superset.models.reports.report_schedule_user",
    "superset.models.slice.Slice",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.models.reports.ReportSchedule.__repr__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.reports.ReportSchedule.crontab_humanized": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "cron_descriptor.get_description",
    "flask_appbuilder.models.decorators.renders",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.reports.ReportScheduleType": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "str",
    "superset.models.reports.enum"
   ]
  },
  "type": "class"
 },
 "superset.models.reports.ReportScheduleValidatorType": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "str",
    "superset.models.reports.enum"
   ]
  },
  "type": "class"
 },
 "superset.models.reports.ReportState": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "str",
    "superset.models.reports.enum"
   ]
  },
  "type": "class"
 },
 "superset.models.reports.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.models.reports.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.models.reports.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "superset.models.reports.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.models.reports.UniqueConstraint": {
  "data": {
   "shadows": "sqlalchemy.schema.UniqueConstraint"
  },
  "type": "import"
 },
 "superset.models.reports.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "superset.models.reports.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "superset.models.reports.get_description": {
  "data": {
   "shadows": "cron_descriptor.get_description"
  },
  "type": "import"
 },
 "superset.models.reports.metadata": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.models.reports.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.models.reports.renders": {
  "data": {
   "shadows": "flask_appbuilder.models.decorators.renders"
  },
  "type": "import"
 },
 "superset.models.reports.report_schedule_user": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "superset.models.reports.security_manager": {
  "data": {
   "shadows": "superset.extensions.security_manager"
  },
  "type": "import"
 },
 "superset.models.schedules": {
  "data": {
   "symbols_in_volume": [
    "flask_appbuilder.Model.metadata"
   ]
  },
  "type": "module"
 },
 "superset.models.schedules.Alert": {
  "data": {
   "shadows": "superset.models.alerts.Alert"
  },
  "type": "import"
 },
 "superset.models.schedules.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.models.schedules.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "superset.models.schedules.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.models.schedules.DashboardEmailSchedule": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.helpers.ImportExportMixin",
    "superset.models.schedules.EmailSchedule"
   ]
  },
  "type": "class"
 },
 "superset.models.schedules.EmailDeliveryType": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "str",
    "superset.models.schedules.enum"
   ]
  },
  "type": "class"
 },
 "superset.models.schedules.EmailSchedule": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.Enum",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "superset.models.schedules.EmailDeliveryType"
   ]
  },
  "type": "class"
 },
 "superset.models.schedules.EmailSchedule.user": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sqlalchemy.ext.declarative.declared_attr",
    "sqlalchemy.orm.RelationshipProperty",
    "sqlalchemy.orm.relationship",
    "superset.security_manager.user_model"
   ]
  },
  "type": "function"
 },
 "superset.models.schedules.EmailSchedule.user_id": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "int",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.ext.declarative.declared_attr"
   ]
  },
  "type": "function"
 },
 "superset.models.schedules.Enum": {
  "data": {
   "shadows": "sqlalchemy.Enum"
  },
  "type": "import"
 },
 "superset.models.schedules.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.models.schedules.ImportExportMixin": {
  "data": {
   "shadows": "superset.models.helpers.ImportExportMixin"
  },
  "type": "import"
 },
 "superset.models.schedules.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.models.schedules.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.models.schedules.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.models.schedules.RelationshipProperty": {
  "data": {
   "shadows": "sqlalchemy.orm.RelationshipProperty"
  },
  "type": "import"
 },
 "superset.models.schedules.ScheduleType": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "slice",
    "str",
    "superset.models.schedules.enum"
   ]
  },
  "type": "class"
 },
 "superset.models.schedules.SliceEmailReportFormat": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "str",
    "superset.models.schedules.enum"
   ]
  },
  "type": "class"
 },
 "superset.models.schedules.SliceEmailSchedule": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "slice",
    "sqlalchemy.Column",
    "sqlalchemy.Enum",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.helpers.ImportExportMixin",
    "superset.models.schedules.EmailSchedule",
    "superset.models.schedules.SliceEmailReportFormat"
   ]
  },
  "type": "class"
 },
 "superset.models.schedules.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.models.schedules.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.models.schedules.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.models.schedules.declared_attr": {
  "data": {
   "shadows": "sqlalchemy.ext.declarative.declared_attr"
  },
  "type": "import"
 },
 "superset.models.schedules.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "superset.models.schedules.get_scheduler_model": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "str",
    "superset.models.alerts.Alert",
    "superset.models.schedules.DashboardEmailSchedule",
    "superset.models.schedules.EmailSchedule",
    "superset.models.schedules.ScheduleType",
    "superset.models.schedules.SliceEmailSchedule",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.models.schedules.metadata": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.models.schedules.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.models.schedules.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.models.slice": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "flask_appbuilder.Model.metadata",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.Table",
    "sqlalchemy.event.listen",
    "superset.is_feature_enabled",
    "superset.models.slice.Slice",
    "superset.models.slice.event_after_chart_changed",
    "superset.models.slice.logging",
    "superset.models.slice.metadata",
    "superset.models.slice.set_related_perm",
    "superset.models.tags.ChartUpdater.after_delete",
    "superset.models.tags.ChartUpdater.after_insert",
    "superset.models.tags.ChartUpdater.after_update",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.models.slice.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.models.slice.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.models.slice.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.models.slice.BaseViz": {
  "data": {
   "shadows": "superset.viz.BaseViz"
  },
  "type": "import"
 },
 "superset.models.slice.ChartUpdater": {
  "data": {
   "shadows": "superset.models.tags.ChartUpdater"
  },
  "type": "import"
 },
 "superset.models.slice.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.models.slice.Connection": {
  "data": {
   "shadows": "sqlalchemy.engine.base.Connection"
  },
  "type": "import"
 },
 "superset.models.slice.ConnectorRegistry": {
  "data": {
   "shadows": "superset.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.models.slice.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.models.slice.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.models.slice.ImportExportMixin": {
  "data": {
   "shadows": "superset.models.helpers.ImportExportMixin"
  },
  "type": "import"
 },
 "superset.models.slice.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.models.slice.Mapper": {
  "data": {
   "shadows": "sqlalchemy.orm.mapper.Mapper"
  },
  "type": "import"
 },
 "superset.models.slice.Markup": {
  "data": {
   "shadows": "markupsafe.Markup"
  },
  "type": "import"
 },
 "superset.models.slice.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.models.slice.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.models.slice.Slice": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.relationship",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.helpers.ImportExportMixin",
    "superset.models.slice.slice_user",
    "superset.security_manager.user_model"
   ]
  },
  "type": "class"
 },
 "superset.models.slice.Slice.__repr__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.changed_by_url": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.chart": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.clone": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "superset.models.slice.Slice"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.cls_model": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "property",
    "superset.ConnectorRegistry.sources",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.data": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Exception",
    "property",
    "str",
    "superset.models.slice.logger",
    "superset.utils.core.get_form_data_token",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.datasource": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.datasource_edit_url": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.datasource_link": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "flask_appbuilder.models.decorators.renders",
    "markupsafe.Markup",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.datasource_name_text": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.datasource_url": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "flask_appbuilder.models.decorators.renders",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.description_markeddown": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.utils.core.markdown"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.digest": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.utils.core.md5_hex"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.edit_url": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.explore_json_url": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.form_data": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "Exception",
    "property",
    "str",
    "superset.legacy.update_time_range",
    "superset.models.slice.json",
    "superset.models.slice.logger",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.get_datasource": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "superset.db.session.query",
    "superset.utils.core.memoized",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.get_explore_url": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "str",
    "superset.models.slice.json",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.icons": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.json_data": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.models.slice.json"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.slice_link": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "markupsafe.Markup",
    "markupsafe.escape",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.slice_url": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.thumbnail_url": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.url": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.Slice.viz": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "property",
    "superset.models.slice.json",
    "superset.utils.core.memoized",
    "superset.viz.BaseViz",
    "superset.viz.viz_types.get",
    "typing.Optional",
    "viz_class"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.models.slice.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.models.slice.Table": {
  "data": {
   "shadows": "sqlalchemy.Table"
  },
  "type": "import"
 },
 "superset.models.slice.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.models.slice.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.models.slice.cache_chart_thumbnail": {
  "data": {
   "shadows": "superset.tasks.thumbnails.cache_chart_thumbnail"
  },
  "type": "import"
 },
 "superset.models.slice.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.models.slice.escape": {
  "data": {
   "shadows": "markupsafe.escape"
  },
  "type": "import"
 },
 "superset.models.slice.event_after_chart_changed": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.orm.mapper.Mapper",
    "superset.models.slice.Slice",
    "superset.tasks.thumbnails.cache_chart_thumbnail.delay",
    "superset.utils.urls.get_url_path"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.get_url_path": {
  "data": {
   "shadows": "superset.utils.urls.get_url_path"
  },
  "type": "import"
 },
 "superset.models.slice.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.models.slice.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.models.slice.logger": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "superset.models.slice.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.models.slice.metadata": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "superset.models.slice.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "superset.models.slice.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.models.slice.renders": {
  "data": {
   "shadows": "flask_appbuilder.models.decorators.renders"
  },
  "type": "import"
 },
 "superset.models.slice.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.models.slice.set_related_perm": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "int",
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.orm.mapper.Mapper",
    "superset.db.session.query",
    "superset.models.slice.Slice"
   ]
  },
  "type": "function"
 },
 "superset.models.slice.slice_user": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "superset.models.slice.sqla": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.models.slice.update_time_range": {
  "data": {
   "shadows": "superset.legacy.update_time_range"
  },
  "type": "import"
 },
 "superset.models.slice.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.models.slice.viz_types": {
  "data": {
   "shadows": "superset.viz.viz_types"
  },
  "type": "import"
 },
 "superset.models.sql_lab": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.event.listen",
    "superset.models.sql_lab.SavedQuery",
    "superset.models.tags.QueryUpdater.after_delete",
    "superset.models.tags.QueryUpdater.after_insert",
    "superset.models.tags.QueryUpdater.after_update"
   ]
  },
  "type": "module"
 },
 "superset.models.sql_lab.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.models.sql_lab.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.models.sql_lab.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "superset.models.sql_lab.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.models.sql_lab.CtasMethod": {
  "data": {
   "shadows": "superset.sql_parse.CtasMethod"
  },
  "type": "import"
 },
 "superset.models.sql_lab.DateTime": {
  "data": {
   "shadows": "sqlalchemy.DateTime"
  },
  "type": "import"
 },
 "superset.models.sql_lab.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.models.sql_lab.ExtraJSONMixin": {
  "data": {
   "shadows": "superset.models.helpers.ExtraJSONMixin"
  },
  "type": "import"
 },
 "superset.models.sql_lab.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.models.sql_lab.ImportExportMixin": {
  "data": {
   "shadows": "superset.models.helpers.ImportExportMixin"
  },
  "type": "import"
 },
 "superset.models.sql_lab.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.models.sql_lab.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.models.sql_lab.Markup": {
  "data": {
   "shadows": "flask.Markup"
  },
  "type": "import"
 },
 "superset.models.sql_lab.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.models.sql_lab.Numeric": {
  "data": {
   "shadows": "sqlalchemy.Numeric"
  },
  "type": "import"
 },
 "superset.models.sql_lab.ParsedQuery": {
  "data": {
   "shadows": "superset.sql_parse.ParsedQuery"
  },
  "type": "import"
 },
 "superset.models.sql_lab.Query": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Index",
    "sqlalchemy.Integer",
    "sqlalchemy.Numeric",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship",
    "superset.models.helpers.ExtraJSONMixin",
    "superset.security_manager.user_model",
    "superset.sql_parse.CtasMethod.TABLE",
    "superset.utils.core.QueryStatus.PENDING"
   ]
  },
  "type": "class"
 },
 "superset.models.sql_lab.Query.database_name": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.Query.name": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "property",
    "str",
    "superset.models.sql_lab.re"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.Query.raise_for_access": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "superset.security_manager.raise_for_access"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.Query.sql_tables": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "list",
    "property",
    "superset.sql_parse.ParsedQuery",
    "superset.sql_parse.Table",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.Query.to_dict": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.user_label",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.Query.username": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.QueryStatus": {
  "data": {
   "shadows": "superset.utils.core.QueryStatus"
  },
  "type": "import"
 },
 "superset.models.sql_lab.QueryUpdater": {
  "data": {
   "shadows": "superset.models.tags.QueryUpdater"
  },
  "type": "import"
 },
 "superset.models.sql_lab.SavedQuery": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.DateTime",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.backref",
    "sqlalchemy.orm.relationship",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.helpers.ExtraJSONMixin",
    "superset.models.helpers.ImportExportMixin",
    "superset.security_manager.user_model"
   ]
  },
  "type": "class"
 },
 "superset.models.sql_lab.SavedQuery.__repr__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.SavedQuery._last_run_delta_humanized": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "humanize.naturaltime",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.SavedQuery.last_run_delta_humanized": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "flask_appbuilder.models.decorators.renders",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.SavedQuery.last_run_humanized": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "humanize.naturaltime",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.SavedQuery.pop_tab_link": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "flask.Markup",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.SavedQuery.sql_tables": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "list",
    "property",
    "superset.sql_parse.ParsedQuery",
    "superset.sql_parse.Table",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.SavedQuery.sqlalchemy_uri": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "property",
    "sqlalchemy.engine.url.URL"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.SavedQuery.url": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.SavedQuery.user_email": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.models.sql_lab.TabState": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.relationship",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.helpers.ExtraJSONMixin"
   ]
  },
  "type": "class"
 },
 "superset.models.sql_lab.TabState.to_dict": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.Table": {
  "data": {
   "shadows": "superset.sql_parse.Table"
  },
  "type": "import"
 },
 "superset.models.sql_lab.TableSchema": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text",
    "sqlalchemy.orm.relationship",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.helpers.ExtraJSONMixin"
   ]
  },
  "type": "class"
 },
 "superset.models.sql_lab.TableSchema.to_dict": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "simplejson.JSONDecodeError",
    "simplejson.loads",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_lab.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.models.sql_lab.URL": {
  "data": {
   "shadows": "sqlalchemy.engine.url.URL"
  },
  "type": "import"
 },
 "superset.models.sql_lab.backref": {
  "data": {
   "shadows": "sqlalchemy.orm.backref"
  },
  "type": "import"
 },
 "superset.models.sql_lab.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.models.sql_lab.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.models.sql_lab.naturaltime": {
  "data": {
   "shadows": "humanize.naturaltime"
  },
  "type": "import"
 },
 "superset.models.sql_lab.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.models.sql_lab.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.models.sql_lab.renders": {
  "data": {
   "shadows": "flask_appbuilder.models.decorators.renders"
  },
  "type": "import"
 },
 "superset.models.sql_lab.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.models.sql_lab.sqla": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.models.sql_lab.user_label": {
  "data": {
   "shadows": "superset.utils.core.user_label"
  },
  "type": "import"
 },
 "superset.models.sql_types": {
  "data": {},
  "type": "module"
 },
 "superset.models.sql_types.presto_sql_types": {
  "data": {},
  "type": "module"
 },
 "superset.models.sql_types.presto_sql_types.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.models.sql_types.presto_sql_types.Array": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "sqlalchemy.sql.type_api.TypeEngine"
   ]
  },
  "type": "class"
 },
 "superset.models.sql_types.presto_sql_types.Array._compiler_dispatch": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.sql.visitors.Visitable",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_types.presto_sql_types.Array.python_type": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "list",
    "property",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_types.presto_sql_types.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.models.sql_types.presto_sql_types.Integer": {
  "data": {
   "shadows": "sqlalchemy.sql.sqltypes.Integer"
  },
  "type": "import"
 },
 "superset.models.sql_types.presto_sql_types.Interval": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sqlalchemy.sql.type_api.TypeEngine"
   ]
  },
  "type": "class"
 },
 "superset.models.sql_types.presto_sql_types.Interval._compiler_dispatch": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.sql.visitors.Visitable",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_types.presto_sql_types.Interval.python_type": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property",
    "typing.Any",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_types.presto_sql_types.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.models.sql_types.presto_sql_types.Map": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "sqlalchemy.sql.type_api.TypeEngine"
   ]
  },
  "type": "class"
 },
 "superset.models.sql_types.presto_sql_types.Map._compiler_dispatch": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.sql.visitors.Visitable",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_types.presto_sql_types.Map.python_type": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "dict",
    "property",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_types.presto_sql_types.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.models.sql_types.presto_sql_types.Row": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "sqlalchemy.sql.type_api.TypeEngine"
   ]
  },
  "type": "class"
 },
 "superset.models.sql_types.presto_sql_types.Row._compiler_dispatch": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.sql.visitors.Visitable",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_types.presto_sql_types.Row.python_type": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property",
    "typing.Any",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_types.presto_sql_types.TinyInteger": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "sqlalchemy.sql.sqltypes.Integer"
   ]
  },
  "type": "class"
 },
 "superset.models.sql_types.presto_sql_types.TinyInteger._compiler_dispatch": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.sql.visitors.Visitable",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_types.presto_sql_types.TinyInteger.python_type": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.models.sql_types.presto_sql_types.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.models.sql_types.presto_sql_types.TypeEngine": {
  "data": {
   "shadows": "sqlalchemy.sql.type_api.TypeEngine"
  },
  "type": "import"
 },
 "superset.models.sql_types.presto_sql_types.Visitable": {
  "data": {
   "shadows": "sqlalchemy.sql.visitors.Visitable"
  },
  "type": "import"
 },
 "superset.models.tags": {
  "data": {
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "sqlalchemy.orm.sessionmaker",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.models.tags.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.models.tags.ChartUpdater": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "superset.models.tags.ObjectUpdater"
   ]
  },
  "type": "class"
 },
 "superset.models.tags.ChartUpdater.get_owners_ids": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.models.tags.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.models.tags.Connection": {
  "data": {
   "shadows": "sqlalchemy.engine.base.Connection"
  },
  "type": "import"
 },
 "superset.models.tags.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.models.tags.DashboardUpdater": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "superset.models.tags.ObjectUpdater"
   ]
  },
  "type": "class"
 },
 "superset.models.tags.DashboardUpdater.get_owners_ids": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.models.tags.Enum": {
  "data": {
   "shadows": "sqlalchemy.Enum"
  },
  "type": "import"
 },
 "superset.models.tags.FavStar": {
  "data": {
   "shadows": "superset.models.core.FavStar"
  },
  "type": "import"
 },
 "superset.models.tags.FavStarUpdater": {
  "data": {
   "lineno": 228
  },
  "type": "class"
 },
 "superset.models.tags.FavStarUpdater.after_delete": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.orm.Session",
    "sqlalchemy.orm.mapper.Mapper",
    "superset.models.tags.Tag",
    "superset.models.tags.TagTypes",
    "superset.models.tags.TaggedObject"
   ]
  },
  "type": "function"
 },
 "superset.models.tags.FavStarUpdater.after_insert": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.orm.Session",
    "sqlalchemy.orm.mapper.Mapper",
    "superset.models.tags.TagTypes",
    "superset.models.tags.TaggedObject",
    "superset.models.tags.get_object_type",
    "superset.models.tags.get_tag"
   ]
  },
  "type": "function"
 },
 "superset.models.tags.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.models.tags.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.models.tags.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.models.tags.Mapper": {
  "data": {
   "shadows": "sqlalchemy.orm.mapper.Mapper"
  },
  "type": "import"
 },
 "superset.models.tags.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.models.tags.ObjectTypes": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "superset.models.tags.enum"
   ]
  },
  "type": "class"
 },
 "superset.models.tags.ObjectUpdater": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.models.tags.ObjectUpdater._add_owners": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.orm.Session",
    "superset.models.tags.TagTypes",
    "superset.models.tags.TaggedObject",
    "superset.models.tags.get_tag",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.models.tags.ObjectUpdater.after_delete": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.orm.Session",
    "sqlalchemy.orm.mapper.Mapper",
    "superset.models.tags.TaggedObject",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.models.tags.ObjectUpdater.after_insert": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.orm.Session",
    "sqlalchemy.orm.mapper.Mapper",
    "superset.models.tags.TagTypes",
    "superset.models.tags.TaggedObject",
    "superset.models.tags.get_tag",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.models.tags.ObjectUpdater.after_update": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "classmethod",
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.orm.Session",
    "sqlalchemy.orm.mapper.Mapper",
    "superset.models.tags.Tag",
    "superset.models.tags.TagTypes",
    "superset.models.tags.TaggedObject",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.models.tags.ObjectUpdater.get_owners_ids": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "int",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.models.tags.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.models.tags.Query": {
  "data": {
   "shadows": "superset.models.sql_lab.Query"
  },
  "type": "import"
 },
 "superset.models.tags.QueryUpdater": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "superset.models.tags.ObjectUpdater"
   ]
  },
  "type": "class"
 },
 "superset.models.tags.QueryUpdater.get_owners_ids": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.models.tags.Session": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.models.tags.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.models.tags.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "superset.models.tags.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.models.tags.Tag": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Enum",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.tags.TagTypes",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.models.tags.TagTypes": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "superset.models.tags.enum",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.models.tags.TaggedObject": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.Enum",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship",
    "superset.models.helpers.AuditMixinNullable",
    "superset.models.tags.ObjectTypes"
   ]
  },
  "type": "class"
 },
 "superset.models.tags.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.models.tags.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "superset.models.tags.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "superset.models.tags.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "superset.models.tags.get_object_type": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "str",
    "superset.models.tags.ObjectTypes"
   ]
  },
  "type": "function"
 },
 "superset.models.tags.get_tag": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "str",
    "superset.models.tags.Tag",
    "superset.models.tags.TagTypes"
   ]
  },
  "type": "function"
 },
 "superset.models.tags.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "superset.models.tags.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.models.tags.sessionmaker": {
  "data": {
   "shadows": "sqlalchemy.orm.sessionmaker"
  },
  "type": "import"
 },
 "superset.models.tags.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "superset.models.user_attributes": {
  "data": {},
  "type": "module"
 },
 "superset.models.user_attributes.AuditMixinNullable": {
  "data": {
   "shadows": "superset.models.helpers.AuditMixinNullable"
  },
  "type": "import"
 },
 "superset.models.user_attributes.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "superset.models.user_attributes.ForeignKey": {
  "data": {
   "shadows": "sqlalchemy.ForeignKey"
  },
  "type": "import"
 },
 "superset.models.user_attributes.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "superset.models.user_attributes.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.models.user_attributes.UserAttribute": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "id",
    "sqlalchemy.Column",
    "sqlalchemy.ForeignKey",
    "sqlalchemy.Integer",
    "sqlalchemy.orm.relationship",
    "superset.models.helpers.AuditMixinNullable",
    "superset.security_manager.user_model"
   ]
  },
  "type": "class"
 },
 "superset.models.user_attributes.relationship": {
  "data": {
   "shadows": "sqlalchemy.orm.relationship"
  },
  "type": "import"
 },
 "superset.models.user_attributes.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.queries": {
  "data": {},
  "type": "module"
 },
 "superset.queries.api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.queries.api.logging"
   ]
  },
  "type": "module"
 },
 "superset.queries.api.BaseSupersetModelRestApi": {
  "data": {
   "shadows": "superset.views.base_api.BaseSupersetModelRestApi"
  },
  "type": "import"
 },
 "superset.queries.api.DatabaseFilter": {
  "data": {
   "shadows": "superset.databases.filters.DatabaseFilter"
  },
  "type": "import"
 },
 "superset.queries.api.FilterRelatedOwners": {
  "data": {
   "shadows": "superset.views.filters.FilterRelatedOwners"
  },
  "type": "import"
 },
 "superset.queries.api.MODEL_API_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.queries.api.Query": {
  "data": {
   "shadows": "superset.models.sql_lab.Query"
  },
  "type": "import"
 },
 "superset.queries.api.QueryFilter": {
  "data": {
   "shadows": "superset.queries.filters.QueryFilter"
  },
  "type": "import"
 },
 "superset.queries.api.QueryRestApi": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.DISTINCT",
    "superset.constants.RouteMethod.GET",
    "superset.constants.RouteMethod.GET_LIST",
    "superset.constants.RouteMethod.RELATED",
    "superset.databases.filters.DatabaseFilter",
    "superset.models.sql_lab.Query",
    "superset.queries.filters.QueryFilter",
    "superset.queries.schemas.openapi_spec_methods_override",
    "superset.views.base_api.BaseSupersetModelRestApi",
    "superset.views.base_api.RelatedFieldFilter",
    "superset.views.filters.FilterRelatedOwners"
   ]
  },
  "type": "class"
 },
 "superset.queries.api.RelatedFieldFilter": {
  "data": {
   "shadows": "superset.views.base_api.RelatedFieldFilter"
  },
  "type": "import"
 },
 "superset.queries.api.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.queries.api.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.queries.api.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.queries.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.queries.api.openapi_spec_methods_override": {
  "data": {
   "shadows": "superset.queries.schemas.openapi_spec_methods_override"
  },
  "type": "import"
 },
 "superset.queries.dao": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.queries.dao.logging"
   ]
  },
  "type": "module"
 },
 "superset.queries.dao.BaseDAO": {
  "data": {
   "shadows": "superset.dao.base.BaseDAO"
  },
  "type": "import"
 },
 "superset.queries.dao.Query": {
  "data": {
   "shadows": "superset.models.sql_lab.Query"
  },
  "type": "import"
 },
 "superset.queries.dao.QueryDAO": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "superset.dao.base.BaseDAO",
    "superset.models.sql_lab.Query",
    "superset.queries.filters.QueryFilter"
   ]
  },
  "type": "class"
 },
 "superset.queries.dao.QueryDAO.update_saved_query_exec_info": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "int",
    "staticmethod",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.query",
    "superset.models.sql_lab.Query",
    "superset.models.sql_lab.SavedQuery",
    "superset.models.sql_lab.SavedQuery.database",
    "superset.models.sql_lab.SavedQuery.sql"
   ]
  },
  "type": "function"
 },
 "superset.queries.dao.QueryFilter": {
  "data": {
   "shadows": "superset.queries.filters.QueryFilter"
  },
  "type": "import"
 },
 "superset.queries.dao.SavedQuery": {
  "data": {
   "shadows": "superset.models.sql_lab.SavedQuery"
  },
  "type": "import"
 },
 "superset.queries.dao.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.queries.dao.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.queries.dao.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.queries.dao.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.queries.filters": {
  "data": {},
  "type": "module"
 },
 "superset.queries.filters.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.queries.filters.BaseFilter": {
  "data": {
   "shadows": "superset.views.base.BaseFilter"
  },
  "type": "import"
 },
 "superset.queries.filters.BaseQuery": {
  "data": {
   "shadows": "flask_sqlalchemy.BaseQuery"
  },
  "type": "import"
 },
 "superset.queries.filters.Query": {
  "data": {
   "shadows": "superset.models.sql_lab.Query"
  },
  "type": "import"
 },
 "superset.queries.filters.QueryFilter": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.queries.filters.QueryFilter.apply": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "flask.g.user.get_user_id",
    "flask_sqlalchemy.BaseQuery",
    "superset.models.sql_lab.Query.user_id",
    "superset.security_manager.can_access_all_queries",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.queries.filters.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.queries.filters.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.queries.saved_queries": {
  "data": {},
  "type": "module"
 },
 "superset.queries.saved_queries.api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.queries.saved_queries.api.logging"
   ]
  },
  "type": "module"
 },
 "superset.queries.saved_queries.api.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.BaseSupersetModelRestApi": {
  "data": {
   "shadows": "superset.views.base_api.BaseSupersetModelRestApi"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.BulkDeleteSavedQueryCommand": {
  "data": {
   "shadows": "superset.queries.saved_queries.commands.bulk_delete.BulkDeleteSavedQueryCommand"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.DatabaseFilter": {
  "data": {
   "shadows": "superset.databases.filters.DatabaseFilter"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.ExportSavedQueriesCommand": {
  "data": {
   "shadows": "superset.queries.saved_queries.commands.export.ExportSavedQueriesCommand"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.MODEL_API_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.SavedQuery": {
  "data": {
   "shadows": "superset.models.sql_lab.SavedQuery"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.SavedQueryAllTextFilter": {
  "data": {
   "shadows": "superset.queries.saved_queries.filters.SavedQueryAllTextFilter"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.SavedQueryBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.queries.saved_queries.commands.exceptions.SavedQueryBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.SavedQueryFavoriteFilter": {
  "data": {
   "shadows": "superset.queries.saved_queries.filters.SavedQueryFavoriteFilter"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.SavedQueryFilter": {
  "data": {
   "shadows": "superset.queries.saved_queries.filters.SavedQueryFilter"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.SavedQueryNotFoundError": {
  "data": {
   "shadows": "superset.queries.saved_queries.commands.exceptions.SavedQueryNotFoundError"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.SavedQueryRestApi": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.DISTINCT",
    "superset.constants.RouteMethod.EXPORT",
    "superset.constants.RouteMethod.RELATED",
    "superset.constants.RouteMethod.REST_MODEL_VIEW_CRUD_SET",
    "superset.databases.filters.DatabaseFilter",
    "superset.models.sql_lab.SavedQuery",
    "superset.queries.saved_queries.filters.SavedQueryAllTextFilter",
    "superset.queries.saved_queries.filters.SavedQueryFavoriteFilter",
    "superset.queries.saved_queries.filters.SavedQueryFilter",
    "superset.queries.saved_queries.schemas.get_delete_ids_schema",
    "superset.queries.saved_queries.schemas.get_export_ids_schema",
    "superset.queries.saved_queries.schemas.openapi_spec_methods_override",
    "superset.views.base_api.BaseSupersetModelRestApi"
   ]
  },
  "type": "class"
 },
 "superset.queries.saved_queries.api.SavedQueryRestApi.bulk_delete": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "flask_babel.ngettext",
    "len",
    "str",
    "superset.queries.saved_queries.commands.bulk_delete.BulkDeleteSavedQueryCommand",
    "superset.queries.saved_queries.commands.exceptions.SavedQueryBulkDeleteFailedError",
    "superset.queries.saved_queries.commands.exceptions.SavedQueryNotFoundError",
    "superset.queries.saved_queries.schemas.get_delete_ids_schema",
    "superset.views.base_api.statsd_metrics",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.queries.saved_queries.api.SavedQueryRestApi.export": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "flask.Response",
    "flask.send_file",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "io.BytesIO",
    "superset.queries.saved_queries.commands.exceptions.SavedQueryNotFoundError",
    "superset.queries.saved_queries.commands.export.ExportSavedQueriesCommand",
    "superset.queries.saved_queries.schemas.get_export_ids_schema",
    "superset.views.base_api.statsd_metrics",
    "typing.Any",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "superset.queries.saved_queries.api.SavedQueryRestApi.pre_add": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "flask.g.user",
    "superset.models.sql_lab.SavedQuery"
   ]
  },
  "type": "function"
 },
 "superset.queries.saved_queries.api.SavedQueryRestApi.pre_update": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "superset.models.sql_lab.SavedQuery"
   ]
  },
  "type": "function"
 },
 "superset.queries.saved_queries.api.ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.expose": {
  "data": {
   "shadows": "flask_appbuilder.api.expose"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.get_delete_ids_schema": {
  "data": {
   "shadows": "superset.queries.saved_queries.schemas.get_delete_ids_schema"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.get_export_ids_schema": {
  "data": {
   "shadows": "superset.queries.saved_queries.schemas.get_export_ids_schema"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "superset.queries.saved_queries.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.ngettext": {
  "data": {
   "shadows": "flask_babel.ngettext"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.openapi_spec_methods_override": {
  "data": {
   "shadows": "superset.queries.saved_queries.schemas.openapi_spec_methods_override"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.protect": {
  "data": {
   "shadows": "flask_appbuilder.api.protect"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.rison": {
  "data": {
   "shadows": "flask_appbuilder.api.rison"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.safe": {
  "data": {
   "shadows": "flask_appbuilder.api.safe"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.send_file": {
  "data": {
   "shadows": "flask.send_file"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.api.statsd_metrics": {
  "data": {
   "shadows": "superset.views.base_api.statsd_metrics"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands": {
  "data": {},
  "type": "module"
 },
 "superset.queries.saved_queries.commands.bulk_delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.queries.saved_queries.commands.bulk_delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.queries.saved_queries.commands.bulk_delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.bulk_delete.BulkDeleteSavedQueryCommand": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.queries.saved_queries.commands.bulk_delete.BulkDeleteSavedQueryCommand.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.models.dashboard.Dashboard",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.queries.saved_queries.commands.bulk_delete.BulkDeleteSavedQueryCommand.run": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.queries.saved_queries.commands.bulk_delete.logger",
    "superset.queries.saved_queries.commands.exceptions.SavedQueryBulkDeleteFailedError",
    "superset.queries.saved_queries.dao.SavedQueryDAO.bulk_delete"
   ]
  },
  "type": "function"
 },
 "superset.queries.saved_queries.commands.bulk_delete.BulkDeleteSavedQueryCommand.validate": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "superset.queries.saved_queries.commands.exceptions.SavedQueryNotFoundError",
    "superset.queries.saved_queries.dao.SavedQueryDAO.find_by_ids"
   ]
  },
  "type": "function"
 },
 "superset.queries.saved_queries.commands.bulk_delete.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.bulk_delete.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.bulk_delete.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.bulk_delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.bulk_delete.SavedQueryBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.queries.saved_queries.commands.exceptions.SavedQueryBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.bulk_delete.SavedQueryDAO": {
  "data": {
   "shadows": "superset.queries.saved_queries.dao.SavedQueryDAO"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.bulk_delete.SavedQueryNotFoundError": {
  "data": {
   "shadows": "superset.queries.saved_queries.commands.exceptions.SavedQueryNotFoundError"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.bulk_delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.bulk_delete.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.queries.saved_queries.commands.bulk_delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.exceptions": {
  "data": {},
  "type": "module"
 },
 "superset.queries.saved_queries.commands.exceptions.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.exceptions.DeleteFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.DeleteFailedError"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.exceptions.SavedQueryBulkDeleteFailedError": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.DeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.queries.saved_queries.commands.exceptions.SavedQueryNotFoundError": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.queries.saved_queries.commands.exceptions._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.export": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.queries.saved_queries.commands.export.logging"
   ]
  },
  "type": "module"
 },
 "superset.queries.saved_queries.commands.export.EXPORT_VERSION": {
  "data": {
   "shadows": "superset.utils.dict_import_export.EXPORT_VERSION"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.export.ExportModelsCommand": {
  "data": {
   "shadows": "superset.commands.export.ExportModelsCommand"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.export.ExportSavedQueriesCommand": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "superset.commands.export.ExportModelsCommand",
    "superset.queries.saved_queries.commands.exceptions.SavedQueryNotFoundError",
    "superset.queries.saved_queries.dao.SavedQueryDAO"
   ]
  },
  "type": "class"
 },
 "superset.queries.saved_queries.commands.export.ExportSavedQueriesCommand._export": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "superset.models.sql_lab.SavedQuery",
    "superset.queries.saved_queries.commands.export.json",
    "superset.queries.saved_queries.commands.export.logger",
    "superset.queries.saved_queries.commands.export.yaml",
    "superset.utils.dict_import_export.EXPORT_VERSION",
    "typing.Iterator",
    "typing.Tuple",
    "werkzeug.utils.secure_filename"
   ]
  },
  "type": "function"
 },
 "superset.queries.saved_queries.commands.export.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.export.SavedQuery": {
  "data": {
   "shadows": "superset.models.sql_lab.SavedQuery"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.export.SavedQueryDAO": {
  "data": {
   "shadows": "superset.queries.saved_queries.dao.SavedQueryDAO"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.export.SavedQueryNotFoundError": {
  "data": {
   "shadows": "superset.queries.saved_queries.commands.exceptions.SavedQueryNotFoundError"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.export.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.export.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.export.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.queries.saved_queries.commands.export.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.export.secure_filename": {
  "data": {
   "shadows": "werkzeug.utils.secure_filename"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.commands.export.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.dao": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.queries.saved_queries.dao.logging"
   ]
  },
  "type": "module"
 },
 "superset.queries.saved_queries.dao.BaseDAO": {
  "data": {
   "shadows": "superset.dao.base.BaseDAO"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.dao.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.dao.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.dao.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.dao.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.dao.SavedQuery": {
  "data": {
   "shadows": "superset.models.sql_lab.SavedQuery"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.dao.SavedQueryDAO": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "superset.dao.base.BaseDAO",
    "superset.models.sql_lab.SavedQuery",
    "superset.queries.saved_queries.filters.SavedQueryFilter"
   ]
  },
  "type": "class"
 },
 "superset.queries.saved_queries.dao.SavedQueryDAO.bulk_delete": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.exc.SQLAlchemyError",
    "staticmethod",
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.query",
    "superset.extensions.db.session.rollback",
    "superset.models.sql_lab.SavedQuery",
    "superset.models.sql_lab.SavedQuery.id.in_",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.queries.saved_queries.dao.SavedQueryFilter": {
  "data": {
   "shadows": "superset.queries.saved_queries.filters.SavedQueryFilter"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.dao.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.dao.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.queries.saved_queries.dao.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.filters": {
  "data": {},
  "type": "module"
 },
 "superset.queries.saved_queries.filters.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.filters.BaseFavoriteFilter": {
  "data": {
   "shadows": "superset.views.base_api.BaseFavoriteFilter"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.filters.BaseFilter": {
  "data": {
   "shadows": "superset.views.base.BaseFilter"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.filters.BaseQuery": {
  "data": {
   "shadows": "flask_sqlalchemy.BaseQuery"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.filters.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.query.Query"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.filters.SavedQuery": {
  "data": {
   "shadows": "superset.models.sql_lab.SavedQuery"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.filters.SavedQueryAllTextFilter": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.queries.saved_queries.filters.SavedQueryAllTextFilter.apply": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sqlalchemy.or_",
    "sqlalchemy.orm.query.Query",
    "superset.models.sql_lab.SavedQuery.description.ilike",
    "superset.models.sql_lab.SavedQuery.label.ilike",
    "superset.models.sql_lab.SavedQuery.schema.ilike",
    "superset.models.sql_lab.SavedQuery.sql.ilike",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.queries.saved_queries.filters.SavedQueryFavoriteFilter": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "superset.models.sql_lab.SavedQuery",
    "superset.views.base_api.BaseFavoriteFilter"
   ]
  },
  "type": "class"
 },
 "superset.queries.saved_queries.filters.SavedQueryFilter": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.queries.saved_queries.filters.SavedQueryFilter.apply": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "flask.g.user",
    "flask_sqlalchemy.BaseQuery",
    "superset.models.sql_lab.SavedQuery.created_by",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.queries.saved_queries.filters._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.filters.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.filters.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.queries.saved_queries.schemas": {
  "data": {},
  "type": "module"
 },
 "superset.queries.saved_queries.schemas.get_delete_ids_schema": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.queries.saved_queries.schemas.get_export_ids_schema": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.queries.saved_queries.schemas.openapi_spec_methods_override": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "superset.queries.schemas": {
  "data": {},
  "type": "module"
 },
 "superset.queries.schemas.openapi_spec_methods_override": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "superset.reports": {
  "data": {},
  "type": "module"
 },
 "superset.reports.api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.reports.api.logging"
   ]
  },
  "type": "module"
 },
 "superset.reports.api.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.reports.api.BaseSupersetModelRestApi": {
  "data": {
   "shadows": "superset.views.base_api.BaseSupersetModelRestApi"
  },
  "type": "import"
 },
 "superset.reports.api.BulkDeleteReportScheduleCommand": {
  "data": {
   "shadows": "superset.reports.commands.bulk_delete.BulkDeleteReportScheduleCommand"
  },
  "type": "import"
 },
 "superset.reports.api.ChartFilter": {
  "data": {
   "shadows": "superset.charts.filters.ChartFilter"
  },
  "type": "import"
 },
 "superset.reports.api.CreateReportScheduleCommand": {
  "data": {
   "shadows": "superset.reports.commands.create.CreateReportScheduleCommand"
  },
  "type": "import"
 },
 "superset.reports.api.DashboardFilter": {
  "data": {
   "shadows": "superset.dashboards.filters.DashboardFilter"
  },
  "type": "import"
 },
 "superset.reports.api.DatabaseFilter": {
  "data": {
   "shadows": "superset.databases.filters.DatabaseFilter"
  },
  "type": "import"
 },
 "superset.reports.api.DeleteReportScheduleCommand": {
  "data": {
   "shadows": "superset.reports.commands.delete.DeleteReportScheduleCommand"
  },
  "type": "import"
 },
 "superset.reports.api.FilterRelatedOwners": {
  "data": {
   "shadows": "superset.views.filters.FilterRelatedOwners"
  },
  "type": "import"
 },
 "superset.reports.api.MODEL_API_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.reports.api.RelatedFieldFilter": {
  "data": {
   "shadows": "superset.views.base_api.RelatedFieldFilter"
  },
  "type": "import"
 },
 "superset.reports.api.ReportSchedule": {
  "data": {
   "shadows": "superset.models.reports.ReportSchedule"
  },
  "type": "import"
 },
 "superset.reports.api.ReportScheduleAllTextFilter": {
  "data": {
   "shadows": "superset.reports.filters.ReportScheduleAllTextFilter"
  },
  "type": "import"
 },
 "superset.reports.api.ReportScheduleBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.reports.api.ReportScheduleCreateFailedError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleCreateFailedError"
  },
  "type": "import"
 },
 "superset.reports.api.ReportScheduleDeleteFailedError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleDeleteFailedError"
  },
  "type": "import"
 },
 "superset.reports.api.ReportScheduleForbiddenError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleForbiddenError"
  },
  "type": "import"
 },
 "superset.reports.api.ReportScheduleInvalidError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleInvalidError"
  },
  "type": "import"
 },
 "superset.reports.api.ReportScheduleNotFoundError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleNotFoundError"
  },
  "type": "import"
 },
 "superset.reports.api.ReportSchedulePostSchema": {
  "data": {
   "shadows": "superset.reports.schemas.ReportSchedulePostSchema"
  },
  "type": "import"
 },
 "superset.reports.api.ReportSchedulePutSchema": {
  "data": {
   "shadows": "superset.reports.schemas.ReportSchedulePutSchema"
  },
  "type": "import"
 },
 "superset.reports.api.ReportScheduleRestApi": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.charts.filters.ChartFilter",
    "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.RELATED",
    "superset.constants.RouteMethod.REST_MODEL_VIEW_CRUD_SET",
    "superset.dashboards.filters.DashboardFilter",
    "superset.databases.filters.DatabaseFilter",
    "superset.models.reports.ReportSchedule",
    "superset.reports.filters.ReportScheduleAllTextFilter",
    "superset.reports.schemas.ReportSchedulePostSchema",
    "superset.reports.schemas.ReportSchedulePutSchema",
    "superset.reports.schemas.get_delete_ids_schema",
    "superset.reports.schemas.openapi_spec_methods_override",
    "superset.views.base_api.BaseSupersetModelRestApi",
    "superset.views.base_api.RelatedFieldFilter",
    "superset.views.filters.FilterRelatedOwners"
   ]
  },
  "type": "class"
 },
 "superset.reports.api.ReportScheduleRestApi.bulk_delete": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "flask_babel.ngettext",
    "len",
    "str",
    "superset.reports.commands.bulk_delete.BulkDeleteReportScheduleCommand",
    "superset.reports.commands.exceptions.ReportScheduleBulkDeleteFailedError",
    "superset.reports.commands.exceptions.ReportScheduleForbiddenError",
    "superset.reports.commands.exceptions.ReportScheduleNotFoundError",
    "superset.reports.schemas.get_delete_ids_schema",
    "superset.views.base_api.statsd_metrics",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.reports.api.ReportScheduleRestApi.delete": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.permission_name",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "str",
    "superset.reports.api.logger",
    "superset.reports.commands.delete.DeleteReportScheduleCommand",
    "superset.reports.commands.exceptions.ReportScheduleDeleteFailedError",
    "superset.reports.commands.exceptions.ReportScheduleForbiddenError",
    "superset.reports.commands.exceptions.ReportScheduleNotFoundError",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.reports.api.ReportScheduleRestApi.post": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.permission_name",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "marshmallow.ValidationError",
    "str",
    "superset.reports.api.logger",
    "superset.reports.commands.create.CreateReportScheduleCommand",
    "superset.reports.commands.exceptions.ReportScheduleCreateFailedError",
    "superset.reports.commands.exceptions.ReportScheduleInvalidError",
    "superset.reports.commands.exceptions.ReportScheduleNotFoundError",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.reports.api.ReportScheduleRestApi.put": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user",
    "flask.request.is_json",
    "flask.request.json",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.permission_name",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.safe",
    "int",
    "marshmallow.ValidationError",
    "str",
    "superset.reports.api.logger",
    "superset.reports.commands.exceptions.ReportScheduleForbiddenError",
    "superset.reports.commands.exceptions.ReportScheduleInvalidError",
    "superset.reports.commands.exceptions.ReportScheduleNotFoundError",
    "superset.reports.commands.exceptions.ReportScheduleUpdateFailedError",
    "superset.reports.commands.update.UpdateReportScheduleCommand",
    "superset.views.base_api.statsd_metrics"
   ]
  },
  "type": "function"
 },
 "superset.reports.api.ReportScheduleUpdateFailedError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleUpdateFailedError"
  },
  "type": "import"
 },
 "superset.reports.api.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.reports.api.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.reports.api.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.reports.api.UpdateReportScheduleCommand": {
  "data": {
   "shadows": "superset.reports.commands.update.UpdateReportScheduleCommand"
  },
  "type": "import"
 },
 "superset.reports.api.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.reports.api.expose": {
  "data": {
   "shadows": "flask_appbuilder.api.expose"
  },
  "type": "import"
 },
 "superset.reports.api.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.reports.api.get_delete_ids_schema": {
  "data": {
   "shadows": "superset.reports.schemas.get_delete_ids_schema"
  },
  "type": "import"
 },
 "superset.reports.api.logger": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "superset.reports.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.reports.api.ngettext": {
  "data": {
   "shadows": "flask_babel.ngettext"
  },
  "type": "import"
 },
 "superset.reports.api.openapi_spec_methods_override": {
  "data": {
   "shadows": "superset.reports.schemas.openapi_spec_methods_override"
  },
  "type": "import"
 },
 "superset.reports.api.permission_name": {
  "data": {
   "shadows": "flask_appbuilder.api.permission_name"
  },
  "type": "import"
 },
 "superset.reports.api.protect": {
  "data": {
   "shadows": "flask_appbuilder.api.protect"
  },
  "type": "import"
 },
 "superset.reports.api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.reports.api.rison": {
  "data": {
   "shadows": "flask_appbuilder.api.rison"
  },
  "type": "import"
 },
 "superset.reports.api.safe": {
  "data": {
   "shadows": "flask_appbuilder.api.safe"
  },
  "type": "import"
 },
 "superset.reports.api.statsd_metrics": {
  "data": {
   "shadows": "superset.views.base_api.statsd_metrics"
  },
  "type": "import"
 },
 "superset.reports.commands": {
  "data": {},
  "type": "module"
 },
 "superset.reports.commands.alert": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "operator.eq",
    "operator.ge",
    "operator.gt",
    "operator.le",
    "operator.lt",
    "operator.ne",
    "superset.reports.commands.alert.logging"
   ]
  },
  "type": "module"
 },
 "superset.reports.commands.alert.AlertCommand": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.alert.AlertCommand.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "float",
    "superset.models.reports.ReportSchedule",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.alert.AlertCommand._validate_not_null": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.recarray"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.alert.AlertCommand._validate_operator": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "ValueError",
    "float",
    "numpy.recarray",
    "superset.reports.commands.exceptions.AlertQueryInvalidTypeError"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.alert.AlertCommand._validate_result": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "len",
    "numpy.recarray",
    "staticmethod",
    "superset.reports.commands.exceptions.AlertQueryMultipleColumnsError",
    "superset.reports.commands.exceptions.AlertQueryMultipleRowsError"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.alert.AlertCommand.run": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "KeyError",
    "bool",
    "numpy.nan",
    "str",
    "superset.models.reports.ReportScheduleValidatorType.NOT_NULL",
    "superset.reports.commands.alert.OPERATOR_FUNCTIONS",
    "superset.reports.commands.alert.json",
    "superset.reports.commands.exceptions.AlertValidatorConfigError"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.alert.AlertCommand.validate": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "Exception",
    "str",
    "superset.jinja_context.get_template_processor",
    "superset.models.reports.ReportScheduleValidatorType.NOT_NULL",
    "superset.reports.commands.exceptions.AlertQueryError"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.alert.AlertQueryError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.AlertQueryError"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.AlertQueryInvalidTypeError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.AlertQueryInvalidTypeError"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.AlertQueryMultipleColumnsError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.AlertQueryMultipleColumnsError"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.AlertQueryMultipleRowsError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.AlertQueryMultipleRowsError"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.AlertValidatorConfigError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.AlertValidatorConfigError"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.OPERATOR_FUNCTIONS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.reports.commands.alert.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.ReportSchedule": {
  "data": {
   "shadows": "superset.models.reports.ReportSchedule"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.ReportScheduleValidatorType": {
  "data": {
   "shadows": "superset.models.reports.ReportScheduleValidatorType"
  },
  "type": "import"
 },
 "superset.reports.commands.alert._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.eq": {
  "data": {
   "shadows": "operator.eq"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.ge": {
  "data": {
   "shadows": "operator.ge"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.gt": {
  "data": {
   "shadows": "operator.gt"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.jinja_context": {
  "data": {
   "shadows": "superset.jinja_context"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.le": {
  "data": {
   "shadows": "operator.le"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.reports.commands.alert.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.lt": {
  "data": {
   "shadows": "operator.lt"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.ne": {
  "data": {
   "shadows": "operator.ne"
  },
  "type": "import"
 },
 "superset.reports.commands.alert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "superset.reports.commands.base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.reports.commands.base.logging"
   ]
  },
  "type": "module"
 },
 "superset.reports.commands.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.reports.commands.base.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.reports.commands.base.BaseReportScheduleCommand": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "str",
    "superset.commands.base.BaseCommand",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.base.BaseReportScheduleCommand.run": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.base.BaseReportScheduleCommand.validate": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "superset.reports.commands.base.BaseReportScheduleCommand.validate_chart_dashboard": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bool",
    "marshmallow.ValidationError",
    "superset.charts.dao.ChartDAO.find_by_id",
    "superset.dashboards.dao.DashboardDAO.find_by_id",
    "superset.reports.commands.exceptions.ChartNotFoundValidationError",
    "superset.reports.commands.exceptions.DashboardNotFoundValidationError",
    "superset.reports.commands.exceptions.ReportScheduleChartOrDashboardValidationError",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.base.ChartDAO": {
  "data": {
   "shadows": "superset.charts.dao.ChartDAO"
  },
  "type": "import"
 },
 "superset.reports.commands.base.ChartNotFoundValidationError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ChartNotFoundValidationError"
  },
  "type": "import"
 },
 "superset.reports.commands.base.DashboardDAO": {
  "data": {
   "shadows": "superset.dashboards.dao.DashboardDAO"
  },
  "type": "import"
 },
 "superset.reports.commands.base.DashboardNotFoundValidationError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.DashboardNotFoundValidationError"
  },
  "type": "import"
 },
 "superset.reports.commands.base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.reports.commands.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.reports.commands.base.ReportScheduleChartOrDashboardValidationError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleChartOrDashboardValidationError"
  },
  "type": "import"
 },
 "superset.reports.commands.base.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.reports.commands.base.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.reports.commands.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.reports.commands.bulk_delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.reports.commands.bulk_delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.reports.commands.bulk_delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.reports.commands.bulk_delete.BulkDeleteReportScheduleCommand": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.bulk_delete.BulkDeleteReportScheduleCommand.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.models.reports.ReportSchedule",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.bulk_delete.BulkDeleteReportScheduleCommand.run": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.reports.commands.bulk_delete.logger",
    "superset.reports.commands.exceptions.ReportScheduleBulkDeleteFailedError",
    "superset.reports.dao.ReportScheduleDAO.bulk_delete"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.bulk_delete.BulkDeleteReportScheduleCommand.validate": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "superset.exceptions.SupersetSecurityException",
    "superset.reports.commands.exceptions.ReportScheduleForbiddenError",
    "superset.reports.commands.exceptions.ReportScheduleNotFoundError",
    "superset.reports.dao.ReportScheduleDAO.find_by_ids",
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.bulk_delete.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.reports.commands.bulk_delete.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.reports.commands.bulk_delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.reports.commands.bulk_delete.ReportSchedule": {
  "data": {
   "shadows": "superset.models.reports.ReportSchedule"
  },
  "type": "import"
 },
 "superset.reports.commands.bulk_delete.ReportScheduleBulkDeleteFailedError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleBulkDeleteFailedError"
  },
  "type": "import"
 },
 "superset.reports.commands.bulk_delete.ReportScheduleDAO": {
  "data": {
   "shadows": "superset.reports.dao.ReportScheduleDAO"
  },
  "type": "import"
 },
 "superset.reports.commands.bulk_delete.ReportScheduleForbiddenError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleForbiddenError"
  },
  "type": "import"
 },
 "superset.reports.commands.bulk_delete.ReportScheduleNotFoundError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleNotFoundError"
  },
  "type": "import"
 },
 "superset.reports.commands.bulk_delete.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.reports.commands.bulk_delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.reports.commands.bulk_delete.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.reports.commands.bulk_delete.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.reports.commands.bulk_delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.reports.commands.create": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.reports.commands.create.logging"
   ]
  },
  "type": "module"
 },
 "superset.reports.commands.create.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.reports.commands.create.BaseReportScheduleCommand": {
  "data": {
   "shadows": "superset.reports.commands.base.BaseReportScheduleCommand"
  },
  "type": "import"
 },
 "superset.reports.commands.create.CreateReportScheduleCommand": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "superset.reports.commands.base.BaseReportScheduleCommand"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.create.CreateReportScheduleCommand.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.create.CreateReportScheduleCommand.run": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.dao.exceptions.DAOCreateFailedError",
    "superset.reports.commands.create.logger",
    "superset.reports.commands.exceptions.ReportScheduleCreateFailedError",
    "superset.reports.dao.ReportScheduleDAO.create"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.create.CreateReportScheduleCommand.validate": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "list",
    "marshmallow.ValidationError",
    "superset.commands.utils.populate_owners",
    "superset.databases.dao.DatabaseDAO.find_by_id",
    "superset.models.reports.ReportScheduleType.ALERT",
    "superset.reports.commands.create.json",
    "superset.reports.commands.exceptions.DatabaseNotFoundValidationError",
    "superset.reports.commands.exceptions.ReportScheduleAlertRequiredDatabaseValidationError",
    "superset.reports.commands.exceptions.ReportScheduleInvalidError",
    "superset.reports.commands.exceptions.ReportScheduleNameUniquenessValidationError",
    "superset.reports.commands.exceptions.ReportScheduleRequiredTypeValidationError",
    "superset.reports.dao.ReportScheduleDAO.validate_update_uniqueness",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.create.DAOCreateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOCreateFailedError"
  },
  "type": "import"
 },
 "superset.reports.commands.create.DatabaseDAO": {
  "data": {
   "shadows": "superset.databases.dao.DatabaseDAO"
  },
  "type": "import"
 },
 "superset.reports.commands.create.DatabaseNotFoundValidationError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.DatabaseNotFoundValidationError"
  },
  "type": "import"
 },
 "superset.reports.commands.create.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.reports.commands.create.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.reports.commands.create.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.reports.commands.create.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.reports.commands.create.ReportScheduleAlertRequiredDatabaseValidationError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleAlertRequiredDatabaseValidationError"
  },
  "type": "import"
 },
 "superset.reports.commands.create.ReportScheduleCreateFailedError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleCreateFailedError"
  },
  "type": "import"
 },
 "superset.reports.commands.create.ReportScheduleDAO": {
  "data": {
   "shadows": "superset.reports.dao.ReportScheduleDAO"
  },
  "type": "import"
 },
 "superset.reports.commands.create.ReportScheduleInvalidError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleInvalidError"
  },
  "type": "import"
 },
 "superset.reports.commands.create.ReportScheduleNameUniquenessValidationError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleNameUniquenessValidationError"
  },
  "type": "import"
 },
 "superset.reports.commands.create.ReportScheduleRequiredTypeValidationError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleRequiredTypeValidationError"
  },
  "type": "import"
 },
 "superset.reports.commands.create.ReportScheduleType": {
  "data": {
   "shadows": "superset.models.reports.ReportScheduleType"
  },
  "type": "import"
 },
 "superset.reports.commands.create.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.reports.commands.create.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.reports.commands.create.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.reports.commands.create.logger": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "superset.reports.commands.create.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.reports.commands.create.populate_owners": {
  "data": {
   "shadows": "superset.commands.utils.populate_owners"
  },
  "type": "import"
 },
 "superset.reports.commands.delete": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.reports.commands.delete.logging"
   ]
  },
  "type": "module"
 },
 "superset.reports.commands.delete.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.reports.commands.delete.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.reports.commands.delete.DeleteReportScheduleCommand": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.delete.DeleteReportScheduleCommand.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "superset.models.reports.ReportSchedule",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.delete.DeleteReportScheduleCommand.run": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.reports.commands.delete.logger",
    "superset.reports.commands.exceptions.ReportScheduleDeleteFailedError",
    "superset.reports.dao.ReportScheduleDAO.delete"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.delete.DeleteReportScheduleCommand.validate": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "superset.exceptions.SupersetSecurityException",
    "superset.reports.commands.exceptions.ReportScheduleForbiddenError",
    "superset.reports.commands.exceptions.ReportScheduleNotFoundError",
    "superset.reports.dao.ReportScheduleDAO.find_by_id",
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.delete.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.reports.commands.delete.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.reports.commands.delete.ReportSchedule": {
  "data": {
   "shadows": "superset.models.reports.ReportSchedule"
  },
  "type": "import"
 },
 "superset.reports.commands.delete.ReportScheduleDAO": {
  "data": {
   "shadows": "superset.reports.dao.ReportScheduleDAO"
  },
  "type": "import"
 },
 "superset.reports.commands.delete.ReportScheduleDeleteFailedError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleDeleteFailedError"
  },
  "type": "import"
 },
 "superset.reports.commands.delete.ReportScheduleForbiddenError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleForbiddenError"
  },
  "type": "import"
 },
 "superset.reports.commands.delete.ReportScheduleNotFoundError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleNotFoundError"
  },
  "type": "import"
 },
 "superset.reports.commands.delete.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.reports.commands.delete.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.reports.commands.delete.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.reports.commands.delete.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.reports.commands.delete.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.reports.commands.exceptions": {
  "data": {},
  "type": "module"
 },
 "superset.reports.commands.exceptions.AlertQueryError": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.AlertQueryInvalidTypeError": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.AlertQueryMultipleColumnsError": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.AlertQueryMultipleRowsError": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.AlertValidatorConfigError": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ChartNotFoundValidationError": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "superset.commands.exceptions.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ChartNotFoundValidationError.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.exceptions.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.reports.commands.exceptions.CommandInvalidError": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandInvalidError"
  },
  "type": "import"
 },
 "superset.reports.commands.exceptions.CreateFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.CreateFailedError"
  },
  "type": "import"
 },
 "superset.reports.commands.exceptions.DashboardNotFoundValidationError": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "superset.commands.exceptions.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.DashboardNotFoundValidationError.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.exceptions.DatabaseNotFoundValidationError": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "superset.commands.exceptions.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.DatabaseNotFoundValidationError.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.exceptions.DeleteFailedError": {
  "data": {
   "shadows": "superset.commands.exceptions.DeleteFailedError"
  },
  "type": "import"
 },
 "superset.reports.commands.exceptions.ForbiddenError": {
  "data": {
   "shadows": "superset.commands.exceptions.ForbiddenError"
  },
  "type": "import"
 },
 "superset.reports.commands.exceptions.PruneReportScheduleLogFailedError": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleAlertEndGracePeriodError": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleAlertGracePeriodError": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleAlertRequiredDatabaseValidationError": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "superset.commands.exceptions.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleAlertRequiredDatabaseValidationError.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.exceptions.ReportScheduleBulkDeleteFailedError": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.DeleteFailedError"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleChartOrDashboardValidationError": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "superset.commands.exceptions.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleChartOrDashboardValidationError.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.exceptions.ReportScheduleCreateFailedError": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CreateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleDeleteFailedError": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleExecuteUnexpectedError": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleForbiddenError": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.ForbiddenError"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleInvalidError": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandInvalidError"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleNameUniquenessValidationError": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "superset.commands.exceptions.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleNameUniquenessValidationError.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.exceptions.ReportScheduleNotFoundError": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleNotificationError": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportSchedulePreviousWorkingError": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportSchedulePruneLogError": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleRequiredTypeValidationError": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "superset.commands.exceptions.ValidationError"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleRequiredTypeValidationError.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.exceptions.ReportScheduleScreenshotFailedError": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleSelleniumUserNotFoundError": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleStateNotFoundError": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleUnexpectedError": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleUpdateFailedError": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CreateFailedError"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ReportScheduleWorkingTimeoutError": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.commands.exceptions.CommandException"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.exceptions.ValidationError": {
  "data": {
   "shadows": "superset.commands.exceptions.ValidationError"
  },
  "type": "import"
 },
 "superset.reports.commands.exceptions._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.reports.commands.execute": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.reports.commands.execute.logging"
   ]
  },
  "type": "module"
 },
 "superset.reports.commands.execute.AlertCommand": {
  "data": {
   "shadows": "superset.reports.commands.alert.AlertCommand"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.AsyncExecuteReportScheduleCommand": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.execute.AsyncExecuteReportScheduleCommand.__init__": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "datetime.datetime",
    "int",
    "superset.models.reports.ReportSchedule",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.AsyncExecuteReportScheduleCommand.run": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "Exception",
    "str",
    "superset.commands.exceptions.CommandException",
    "superset.reports.commands.exceptions.ReportScheduleExecuteUnexpectedError",
    "superset.reports.commands.exceptions.ReportScheduleUnexpectedError",
    "superset.reports.commands.execute.ReportScheduleStateMachine",
    "superset.utils.celery.session_scope"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.AsyncExecuteReportScheduleCommand.validate": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "superset.reports.commands.exceptions.ReportScheduleNotFoundError",
    "superset.reports.dao.ReportScheduleDAO.find_by_id"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.BaseReportState": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "bool",
    "superset.models.reports.ReportState",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.execute.BaseReportState.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.utcnow",
    "sqlalchemy.orm.Session",
    "superset.models.reports.ReportSchedule"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.BaseReportState._get_notification_content": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "superset.reports.notifications.base.NotificationContent"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.BaseReportState._get_screenshot": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "superset.reports.commands.exceptions.ReportScheduleScreenshotFailedError",
    "superset.reports.notifications.base.ScreenshotData",
    "superset.thumbnail_cache",
    "superset.utils.screenshots.BaseScreenshot",
    "superset.utils.screenshots.ChartScreenshot",
    "superset.utils.screenshots.DashboardScreenshot",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.BaseReportState._get_screenshot_user": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "flask_appbuilder.security.sqla.models.User.username",
    "superset.app.config",
    "superset.reports.commands.exceptions.ReportScheduleSelleniumUserNotFoundError"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.BaseReportState._get_url": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "bool",
    "str",
    "superset.utils.urls.get_url_path",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.BaseReportState.create_log": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "str",
    "superset.models.reports.ReportExecutionLog",
    "superset.models.reports.ReportState",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.BaseReportState.is_in_grace_period": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime.utcnow",
    "datetime.timedelta",
    "superset.reports.dao.ReportScheduleDAO.find_last_success_log"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.BaseReportState.is_on_working_timeout": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime.utcnow",
    "datetime.timedelta"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.BaseReportState.next": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.BaseReportState.send": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "str",
    "superset.reports.commands.exceptions.ReportScheduleNotificationError",
    "superset.reports.notifications.create_notification",
    "superset.reports.notifications.exceptions.NotificationError"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.BaseReportState.set_state": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "datetime.datetime",
    "superset.models.reports.ReportState"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.BaseReportState.set_state_and_log": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "str",
    "superset.models.reports.ReportState",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.BaseScreenshot": {
  "data": {
   "shadows": "superset.utils.screenshots.BaseScreenshot"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ChartScreenshot": {
  "data": {
   "shadows": "superset.utils.screenshots.ChartScreenshot"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.DashboardScreenshot": {
  "data": {
   "shadows": "superset.utils.screenshots.DashboardScreenshot"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.NotificationContent": {
  "data": {
   "shadows": "superset.reports.notifications.base.NotificationContent"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.NotificationError": {
  "data": {
   "shadows": "superset.reports.notifications.exceptions.NotificationError"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportExecutionLog": {
  "data": {
   "shadows": "superset.models.reports.ReportExecutionLog"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportNotTriggeredErrorState": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "superset.models.reports.ReportState.ERROR",
    "superset.models.reports.ReportState.NOOP",
    "superset.reports.commands.execute.BaseReportState"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.execute.ReportNotTriggeredErrorState.next": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "str",
    "superset.commands.exceptions.CommandException",
    "superset.models.reports.ReportScheduleType.ALERT",
    "superset.models.reports.ReportState.ERROR",
    "superset.models.reports.ReportState.NOOP",
    "superset.models.reports.ReportState.SUCCESS",
    "superset.models.reports.ReportState.WORKING",
    "superset.reports.commands.alert.AlertCommand"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.ReportSchedule": {
  "data": {
   "shadows": "superset.models.reports.ReportSchedule"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportScheduleAlertEndGracePeriodError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleAlertEndGracePeriodError"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportScheduleAlertGracePeriodError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleAlertGracePeriodError"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportScheduleDAO": {
  "data": {
   "shadows": "superset.reports.dao.ReportScheduleDAO"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportScheduleExecuteUnexpectedError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleExecuteUnexpectedError"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportScheduleNotFoundError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleNotFoundError"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportScheduleNotificationError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleNotificationError"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportSchedulePreviousWorkingError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportSchedulePreviousWorkingError"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportScheduleScreenshotFailedError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleScreenshotFailedError"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportScheduleSelleniumUserNotFoundError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleSelleniumUserNotFoundError"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportScheduleStateMachine": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "superset.reports.commands.execute.ReportNotTriggeredErrorState",
    "superset.reports.commands.execute.ReportSuccessState",
    "superset.reports.commands.execute.ReportWorkingState"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.execute.ReportScheduleStateMachine.__init__": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "datetime.datetime",
    "sqlalchemy.orm.Session",
    "superset.models.reports.ReportSchedule"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.ReportScheduleStateMachine.run": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "state_cls",
    "superset.reports.commands.exceptions.ReportScheduleStateNotFoundError"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.ReportScheduleStateNotFoundError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleStateNotFoundError"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportScheduleType": {
  "data": {
   "shadows": "superset.models.reports.ReportScheduleType"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportScheduleUnexpectedError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleUnexpectedError"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportScheduleWorkingTimeoutError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleWorkingTimeoutError"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportState": {
  "data": {
   "shadows": "superset.models.reports.ReportState"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.ReportSuccessState": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "superset.models.reports.ReportState.GRACE",
    "superset.models.reports.ReportState.SUCCESS",
    "superset.reports.commands.execute.BaseReportState"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.execute.ReportSuccessState.next": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "str",
    "superset.commands.exceptions.CommandException",
    "superset.models.reports.ReportScheduleType.ALERT",
    "superset.models.reports.ReportState.ERROR",
    "superset.models.reports.ReportState.GRACE",
    "superset.models.reports.ReportState.NOOP",
    "superset.models.reports.ReportState.SUCCESS",
    "superset.models.reports.ReportState.WORKING",
    "superset.reports.commands.exceptions.ReportScheduleAlertEndGracePeriodError",
    "superset.reports.commands.exceptions.ReportScheduleAlertGracePeriodError"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.ReportWorkingState": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "superset.models.reports.ReportState.WORKING",
    "superset.reports.commands.execute.BaseReportState"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.execute.ReportWorkingState.next": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "str",
    "superset.models.reports.ReportState.ERROR",
    "superset.models.reports.ReportState.WORKING",
    "superset.reports.commands.exceptions.ReportSchedulePreviousWorkingError",
    "superset.reports.commands.exceptions.ReportScheduleWorkingTimeoutError"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.execute.ScreenshotData": {
  "data": {
   "shadows": "superset.reports.notifications.base.ScreenshotData"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.create_notification": {
  "data": {
   "shadows": "superset.reports.notifications.create_notification"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.get_url_path": {
  "data": {
   "shadows": "superset.utils.urls.get_url_path"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.logger": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "superset.reports.commands.execute.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.session_scope": {
  "data": {
   "shadows": "superset.utils.celery.session_scope"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.thumbnail_cache": {
  "data": {
   "shadows": "superset.thumbnail_cache"
  },
  "type": "import"
 },
 "superset.reports.commands.execute.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.reports.commands.log_prune": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.reports.commands.log_prune.logging"
   ]
  },
  "type": "module"
 },
 "superset.reports.commands.log_prune.AsyncPruneReportScheduleLogCommand": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "superset.commands.base.BaseCommand"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.log_prune.AsyncPruneReportScheduleLogCommand.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.log_prune.AsyncPruneReportScheduleLogCommand.run": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "datetime.timedelta",
    "str",
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.models.reports.ReportSchedule",
    "superset.models.reports.ReportSchedule.name",
    "superset.reports.commands.exceptions.ReportSchedulePruneLogError",
    "superset.reports.commands.log_prune.logger",
    "superset.reports.dao.ReportScheduleDAO.bulk_delete_logs",
    "superset.utils.celery.session_scope"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.log_prune.AsyncPruneReportScheduleLogCommand.validate": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "superset.reports.commands.log_prune.BaseCommand": {
  "data": {
   "shadows": "superset.commands.base.BaseCommand"
  },
  "type": "import"
 },
 "superset.reports.commands.log_prune.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.reports.commands.log_prune.ReportSchedule": {
  "data": {
   "shadows": "superset.models.reports.ReportSchedule"
  },
  "type": "import"
 },
 "superset.reports.commands.log_prune.ReportScheduleDAO": {
  "data": {
   "shadows": "superset.reports.dao.ReportScheduleDAO"
  },
  "type": "import"
 },
 "superset.reports.commands.log_prune.ReportSchedulePruneLogError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportSchedulePruneLogError"
  },
  "type": "import"
 },
 "superset.reports.commands.log_prune.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.reports.commands.log_prune.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.reports.commands.log_prune.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.reports.commands.log_prune.session_scope": {
  "data": {
   "shadows": "superset.utils.celery.session_scope"
  },
  "type": "import"
 },
 "superset.reports.commands.log_prune.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.reports.commands.update": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.reports.commands.update.logging"
   ]
  },
  "type": "module"
 },
 "superset.reports.commands.update.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.reports.commands.update.BaseReportScheduleCommand": {
  "data": {
   "shadows": "superset.reports.commands.base.BaseReportScheduleCommand"
  },
  "type": "import"
 },
 "superset.reports.commands.update.DAOUpdateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOUpdateFailedError"
  },
  "type": "import"
 },
 "superset.reports.commands.update.DatabaseDAO": {
  "data": {
   "shadows": "superset.databases.dao.DatabaseDAO"
  },
  "type": "import"
 },
 "superset.reports.commands.update.DatabaseNotFoundValidationError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.DatabaseNotFoundValidationError"
  },
  "type": "import"
 },
 "superset.reports.commands.update.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.reports.commands.update.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.reports.commands.update.Model": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.Model"
  },
  "type": "import"
 },
 "superset.reports.commands.update.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.reports.commands.update.ReportSchedule": {
  "data": {
   "shadows": "superset.models.reports.ReportSchedule"
  },
  "type": "import"
 },
 "superset.reports.commands.update.ReportScheduleDAO": {
  "data": {
   "shadows": "superset.reports.dao.ReportScheduleDAO"
  },
  "type": "import"
 },
 "superset.reports.commands.update.ReportScheduleForbiddenError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleForbiddenError"
  },
  "type": "import"
 },
 "superset.reports.commands.update.ReportScheduleInvalidError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleInvalidError"
  },
  "type": "import"
 },
 "superset.reports.commands.update.ReportScheduleNameUniquenessValidationError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleNameUniquenessValidationError"
  },
  "type": "import"
 },
 "superset.reports.commands.update.ReportScheduleNotFoundError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleNotFoundError"
  },
  "type": "import"
 },
 "superset.reports.commands.update.ReportScheduleType": {
  "data": {
   "shadows": "superset.models.reports.ReportScheduleType"
  },
  "type": "import"
 },
 "superset.reports.commands.update.ReportScheduleUpdateFailedError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleUpdateFailedError"
  },
  "type": "import"
 },
 "superset.reports.commands.update.ReportState": {
  "data": {
   "shadows": "superset.models.reports.ReportState"
  },
  "type": "import"
 },
 "superset.reports.commands.update.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.reports.commands.update.UpdateReportScheduleCommand": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "superset.reports.commands.base.BaseReportScheduleCommand"
   ]
  },
  "type": "class"
 },
 "superset.reports.commands.update.UpdateReportScheduleCommand.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "int",
    "str",
    "superset.models.reports.ReportSchedule",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.update.UpdateReportScheduleCommand.run": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.Model",
    "superset.dao.exceptions.DAOUpdateFailedError",
    "superset.reports.commands.exceptions.ReportScheduleUpdateFailedError",
    "superset.reports.commands.update.logger",
    "superset.reports.dao.ReportScheduleDAO.update"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.update.UpdateReportScheduleCommand.validate": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "int",
    "list",
    "marshmallow.ValidationError",
    "superset.commands.utils.populate_owners",
    "superset.databases.dao.DatabaseDAO.find_by_id",
    "superset.exceptions.SupersetSecurityException",
    "superset.models.reports.ReportScheduleType.ALERT",
    "superset.models.reports.ReportState.NOOP",
    "superset.models.reports.ReportState.WORKING",
    "superset.reports.commands.exceptions.DatabaseNotFoundValidationError",
    "superset.reports.commands.exceptions.ReportScheduleForbiddenError",
    "superset.reports.commands.exceptions.ReportScheduleInvalidError",
    "superset.reports.commands.exceptions.ReportScheduleNameUniquenessValidationError",
    "superset.reports.commands.exceptions.ReportScheduleNotFoundError",
    "superset.reports.commands.update.json",
    "superset.reports.dao.ReportScheduleDAO.find_by_id",
    "superset.reports.dao.ReportScheduleDAO.validate_update_uniqueness",
    "superset.views.base.check_ownership",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.commands.update.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.reports.commands.update.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.reports.commands.update.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.reports.commands.update.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.reports.commands.update.logger": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.reports.commands.update.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.reports.commands.update.populate_owners": {
  "data": {
   "shadows": "superset.commands.utils.populate_owners"
  },
  "type": "import"
 },
 "superset.reports.dao": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.reports.dao.logging"
   ]
  },
  "type": "module"
 },
 "superset.reports.dao.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.reports.dao.BaseDAO": {
  "data": {
   "shadows": "superset.dao.base.BaseDAO"
  },
  "type": "import"
 },
 "superset.reports.dao.DAOCreateFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAOCreateFailedError"
  },
  "type": "import"
 },
 "superset.reports.dao.DAODeleteFailedError": {
  "data": {
   "shadows": "superset.dao.exceptions.DAODeleteFailedError"
  },
  "type": "import"
 },
 "superset.reports.dao.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.reports.dao.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.reports.dao.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.reports.dao.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.reports.dao.ReportExecutionLog": {
  "data": {
   "shadows": "superset.models.reports.ReportExecutionLog"
  },
  "type": "import"
 },
 "superset.reports.dao.ReportRecipients": {
  "data": {
   "shadows": "superset.models.reports.ReportRecipients"
  },
  "type": "import"
 },
 "superset.reports.dao.ReportSchedule": {
  "data": {
   "shadows": "superset.models.reports.ReportSchedule"
  },
  "type": "import"
 },
 "superset.reports.dao.ReportScheduleDAO": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "superset.dao.base.BaseDAO",
    "superset.models.reports.ReportSchedule"
   ]
  },
  "type": "class"
 },
 "superset.reports.dao.ReportScheduleDAO.bulk_delete": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.exc.SQLAlchemyError",
    "staticmethod",
    "str",
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.delete",
    "superset.extensions.db.session.query",
    "superset.extensions.db.session.rollback",
    "superset.models.reports.ReportSchedule",
    "superset.models.reports.ReportSchedule.id.in_",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.dao.ReportScheduleDAO.bulk_delete_logs": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime",
    "int",
    "sqlalchemy.exc.SQLAlchemyError",
    "sqlalchemy.orm.Session",
    "staticmethod",
    "str",
    "superset.dao.exceptions.DAODeleteFailedError",
    "superset.extensions.db.session",
    "superset.models.reports.ReportExecutionLog",
    "superset.models.reports.ReportExecutionLog.end_dttm",
    "superset.models.reports.ReportExecutionLog.report_schedule",
    "superset.models.reports.ReportSchedule",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.dao.ReportScheduleDAO.create": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "flask_appbuilder.Model",
    "setattr",
    "sqlalchemy.exc.SQLAlchemyError",
    "str",
    "superset.dao.exceptions.DAOCreateFailedError",
    "superset.extensions.db.session.add",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.rollback",
    "superset.models.reports.ReportRecipients",
    "superset.models.reports.ReportSchedule",
    "superset.reports.dao.json",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.reports.dao.ReportScheduleDAO.find_active": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "staticmethod",
    "superset.extensions.db.session",
    "superset.models.reports.ReportSchedule",
    "superset.models.reports.ReportSchedule.active.is_",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.dao.ReportScheduleDAO.find_by_chart_id": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "superset.extensions.db.session.query",
    "superset.models.reports.ReportSchedule",
    "superset.models.reports.ReportSchedule.chart_id",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.reports.dao.ReportScheduleDAO.find_by_chart_ids": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "superset.extensions.db.session.query",
    "superset.models.reports.ReportSchedule",
    "superset.models.reports.ReportSchedule.chart_id.in_",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.reports.dao.ReportScheduleDAO.find_by_dashboard_id": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "superset.extensions.db.session.query",
    "superset.models.reports.ReportSchedule",
    "superset.models.reports.ReportSchedule.dashboard_id",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.reports.dao.ReportScheduleDAO.find_by_dashboard_ids": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "superset.extensions.db.session.query",
    "superset.models.reports.ReportSchedule",
    "superset.models.reports.ReportSchedule.dashboard_id.in_",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.reports.dao.ReportScheduleDAO.find_by_database_id": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "superset.extensions.db.session.query",
    "superset.models.reports.ReportSchedule",
    "superset.models.reports.ReportSchedule.database_id",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.reports.dao.ReportScheduleDAO.find_by_database_ids": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "superset.extensions.db.session.query",
    "superset.models.reports.ReportSchedule",
    "superset.models.reports.ReportSchedule.database_id.in_",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.reports.dao.ReportScheduleDAO.find_last_success_log": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "staticmethod",
    "superset.extensions.db.session",
    "superset.models.reports.ReportExecutionLog",
    "superset.models.reports.ReportExecutionLog.end_dttm.desc",
    "superset.models.reports.ReportExecutionLog.report_schedule",
    "superset.models.reports.ReportExecutionLog.state",
    "superset.models.reports.ReportSchedule",
    "superset.models.reports.ReportState.SUCCESS",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.dao.ReportScheduleDAO.update": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "flask_appbuilder.Model",
    "setattr",
    "sqlalchemy.exc.SQLAlchemyError",
    "str",
    "superset.dao.exceptions.DAOCreateFailedError",
    "superset.extensions.db.session.commit",
    "superset.extensions.db.session.merge",
    "superset.extensions.db.session.rollback",
    "superset.models.reports.ReportRecipients",
    "superset.reports.dao.json",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.reports.dao.ReportScheduleDAO.validate_update_uniqueness": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bool",
    "int",
    "staticmethod",
    "str",
    "superset.extensions.db.session.query",
    "superset.models.reports.ReportSchedule",
    "superset.models.reports.ReportSchedule.id",
    "superset.models.reports.ReportSchedule.name",
    "superset.models.reports.ReportSchedule.type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.reports.dao.ReportState": {
  "data": {
   "shadows": "superset.models.reports.ReportState"
  },
  "type": "import"
 },
 "superset.reports.dao.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.reports.dao.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.reports.dao.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.reports.dao.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.reports.dao.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.reports.dao.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.reports.dao.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.reports.filters": {
  "data": {},
  "type": "module"
 },
 "superset.reports.filters.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.reports.filters.BaseFilter": {
  "data": {
   "shadows": "superset.views.base.BaseFilter"
  },
  "type": "import"
 },
 "superset.reports.filters.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.query.Query"
  },
  "type": "import"
 },
 "superset.reports.filters.ReportSchedule": {
  "data": {
   "shadows": "superset.models.reports.ReportSchedule"
  },
  "type": "import"
 },
 "superset.reports.filters.ReportScheduleAllTextFilter": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.reports.filters.ReportScheduleAllTextFilter.apply": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "sqlalchemy.or_",
    "sqlalchemy.orm.query.Query",
    "superset.models.reports.ReportSchedule.description.ilike",
    "superset.models.reports.ReportSchedule.name.ilike",
    "superset.models.reports.ReportSchedule.sql.ilike",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.reports.filters._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.reports.filters.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.reports.logs": {
  "data": {},
  "type": "module"
 },
 "superset.reports.logs.api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.reports.logs.api.logging"
   ]
  },
  "type": "module"
 },
 "superset.reports.logs.api.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.reports.logs.api.BaseSupersetModelRestApi": {
  "data": {
   "shadows": "superset.views.base_api.BaseSupersetModelRestApi"
  },
  "type": "import"
 },
 "superset.reports.logs.api.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.reports.logs.api.MODEL_API_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.reports.logs.api.ReportExecutionLog": {
  "data": {
   "shadows": "superset.models.reports.ReportExecutionLog"
  },
  "type": "import"
 },
 "superset.reports.logs.api.ReportExecutionLogRestApi": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.GET",
    "superset.constants.RouteMethod.GET_LIST",
    "superset.models.reports.ReportExecutionLog",
    "superset.reports.logs.schemas.openapi_spec_methods_override",
    "superset.views.base_api.BaseSupersetModelRestApi"
   ]
  },
  "type": "class"
 },
 "superset.reports.logs.api.ReportExecutionLogRestApi._apply_layered_relation_to_rison": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.reports.logs.api.ReportExecutionLogRestApi.get": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "flask.Response",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.permission_name",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "flask_appbuilder.api.schemas.get_item_schema",
    "int",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.reports.logs.api.ReportExecutionLogRestApi.get_list": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "flask.Response",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.permission_name",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "flask_appbuilder.api.schemas.get_list_schema",
    "int",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.reports.logs.api.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.reports.logs.api.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.reports.logs.api.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.reports.logs.api.expose": {
  "data": {
   "shadows": "flask_appbuilder.api.expose"
  },
  "type": "import"
 },
 "superset.reports.logs.api.get_item_schema": {
  "data": {
   "shadows": "flask_appbuilder.api.schemas.get_item_schema"
  },
  "type": "import"
 },
 "superset.reports.logs.api.get_list_schema": {
  "data": {
   "shadows": "flask_appbuilder.api.schemas.get_list_schema"
  },
  "type": "import"
 },
 "superset.reports.logs.api.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.reports.logs.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.reports.logs.api.openapi_spec_methods_override": {
  "data": {
   "shadows": "superset.reports.logs.schemas.openapi_spec_methods_override"
  },
  "type": "import"
 },
 "superset.reports.logs.api.permission_name": {
  "data": {
   "shadows": "flask_appbuilder.api.permission_name"
  },
  "type": "import"
 },
 "superset.reports.logs.api.protect": {
  "data": {
   "shadows": "flask_appbuilder.api.protect"
  },
  "type": "import"
 },
 "superset.reports.logs.api.rison": {
  "data": {
   "shadows": "flask_appbuilder.api.rison"
  },
  "type": "import"
 },
 "superset.reports.logs.api.safe": {
  "data": {
   "shadows": "flask_appbuilder.api.safe"
  },
  "type": "import"
 },
 "superset.reports.logs.schemas": {
  "data": {},
  "type": "module"
 },
 "superset.reports.logs.schemas.openapi_spec_methods_override": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "superset.reports.notifications": {
  "data": {},
  "type": "module"
 },
 "superset.reports.notifications.BaseNotification": {
  "data": {
   "shadows": "superset.reports.notifications.base.BaseNotification"
  },
  "type": "import"
 },
 "superset.reports.notifications.EmailNotification": {
  "data": {
   "shadows": "superset.reports.notifications.email.EmailNotification"
  },
  "type": "import"
 },
 "superset.reports.notifications.NotificationContent": {
  "data": {
   "shadows": "superset.reports.notifications.base.NotificationContent"
  },
  "type": "import"
 },
 "superset.reports.notifications.ReportRecipients": {
  "data": {
   "shadows": "superset.models.reports.ReportRecipients"
  },
  "type": "import"
 },
 "superset.reports.notifications.SlackNotification": {
  "data": {
   "shadows": "superset.reports.notifications.slack.SlackNotification"
  },
  "type": "import"
 },
 "superset.reports.notifications.base": {
  "data": {},
  "type": "module"
 },
 "superset.reports.notifications.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.reports.notifications.base.BaseNotification": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "superset.models.reports.ReportRecipientType",
    "type",
    "typing.List",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "class"
 },
 "superset.reports.notifications.base.BaseNotification.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "superset.models.reports.ReportRecipients",
    "superset.reports.notifications.base.NotificationContent"
   ]
  },
  "type": "function"
 },
 "superset.reports.notifications.base.BaseNotification.__init_subclass__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.reports.notifications.base.BaseNotification.send": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "superset.reports.notifications.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.reports.notifications.base.NotificationContent": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "str",
    "superset.reports.notifications.base.ScreenshotData"
   ]
  },
  "type": "class"
 },
 "superset.reports.notifications.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.reports.notifications.base.ReportRecipientType": {
  "data": {
   "shadows": "superset.models.reports.ReportRecipientType"
  },
  "type": "import"
 },
 "superset.reports.notifications.base.ReportRecipients": {
  "data": {
   "shadows": "superset.models.reports.ReportRecipients"
  },
  "type": "import"
 },
 "superset.reports.notifications.base.ScreenshotData": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bytes",
    "dataclasses.dataclass",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.reports.notifications.base.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.reports.notifications.base.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "superset.reports.notifications.create_notification": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Exception",
    "plugin",
    "superset.models.reports.ReportRecipients",
    "superset.reports.notifications.base.BaseNotification",
    "superset.reports.notifications.base.BaseNotification.plugins",
    "superset.reports.notifications.base.NotificationContent"
   ]
  },
  "type": "function"
 },
 "superset.reports.notifications.email": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.reports.notifications.email.logging"
   ]
  },
  "type": "module"
 },
 "superset.reports.notifications.email.BaseNotification": {
  "data": {
   "shadows": "superset.reports.notifications.base.BaseNotification"
  },
  "type": "import"
 },
 "superset.reports.notifications.email.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.reports.notifications.email.EmailContent": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bytes",
    "dataclasses.dataclass",
    "str",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "superset.reports.notifications.email.EmailNotification": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "superset.models.reports.ReportRecipientType.EMAIL",
    "superset.reports.notifications.base.BaseNotification",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.reports.notifications.email.EmailNotification._get_content": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "email.utils.make_msgid",
    "flask_babel.gettext",
    "superset.reports.notifications.email.EmailContent"
   ]
  },
  "type": "function"
 },
 "superset.reports.notifications.email.EmailNotification._get_smtp_domain": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "email.utils.parseaddr",
    "staticmethod",
    "str",
    "superset.app.config"
   ]
  },
  "type": "function"
 },
 "superset.reports.notifications.email.EmailNotification._get_subject": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "flask_babel.gettext",
    "str",
    "superset.app.config"
   ]
  },
  "type": "function"
 },
 "superset.reports.notifications.email.EmailNotification._get_to": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "str",
    "superset.reports.notifications.email.json"
   ]
  },
  "type": "function"
 },
 "superset.reports.notifications.email.EmailNotification.send": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Exception",
    "superset.app.config",
    "superset.reports.notifications.email.logger",
    "superset.reports.notifications.exceptions.NotificationError",
    "superset.utils.core.send_email_smtp"
   ]
  },
  "type": "function"
 },
 "superset.reports.notifications.email.NotificationError": {
  "data": {
   "shadows": "superset.reports.notifications.exceptions.NotificationError"
  },
  "type": "import"
 },
 "superset.reports.notifications.email.ReportRecipientType": {
  "data": {
   "shadows": "superset.models.reports.ReportRecipientType"
  },
  "type": "import"
 },
 "superset.reports.notifications.email.__": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.reports.notifications.email.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.reports.notifications.email.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "superset.reports.notifications.email.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.reports.notifications.email.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.reports.notifications.email.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.reports.notifications.email.make_msgid": {
  "data": {
   "shadows": "email.utils.make_msgid"
  },
  "type": "import"
 },
 "superset.reports.notifications.email.parseaddr": {
  "data": {
   "shadows": "email.utils.parseaddr"
  },
  "type": "import"
 },
 "superset.reports.notifications.email.send_email_smtp": {
  "data": {
   "shadows": "superset.utils.core.send_email_smtp"
  },
  "type": "import"
 },
 "superset.reports.notifications.exceptions": {
  "data": {},
  "type": "module"
 },
 "superset.reports.notifications.exceptions.NotificationError": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "superset.reports.notifications.slack": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.reports.notifications.slack.logging"
   ]
  },
  "type": "module"
 },
 "superset.reports.notifications.slack.BaseNotification": {
  "data": {
   "shadows": "superset.reports.notifications.base.BaseNotification"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.IOBase": {
  "data": {
   "shadows": "io.IOBase"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.NotificationError": {
  "data": {
   "shadows": "superset.reports.notifications.exceptions.NotificationError"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.ReportRecipientType": {
  "data": {
   "shadows": "superset.models.reports.ReportRecipientType"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.SlackApiError": {
  "data": {
   "shadows": "slack.errors.SlackApiError"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.SlackClientError": {
  "data": {
   "shadows": "slack.errors.SlackClientError"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.SlackNotification": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "superset.models.reports.ReportRecipientType.SLACK",
    "superset.reports.notifications.base.BaseNotification",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.reports.notifications.slack.SlackNotification._get_body": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "flask_babel.gettext",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.reports.notifications.slack.SlackNotification._get_channel": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "str",
    "superset.reports.notifications.slack.json"
   ]
  },
  "type": "function"
 },
 "superset.reports.notifications.slack.SlackNotification._get_inline_screenshot": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "bytes",
    "io.IOBase",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.reports.notifications.slack.SlackNotification.send": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "retry.api.retry",
    "slack.WebClient",
    "slack.errors.SlackApiError",
    "slack.errors.SlackClientError",
    "slack.web.slack_response.SlackResponse",
    "str",
    "superset.app.config",
    "superset.reports.notifications.exceptions.NotificationError",
    "superset.reports.notifications.slack.logger",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.reports.notifications.slack.SlackResponse": {
  "data": {
   "shadows": "slack.web.slack_response.SlackResponse"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.WebClient": {
  "data": {
   "shadows": "slack.WebClient"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.__": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.reports.notifications.slack.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.reports.notifications.slack.retry": {
  "data": {
   "shadows": "retry.api.retry"
  },
  "type": "import"
 },
 "superset.reports.schemas": {
  "data": {},
  "type": "module"
 },
 "superset.reports.schemas.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.reports.schemas.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.reports.schemas.Length": {
  "data": {
   "shadows": "marshmallow.validate.Length"
  },
  "type": "import"
 },
 "superset.reports.schemas.ReportRecipientConfigJSONSchema": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.String"
   ]
  },
  "type": "class"
 },
 "superset.reports.schemas.ReportRecipientSchema": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Nested",
    "marshmallow.fields.String",
    "marshmallow.validate.OneOf",
    "superset.models.reports.ReportRecipientType",
    "superset.reports.schemas.ReportRecipientConfigJSONSchema",
    "tuple",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.reports.schemas.ReportRecipientType": {
  "data": {
   "shadows": "superset.models.reports.ReportRecipientType"
  },
  "type": "import"
 },
 "superset.reports.schemas.ReportSchedulePostSchema": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "marshmallow.validate.OneOf",
    "superset.models.reports.ReportScheduleType",
    "superset.models.reports.ReportScheduleValidatorType",
    "superset.reports.schemas.ReportRecipientSchema",
    "superset.reports.schemas.ValidatorConfigJSONSchema",
    "superset.reports.schemas.context_markdown_description",
    "superset.reports.schemas.crontab_description",
    "superset.reports.schemas.description_description",
    "superset.reports.schemas.grace_period_description",
    "superset.reports.schemas.log_retention_description",
    "superset.reports.schemas.name_description",
    "superset.reports.schemas.owners_description",
    "superset.reports.schemas.sql_description",
    "superset.reports.schemas.type_description",
    "superset.reports.schemas.validate_crontab",
    "superset.reports.schemas.validator_type_description",
    "superset.reports.schemas.working_timeout_description",
    "tuple",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.reports.schemas.ReportSchedulePostSchema.validate_report_references": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "marshmallow.validate.ValidationError",
    "marshmallow.validates_schema",
    "str",
    "superset.models.reports.ReportScheduleType.REPORT",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.reports.schemas.ReportSchedulePutSchema": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Boolean",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "marshmallow.fields.String",
    "marshmallow.validate.Length",
    "marshmallow.validate.OneOf",
    "superset.models.reports.ReportScheduleType",
    "superset.models.reports.ReportScheduleValidatorType",
    "superset.reports.schemas.ReportRecipientSchema",
    "superset.reports.schemas.ValidatorConfigJSONSchema",
    "superset.reports.schemas.context_markdown_description",
    "superset.reports.schemas.crontab_description",
    "superset.reports.schemas.description_description",
    "superset.reports.schemas.grace_period_description",
    "superset.reports.schemas.log_retention_description",
    "superset.reports.schemas.name_description",
    "superset.reports.schemas.owners_description",
    "superset.reports.schemas.sql_description",
    "superset.reports.schemas.type_description",
    "superset.reports.schemas.validate_crontab",
    "superset.reports.schemas.validator_type_description",
    "superset.reports.schemas.working_timeout_description",
    "tuple",
    "type"
   ]
  },
  "type": "class"
 },
 "superset.reports.schemas.ReportScheduleType": {
  "data": {
   "shadows": "superset.models.reports.ReportScheduleType"
  },
  "type": "import"
 },
 "superset.reports.schemas.ReportScheduleValidatorType": {
  "data": {
   "shadows": "superset.models.reports.ReportScheduleValidatorType"
  },
  "type": "import"
 },
 "superset.reports.schemas.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.reports.schemas.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.reports.schemas.ValidationError": {
  "data": {
   "shadows": "marshmallow.validate.ValidationError"
  },
  "type": "import"
 },
 "superset.reports.schemas.ValidatorConfigJSONSchema": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.String",
    "marshmallow.validate.OneOf",
    "superset.reports.schemas.validator_config_json_op_description"
   ]
  },
  "type": "class"
 },
 "superset.reports.schemas.context_markdown_description": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "superset.reports.schemas.croniter": {
  "data": {
   "shadows": "croniter.croniter"
  },
  "type": "import"
 },
 "superset.reports.schemas.crontab_description": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "superset.reports.schemas.description_description": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "superset.reports.schemas.fields": {
  "data": {
   "shadows": "marshmallow.fields"
  },
  "type": "import"
 },
 "superset.reports.schemas.get_delete_ids_schema": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.reports.schemas.grace_period_description": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "superset.reports.schemas.log_retention_description": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "superset.reports.schemas.name_description": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "superset.reports.schemas.openapi_spec_methods_override": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.reports.schemas.owners_description": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "superset.reports.schemas.sql_description": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "superset.reports.schemas.type_description": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "superset.reports.schemas.validate": {
  "data": {
   "shadows": "marshmallow.validate"
  },
  "type": "import"
 },
 "superset.reports.schemas.validate_crontab": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "croniter.croniter.is_valid",
    "marshmallow.validate.ValidationError",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.reports.schemas.validates_schema": {
  "data": {
   "shadows": "marshmallow.validates_schema"
  },
  "type": "import"
 },
 "superset.reports.schemas.validator_config_json_op_description": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "superset.reports.schemas.validator_type_description": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "superset.reports.schemas.working_timeout_description": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "superset.result_set": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.result_set.logging"
   ]
  },
  "type": "module"
 },
 "superset.result_set.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.result_set.DbapiDescription": {
  "data": {
   "shadows": "superset.typing.DbapiDescription"
  },
  "type": "import"
 },
 "superset.result_set.DbapiResult": {
  "data": {
   "shadows": "superset.typing.DbapiResult"
  },
  "type": "import"
 },
 "superset.result_set.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.result_set.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.result_set.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.result_set.SupersetResultSet": {
  "data": {
   "lineno": 74
  },
  "type": "class"
 },
 "superset.result_set.SupersetResultSet.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "enumerate",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.ndarray",
    "pandas.Series",
    "pandas.to_datetime",
    "pyarrow.Array",
    "pyarrow.Array.from_pandas",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.lib.ArrowInvalid",
    "pyarrow.lib.ArrowNotImplementedError",
    "pyarrow.lib.ArrowTypeError",
    "pyarrow.timestamp",
    "pyarrow.types.is_nested",
    "pyarrow.types.is_temporal",
    "str",
    "superset.db_engine_specs.BaseEngineSpec",
    "superset.result_set.datetime",
    "superset.result_set.dedup",
    "superset.result_set.logger",
    "superset.result_set.stringify_values",
    "superset.typing.DbapiDescription",
    "superset.typing.DbapiResult",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "typing.Type",
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.result_set.SupersetResultSet.columns": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.result_set.SupersetResultSet.convert_pa_dtype": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pyarrow.DataType",
    "pyarrow.types.is_boolean",
    "pyarrow.types.is_floating",
    "pyarrow.types.is_integer",
    "pyarrow.types.is_string",
    "pyarrow.types.is_temporal",
    "staticmethod",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.result_set.SupersetResultSet.convert_table_to_df": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "superset.result_set.SupersetResultSet.data_type": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "pyarrow.DataType",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.result_set.SupersetResultSet.first_nonempty": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "next",
    "staticmethod",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.result_set.SupersetResultSet.is_temporal": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "bool",
    "str",
    "superset.utils.core.DbColumnType.TEMPORAL",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.result_set.SupersetResultSet.pa_table": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "property",
    "pyarrow.Table"
   ]
  },
  "type": "function"
 },
 "superset.result_set.SupersetResultSet.size": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.result_set.SupersetResultSet.to_pandas_df": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "superset.result_set.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.result_set.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.result_set.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "superset.result_set.db_engine_specs": {
  "data": {
   "shadows": "superset.db_engine_specs"
  },
  "type": "import"
 },
 "superset.result_set.dedup": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.result_set.destringify": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "str",
    "superset.result_set.json",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.result_set.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.result_set.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.result_set.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.result_set.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "superset.result_set.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "superset.result_set.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.result_set.stringify": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "str",
    "superset.result_set.json",
    "superset.utils.core.json_iso_dttm_ser",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.result_set.stringify_values": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.vectorize",
    "superset.result_set.stringify",
    "vstringify"
   ]
  },
  "type": "function"
 },
 "superset.result_set.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.results_backend": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "superset.results_backend_manager": {
  "data": {
   "shadows": "superset.extensions.results_backend_manager"
  },
  "type": "import"
 },
 "superset.results_backend_use_msgpack": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "superset.security": {
  "data": {},
  "type": "module"
 },
 "superset.security.SupersetSecurityManager": {
  "data": {
   "shadows": "superset.security.manager.SupersetSecurityManager"
  },
  "type": "import"
 },
 "superset.security.analytics_db_safety": {
  "data": {},
  "type": "module"
 },
 "superset.security.analytics_db_safety.DBSecurityException": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "superset.exceptions.SupersetException"
   ]
  },
  "type": "class"
 },
 "superset.security.analytics_db_safety.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.security.analytics_db_safety.URL": {
  "data": {
   "shadows": "sqlalchemy.engine.url.URL"
  },
  "type": "import"
 },
 "superset.security.analytics_db_safety.check_sqlalchemy_uri": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "sqlalchemy.engine.url.URL",
    "superset.security.analytics_db_safety.DBSecurityException"
   ]
  },
  "type": "function"
 },
 "superset.security.manager": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "flask_appbuilder.security.views.PermissionModelView.include_route_methods",
    "flask_appbuilder.security.views.PermissionModelView.list_widget",
    "flask_appbuilder.security.views.PermissionViewModelView.include_route_methods",
    "flask_appbuilder.security.views.PermissionViewModelView.list_widget",
    "flask_appbuilder.security.views.RoleModelView.edit_columns",
    "flask_appbuilder.security.views.RoleModelView.include_route_methods",
    "flask_appbuilder.security.views.RoleModelView.list_columns",
    "flask_appbuilder.security.views.RoleModelView.list_widget",
    "flask_appbuilder.security.views.RoleModelView.related_views",
    "flask_appbuilder.security.views.UserModelView.include_route_methods",
    "flask_appbuilder.security.views.UserModelView.list_widget",
    "flask_appbuilder.security.views.ViewMenuModelView.include_route_methods",
    "superset.constants.RouteMethod.ACTION",
    "superset.constants.RouteMethod.ACTION_POST",
    "superset.constants.RouteMethod.API_READ",
    "superset.constants.RouteMethod.CRUD_SET",
    "superset.constants.RouteMethod.LIST",
    "superset.security.manager.SupersetRoleListWidget",
    "superset.security.manager.SupersetSecurityListWidget",
    "superset.security.manager.logging",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.security.manager.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.security.manager.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.security.manager.BaseViz": {
  "data": {
   "shadows": "superset.viz.BaseViz"
  },
  "type": "import"
 },
 "superset.security.manager.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.security.manager.Connection": {
  "data": {
   "shadows": "sqlalchemy.engine.base.Connection"
  },
  "type": "import"
 },
 "superset.security.manager.ConnectorRegistry": {
  "data": {
   "shadows": "superset.connectors.connector_registry.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.security.manager.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.security.manager.DatasourceName": {
  "data": {
   "shadows": "superset.utils.core.DatasourceName"
  },
  "type": "import"
 },
 "superset.security.manager.DruidCluster": {
  "data": {
   "shadows": "superset.connectors.druid.models.DruidCluster"
  },
  "type": "import"
 },
 "superset.security.manager.ErrorLevel": {
  "data": {
   "shadows": "superset.errors.ErrorLevel"
  },
  "type": "import"
 },
 "superset.security.manager.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.security.manager.ListWidget": {
  "data": {
   "shadows": "flask_appbuilder.widgets.ListWidget"
  },
  "type": "import"
 },
 "superset.security.manager.Mapper": {
  "data": {
   "shadows": "sqlalchemy.orm.mapper.Mapper"
  },
  "type": "import"
 },
 "superset.security.manager.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.security.manager.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.security.manager.PermissionModelView": {
  "data": {
   "shadows": "flask_appbuilder.security.views.PermissionModelView"
  },
  "type": "import"
 },
 "superset.security.manager.PermissionView": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.PermissionView"
  },
  "type": "import"
 },
 "superset.security.manager.PermissionViewModelView": {
  "data": {
   "shadows": "flask_appbuilder.security.views.PermissionViewModelView"
  },
  "type": "import"
 },
 "superset.security.manager.Query": {
  "data": {
   "shadows": "superset.models.sql_lab.Query"
  },
  "type": "import"
 },
 "superset.security.manager.QueryContext": {
  "data": {
   "shadows": "superset.common.query_context.QueryContext"
  },
  "type": "import"
 },
 "superset.security.manager.RLSFilterRoles": {
  "data": {
   "shadows": "superset.connectors.sqla.models.RLSFilterRoles"
  },
  "type": "import"
 },
 "superset.security.manager.RLSFilterTables": {
  "data": {
   "shadows": "superset.connectors.sqla.models.RLSFilterTables"
  },
  "type": "import"
 },
 "superset.security.manager.RoleModelView": {
  "data": {
   "shadows": "flask_appbuilder.security.views.RoleModelView"
  },
  "type": "import"
 },
 "superset.security.manager.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.security.manager.RowLevelSecurityFilter": {
  "data": {
   "shadows": "superset.connectors.sqla.models.RowLevelSecurityFilter"
  },
  "type": "import"
 },
 "superset.security.manager.RowLevelSecurityFilterType": {
  "data": {
   "shadows": "superset.utils.core.RowLevelSecurityFilterType"
  },
  "type": "import"
 },
 "superset.security.manager.SecurityManager": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.manager.SecurityManager"
  },
  "type": "import"
 },
 "superset.security.manager.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.security.manager.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.security.manager.SqlaQuery": {
  "data": {
   "shadows": "sqlalchemy.orm.query.Query"
  },
  "type": "import"
 },
 "superset.security.manager.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.security.manager.SupersetError": {
  "data": {
   "shadows": "superset.errors.SupersetError"
  },
  "type": "import"
 },
 "superset.security.manager.SupersetErrorType": {
  "data": {
   "shadows": "superset.errors.SupersetErrorType"
  },
  "type": "import"
 },
 "superset.security.manager.SupersetRoleListWidget": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "flask_appbuilder.widgets.ListWidget"
   ]
  },
  "type": "class"
 },
 "superset.security.manager.SupersetRoleListWidget.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "flask.current_app.appbuilder",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.security.manager.SupersetSecurityListWidget": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "flask_appbuilder.widgets.ListWidget"
   ]
  },
  "type": "class"
 },
 "superset.security.manager.SupersetSecurityManager": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.manager.SecurityManager"
   ]
  },
  "type": "class"
 },
 "superset.security.manager.SupersetSecurityManager._get_pvms_from_builtin_role": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.PermissionView",
    "str",
    "superset.security.manager.re",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager._is_accessible_to_all": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.security.sqla.models.PermissionView"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager._is_admin_only": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.security.sqla.models.PermissionView"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager._is_admin_pvm": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.security.sqla.models.PermissionView"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager._is_alpha_only": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.security.sqla.models.PermissionView"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager._is_alpha_pvm": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.security.sqla.models.PermissionView"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager._is_gamma_pvm": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.security.sqla.models.PermissionView"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager._is_granter_pvm": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.security.sqla.models.PermissionView"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager._is_sql_lab_pvm": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.security.sqla.models.PermissionView"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager._is_user_defined_permission": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.Model"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.can_access": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "bool",
    "flask.g.user",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.can_access_all_databases": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.can_access_all_datasources": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.can_access_all_queries": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.can_access_database": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "bool",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.can_access_datasource": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "bool",
    "superset.exceptions.SupersetSecurityException"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.can_access_schema": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.can_access_table": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "bool",
    "superset.exceptions.SupersetSecurityException"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.clean_perms": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.PermissionView",
    "flask_appbuilder.security.sqla.models.PermissionView.permission",
    "flask_appbuilder.security.sqla.models.PermissionView.view_menu",
    "sqlalchemy.or_",
    "superset.security.manager.logger"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.copy_role": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "bool",
    "list",
    "str",
    "superset.security.manager.logger"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.create_custom_permissions": {
  "data": {
   "lineno": 549
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.create_missing_perms": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "merge_pv",
    "set",
    "superset.connectors.connector_registry.ConnectorRegistry.get_all_datasources",
    "superset.models.core.Database",
    "superset.security.manager.logger"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.create_missing_perms.merge_pv": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.get_datasource_access_error_msg": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.get_datasource_access_error_object": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "superset.errors.ErrorLevel.ERROR",
    "superset.errors.SupersetError",
    "superset.errors.SupersetErrorType.DATASOURCE_SECURITY_ACCESS_ERROR"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.get_datasource_access_link": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "superset.conf.get",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.get_datasources_accessible_by_user": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "str",
    "superset.connectors.connector_registry.ConnectorRegistry.query_datasources_by_permissions",
    "superset.utils.core.DatasourceName",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.get_rls_filters": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "flask.g",
    "flask.g.user",
    "flask.g.user.id",
    "flask_appbuilder.security.sqla.models.assoc_user_role.c.role_id",
    "flask_appbuilder.security.sqla.models.assoc_user_role.c.user_id",
    "hasattr",
    "sqlalchemy.and_",
    "sqlalchemy.or_",
    "sqlalchemy.orm.query.Query",
    "superset.connectors.sqla.models.RLSFilterRoles.c.rls_filter_id",
    "superset.connectors.sqla.models.RLSFilterRoles.c.role_id.in_",
    "superset.connectors.sqla.models.RLSFilterTables.c.rls_filter_id",
    "superset.connectors.sqla.models.RLSFilterTables.c.table_id",
    "superset.connectors.sqla.models.RowLevelSecurityFilter",
    "superset.connectors.sqla.models.RowLevelSecurityFilter.clause",
    "superset.connectors.sqla.models.RowLevelSecurityFilter.filter_type",
    "superset.connectors.sqla.models.RowLevelSecurityFilter.group_key",
    "superset.connectors.sqla.models.RowLevelSecurityFilter.id",
    "superset.connectors.sqla.models.RowLevelSecurityFilter.id.in_",
    "superset.connectors.sqla.models.RowLevelSecurityFilter.id.notin_",
    "superset.utils.core.RowLevelSecurityFilterType.BASE",
    "superset.utils.core.RowLevelSecurityFilterType.REGULAR",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.get_rls_ids": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.get_schema_perm": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.get_schemas_accessible_by_user": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.or_",
    "str",
    "superset.connectors.sqla.models.SqlaTable.database_id",
    "superset.connectors.sqla.models.SqlaTable.perm.in_",
    "superset.connectors.sqla.models.SqlaTable.schema",
    "superset.connectors.sqla.models.SqlaTable.schema.isnot",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.get_table_access_error_msg": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.get_table_access_error_object": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "str",
    "superset.errors.ErrorLevel.ERROR",
    "superset.errors.SupersetError",
    "superset.errors.SupersetErrorType.TABLE_SECURITY_ACCESS_ERROR",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.get_table_access_link": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "str",
    "superset.conf.get",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.get_user_by_username": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "sqlalchemy.orm.Session",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.merge_perm": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "str",
    "superset.security.manager.logger"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.raise_for_access": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "set",
    "superset.connectors.sqla.models.SqlaTable.query_datasources_by_name",
    "superset.exceptions.SupersetSecurityException",
    "superset.sql_parse.ParsedQuery",
    "superset.sql_parse.Table",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.set_perm": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "hasattr",
    "sqlalchemy.engine.base.Connection",
    "sqlalchemy.orm.mapper.Mapper"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.set_role": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.security.sqla.models.PermissionView",
    "pvm_check",
    "str",
    "superset.security.manager.logger",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.sync_role_definitions": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "superset.conf",
    "superset.conf.get",
    "superset.security.manager.logger"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.unpack_schema_perm": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.SupersetSecurityManager.user_view_menu_names": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "flask.g.user.id",
    "flask.g.user.is_anonymous",
    "flask_appbuilder.security.sqla.models.assoc_permissionview_role",
    "flask_appbuilder.security.sqla.models.assoc_user_role",
    "set",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.security.manager.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.security.manager.Table": {
  "data": {
   "shadows": "superset.sql_parse.Table"
  },
  "type": "import"
 },
 "superset.security.manager.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.security.manager.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.security.manager.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.security.manager.UserModelView": {
  "data": {
   "shadows": "flask_appbuilder.security.views.UserModelView"
  },
  "type": "import"
 },
 "superset.security.manager.ViewMenuModelView": {
  "data": {
   "shadows": "flask_appbuilder.security.views.ViewMenuModelView"
  },
  "type": "import"
 },
 "superset.security.manager.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "superset.security.manager.assoc_permissionview_role": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.assoc_permissionview_role"
  },
  "type": "import"
 },
 "superset.security.manager.assoc_user_role": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.assoc_user_role"
  },
  "type": "import"
 },
 "superset.security.manager.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.security.manager.conf": {
  "data": {
   "shadows": "superset.conf"
  },
  "type": "import"
 },
 "superset.security.manager.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.security.manager.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.security.manager.logger": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "superset.security.manager.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.security.manager.models": {
  "data": {
   "shadows": "superset.models.core"
  },
  "type": "import"
 },
 "superset.security.manager.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.security.manager.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.security.manager.sql_parse": {
  "data": {
   "shadows": "superset.sql_parse"
  },
  "type": "import"
 },
 "superset.security_manager": {
  "data": {
   "shadows": "superset.extensions.security_manager"
  },
  "type": "import"
 },
 "superset.sql_lab": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.app.config",
    "superset.sql_lab.SQLLAB_TIMEOUT",
    "superset.sql_lab.config",
    "superset.sql_lab.logging"
   ]
  },
  "type": "module"
 },
 "superset.sql_lab.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.sql_lab.BaseEngineSpec": {
  "data": {
   "shadows": "superset.db_engine_specs.BaseEngineSpec"
  },
  "type": "import"
 },
 "superset.sql_lab.CtasMethod": {
  "data": {
   "shadows": "superset.sql_parse.CtasMethod"
  },
  "type": "import"
 },
 "superset.sql_lab.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.sql_lab.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.sql_lab.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.sql_lab.ParsedQuery": {
  "data": {
   "shadows": "superset.sql_parse.ParsedQuery"
  },
  "type": "import"
 },
 "superset.sql_lab.Query": {
  "data": {
   "shadows": "superset.models.sql_lab.Query"
  },
  "type": "import"
 },
 "superset.sql_lab.QuerySource": {
  "data": {
   "shadows": "superset.utils.core.QuerySource"
  },
  "type": "import"
 },
 "superset.sql_lab.QueryStatus": {
  "data": {
   "shadows": "superset.utils.core.QueryStatus"
  },
  "type": "import"
 },
 "superset.sql_lab.SQLLAB_CTAS_NO_LIMIT": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "superset.sql_lab.SQLLAB_HARD_TIMEOUT": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "superset.sql_lab.SQLLAB_TIMEOUT": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "superset.sql_lab.SQL_MAX_ROW": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "superset.sql_lab.SQL_QUERY_MUTATOR": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "superset.sql_lab.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.sql_lab.SoftTimeLimitExceeded": {
  "data": {
   "shadows": "celery.exceptions.SoftTimeLimitExceeded"
  },
  "type": "import"
 },
 "superset.sql_lab.SqlLabException": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "superset.sql_lab.SqlLabSecurityException": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "superset.sql_lab.SqlLabException"
   ]
  },
  "type": "class"
 },
 "superset.sql_lab.SqlLabTimeoutException": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "superset.sql_lab.SqlLabException"
   ]
  },
  "type": "class"
 },
 "superset.sql_lab.SupersetResultSet": {
  "data": {
   "shadows": "superset.result_set.SupersetResultSet"
  },
  "type": "import"
 },
 "superset.sql_lab.Task": {
  "data": {
   "shadows": "celery.task.base.Task"
  },
  "type": "import"
 },
 "superset.sql_lab.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.sql_lab.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.sql_lab._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.sql_lab._serialize_and_expand_data": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "pyarrow.default_serialization_context",
    "str",
    "superset.dataframe.df_to_records",
    "superset.db_engine_specs.BaseEngineSpec",
    "superset.result_set.SupersetResultSet",
    "superset.sql_lab.stats_logger",
    "superset.utils.decorators.stats_timing",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.sql_lab._serialize_payload": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "simplejson.dumps",
    "str",
    "superset.sql_lab.logger",
    "superset.sql_lab.msgpack",
    "superset.utils.core.json_iso_dttm_ser",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.sql_lab.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.sql_lab.backoff": {
  "data": {
   "shadows": "backoff"
  },
  "type": "import"
 },
 "superset.sql_lab.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.sql_lab.celery_app": {
  "data": {
   "shadows": "superset.extensions.celery_app"
  },
  "type": "import"
 },
 "superset.sql_lab.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "superset.sql_lab.config": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "superset.sql_lab.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.sql_lab.df_to_records": {
  "data": {
   "shadows": "superset.dataframe.df_to_records"
  },
  "type": "import"
 },
 "superset.sql_lab.execute_sql_statement": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "bool",
    "celery.exceptions.SoftTimeLimitExceeded",
    "datetime.datetime.fromtimestamp",
    "flask_babel.lazy_gettext",
    "sqlalchemy.orm.Session",
    "str",
    "superset.models.sql_lab.Query",
    "superset.result_set.SupersetResultSet",
    "superset.security_manager",
    "superset.sql_lab.SQLLAB_CTAS_NO_LIMIT",
    "superset.sql_lab.SQLLAB_TIMEOUT",
    "superset.sql_lab.SQL_MAX_ROW",
    "superset.sql_lab.SQL_QUERY_MUTATOR",
    "superset.sql_lab.SqlLabException",
    "superset.sql_lab.SqlLabSecurityException",
    "superset.sql_lab.SqlLabTimeoutException",
    "superset.sql_lab.log_query",
    "superset.sql_lab.logger",
    "superset.sql_lab.stats_logger",
    "superset.sql_parse.ParsedQuery",
    "superset.utils.decorators.stats_timing",
    "type",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.sql_lab.execute_sql_statements": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "contextlib.closing",
    "dict",
    "enumerate",
    "flask_babel.lazy_gettext",
    "float",
    "int",
    "len",
    "sqlalchemy.orm.Session",
    "str",
    "superset.results_backend",
    "superset.results_backend.set",
    "superset.results_backend_use_msgpack",
    "superset.sql_lab.SqlLabException",
    "superset.sql_lab._serialize_and_expand_data",
    "superset.sql_lab._serialize_payload",
    "superset.sql_lab.config",
    "superset.sql_lab.execute_sql_statement",
    "superset.sql_lab.get_query",
    "superset.sql_lab.handle_query_error",
    "superset.sql_lab.logger",
    "superset.sql_lab.stats_logger",
    "superset.sql_lab.uuid",
    "superset.sql_parse.CtasMethod.TABLE",
    "superset.sql_parse.CtasMethod.VIEW",
    "superset.sql_parse.ParsedQuery",
    "superset.utils.core.QuerySource.SQL_LAB",
    "superset.utils.core.QueryStatus.RUNNING",
    "superset.utils.core.QueryStatus.STOPPED",
    "superset.utils.core.QueryStatus.SUCCESS",
    "superset.utils.core.zlib_compress",
    "superset.utils.dates.now_as_float",
    "superset.utils.decorators.stats_timing",
    "sys.getsizeof",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.sql_lab.get_query": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Exception",
    "int",
    "sqlalchemy.orm.Session",
    "superset.models.sql_lab.Query",
    "superset.sql_lab.SqlLabException",
    "superset.sql_lab.backoff",
    "superset.sql_lab.get_query_backoff_handler",
    "superset.sql_lab.get_query_giveup_handler"
   ]
  },
  "type": "function"
 },
 "superset.sql_lab.get_query_backoff_handler": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "str",
    "superset.sql_lab.logger",
    "superset.sql_lab.stats_logger",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.sql_lab.get_query_giveup_handler": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "superset.sql_lab.stats_logger",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.sql_lab.get_sql_results": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "celery.task.base.Task",
    "execute_sql_statements",
    "float",
    "int",
    "str",
    "superset.extensions.celery_app.task",
    "superset.sql_lab.SQLLAB_HARD_TIMEOUT",
    "superset.sql_lab.SQLLAB_TIMEOUT",
    "superset.sql_lab.get_query",
    "superset.sql_lab.handle_query_error",
    "superset.sql_lab.logger",
    "superset.sql_lab.stats_logger",
    "superset.utils.celery.session_scope",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.sql_lab.getsizeof": {
  "data": {
   "shadows": "sys.getsizeof"
  },
  "type": "import"
 },
 "superset.sql_lab.handle_query_error": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "str",
    "superset.models.sql_lab.Query",
    "superset.sql_lab.config",
    "superset.utils.core.QueryStatus.FAILED",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.sql_lab.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.sql_lab.json_iso_dttm_ser": {
  "data": {
   "shadows": "superset.utils.core.json_iso_dttm_ser"
  },
  "type": "import"
 },
 "superset.sql_lab.log_query": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "superset.sql_lab.logger": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "superset.sql_lab.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.sql_lab.msgpack": {
  "data": {
   "shadows": "msgpack"
  },
  "type": "import"
 },
 "superset.sql_lab.now_as_float": {
  "data": {
   "shadows": "superset.utils.dates.now_as_float"
  },
  "type": "import"
 },
 "superset.sql_lab.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "superset.sql_lab.results_backend": {
  "data": {
   "shadows": "superset.results_backend"
  },
  "type": "import"
 },
 "superset.sql_lab.results_backend_use_msgpack": {
  "data": {
   "shadows": "superset.results_backend_use_msgpack"
  },
  "type": "import"
 },
 "superset.sql_lab.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.sql_lab.session_scope": {
  "data": {
   "shadows": "superset.utils.celery.session_scope"
  },
  "type": "import"
 },
 "superset.sql_lab.stats_logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "superset.sql_lab.stats_timing": {
  "data": {
   "shadows": "superset.utils.decorators.stats_timing"
  },
  "type": "import"
 },
 "superset.sql_lab.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "superset.sql_lab.zlib_compress": {
  "data": {
   "shadows": "superset.utils.core.zlib_compress"
  },
  "type": "import"
 },
 "superset.sql_parse": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.sql_parse.logging"
   ]
  },
  "type": "module"
 },
 "superset.sql_parse.CTE_PREFIX": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.sql_parse.CtasMethod": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.sql_parse.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "superset.sql_parse.Identifier": {
  "data": {
   "shadows": "sqlparse.sql.Identifier"
  },
  "type": "import"
 },
 "superset.sql_parse.IdentifierList": {
  "data": {
   "shadows": "sqlparse.sql.IdentifierList"
  },
  "type": "import"
 },
 "superset.sql_parse.Keyword": {
  "data": {
   "shadows": "sqlparse.tokens.Keyword"
  },
  "type": "import"
 },
 "superset.sql_parse.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.sql_parse.Name": {
  "data": {
   "shadows": "sqlparse.tokens.Name"
  },
  "type": "import"
 },
 "superset.sql_parse.ON_KEYWORD": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.sql_parse.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.sql_parse.PRECEDES_TABLE_NAME": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.sql_parse.ParsedQuery": {
  "data": {
   "lineno": 83
  },
  "type": "class"
 },
 "superset.sql_parse.ParsedQuery.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "bool",
    "int",
    "set",
    "str",
    "superset.sql_parse.Table",
    "superset.sql_parse._extract_limit_from_query",
    "superset.sql_parse.logger",
    "superset.sql_parse.sqlparse",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery._extract_from_token": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "any",
    "hasattr",
    "isinstance",
    "sqlparse.sql.Identifier",
    "sqlparse.sql.IdentifierList",
    "sqlparse.sql.Token",
    "sqlparse.sql.TokenList",
    "sqlparse.tokens.Keyword",
    "superset.sql_parse.PRECEDES_TABLE_NAME"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery._get_table": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "all",
    "len",
    "sqlparse.sql.TokenList",
    "sqlparse.sql.remove_quotes",
    "sqlparse.tokens.Name",
    "sqlparse.tokens.Punctuation",
    "sqlparse.tokens.String",
    "sqlparse.tokens.Whitespace",
    "sqlparse.utils.imt",
    "staticmethod",
    "superset.sql_parse.Table",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery._is_identifier": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "sqlparse.sql.Identifier",
    "sqlparse.sql.IdentifierList",
    "sqlparse.sql.Token",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery._process_tokenlist": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "sqlparse.sql.TokenList",
    "sqlparse.tokens.Name",
    "str",
    "superset.sql_parse.CTE_PREFIX"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery.as_create_table": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "bool",
    "str",
    "superset.sql_parse.CtasMethod",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery.get_statements": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery.is_explain": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "bool",
    "superset.sql_parse.sqlparse"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery.is_select": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery.is_set": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "bool",
    "superset.sql_parse.sqlparse"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery.is_show": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "bool",
    "superset.sql_parse.sqlparse"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery.is_unknown": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery.is_valid_ctas": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery.is_valid_cvas": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "bool",
    "len"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery.limit": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery.set_or_update_query_limit": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "next",
    "sqlparse.tokens.Keyword",
    "str",
    "superset.sql_parse.sqlparse"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery.stripped": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.ParsedQuery.tables": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "property",
    "str",
    "superset.sql_parse.Table",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.Punctuation": {
  "data": {
   "shadows": "sqlparse.tokens.Punctuation"
  },
  "type": "import"
 },
 "superset.sql_parse.RESULT_OPERATIONS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.sql_parse.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.sql_parse.String": {
  "data": {
   "shadows": "sqlparse.tokens.String"
  },
  "type": "import"
 },
 "superset.sql_parse.Table": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.sql_parse.Table.__str__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "str",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.Token": {
  "data": {
   "shadows": "sqlparse.sql.Token"
  },
  "type": "import"
 },
 "superset.sql_parse.TokenList": {
  "data": {
   "shadows": "sqlparse.sql.TokenList"
  },
  "type": "import"
 },
 "superset.sql_parse.Whitespace": {
  "data": {
   "shadows": "sqlparse.tokens.Whitespace"
  },
  "type": "import"
 },
 "superset.sql_parse._extract_limit_from_query": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "sqlparse.sql.IdentifierList",
    "sqlparse.sql.TokenList",
    "sqlparse.tokens.Keyword",
    "superset.sql_parse.sqlparse",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.sql_parse.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "superset.sql_parse.imt": {
  "data": {
   "shadows": "sqlparse.utils.imt"
  },
  "type": "import"
 },
 "superset.sql_parse.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.sql_parse.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.sql_parse.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "superset.sql_parse.remove_quotes": {
  "data": {
   "shadows": "sqlparse.sql.remove_quotes"
  },
  "type": "import"
 },
 "superset.sql_parse.sqlparse": {
  "data": {
   "shadows": "sqlparse"
  },
  "type": "import"
 },
 "superset.sql_validators": {
  "data": {},
  "type": "module"
 },
 "superset.sql_validators.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.sql_validators.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.sql_validators.base": {
  "data": {},
  "type": "module"
 },
 "superset.sql_validators.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.sql_validators.base.BaseSQLValidator": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "superset.sql_validators.base.BaseSQLValidator.validate": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod",
    "str",
    "superset.models.core.Database",
    "superset.sql_validators.base.SQLValidationAnnotation",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.sql_validators.base.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.sql_validators.base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.sql_validators.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.sql_validators.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.sql_validators.base.SQLValidationAnnotation": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "superset.sql_validators.base.SQLValidationAnnotation.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.sql_validators.base.SQLValidationAnnotation.to_dict": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.sql_validators.get_validator_by_name": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "str",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.sql_validators.postgres": {
  "data": {},
  "type": "module"
 },
 "superset.sql_validators.postgres.BaseSQLValidator": {
  "data": {
   "shadows": "superset.sql_validators.base.BaseSQLValidator"
  },
  "type": "import"
 },
 "superset.sql_validators.postgres.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.sql_validators.postgres.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.sql_validators.postgres.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.sql_validators.postgres.PostgreSQLValidator": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "superset.sql_validators.base.BaseSQLValidator"
   ]
  },
  "type": "class"
 },
 "superset.sql_validators.postgres.PostgreSQLValidator.validate": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "classmethod",
    "int",
    "pgsanity.pgsanity.check_string",
    "str",
    "superset.models.core.Database",
    "superset.sql_validators.base.SQLValidationAnnotation",
    "superset.sql_validators.postgres.re",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.sql_validators.postgres.SQLValidationAnnotation": {
  "data": {
   "shadows": "superset.sql_validators.base.SQLValidationAnnotation"
  },
  "type": "import"
 },
 "superset.sql_validators.postgres.check_string": {
  "data": {
   "shadows": "pgsanity.pgsanity.check_string"
  },
  "type": "import"
 },
 "superset.sql_validators.postgres.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.app.config",
    "superset.sql_validators.presto_db.logging"
   ]
  },
  "type": "module"
 },
 "superset.sql_validators.presto_db.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.BaseSQLValidator": {
  "data": {
   "shadows": "superset.sql_validators.base.BaseSQLValidator"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.DatabaseError": {
  "data": {
   "shadows": "pyhive.exc.DatabaseError"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.MAX_ERROR_ROWS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.sql_validators.presto_db.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.ParsedQuery": {
  "data": {
   "shadows": "superset.sql_parse.ParsedQuery"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.PrestoDBSQLValidator": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "superset.sql_validators.base.BaseSQLValidator"
   ]
  },
  "type": "class"
 },
 "superset.sql_validators.presto_db.PrestoDBSQLValidator.validate": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "classmethod",
    "contextlib.closing",
    "flask.g.user",
    "flask.g.user.username",
    "len",
    "str",
    "superset.models.core.Database",
    "superset.sql_parse.ParsedQuery",
    "superset.sql_validators.base.SQLValidationAnnotation",
    "superset.sql_validators.presto_db.logger",
    "superset.utils.core.QuerySource.SQL_LAB",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.sql_validators.presto_db.PrestoDBSQLValidator.validate_statement": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "dict",
    "isinstance",
    "pyhive.exc.DatabaseError",
    "sql_query_mutator",
    "str",
    "superset.models.core.Database",
    "superset.security_manager",
    "superset.sql_parse.ParsedQuery",
    "superset.sql_validators.base.SQLValidationAnnotation",
    "superset.sql_validators.presto_db.MAX_ERROR_ROWS",
    "superset.sql_validators.presto_db.PrestoSQLValidationError",
    "superset.sql_validators.presto_db.config",
    "superset.sql_validators.presto_db.logger",
    "superset.sql_validators.presto_db.time",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.sql_validators.presto_db.PrestoSQLValidationError": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "superset.sql_validators.presto_db.QuerySource": {
  "data": {
   "shadows": "superset.utils.core.QuerySource"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.SQLValidationAnnotation": {
  "data": {
   "shadows": "superset.sql_validators.base.SQLValidationAnnotation"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.config": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.sql_validators.presto_db.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.sql_validators.presto_db.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.sql_validators.presto_db.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "superset.stats_logger": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "superset.stats_logger.logging"
   ]
  },
  "type": "module"
 },
 "superset.stats_logger.BaseStatsLogger": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "superset.stats_logger.BaseStatsLogger.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.BaseStatsLogger.decr": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.BaseStatsLogger.gauge": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.BaseStatsLogger.incr": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.BaseStatsLogger.key": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.BaseStatsLogger.timing": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.DummyStatsLogger": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "superset.stats_logger.BaseStatsLogger"
   ]
  },
  "type": "class"
 },
 "superset.stats_logger.DummyStatsLogger.decr": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "colorama.Fore.CYAN",
    "colorama.Style.RESET_ALL",
    "str",
    "superset.stats_logger.logger"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.DummyStatsLogger.gauge": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "colorama.Fore.CYAN",
    "colorama.Style.RESET_ALL",
    "float",
    "str",
    "superset.stats_logger.logger"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.DummyStatsLogger.incr": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "colorama.Fore.CYAN",
    "colorama.Style.RESET_ALL",
    "str",
    "superset.stats_logger.logger"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.DummyStatsLogger.timing": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "colorama.Fore.CYAN",
    "colorama.Style.RESET_ALL",
    "float",
    "str",
    "superset.stats_logger.logger"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.Fore": {
  "data": {
   "shadows": "colorama.Fore"
  },
  "type": "import"
 },
 "superset.stats_logger.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.stats_logger.StatsClient": {
  "data": {
   "shadows": "statsd.StatsClient"
  },
  "type": "import"
 },
 "superset.stats_logger.StatsdStatsLogger": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "superset.stats_logger.BaseStatsLogger"
   ]
  },
  "type": "class"
 },
 "superset.stats_logger.StatsdStatsLogger.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "int",
    "statsd.StatsClient",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.StatsdStatsLogger.decr": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.StatsdStatsLogger.gauge": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.StatsdStatsLogger.incr": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.StatsdStatsLogger.timing": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.stats_logger.Style": {
  "data": {
   "shadows": "colorama.Style"
  },
  "type": "import"
 },
 "superset.stats_logger.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "superset.stats_logger.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.talisman": {
  "data": {
   "shadows": "superset.extensions.talisman"
  },
  "type": "import"
 },
 "superset.tasks": {
  "data": {},
  "type": "module"
 },
 "superset.tasks.alerts": {
  "data": {},
  "type": "module"
 },
 "superset.tasks.alerts.observer": {
  "data": {
   "symbols_in_volume": [
    "superset.tasks.alerts.observer.logging"
   ]
  },
  "type": "module"
 },
 "superset.tasks.alerts.observer.Alert": {
  "data": {
   "shadows": "superset.models.alerts.Alert"
  },
  "type": "import"
 },
 "superset.tasks.alerts.observer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.tasks.alerts.observer.SQLObservation": {
  "data": {
   "shadows": "superset.models.alerts.SQLObservation"
  },
  "type": "import"
 },
 "superset.tasks.alerts.observer.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.tasks.alerts.observer.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.tasks.alerts.observer.jinja_context": {
  "data": {
   "shadows": "superset.jinja_context"
  },
  "type": "import"
 },
 "superset.tasks.alerts.observer.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.tasks.alerts.observer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.tasks.alerts.observer.observe": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "float",
    "int",
    "sqlalchemy.orm.Session",
    "str",
    "superset.jinja_context.get_template_processor",
    "superset.models.alerts.Alert",
    "superset.models.alerts.SQLObservation",
    "typing.Optional",
    "validate_observer_result"
   ]
  },
  "type": "function"
 },
 "superset.tasks.alerts.observer.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.tasks.alerts.observer.validate_observer_result": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "ValueError",
    "float",
    "int",
    "len",
    "pandas.DataFrame",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.alerts.validator": {
  "data": {
   "symbols_in_volume": [
    "operator.eq",
    "operator.ge",
    "operator.gt",
    "operator.le",
    "operator.lt",
    "operator.ne"
   ]
  },
  "type": "module"
 },
 "superset.tasks.alerts.validator.Alert": {
  "data": {
   "shadows": "superset.models.alerts.Alert"
  },
  "type": "import"
 },
 "superset.tasks.alerts.validator.AlertValidatorType": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "str",
    "superset.tasks.alerts.validator.enum"
   ]
  },
  "type": "class"
 },
 "superset.tasks.alerts.validator.AlertValidatorType.valid_type": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "any",
    "bool",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.tasks.alerts.validator.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.tasks.alerts.validator.OPERATOR_FUNCTIONS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.tasks.alerts.validator.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.tasks.alerts.validator.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.tasks.alerts.validator.check_validator": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "str",
    "superset.exceptions.SupersetException",
    "superset.tasks.alerts.validator.AlertValidatorType",
    "superset.tasks.alerts.validator.OPERATOR_FUNCTIONS",
    "superset.tasks.alerts.validator.json"
   ]
  },
  "type": "function"
 },
 "superset.tasks.alerts.validator.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "superset.tasks.alerts.validator.eq": {
  "data": {
   "shadows": "operator.eq"
  },
  "type": "import"
 },
 "superset.tasks.alerts.validator.ge": {
  "data": {
   "shadows": "operator.ge"
  },
  "type": "import"
 },
 "superset.tasks.alerts.validator.get_validator_function": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "bool",
    "str",
    "superset.models.alerts.Alert",
    "superset.tasks.alerts.validator.AlertValidatorType",
    "superset.tasks.alerts.validator.not_null_validator",
    "superset.tasks.alerts.validator.operator_validator",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.alerts.validator.gt": {
  "data": {
   "shadows": "operator.gt"
  },
  "type": "import"
 },
 "superset.tasks.alerts.validator.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.tasks.alerts.validator.le": {
  "data": {
   "shadows": "operator.le"
  },
  "type": "import"
 },
 "superset.tasks.alerts.validator.lt": {
  "data": {
   "shadows": "operator.lt"
  },
  "type": "import"
 },
 "superset.tasks.alerts.validator.ne": {
  "data": {
   "shadows": "operator.ne"
  },
  "type": "import"
 },
 "superset.tasks.alerts.validator.not_null_validator": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "bool",
    "numpy.nan",
    "str",
    "superset.models.alerts.Alert"
   ]
  },
  "type": "function"
 },
 "superset.tasks.alerts.validator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "superset.tasks.alerts.validator.operator_validator": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "bool",
    "numpy.nan",
    "str",
    "superset.models.alerts.Alert",
    "superset.tasks.alerts.validator.OPERATOR_FUNCTIONS",
    "superset.tasks.alerts.validator.json"
   ]
  },
  "type": "function"
 },
 "superset.tasks.async_queries": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "flask.current_app.config",
    "superset.tasks.async_queries.logging"
   ]
  },
  "type": "module"
 },
 "superset.tasks.async_queries.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.ChartDataCommand": {
  "data": {
   "shadows": "superset.charts.commands.data.ChartDataCommand"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.SupersetVizException": {
  "data": {
   "shadows": "superset.exceptions.SupersetVizException"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.async_query_manager": {
  "data": {
   "shadows": "superset.extensions.async_query_manager"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.cache_manager": {
  "data": {
   "shadows": "superset.extensions.cache_manager"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.celery_app": {
  "data": {
   "shadows": "superset.extensions.celery_app"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.generate_cache_key": {
  "data": {
   "shadows": "superset.utils.cache.generate_cache_key"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.get_datasource_info": {
  "data": {
   "shadows": "superset.views.utils.get_datasource_info"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.get_viz": {
  "data": {
   "shadows": "superset.views.utils.get_viz"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.load_chart_data_into_cache": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Exception",
    "hasattr",
    "str",
    "superset.app.app_context",
    "superset.charts.commands.data.ChartDataCommand",
    "superset.extensions.async_query_manager.STATUS_DONE",
    "superset.extensions.async_query_manager.STATUS_ERROR",
    "superset.extensions.async_query_manager.update_job",
    "superset.extensions.celery_app.task",
    "superset.tasks.async_queries.query_timeout",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.tasks.async_queries.load_explore_json_into_cache": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "hasattr",
    "isinstance",
    "str",
    "superset.app.app_context",
    "superset.exceptions.SupersetVizException",
    "superset.extensions.async_query_manager.STATUS_DONE",
    "superset.extensions.async_query_manager.STATUS_ERROR",
    "superset.extensions.async_query_manager.update_job",
    "superset.extensions.cache_manager.cache",
    "superset.extensions.celery_app.task",
    "superset.tasks.async_queries.query_timeout",
    "superset.utils.cache.generate_cache_key",
    "superset.utils.cache.set_and_log_cache",
    "superset.views.utils.get_datasource_info",
    "superset.views.utils.get_viz",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.tasks.async_queries.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.tasks.async_queries.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.tasks.async_queries.query_timeout": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.tasks.async_queries.set_and_log_cache": {
  "data": {
   "shadows": "superset.utils.cache.set_and_log_cache"
  },
  "type": "import"
 },
 "superset.tasks.cache": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "celery.utils.log.get_task_logger",
    "superset.tasks.cache.DashboardTagsStrategy",
    "superset.tasks.cache.DummyStrategy",
    "superset.tasks.cache.TopNDashboardsStrategy",
    "superset.tasks.cache.logger",
    "superset.tasks.cache.logging"
   ]
  },
  "type": "module"
 },
 "superset.tasks.cache.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.tasks.cache.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.tasks.cache.DashboardTagsStrategy": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "superset.tasks.cache.Strategy"
   ]
  },
  "type": "class"
 },
 "superset.tasks.cache.DashboardTagsStrategy.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "str",
    "super",
    "superset.tasks.cache.DashboardTagsStrategy",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.cache.DashboardTagsStrategy.get_urls": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "sqlalchemy.and_",
    "str",
    "superset.db.create_scoped_session",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.Dashboard.id.in_",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.id.in_",
    "superset.models.tags.Tag",
    "superset.models.tags.Tag.name.in_",
    "superset.models.tags.TaggedObject",
    "superset.models.tags.TaggedObject.object_type",
    "superset.models.tags.TaggedObject.tag_id.in_",
    "superset.tasks.cache.get_url",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.tasks.cache.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.tasks.cache.DummyStrategy": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "superset.tasks.cache.Strategy"
   ]
  },
  "type": "class"
 },
 "superset.tasks.cache.DummyStrategy.get_urls": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "str",
    "superset.db.create_scoped_session",
    "superset.models.slice.Slice",
    "superset.tasks.cache.get_url",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.tasks.cache.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.tasks.cache.Log": {
  "data": {
   "shadows": "superset.models.core.Log"
  },
  "type": "import"
 },
 "superset.tasks.cache.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.tasks.cache.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.tasks.cache.Strategy": {
  "data": {
   "lineno": 88
  },
  "type": "class"
 },
 "superset.tasks.cache.Strategy.__init__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "superset.tasks.cache.Strategy.get_urls": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.tasks.cache.Tag": {
  "data": {
   "shadows": "superset.models.tags.Tag"
  },
  "type": "import"
 },
 "superset.tasks.cache.TaggedObject": {
  "data": {
   "shadows": "superset.models.tags.TaggedObject"
  },
  "type": "import"
 },
 "superset.tasks.cache.TopNDashboardsStrategy": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "superset.tasks.cache.Strategy"
   ]
  },
  "type": "class"
 },
 "superset.tasks.cache.TopNDashboardsStrategy.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "superset.tasks.cache.TopNDashboardsStrategy",
    "superset.utils.date_parser.parse_human_datetime"
   ]
  },
  "type": "function"
 },
 "superset.tasks.cache.TopNDashboardsStrategy.get_urls": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "sqlalchemy.and_",
    "sqlalchemy.func.count",
    "str",
    "superset.db.create_scoped_session",
    "superset.models.core.Log.dashboard_id",
    "superset.models.core.Log.dashboard_id.isnot",
    "superset.models.core.Log.dttm",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.Dashboard.id.in_",
    "superset.tasks.cache.get_form_data",
    "superset.tasks.cache.get_url",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.tasks.cache.URLError": {
  "data": {
   "shadows": "urllib.error.URLError"
  },
  "type": "import"
 },
 "superset.tasks.cache.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.tasks.cache.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "superset.tasks.cache.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.tasks.cache.build_extra_filters": {
  "data": {
   "shadows": "superset.views.utils.build_extra_filters"
  },
  "type": "import"
 },
 "superset.tasks.cache.cache_warmup": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "TypeError",
    "class_",
    "str",
    "superset.extensions.celery_app.task",
    "superset.tasks.cache.logger",
    "superset.tasks.cache.strategies",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Union",
    "urllib.error.URLError",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "superset.tasks.cache.celery_app": {
  "data": {
   "shadows": "superset.extensions.celery_app"
  },
  "type": "import"
 },
 "superset.tasks.cache.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.tasks.cache.func": {
  "data": {
   "shadows": "sqlalchemy.func"
  },
  "type": "import"
 },
 "superset.tasks.cache.get_form_data": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "str",
    "superset.models.dashboard.Dashboard",
    "superset.tasks.cache.json",
    "superset.views.utils.build_extra_filters",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.cache.get_task_logger": {
  "data": {
   "shadows": "celery.utils.log.get_task_logger"
  },
  "type": "import"
 },
 "superset.tasks.cache.get_url": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "str",
    "superset.app.config",
    "superset.app.test_request_context",
    "superset.models.slice.Slice",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.cache.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.tasks.cache.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.tasks.cache.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.tasks.cache.parse_human_datetime": {
  "data": {
   "shadows": "superset.utils.date_parser.parse_human_datetime"
  },
  "type": "import"
 },
 "superset.tasks.cache.request": {
  "data": {
   "shadows": "urllib.request"
  },
  "type": "import"
 },
 "superset.tasks.cache.strategies": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "superset.tasks.celery_app": {
  "data": {
   "symbols_in_volume": [
    "superset.create_app",
    "superset.extensions.celery_app"
   ]
  },
  "type": "module"
 },
 "superset.tasks.celery_app.app": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.tasks.celery_app.celery_app": {
  "data": {
   "shadows": "superset.extensions.celery_app"
  },
  "type": "import"
 },
 "superset.tasks.celery_app.create_app": {
  "data": {
   "shadows": "superset.create_app"
  },
  "type": "import"
 },
 "superset.tasks.scheduler": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.tasks.scheduler.logging"
   ]
  },
  "type": "module"
 },
 "superset.tasks.scheduler.AsyncExecuteReportScheduleCommand": {
  "data": {
   "shadows": "superset.reports.commands.execute.AsyncExecuteReportScheduleCommand"
  },
  "type": "import"
 },
 "superset.tasks.scheduler.AsyncPruneReportScheduleLogCommand": {
  "data": {
   "shadows": "superset.reports.commands.log_prune.AsyncPruneReportScheduleLogCommand"
  },
  "type": "import"
 },
 "superset.tasks.scheduler.CommandException": {
  "data": {
   "shadows": "superset.commands.exceptions.CommandException"
  },
  "type": "import"
 },
 "superset.tasks.scheduler.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "superset.tasks.scheduler.ReportScheduleDAO": {
  "data": {
   "shadows": "superset.reports.dao.ReportScheduleDAO"
  },
  "type": "import"
 },
 "superset.tasks.scheduler.ReportScheduleUnexpectedError": {
  "data": {
   "shadows": "superset.reports.commands.exceptions.ReportScheduleUnexpectedError"
  },
  "type": "import"
 },
 "superset.tasks.scheduler.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.tasks.scheduler.celery_app": {
  "data": {
   "shadows": "superset.extensions.celery_app"
  },
  "type": "import"
 },
 "superset.tasks.scheduler.cron_schedule_window": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.utcnow",
    "datetime.timedelta",
    "str",
    "superset.app.config",
    "superset.tasks.scheduler.croniter",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "superset.tasks.scheduler.croniter": {
  "data": {
   "shadows": "croniter"
  },
  "type": "import"
 },
 "superset.tasks.scheduler.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.tasks.scheduler.execute": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datetime.datetime",
    "int",
    "superset.commands.exceptions.CommandException",
    "superset.extensions.celery_app.task",
    "superset.reports.commands.exceptions.ReportScheduleUnexpectedError",
    "superset.reports.commands.execute.AsyncExecuteReportScheduleCommand",
    "superset.tasks.scheduler.logger"
   ]
  },
  "type": "function"
 },
 "superset.tasks.scheduler.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.tasks.scheduler.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.tasks.scheduler.prune_log": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "superset.commands.exceptions.CommandException",
    "superset.extensions.celery_app.task",
    "superset.reports.commands.log_prune.AsyncPruneReportScheduleLogCommand",
    "superset.tasks.scheduler.logger"
   ]
  },
  "type": "function"
 },
 "superset.tasks.scheduler.scheduler": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "superset.extensions.celery_app.task",
    "superset.reports.dao.ReportScheduleDAO.find_active",
    "superset.tasks.scheduler.cron_schedule_window",
    "superset.tasks.scheduler.logger",
    "superset.utils.celery.session_scope"
   ]
  },
  "type": "function"
 },
 "superset.tasks.scheduler.session_scope": {
  "data": {
   "shadows": "superset.utils.celery.session_scope"
  },
  "type": "import"
 },
 "superset.tasks.scheduler.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.tasks.schedules": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "flask.current_app.config",
    "superset.app.config",
    "superset.tasks.schedules.config",
    "superset.tasks.schedules.logger",
    "superset.tasks.schedules.logging",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.tasks.schedules.Alert": {
  "data": {
   "shadows": "superset.models.alerts.Alert"
  },
  "type": "import"
 },
 "superset.tasks.schedules.AlertContent": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "str",
    "superset.tasks.schedules.ScreenshotData",
    "typing.NamedTuple",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.tasks.schedules.AlertLog": {
  "data": {
   "shadows": "superset.models.alerts.AlertLog"
  },
  "type": "import"
 },
 "superset.tasks.schedules.AlertState": {
  "data": {
   "lineno": 569
  },
  "type": "class"
 },
 "superset.tasks.schedules.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.tasks.schedules.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.tasks.schedules.ChartScreenshot": {
  "data": {
   "shadows": "superset.utils.screenshots.ChartScreenshot"
  },
  "type": "import"
 },
 "superset.tasks.schedules.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.tasks.schedules.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.tasks.schedules.EMAIL_PAGE_RENDER_WAIT": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "superset.tasks.schedules.EmailDeliveryType": {
  "data": {
   "shadows": "superset.models.schedules.EmailDeliveryType"
  },
  "type": "import"
 },
 "superset.tasks.schedules.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "superset.tasks.schedules.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "superset.tasks.schedules.NoSuchColumnError": {
  "data": {
   "shadows": "sqlalchemy.exc.NoSuchColumnError"
  },
  "type": "import"
 },
 "superset.tasks.schedules.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.tasks.schedules.ReportContent": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "superset.tasks.schedules.ResourceClosedError": {
  "data": {
   "shadows": "sqlalchemy.exc.ResourceClosedError"
  },
  "type": "import"
 },
 "superset.tasks.schedules.ScheduleType": {
  "data": {
   "shadows": "superset.models.schedules.ScheduleType"
  },
  "type": "import"
 },
 "superset.tasks.schedules.ScreenshotData": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "bytes",
    "str",
    "typing.NamedTuple",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.tasks.schedules.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.tasks.schedules.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.tasks.schedules.SliceEmailReportFormat": {
  "data": {
   "shadows": "superset.models.schedules.SliceEmailReportFormat"
  },
  "type": "import"
 },
 "superset.tasks.schedules.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.tasks.schedules.Task": {
  "data": {
   "shadows": "celery.app.task.Task"
  },
  "type": "import"
 },
 "superset.tasks.schedules.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.tasks.schedules.TypeConversionDict": {
  "data": {
   "shadows": "werkzeug.datastructures.TypeConversionDict"
  },
  "type": "import"
 },
 "superset.tasks.schedules.URLError": {
  "data": {
   "shadows": "urllib.error.URLError"
  },
  "type": "import"
 },
 "superset.tasks.schedules.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.tasks.schedules.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.tasks.schedules.WEBDRIVER_BASEURL": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "superset.tasks.schedules.WEBDRIVER_BASEURL_USER_FRIENDLY": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "superset.tasks.schedules.WebDriver": {
  "data": {
   "shadows": "selenium.webdriver.remote.webdriver.WebDriver"
  },
  "type": "import"
 },
 "superset.tasks.schedules.WebDriverException": {
  "data": {
   "shadows": "selenium.common.exceptions.WebDriverException"
  },
  "type": "import"
 },
 "superset.tasks.schedules.WebDriverProxy": {
  "data": {
   "shadows": "superset.utils.screenshots.WebDriverProxy"
  },
  "type": "import"
 },
 "superset.tasks.schedules.__": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.tasks.schedules._deliver_email": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "str",
    "superset.tasks.schedules._get_email_to_and_bcc",
    "superset.tasks.schedules.config",
    "superset.utils.core.send_email_smtp",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules._generate_report_content": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "bytes",
    "email.utils.make_msgid",
    "email.utils.parseaddr",
    "flask_babel.gettext",
    "str",
    "superset.models.schedules.EmailDeliveryType",
    "superset.models.schedules.EmailDeliveryType.attachment",
    "superset.models.schedules.EmailDeliveryType.inline",
    "superset.tasks.schedules.ReportContent",
    "superset.tasks.schedules.config",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules._get_email_to_and_bcc": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "bool",
    "str",
    "superset.tasks.schedules.config",
    "superset.utils.core.get_email_address_list",
    "typing.Iterator",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules._get_slice_data": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "flask.render_template",
    "flask_babel.gettext",
    "simplejson.dumps",
    "sqlalchemy.orm.Session",
    "superset.app.app_context",
    "superset.extensions.machine_auth_provider_factory.instance.get_auth_cookies",
    "superset.models.schedules.EmailDeliveryType",
    "superset.models.schedules.EmailDeliveryType.attachment",
    "superset.models.schedules.EmailDeliveryType.inline",
    "superset.models.slice.Slice",
    "superset.tasks.schedules.ReportContent",
    "superset.tasks.schedules._get_url_path",
    "superset.tasks.schedules.get_reports_user",
    "urllib.error.URLError"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules._get_slice_screenshot": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "flask.current_app.config",
    "int",
    "sqlalchemy.orm.Session",
    "superset.models.slice.Slice",
    "superset.security_manager.get_user_by_username",
    "superset.tasks.schedules.ScreenshotData",
    "superset.tasks.schedules._get_url_path",
    "superset.thumbnail_cache",
    "superset.utils.screenshots.ChartScreenshot",
    "superset.utils.urls.get_url_path"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules._get_slice_visualization": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "retry.api.retry_call",
    "selenium.common.exceptions.WebDriverException",
    "sqlalchemy.orm.Session",
    "superset.models.schedules.EmailDeliveryType",
    "superset.models.slice.Slice",
    "superset.tasks.schedules.EMAIL_PAGE_RENDER_WAIT",
    "superset.tasks.schedules.ReportContent",
    "superset.tasks.schedules._generate_report_content",
    "superset.tasks.schedules._get_url_path",
    "superset.tasks.schedules.config",
    "superset.tasks.schedules.create_webdriver",
    "superset.tasks.schedules.destroy_webdriver",
    "superset.tasks.schedules.time"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules._get_url_path": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "bool",
    "flask.url_for",
    "str",
    "superset.app.test_request_context",
    "superset.tasks.schedules.WEBDRIVER_BASEURL",
    "superset.tasks.schedules.WEBDRIVER_BASEURL_USER_FRIENDLY",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.tasks.schedules.celery_app": {
  "data": {
   "shadows": "superset.extensions.celery_app"
  },
  "type": "import"
 },
 "superset.tasks.schedules.chrome": {
  "data": {
   "shadows": "selenium.webdriver.chrome"
  },
  "type": "import"
 },
 "superset.tasks.schedules.config": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "superset.tasks.schedules.create_webdriver": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "get_reports_user",
    "selenium.webdriver.remote.webdriver.WebDriver",
    "sqlalchemy.orm.Session",
    "superset.tasks.schedules.config",
    "superset.utils.screenshots.WebDriverProxy"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.croniter": {
  "data": {
   "shadows": "croniter"
  },
  "type": "import"
 },
 "superset.tasks.schedules.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.tasks.schedules.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.tasks.schedules.deliver_alert": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "deliver_email_alert",
    "deliver_slack_alert",
    "int",
    "sqlalchemy.orm.Session",
    "str",
    "superset.models.alerts.Alert",
    "superset.tasks.schedules.AlertContent",
    "superset.tasks.schedules._get_slice_screenshot",
    "superset.tasks.schedules._get_url_path",
    "superset.tasks.schedules.logging",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.deliver_dashboard": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "bool",
    "flask_babel.gettext",
    "getattr",
    "int",
    "retry.api.retry_call",
    "selenium.common.exceptions.WebDriverException",
    "str",
    "superset.models.dashboard.Dashboard",
    "superset.models.schedules.EmailDeliveryType",
    "superset.tasks.schedules.EMAIL_PAGE_RENDER_WAIT",
    "superset.tasks.schedules._deliver_email",
    "superset.tasks.schedules._generate_report_content",
    "superset.tasks.schedules._get_url_path",
    "superset.tasks.schedules.config",
    "superset.tasks.schedules.create_webdriver",
    "superset.tasks.schedules.destroy_webdriver",
    "superset.tasks.schedules.time",
    "superset.tasks.slack_util.deliver_slack_msg",
    "superset.utils.celery.session_scope",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.deliver_email_alert": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "flask.render_template",
    "str",
    "superset.tasks.schedules.AlertContent",
    "superset.tasks.schedules._deliver_email"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.deliver_slack_alert": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "flask.render_template",
    "flask_babel.gettext",
    "str",
    "superset.tasks.schedules.AlertContent",
    "superset.tasks.slack_util.deliver_slack_msg"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.deliver_slack_msg": {
  "data": {
   "shadows": "superset.tasks.slack_util.deliver_slack_msg"
  },
  "type": "import"
 },
 "superset.tasks.schedules.deliver_slice": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "flask_babel.gettext",
    "int",
    "sqlalchemy.orm.Session",
    "str",
    "superset.models.schedules.EmailDeliveryType",
    "superset.models.schedules.SliceEmailReportFormat",
    "superset.models.schedules.SliceEmailReportFormat.data",
    "superset.models.schedules.SliceEmailReportFormat.visualization",
    "superset.models.slice.Slice",
    "superset.tasks.schedules._deliver_email",
    "superset.tasks.schedules._get_slice_data",
    "superset.tasks.schedules._get_slice_visualization",
    "superset.tasks.schedules.config",
    "superset.tasks.slack_util.deliver_slack_msg",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.destroy_webdriver": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "Exception",
    "retry.api.retry_call",
    "selenium.webdriver.chrome.webdriver.WebDriver",
    "selenium.webdriver.firefox.webdriver.WebDriver",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.evaluate_alert": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime.utcnow",
    "int",
    "sqlalchemy.orm.Session",
    "str",
    "superset.models.alerts.Alert",
    "superset.models.alerts.AlertLog",
    "superset.tasks.alerts.observer.observe",
    "superset.tasks.schedules.AlertState",
    "superset.tasks.schedules.deliver_alert",
    "superset.tasks.schedules.logger",
    "superset.tasks.schedules.logging",
    "typing.Optional",
    "validate_observations"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.firefox": {
  "data": {
   "shadows": "selenium.webdriver.firefox"
  },
  "type": "import"
 },
 "superset.tasks.schedules.func": {
  "data": {
   "shadows": "sqlalchemy.func"
  },
  "type": "import"
 },
 "superset.tasks.schedules.get_email_address_list": {
  "data": {
   "shadows": "superset.utils.core.get_email_address_list"
  },
  "type": "import"
 },
 "superset.tasks.schedules.get_reports_user": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "sqlalchemy.func.lower",
    "sqlalchemy.orm.Session",
    "superset.security_manager.user_model",
    "superset.security_manager.user_model.username",
    "superset.tasks.schedules.config"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.get_scheduler_action": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "str",
    "superset.models.schedules.ScheduleType.alert",
    "superset.models.schedules.ScheduleType.dashboard",
    "superset.models.schedules.ScheduleType.slice",
    "superset.tasks.schedules.schedule_alert_query",
    "superset.tasks.schedules.schedule_email_report",
    "typing.Any",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.get_scheduler_model": {
  "data": {
   "shadows": "superset.models.schedules.get_scheduler_model"
  },
  "type": "import"
 },
 "superset.tasks.schedules.get_url_path": {
  "data": {
   "shadows": "superset.utils.urls.get_url_path"
  },
  "type": "import"
 },
 "superset.tasks.schedules.get_validator_function": {
  "data": {
   "shadows": "superset.tasks.alerts.validator.get_validator_function"
  },
  "type": "import"
 },
 "superset.tasks.schedules.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.tasks.schedules.logger": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "superset.tasks.schedules.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.tasks.schedules.machine_auth_provider_factory": {
  "data": {
   "shadows": "superset.extensions.machine_auth_provider_factory"
  },
  "type": "import"
 },
 "superset.tasks.schedules.make_msgid": {
  "data": {
   "shadows": "email.utils.make_msgid"
  },
  "type": "import"
 },
 "superset.tasks.schedules.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "superset.tasks.schedules.next_schedules": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "int",
    "str",
    "superset.tasks.schedules.croniter",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.observe": {
  "data": {
   "shadows": "superset.tasks.alerts.observer.observe"
  },
  "type": "import"
 },
 "superset.tasks.schedules.parseaddr": {
  "data": {
   "shadows": "email.utils.parseaddr"
  },
  "type": "import"
 },
 "superset.tasks.schedules.render_template": {
  "data": {
   "shadows": "flask.render_template"
  },
  "type": "import"
 },
 "superset.tasks.schedules.retry_call": {
  "data": {
   "shadows": "retry.api.retry_call"
  },
  "type": "import"
 },
 "superset.tasks.schedules.schedule_alert_query": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "RuntimeError",
    "celery.app.task.Task",
    "evaluate_alert",
    "int",
    "sqlalchemy.exc.NoSuchColumnError",
    "sqlalchemy.exc.ResourceClosedError",
    "str",
    "superset.extensions.celery_app.task",
    "superset.models.schedules.ScheduleType",
    "superset.models.schedules.ScheduleType.alert",
    "superset.models.schedules.get_scheduler_model",
    "superset.tasks.schedules.config",
    "superset.tasks.schedules.logger",
    "superset.utils.celery.session_scope",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.schedule_alerts": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "datetime.timedelta",
    "superset.extensions.celery_app.task",
    "superset.models.schedules.ScheduleType.alert",
    "superset.tasks.schedules.schedule_window",
    "superset.utils.celery.session_scope"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.schedule_email_report": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "RuntimeError",
    "celery.app.task.Task",
    "int",
    "str",
    "superset.extensions.celery_app.task",
    "superset.models.schedules.ScheduleType",
    "superset.models.schedules.ScheduleType.dashboard",
    "superset.models.schedules.ScheduleType.slice",
    "superset.models.schedules.get_scheduler_model",
    "superset.tasks.schedules.config",
    "superset.tasks.schedules.deliver_dashboard",
    "superset.tasks.schedules.deliver_slice",
    "superset.tasks.schedules.logger",
    "superset.utils.celery.session_scope",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.schedule_hourly": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "datetime.timedelta",
    "dateutil.tz.tzlocal",
    "superset.extensions.celery_app.task",
    "superset.models.schedules.ScheduleType.dashboard",
    "superset.models.schedules.ScheduleType.slice",
    "superset.tasks.schedules.config",
    "superset.tasks.schedules.logger",
    "superset.tasks.schedules.schedule_window",
    "superset.utils.celery.session_scope"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.schedule_window": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "get_scheduler_action",
    "hasattr",
    "int",
    "sqlalchemy.orm.Session",
    "str",
    "superset.models.schedules.get_scheduler_model",
    "superset.tasks.schedules.logging",
    "superset.tasks.schedules.next_schedules"
   ]
  },
  "type": "function"
 },
 "superset.tasks.schedules.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.tasks.schedules.send_email_smtp": {
  "data": {
   "shadows": "superset.utils.core.send_email_smtp"
  },
  "type": "import"
 },
 "superset.tasks.schedules.session_scope": {
  "data": {
   "shadows": "superset.utils.celery.session_scope"
  },
  "type": "import"
 },
 "superset.tasks.schedules.stats_logger": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "superset.tasks.schedules.thumbnail_cache": {
  "data": {
   "shadows": "superset.thumbnail_cache"
  },
  "type": "import"
 },
 "superset.tasks.schedules.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "superset.tasks.schedules.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.tasks.schedules.tzlocal": {
  "data": {
   "shadows": "dateutil.tz.tzlocal"
  },
  "type": "import"
 },
 "superset.tasks.schedules.url_for": {
  "data": {
   "shadows": "flask.url_for"
  },
  "type": "import"
 },
 "superset.tasks.schedules.urllib.request": {
  "data": {
   "shadows": "urllib.request"
  },
  "type": "import"
 },
 "superset.tasks.schedules.validate_observations": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "bool",
    "int",
    "sqlalchemy.orm.Session",
    "str",
    "superset.models.alerts.Alert",
    "superset.tasks.alerts.validator.get_validator_function",
    "superset.tasks.schedules.logger",
    "validate"
   ]
  },
  "type": "function"
 },
 "superset.tasks.slack_util": {
  "data": {
   "symbols_in_volume": [
    "superset.tasks.slack_util.logging"
   ]
  },
  "type": "module"
 },
 "superset.tasks.slack_util.IOBase": {
  "data": {
   "shadows": "io.IOBase"
  },
  "type": "import"
 },
 "superset.tasks.slack_util.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.tasks.slack_util.SlackApiError": {
  "data": {
   "shadows": "slack.errors.SlackApiError"
  },
  "type": "import"
 },
 "superset.tasks.slack_util.SlackResponse": {
  "data": {
   "shadows": "slack.web.slack_response.SlackResponse"
  },
  "type": "import"
 },
 "superset.tasks.slack_util.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.tasks.slack_util.WebClient": {
  "data": {
   "shadows": "slack.WebClient"
  },
  "type": "import"
 },
 "superset.tasks.slack_util.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.tasks.slack_util.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.tasks.slack_util.deliver_slack_msg": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "bytes",
    "flask.current_app.config",
    "io.IOBase",
    "retry.api.retry",
    "slack.WebClient",
    "slack.errors.SlackApiError",
    "slack.web.slack_response.SlackResponse",
    "str",
    "superset.tasks.slack_util.logger",
    "typing.Optional",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.tasks.slack_util.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.tasks.slack_util.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.tasks.slack_util.retry": {
  "data": {
   "shadows": "retry.api.retry"
  },
  "type": "import"
 },
 "superset.tasks.thumbnails": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.tasks.thumbnails.logging"
   ]
  },
  "type": "module"
 },
 "superset.tasks.thumbnails.ChartScreenshot": {
  "data": {
   "shadows": "superset.utils.screenshots.ChartScreenshot"
  },
  "type": "import"
 },
 "superset.tasks.thumbnails.DashboardScreenshot": {
  "data": {
   "shadows": "superset.utils.screenshots.DashboardScreenshot"
  },
  "type": "import"
 },
 "superset.tasks.thumbnails.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.tasks.thumbnails.WindowSize": {
  "data": {
   "shadows": "superset.utils.webdriver.WindowSize"
  },
  "type": "import"
 },
 "superset.tasks.thumbnails.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.tasks.thumbnails.cache_chart_thumbnail": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bool",
    "flask.current_app.config",
    "str",
    "superset.app.app_context",
    "superset.extensions.celery_app.task",
    "superset.security_manager.get_user_by_username",
    "superset.tasks.thumbnails.logger",
    "superset.thumbnail_cache",
    "superset.utils.celery.session_scope",
    "superset.utils.screenshots.ChartScreenshot",
    "superset.utils.webdriver.WindowSize",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.thumbnails.cache_dashboard_thumbnail": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "bool",
    "flask.current_app.config",
    "str",
    "superset.app.app_context",
    "superset.extensions.celery_app.task",
    "superset.security_manager.get_user_by_username",
    "superset.tasks.thumbnails.logger",
    "superset.tasks.thumbnails.logging",
    "superset.thumbnail_cache",
    "superset.utils.celery.session_scope",
    "superset.utils.screenshots.DashboardScreenshot",
    "superset.utils.webdriver.WindowSize",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.tasks.thumbnails.celery_app": {
  "data": {
   "shadows": "superset.extensions.celery_app"
  },
  "type": "import"
 },
 "superset.tasks.thumbnails.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.tasks.thumbnails.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.tasks.thumbnails.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.tasks.thumbnails.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.tasks.thumbnails.session_scope": {
  "data": {
   "shadows": "superset.utils.celery.session_scope"
  },
  "type": "import"
 },
 "superset.tasks.thumbnails.thumbnail_cache": {
  "data": {
   "shadows": "superset.thumbnail_cache"
  },
  "type": "import"
 },
 "superset.thumbnail_cache": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "superset.translations": {
  "data": {},
  "type": "module"
 },
 "superset.translations.utils": {
  "data": {
   "symbols_in_volume": [
    "str",
    "superset.translations.utils.os",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "module"
 },
 "superset.translations.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.translations.utils.DIR": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "superset.translations.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.translations.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.translations.utils.get_language_pack": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Exception",
    "open",
    "str",
    "superset.translations.utils.DIR",
    "superset.translations.utils.json",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.translations.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.translations.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "superset.typing": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "bytes",
    "flask.Flask",
    "flask_caching.Cache",
    "float",
    "int",
    "str",
    "superset.typing.Base",
    "superset.typing.DbapiDescriptionRow",
    "superset.typing.FilterValue",
    "superset.typing.Headers",
    "superset.typing.Status",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "module"
 },
 "superset.typing.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.typing.Base": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.typing.Cache": {
  "data": {
   "shadows": "flask_caching.Cache"
  },
  "type": "import"
 },
 "superset.typing.CacheConfig": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "superset.typing.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.typing.DbapiDescription": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.typing.DbapiDescriptionRow": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "superset.typing.DbapiResult": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.typing.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.typing.FilterValue": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.typing.FilterValues": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "superset.typing.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "superset.typing.FlaskResponse": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "superset.typing.FormData": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "superset.typing.Granularity": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "superset.typing.Headers": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "superset.typing.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.typing.Metric": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.typing.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.typing.QueryObjectDict": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.typing.Response": {
  "data": {
   "shadows": "werkzeug.wrappers.Response"
  },
  "type": "import"
 },
 "superset.typing.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "superset.typing.Status": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "superset.typing.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.typing.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.typing.VizData": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.typing.VizPayload": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.utils": {
  "data": {},
  "type": "module"
 },
 "superset.utils.async_query_manager": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.utils.async_query_manager.logging"
   ]
  },
  "type": "module"
 },
 "superset.utils.async_query_manager.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.utils.async_query_manager.AsyncQueryJobException": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "superset.utils.async_query_manager.AsyncQueryManager": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "superset.utils.async_query_manager.AsyncQueryManager.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "super",
    "superset.utils.async_query_manager.redis",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.async_query_manager.AsyncQueryManager.generate_jwt": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "str",
    "superset.utils.async_query_manager.jwt",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.async_query_manager.AsyncQueryManager.init_app": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Exception",
    "flask.Flask",
    "len",
    "superset.utils.async_query_manager.AsyncQueryTokenException",
    "superset.utils.async_query_manager.redis"
   ]
  },
  "type": "function"
 },
 "superset.utils.async_query_manager.AsyncQueryManager.init_app.validate_session": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "flask.Response",
    "flask.session",
    "str",
    "superset.utils.async_query_manager.uuid"
   ]
  },
  "type": "function"
 },
 "superset.utils.async_query_manager.AsyncQueryManager.init_job": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "str",
    "superset.utils.async_query_manager.build_job_metadata",
    "superset.utils.async_query_manager.uuid",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.async_query_manager.AsyncQueryManager.parse_jwt": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "str",
    "superset.utils.async_query_manager.jwt",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.async_query_manager.AsyncQueryManager.parse_jwt_from_request": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "Exception",
    "flask.Request",
    "str",
    "superset.utils.async_query_manager.AsyncQueryTokenException",
    "superset.utils.async_query_manager.logger",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.async_query_manager.AsyncQueryManager.read_events": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "list",
    "map",
    "str",
    "superset.utils.async_query_manager.increment_id",
    "superset.utils.async_query_manager.parse_event",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.async_query_manager.AsyncQueryManager.update_job": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "str",
    "superset.utils.async_query_manager.AsyncQueryJobException",
    "superset.utils.async_query_manager.json",
    "superset.utils.async_query_manager.logger",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.async_query_manager.AsyncQueryTokenException": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "superset.utils.async_query_manager.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.utils.async_query_manager.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "superset.utils.async_query_manager.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.utils.async_query_manager.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.utils.async_query_manager.Request": {
  "data": {
   "shadows": "flask.Request"
  },
  "type": "import"
 },
 "superset.utils.async_query_manager.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.utils.async_query_manager.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.utils.async_query_manager.build_job_metadata": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "flask.session.get",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.async_query_manager.increment_id": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Exception",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.utils.async_query_manager.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.utils.async_query_manager.jwt": {
  "data": {
   "shadows": "jwt"
  },
  "type": "import"
 },
 "superset.utils.async_query_manager.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.utils.async_query_manager.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.utils.async_query_manager.parse_event": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "str",
    "superset.utils.async_query_manager.json",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.utils.async_query_manager.redis": {
  "data": {
   "shadows": "redis"
  },
  "type": "import"
 },
 "superset.utils.async_query_manager.session": {
  "data": {
   "shadows": "flask.session"
  },
  "type": "import"
 },
 "superset.utils.async_query_manager.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "superset.utils.cache": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "flask.current_app.config",
    "superset.stats_logger.BaseStatsLogger",
    "superset.utils.cache.config",
    "superset.utils.cache.logging"
   ]
  },
  "type": "module"
 },
 "superset.utils.cache.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.utils.cache.BaseStatsLogger": {
  "data": {
   "shadows": "superset.stats_logger.BaseStatsLogger"
  },
  "type": "import"
 },
 "superset.utils.cache.Cache": {
  "data": {
   "shadows": "flask_caching.Cache"
  },
  "type": "import"
 },
 "superset.utils.cache.CacheKey": {
  "data": {
   "shadows": "superset.models.cache.CacheKey"
  },
  "type": "import"
 },
 "superset.utils.cache.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.utils.cache.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.utils.cache.ETagResponseMixin": {
  "data": {
   "shadows": "werkzeug.wrappers.etag.ETagResponseMixin"
  },
  "type": "import"
 },
 "superset.utils.cache.ONE_YEAR": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "superset.utils.cache.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.utils.cache.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.utils.cache.app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.utils.cache.cache_manager": {
  "data": {
   "shadows": "superset.extensions.cache_manager"
  },
  "type": "import"
 },
 "superset.utils.cache.config": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.utils.cache.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.utils.cache.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.utils.cache.etag_cache": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "flask.current_app.config",
    "flask_caching.Cache",
    "float",
    "int",
    "superset.extensions.cache_manager.cache",
    "typing.Any",
    "typing.Callable",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache.etag_cache.decorator": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "f",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache.etag_cache.decorator.wrapper": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime.utcnow",
    "datetime.timedelta",
    "f",
    "flask.current_app.debug",
    "flask.request",
    "flask.request.args",
    "flask.request.method",
    "functools.wraps",
    "list",
    "superset.utils.cache.ONE_YEAR",
    "superset.utils.cache.logger",
    "typing.Any",
    "werkzeug.wrappers.etag.ETagResponseMixin"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache.generate_cache_key": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "str",
    "superset.utils.cache.hashlib",
    "superset.utils.cache.json_dumps",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "superset.utils.cache.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.utils.cache.json_dumps": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "bool",
    "str",
    "superset.utils.cache.json",
    "superset.utils.core.json_int_dttm_ser",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache.json_int_dttm_ser": {
  "data": {
   "shadows": "superset.utils.core.json_int_dttm_ser"
  },
  "type": "import"
 },
 "superset.utils.cache.logger": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "superset.utils.cache.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.utils.cache.memoized_func": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "flask_caching.Cache",
    "str",
    "superset.extensions.cache_manager.cache",
    "superset.utils.cache.view_cache_key",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache.memoized_func.wrap": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache.memoized_func.wrap.wrapped_f": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "f",
    "key",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.utils.cache.set_and_log_cache": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime.utcnow",
    "flask_caching.Cache",
    "int",
    "str",
    "superset.db.session.add",
    "superset.models.cache.CacheKey",
    "superset.utils.cache.config",
    "superset.utils.cache.logger",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.utils.cache.view_cache_key": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "flask.request.args.items",
    "flask.request.path",
    "frozenset",
    "hash",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "superset.utils.cache_manager": {
  "data": {},
  "type": "module"
 },
 "superset.utils.cache_manager.Cache": {
  "data": {
   "shadows": "flask_caching.Cache"
  },
  "type": "import"
 },
 "superset.utils.cache_manager.CacheManager": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "superset.utils.cache_manager.CacheManager.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "flask_caching.Cache",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache_manager.CacheManager.cache": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "flask_caching.Cache",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache_manager.CacheManager.data_cache": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "flask_caching.Cache",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache_manager.CacheManager.init_app": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "flask.Flask"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache_manager.CacheManager.thumbnail_cache": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "flask_caching.Cache",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.utils.cache_manager.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "superset.utils.celery": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.utils.celery.logging"
   ]
  },
  "type": "module"
 },
 "superset.utils.celery.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "superset.utils.celery.NullPool": {
  "data": {
   "shadows": "sqlalchemy.pool.NullPool"
  },
  "type": "import"
 },
 "superset.utils.celery.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.utils.celery.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.utils.celery.contextmanager": {
  "data": {
   "shadows": "contextlib2.contextmanager"
  },
  "type": "import"
 },
 "superset.utils.celery.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.utils.celery.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.utils.celery.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.utils.celery.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.utils.celery.session_scope": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "contextlib2.contextmanager",
    "session_class",
    "sqlalchemy.create_engine",
    "sqlalchemy.orm.Session",
    "sqlalchemy.orm.sessionmaker",
    "sqlalchemy.pool.NullPool",
    "superset.app.config",
    "superset.db.session",
    "superset.utils.celery.logger",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "superset.utils.celery.sessionmaker": {
  "data": {
   "shadows": "sqlalchemy.orm.sessionmaker"
  },
  "type": "import"
 },
 "superset.utils.core": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "__name__",
    "superset.utils.core.logging",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.utils.core.AdhocMetricExpressionType": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.AnnotationType": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.utils.core.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.utils.core.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.utils.core.CertificateException": {
  "data": {
   "shadows": "superset.exceptions.CertificateException"
  },
  "type": "import"
 },
 "superset.utils.core.ChartDataResultFormat": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.ChartDataResultType": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.Connection": {
  "data": {
   "shadows": "sqlalchemy.engine.Connection"
  },
  "type": "import"
 },
 "superset.utils.core.DTTM_ALIAS": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "superset.utils.core.DashboardEncoder": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "superset.utils.core.json"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.DashboardEncoder.__init__": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.DashboardEncoder.default": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "isinstance",
    "str",
    "superset.utils.core.json",
    "superset.utils.core.uuid",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.utils.core.DatasourceName": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "str",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.DbColumnType": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.utils.core.DimSelector": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "pydruid.utils.having.Having"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.DimSelector.__init__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "pydruid.utils.having.Having.__init__",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.EPOCH": {
  "data": {
   "shadows": "superset.utils.dates.EPOCH"
  },
  "type": "import"
 },
 "superset.utils.core.Engine": {
  "data": {
   "shadows": "sqlalchemy.engine.Engine"
  },
  "type": "import"
 },
 "superset.utils.core.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "superset.utils.core.ErrorLevel": {
  "data": {
   "shadows": "superset.errors.ErrorLevel"
  },
  "type": "import"
 },
 "superset.utils.core.ExtraFiltersTimeColumnType": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.FilterOperator": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.utils.core.FormData": {
  "data": {
   "shadows": "superset.typing.FormData"
  },
  "type": "import"
 },
 "superset.utils.core.Having": {
  "data": {
   "shadows": "pydruid.utils.having.Having"
  },
  "type": "import"
 },
 "superset.utils.core.Inspector": {
  "data": {
   "shadows": "sqlalchemy.engine.reflection.Inspector"
  },
  "type": "import"
 },
 "superset.utils.core.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "superset.utils.core.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "superset.utils.core.JSONEncodedDict": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "sqlalchemy.types.TEXT",
    "sqlalchemy.types.TypeDecorator"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.JSONEncodedDict.process_bind_param": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.json",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.JSONEncodedDict.process_result_value": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.json",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.JS_MAX_INTEGER": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "superset.utils.core.LazyString": {
  "data": {
   "shadows": "flask_babel.speaklater.LazyString"
  },
  "type": "import"
 },
 "superset.utils.core.LenientEnum": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.LenientEnum.get": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.utils.core.MEDIUMTEXT": {
  "data": {
   "shadows": "sqlalchemy.dialects.mysql.MEDIUMTEXT"
  },
  "type": "import"
 },
 "superset.utils.core.MIMEApplication": {
  "data": {
   "shadows": "email.mime.application.MIMEApplication"
  },
  "type": "import"
 },
 "superset.utils.core.MIMEImage": {
  "data": {
   "shadows": "email.mime.image.MIMEImage"
  },
  "type": "import"
 },
 "superset.utils.core.MIMEMultipart": {
  "data": {
   "shadows": "email.mime.multipart.MIMEMultipart"
  },
  "type": "import"
 },
 "superset.utils.core.MIMEText": {
  "data": {
   "shadows": "email.mime.text.MIMEText"
  },
  "type": "import"
 },
 "superset.utils.core.Markup": {
  "data": {
   "shadows": "flask.Markup"
  },
  "type": "import"
 },
 "superset.utils.core.MediumText": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "sqlalchemy.Text",
    "sqlalchemy.dialects.mysql.MEDIUMTEXT",
    "sqlalchemy.sql.type_api.Variant"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.Metric": {
  "data": {
   "shadows": "superset.typing.Metric"
  },
  "type": "import"
 },
 "superset.utils.core.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "superset.utils.core.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.utils.core.PostProcessingBoxplotWhiskerType": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.PostProcessingContributionOrientation": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.QueryMode": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.LenientEnum"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.QuerySource": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.QueryStatus": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.ReservedUrlParameters": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.Role": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.Role"
  },
  "type": "import"
 },
 "superset.utils.core.RowLevelSecurityFilterType": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.SQLA": {
  "data": {
   "shadows": "flask_appbuilder.SQLA"
  },
  "type": "import"
 },
 "superset.utils.core.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "superset.utils.core.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.utils.core.SupersetErrorType": {
  "data": {
   "shadows": "superset.errors.SupersetErrorType"
  },
  "type": "import"
 },
 "superset.utils.core.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.utils.core.SupersetTimeoutException": {
  "data": {
   "shadows": "superset.exceptions.SupersetTimeoutException"
  },
  "type": "import"
 },
 "superset.utils.core.TEXT": {
  "data": {
   "shadows": "sqlalchemy.types.TEXT"
  },
  "type": "import"
 },
 "superset.utils.core.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.utils.core.TemporalType": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "enum.Enum",
    "sqlalchemy.types.TEXT",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "superset.utils.core.TimeRangeEndpoint": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "superset.utils.core.TracebackType": {
  "data": {
   "shadows": "types.TracebackType"
  },
  "type": "import"
 },
 "superset.utils.core.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.utils.core.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.utils.core.TypeDecorator": {
  "data": {
   "shadows": "sqlalchemy.types.TypeDecorator"
  },
  "type": "import"
 },
 "superset.utils.core.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.utils.core.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.utils.core.Variant": {
  "data": {
   "shadows": "sqlalchemy.sql.type_api.Variant"
  },
  "type": "import"
 },
 "superset.utils.core._Certificate": {
  "data": {
   "shadows": "cryptography.hazmat.backends.openssl.x509._Certificate"
  },
  "type": "import"
 },
 "superset.utils.core.__": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.utils.core._memoized": {
  "data": {
   "lineno": 315
  },
  "type": "class"
 },
 "superset.utils.core._memoized.__call__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "TypeError",
    "frozenset",
    "getattr",
    "tuple",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.core._memoized.__get__": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "superset.utils.core.functools",
    "typing.Any",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.utils.core._memoized.__init__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.utils.core._memoized.__repr__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.backend": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.get_example_database"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.base_json_conv": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "bytes",
    "datetime.timedelta",
    "flask_babel.speaklater.LazyString",
    "float",
    "int",
    "isinstance",
    "list",
    "memoryview",
    "numpy.bool_",
    "numpy.int64",
    "numpy.ndarray",
    "set",
    "str",
    "superset.utils.core.decimal",
    "superset.utils.core.format_timedelta",
    "superset.utils.core.uuid",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.bleach": {
  "data": {
   "shadows": "bleach"
  },
  "type": "import"
 },
 "superset.utils.core.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.utils.core.cast_to_num": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.choicify": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Iterable",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.conf": {
  "data": {
   "shadows": "superset.conf"
  },
  "type": "import"
 },
 "superset.utils.core.convert_legacy_filters_into_adhoc": {
  "data": {
   "lineno": 1158,
   "symbols_in_volume": [
    "filter",
    "superset.typing.FormData",
    "superset.utils.core.to_adhoc"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.create_ssl_cert_file": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "flask.current_app.config",
    "open",
    "str",
    "superset.utils.core.hashlib",
    "superset.utils.core.os",
    "superset.utils.core.parse_ssl_cert",
    "superset.utils.core.tempfile"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.utils.core.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "superset.utils.core.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.utils.core.datetime_to_epoch": {
  "data": {
   "shadows": "superset.utils.dates.datetime_to_epoch"
  },
  "type": "import"
 },
 "superset.utils.core.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.utils.core.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "superset.utils.core.default_backend": {
  "data": {
   "shadows": "cryptography.hazmat.backends.default_backend"
  },
  "type": "import"
 },
 "superset.utils.core.default_timer": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "superset.utils.core.ensure_path_exists": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "OSError",
    "sqlalchemy.exc.errno",
    "str",
    "superset.utils.core.errno",
    "superset.utils.core.os"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "superset.utils.core.error_msg_from_exception": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.event": {
  "data": {
   "shadows": "sqlalchemy.event"
  },
  "type": "import"
 },
 "superset.utils.core.exc": {
  "data": {
   "shadows": "sqlalchemy.exc"
  },
  "type": "import"
 },
 "superset.utils.core.flash": {
  "data": {
   "shadows": "flask.flash"
  },
  "type": "import"
 },
 "superset.utils.core.flasher": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "RuntimeError",
    "flask.flash",
    "str",
    "superset.utils.core.logger"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.format_list": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "str",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.format_timedelta": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "abs",
    "datetime.timedelta",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.formatdate": {
  "data": {
   "shadows": "email.utils.formatdate"
  },
  "type": "import"
 },
 "superset.utils.core.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "superset.utils.core.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.utils.core.generic_find_constraint_name": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "flask_appbuilder.SQLA",
    "set",
    "sqlalchemy.Table",
    "str",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.generic_find_fk_constraint_name": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "set",
    "sqlalchemy.engine.reflection.Inspector",
    "str",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.generic_find_fk_constraint_names": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "set",
    "sqlalchemy.engine.reflection.Inspector",
    "str",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.generic_find_uq_constraint_name": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "set",
    "sqlalchemy.engine.reflection.Inspector",
    "str",
    "typing.Optional",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_column_name_from_metric": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": [
    "str",
    "superset.typing.Metric",
    "superset.utils.core.AdhocMetricExpressionType",
    "superset.utils.core.is_adhoc_metric",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_column_names_from_metrics": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "str",
    "superset.typing.Metric",
    "superset.utils.core.get_column_name_from_metric",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_datasource_full_name": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_email_address_list": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "superset.utils.core.re",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_email_address_str": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.get_email_address_list"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_example_database": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "superset.conf.get",
    "superset.utils.core.get_or_create_db"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_form_data_token": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.uuid",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_iterable": {
  "data": {
   "lineno": 1345,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_main_database": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "superset.conf.get",
    "superset.utils.core.get_or_create_db"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_metric_name": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "str",
    "superset.typing.Metric",
    "superset.utils.core.is_adhoc_metric"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_metric_names": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "str",
    "superset.typing.Metric",
    "superset.utils.core.get_metric_name",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_or_create_db": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "str",
    "superset.db.session.add",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.models.core.Database",
    "superset.utils.core.logger",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_stacktrace": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": [
    "flask.current_app.config",
    "str",
    "superset.utils.core.traceback",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_time_filter_status": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.ExtraFiltersTimeColumnType",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.get_username": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "Exception",
    "flask.g.user.username",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "superset.utils.core.indexed": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "key",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.is_adhoc_metric": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "bool",
    "dict",
    "isinstance",
    "superset.typing.Metric"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.is_test": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "bool",
    "distutils.util.strtobool",
    "superset.utils.core.os"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.utils.core.json_dumps_w_dates": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.json",
    "superset.utils.core.json_int_dttm_ser",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.json_int_dttm_ser": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "TypeError",
    "datetime.date",
    "datetime.datetime",
    "float",
    "isinstance",
    "pandas.Timestamp",
    "superset.utils.core.base_json_conv",
    "superset.utils.dates.EPOCH.date",
    "superset.utils.dates.datetime_to_epoch",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.json_iso_dttm_ser": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "datetime.date",
    "datetime.datetime",
    "datetime.time",
    "isinstance",
    "pandas.Timestamp",
    "str",
    "superset.utils.core.base_json_conv",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.list_minus": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.logger": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "superset.utils.core.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.utils.core.markdown": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "bool",
    "flask.Markup",
    "str",
    "superset.utils.core.bleach",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.md": {
  "data": {
   "shadows": "markdown"
  },
  "type": "import"
 },
 "superset.utils.core.md5_hex": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.hashlib"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.memoized": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "str",
    "superset.utils.core._memoized",
    "typing.Any",
    "typing.Callable",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.memoized.wrapper": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "superset.utils.core._memoized",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.merge_extra_filters": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "get_filter_key",
    "isinstance",
    "list",
    "set",
    "str",
    "superset.utils.core.to_adhoc",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.merge_extra_filters.get_filter_key": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.merge_request_params": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.models": {
  "data": {
   "shadows": "superset.models.core"
  },
  "type": "import"
 },
 "superset.utils.core.notify_user_about_perm_udate": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "flask.render_template",
    "flask_appbuilder.security.sqla.models.Role",
    "flask_appbuilder.security.sqla.models.User",
    "flask_babel.gettext",
    "send_email_smtp",
    "str",
    "superset.utils.core.logger",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "superset.utils.core.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "superset.utils.core.parse_js_uri_path_item": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Optional",
    "urllib.parse.unquote_plus"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.parse_ssl_cert": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "ValueError",
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.backends.openssl.x509._Certificate",
    "cryptography.x509.load_pem_x509_certificate",
    "str",
    "superset.exceptions.CertificateException"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.utils.core.pessimistic_connection_handling": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "sqlalchemy.engine.Engine"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.pessimistic_connection_handling.ping_connection": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "bool",
    "sqlalchemy.engine.Connection",
    "sqlalchemy.event.listens_for",
    "sqlalchemy.exc.DBAPIError",
    "sqlalchemy.select"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.pessimistic_json_iso_dttm_ser": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.json_iso_dttm_ser",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.utils.core.readfile": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "open",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.render_template": {
  "data": {
   "shadows": "flask.render_template"
  },
  "type": "import"
 },
 "superset.utils.core.sa": {
  "data": {
   "shadows": "sqlalchemy"
  },
  "type": "import"
 },
 "superset.utils.core.select": {
  "data": {
   "shadows": "sqlalchemy.select"
  },
  "type": "import"
 },
 "superset.utils.core.send_email_smtp": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "email.mime.application.MIMEApplication",
    "email.mime.image.MIMEImage",
    "email.mime.multipart.MIMEMultipart",
    "email.mime.text.MIMEText",
    "email.utils.formatdate",
    "get_email_address_list",
    "open",
    "send_mime_email",
    "str",
    "superset.utils.core.os",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.send_mime_email": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "bool",
    "email.mime.multipart.MIMEMultipart",
    "str",
    "superset.utils.core.logger",
    "superset.utils.core.smtplib",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.shortid": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.uuid"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "superset.utils.core.smtplib": {
  "data": {
   "shadows": "smtplib"
  },
  "type": "import"
 },
 "superset.utils.core.split": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "str",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.split_adhoc_filters_into_base_filters": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "superset.typing.FormData"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.strtobool": {
  "data": {
   "shadows": "distutils.util.strtobool"
  },
  "type": "import"
 },
 "superset.utils.core.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "superset.utils.core.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "superset.utils.core.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "superset.utils.core.time_function": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "float",
    "func",
    "superset.typing.FlaskResponse",
    "timeit.default_timer",
    "typing.Any",
    "typing.Callable",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.utils.core.timeout": {
  "data": {
   "lineno": 707
  },
  "type": "class"
 },
 "superset.utils.core.timeout.__enter__": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "ValueError",
    "superset.utils.core.logger",
    "superset.utils.core.signal",
    "superset.utils.core.threading"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.timeout.__exit__": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "ValueError",
    "superset.utils.core.logger",
    "superset.utils.core.signal",
    "types.TracebackType",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.timeout.__init__": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.timeout.handle_timeout": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "int",
    "superset.errors.ErrorLevel.ERROR",
    "superset.errors.SupersetErrorType.BACKEND_TIMEOUT_ERROR",
    "superset.exceptions.SupersetTimeoutException",
    "superset.utils.core.logger",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.to_adhoc": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "bool",
    "str",
    "superset.utils.core.uuid",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "superset.utils.core.unquote_plus": {
  "data": {
   "shadows": "urllib.parse.unquote_plus"
  },
  "type": "import"
 },
 "superset.utils.core.user_label": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "superset.utils.core.validate_json": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "Exception",
    "bytearray",
    "bytes",
    "str",
    "superset.exceptions.SupersetException",
    "superset.utils.core.json",
    "superset.utils.core.logger",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.x509": {
  "data": {
   "shadows": "cryptography.x509"
  },
  "type": "import"
 },
 "superset.utils.core.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "superset.utils.core.zlib_compress": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "str",
    "superset.utils.core.zlib",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.core.zlib_decompress": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "isinstance",
    "str",
    "superset.utils.core.zlib",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.dashboard_filter_scopes_converter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.utils.dashboard_filter_scopes_converter.logging"
   ]
  },
  "type": "module"
 },
 "superset.utils.dashboard_filter_scopes_converter.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.utils.dashboard_filter_scopes_converter.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.utils.dashboard_filter_scopes_converter.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.utils.dashboard_filter_scopes_converter.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.utils.dashboard_filter_scopes_converter.convert_filter_scopes": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "add_filter_scope",
    "collections.defaultdict",
    "int",
    "list",
    "str",
    "superset.models.slice.Slice",
    "superset.utils.dashboard_filter_scopes_converter.json",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.utils.dashboard_filter_scopes_converter.convert_filter_scopes.add_filter_scope": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "list",
    "set",
    "str",
    "superset.utils.dashboard_filter_scopes_converter.logging",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.dashboard_filter_scopes_converter.copy_filter_scopes": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.dashboard_filter_scopes_converter.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "superset.utils.dashboard_filter_scopes_converter.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.utils.dashboard_filter_scopes_converter.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "superset.utils.dashboard_filter_scopes_converter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.utils.dashboard_import_export": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.utils.dashboard_import_export.logging"
   ]
  },
  "type": "module"
 },
 "superset.utils.dashboard_import_export.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.utils.dashboard_import_export.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.utils.dashboard_import_export.export_dashboards": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "sqlalchemy.orm.Session",
    "str",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.Dashboard.export_dashboards",
    "superset.utils.dashboard_import_export.logger"
   ]
  },
  "type": "function"
 },
 "superset.utils.dashboard_import_export.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "superset.utils.dashboard_import_export.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.utils.date_parser": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pyparsing.ParserElement.enablePackrat",
    "superset.utils.date_parser.logging"
   ]
  },
  "type": "module"
 },
 "superset.utils.date_parser.CaselessKeyword": {
  "data": {
   "shadows": "pyparsing.CaselessKeyword"
  },
  "type": "import"
 },
 "superset.utils.date_parser.CountryHoliday": {
  "data": {
   "shadows": "holidays.CountryHoliday"
  },
  "type": "import"
 },
 "superset.utils.date_parser.EvalDateAddFunc": {
  "data": {
   "lineno": 295
  },
  "type": "class"
 },
 "superset.utils.date_parser.EvalDateAddFunc.__init__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "pyparsing.ParseResults"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.EvalDateAddFunc.eval": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "datetime.datetime",
    "superset.utils.date_parser.parse_human_timedelta"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.EvalDateTimeFunc": {
  "data": {
   "lineno": 287
  },
  "type": "class"
 },
 "superset.utils.date_parser.EvalDateTimeFunc.__init__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "pyparsing.ParseResults"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.EvalDateTimeFunc.eval": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "datetime.datetime",
    "superset.utils.date_parser.parse_human_datetime"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.EvalDateTruncFunc": {
  "data": {
   "lineno": 308
  },
  "type": "class"
 },
 "superset.utils.date_parser.EvalDateTruncFunc.__init__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "pyparsing.ParseResults"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.EvalDateTruncFunc.eval": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "datetime.datetime",
    "dateutil.relativedelta.relativedelta"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.EvalHolidayFunc": {
  "data": {
   "lineno": 360
  },
  "type": "class"
 },
 "superset.utils.date_parser.EvalHolidayFunc.__init__": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "pyparsing.ParseResults"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.EvalHolidayFunc.eval": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "flask_babel.lazy_gettext",
    "holidays.CountryHoliday",
    "len",
    "superset.utils.date_parser.dttm_from_timetuple",
    "superset.utils.date_parser.parse_human_datetime"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.EvalLastDayFunc": {
  "data": {
   "lineno": 335
  },
  "type": "class"
 },
 "superset.utils.date_parser.EvalLastDayFunc.__init__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "pyparsing.ParseResults"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.EvalLastDayFunc.eval": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "datetime.datetime",
    "dateutil.relativedelta.relativedelta",
    "superset.utils.date_parser.calendar"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.EvalText": {
  "data": {
   "lineno": 278
  },
  "type": "class"
 },
 "superset.utils.date_parser.EvalText.__init__": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "pyparsing.ParseResults"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.EvalText.eval": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.Forward": {
  "data": {
   "shadows": "pyparsing.Forward"
  },
  "type": "import"
 },
 "superset.utils.date_parser.Group": {
  "data": {
   "shadows": "pyparsing.Group"
  },
  "type": "import"
 },
 "superset.utils.date_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.utils.date_parser.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.utils.date_parser.ParseException": {
  "data": {
   "shadows": "pyparsing.ParseException"
  },
  "type": "import"
 },
 "superset.utils.date_parser.ParseResults": {
  "data": {
   "shadows": "pyparsing.ParseResults"
  },
  "type": "import"
 },
 "superset.utils.date_parser.ParserElement": {
  "data": {
   "shadows": "pyparsing.ParserElement"
  },
  "type": "import"
 },
 "superset.utils.date_parser.Suppress": {
  "data": {
   "shadows": "pyparsing.Suppress"
  },
  "type": "import"
 },
 "superset.utils.date_parser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.utils.date_parser._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.utils.date_parser.add_ago_to_since": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "superset.utils.date_parser.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.utils.date_parser.datetime_eval": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime",
    "pyparsing.Optional",
    "pyparsing.ParseException",
    "str",
    "superset.utils.date_parser.datetime_parser"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.datetime_parser": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "map",
    "pyparsing.CaselessKeyword",
    "pyparsing.Forward",
    "pyparsing.Group",
    "pyparsing.Optional",
    "pyparsing.ParseResults",
    "pyparsing.Suppress",
    "pyparsing.pyparsing_common.signed_integer",
    "pyparsing.quotedString.setName",
    "superset.utils.date_parser.EvalDateAddFunc",
    "superset.utils.date_parser.EvalDateTimeFunc",
    "superset.utils.date_parser.EvalDateTruncFunc",
    "superset.utils.date_parser.EvalHolidayFunc",
    "superset.utils.date_parser.EvalLastDayFunc",
    "superset.utils.date_parser.EvalText"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.dttm_from_timetuple": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "datetime.datetime",
    "time.struct_time"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.get_since_until": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "add_ago_to_since",
    "datetime.datetime",
    "flask_babel.lazy_gettext",
    "flask_babel.lazy_gettext.strip",
    "fn",
    "int",
    "map",
    "pyparsing.Optional",
    "str",
    "superset.utils.date_parser.parse_human_datetime",
    "superset.utils.date_parser.parse_past_timedelta",
    "superset.utils.date_parser.re",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "superset.utils.date_parser.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.utils.date_parser.parse": {
  "data": {
   "shadows": "dateutil.parser.parse"
  },
  "type": "import"
 },
 "superset.utils.date_parser.parse_human_datetime": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "datetime.datetime",
    "dateutil.parser.parse",
    "dttm_from_timetuple",
    "str",
    "superset.utils.date_parser.logger",
    "superset.utils.date_parser.parsedatetime"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.parse_human_timedelta": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.datetime.now",
    "datetime.timedelta",
    "pyparsing.Optional",
    "str",
    "superset.utils.date_parser.dttm_from_timetuple",
    "superset.utils.date_parser.parsedatetime"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.parse_past_timedelta": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timedelta",
    "pyparsing.Optional",
    "str",
    "superset.utils.date_parser.parse_human_timedelta"
   ]
  },
  "type": "function"
 },
 "superset.utils.date_parser.parsedatetime": {
  "data": {
   "shadows": "parsedatetime"
  },
  "type": "import"
 },
 "superset.utils.date_parser.ppOptional": {
  "data": {
   "shadows": "pyparsing.Optional"
  },
  "type": "import"
 },
 "superset.utils.date_parser.pyparsing_common": {
  "data": {
   "shadows": "pyparsing.pyparsing_common"
  },
  "type": "import"
 },
 "superset.utils.date_parser.quotedString": {
  "data": {
   "shadows": "pyparsing.quotedString"
  },
  "type": "import"
 },
 "superset.utils.date_parser.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.utils.date_parser.relativedelta": {
  "data": {
   "shadows": "dateutil.relativedelta.relativedelta"
  },
  "type": "import"
 },
 "superset.utils.date_parser.struct_time": {
  "data": {
   "shadows": "time.struct_time"
  },
  "type": "import"
 },
 "superset.utils.date_parser.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.utils.dates": {
  "data": {
   "symbols_in_volume": [
    "datetime.datetime"
   ]
  },
  "type": "module"
 },
 "superset.utils.dates.EPOCH": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "superset.utils.dates.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.utils.dates.datetime_to_epoch": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "datetime.datetime",
    "float",
    "superset.utils.dates.EPOCH",
    "superset.utils.dates.pytz"
   ]
  },
  "type": "function"
 },
 "superset.utils.dates.now_as_float": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "float",
    "superset.utils.dates.datetime_to_epoch"
   ]
  },
  "type": "function"
 },
 "superset.utils.dates.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "superset.utils.decorators": {
  "data": {},
  "type": "module"
 },
 "superset.utils.decorators.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.utils.decorators.BaseStatsLogger": {
  "data": {
   "shadows": "superset.stats_logger.BaseStatsLogger"
  },
  "type": "import"
 },
 "superset.utils.decorators.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.utils.decorators.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.utils.decorators.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "superset.utils.decorators.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.utils.decorators.arghash": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "hasattr",
    "hash",
    "int",
    "sorted",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.decorators.contextmanager": {
  "data": {
   "shadows": "contextlib2.contextmanager"
  },
  "type": "import"
 },
 "superset.utils.decorators.debounce": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.Any",
    "typing.Callable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.decorators.debounce.decorate": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.decorators.debounce.decorate.wrapped": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "f",
    "superset.utils.decorators.arghash",
    "superset.utils.decorators.time",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.decorators.now_as_float": {
  "data": {
   "shadows": "superset.utils.dates.now_as_float"
  },
  "type": "import"
 },
 "superset.utils.decorators.stats_timing": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Exception",
    "contextlib2.contextmanager",
    "float",
    "str",
    "superset.stats_logger.BaseStatsLogger",
    "superset.utils.dates.now_as_float",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "superset.utils.decorators.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "superset.utils.dict_import_export": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.utils.dict_import_export.logging"
   ]
  },
  "type": "module"
 },
 "superset.utils.dict_import_export.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.utils.dict_import_export.DATABASES_KEY": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.utils.dict_import_export.DRUID_CLUSTERS_KEY": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "superset.utils.dict_import_export.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.utils.dict_import_export.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.utils.dict_import_export.DruidCluster": {
  "data": {
   "shadows": "superset.connectors.druid.models.DruidCluster"
  },
  "type": "import"
 },
 "superset.utils.dict_import_export.EXPORT_VERSION": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "superset.utils.dict_import_export.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.Session"
  },
  "type": "import"
 },
 "superset.utils.dict_import_export.export_schema_to_dict": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "bool",
    "dict",
    "str",
    "superset.connectors.druid.models.DruidCluster.export_schema",
    "superset.models.core.Database.export_schema",
    "superset.utils.dict_import_export.DATABASES_KEY",
    "superset.utils.dict_import_export.DRUID_CLUSTERS_KEY",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.dict_import_export.export_to_dict": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "bool",
    "dict",
    "len",
    "sqlalchemy.orm.Session",
    "str",
    "superset.connectors.druid.models.DruidCluster",
    "superset.models.core.Database",
    "superset.utils.dict_import_export.DATABASES_KEY",
    "superset.utils.dict_import_export.DRUID_CLUSTERS_KEY",
    "superset.utils.dict_import_export.logger",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.dict_import_export.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "superset.utils.dict_import_export.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.utils.feature_flag_manager": {
  "data": {},
  "type": "module"
 },
 "superset.utils.feature_flag_manager.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.utils.feature_flag_manager.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.utils.feature_flag_manager.FeatureFlagManager": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "superset.utils.feature_flag_manager.FeatureFlagManager.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.feature_flag_manager.FeatureFlagManager.get_feature_flags": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "copy.deepcopy",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.feature_flag_manager.FeatureFlagManager.init_app": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "flask.Flask"
   ]
  },
  "type": "function"
 },
 "superset.utils.feature_flag_manager.FeatureFlagManager.is_feature_enabled": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.utils.feature_flag_manager.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "superset.utils.feature_flag_manager.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "superset.utils.hashing": {
  "data": {},
  "type": "module"
 },
 "superset.utils.hashing.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.utils.hashing.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.utils.hashing.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "superset.utils.hashing.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.utils.hashing.md5_sha_from_dict": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "str",
    "superset.utils.hashing.json",
    "superset.utils.hashing.md5_sha_from_str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.hashing.md5_sha_from_str": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "str",
    "superset.utils.hashing.hashlib"
   ]
  },
  "type": "function"
 },
 "superset.utils.log": {
  "data": {},
  "type": "module"
 },
 "superset.utils.log.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "superset.utils.log.API_URI_RIS_KEY": {
  "data": {
   "shadows": "flask_appbuilder.const.API_URI_RIS_KEY"
  },
  "type": "import"
 },
 "superset.utils.log.AbstractEventLogger": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "superset.utils.log.AbstractEventLogger._wrapper": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Optional",
    "typing.Union",
    "typing_extensions.Literal"
   ]
  },
  "type": "function"
 },
 "superset.utils.log.AbstractEventLogger._wrapper.wrapper": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "action",
    "callable",
    "f",
    "log",
    "object_ref",
    "superset.utils.log.functools",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.log.AbstractEventLogger.log": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "str",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.log.AbstractEventLogger.log_context": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "bool",
    "contextlib.contextmanager",
    "flask.g",
    "flask.g.user",
    "flask.g.user.get_id",
    "flask.request.referrer",
    "hasattr",
    "int",
    "round",
    "str",
    "superset.utils.log.collect_request_payload",
    "superset.utils.log.json",
    "superset.utils.log.time",
    "superset.views.core.get_form_data",
    "typing.Callable",
    "typing.Iterator",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.log.AbstractEventLogger.log_this": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "f",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.utils.log.AbstractEventLogger.log_this_with_context": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.utils.log.AbstractEventLogger.log_this_with_context.func": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "f",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.utils.log.AbstractEventLogger.log_this_with_extra_payload": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "f",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.utils.log.AbstractEventLogger.stats_logger": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "flask.current_app.config",
    "property",
    "superset.stats_logger.BaseStatsLogger"
   ]
  },
  "type": "function"
 },
 "superset.utils.log.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.utils.log.BaseStatsLogger": {
  "data": {
   "shadows": "superset.stats_logger.BaseStatsLogger"
  },
  "type": "import"
 },
 "superset.utils.log.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.utils.log.DBEventLogger": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "superset.utils.log.AbstractEventLogger"
   ]
  },
  "type": "class"
 },
 "superset.utils.log.DBEventLogger.log": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "Exception",
    "action",
    "flask.current_app.appbuilder.get_session",
    "int",
    "log",
    "sqlalchemy.exc.SQLAlchemyError",
    "str",
    "superset.models.core.Log",
    "superset.utils.log.json",
    "superset.utils.log.logging",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.log.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.utils.log.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "superset.utils.log.Literal": {
  "data": {
   "shadows": "typing_extensions.Literal"
  },
  "type": "import"
 },
 "superset.utils.log.Log": {
  "data": {
   "shadows": "superset.models.core.Log"
  },
  "type": "import"
 },
 "superset.utils.log.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.utils.log.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.utils.log.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.utils.log.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.utils.log.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "superset.utils.log.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.utils.log.collect_request_payload": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "flask.request.args.to_dict",
    "flask.request.form.to_dict",
    "flask.request.path",
    "flask.request.url_rule",
    "flask_appbuilder.const.API_URI_RIS_KEY",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.log.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "superset.utils.log.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.utils.log.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "superset.utils.log.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.utils.log.get_event_logger_from_cfg_value": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "TypeError",
    "event_logger_type",
    "isinstance",
    "superset.utils.log.AbstractEventLogger",
    "superset.utils.log.inspect",
    "superset.utils.log.logging",
    "superset.utils.log.textwrap",
    "type",
    "typing.Any",
    "typing.Type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.utils.log.get_form_data": {
  "data": {
   "shadows": "superset.views.core.get_form_data"
  },
  "type": "import"
 },
 "superset.utils.log.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "superset.utils.log.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.utils.log.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.utils.log.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.utils.log.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "superset.utils.log.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "superset.utils.logging_configurator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.utils.logging_configurator.logging"
   ]
  },
  "type": "module"
 },
 "superset.utils.logging_configurator.DefaultLoggingConfigurator": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "superset.utils.logging_configurator.LoggingConfigurator"
   ]
  },
  "type": "class"
 },
 "superset.utils.logging_configurator.DefaultLoggingConfigurator.configure_logging": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bool",
    "logging.handlers.TimedRotatingFileHandler",
    "superset.utils.logging_configurator.logger",
    "superset.utils.logging_configurator.logging"
   ]
  },
  "type": "function"
 },
 "superset.utils.logging_configurator.LoggingConfigurator": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "superset.utils.logging_configurator.abc"
   ]
  },
  "type": "class"
 },
 "superset.utils.logging_configurator.LoggingConfigurator.configure_logging": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bool",
    "superset.utils.logging_configurator.abc"
   ]
  },
  "type": "function"
 },
 "superset.utils.logging_configurator.TimedRotatingFileHandler": {
  "data": {
   "shadows": "logging.handlers.TimedRotatingFileHandler"
  },
  "type": "import"
 },
 "superset.utils.logging_configurator.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "superset.utils.logging_configurator.flask.app": {
  "data": {
   "shadows": "flask.app"
  },
  "type": "import"
 },
 "superset.utils.logging_configurator.flask.config": {
  "data": {
   "shadows": "flask.config"
  },
  "type": "import"
 },
 "superset.utils.logging_configurator.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "superset.utils.logging_configurator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.utils.machine_auth": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.utils.machine_auth.logging",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.utils.machine_auth.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.utils.machine_auth.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.utils.machine_auth.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "superset.utils.machine_auth.MachineAuthProvider": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "superset.utils.machine_auth.MachineAuthProvider.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "selenium.webdriver.remote.webdriver.WebDriver",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.utils.machine_auth.MachineAuthProvider.authenticate_webdriver": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "dict",
    "flask.request.cookies",
    "selenium.webdriver.remote.webdriver.WebDriver",
    "superset.utils.urls.headless_url"
   ]
  },
  "type": "function"
 },
 "superset.utils.machine_auth.MachineAuthProvider.get_auth_cookies": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "flask.Response",
    "flask.current_app",
    "flask.current_app.session_interface.save_session",
    "flask.current_app.test_request_context",
    "flask.session",
    "flask_login.login_user",
    "list",
    "staticmethod",
    "str",
    "typing.Dict",
    "werkzeug.http.parse_cookie"
   ]
  },
  "type": "function"
 },
 "superset.utils.machine_auth.MachineAuthProviderFactory": {
  "data": {
   "lineno": 92
  },
  "type": "class"
 },
 "superset.utils.machine_auth.MachineAuthProviderFactory.__init__": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "superset.utils.machine_auth.MachineAuthProviderFactory.init_app": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "auth_provider_class",
    "flask.Flask",
    "getattr",
    "superset.utils.machine_auth.importlib"
   ]
  },
  "type": "function"
 },
 "superset.utils.machine_auth.MachineAuthProviderFactory.instance": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "property",
    "superset.utils.machine_auth.MachineAuthProvider"
   ]
  },
  "type": "function"
 },
 "superset.utils.machine_auth.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.utils.machine_auth.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.utils.machine_auth.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.utils.machine_auth.WebDriver": {
  "data": {
   "shadows": "selenium.webdriver.remote.webdriver.WebDriver"
  },
  "type": "import"
 },
 "superset.utils.machine_auth.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.utils.machine_auth.headless_url": {
  "data": {
   "shadows": "superset.utils.urls.headless_url"
  },
  "type": "import"
 },
 "superset.utils.machine_auth.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "superset.utils.machine_auth.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "superset.utils.machine_auth.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.utils.machine_auth.login_user": {
  "data": {
   "shadows": "flask_login.login_user"
  },
  "type": "import"
 },
 "superset.utils.machine_auth.parse_cookie": {
  "data": {
   "shadows": "werkzeug.http.parse_cookie"
  },
  "type": "import"
 },
 "superset.utils.machine_auth.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.utils.machine_auth.session": {
  "data": {
   "shadows": "flask.session"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing": {
  "data": {
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.argmin",
    "numpy.average",
    "numpy.count_nonzero",
    "numpy.cumprod",
    "numpy.cumsum",
    "numpy.ma.count",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.min",
    "numpy.nanmax",
    "numpy.nanmean",
    "numpy.nanmedian",
    "numpy.nanmin",
    "numpy.nanpercentile",
    "numpy.nansum",
    "numpy.percentile",
    "numpy.prod",
    "numpy.product",
    "numpy.std",
    "numpy.sum",
    "numpy.var"
   ]
  },
  "type": "module"
 },
 "superset.utils.pandas_postprocessing.ALLOWLIST_CUMULATIVE_FUNCTIONS": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "superset.utils.pandas_postprocessing.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.DENYLIST_ROLLING_FUNCTIONS": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "superset.utils.pandas_postprocessing.DTTM_ALIAS": {
  "data": {
   "shadows": "superset.utils.core.DTTM_ALIAS"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.NUMPY_FUNCTIONS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.utils.pandas_postprocessing.NamedAgg": {
  "data": {
   "shadows": "pandas.NamedAgg"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.PROPHET_TIME_GRAIN_MAP": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "superset.utils.pandas_postprocessing.Point": {
  "data": {
   "shadows": "geopy.point.Point"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.PostProcessingBoxplotWhiskerType": {
  "data": {
   "shadows": "superset.utils.core.PostProcessingBoxplotWhiskerType"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.PostProcessingContributionOrientation": {
  "data": {
   "shadows": "superset.utils.core.PostProcessingContributionOrientation"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.Prophet": {
  "data": {
   "shadows": "fbprophet.Prophet"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.QueryObjectValidationError": {
  "data": {
   "shadows": "superset.exceptions.QueryObjectValidationError"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.Timestamp": {
  "data": {
   "shadows": "pandas.Timestamp"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing._": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing._append_columns": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing._flatten_column_after_pivot": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "len",
    "pandas.Timestamp",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing._get_aggregate_funcs": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "callable",
    "flask_babel.gettext",
    "func",
    "functools.partial",
    "pandas.DataFrame",
    "pandas.NamedAgg",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.pandas_postprocessing.NUMPY_FUNCTIONS",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing._prophet_fit_and_predict": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "bool",
    "fbprophet.Prophet",
    "flask_babel.gettext",
    "float",
    "int",
    "pandas.DataFrame",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.pandas_postprocessing.logging",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing._prophet_parse_seasonality": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "isinstance",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.aggregate": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "str",
    "superset.utils.pandas_postprocessing._get_aggregate_funcs",
    "superset.utils.pandas_postprocessing.validate_column_args",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.boxplot": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "flask_babel.gettext",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.ma.count",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.min",
    "pandas.DataFrame",
    "quartile1",
    "quartile3",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.core.PostProcessingBoxplotWhiskerType",
    "superset.utils.core.PostProcessingBoxplotWhiskerType.PERCENTILE",
    "superset.utils.core.PostProcessingBoxplotWhiskerType.TUKEY",
    "superset.utils.pandas_postprocessing.aggregate",
    "tuple",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union",
    "whisker_high",
    "whisker_low"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.boxplot.outliers": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "float",
    "pandas.Series",
    "typing.Set",
    "whisker_high",
    "whisker_low"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.boxplot.quartile1": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "float",
    "numpy.nanpercentile",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.boxplot.quartile3": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "float",
    "numpy.nanpercentile",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.boxplot.whisker_high": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "float",
    "numpy.nanpercentile",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.boxplot.whisker_low": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "float",
    "numpy.nanpercentile",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.contribution": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.core.PostProcessingContributionOrientation",
    "superset.utils.core.PostProcessingContributionOrientation.ROW",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.cum": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "flask_babel.gettext",
    "getattr",
    "hasattr",
    "pandas.DataFrame",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.pandas_postprocessing.ALLOWLIST_CUMULATIVE_FUNCTIONS",
    "superset.utils.pandas_postprocessing._append_columns",
    "superset.utils.pandas_postprocessing.validate_column_args",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.diff": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "int",
    "pandas.DataFrame",
    "str",
    "superset.utils.pandas_postprocessing._append_columns",
    "superset.utils.pandas_postprocessing.validate_column_args",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.geodetic_parse": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "ValueError",
    "flask_babel.gettext",
    "pandas.DataFrame",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.pandas_postprocessing._append_columns",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.geodetic_parse._parse_location": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "float",
    "geopy.point.Point",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.geohash_decode": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "ValueError",
    "flask_babel.gettext",
    "geohash.apply",
    "geohash.decode",
    "pandas.DataFrame",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.pandas_postprocessing._append_columns",
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.geohash_encode": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "ValueError",
    "flask_babel.gettext",
    "geohash",
    "geohash.encode",
    "pandas.DataFrame",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.pandas_postprocessing._append_columns"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.geohash_lib": {
  "data": {
   "shadows": "geohash"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "superset.utils.pandas_postprocessing.pivot": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "bool",
    "flask_babel.gettext",
    "pandas.DataFrame",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.pandas_postprocessing._flatten_column_after_pivot",
    "superset.utils.pandas_postprocessing._get_aggregate_funcs",
    "superset.utils.pandas_postprocessing.validate_column_args",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.prophet": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "bool",
    "flask_babel.gettext",
    "float",
    "int",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.core.DTTM_ALIAS.rename",
    "superset.utils.pandas_postprocessing.PROPHET_TIME_GRAIN_MAP",
    "superset.utils.pandas_postprocessing._prophet_fit_and_predict",
    "superset.utils.pandas_postprocessing._prophet_parse_seasonality",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.rolling": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "flask_babel.gettext",
    "getattr",
    "hasattr",
    "int",
    "pandas.DataFrame",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.pandas_postprocessing.DENYLIST_ROLLING_FUNCTIONS",
    "superset.utils.pandas_postprocessing._append_columns",
    "superset.utils.pandas_postprocessing.validate_column_args",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.select": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "str",
    "superset.utils.pandas_postprocessing.validate_column_args",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.sort": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "bool",
    "list",
    "pandas.DataFrame",
    "str",
    "superset.utils.pandas_postprocessing.validate_column_args",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.validate_column_args": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.validate_column_args.wrapper": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.utils.pandas_postprocessing.validate_column_args.wrapper.wrapped": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "all",
    "flask_babel.gettext",
    "func",
    "pandas.DataFrame",
    "superset.exceptions.QueryObjectValidationError",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.schema": {
  "data": {},
  "type": "module"
 },
 "superset.utils.schema.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.utils.schema.OneOfCaseInsensitive": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "marshmallow.validate.OneOf"
   ]
  },
  "type": "class"
 },
 "superset.utils.schema.OneOfCaseInsensitive.__call__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "marshmallow.ValidationError",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.schema.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.utils.schema.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.utils.schema.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.utils.schema.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.utils.schema.validate": {
  "data": {
   "shadows": "marshmallow.validate"
  },
  "type": "import"
 },
 "superset.utils.schema.validate_json": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "marshmallow.ValidationError",
    "str",
    "superset.exceptions.SupersetException",
    "superset.utils.core.validate_json",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.screenshots": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "__name__",
    "superset.utils.screenshots.logger",
    "superset.utils.screenshots.logging",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.utils.screenshots.BaseScreenshot": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "flask.current_app.config",
    "str",
    "superset.utils.webdriver.WindowSize"
   ]
  },
  "type": "class"
 },
 "superset.utils.screenshots.BaseScreenshot.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "bytes",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.screenshots.BaseScreenshot.cache_key": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "bool",
    "str",
    "superset.utils.hashing.md5_sha_from_dict",
    "superset.utils.webdriver.WindowSize",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.utils.screenshots.BaseScreenshot.compute_and_cache": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "bytes",
    "superset.utils.screenshots.logger",
    "superset.utils.webdriver.WindowSize",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.screenshots.BaseScreenshot.driver": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "superset.utils.webdriver.WebDriverProxy",
    "superset.utils.webdriver.WindowSize",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.screenshots.BaseScreenshot.get": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bytes",
    "io.BytesIO",
    "superset.utils.screenshots.logger",
    "superset.utils.webdriver.WindowSize",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.screenshots.BaseScreenshot.get_from_cache": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "io.BytesIO",
    "superset.utils.webdriver.WindowSize",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.screenshots.BaseScreenshot.get_from_cache_key": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "io.BytesIO",
    "staticmethod",
    "str",
    "superset.utils.screenshots.logger",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.screenshots.BaseScreenshot.get_screenshot": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bytes",
    "superset.utils.webdriver.WindowSize",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.screenshots.BaseScreenshot.resize_image": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "PIL.Image.ANTIALIAS",
    "PIL.Image.open",
    "bool",
    "bytes",
    "classmethod",
    "float",
    "int",
    "io.BytesIO",
    "str",
    "superset.utils.screenshots.logger",
    "superset.utils.webdriver.WindowSize",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.screenshots.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "superset.utils.screenshots.Cache": {
  "data": {
   "shadows": "flask_caching.Cache"
  },
  "type": "import"
 },
 "superset.utils.screenshots.ChartScreenshot": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "str",
    "superset.utils.screenshots.BaseScreenshot",
    "superset.utils.webdriver.WindowSize"
   ]
  },
  "type": "class"
 },
 "superset.utils.screenshots.DashboardScreenshot": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "int",
    "str",
    "superset.utils.screenshots.BaseScreenshot",
    "superset.utils.webdriver.WindowSize"
   ]
  },
  "type": "class"
 },
 "superset.utils.screenshots.Image": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "superset.utils.screenshots.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.utils.screenshots.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.utils.screenshots.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.utils.screenshots.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.utils.screenshots.WebDriverProxy": {
  "data": {
   "shadows": "superset.utils.webdriver.WebDriverProxy"
  },
  "type": "import"
 },
 "superset.utils.screenshots.WindowSize": {
  "data": {
   "shadows": "superset.utils.webdriver.WindowSize"
  },
  "type": "import"
 },
 "superset.utils.screenshots.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.utils.screenshots.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "superset.utils.screenshots.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.utils.screenshots.md5_sha_from_dict": {
  "data": {
   "shadows": "superset.utils.hashing.md5_sha_from_dict"
  },
  "type": "import"
 },
 "superset.utils.url_map_converters": {
  "data": {},
  "type": "module"
 },
 "superset.utils.url_map_converters.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.utils.url_map_converters.BaseConverter": {
  "data": {
   "shadows": "werkzeug.routing.BaseConverter"
  },
  "type": "import"
 },
 "superset.utils.url_map_converters.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.utils.url_map_converters.Map": {
  "data": {
   "shadows": "werkzeug.routing.Map"
  },
  "type": "import"
 },
 "superset.utils.url_map_converters.ObjectTypeConverter": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "werkzeug.routing.BaseConverter"
   ]
  },
  "type": "class"
 },
 "superset.utils.url_map_converters.ObjectTypeConverter.to_python": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "str",
    "superset.models.tags.ObjectTypes",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.url_map_converters.ObjectTypeConverter.to_url": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.url_map_converters.ObjectTypes": {
  "data": {
   "shadows": "superset.models.tags.ObjectTypes"
  },
  "type": "import"
 },
 "superset.utils.url_map_converters.RegexConverter": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "werkzeug.routing.BaseConverter"
   ]
  },
  "type": "class"
 },
 "superset.utils.url_map_converters.RegexConverter.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "str",
    "super",
    "superset.utils.url_map_converters.RegexConverter",
    "typing.List",
    "werkzeug.routing.Map"
   ]
  },
  "type": "function"
 },
 "superset.utils.urls": {
  "data": {},
  "type": "module"
 },
 "superset.utils.urls.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.utils.urls.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.utils.urls.get_url_path": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool",
    "flask.current_app.test_request_context",
    "flask.url_for",
    "str",
    "superset.utils.urls.headless_url",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.utils.urls.headless_url": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bool",
    "flask.current_app.config",
    "str",
    "superset.utils.urls.urllib"
   ]
  },
  "type": "function"
 },
 "superset.utils.urls.url_for": {
  "data": {
   "shadows": "flask.url_for"
  },
  "type": "import"
 },
 "superset.utils.urls.urllib": {
  "data": {
   "shadows": "urllib"
  },
  "type": "import"
 },
 "superset.utils.webdriver": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "superset.utils.webdriver.logging",
    "typing.TYPE_CHECKING",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "superset.utils.webdriver.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.utils.webdriver.By": {
  "data": {
   "shadows": "selenium.webdriver.common.by.By"
  },
  "type": "import"
 },
 "superset.utils.webdriver.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.utils.webdriver.EC": {
  "data": {
   "shadows": "selenium.webdriver.support.expected_conditions"
  },
  "type": "import"
 },
 "superset.utils.webdriver.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.utils.webdriver.SELENIUM_CHECK_INTERVAL": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "superset.utils.webdriver.SELENIUM_HEADSTART": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "superset.utils.webdriver.SELENIUM_RETRIES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "superset.utils.webdriver.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.utils.webdriver.TimeoutException": {
  "data": {
   "shadows": "selenium.common.exceptions.TimeoutException"
  },
  "type": "import"
 },
 "superset.utils.webdriver.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.utils.webdriver.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.utils.webdriver.WebDriver": {
  "data": {
   "shadows": "selenium.webdriver.remote.webdriver.WebDriver"
  },
  "type": "import"
 },
 "superset.utils.webdriver.WebDriverException": {
  "data": {
   "shadows": "selenium.common.exceptions.WebDriverException"
  },
  "type": "import"
 },
 "superset.utils.webdriver.WebDriverProxy": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "superset.utils.webdriver.WebDriverProxy.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "flask.current_app.config",
    "str",
    "superset.utils.webdriver.WindowSize",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.webdriver.WebDriverProxy.auth": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "selenium.webdriver.remote.webdriver.WebDriver",
    "superset.extensions.machine_auth_provider_factory.instance.authenticate_webdriver"
   ]
  },
  "type": "function"
 },
 "superset.utils.webdriver.WebDriverProxy.create": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "driver_class",
    "flask.current_app.config",
    "selenium.webdriver.chrome.options.Options",
    "selenium.webdriver.chrome.webdriver.WebDriver",
    "selenium.webdriver.firefox.options.Options",
    "selenium.webdriver.firefox.webdriver.WebDriver",
    "selenium.webdriver.remote.webdriver.WebDriver",
    "superset.utils.webdriver.logger",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.utils.webdriver.WebDriverProxy.destroy": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Exception",
    "int",
    "retry.api.retry_call",
    "selenium.webdriver.remote.webdriver.WebDriver",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "superset.utils.webdriver.WebDriverProxy.get_screenshot": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "bytes",
    "int",
    "selenium.common.exceptions.TimeoutException",
    "selenium.common.exceptions.WebDriverException",
    "selenium.webdriver.common.by.By.CLASS_NAME",
    "selenium.webdriver.support.expected_conditions.presence_of_all_elements_located",
    "selenium.webdriver.support.expected_conditions.presence_of_element_located",
    "selenium.webdriver.support.ui.WebDriverWait",
    "str",
    "superset.utils.webdriver.SELENIUM_HEADSTART",
    "superset.utils.webdriver.SELENIUM_RETRIES",
    "superset.utils.webdriver.logger",
    "superset.utils.webdriver.time",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.utils.webdriver.WebDriverWait": {
  "data": {
   "shadows": "selenium.webdriver.support.ui.WebDriverWait"
  },
  "type": "import"
 },
 "superset.utils.webdriver.WindowSize": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "superset.utils.webdriver.chrome": {
  "data": {
   "shadows": "selenium.webdriver.chrome"
  },
  "type": "import"
 },
 "superset.utils.webdriver.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.utils.webdriver.firefox": {
  "data": {
   "shadows": "selenium.webdriver.firefox"
  },
  "type": "import"
 },
 "superset.utils.webdriver.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "superset.utils.webdriver.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.utils.webdriver.machine_auth_provider_factory": {
  "data": {
   "shadows": "superset.extensions.machine_auth_provider_factory"
  },
  "type": "import"
 },
 "superset.utils.webdriver.retry_call": {
  "data": {
   "shadows": "retry.api.retry_call"
  },
  "type": "import"
 },
 "superset.utils.webdriver.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "superset.views": {
  "data": {},
  "type": "module"
 },
 "superset.views.access_requests": {
  "data": {},
  "type": "module"
 },
 "superset.views.access_requests.AccessRequestsModelView": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.constants.RouteMethod.CRUD_SET",
    "superset.views.base.DeleteMixin",
    "superset.views.base.SupersetModelView",
    "superset.views.core.DAR"
   ]
  },
  "type": "class"
 },
 "superset.views.access_requests.DAR": {
  "data": {
   "shadows": "superset.views.core.DAR"
  },
  "type": "import"
 },
 "superset.views.access_requests.DeleteMixin": {
  "data": {
   "shadows": "superset.views.base.DeleteMixin"
  },
  "type": "import"
 },
 "superset.views.access_requests.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.views.access_requests.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.views.access_requests.SupersetModelView": {
  "data": {
   "shadows": "superset.views.base.SupersetModelView"
  },
  "type": "import"
 },
 "superset.views.access_requests._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.alerts": {
  "data": {},
  "type": "module"
 },
 "superset.views.alerts.Alert": {
  "data": {
   "shadows": "superset.models.alerts.Alert"
  },
  "type": "import"
 },
 "superset.views.alerts.AlertLog": {
  "data": {
   "shadows": "superset.models.alerts.AlertLog"
  },
  "type": "import"
 },
 "superset.views.alerts.AlertLogModelView": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "flask_appbuilder.CompactCRUDMixin",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.constants.RouteMethod.LIST",
    "superset.models.alerts.AlertLog"
   ]
  },
  "type": "class"
 },
 "superset.views.alerts.AlertModelView": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.constants.RouteMethod.CRUD_SET",
    "superset.models.alerts.Alert",
    "superset.utils.core.markdown",
    "superset.views.alerts.AlertLogModelView",
    "superset.views.alerts.AlertObservationModelView"
   ]
  },
  "type": "class"
 },
 "superset.views.alerts.AlertModelView.post_update": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "superset.views.alerts.AlertModelView.pre_add": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "SupersetException",
    "croniter.croniter.is_valid",
    "superset.tasks.alerts.validator.check_validator",
    "superset.utils.core.get_email_address_str"
   ]
  },
  "type": "function"
 },
 "superset.views.alerts.AlertModelView.pre_update": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "superset.tasks.alerts.validator.check_validator"
   ]
  },
  "type": "function"
 },
 "superset.views.alerts.AlertObservationModelView": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "flask_appbuilder.CompactCRUDMixin",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.constants.RouteMethod.LIST",
    "superset.models.alerts.SQLObservation"
   ]
  },
  "type": "class"
 },
 "superset.views.alerts.AlertView": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "superset.views.alerts.BaseAlertReportView"
   ]
  },
  "type": "class"
 },
 "superset.views.alerts.BaseAlertReportView": {
  "data": {
   "lineno": 71
  },
  "type": "class"
 },
 "superset.views.alerts.BaseAlertReportView.list": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "flask.abort",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.permission_name",
    "flask_appbuilder.security.decorators.has_access",
    "super",
    "superset.is_feature_enabled",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.alerts.BaseAlertReportView.log": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "flask.abort",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.permission_name",
    "flask_appbuilder.security.decorators.has_access",
    "int",
    "super",
    "superset.is_feature_enabled",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.alerts.CompactCRUDMixin": {
  "data": {
   "shadows": "flask_appbuilder.CompactCRUDMixin"
  },
  "type": "import"
 },
 "superset.views.alerts.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.alerts.ReportView": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "superset.views.alerts.BaseAlertReportView"
   ]
  },
  "type": "class"
 },
 "superset.views.alerts.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.views.alerts.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.views.alerts.SQLObservation": {
  "data": {
   "shadows": "superset.models.alerts.SQLObservation"
  },
  "type": "import"
 },
 "superset.views.alerts._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.alerts.abort": {
  "data": {
   "shadows": "flask.abort"
  },
  "type": "import"
 },
 "superset.views.alerts.check_validator": {
  "data": {
   "shadows": "superset.tasks.alerts.validator.check_validator"
  },
  "type": "import"
 },
 "superset.views.alerts.croniter": {
  "data": {
   "shadows": "croniter.croniter"
  },
  "type": "import"
 },
 "superset.views.alerts.expose": {
  "data": {
   "shadows": "flask_appbuilder.api.expose"
  },
  "type": "import"
 },
 "superset.views.alerts.get_email_address_str": {
  "data": {
   "shadows": "superset.utils.core.get_email_address_str"
  },
  "type": "import"
 },
 "superset.views.alerts.has_access": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access"
  },
  "type": "import"
 },
 "superset.views.alerts.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.views.alerts.markdown": {
  "data": {
   "shadows": "superset.utils.core.markdown"
  },
  "type": "import"
 },
 "superset.views.alerts.permission_name": {
  "data": {
   "shadows": "flask_appbuilder.permission_name"
  },
  "type": "import"
 },
 "superset.views.alerts.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.views.annotations": {
  "data": {},
  "type": "module"
 },
 "superset.views.annotations.Annotation": {
  "data": {
   "shadows": "superset.models.annotations.Annotation"
  },
  "type": "import"
 },
 "superset.views.annotations.AnnotationLayer": {
  "data": {
   "shadows": "superset.models.annotations.AnnotationLayer"
  },
  "type": "import"
 },
 "superset.views.annotations.AnnotationLayerModelView": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.API_READ",
    "superset.constants.RouteMethod.CRUD_SET",
    "superset.models.annotations.AnnotationLayer",
    "superset.views.annotations.AnnotationModelView",
    "superset.views.base.SupersetModelView"
   ]
  },
  "type": "class"
 },
 "superset.views.annotations.AnnotationLayerModelView.list": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "flask_appbuilder.api.expose",
    "flask_appbuilder.security.decorators.has_access",
    "super",
    "superset.is_feature_enabled",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.annotations.AnnotationModelView": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "flask_appbuilder.CompactCRUDMixin",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.CRUD_SET",
    "superset.models.annotations.Annotation",
    "superset.views.annotations.StartEndDttmValidator",
    "superset.views.base.SupersetModelView"
   ]
  },
  "type": "class"
 },
 "superset.views.annotations.AnnotationModelView.annotation": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "flask_appbuilder.api.expose",
    "flask_appbuilder.security.decorators.has_access",
    "int",
    "super",
    "superset.is_feature_enabled",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.annotations.AnnotationModelView.pre_add": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "superset.views.annotations.AnnotationModelView.pre_update": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "superset.views.annotations.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.views.annotations.CompactCRUDMixin": {
  "data": {
   "shadows": "flask_appbuilder.CompactCRUDMixin"
  },
  "type": "import"
 },
 "superset.views.annotations.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.views.annotations.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.annotations.MODEL_VIEW_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.views.annotations.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.views.annotations.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.views.annotations.StartEndDttmValidator": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "superset.views.annotations.StartEndDttmValidator.__call__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "str",
    "typing.Any",
    "typing.Dict",
    "wtforms.validators.StopValidation"
   ]
  },
  "type": "function"
 },
 "superset.views.annotations.StopValidation": {
  "data": {
   "shadows": "wtforms.validators.StopValidation"
  },
  "type": "import"
 },
 "superset.views.annotations.SupersetModelView": {
  "data": {
   "shadows": "superset.views.base.SupersetModelView"
  },
  "type": "import"
 },
 "superset.views.annotations._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.annotations.expose": {
  "data": {
   "shadows": "flask_appbuilder.api.expose"
  },
  "type": "import"
 },
 "superset.views.annotations.has_access": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access"
  },
  "type": "import"
 },
 "superset.views.annotations.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.views.api": {
  "data": {},
  "type": "module"
 },
 "superset.views.api.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.views.api.Api": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "superset.views.base.BaseSupersetView"
   ]
  },
  "type": "class"
 },
 "superset.views.api.Api.query": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "flask.request.form",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "simplejson.dumps",
    "simplejson.loads",
    "superset.common.query_context.QueryContext",
    "superset.event_logger.log_this",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_int_dttm_ser",
    "superset.views.base.api",
    "superset.views.base.handle_api_exception"
   ]
  },
  "type": "function"
 },
 "superset.views.api.Api.query_form_data": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "flask.request.args.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "simplejson.dumps",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.legacy.update_time_range",
    "superset.models.slice.Slice",
    "superset.typing.FlaskResponse",
    "superset.views.base.api",
    "superset.views.base.handle_api_exception"
   ]
  },
  "type": "function"
 },
 "superset.views.api.Api.time_range": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "superset.typing.FlaskResponse",
    "superset.utils.date_parser.get_since_until",
    "superset.views.api.get_time_range_schema",
    "superset.views.base.api",
    "superset.views.base.handle_api_exception",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.api.BaseSupersetView": {
  "data": {
   "shadows": "superset.views.base.BaseSupersetView"
  },
  "type": "import"
 },
 "superset.views.api.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.api.QueryContext": {
  "data": {
   "shadows": "superset.common.query_context.QueryContext"
  },
  "type": "import"
 },
 "superset.views.api.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.views.api.api": {
  "data": {
   "shadows": "superset.views.base.api"
  },
  "type": "import"
 },
 "superset.views.api.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.api.event_logger": {
  "data": {
   "shadows": "superset.event_logger"
  },
  "type": "import"
 },
 "superset.views.api.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.views.api.get_since_until": {
  "data": {
   "shadows": "superset.utils.date_parser.get_since_until"
  },
  "type": "import"
 },
 "superset.views.api.get_time_range_schema": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "superset.views.api.handle_api_exception": {
  "data": {
   "shadows": "superset.views.base.handle_api_exception"
  },
  "type": "import"
 },
 "superset.views.api.has_access_api": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access_api"
  },
  "type": "import"
 },
 "superset.views.api.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.views.api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.views.api.rison": {
  "data": {
   "shadows": "flask_appbuilder.api.rison"
  },
  "type": "import"
 },
 "superset.views.api.update_time_range": {
  "data": {
   "shadows": "superset.legacy.update_time_range"
  },
  "type": "import"
 },
 "superset.views.api.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.views.base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "flask_wtf.form.FlaskForm.Meta.bind_field",
    "superset.app.config",
    "superset.views.base.bind_field",
    "superset.views.base.logging",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.views.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.views.base.BaseFilter": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.filters.BaseFilter"
  },
  "type": "import"
 },
 "superset.views.base.BaseSupersetView": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "flask_appbuilder.BaseView"
   ]
  },
  "type": "class"
 },
 "superset.views.base.BaseSupersetView.json_response": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "flask.Response",
    "int",
    "simplejson.dumps",
    "staticmethod",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_int_dttm_ser",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.base.BaseSupersetView.render_app_template": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "bootstrap_user_data",
    "common_bootstrap_payload",
    "flask.g.user",
    "simplejson.dumps",
    "superset.typing.FlaskResponse",
    "superset.utils.core.pessimistic_json_iso_dttm_ser"
   ]
  },
  "type": "function"
 },
 "superset.views.base.BaseView": {
  "data": {
   "shadows": "flask_appbuilder.BaseView"
  },
  "type": "import"
 },
 "superset.views.base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.views.base.CsvResponse": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "flask.Response",
    "superset.conf.get"
   ]
  },
  "type": "class"
 },
 "superset.views.base.DatasourceFilter": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.filters.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.views.base.DatasourceFilter.apply": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "sqlalchemy.or_",
    "sqlalchemy.orm.Query",
    "superset.security_manager.can_access_all_datasources",
    "superset.security_manager.user_view_menu_names",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.base.DeleteMixin": {
  "data": {
   "lineno": 397
  },
  "type": "class"
 },
 "superset.views.base.DeleteMixin._delete": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "Exception",
    "flask.abort",
    "flask.flash",
    "flask_appbuilder.BaseView",
    "int",
    "str",
    "superset.security_manager.find_view_menu",
    "superset.security_manager.get_session.commit",
    "superset.security_manager.get_session.delete",
    "superset.security_manager.get_session.query",
    "superset.security_manager.permissionview_model"
   ]
  },
  "type": "function"
 },
 "superset.views.base.DeleteMixin.muldelete": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "Exception",
    "flask.abort",
    "flask.flash",
    "flask.redirect",
    "flask_appbuilder.BaseView",
    "flask_appbuilder.Model",
    "flask_appbuilder.actions.action",
    "flask_babel.gettext",
    "str",
    "superset.typing.FlaskResponse",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.views.base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.views.base.DruidClusterModelView": {
  "data": {
   "shadows": "superset.connectors.druid.views.DruidClusterModelView"
  },
  "type": "import"
 },
 "superset.views.base.DynamicForm": {
  "data": {
   "shadows": "flask_appbuilder.forms.DynamicForm"
  },
  "type": "import"
 },
 "superset.views.base.ErrorLevel": {
  "data": {
   "shadows": "superset.errors.ErrorLevel"
  },
  "type": "import"
 },
 "superset.views.base.FRONTEND_CONF_KEYS": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "superset.views.base.Field": {
  "data": {
   "shadows": "wtforms.fields.core.Field"
  },
  "type": "import"
 },
 "superset.views.base.FlaskForm": {
  "data": {
   "shadows": "flask_wtf.form.FlaskForm"
  },
  "type": "import"
 },
 "superset.views.base.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.base.Form": {
  "data": {
   "shadows": "wtforms.Form"
  },
  "type": "import"
 },
 "superset.views.base.HTTPException": {
  "data": {
   "shadows": "werkzeug.exceptions.HTTPException"
  },
  "type": "import"
 },
 "superset.views.base.ImportExportMixin": {
  "data": {
   "shadows": "superset.models.helpers.ImportExportMixin"
  },
  "type": "import"
 },
 "superset.views.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.views.base.ListWidget": {
  "data": {
   "shadows": "flask_appbuilder.widgets.ListWidget"
  },
  "type": "import"
 },
 "superset.views.base.ListWidgetWithCheckboxes": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "flask_appbuilder.widgets.ListWidget"
   ]
  },
  "type": "class"
 },
 "superset.views.base.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.views.base.ModelView": {
  "data": {
   "shadows": "flask_appbuilder.ModelView"
  },
  "type": "import"
 },
 "superset.views.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.views.base.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.Query"
  },
  "type": "import"
 },
 "superset.views.base.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.views.base.Role": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.Role"
  },
  "type": "import"
 },
 "superset.views.base.SupersetError": {
  "data": {
   "shadows": "superset.errors.SupersetError"
  },
  "type": "import"
 },
 "superset.views.base.SupersetErrorException": {
  "data": {
   "shadows": "superset.exceptions.SupersetErrorException"
  },
  "type": "import"
 },
 "superset.views.base.SupersetErrorType": {
  "data": {
   "shadows": "superset.errors.SupersetErrorType"
  },
  "type": "import"
 },
 "superset.views.base.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.views.base.SupersetListWidget": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "flask_appbuilder.widgets.ListWidget"
   ]
  },
  "type": "class"
 },
 "superset.views.base.SupersetModelView": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "flask_appbuilder.ModelView",
    "superset.views.base.SupersetListWidget"
   ]
  },
  "type": "class"
 },
 "superset.views.base.SupersetModelView.render_app_template": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "bootstrap_user_data",
    "flask.g.user",
    "simplejson.dumps",
    "superset.typing.FlaskResponse",
    "superset.utils.core.pessimistic_json_iso_dttm_ser",
    "superset.views.base.common_bootstrap_payload"
   ]
  },
  "type": "function"
 },
 "superset.views.base.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.views.base.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.views.base.UnboundField": {
  "data": {
   "shadows": "wtforms.fields.core.UnboundField"
  },
  "type": "import"
 },
 "superset.views.base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.views.base.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.views.base.YamlExportMixin": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.views.base.YamlExportMixin.yaml_export": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "flask.Response",
    "flask_appbuilder.actions.action",
    "flask_babel.gettext",
    "isinstance",
    "list",
    "superset.models.helpers.ImportExportMixin",
    "superset.typing.FlaskResponse",
    "superset.views.base.generate_download_headers",
    "superset.views.base.yaml",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.views.base._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.base.__": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.views.base.abort": {
  "data": {
   "shadows": "flask.abort"
  },
  "type": "import"
 },
 "superset.views.base.action": {
  "data": {
   "shadows": "flask_appbuilder.actions.action"
  },
  "type": "import"
 },
 "superset.views.base.api": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "f",
    "superset.typing.FlaskResponse",
    "superset.views.base.functools",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.views.base.api.wraps": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "Exception",
    "f",
    "superset.typing.FlaskResponse",
    "superset.views.base.get_error_msg",
    "superset.views.base.json_error_response",
    "superset.views.base.logger",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.base.appbuilder": {
  "data": {
   "shadows": "superset.appbuilder"
  },
  "type": "import"
 },
 "superset.views.base.apply_http_headers": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "flask.Response",
    "superset.app.after_request",
    "superset.views.base.config"
   ]
  },
  "type": "function"
 },
 "superset.views.base.bind_field": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "flask_appbuilder.forms.DynamicForm",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict",
    "wtforms.fields.core.Field",
    "wtforms.fields.core.UnboundField"
   ]
  },
  "type": "function"
 },
 "superset.views.base.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.views.base.check_ownership": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "bool",
    "flask.g.user",
    "flask.g.user.is_anonymous",
    "flask.g.user.username",
    "flask_appbuilder.security.sqla.models.User",
    "hasattr",
    "superset.db.create_scoped_session",
    "superset.errors.ErrorLevel.ERROR",
    "superset.errors.SupersetError",
    "superset.errors.SupersetErrorType.MISSING_OWNERSHIP_ERROR",
    "superset.exceptions.SupersetSecurityException",
    "superset.views.base.get_user_roles",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.views.base.common_bootstrap_payload": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "flask.get_flashed_messages",
    "flask_babel.get_locale",
    "str",
    "superset.conf",
    "superset.conf.get",
    "superset.get_feature_flags",
    "superset.translations.utils.get_language_pack",
    "superset.views.base.FRONTEND_CONF_KEYS",
    "superset.views.base.menu_data",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.views.base.conf": {
  "data": {
   "shadows": "superset.conf"
  },
  "type": "import"
 },
 "superset.views.base.config": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "superset.views.base.create_table_permissions": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "superset.connectors.sqla.models.SqlaTable",
    "superset.security_manager.add_permission_view_menu"
   ]
  },
  "type": "function"
 },
 "superset.views.base.data_payload_response": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "bool",
    "str",
    "superset.typing.FlaskResponse",
    "superset.views.base.json_success"
   ]
  },
  "type": "function"
 },
 "superset.views.base.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "superset.views.base.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.views.base.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.base.flash": {
  "data": {
   "shadows": "flask.flash"
  },
  "type": "import"
 },
 "superset.views.base.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "superset.views.base.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.views.base.generate_download_headers": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.base.get_common_bootstrap_data": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "str",
    "superset.app.context_processor",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.views.base.get_common_bootstrap_data.serialize_bootstrap_data": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "simplejson.dumps",
    "str",
    "superset.utils.core.pessimistic_json_iso_dttm_ser",
    "superset.views.base.common_bootstrap_payload"
   ]
  },
  "type": "function"
 },
 "superset.views.base.get_dataset_exist_error_msg": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.get_dataset_exist_error_msg"
  },
  "type": "import"
 },
 "superset.views.base.get_error_msg": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "str",
    "superset.conf.get",
    "superset.views.base.traceback"
   ]
  },
  "type": "function"
 },
 "superset.views.base.get_feature_flags": {
  "data": {
   "shadows": "superset.get_feature_flags"
  },
  "type": "import"
 },
 "superset.views.base.get_flashed_messages": {
  "data": {
   "shadows": "flask.get_flashed_messages"
  },
  "type": "import"
 },
 "superset.views.base.get_language_pack": {
  "data": {
   "shadows": "superset.translations.utils.get_language_pack"
  },
  "type": "import"
 },
 "superset.views.base.get_locale": {
  "data": {
   "shadows": "flask_babel.get_locale"
  },
  "type": "import"
 },
 "superset.views.base.get_user_roles": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "flask.g.user.is_anonymous",
    "flask.g.user.roles",
    "flask_appbuilder.security.sqla.models.Role",
    "superset.conf.get",
    "superset.security_manager.find_role",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.views.base.handle_api_exception": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "f",
    "superset.typing.FlaskResponse",
    "superset.views.base.functools",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.views.base.handle_api_exception.wraps": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "Exception",
    "f",
    "int",
    "superset.exceptions.SupersetErrorException",
    "superset.exceptions.SupersetException",
    "superset.exceptions.SupersetSecurityException",
    "superset.typing.FlaskResponse",
    "superset.utils.core.error_msg_from_exception",
    "superset.views.base.json_error_response",
    "superset.views.base.json_errors_response",
    "superset.views.base.logger",
    "typing.Any",
    "typing.cast",
    "werkzeug.exceptions.HTTPException"
   ]
  },
  "type": "function"
 },
 "superset.views.base.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.views.base.json_error_response": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "flask.Response",
    "int",
    "simplejson.dumps",
    "str",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_iso_dttm_ser",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.base.json_errors_response": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "flask.Response",
    "int",
    "simplejson.dumps",
    "str",
    "superset.errors.SupersetError",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_iso_dttm_ser",
    "superset.views.base.dataclasses",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.base.json_success": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "flask.Response",
    "int",
    "str",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.base.logger": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "superset.views.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.views.base.menu_data": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "flask.g.user.is_anonymous",
    "flask.g.user.username",
    "flask.session.get",
    "len",
    "str",
    "superset.appbuilder.app.config",
    "superset.appbuilder.app_icon",
    "superset.appbuilder.app_name",
    "superset.appbuilder.get_url_for_locale",
    "superset.appbuilder.get_url_for_login",
    "superset.appbuilder.get_url_for_logout",
    "superset.appbuilder.get_url_for_userinfo",
    "superset.appbuilder.languages",
    "superset.appbuilder.menu.get_data",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.views.base.models": {
  "data": {
   "shadows": "superset.connectors.sqla.models"
  },
  "type": "import"
 },
 "superset.views.base.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.views.base.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "superset.views.base.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.views.base.session": {
  "data": {
   "shadows": "flask.session"
  },
  "type": "import"
 },
 "superset.views.base.superset_app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.views.base.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "superset.views.base.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.views.base.validate_json": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "Exception",
    "flask_babel.lazy_gettext",
    "simplejson.loads",
    "superset.views.base.logger",
    "wtforms.Form",
    "wtforms.fields.core.Field"
   ]
  },
  "type": "function"
 },
 "superset.views.base.validate_sqlatable": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "Exception",
    "flask_babel.lazy_gettext",
    "str",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.connectors.sqla.models.SqlaTable.database_id",
    "superset.connectors.sqla.models.SqlaTable.schema",
    "superset.connectors.sqla.models.SqlaTable.table_name",
    "superset.datasets.commands.exceptions.get_dataset_exist_error_msg",
    "superset.db.session.no_autoflush",
    "superset.db.session.query",
    "superset.views.base.logger"
   ]
  },
  "type": "function"
 },
 "superset.views.base.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "superset.views.base_api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.views.base_api.logging"
   ]
  },
  "type": "module"
 },
 "superset.views.base_api.APISpec": {
  "data": {
   "shadows": "apispec.APISpec"
  },
  "type": "import"
 },
 "superset.views.base_api.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.views.base_api.AppBuilder": {
  "data": {
   "shadows": "flask_appbuilder.AppBuilder"
  },
  "type": "import"
 },
 "superset.views.base_api.BaseFavoriteFilter": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "flask_appbuilder.models.filters.BaseFilter",
    "flask_babel.lazy_gettext",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "superset.sql_lab.Query",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "superset.views.base_api.BaseFavoriteFilter.apply": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "flask.g.user.id",
    "sqlalchemy.and_",
    "superset.extensions.db.session.query",
    "superset.extensions.security_manager.current_user",
    "superset.models.core.FavStar.class_name",
    "superset.models.core.FavStar.obj_id",
    "superset.models.core.FavStar.user_id",
    "superset.sql_lab.Query",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseFilter": {
  "data": {
   "shadows": "flask_appbuilder.models.filters.BaseFilter"
  },
  "type": "import"
 },
 "superset.views.base_api.BaseStatsLogger": {
  "data": {
   "shadows": "superset.stats_logger.BaseStatsLogger"
  },
  "type": "import"
 },
 "superset.views.base_api.BaseSupersetModelRestApi": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "flask_appbuilder.ModelRestApi",
    "flask_appbuilder.models.filters.BaseFilter",
    "marshmallow.Schema",
    "set",
    "str",
    "superset.views.base_api.RelatedFieldFilter",
    "tuple",
    "typing.Dict",
    "typing.List",
    "typing.Set",
    "typing.Tuple",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.__init__": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "super",
    "superset.stats_logger.BaseStatsLogger",
    "superset.views.base_api.DistincResponseSchema",
    "superset.views.base_api.RelatedResponseSchema",
    "superset.views.base_api.get_related_schema"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi._get_distinct_filter": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "flask_appbuilder.models.filters.Filters",
    "flask_appbuilder.models.sqla.filters.FilterStartsWith",
    "str",
    "superset.views.base_api.RelatedFieldFilter",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi._get_related_filter": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "flask_appbuilder.models.filters.Filters",
    "flask_appbuilder.models.sqla.filters.FilterStartsWith",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "isinstance",
    "str",
    "superset.views.base_api.RelatedFieldFilter",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi._init_properties": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.add_apispec_components": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "apispec.APISpec",
    "apispec.exceptions.DuplicateComponentNameError",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.create_blueprint": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "flask.Blueprint",
    "flask_appbuilder.AppBuilder",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.delete_headless": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "flask.Response",
    "int",
    "super",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.utils.core.time_function"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.distinct": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "getattr",
    "sqlalchemy.distinct",
    "sqlalchemy.func.count",
    "str",
    "superset.typing.FlaskResponse",
    "superset.views.base_api.get_related_schema",
    "superset.views.base_api.statsd_metrics",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.get_headless": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "flask.Response",
    "int",
    "super",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.utils.core.time_function",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.get_list_headless": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "flask.Response",
    "super",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.utils.core.time_function",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.incr_stats": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.info_headless": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "flask.Response",
    "super",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.utils.core.time_function",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.post_headless": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "flask.Response",
    "super",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.utils.core.time_function"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.put_headless": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "flask.Response",
    "int",
    "super",
    "superset.extensions.event_logger.log_this_with_context",
    "superset.utils.core.time_function"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.related": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "KeyError",
    "flask_appbuilder.api.expose",
    "flask_appbuilder.api.protect",
    "flask_appbuilder.api.rison",
    "flask_appbuilder.api.safe",
    "get_text_for_model",
    "str",
    "superset.typing.FlaskResponse",
    "superset.views.base_api.get_related_schema",
    "superset.views.base_api.statsd_metrics",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.related.get_text_for_model": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.send_stats_metrics": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "flask.Response",
    "float",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.BaseSupersetModelRestApi.timing_stats": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.Blueprint": {
  "data": {
   "shadows": "flask.Blueprint"
  },
  "type": "import"
 },
 "superset.views.base_api.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.views.base_api.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.views.base_api.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.views.base_api.DistincResponseSchema": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "superset.views.base_api.DistinctResultResponseSchema"
   ]
  },
  "type": "class"
 },
 "superset.views.base_api.DistinctResultResponseSchema": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.String"
   ]
  },
  "type": "class"
 },
 "superset.views.base_api.DuplicateComponentNameError": {
  "data": {
   "shadows": "apispec.exceptions.DuplicateComponentNameError"
  },
  "type": "import"
 },
 "superset.views.base_api.FavStar": {
  "data": {
   "shadows": "superset.models.core.FavStar"
  },
  "type": "import"
 },
 "superset.views.base_api.FilterStartsWith": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.filters.FilterStartsWith"
  },
  "type": "import"
 },
 "superset.views.base_api.Filters": {
  "data": {
   "shadows": "flask_appbuilder.models.filters.Filters"
  },
  "type": "import"
 },
 "superset.views.base_api.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.base_api.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.views.base_api.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.views.base_api.ModelRestApi": {
  "data": {
   "shadows": "flask_appbuilder.ModelRestApi"
  },
  "type": "import"
 },
 "superset.views.base_api.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.views.base_api.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.query.Query"
  },
  "type": "import"
 },
 "superset.views.base_api.RelatedFieldFilter": {
  "data": {
   "lineno": 86
  },
  "type": "class"
 },
 "superset.views.base_api.RelatedFieldFilter.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "flask_appbuilder.models.filters.BaseFilter",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.RelatedResponseSchema": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.List",
    "marshmallow.fields.Nested",
    "superset.views.base_api.RelatedResultResponseSchema"
   ]
  },
  "type": "class"
 },
 "superset.views.base_api.RelatedResultResponseSchema": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "marshmallow.Schema",
    "marshmallow.fields.Integer",
    "marshmallow.fields.String"
   ]
  },
  "type": "class"
 },
 "superset.views.base_api.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.views.base_api.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.views.base_api.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.views.base_api.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.views.base_api.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.views.base_api.SqllabQuery": {
  "data": {
   "shadows": "superset.sql_lab.Query"
  },
  "type": "import"
 },
 "superset.views.base_api.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.views.base_api.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.views.base_api.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.views.base_api._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.base_api.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "superset.views.base_api.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.views.base_api.db": {
  "data": {
   "shadows": "superset.extensions.db"
  },
  "type": "import"
 },
 "superset.views.base_api.distinct": {
  "data": {
   "shadows": "sqlalchemy.distinct"
  },
  "type": "import"
 },
 "superset.views.base_api.event_logger": {
  "data": {
   "shadows": "superset.extensions.event_logger"
  },
  "type": "import"
 },
 "superset.views.base_api.expose": {
  "data": {
   "shadows": "flask_appbuilder.api.expose"
  },
  "type": "import"
 },
 "superset.views.base_api.fields": {
  "data": {
   "shadows": "marshmallow.fields"
  },
  "type": "import"
 },
 "superset.views.base_api.func": {
  "data": {
   "shadows": "sqlalchemy.func"
  },
  "type": "import"
 },
 "superset.views.base_api.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "superset.views.base_api.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.views.base_api.get_related_schema": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "superset.views.base_api.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "superset.views.base_api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.views.base_api.protect": {
  "data": {
   "shadows": "flask_appbuilder.api.protect"
  },
  "type": "import"
 },
 "superset.views.base_api.rison": {
  "data": {
   "shadows": "flask_appbuilder.api.rison"
  },
  "type": "import"
 },
 "superset.views.base_api.safe": {
  "data": {
   "shadows": "flask_appbuilder.api.safe"
  },
  "type": "import"
 },
 "superset.views.base_api.security_manager": {
  "data": {
   "shadows": "superset.extensions.security_manager"
  },
  "type": "import"
 },
 "superset.views.base_api.statsd_metrics": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "superset.views.base_api.functools",
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.statsd_metrics.wraps": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "flask.Response",
    "superset.utils.core.time_function",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.base_api.time_function": {
  "data": {
   "shadows": "superset.utils.core.time_function"
  },
  "type": "import"
 },
 "superset.views.base_schemas": {
  "data": {},
  "type": "module"
 },
 "superset.views.base_schemas.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.views.base_schemas.BaseOwnedSchema": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "superset.views.base_schemas.BaseSupersetSchema"
   ]
  },
  "type": "class"
 },
 "superset.views.base_schemas.BaseOwnedSchema.make_object": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "flask.g.user",
    "flask_appbuilder.Model",
    "marshmallow.post_load",
    "str",
    "super",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.base_schemas.BaseOwnedSchema.pre_load": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "marshmallow.pre_load",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.views.base_schemas.BaseOwnedSchema.set_owners": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "flask.current_app.appbuilder.get_session.query",
    "flask.current_app.appbuilder.sm.user_model",
    "flask.g.user.id",
    "flask_appbuilder.Model",
    "int",
    "list",
    "staticmethod",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.views.base_schemas.BaseSupersetSchema": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "marshmallow.Schema"
   ]
  },
  "type": "class"
 },
 "superset.views.base_schemas.BaseSupersetSchema.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "super",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.base_schemas.BaseSupersetSchema.load": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.Model",
    "str",
    "super",
    "typing.Any",
    "typing.Iterable",
    "typing.Mapping",
    "typing.Optional",
    "typing.Sequence",
    "typing.Set",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.views.base_schemas.BaseSupersetSchema.make_object": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "flask_appbuilder.Model",
    "marshmallow.post_load",
    "setattr",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.base_schemas.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.views.base_schemas.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "superset.views.base_schemas.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.views.base_schemas.Mapping": {
  "data": {
   "shadows": "typing.Mapping"
  },
  "type": "import"
 },
 "superset.views.base_schemas.Model": {
  "data": {
   "shadows": "flask_appbuilder.Model"
  },
  "type": "import"
 },
 "superset.views.base_schemas.NoResultFound": {
  "data": {
   "shadows": "sqlalchemy.orm.exc.NoResultFound"
  },
  "type": "import"
 },
 "superset.views.base_schemas.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.views.base_schemas.Schema": {
  "data": {
   "shadows": "marshmallow.Schema"
  },
  "type": "import"
 },
 "superset.views.base_schemas.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "superset.views.base_schemas.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.views.base_schemas.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.views.base_schemas.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.views.base_schemas.current_app": {
  "data": {
   "shadows": "flask.current_app"
  },
  "type": "import"
 },
 "superset.views.base_schemas.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.views.base_schemas.post_load": {
  "data": {
   "shadows": "marshmallow.post_load"
  },
  "type": "import"
 },
 "superset.views.base_schemas.pre_load": {
  "data": {
   "shadows": "marshmallow.pre_load"
  },
  "type": "import"
 },
 "superset.views.base_schemas.validate_owner": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "flask.current_app.appbuilder.get_session.query",
    "flask.current_app.appbuilder.sm.user_model.id",
    "int",
    "marshmallow.ValidationError",
    "sqlalchemy.orm.exc.NoResultFound"
   ]
  },
  "type": "function"
 },
 "superset.views.chart": {
  "data": {},
  "type": "module"
 },
 "superset.views.chart.filters": {
  "data": {},
  "type": "module"
 },
 "superset.views.chart.filters.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.views.chart.filters.BaseFilter": {
  "data": {
   "shadows": "superset.views.base.BaseFilter"
  },
  "type": "import"
 },
 "superset.views.chart.filters.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.query.Query"
  },
  "type": "import"
 },
 "superset.views.chart.filters.SliceFilter": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.views.chart.filters.SliceFilter.apply": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "sqlalchemy.or_",
    "sqlalchemy.orm.query.Query",
    "superset.security_manager.can_access_all_datasources",
    "superset.security_manager.user_view_menu_names",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.chart.filters.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.views.chart.filters.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.views.chart.mixin": {
  "data": {},
  "type": "module"
 },
 "superset.views.chart.mixin.DashboardFilter": {
  "data": {
   "shadows": "superset.views.dashboard.filters.DashboardFilter"
  },
  "type": "import"
 },
 "superset.views.chart.mixin.Markup": {
  "data": {
   "shadows": "flask.Markup"
  },
  "type": "import"
 },
 "superset.views.chart.mixin.SliceFilter": {
  "data": {
   "shadows": "superset.views.chart.filters.SliceFilter"
  },
  "type": "import"
 },
 "superset.views.chart.mixin.SliceMixin": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "flask.Markup",
    "flask_babel.lazy_gettext",
    "superset.views.chart.filters.SliceFilter",
    "superset.views.dashboard.filters.DashboardFilter"
   ]
  },
  "type": "class"
 },
 "superset.views.chart.mixin._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.chart.views": {
  "data": {},
  "type": "module"
 },
 "superset.views.chart.views.ConnectorRegistry": {
  "data": {
   "shadows": "superset.connectors.connector_registry.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.views.chart.views.DeleteMixin": {
  "data": {
   "shadows": "superset.views.base.DeleteMixin"
  },
  "type": "import"
 },
 "superset.views.chart.views.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.chart.views.MODEL_VIEW_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.views.chart.views.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.views.chart.views.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.views.chart.views.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.views.chart.views.SliceAsync": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.constants.RouteMethod.API_READ",
    "superset.views.chart.views.SliceModelView"
   ]
  },
  "type": "class"
 },
 "superset.views.chart.views.SliceMixin": {
  "data": {
   "shadows": "superset.views.chart.mixin.SliceMixin"
  },
  "type": "import"
 },
 "superset.views.chart.views.SliceModelView": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.API_DELETE",
    "superset.constants.RouteMethod.API_READ",
    "superset.constants.RouteMethod.CRUD_SET",
    "superset.constants.RouteMethod.DOWNLOAD",
    "superset.models.slice.Slice",
    "superset.views.base.DeleteMixin",
    "superset.views.base.SupersetModelView",
    "superset.views.chart.mixin.SliceMixin"
   ]
  },
  "type": "class"
 },
 "superset.views.chart.views.SliceModelView.add": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "flask.g.user",
    "flask_appbuilder.expose",
    "flask_appbuilder.has_access",
    "repr",
    "sorted",
    "str",
    "superset.connectors.connector_registry.ConnectorRegistry.get_all_datasources",
    "superset.db.session",
    "superset.typing.FlaskResponse",
    "superset.views.base.common_bootstrap_payload",
    "superset.views.chart.views.json",
    "superset.views.utils.bootstrap_user_data"
   ]
  },
  "type": "function"
 },
 "superset.views.chart.views.SliceModelView.list": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.has_access",
    "super",
    "superset.is_feature_enabled",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.chart.views.SliceModelView.pre_add": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "superset.utils.core.validate_json"
   ]
  },
  "type": "function"
 },
 "superset.views.chart.views.SliceModelView.pre_delete": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.views.chart.views.SliceModelView.pre_update": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "superset.utils.core.validate_json",
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.views.chart.views.SupersetModelView": {
  "data": {
   "shadows": "superset.views.base.SupersetModelView"
  },
  "type": "import"
 },
 "superset.views.chart.views._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.chart.views.bootstrap_user_data": {
  "data": {
   "shadows": "superset.views.utils.bootstrap_user_data"
  },
  "type": "import"
 },
 "superset.views.chart.views.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.views.chart.views.common_bootstrap_payload": {
  "data": {
   "shadows": "superset.views.base.common_bootstrap_payload"
  },
  "type": "import"
 },
 "superset.views.chart.views.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.chart.views.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.views.chart.views.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.views.chart.views.has_access": {
  "data": {
   "shadows": "flask_appbuilder.has_access"
  },
  "type": "import"
 },
 "superset.views.chart.views.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.views.chart.views.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.views.chart.views.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.views.core": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "flask_babel.gettext",
    "superset.app.config",
    "superset.models.datasource_access_request.DatasourceAccessRequest",
    "superset.utils.core.QueryStatus",
    "superset.views.core.config",
    "superset.views.core.logging"
   ]
  },
  "type": "module"
 },
 "superset.views.core.AnnotationDatasource": {
  "data": {
   "shadows": "superset.connectors.sqla.models.AnnotationDatasource"
  },
  "type": "import"
 },
 "superset.views.core.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.views.core.ArgumentError": {
  "data": {
   "shadows": "sqlalchemy.exc.ArgumentError"
  },
  "type": "import"
 },
 "superset.views.core.AsyncQueryTokenException": {
  "data": {
   "shadows": "superset.utils.async_query_manager.AsyncQueryTokenException"
  },
  "type": "import"
 },
 "superset.views.core.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.views.core.BaseSupersetView": {
  "data": {
   "shadows": "superset.views.base.BaseSupersetView"
  },
  "type": "import"
 },
 "superset.views.core.BaseViz": {
  "data": {
   "shadows": "superset.viz.BaseViz"
  },
  "type": "import"
 },
 "superset.views.core.CacheLoadError": {
  "data": {
   "shadows": "superset.exceptions.CacheLoadError"
  },
  "type": "import"
 },
 "superset.views.core.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.views.core.CertificateException": {
  "data": {
   "shadows": "superset.exceptions.CertificateException"
  },
  "type": "import"
 },
 "superset.views.core.ChartDAO": {
  "data": {
   "shadows": "superset.charts.dao.ChartDAO"
  },
  "type": "import"
 },
 "superset.views.core.ConnectorRegistry": {
  "data": {
   "shadows": "superset.connectors.connector_registry.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.views.core.CsvResponse": {
  "data": {
   "shadows": "superset.views.base.CsvResponse"
  },
  "type": "import"
 },
 "superset.views.core.CtasMethod": {
  "data": {
   "shadows": "superset.sql_parse.CtasMethod"
  },
  "type": "import"
 },
 "superset.views.core.DAR": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "superset.views.core.DATABASE_KEYS": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "superset.views.core.DATASOURCE_MISSING_ERR": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "superset.views.core.DBAPIError": {
  "data": {
   "shadows": "sqlalchemy.exc.DBAPIError"
  },
  "type": "import"
 },
 "superset.views.core.DBSecurityException": {
  "data": {
   "shadows": "superset.security.analytics_db_safety.DBSecurityException"
  },
  "type": "import"
 },
 "superset.views.core.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.views.core.DashboardDAO": {
  "data": {
   "shadows": "superset.dashboards.dao.DashboardDAO"
  },
  "type": "import"
 },
 "superset.views.core.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.views.core.DatabaseDAO": {
  "data": {
   "shadows": "superset.databases.dao.DatabaseDAO"
  },
  "type": "import"
 },
 "superset.views.core.DatabaseFilter": {
  "data": {
   "shadows": "superset.databases.filters.DatabaseFilter"
  },
  "type": "import"
 },
 "superset.views.core.DatabaseNotFound": {
  "data": {
   "shadows": "superset.exceptions.DatabaseNotFound"
  },
  "type": "import"
 },
 "superset.views.core.DatasetNotFoundError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetNotFoundError"
  },
  "type": "import"
 },
 "superset.views.core.DatasourceAccessRequest": {
  "data": {
   "shadows": "superset.models.datasource_access_request.DatasourceAccessRequest"
  },
  "type": "import"
 },
 "superset.views.core.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.views.core.FavStar": {
  "data": {
   "shadows": "superset.models.core.FavStar"
  },
  "type": "import"
 },
 "superset.views.core.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.core.Href": {
  "data": {
   "shadows": "werkzeug.urls.Href"
  },
  "type": "import"
 },
 "superset.views.core.ImportDashboardsCommand": {
  "data": {
   "shadows": "superset.dashboards.commands.importers.v0.ImportDashboardsCommand"
  },
  "type": "import"
 },
 "superset.views.core.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.views.core.Log": {
  "data": {
   "shadows": "superset.models.core.Log"
  },
  "type": "import"
 },
 "superset.views.core.Markup": {
  "data": {
   "shadows": "flask.Markup"
  },
  "type": "import"
 },
 "superset.views.core.NoSuchModuleError": {
  "data": {
   "shadows": "sqlalchemy.exc.NoSuchModuleError"
  },
  "type": "import"
 },
 "superset.views.core.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.views.core.PARAMETER_MISSING_ERR": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "superset.views.core.ParsedQuery": {
  "data": {
   "shadows": "superset.sql_parse.ParsedQuery"
  },
  "type": "import"
 },
 "superset.views.core.Query": {
  "data": {
   "shadows": "superset.models.sql_lab.Query"
  },
  "type": "import"
 },
 "superset.views.core.QueryDAO": {
  "data": {
   "shadows": "superset.queries.dao.QueryDAO"
  },
  "type": "import"
 },
 "superset.views.core.QueryStatus": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "superset.views.core.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.views.core.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.views.core.SQLAlchemyError": {
  "data": {
   "shadows": "sqlalchemy.exc.SQLAlchemyError"
  },
  "type": "import"
 },
 "superset.views.core.SQLLAB_QUERY_COST_ESTIMATE_TIMEOUT": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "superset.views.core.SerializationError": {
  "data": {
   "shadows": "superset.exceptions.SerializationError"
  },
  "type": "import"
 },
 "superset.views.core.Session": {
  "data": {
   "shadows": "sqlalchemy.orm.session.Session"
  },
  "type": "import"
 },
 "superset.views.core.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.views.core.SqlMetric": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlMetric"
  },
  "type": "import"
 },
 "superset.views.core.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.views.core.Superset": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "__name__",
    "superset.is_feature_enabled",
    "superset.views.base.BaseSupersetView",
    "superset.views.core.logger",
    "superset.views.core.logging"
   ]
  },
  "type": "class"
 },
 "superset.views.core.Superset._get_sqllab_tabs": {
  "data": {
   "lineno": 2828,
   "symbols_in_volume": [
    "dict",
    "int",
    "staticmethod",
    "str",
    "superset.databases.dao.DatabaseDAO.find_all",
    "superset.db.session.query",
    "superset.is_feature_enabled",
    "superset.models.sql_lab.Query",
    "superset.models.sql_lab.Query.sql_editor_id.in_",
    "superset.models.sql_lab.TabState",
    "superset.models.sql_lab.TabState.active.desc",
    "superset.models.sql_lab.TabState.id",
    "superset.models.sql_lab.TabState.label",
    "superset.views.core.DATABASE_KEYS",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset._sql_json_async": {
  "data": {
   "lineno": 2308,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "bool",
    "flask.g.user",
    "flask.g.user.username",
    "flask_babel.lazy_gettext",
    "simplejson.dumps",
    "sqlalchemy.orm.session.Session",
    "staticmethod",
    "str",
    "superset.models.sql_lab.Query",
    "superset.queries.dao.QueryDAO.update_saved_query_exec_info",
    "superset.sql_lab.get_sql_results.delay",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_int_dttm_ser",
    "superset.utils.dates.now_as_float",
    "superset.views.base.json_error_response",
    "superset.views.base.json_success",
    "superset.views.core.QueryStatus",
    "superset.views.core.logger",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset._sql_json_sync": {
  "data": {
   "lineno": 2374,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "flask.g.user",
    "flask.g.user.username",
    "simplejson.dumps",
    "sqlalchemy.orm.session.Session",
    "staticmethod",
    "str",
    "superset.exceptions.SupersetGenericDBErrorException",
    "superset.exceptions.SupersetTimeoutException",
    "superset.is_feature_enabled",
    "superset.models.sql_lab.Query",
    "superset.queries.dao.QueryDAO.update_saved_query_exec_info",
    "superset.sql_lab.get_sql_results",
    "superset.typing.FlaskResponse",
    "superset.utils.core.error_msg_from_exception",
    "superset.utils.core.pessimistic_json_iso_dttm_ser",
    "superset.utils.core.timeout",
    "superset.views.base.json_success",
    "superset.views.core.QueryStatus",
    "superset.views.core.config",
    "superset.views.core.logger",
    "superset.views.utils.apply_display_max_row_limit",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.add_slices": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "flask.request.form",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "simplejson.loads",
    "superset.db.session",
    "superset.event_logger.log_this",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.id.in_",
    "superset.typing.FlaskResponse",
    "superset.views.base.api",
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.annotation_json": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "superset.connectors.sqla.models.AnnotationDatasource",
    "superset.event_logger.log_this",
    "superset.typing.FlaskResponse",
    "superset.views.base.api",
    "superset.views.base.data_payload_response",
    "superset.views.utils.get_form_data",
    "superset.viz.viz_types"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.approve": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "clean_fulfilled_requests",
    "flask.flash",
    "flask.g.user",
    "flask.redirect",
    "flask.request.args",
    "flask.request.args.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "flask_babel.gettext",
    "superset.app.config",
    "superset.connectors.connector_registry.ConnectorRegistry.get_datasource",
    "superset.db.session",
    "superset.event_logger.log_this",
    "superset.security_manager.add_permission_role",
    "superset.security_manager.can_access_all_datasources",
    "superset.security_manager.find_permission_view_menu",
    "superset.security_manager.find_role",
    "superset.security_manager.find_user",
    "superset.typing.FlaskResponse",
    "superset.utils.core.notify_user_about_perm_udate",
    "superset.views.base.check_ownership",
    "superset.views.base.json_error_response",
    "superset.views.core.DAR",
    "superset.views.core.DATASOURCE_MISSING_ERR",
    "superset.views.core.USER_MISSING_ERR"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.approve.clean_fulfilled_requests": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "sqlalchemy.orm.session.Session",
    "superset.connectors.connector_registry.ConnectorRegistry.get_datasource",
    "superset.security_manager.can_access_datasource",
    "superset.views.core.DAR"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.available_domains": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "flask.Response",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "simplejson.dumps",
    "superset.conf.get",
    "superset.event_logger.log_this",
    "superset.typing.FlaskResponse",
    "superset.views.base.api"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.copy_dash": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "dict",
    "flask.g.user",
    "flask.request.form",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "isinstance",
    "simplejson.dumps",
    "simplejson.loads",
    "superset.dashboards.dao.DashboardDAO.set_dash_metadata",
    "superset.db.session",
    "superset.event_logger.log_this",
    "superset.models.dashboard.Dashboard",
    "superset.typing.FlaskResponse",
    "superset.views.base.api",
    "superset.views.base.json_success",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.created_dashboards": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "simplejson.dumps",
    "sqlalchemy.or_",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.dashboard.Dashboard",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_int_dttm_ser",
    "superset.views.base.api",
    "superset.views.base.json_success"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.created_slices": {
  "data": {
   "lineno": 1553,
   "symbols_in_volume": [
    "flask.g.user.id",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "simplejson.dumps",
    "sqlalchemy.or_",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.changed_by_fk",
    "superset.models.slice.Slice.changed_on.desc",
    "superset.models.slice.Slice.created_by_fk",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_int_dttm_ser",
    "superset.views.base.api",
    "superset.views.base.json_success",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.csrf_token": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "flask.Response",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "superset.event_logger.log_this",
    "superset.typing.FlaskResponse",
    "superset.views.base.api"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.csv": {
  "data": {
   "lineno": 2588,
   "symbols_in_volume": [
    "bool",
    "flask.Response",
    "flask.flash",
    "flask.redirect",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "len",
    "pandas.DataFrame.from_records",
    "repr",
    "str",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.exceptions.SupersetSecurityException",
    "superset.models.sql_lab.Query",
    "superset.results_backend",
    "superset.results_backend.get",
    "superset.results_backend_use_msgpack",
    "superset.typing.FlaskResponse",
    "superset.utils.core.zlib_decompress",
    "superset.views.core.config",
    "superset.views.core.logger",
    "superset.views.utils._deserialize_results_payload",
    "typing.cast",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.dashboard": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": [
    "add_extra_log_payload",
    "flask.abort",
    "flask.flash",
    "flask.g.user.get_id",
    "flask.redirect",
    "flask.request.args.get",
    "flask.request.args.items",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "flask_babel.gettext",
    "int",
    "simplejson.dumps",
    "str",
    "superset.connectors.connector_registry.ConnectorRegistry.get_datasource",
    "superset.db.session",
    "superset.event_logger.log_this_with_extra_payload",
    "superset.is_feature_enabled",
    "superset.models.dashboard.Dashboard",
    "superset.security_manager.can_access",
    "superset.security_manager.can_access_datasource",
    "superset.security_manager.get_datasource_access_error_msg",
    "superset.typing.FlaskResponse",
    "superset.utils.core.ReservedUrlParameters",
    "superset.utils.core.ReservedUrlParameters.EDIT_MODE.value",
    "superset.utils.core.ReservedUrlParameters.STANDALONE.value",
    "superset.utils.core.pessimistic_json_iso_dttm_ser",
    "superset.views.base.check_ownership",
    "superset.views.base.common_bootstrap_payload",
    "superset.views.base.json_success",
    "superset.views.core.config",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.datasources": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "sorted",
    "superset.connectors.connector_registry.ConnectorRegistry.get_all_datasources",
    "superset.db.session",
    "superset.event_logger.log_this",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.estimate_query_cost": {
  "data": {
   "lineno": 2100,
   "symbols_in_volume": [
    "Exception",
    "flask.request.form.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "query_cost_formatter",
    "simplejson.dumps",
    "simplejson.loads",
    "str",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.exceptions.SupersetTimeoutException",
    "superset.get_feature_flags",
    "superset.jinja_context.get_template_processor",
    "superset.models.core.Database",
    "superset.typing.FlaskResponse",
    "superset.utils.core.QuerySource.SQL_LAB",
    "superset.utils.core.error_msg_from_exception",
    "superset.utils.core.timeout",
    "superset.views.base.json_error_response",
    "superset.views.base.json_errors_response",
    "superset.views.base.json_success",
    "superset.views.core.SQLLAB_QUERY_COST_ESTIMATE_TIMEOUT",
    "superset.views.core.logger",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.explore": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "flask.Markup",
    "flask.flash",
    "flask.g.user",
    "flask.g.user.get_id",
    "flask.redirect",
    "flask.request.args",
    "flask.request.args.get",
    "flask.request.method",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "flask_babel.gettext",
    "flask_babel.lazy_gettext",
    "hasattr",
    "int",
    "simplejson.dumps",
    "str",
    "superset.connectors.base.models.BaseDatasource",
    "superset.connectors.connector_registry.ConnectorRegistry.get_datasource",
    "superset.connectors.sqla.models.SqlaTable.type",
    "superset.datasets.commands.exceptions.DatasetNotFoundError",
    "superset.db.session",
    "superset.event_logger.log_this",
    "superset.exceptions.SupersetException",
    "superset.security_manager.can_access",
    "superset.security_manager.can_access_datasource",
    "superset.security_manager.get_datasource_access_error_msg",
    "superset.typing.FlaskResponse",
    "superset.utils.core.ReservedUrlParameters.STANDALONE.value",
    "superset.utils.core.TimeRangeEndpoint.EXCLUSIVE",
    "superset.utils.core.TimeRangeEndpoint.EXCLUSIVE.value",
    "superset.utils.core.TimeRangeEndpoint.INCLUSIVE",
    "superset.utils.core.TimeRangeEndpoint.INCLUSIVE.value",
    "superset.utils.core.convert_legacy_filters_into_adhoc",
    "superset.utils.core.merge_extra_filters",
    "superset.utils.core.merge_request_params",
    "superset.utils.core.pessimistic_json_iso_dttm_ser",
    "superset.views.base.common_bootstrap_payload",
    "superset.views.base.json_error_response",
    "superset.views.core.config",
    "superset.views.utils.get_datasource_info",
    "superset.views.utils.get_form_data",
    "superset.views.utils.is_owner",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.cast",
    "werkzeug.urls.Href"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.explore_json": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "flask.request",
    "flask.request.args.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "list",
    "simplejson.dumps",
    "str",
    "superset.event_logger.log_this",
    "superset.exceptions.SupersetException",
    "superset.extensions.async_query_manager.init_job",
    "superset.extensions.async_query_manager.parse_jwt_from_request",
    "superset.is_feature_enabled",
    "superset.tasks.async_queries.load_explore_json_into_cache.delay",
    "superset.typing.FlaskResponse",
    "superset.utils.async_query_manager.AsyncQueryTokenException",
    "superset.utils.cache.etag_cache",
    "superset.utils.core.ChartDataResultFormat",
    "superset.utils.core.ChartDataResultFormat.JSON",
    "superset.utils.core.ChartDataResultFormat.JSON.value",
    "superset.utils.core.ChartDataResultType",
    "superset.utils.core.error_msg_from_exception",
    "superset.views.base.api",
    "superset.views.base.handle_api_exception",
    "superset.views.base.json_error_response",
    "superset.views.base.json_success",
    "superset.views.utils.check_datasource_perms",
    "superset.views.utils.check_resource_permissions",
    "superset.views.utils.get_datasource_info",
    "superset.views.utils.get_form_data",
    "superset.views.utils.get_viz",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.explore_json_data": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "flask_appbuilder.security.decorators.permission_name",
    "str",
    "superset.event_logger.log_this",
    "superset.exceptions.CacheLoadError",
    "superset.exceptions.SupersetException",
    "superset.extensions.cache_manager.cache.get",
    "superset.typing.FlaskResponse",
    "superset.utils.core.error_msg_from_exception",
    "superset.views.base.api",
    "superset.views.base.handle_api_exception",
    "superset.views.base.json_error_response",
    "superset.views.utils.check_explore_cache_perms",
    "superset.views.utils.check_resource_permissions",
    "superset.views.utils.get_datasource_info",
    "superset.views.utils.get_viz",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.extra_table_metadata": {
  "data": {
   "lineno": 2047,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "int",
    "simplejson.dumps",
    "str",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.core.Database",
    "superset.typing.FlaskResponse",
    "superset.utils.core.parse_js_uri_path_item",
    "superset.views.base.json_success"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.fave_dashboards": {
  "data": {
   "lineno": 1437,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "simplejson.dumps",
    "sqlalchemy.and_",
    "str",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.core.FavStar",
    "superset.models.core.FavStar.class_name",
    "superset.models.core.FavStar.dttm",
    "superset.models.core.FavStar.dttm.desc",
    "superset.models.core.FavStar.obj_id",
    "superset.models.core.FavStar.user_id",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.Dashboard.id",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_int_dttm_ser",
    "superset.views.base.api",
    "superset.views.base.json_success"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.fave_dashboards_by_username": {
  "data": {
   "lineno": 1428,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "str",
    "superset.event_logger.log_this",
    "superset.security_manager.find_user",
    "superset.typing.FlaskResponse",
    "superset.views.base.api"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.fave_slices": {
  "data": {
   "lineno": 1581,
   "symbols_in_volume": [
    "flask.g.user.id",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "simplejson.dumps",
    "sqlalchemy.and_",
    "str",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.core.FavStar",
    "superset.models.core.FavStar.class_name",
    "superset.models.core.FavStar.dttm",
    "superset.models.core.FavStar.dttm.desc",
    "superset.models.core.FavStar.obj_id",
    "superset.models.core.FavStar.user_id",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.id",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_int_dttm_ser",
    "superset.views.base.api",
    "superset.views.base.json_success",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.favstar": {
  "data": {
   "lineno": 1714,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "flask.g.user.get_id",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "len",
    "simplejson.dumps",
    "str",
    "superset.db.session",
    "superset.event_logger.log_this",
    "superset.models.core.FavStar",
    "superset.typing.FlaskResponse",
    "superset.views.base.json_success"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.fetch_datasource_metadata": {
  "data": {
   "lineno": 2643,
   "symbols_in_volume": [
    "flask.request.args.split",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "simplejson.dumps",
    "superset.connectors.connector_registry.ConnectorRegistry.get_datasource",
    "superset.db.session",
    "superset.event_logger.log_this",
    "superset.typing.FlaskResponse",
    "superset.views.base.api",
    "superset.views.base.handle_api_exception",
    "superset.views.base.json_error_response",
    "superset.views.base.json_success",
    "superset.views.core.DATASOURCE_MISSING_ERR"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.filter": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "simplejson.dumps",
    "str",
    "superset.connectors.connector_registry.ConnectorRegistry.get_datasource",
    "superset.db.session",
    "superset.event_logger.log_this",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_int_dttm_ser",
    "superset.views.base.api",
    "superset.views.base.handle_api_exception",
    "superset.views.base.json_error_response",
    "superset.views.base.json_success",
    "superset.views.core.DATASOURCE_MISSING_ERR",
    "superset.views.core.config"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.generate_json": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "str",
    "superset.typing.FlaskResponse",
    "superset.utils.core.ChartDataResultFormat.CSV",
    "superset.utils.core.ChartDataResultType.QUERY",
    "superset.utils.core.ChartDataResultType.RESULTS",
    "superset.utils.core.ChartDataResultType.SAMPLES",
    "superset.views.base.CsvResponse",
    "superset.views.base.data_payload_response",
    "superset.views.base.generate_download_headers",
    "superset.viz.BaseViz",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.get_query_string_response": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "Exception",
    "superset.typing.FlaskResponse",
    "superset.utils.core.error_msg_from_exception",
    "superset.views.base.json_error_response",
    "superset.views.core.logger",
    "superset.viz.BaseViz"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.get_raw_results": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "superset.typing.FlaskResponse",
    "superset.views.base.json_error_response",
    "superset.viz.BaseViz"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.get_samples": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "superset.typing.FlaskResponse",
    "superset.viz.BaseViz"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.import_dashboards": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "Exception",
    "flask.flash",
    "flask.redirect",
    "flask.request.files.get",
    "flask.request.form.get",
    "flask.request.method",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "flask_babel.lazy_gettext",
    "superset.dashboards.commands.importers.v0.ImportDashboardsCommand",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.exceptions.DatabaseNotFound",
    "superset.models.core.Database",
    "superset.typing.FlaskResponse",
    "superset.views.core.logger"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.log": {
  "data": {
   "lineno": 1895,
   "symbols_in_volume": [
    "flask.Response",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "superset.event_logger.log_this",
    "superset.typing.FlaskResponse",
    "superset.views.base.api"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.override_role_permissions": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "flask.request.get_json",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "list",
    "set",
    "superset.connectors.connector_registry.ConnectorRegistry.get_all_datasources",
    "superset.db.session",
    "superset.db.session.commit",
    "superset.event_logger.log_this",
    "superset.security_manager.find_permission_view_menu",
    "superset.security_manager.find_role",
    "superset.typing.FlaskResponse",
    "superset.utils.core.get_datasource_full_name"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.profile": {
  "data": {
   "lineno": 2803,
   "symbols_in_volume": [
    "flask.abort",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "flask_appbuilder.security.sqla.models.User",
    "flask_babel.lazy_gettext",
    "simplejson.dumps",
    "str",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.typing.FlaskResponse",
    "superset.utils.core.pessimistic_json_iso_dttm_ser",
    "superset.views.base.common_bootstrap_payload",
    "superset.views.utils.bootstrap_user_data"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.publish": {
  "data": {
   "lineno": 1747,
   "symbols_in_volume": [
    "flask.g.user",
    "flask.g.user.username",
    "flask.request.form",
    "flask.request.method",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "flask_appbuilder.security.sqla.models.Role",
    "int",
    "simplejson.dumps",
    "str",
    "superset.db.session",
    "superset.event_logger.log_this",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.Dashboard.id",
    "superset.typing.FlaskResponse",
    "superset.views.base.api",
    "superset.views.base.get_user_roles",
    "superset.views.base.json_error_response",
    "superset.views.base.json_success",
    "superset.views.core.logger",
    "superset.views.utils.is_owner"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.queries": {
  "data": {
   "lineno": 2667,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "float",
    "int",
    "superset.event_logger.log_this",
    "superset.typing.FlaskResponse",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.queries_exec": {
  "data": {
   "lineno": 2680,
   "symbols_in_volume": [
    "datetime.datetime.utcfromtimestamp",
    "flask.g.user.get_id",
    "float",
    "int",
    "simplejson.dumps",
    "staticmethod",
    "superset.db.session.query",
    "superset.models.sql_lab.Query",
    "superset.models.sql_lab.Query.changed_on",
    "superset.models.sql_lab.Query.user_id",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_int_dttm_ser",
    "superset.views.base.json_error_response",
    "superset.views.base.json_success",
    "superset.views.core.stats_logger",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.recent_activity": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "datetime.datetime.today",
    "datetime.timedelta",
    "flask.request.args.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "simplejson.dumps",
    "sqlalchemy.and_",
    "sqlalchemy.or_",
    "sqlalchemy.sql.functions.max",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.core.Log.action",
    "superset.models.core.Log.action.in_",
    "superset.models.core.Log.dashboard_id",
    "superset.models.core.Log.dashboard_id.isnot",
    "superset.models.core.Log.dttm",
    "superset.models.core.Log.dttm.desc",
    "superset.models.core.Log.slice_id",
    "superset.models.core.Log.slice_id.isnot",
    "superset.models.core.Log.user_id",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.Dashboard.dashboard_title",
    "superset.models.dashboard.Dashboard.id",
    "superset.models.dashboard.Dashboard.slug.label",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.id",
    "superset.models.slice.Slice.slice_name",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_int_dttm_ser",
    "superset.views.base.api",
    "superset.views.base.json_success"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.remove_extra_filters": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.request_access": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "all",
    "flask.flash",
    "flask.redirect",
    "flask.request.args.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "flask_babel.gettext",
    "int",
    "set",
    "superset.connectors.connector_registry.ConnectorRegistry.sources.get",
    "superset.db.session.add",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.dashboard.Dashboard",
    "superset.security_manager.can_access_datasource",
    "superset.typing.FlaskResponse",
    "superset.views.core.DAR"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.results": {
  "data": {
   "lineno": 2143,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "str",
    "superset.event_logger.log_this",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.results_exec": {
  "data": {
   "lineno": 2149,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "flask.request.args",
    "flask_babel.gettext",
    "int",
    "simplejson.dumps",
    "staticmethod",
    "str",
    "superset.db.session.query",
    "superset.exceptions.SerializationError",
    "superset.exceptions.SupersetSecurityException",
    "superset.models.sql_lab.Query",
    "superset.results_backend",
    "superset.results_backend.get",
    "superset.results_backend_use_msgpack",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_iso_dttm_ser",
    "superset.utils.core.zlib_decompress",
    "superset.utils.dates.now_as_float",
    "superset.views.base.json_error_response",
    "superset.views.base.json_errors_response",
    "superset.views.base.json_success",
    "superset.views.core.stats_logger",
    "superset.views.utils._deserialize_results_payload",
    "superset.views.utils.apply_display_max_row_limit",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.save_dash": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "flask.request.form",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "flask_babel.gettext",
    "int",
    "simplejson.dumps",
    "simplejson.loads",
    "superset.dashboards.dao.DashboardDAO.set_dash_metadata",
    "superset.db.session",
    "superset.event_logger.log_this",
    "superset.models.dashboard.Dashboard",
    "superset.typing.FlaskResponse",
    "superset.views.base.api",
    "superset.views.base.check_ownership",
    "superset.views.base.json_error_response",
    "superset.views.base.json_success"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.save_or_overwrite_slice": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "bool",
    "flask.flash",
    "flask.g.user",
    "flask.request.args.get",
    "flask_babel.lazy_gettext",
    "int",
    "simplejson.dumps",
    "str",
    "superset.charts.dao.ChartDAO.overwrite",
    "superset.charts.dao.ChartDAO.save",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "superset.security_manager.can_access",
    "superset.typing.FlaskResponse",
    "superset.views.base.check_ownership",
    "superset.views.base.json_error_response",
    "superset.views.base.json_success",
    "superset.views.utils.get_form_data",
    "superset.views.utils.is_owner",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.schemas": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "flask.Response",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "simplejson.dumps",
    "str",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.core.Database",
    "superset.security_manager.get_schemas_accessible_by_user",
    "superset.typing.FlaskResponse",
    "superset.views.base.api",
    "superset.views.core.logger"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.schemas_access_for_csv_upload": {
  "data": {
   "lineno": 2910,
   "symbols_in_volume": [
    "Exception",
    "flask.request.args",
    "flask.request.args.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.core.Database",
    "superset.security_manager.can_access_database",
    "superset.security_manager.get_schemas_accessible_by_user",
    "superset.typing.FlaskResponse",
    "superset.views.base.api",
    "superset.views.base.json_error_response",
    "superset.views.core.logger"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.search_queries": {
  "data": {
   "lineno": 2701,
   "symbols_in_volume": [
    "ValueError",
    "flask.Response",
    "flask.g.user.get_user_id",
    "flask.request.args.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "int",
    "simplejson.dumps",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.sql_lab.Query",
    "superset.models.sql_lab.Query.database_id",
    "superset.models.sql_lab.Query.sql.like",
    "superset.models.sql_lab.Query.start_time",
    "superset.models.sql_lab.Query.start_time.asc",
    "superset.models.sql_lab.Query.status",
    "superset.models.sql_lab.Query.user_id",
    "superset.security_manager.can_access_all_queries",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_int_dttm_ser",
    "superset.views.core.config",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.select_star": {
  "data": {
   "lineno": 2061,
   "symbols_in_volume": [
    "flask.g.user",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "int",
    "str",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.core.Database",
    "superset.sql_parse.Table",
    "superset.typing.FlaskResponse",
    "superset.utils.core.parse_js_uri_path_item",
    "superset.views.base.json_error_response",
    "superset.views.base.json_success",
    "superset.views.core.logging",
    "superset.views.core.stats_logger",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.show_traceback": {
  "data": {
   "lineno": 2766,
   "symbols_in_volume": [
    "flask.render_template",
    "superset.app.errorhandler",
    "superset.typing.FlaskResponse",
    "superset.views.base.get_error_msg"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.slice": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "flask.abort",
    "flask.redirect",
    "flask.request.args.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "flask_babel.lazy_gettext",
    "int",
    "simplejson.dumps",
    "superset.event_logger.log_this",
    "superset.typing.FlaskResponse",
    "superset.utils.core.ReservedUrlParameters.STANDALONE.value",
    "superset.views.utils.get_form_data",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.slice_json": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "superset.event_logger.log_this",
    "superset.exceptions.SupersetException",
    "superset.typing.FlaskResponse",
    "superset.utils.cache.etag_cache",
    "superset.utils.core.error_msg_from_exception",
    "superset.views.base.api",
    "superset.views.base.json_error_response",
    "superset.views.utils.check_resource_permissions",
    "superset.views.utils.check_slice_perms",
    "superset.views.utils.get_form_data",
    "superset.views.utils.get_viz"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.sql_json": {
  "data": {
   "lineno": 2430,
   "symbols_in_volume": [
    "flask.request.headers.get",
    "flask.request.json",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "str",
    "superset.event_logger.log_this",
    "superset.typing.FlaskResponse",
    "superset.views.base.handle_api_exception",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.sql_json_exec": {
  "data": {
   "lineno": 2440,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "flask.g.user",
    "flask.g.user.get_id",
    "flask_babel.lazy_gettext",
    "flask_babel.ngettext",
    "int",
    "jinja2.exceptions.TemplateError",
    "jinja2.meta.find_undeclared_variables",
    "len",
    "list",
    "min",
    "simplejson.JSONDecodeError",
    "simplejson.loads",
    "sqlalchemy.exc.SQLAlchemyError",
    "str",
    "superset.app.config",
    "superset.db.session",
    "superset.exceptions.SupersetSecurityException",
    "superset.exceptions.SupersetTemplateParamsErrorException",
    "superset.is_feature_enabled",
    "superset.jinja_context.get_template_processor",
    "superset.models.core.Database",
    "superset.models.sql_lab.Query",
    "superset.sql_parse.CtasMethod",
    "superset.sql_parse.CtasMethod.TABLE",
    "superset.typing.FlaskResponse",
    "superset.utils.core.error_msg_from_exception",
    "superset.utils.core.format_list",
    "superset.utils.core.shortid",
    "superset.utils.dates.now_as_float",
    "superset.views.base.json_error_response",
    "superset.views.base.json_errors_response",
    "superset.views.core.PARAMETER_MISSING_ERR",
    "superset.views.core.QueryStatus",
    "superset.views.core.config",
    "superset.views.core.logger",
    "superset.views.utils.get_cta_schema_name",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.sqllab": {
  "data": {
   "lineno": 2873,
   "symbols_in_volume": [
    "flask.g.user",
    "flask.g.user.get_id",
    "flask.request.form.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "simplejson.JSONDecodeError",
    "simplejson.dumps",
    "simplejson.loads",
    "superset.event_logger.log_this",
    "superset.typing.FlaskResponse",
    "superset.utils.core.pessimistic_json_iso_dttm_ser",
    "superset.views.base.common_bootstrap_payload",
    "superset.views.core.config",
    "superset.views.utils.bootstrap_user_data"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.sqllab_history": {
  "data": {
   "lineno": 2900,
   "symbols_in_volume": [
    "flask.redirect",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "super",
    "superset.event_logger.log_this",
    "superset.is_feature_enabled",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.sqllab_table_viz": {
  "data": {
   "lineno": 1963,
   "symbols_in_volume": [
    "flask.g.user",
    "flask.request.form",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "simplejson.dumps",
    "simplejson.loads",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.db.session.add",
    "superset.db.session.commit",
    "superset.db.session.no_autoflush",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.core.Database",
    "superset.typing.FlaskResponse",
    "superset.views.base.create_table_permissions",
    "superset.views.base.json_success",
    "superset.views.base.validate_sqlatable"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.sqllab_viz": {
  "data": {
   "lineno": 2004,
   "symbols_in_volume": [
    "KeyError",
    "flask.g.user",
    "flask.request.form",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "simplejson.dumps",
    "simplejson.loads",
    "superset.connectors.sqla.models.SqlMetric",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.connectors.sqla.models.TableColumn",
    "superset.db.session.add",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.core.Database",
    "superset.sql_parse.ParsedQuery",
    "superset.typing.FlaskResponse",
    "superset.views.base.json_error_response",
    "superset.views.base.json_success"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.stop_query": {
  "data": {
   "lineno": 2207,
   "symbols_in_volume": [
    "Exception",
    "flask.request.form.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "str",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.db.session.rollback",
    "superset.event_logger.log_this",
    "superset.models.sql_lab.Query",
    "superset.typing.FlaskResponse",
    "superset.views.core.QueryStatus",
    "superset.views.core.backoff",
    "superset.views.core.logger"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.sync_druid_source": {
  "data": {
   "lineno": 1902,
   "symbols_in_volume": [
    "Exception",
    "flask.Response",
    "flask.request.get_json",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "flask_babel.gettext",
    "superset.connectors.connector_registry.ConnectorRegistry.sources",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.security_manager.find_user",
    "superset.typing.FlaskResponse",
    "superset.utils.core.error_msg_from_exception",
    "superset.views.base.json_error_response",
    "superset.views.core.logger"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.tables": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "flask.g.user.email.split",
    "flask_appbuilder.expose",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_appbuilder.security.decorators.has_access_api",
    "get_datasource_label",
    "int",
    "len",
    "set",
    "simplejson.dumps",
    "str",
    "superset.databases.filters.DatabaseFilter",
    "superset.db.session",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.core.Database",
    "superset.security_manager.get_datasources_accessible_by_user",
    "superset.typing.FlaskResponse",
    "superset.utils.core.parse_js_uri_path_item",
    "superset.views.base.api",
    "superset.views.base.json_error_response",
    "superset.views.base.json_success",
    "superset.views.core.config"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.tables.get_datasource_label": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.DatasourceName"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.testconn": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "Exception",
    "ModuleNotFoundError",
    "contextlib.closing",
    "flask.g.user",
    "flask.g.user.username",
    "flask.request.json.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "flask_babel.lazy_gettext",
    "simplejson.dumps",
    "sqlalchemy.engine.url.make_url",
    "sqlalchemy.exc.ArgumentError",
    "sqlalchemy.exc.DBAPIError",
    "sqlalchemy.exc.NoSuchModuleError",
    "str",
    "superset.app.config",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.exceptions.CertificateException",
    "superset.models.core.Database",
    "superset.security.analytics_db_safety.DBSecurityException",
    "superset.security.analytics_db_safety.check_sqlalchemy_uri",
    "superset.typing.FlaskResponse",
    "superset.views.base.api",
    "superset.views.base.json_error_response",
    "superset.views.base.json_success",
    "superset.views.core.logger",
    "type"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.theme": {
  "data": {
   "lineno": 2139,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.user_slices": {
  "data": {
   "lineno": 1501,
   "symbols_in_volume": [
    "flask.g.user.id",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "simplejson.dumps",
    "sqlalchemy.and_",
    "sqlalchemy.or_",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.core.FavStar",
    "superset.models.core.FavStar.class_name",
    "superset.models.core.FavStar.dttm",
    "superset.models.core.FavStar.obj_id",
    "superset.models.core.FavStar.user_id",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.changed_by_fk",
    "superset.models.slice.Slice.created_by_fk",
    "superset.models.slice.Slice.id",
    "superset.models.slice.Slice.id.in_",
    "superset.models.slice.Slice.owners",
    "superset.models.slice.Slice.slice_name.asc",
    "superset.security_manager.user_model.id",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_int_dttm_ser",
    "superset.views.base.api",
    "superset.views.base.json_success",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.validate_sql_json": {
  "data": {
   "lineno": 2238,
   "symbols_in_volume": [
    "Exception",
    "flask.request.form",
    "flask.request.form.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "flask_babel.lazy_gettext",
    "len",
    "simplejson.dumps",
    "simplejson.loads",
    "str",
    "superset.db.session",
    "superset.event_logger.log_this",
    "superset.get_feature_flags",
    "superset.models.core.Database",
    "superset.sql_validators.get_validator_by_name",
    "superset.typing.FlaskResponse",
    "superset.utils.core.pessimistic_json_iso_dttm_ser",
    "superset.utils.core.timeout",
    "superset.views.base.json_error_response",
    "superset.views.base.json_success",
    "superset.views.core.config",
    "superset.views.core.logger",
    "superset.views.core.re"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.warm_up_cache": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": [
    "Exception",
    "delattr",
    "flask.g",
    "flask.g.form_data",
    "flask.request.args.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "flask_babel.gettext",
    "simplejson.dumps",
    "simplejson.loads",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.connectors.sqla.models.SqlaTable.table_name",
    "superset.db.session",
    "superset.event_logger.log_this",
    "superset.models.core.Database",
    "superset.models.core.Database.database_name",
    "superset.models.slice.Slice",
    "superset.typing.FlaskResponse",
    "superset.utils.core.error_msg_from_exception",
    "superset.views.base.api",
    "superset.views.base.json_error_response",
    "superset.views.base.json_success",
    "superset.views.utils.get_dashboard_extra_filters",
    "superset.views.utils.get_form_data",
    "superset.views.utils.get_viz",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.views.core.Superset.welcome": {
  "data": {
   "lineno": 2773,
   "symbols_in_volume": [
    "flask.g.user",
    "flask.g.user.get_id",
    "flask.redirect",
    "flask_appbuilder.expose",
    "simplejson.dumps",
    "str",
    "superset.appbuilder.get_url_for_login",
    "superset.conf",
    "superset.conf.get",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.user_attributes.UserAttribute.welcome_dashboard_id",
    "superset.typing.FlaskResponse",
    "superset.utils.core.pessimistic_json_iso_dttm_ser",
    "superset.views.base.common_bootstrap_payload",
    "superset.views.utils.bootstrap_user_data"
   ]
  },
  "type": "function"
 },
 "superset.views.core.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.views.core.SupersetGenericDBErrorException": {
  "data": {
   "shadows": "superset.exceptions.SupersetGenericDBErrorException"
  },
  "type": "import"
 },
 "superset.views.core.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.views.core.SupersetTemplateParamsErrorException": {
  "data": {
   "shadows": "superset.exceptions.SupersetTemplateParamsErrorException"
  },
  "type": "import"
 },
 "superset.views.core.SupersetTimeoutException": {
  "data": {
   "shadows": "superset.exceptions.SupersetTimeoutException"
  },
  "type": "import"
 },
 "superset.views.core.TabState": {
  "data": {
   "shadows": "superset.models.sql_lab.TabState"
  },
  "type": "import"
 },
 "superset.views.core.Table": {
  "data": {
   "shadows": "superset.sql_parse.Table"
  },
  "type": "import"
 },
 "superset.views.core.TableColumn": {
  "data": {
   "shadows": "superset.connectors.sqla.models.TableColumn"
  },
  "type": "import"
 },
 "superset.views.core.TemplateError": {
  "data": {
   "shadows": "jinja2.exceptions.TemplateError"
  },
  "type": "import"
 },
 "superset.views.core.USER_MISSING_ERR": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "superset.views.core.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.views.core.UserAttribute": {
  "data": {
   "shadows": "superset.models.user_attributes.UserAttribute"
  },
  "type": "import"
 },
 "superset.views.core._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.core.__": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.views.core._deserialize_results_payload": {
  "data": {
   "shadows": "superset.views.utils._deserialize_results_payload"
  },
  "type": "import"
 },
 "superset.views.core.ab_models": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models"
  },
  "type": "import"
 },
 "superset.views.core.abort": {
  "data": {
   "shadows": "flask.abort"
  },
  "type": "import"
 },
 "superset.views.core.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "superset.views.core.api": {
  "data": {
   "shadows": "superset.views.base.api"
  },
  "type": "import"
 },
 "superset.views.core.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.views.core.appbuilder": {
  "data": {
   "shadows": "superset.appbuilder"
  },
  "type": "import"
 },
 "superset.views.core.apply_display_max_row_limit": {
  "data": {
   "shadows": "superset.views.utils.apply_display_max_row_limit"
  },
  "type": "import"
 },
 "superset.views.core.async_query_manager": {
  "data": {
   "shadows": "superset.extensions.async_query_manager"
  },
  "type": "import"
 },
 "superset.views.core.backoff": {
  "data": {
   "shadows": "backoff"
  },
  "type": "import"
 },
 "superset.views.core.bootstrap_user_data": {
  "data": {
   "shadows": "superset.views.utils.bootstrap_user_data"
  },
  "type": "import"
 },
 "superset.views.core.cache_manager": {
  "data": {
   "shadows": "superset.extensions.cache_manager"
  },
  "type": "import"
 },
 "superset.views.core.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.views.core.check_datasource_perms": {
  "data": {
   "shadows": "superset.views.utils.check_datasource_perms"
  },
  "type": "import"
 },
 "superset.views.core.check_explore_cache_perms": {
  "data": {
   "shadows": "superset.views.utils.check_explore_cache_perms"
  },
  "type": "import"
 },
 "superset.views.core.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.views.core.check_resource_permissions": {
  "data": {
   "shadows": "superset.views.utils.check_resource_permissions"
  },
  "type": "import"
 },
 "superset.views.core.check_slice_perms": {
  "data": {
   "shadows": "superset.views.utils.check_slice_perms"
  },
  "type": "import"
 },
 "superset.views.core.check_sqlalchemy_uri": {
  "data": {
   "shadows": "superset.security.analytics_db_safety.check_sqlalchemy_uri"
  },
  "type": "import"
 },
 "superset.views.core.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "superset.views.core.common_bootstrap_payload": {
  "data": {
   "shadows": "superset.views.base.common_bootstrap_payload"
  },
  "type": "import"
 },
 "superset.views.core.conf": {
  "data": {
   "shadows": "superset.conf"
  },
  "type": "import"
 },
 "superset.views.core.config": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "superset.views.core.create_table_permissions": {
  "data": {
   "shadows": "superset.views.base.create_table_permissions"
  },
  "type": "import"
 },
 "superset.views.core.data_payload_response": {
  "data": {
   "shadows": "superset.views.base.data_payload_response"
  },
  "type": "import"
 },
 "superset.views.core.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.views.core.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.core.etag_cache": {
  "data": {
   "shadows": "superset.utils.cache.etag_cache"
  },
  "type": "import"
 },
 "superset.views.core.event_logger": {
  "data": {
   "shadows": "superset.event_logger"
  },
  "type": "import"
 },
 "superset.views.core.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.views.core.find_undeclared_variables": {
  "data": {
   "shadows": "jinja2.meta.find_undeclared_variables"
  },
  "type": "import"
 },
 "superset.views.core.flash": {
  "data": {
   "shadows": "flask.flash"
  },
  "type": "import"
 },
 "superset.views.core.func": {
  "data": {
   "shadows": "sqlalchemy.sql.functions"
  },
  "type": "import"
 },
 "superset.views.core.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.views.core.generate_download_headers": {
  "data": {
   "shadows": "superset.views.base.generate_download_headers"
  },
  "type": "import"
 },
 "superset.views.core.get_cta_schema_name": {
  "data": {
   "shadows": "superset.views.utils.get_cta_schema_name"
  },
  "type": "import"
 },
 "superset.views.core.get_dashboard_extra_filters": {
  "data": {
   "shadows": "superset.views.utils.get_dashboard_extra_filters"
  },
  "type": "import"
 },
 "superset.views.core.get_datasource_info": {
  "data": {
   "shadows": "superset.views.utils.get_datasource_info"
  },
  "type": "import"
 },
 "superset.views.core.get_error_msg": {
  "data": {
   "shadows": "superset.views.base.get_error_msg"
  },
  "type": "import"
 },
 "superset.views.core.get_feature_flags": {
  "data": {
   "shadows": "superset.get_feature_flags"
  },
  "type": "import"
 },
 "superset.views.core.get_form_data": {
  "data": {
   "shadows": "superset.views.utils.get_form_data"
  },
  "type": "import"
 },
 "superset.views.core.get_template_processor": {
  "data": {
   "shadows": "superset.jinja_context.get_template_processor"
  },
  "type": "import"
 },
 "superset.views.core.get_user_roles": {
  "data": {
   "shadows": "superset.views.base.get_user_roles"
  },
  "type": "import"
 },
 "superset.views.core.get_validator_by_name": {
  "data": {
   "shadows": "superset.sql_validators.get_validator_by_name"
  },
  "type": "import"
 },
 "superset.views.core.get_viz": {
  "data": {
   "shadows": "superset.views.utils.get_viz"
  },
  "type": "import"
 },
 "superset.views.core.handle_api_exception": {
  "data": {
   "shadows": "superset.views.base.handle_api_exception"
  },
  "type": "import"
 },
 "superset.views.core.has_access": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access"
  },
  "type": "import"
 },
 "superset.views.core.has_access_api": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access_api"
  },
  "type": "import"
 },
 "superset.views.core.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.views.core.is_owner": {
  "data": {
   "shadows": "superset.views.utils.is_owner"
  },
  "type": "import"
 },
 "superset.views.core.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.views.core.json_error_response": {
  "data": {
   "shadows": "superset.views.base.json_error_response"
  },
  "type": "import"
 },
 "superset.views.core.json_errors_response": {
  "data": {
   "shadows": "superset.views.base.json_errors_response"
  },
  "type": "import"
 },
 "superset.views.core.json_success": {
  "data": {
   "shadows": "superset.views.base.json_success"
  },
  "type": "import"
 },
 "superset.views.core.load_explore_json_into_cache": {
  "data": {
   "shadows": "superset.tasks.async_queries.load_explore_json_into_cache"
  },
  "type": "import"
 },
 "superset.views.core.logger": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "superset.views.core.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.views.core.make_url": {
  "data": {
   "shadows": "sqlalchemy.engine.url.make_url"
  },
  "type": "import"
 },
 "superset.views.core.ngettext": {
  "data": {
   "shadows": "flask_babel.ngettext"
  },
  "type": "import"
 },
 "superset.views.core.now_as_float": {
  "data": {
   "shadows": "superset.utils.dates.now_as_float"
  },
  "type": "import"
 },
 "superset.views.core.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.views.core.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "superset.views.core.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.views.core.permission_name": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.permission_name"
  },
  "type": "import"
 },
 "superset.views.core.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.views.core.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "superset.views.core.render_template": {
  "data": {
   "shadows": "flask.render_template"
  },
  "type": "import"
 },
 "superset.views.core.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.views.core.results_backend": {
  "data": {
   "shadows": "superset.results_backend"
  },
  "type": "import"
 },
 "superset.views.core.results_backend_use_msgpack": {
  "data": {
   "shadows": "superset.results_backend_use_msgpack"
  },
  "type": "import"
 },
 "superset.views.core.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.views.core.sql_lab": {
  "data": {
   "shadows": "superset.sql_lab"
  },
  "type": "import"
 },
 "superset.views.core.stats_logger": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "superset.views.core.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.views.core.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.views.core.validate_sqlatable": {
  "data": {
   "shadows": "superset.views.base.validate_sqlatable"
  },
  "type": "import"
 },
 "superset.views.core.viz": {
  "data": {
   "shadows": "superset.viz"
  },
  "type": "import"
 },
 "superset.views.css_templates": {
  "data": {},
  "type": "module"
 },
 "superset.views.css_templates.CssTemplateAsyncModelView": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.API_READ",
    "superset.views.css_templates.CssTemplateModelView"
   ]
  },
  "type": "class"
 },
 "superset.views.css_templates.CssTemplateModelView": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.CRUD_SET",
    "superset.models.core.CssTemplate",
    "superset.views.base.DeleteMixin",
    "superset.views.base.SupersetModelView"
   ]
  },
  "type": "class"
 },
 "superset.views.css_templates.CssTemplateModelView.list": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "flask_appbuilder.api.expose",
    "flask_appbuilder.security.decorators.has_access",
    "super",
    "superset.is_feature_enabled",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.css_templates.DeleteMixin": {
  "data": {
   "shadows": "superset.views.base.DeleteMixin"
  },
  "type": "import"
 },
 "superset.views.css_templates.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.css_templates.MODEL_VIEW_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.views.css_templates.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.views.css_templates.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.views.css_templates.SupersetModelView": {
  "data": {
   "shadows": "superset.views.base.SupersetModelView"
  },
  "type": "import"
 },
 "superset.views.css_templates._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.css_templates.expose": {
  "data": {
   "shadows": "flask_appbuilder.api.expose"
  },
  "type": "import"
 },
 "superset.views.css_templates.has_access": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access"
  },
  "type": "import"
 },
 "superset.views.css_templates.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.views.css_templates.models": {
  "data": {
   "shadows": "superset.models.core"
  },
  "type": "import"
 },
 "superset.views.dashboard": {
  "data": {},
  "type": "module"
 },
 "superset.views.dashboard.filters": {
  "data": {},
  "type": "module"
 },
 "superset.views.dashboard.filters.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.views.dashboard.filters.BaseFilter": {
  "data": {
   "shadows": "superset.views.base.BaseFilter"
  },
  "type": "import"
 },
 "superset.views.dashboard.filters.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.views.dashboard.filters.DashboardFilter": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "superset.views.base.BaseFilter"
   ]
  },
  "type": "class"
 },
 "superset.views.dashboard.filters.DashboardFilter.apply": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "get_user_roles",
    "list",
    "sqlalchemy.and_",
    "sqlalchemy.or_",
    "sqlalchemy.orm.query.Query",
    "superset.db.session.query",
    "superset.models.core.FavStar.class_name",
    "superset.models.core.FavStar.obj_id",
    "superset.models.core.FavStar.user_id",
    "superset.models.dashboard.Dashboard.id",
    "superset.models.dashboard.Dashboard.id.in_",
    "superset.models.dashboard.Dashboard.owners",
    "superset.models.dashboard.Dashboard.published",
    "superset.models.dashboard.Dashboard.slices",
    "superset.models.slice.Slice.perm.in_",
    "superset.models.slice.Slice.schema_perm.in_",
    "superset.security_manager.can_access_all_datasources",
    "superset.security_manager.user_model.get_user_id",
    "superset.security_manager.user_model.id",
    "superset.security_manager.user_view_menu_names",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.dashboard.filters.FavStar": {
  "data": {
   "shadows": "superset.models.core.FavStar"
  },
  "type": "import"
 },
 "superset.views.dashboard.filters.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.query.Query"
  },
  "type": "import"
 },
 "superset.views.dashboard.filters.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.views.dashboard.filters.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "superset.views.dashboard.filters.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.dashboard.filters.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.views.dashboard.filters.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.views.dashboard.mixin": {
  "data": {},
  "type": "module"
 },
 "superset.views.dashboard.mixin.DashboardMixin": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext"
   ]
  },
  "type": "class"
 },
 "superset.views.dashboard.mixin.DashboardMixin.pre_delete": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.views.dashboard.mixin._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.dashboard.views": {
  "data": {},
  "type": "module"
 },
 "superset.views.dashboard.views.BaseSupersetView": {
  "data": {
   "shadows": "superset.views.base.BaseSupersetView"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.Dashboard": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.views.base.BaseSupersetView"
   ]
  },
  "type": "class"
 },
 "superset.views.dashboard.views.Dashboard.new": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "flask.g.user",
    "flask.redirect",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "superset.db.session.add",
    "superset.db.session.commit",
    "superset.models.dashboard.Dashboard",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.dashboard.views.DashboardMixin": {
  "data": {
   "shadows": "superset.views.dashboard.mixin.DashboardMixin"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.DashboardModel": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.DashboardModelView": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.API_DELETE",
    "superset.constants.RouteMethod.API_READ",
    "superset.constants.RouteMethod.CRUD_SET",
    "superset.models.dashboard.Dashboard",
    "superset.views.base.DeleteMixin",
    "superset.views.base.SupersetModelView",
    "superset.views.dashboard.mixin.DashboardMixin"
   ]
  },
  "type": "class"
 },
 "superset.views.dashboard.views.DashboardModelView.download_dashboards": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "flask.Response",
    "flask.request.args.get",
    "flask.request.args.getlist",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "superset.event_logger.log_this",
    "superset.models.dashboard.Dashboard.export_dashboards",
    "superset.typing.FlaskResponse",
    "superset.views.base.generate_download_headers"
   ]
  },
  "type": "function"
 },
 "superset.views.dashboard.views.DashboardModelView.list": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "super",
    "superset.is_feature_enabled",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.dashboard.views.DashboardModelView.mulexport": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "flask.redirect",
    "flask_appbuilder.actions.action",
    "flask_babel.gettext",
    "isinstance",
    "list",
    "superset.typing.FlaskResponse",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.views.dashboard.views.DashboardModelView.pre_add": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "flask.g.user",
    "list",
    "set",
    "superset.utils.core.validate_json",
    "superset.views.dashboard.views.re"
   ]
  },
  "type": "function"
 },
 "superset.views.dashboard.views.DashboardModelView.pre_update": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "superset.views.base.check_ownership"
   ]
  },
  "type": "function"
 },
 "superset.views.dashboard.views.DashboardModelViewAsync": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.API_READ",
    "superset.views.dashboard.views.DashboardModelView"
   ]
  },
  "type": "class"
 },
 "superset.views.dashboard.views.DeleteMixin": {
  "data": {
   "shadows": "superset.views.base.DeleteMixin"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.MODEL_VIEW_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.SupersetModelView": {
  "data": {
   "shadows": "superset.views.base.SupersetModelView"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.views.dashboard.views._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.__": {
  "data": {
   "shadows": "flask_babel.gettext"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.action": {
  "data": {
   "shadows": "flask_appbuilder.actions.action"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.event_logger": {
  "data": {
   "shadows": "superset.event_logger"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.generate_download_headers": {
  "data": {
   "shadows": "superset.views.base.generate_download_headers"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.has_access": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.views.dashboard.views.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.views.database": {
  "data": {},
  "type": "module"
 },
 "superset.views.database.forms": {
  "data": {
   "symbols_in_volume": [
    "superset.app.config"
   ]
  },
  "type": "module"
 },
 "superset.views.database.forms.BS3TextFieldWidget": {
  "data": {
   "shadows": "flask_appbuilder.fieldwidgets.BS3TextFieldWidget"
  },
  "type": "import"
 },
 "superset.views.database.forms.BooleanField": {
  "data": {
   "shadows": "wtforms.BooleanField"
  },
  "type": "import"
 },
 "superset.views.database.forms.CommaSeparatedListField": {
  "data": {
   "shadows": "superset.forms.CommaSeparatedListField"
  },
  "type": "import"
 },
 "superset.views.database.forms.CsvToDatabaseForm": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "flask_appbuilder.fieldwidgets.BS3TextFieldWidget",
    "flask_appbuilder.forms.DynamicForm",
    "flask_babel.lazy_gettext",
    "flask_wtf.file.FileAllowed",
    "flask_wtf.file.FileField",
    "flask_wtf.file.FileRequired",
    "superset.forms.CommaSeparatedListField",
    "superset.forms.JsonListField",
    "superset.forms.filter_not_empty_values",
    "superset.views.database.forms.config",
    "wtforms.BooleanField",
    "wtforms.IntegerField",
    "wtforms.SelectField",
    "wtforms.StringField",
    "wtforms.ext.sqlalchemy.fields.QuerySelectField",
    "wtforms.validators.DataRequired",
    "wtforms.validators.Length",
    "wtforms.validators.NumberRange",
    "wtforms.validators.Optional"
   ]
  },
  "type": "class"
 },
 "superset.views.database.forms.CsvToDatabaseForm.at_least_one_schema_is_allowed": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "staticmethod",
    "superset.models.core.Database",
    "superset.security_manager.can_access_database",
    "superset.security_manager.get_schemas_accessible_by_user"
   ]
  },
  "type": "function"
 },
 "superset.views.database.forms.CsvToDatabaseForm.csv_allowed_dbs": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "superset.db.session.query",
    "superset.models.core.Database",
    "superset.views.database.forms.CsvToDatabaseForm",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.views.database.forms.DataRequired": {
  "data": {
   "shadows": "wtforms.validators.DataRequired"
  },
  "type": "import"
 },
 "superset.views.database.forms.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.views.database.forms.DynamicForm": {
  "data": {
   "shadows": "flask_appbuilder.forms.DynamicForm"
  },
  "type": "import"
 },
 "superset.views.database.forms.ExcelToDatabaseForm": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "flask_appbuilder.fieldwidgets.BS3TextFieldWidget",
    "flask_appbuilder.forms.DynamicForm",
    "flask_babel.lazy_gettext",
    "flask_wtf.file.FileAllowed",
    "flask_wtf.file.FileField",
    "flask_wtf.file.FileRequired",
    "superset.forms.CommaSeparatedListField",
    "superset.forms.JsonListField",
    "superset.forms.filter_not_empty_values",
    "superset.views.database.forms.config",
    "wtforms.BooleanField",
    "wtforms.IntegerField",
    "wtforms.SelectField",
    "wtforms.StringField",
    "wtforms.ext.sqlalchemy.fields.QuerySelectField",
    "wtforms.validators.DataRequired",
    "wtforms.validators.Length",
    "wtforms.validators.NumberRange",
    "wtforms.validators.Optional"
   ]
  },
  "type": "class"
 },
 "superset.views.database.forms.ExcelToDatabaseForm.at_least_one_schema_is_allowed": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "bool",
    "staticmethod",
    "superset.models.core.Database",
    "superset.security_manager.can_access_database",
    "superset.security_manager.schemas_accessible_by_user"
   ]
  },
  "type": "function"
 },
 "superset.views.database.forms.ExcelToDatabaseForm.excel_allowed_dbs": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "superset.db.session.query",
    "superset.models.core.Database",
    "superset.views.database.forms.ExcelToDatabaseForm",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.views.database.forms.FileAllowed": {
  "data": {
   "shadows": "flask_wtf.file.FileAllowed"
  },
  "type": "import"
 },
 "superset.views.database.forms.FileField": {
  "data": {
   "shadows": "flask_wtf.file.FileField"
  },
  "type": "import"
 },
 "superset.views.database.forms.FileRequired": {
  "data": {
   "shadows": "flask_wtf.file.FileRequired"
  },
  "type": "import"
 },
 "superset.views.database.forms.IntegerField": {
  "data": {
   "shadows": "wtforms.IntegerField"
  },
  "type": "import"
 },
 "superset.views.database.forms.JsonListField": {
  "data": {
   "shadows": "superset.forms.JsonListField"
  },
  "type": "import"
 },
 "superset.views.database.forms.Length": {
  "data": {
   "shadows": "wtforms.validators.Length"
  },
  "type": "import"
 },
 "superset.views.database.forms.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.views.database.forms.NumberRange": {
  "data": {
   "shadows": "wtforms.validators.NumberRange"
  },
  "type": "import"
 },
 "superset.views.database.forms.Optional": {
  "data": {
   "shadows": "wtforms.validators.Optional"
  },
  "type": "import"
 },
 "superset.views.database.forms.QuerySelectField": {
  "data": {
   "shadows": "wtforms.ext.sqlalchemy.fields.QuerySelectField"
  },
  "type": "import"
 },
 "superset.views.database.forms.SelectField": {
  "data": {
   "shadows": "wtforms.SelectField"
  },
  "type": "import"
 },
 "superset.views.database.forms.StringField": {
  "data": {
   "shadows": "wtforms.StringField"
  },
  "type": "import"
 },
 "superset.views.database.forms._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.database.forms.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.views.database.forms.config": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "superset.views.database.forms.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.database.forms.filter_not_empty_values": {
  "data": {
   "shadows": "superset.forms.filter_not_empty_values"
  },
  "type": "import"
 },
 "superset.views.database.forms.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.views.database.mixins": {
  "data": {},
  "type": "module"
 },
 "superset.views.database.mixins.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.views.database.mixins.DatabaseFilter": {
  "data": {
   "shadows": "superset.databases.filters.DatabaseFilter"
  },
  "type": "import"
 },
 "superset.views.database.mixins.DatabaseMixin": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.databases.filters.DatabaseFilter",
    "superset.utils.core.markdown"
   ]
  },
  "type": "class"
 },
 "superset.views.database.mixins.DatabaseMixin._pre_add_update": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "superset.app.config",
    "superset.models.core.Database",
    "superset.security.analytics_db_safety.check_sqlalchemy_uri",
    "superset.security_manager.add_permission_view_menu",
    "superset.security_manager.get_schema_perm",
    "superset.utils.core.parse_ssl_cert"
   ]
  },
  "type": "function"
 },
 "superset.views.database.mixins.DatabaseMixin.check_encrypted_extra": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "Exception",
    "flask_babel.lazy_gettext",
    "str",
    "superset.models.core.Database"
   ]
  },
  "type": "function"
 },
 "superset.views.database.mixins.DatabaseMixin.check_extra": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "Exception",
    "flask_babel.lazy_gettext",
    "sqlalchemy.MetaData",
    "str",
    "superset.models.core.Database",
    "superset.views.database.mixins.inspect"
   ]
  },
  "type": "function"
 },
 "superset.views.database.mixins.DatabaseMixin.pre_add": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "superset.models.core.Database"
   ]
  },
  "type": "function"
 },
 "superset.views.database.mixins.DatabaseMixin.pre_delete": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "flask.Markup",
    "superset.exceptions.SupersetException",
    "superset.models.core.Database"
   ]
  },
  "type": "function"
 },
 "superset.views.database.mixins.DatabaseMixin.pre_update": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "superset.models.core.Database"
   ]
  },
  "type": "function"
 },
 "superset.views.database.mixins.Markup": {
  "data": {
   "shadows": "flask.Markup"
  },
  "type": "import"
 },
 "superset.views.database.mixins.MetaData": {
  "data": {
   "shadows": "sqlalchemy.MetaData"
  },
  "type": "import"
 },
 "superset.views.database.mixins.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.views.database.mixins._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.database.mixins.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.views.database.mixins.check_sqlalchemy_uri": {
  "data": {
   "shadows": "superset.security.analytics_db_safety.check_sqlalchemy_uri"
  },
  "type": "import"
 },
 "superset.views.database.mixins.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "superset.views.database.mixins.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.views.database.mixins.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.views.database.validators": {
  "data": {},
  "type": "module"
 },
 "superset.views.database.validators.ArgumentError": {
  "data": {
   "shadows": "sqlalchemy.exc.ArgumentError"
  },
  "type": "import"
 },
 "superset.views.database.validators.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.views.database.validators.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.views.database.validators.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.views.database.validators.ValidationError": {
  "data": {
   "shadows": "marshmallow.ValidationError"
  },
  "type": "import"
 },
 "superset.views.database.validators._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.database.validators.make_url": {
  "data": {
   "shadows": "sqlalchemy.engine.url.make_url"
  },
  "type": "import"
 },
 "superset.views.database.validators.schema_allows_csv_upload": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "str",
    "superset.models.core.Database",
    "superset.security_manager.can_access_database",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.database.validators.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.views.database.validators.sqlalchemy_uri_validator": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "AttributeError",
    "exception",
    "flask_babel.lazy_gettext",
    "marshmallow.ValidationError",
    "sqlalchemy.engine.url.make_url",
    "sqlalchemy.exc.ArgumentError",
    "str",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.views.database.views": {
  "data": {
   "symbols_in_volume": [
    "superset.app.config",
    "superset.views.database.views.config",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.views.database.views.CertificateException": {
  "data": {
   "shadows": "superset.exceptions.CertificateException"
  },
  "type": "import"
 },
 "superset.views.database.views.CsvToDatabaseView": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "flask_appbuilder.SimpleFormView",
    "flask_babel.lazy_gettext"
   ]
  },
  "type": "class"
 },
 "superset.views.database.views.CsvToDatabaseView.form_get": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "superset.views.database.views.CsvToDatabaseView.form_post": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "Exception",
    "OSError",
    "flask.flash",
    "flask.g.user.id",
    "flask.redirect",
    "flask_babel.lazy_gettext",
    "schema_allows_csv_upload",
    "str",
    "superset.app.config",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.db.session.add",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.db.session.rollback",
    "superset.models.core.Database",
    "superset.sql_parse.Table",
    "superset.utils.core.ensure_path_exists",
    "superset.views.database.views.config",
    "superset.views.database.views.os",
    "superset.views.database.views.stats_logger",
    "superset.views.database.views.tempfile",
    "superset.views.database.views.upload_stream_write",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.views.database.views.DatabaseView": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.CRUD_SET",
    "superset.models.core.Database",
    "superset.views.base.DeleteMixin",
    "superset.views.base.SupersetModelView",
    "superset.views.base.YamlExportMixin",
    "superset.views.database.views.certificate_form_validator",
    "superset.views.database.views.sqlalchemy_uri_form_validator"
   ]
  },
  "type": "class"
 },
 "superset.views.database.views.DatabaseView._delete": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "int",
    "superset.views.base.DeleteMixin._delete"
   ]
  },
  "type": "function"
 },
 "superset.views.database.views.DatabaseView.list": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "super",
    "superset.is_feature_enabled",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.database.views.DeleteMixin": {
  "data": {
   "shadows": "superset.views.base.DeleteMixin"
  },
  "type": "import"
 },
 "superset.views.database.views.ExcelToDatabaseView": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "flask_appbuilder.SimpleFormView",
    "flask_babel.lazy_gettext"
   ]
  },
  "type": "class"
 },
 "superset.views.database.views.ExcelToDatabaseView.form_get": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "superset.views.database.views.ExcelToDatabaseView.form_post": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "Exception",
    "OSError",
    "flask.flash",
    "flask.g.user.id",
    "flask.redirect",
    "flask_babel.lazy_gettext",
    "schema_allows_csv_upload",
    "str",
    "superset.app.config",
    "superset.connectors.sqla.models.SqlaTable",
    "superset.db.session.add",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.db.session.rollback",
    "superset.models.core.Database",
    "superset.sql_parse.Table",
    "superset.utils.core.ensure_path_exists",
    "superset.views.database.views.config",
    "superset.views.database.views.os",
    "superset.views.database.views.stats_logger",
    "superset.views.database.views.tempfile",
    "superset.views.database.views.upload_stream_write",
    "werkzeug.wrappers.Response"
   ]
  },
  "type": "function"
 },
 "superset.views.database.views.FileStorage": {
  "data": {
   "shadows": "werkzeug.datastructures.FileStorage"
  },
  "type": "import"
 },
 "superset.views.database.views.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.database.views.MODEL_VIEW_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.views.database.views.Response": {
  "data": {
   "shadows": "werkzeug.wrappers.Response"
  },
  "type": "import"
 },
 "superset.views.database.views.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.views.database.views.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.views.database.views.SimpleFormView": {
  "data": {
   "shadows": "flask_appbuilder.SimpleFormView"
  },
  "type": "import"
 },
 "superset.views.database.views.SqlaTable": {
  "data": {
   "shadows": "superset.connectors.sqla.models.SqlaTable"
  },
  "type": "import"
 },
 "superset.views.database.views.StringField": {
  "data": {
   "shadows": "wtforms.fields.StringField"
  },
  "type": "import"
 },
 "superset.views.database.views.SupersetModelView": {
  "data": {
   "shadows": "superset.views.base.SupersetModelView"
  },
  "type": "import"
 },
 "superset.views.database.views.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.views.database.views.Table": {
  "data": {
   "shadows": "superset.sql_parse.Table"
  },
  "type": "import"
 },
 "superset.views.database.views.ValidationError": {
  "data": {
   "shadows": "wtforms.validators.ValidationError"
  },
  "type": "import"
 },
 "superset.views.database.views.YamlExportMixin": {
  "data": {
   "shadows": "superset.views.base.YamlExportMixin"
  },
  "type": "import"
 },
 "superset.views.database.views._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.database.views.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.views.database.views.certificate_form_validator": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.exceptions.CertificateException",
    "superset.utils.core.parse_ssl_cert",
    "wtforms.fields.StringField",
    "wtforms.validators.ValidationError"
   ]
  },
  "type": "function"
 },
 "superset.views.database.views.config": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "superset.views.database.views.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.database.views.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.views.database.views.flash": {
  "data": {
   "shadows": "flask.flash"
  },
  "type": "import"
 },
 "superset.views.database.views.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.views.database.views.has_access": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access"
  },
  "type": "import"
 },
 "superset.views.database.views.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.views.database.views.models": {
  "data": {
   "shadows": "superset.models.core"
  },
  "type": "import"
 },
 "superset.views.database.views.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "superset.views.database.views.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "superset.views.database.views.sqlalchemy_uri_form_validator": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "sqlalchemy_uri_validator",
    "wtforms.fields.StringField",
    "wtforms.validators.ValidationError"
   ]
  },
  "type": "function"
 },
 "superset.views.database.views.stats_logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "superset.views.database.views.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "superset.views.database.views.upload_stream_write": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "open",
    "str",
    "superset.app.config"
   ]
  },
  "type": "function"
 },
 "superset.views.database.views.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.views.datasource": {
  "data": {},
  "type": "module"
 },
 "superset.views.datasource.ConnectorRegistry": {
  "data": {
   "shadows": "superset.connectors.connector_registry.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.views.datasource.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "superset.views.datasource.DatasetForbiddenError": {
  "data": {
   "shadows": "superset.datasets.commands.exceptions.DatasetForbiddenError"
  },
  "type": "import"
 },
 "superset.views.datasource.Datasource": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "superset.views.datasource.Datasource.external_metadata": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "json_error_response",
    "str",
    "superset.connectors.connector_registry.ConnectorRegistry.get_datasource",
    "superset.db.session",
    "superset.exceptions.SupersetException",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.datasource.Datasource.get": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "str",
    "superset.connectors.connector_registry.ConnectorRegistry.get_datasource",
    "superset.db.session",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.datasource.Datasource.save": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "collections.Counter",
    "flask.request.form.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "flask_babel._",
    "hasattr",
    "isinstance",
    "json_error_response",
    "str",
    "superset.connectors.connector_registry.ConnectorRegistry.get_datasource",
    "superset.datasets.commands.exceptions.DatasetForbiddenError",
    "superset.db.session",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.exceptions.SupersetSecurityException",
    "superset.typing.FlaskResponse",
    "superset.views.base.check_ownership",
    "superset.views.datasource.json"
   ]
  },
  "type": "function"
 },
 "superset.views.datasource.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.datasource.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.views.datasource.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.views.datasource._": {
  "data": {
   "shadows": "flask_babel._"
  },
  "type": "import"
 },
 "superset.views.datasource.check_ownership": {
  "data": {
   "shadows": "superset.views.base.check_ownership"
  },
  "type": "import"
 },
 "superset.views.datasource.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.datasource.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.views.datasource.has_access_api": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access_api"
  },
  "type": "import"
 },
 "superset.views.datasource.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "superset.views.datasource.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.views.dynamic_plugins": {
  "data": {},
  "type": "module"
 },
 "superset.views.dynamic_plugins.DynamicPlugin": {
  "data": {
   "shadows": "superset.models.dynamic_plugins.DynamicPlugin"
  },
  "type": "import"
 },
 "superset.views.dynamic_plugins.DynamicPluginsView": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "flask_appbuilder.ModelView",
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP",
    "superset.models.dynamic_plugins.DynamicPlugin"
   ]
  },
  "type": "class"
 },
 "superset.views.dynamic_plugins.MODEL_API_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_API_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.views.dynamic_plugins.ModelView": {
  "data": {
   "shadows": "flask_appbuilder.ModelView"
  },
  "type": "import"
 },
 "superset.views.dynamic_plugins.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.views.dynamic_plugins._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.filters": {
  "data": {},
  "type": "module"
 },
 "superset.views.filters.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.views.filters.BaseFilter": {
  "data": {
   "shadows": "flask_appbuilder.models.filters.BaseFilter"
  },
  "type": "import"
 },
 "superset.views.filters.FilterRelatedOwners": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "flask_appbuilder.models.filters.BaseFilter",
    "flask_babel.lazy_gettext"
   ]
  },
  "type": "class"
 },
 "superset.views.filters.FilterRelatedOwners.apply": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "sqlalchemy.or_",
    "sqlalchemy.orm.Query",
    "str",
    "superset.security_manager.user_model",
    "typing.Any",
    "typing.Optional",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.views.filters.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.views.filters.Query": {
  "data": {
   "shadows": "sqlalchemy.orm.Query"
  },
  "type": "import"
 },
 "superset.views.filters.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.views.filters.lazy_gettext": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.filters.or_": {
  "data": {
   "shadows": "sqlalchemy.or_"
  },
  "type": "import"
 },
 "superset.views.filters.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.views.health": {
  "data": {},
  "type": "module"
 },
 "superset.views.health.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.health.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.views.health.health": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "superset.app.route",
    "superset.talisman",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.health.healthcheck": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "superset.app.route",
    "superset.talisman",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.health.ping": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "superset.app.route",
    "superset.talisman",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.health.talisman": {
  "data": {
   "shadows": "superset.talisman"
  },
  "type": "import"
 },
 "superset.views.key_value": {
  "data": {},
  "type": "module"
 },
 "superset.views.key_value.BaseSupersetView": {
  "data": {
   "shadows": "superset.views.base.BaseSupersetView"
  },
  "type": "import"
 },
 "superset.views.key_value.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.key_value.KV": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "superset.views.base.BaseSupersetView"
   ]
  },
  "type": "class"
 },
 "superset.views.key_value.KV.get_value": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception",
    "flask.Response",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.core.KeyValue",
    "superset.typing.FlaskResponse",
    "superset.utils.core.error_msg_from_exception",
    "superset.views.base.json_error_response"
   ]
  },
  "type": "function"
 },
 "superset.views.key_value.KV.store": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception",
    "flask.Response",
    "flask.request.form.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "simplejson.dumps",
    "superset.db.session.add",
    "superset.db.session.commit",
    "superset.event_logger.log_this",
    "superset.models.core.KeyValue",
    "superset.typing.FlaskResponse",
    "superset.utils.core.error_msg_from_exception",
    "superset.views.base.json_error_response"
   ]
  },
  "type": "function"
 },
 "superset.views.key_value.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.views.key_value.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.key_value.event_logger": {
  "data": {
   "shadows": "superset.event_logger"
  },
  "type": "import"
 },
 "superset.views.key_value.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.views.key_value.has_access_api": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access_api"
  },
  "type": "import"
 },
 "superset.views.key_value.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.views.key_value.json_error_response": {
  "data": {
   "shadows": "superset.views.base.json_error_response"
  },
  "type": "import"
 },
 "superset.views.key_value.models": {
  "data": {
   "shadows": "superset.models.core"
  },
  "type": "import"
 },
 "superset.views.key_value.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.views.key_value.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.views.log": {
  "data": {},
  "type": "module"
 },
 "superset.views.log.LogMixin": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext"
   ]
  },
  "type": "class"
 },
 "superset.views.log._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.log.api": {
  "data": {},
  "type": "module"
 },
 "superset.views.log.api.BaseSupersetModelRestApi": {
  "data": {
   "shadows": "superset.views.base_api.BaseSupersetModelRestApi"
  },
  "type": "import"
 },
 "superset.views.log.api.LogRestApi": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.models.core.Log",
    "superset.views.base_api.BaseSupersetModelRestApi"
   ]
  },
  "type": "class"
 },
 "superset.views.log.api.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.views.log.api.models": {
  "data": {
   "shadows": "superset.models.core"
  },
  "type": "import"
 },
 "superset.views.log.views": {
  "data": {},
  "type": "module"
 },
 "superset.views.log.views.LogModelView": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.LIST",
    "superset.constants.RouteMethod.SHOW",
    "superset.models.core.Log",
    "superset.views.base.SupersetModelView"
   ]
  },
  "type": "class"
 },
 "superset.views.log.views.MODEL_VIEW_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.views.log.views.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.views.log.views.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.views.log.views.SupersetModelView": {
  "data": {
   "shadows": "superset.views.base.SupersetModelView"
  },
  "type": "import"
 },
 "superset.views.log.views.models": {
  "data": {
   "shadows": "superset.models.core"
  },
  "type": "import"
 },
 "superset.views.log_api": {
  "data": {
   "shadows": "api"
  },
  "type": "import"
 },
 "superset.views.redirects": {
  "data": {},
  "type": "module"
 },
 "superset.views.redirects.BaseSupersetView": {
  "data": {
   "shadows": "superset.views.base.BaseSupersetView"
  },
  "type": "import"
 },
 "superset.views.redirects.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.redirects.R": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "superset.views.base.BaseSupersetView"
   ]
  },
  "type": "class"
 },
 "superset.views.redirects.R.index": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "flask.flash",
    "flask_appbuilder.expose",
    "int",
    "superset.db.session.query",
    "superset.event_logger.log_this",
    "superset.models.core.Url",
    "superset.typing.FlaskResponse",
    "werkzeug.utils.redirect"
   ]
  },
  "type": "function"
 },
 "superset.views.redirects.R.shortner": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "flask.Response",
    "flask.request",
    "flask.request.form.get",
    "flask.request.scheme",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "superset.db.session.add",
    "superset.db.session.commit",
    "superset.event_logger.log_this",
    "superset.models.core.Url",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.redirects.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.views.redirects.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.redirects.event_logger": {
  "data": {
   "shadows": "superset.event_logger"
  },
  "type": "import"
 },
 "superset.views.redirects.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.views.redirects.flash": {
  "data": {
   "shadows": "flask.flash"
  },
  "type": "import"
 },
 "superset.views.redirects.has_access_api": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access_api"
  },
  "type": "import"
 },
 "superset.views.redirects.models": {
  "data": {
   "shadows": "superset.models.core"
  },
  "type": "import"
 },
 "superset.views.redirects.redirect": {
  "data": {
   "shadows": "werkzeug.utils.redirect"
  },
  "type": "import"
 },
 "superset.views.redirects.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.views.schedules": {
  "data": {},
  "type": "module"
 },
 "superset.views.schedules.BooleanField": {
  "data": {
   "shadows": "wtforms.BooleanField"
  },
  "type": "import"
 },
 "superset.views.schedules.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.views.schedules.DashboardEmailSchedule": {
  "data": {
   "shadows": "superset.models.schedules.DashboardEmailSchedule"
  },
  "type": "import"
 },
 "superset.views.schedules.DashboardEmailScheduleView": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.models.dashboard.Dashboard",
    "superset.models.schedules.DashboardEmailSchedule",
    "superset.models.schedules.ScheduleType.dashboard",
    "superset.views.schedules.EmailScheduleView"
   ]
  },
  "type": "class"
 },
 "superset.views.schedules.DashboardEmailScheduleView.pre_add": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "super",
    "superset.exceptions.SupersetException",
    "superset.views.schedules.DashboardEmailScheduleView"
   ]
  },
  "type": "function"
 },
 "superset.views.schedules.EmailScheduleView": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "superset.constants.RouteMethod.CRUD_SET",
    "wtforms.BooleanField",
    "wtforms.StringField"
   ]
  },
  "type": "class"
 },
 "superset.views.schedules.EmailScheduleView.fetch_schedules": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "getattr",
    "int",
    "isinstance",
    "simplejson.dumps",
    "superset.db.session.query",
    "superset.security_manager.user_model",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_iso_dttm_ser",
    "superset.views.core.json_success",
    "superset.views.schedules.enum"
   ]
  },
  "type": "function"
 },
 "superset.views.schedules.EmailScheduleView.post_add": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "dict",
    "flask.flash",
    "superset.tasks.schedules.schedule_email_report.apply_async"
   ]
  },
  "type": "function"
 },
 "superset.views.schedules.EmailScheduleView.post_update": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "superset.views.schedules.EmailScheduleView.pre_add": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "Exception",
    "croniter.croniter.is_valid",
    "flask.g.user",
    "superset.exceptions.SupersetException",
    "superset.utils.core.get_email_address_list"
   ]
  },
  "type": "function"
 },
 "superset.views.schedules.EmailScheduleView.pre_update": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "superset.views.schedules.EmailScheduleView.process_form": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "bool",
    "wtforms.Form"
   ]
  },
  "type": "function"
 },
 "superset.views.schedules.EmailScheduleView.schedule_type": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.views.schedules.EmailScheduleView.schedule_type_model": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "NotImplementedError",
    "property",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.views.schedules.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.schedules.Form": {
  "data": {
   "shadows": "wtforms.Form"
  },
  "type": "import"
 },
 "superset.views.schedules.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.views.schedules.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.views.schedules.ScheduleType": {
  "data": {
   "shadows": "superset.models.schedules.ScheduleType"
  },
  "type": "import"
 },
 "superset.views.schedules.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.views.schedules.SliceEmailSchedule": {
  "data": {
   "shadows": "superset.models.schedules.SliceEmailSchedule"
  },
  "type": "import"
 },
 "superset.views.schedules.SliceEmailScheduleView": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.models.schedules.ScheduleType.slice",
    "superset.models.schedules.SliceEmailSchedule",
    "superset.models.slice.Slice",
    "superset.views.schedules.EmailScheduleView"
   ]
  },
  "type": "class"
 },
 "superset.views.schedules.SliceEmailScheduleView.pre_add": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "super",
    "superset.exceptions.SupersetException",
    "superset.views.schedules.SliceEmailScheduleView"
   ]
  },
  "type": "function"
 },
 "superset.views.schedules.StringField": {
  "data": {
   "shadows": "wtforms.StringField"
  },
  "type": "import"
 },
 "superset.views.schedules.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.views.schedules.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.views.schedules.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.views.schedules._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.schedules.croniter": {
  "data": {
   "shadows": "croniter.croniter"
  },
  "type": "import"
 },
 "superset.views.schedules.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.schedules.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "superset.views.schedules.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.views.schedules.flash": {
  "data": {
   "shadows": "flask.flash"
  },
  "type": "import"
 },
 "superset.views.schedules.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.views.schedules.get_email_address_list": {
  "data": {
   "shadows": "superset.utils.core.get_email_address_list"
  },
  "type": "import"
 },
 "superset.views.schedules.has_access": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access"
  },
  "type": "import"
 },
 "superset.views.schedules.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.views.schedules.json_iso_dttm_ser": {
  "data": {
   "shadows": "superset.utils.core.json_iso_dttm_ser"
  },
  "type": "import"
 },
 "superset.views.schedules.json_success": {
  "data": {
   "shadows": "superset.views.core.json_success"
  },
  "type": "import"
 },
 "superset.views.schedules.schedule_email_report": {
  "data": {
   "shadows": "superset.tasks.schedules.schedule_email_report"
  },
  "type": "import"
 },
 "superset.views.schedules.security_manager": {
  "data": {
   "shadows": "superset.security_manager"
  },
  "type": "import"
 },
 "superset.views.sql_lab": {
  "data": {},
  "type": "module"
 },
 "superset.views.sql_lab.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.sql_lab.MODEL_VIEW_RW_METHOD_PERMISSION_MAP": {
  "data": {
   "shadows": "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP"
  },
  "type": "import"
 },
 "superset.views.sql_lab.Query": {
  "data": {
   "shadows": "superset.models.sql_lab.Query"
  },
  "type": "import"
 },
 "superset.views.sql_lab.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.views.sql_lab.RouteMethod": {
  "data": {
   "shadows": "superset.constants.RouteMethod"
  },
  "type": "import"
 },
 "superset.views.sql_lab.SQLAInterface": {
  "data": {
   "shadows": "flask_appbuilder.models.sqla.interface.SQLAInterface"
  },
  "type": "import"
 },
 "superset.views.sql_lab.SavedQuery": {
  "data": {
   "shadows": "superset.models.sql_lab.SavedQuery"
  },
  "type": "import"
 },
 "superset.views.sql_lab.SavedQueryView": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "flask_appbuilder.models.sqla.interface.SQLAInterface",
    "flask_babel.lazy_gettext",
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.CRUD_SET",
    "superset.models.sql_lab.SavedQuery"
   ]
  },
  "type": "class"
 },
 "superset.views.sql_lab.SavedQueryView.list": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "super",
    "superset.is_feature_enabled",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab.SavedQueryView.pre_add": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "flask.g.user"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab.SavedQueryView.pre_update": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "superset.views.sql_lab.SavedQueryViewApi": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "superset.constants.MODEL_VIEW_RW_METHOD_PERMISSION_MAP",
    "superset.constants.RouteMethod.API_CREATE",
    "superset.constants.RouteMethod.API_GET",
    "superset.constants.RouteMethod.API_READ",
    "superset.constants.RouteMethod.API_UPDATE",
    "superset.views.sql_lab.SavedQueryView"
   ]
  },
  "type": "class"
 },
 "superset.views.sql_lab.SavedQueryViewApi.show": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "super",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab.SqlLab": {
  "data": {
   "lineno": 292
  },
  "type": "class"
 },
 "superset.views.sql_lab.SqlLab.my_queries": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "flask.g.user.id",
    "flask.redirect",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab.TabState": {
  "data": {
   "shadows": "superset.models.sql_lab.TabState"
  },
  "type": "import"
 },
 "superset.views.sql_lab.TabStateView": {
  "data": {
   "lineno": 131
  },
  "type": "class"
 },
 "superset.views.sql_lab.TabStateView.activate": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user.get_id",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "json_success",
    "simplejson.dumps",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.models.sql_lab.TabState",
    "superset.models.sql_lab.TabState.id",
    "superset.typing.FlaskResponse",
    "superset.views.sql_lab._get_owner_id"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab.TabStateView.delete": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user.get_id",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "json_success",
    "simplejson.dumps",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.models.sql_lab.TabState",
    "superset.models.sql_lab.TabState.id",
    "superset.models.sql_lab.TableSchema",
    "superset.models.sql_lab.TableSchema.tab_state_id",
    "superset.typing.FlaskResponse",
    "superset.views.sql_lab._get_owner_id"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab.TabStateView.delete_query": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "flask.g.user.get_id",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "json_success",
    "simplejson.dumps",
    "str",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.models.sql_lab.Query",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab.TabStateView.get": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user.get_id",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "json_success",
    "simplejson.dumps",
    "superset.db.session.query",
    "superset.models.sql_lab.TabState",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_iso_dttm_ser",
    "superset.views.sql_lab._get_owner_id"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab.TabStateView.migrate_query": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user.get_id",
    "flask.request.form",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "json_success",
    "simplejson.dumps",
    "simplejson.loads",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.models.sql_lab.Query",
    "superset.typing.FlaskResponse",
    "superset.views.sql_lab._get_owner_id"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab.TabStateView.post": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "flask.g.user.get_id",
    "flask.request.form",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "json_success",
    "simplejson.dumps",
    "simplejson.loads",
    "superset.db.session.add",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.models.sql_lab.TabState",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab.TabStateView.put": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "flask.Response",
    "flask.g.user.get_id",
    "flask.request.form.to_dict",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "json_success",
    "simplejson.dumps",
    "simplejson.loads",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.models.sql_lab.TabState",
    "superset.typing.FlaskResponse",
    "superset.views.sql_lab._get_owner_id"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab.TableSchema": {
  "data": {
   "shadows": "superset.models.sql_lab.TableSchema"
  },
  "type": "import"
 },
 "superset.views.sql_lab.TableSchemaView": {
  "data": {
   "lineno": 239
  },
  "type": "class"
 },
 "superset.views.sql_lab.TableSchemaView.delete": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "json_success",
    "simplejson.dumps",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.models.sql_lab.TableSchema",
    "superset.models.sql_lab.TableSchema.id",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab.TableSchemaView.expanded": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "flask.request.form",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "json_success",
    "simplejson.dumps",
    "simplejson.loads",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.models.sql_lab.TableSchema",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab.TableSchemaView.post": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "flask.request.form",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "json_success",
    "simplejson.dumps",
    "simplejson.loads",
    "superset.db.session.add",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.models.sql_lab.TableSchema",
    "superset.models.sql_lab.TableSchema.database_id",
    "superset.models.sql_lab.TableSchema.schema",
    "superset.models.sql_lab.TableSchema.tab_state_id",
    "superset.models.sql_lab.TableSchema.table",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.views.sql_lab._get_owner_id": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "int",
    "superset.db.session.query",
    "superset.models.sql_lab.TabState.user_id"
   ]
  },
  "type": "function"
 },
 "superset.views.sql_lab.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.sql_lab.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.views.sql_lab.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.views.sql_lab.has_access": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access"
  },
  "type": "import"
 },
 "superset.views.sql_lab.has_access_api": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access_api"
  },
  "type": "import"
 },
 "superset.views.sql_lab.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.views.sql_lab.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.views.sql_lab.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "superset.views.sql_lab.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.views.sql_lab.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.views.tags": {
  "data": {},
  "type": "module"
 },
 "superset.views.tags.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.views.tags.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.views.tags.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.views.tags.ExtraCache": {
  "data": {
   "shadows": "superset.jinja_context.ExtraCache"
  },
  "type": "import"
 },
 "superset.views.tags.FlaskResponse": {
  "data": {
   "shadows": "superset.typing.FlaskResponse"
  },
  "type": "import"
 },
 "superset.views.tags.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.views.tags.ObjectTypes": {
  "data": {
   "shadows": "superset.models.tags.ObjectTypes"
  },
  "type": "import"
 },
 "superset.views.tags.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "superset.views.tags.SandboxedEnvironment": {
  "data": {
   "shadows": "jinja2.sandbox.SandboxedEnvironment"
  },
  "type": "import"
 },
 "superset.views.tags.SavedQuery": {
  "data": {
   "shadows": "superset.models.sql_lab.SavedQuery"
  },
  "type": "import"
 },
 "superset.views.tags.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.views.tags.Tag": {
  "data": {
   "shadows": "superset.models.tags.Tag"
  },
  "type": "import"
 },
 "superset.views.tags.TagTypes": {
  "data": {
   "shadows": "superset.models.tags.TagTypes"
  },
  "type": "import"
 },
 "superset.views.tags.TagView": {
  "data": {
   "lineno": 49
  },
  "type": "class"
 },
 "superset.views.tags.TagView.delete": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "flask.Response",
    "flask.request.get_json",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "sqlalchemy.and_",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.models.tags.ObjectTypes",
    "superset.models.tags.Tag.name.in_",
    "superset.models.tags.TaggedObject",
    "superset.models.tags.TaggedObject.object_id",
    "superset.models.tags.TaggedObject.object_type",
    "superset.models.tags.TaggedObject.tag.has",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.tags.TagView.get": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "json_success",
    "simplejson.dumps",
    "sqlalchemy.and_",
    "superset.db.session.query",
    "superset.models.tags.ObjectTypes",
    "superset.models.tags.TaggedObject",
    "superset.models.tags.TaggedObject.object_id",
    "superset.models.tags.TaggedObject.object_type",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.tags.TagView.post": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "flask.Response",
    "flask.request.get_json",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "int",
    "superset.db.session.add_all",
    "superset.db.session.commit",
    "superset.db.session.query",
    "superset.models.tags.ObjectTypes",
    "superset.models.tags.Tag",
    "superset.models.tags.TagTypes",
    "superset.models.tags.TagTypes.custom",
    "superset.models.tags.TaggedObject",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.tags.TagView.suggestions": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "id",
    "json_success",
    "simplejson.dumps",
    "sqlalchemy.func.count",
    "superset.db.session.query",
    "superset.models.tags.Tag",
    "superset.models.tags.Tag.name",
    "superset.models.tags.TaggedObject",
    "superset.models.tags.TaggedObject.tag_id",
    "superset.typing.FlaskResponse"
   ]
  },
  "type": "function"
 },
 "superset.views.tags.TagView.tagged_objects": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "flask.request.args.get",
    "flask_appbuilder.expose",
    "flask_appbuilder.security.decorators.has_access_api",
    "json_success",
    "simplejson.dumps",
    "sqlalchemy.and_",
    "str",
    "superset.db.session.query",
    "superset.models.dashboard.Dashboard",
    "superset.models.dashboard.Dashboard.id",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.id",
    "superset.models.sql_lab.SavedQuery",
    "superset.models.sql_lab.SavedQuery.id",
    "superset.models.tags.ObjectTypes.chart",
    "superset.models.tags.ObjectTypes.chart.name",
    "superset.models.tags.ObjectTypes.dashboard",
    "superset.models.tags.ObjectTypes.dashboard.name",
    "superset.models.tags.ObjectTypes.query",
    "superset.models.tags.ObjectTypes.query.name",
    "superset.models.tags.Tag",
    "superset.models.tags.Tag.id",
    "superset.models.tags.Tag.name.in_",
    "superset.models.tags.TaggedObject",
    "superset.models.tags.TaggedObject.object_id",
    "superset.models.tags.TaggedObject.object_type",
    "superset.models.tags.TaggedObject.tag_id",
    "superset.typing.FlaskResponse",
    "superset.utils.core.json_int_dttm_ser",
    "superset.views.tags.process_template",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.views.tags.TaggedObject": {
  "data": {
   "shadows": "superset.models.tags.TaggedObject"
  },
  "type": "import"
 },
 "superset.views.tags.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "superset.views.tags.and_": {
  "data": {
   "shadows": "sqlalchemy.and_"
  },
  "type": "import"
 },
 "superset.views.tags.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.tags.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "superset.views.tags.expose": {
  "data": {
   "shadows": "flask_appbuilder.expose"
  },
  "type": "import"
 },
 "superset.views.tags.func": {
  "data": {
   "shadows": "sqlalchemy.func"
  },
  "type": "import"
 },
 "superset.views.tags.has_access_api": {
  "data": {
   "shadows": "flask_appbuilder.security.decorators.has_access_api"
  },
  "type": "import"
 },
 "superset.views.tags.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.views.tags.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "superset.views.tags.process_template": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "jinja2.sandbox.SandboxedEnvironment",
    "str",
    "superset.jinja_context.ExtraCache.current_user_id",
    "superset.jinja_context.ExtraCache.current_username"
   ]
  },
  "type": "function"
 },
 "superset.views.tags.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.views.tags.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "superset.views.tags.utils": {
  "data": {
   "shadows": "superset.utils"
  },
  "type": "import"
 },
 "superset.views.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "superset.app.config",
    "superset.is_feature_enabled",
    "superset.views.utils.logging",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "superset.views.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.views.utils.BaseViz": {
  "data": {
   "shadows": "superset.viz.BaseViz"
  },
  "type": "import"
 },
 "superset.views.utils.CONTAINER_TYPES": {
  "data": {
   "lineno": 320
  },
  "type": "constant"
 },
 "superset.views.utils.CacheLoadError": {
  "data": {
   "shadows": "superset.exceptions.CacheLoadError"
  },
  "type": "import"
 },
 "superset.views.utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.views.utils.ConnectorRegistry": {
  "data": {
   "shadows": "superset.connectors.connector_registry.ConnectorRegistry"
  },
  "type": "import"
 },
 "superset.views.utils.Dashboard": {
  "data": {
   "shadows": "superset.models.dashboard.Dashboard"
  },
  "type": "import"
 },
 "superset.views.utils.Database": {
  "data": {
   "shadows": "superset.models.core.Database"
  },
  "type": "import"
 },
 "superset.views.utils.DefaultDict": {
  "data": {
   "shadows": "typing.DefaultDict"
  },
  "type": "import"
 },
 "superset.views.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.views.utils.ErrorLevel": {
  "data": {
   "shadows": "superset.errors.ErrorLevel"
  },
  "type": "import"
 },
 "superset.views.utils.FormData": {
  "data": {
   "shadows": "superset.typing.FormData"
  },
  "type": "import"
 },
 "superset.views.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.views.utils.NoResultFound": {
  "data": {
   "shadows": "sqlalchemy.orm.exc.NoResultFound"
  },
  "type": "import"
 },
 "superset.views.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.views.utils.Query": {
  "data": {
   "shadows": "superset.models.sql_lab.Query"
  },
  "type": "import"
 },
 "superset.views.utils.QueryStatus": {
  "data": {
   "shadows": "superset.utils.core.QueryStatus"
  },
  "type": "import"
 },
 "superset.views.utils.REJECTED_FORM_DATA_KEYS": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "superset.views.utils.SerializationError": {
  "data": {
   "shadows": "superset.exceptions.SerializationError"
  },
  "type": "import"
 },
 "superset.views.utils.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.views.utils.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.views.utils.SupersetError": {
  "data": {
   "shadows": "superset.errors.SupersetError"
  },
  "type": "import"
 },
 "superset.views.utils.SupersetErrorType": {
  "data": {
   "shadows": "superset.errors.SupersetErrorType"
  },
  "type": "import"
 },
 "superset.views.utils.SupersetException": {
  "data": {
   "shadows": "superset.exceptions.SupersetException"
  },
  "type": "import"
 },
 "superset.views.utils.SupersetSecurityException": {
  "data": {
   "shadows": "superset.exceptions.SupersetSecurityException"
  },
  "type": "import"
 },
 "superset.views.utils.TimeRangeEndpoint": {
  "data": {
   "shadows": "superset.utils.core.TimeRangeEndpoint"
  },
  "type": "import"
 },
 "superset.views.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.views.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.views.utils.User": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models.User"
  },
  "type": "import"
 },
 "superset.views.utils._": {
  "data": {
   "shadows": "flask_babel._"
  },
  "type": "import"
 },
 "superset.views.utils._deserialize_results_payload": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "bool",
    "bytes",
    "pyarrow.ArrowSerializationError",
    "pyarrow.deserialize",
    "simplejson.loads",
    "str",
    "superset.dataframe.df_to_records",
    "superset.exceptions.SerializationError",
    "superset.models.sql_lab.Query",
    "superset.result_set.SupersetResultSet.convert_table_to_df",
    "superset.utils.decorators.stats_timing",
    "superset.views.utils.logger",
    "superset.views.utils.msgpack",
    "superset.views.utils.stats_logger",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.ab_models": {
  "data": {
   "shadows": "flask_appbuilder.security.sqla.models"
  },
  "type": "import"
 },
 "superset.views.utils.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.views.utils.apply_display_max_row_limit": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "int",
    "str",
    "superset.app.config",
    "superset.utils.core.QueryStatus.SUCCESS",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.bootstrap_user_data": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.security.sqla.models.User",
    "get_permissions",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.build_extra_filters": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "int",
    "is_slice_in_container",
    "isinstance",
    "list",
    "simplejson.loads",
    "str",
    "superset.db.session.query",
    "superset.models.slice.Slice",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.cache_manager": {
  "data": {
   "shadows": "superset.extensions.cache_manager"
  },
  "type": "import"
 },
 "superset.views.utils.check_datasource_perms": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "flask_babel._",
    "int",
    "sqlalchemy.orm.exc.NoResultFound",
    "str",
    "superset.errors.ErrorLevel.ERROR",
    "superset.errors.SupersetError",
    "superset.errors.SupersetErrorType.FAILED_FETCHING_DATASOURCE_INFO_ERROR",
    "superset.errors.SupersetErrorType.UNKNOWN_DATASOURCE_TYPE_ERROR",
    "superset.exceptions.SupersetException",
    "superset.exceptions.SupersetSecurityException",
    "superset.views.utils.get_datasource_info",
    "superset.views.utils.get_form_data",
    "superset.views.utils.get_viz",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.check_explore_cache_perms": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "check_datasource_perms",
    "str",
    "superset.exceptions.CacheLoadError",
    "superset.extensions.cache_manager.cache.get",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.check_resource_permissions": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.check_resource_permissions.decorator": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "typing.Any",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.check_resource_permissions.decorator.wrapper": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "check_perms",
    "f",
    "functools.wraps",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.check_slice_perms": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "int",
    "sqlalchemy.orm.exc.NoResultFound",
    "superset.errors.ErrorLevel.ERROR",
    "superset.errors.SupersetError",
    "superset.errors.SupersetErrorType.UNKNOWN_DATASOURCE_TYPE_ERROR",
    "superset.exceptions.SupersetSecurityException",
    "superset.views.utils.get_form_data",
    "superset.views.utils.get_viz",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.dataframe": {
  "data": {
   "shadows": "superset.dataframe"
  },
  "type": "import"
 },
 "superset.views.utils.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "superset.views.utils.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.views.utils.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "superset.views.utils.g": {
  "data": {
   "shadows": "flask.g"
  },
  "type": "import"
 },
 "superset.views.utils.get_cta_schema_name": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "flask_appbuilder.security.sqla.models.User",
    "func",
    "str",
    "superset.app.config",
    "superset.models.core.Database",
    "typing.Callable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.get_dashboard_extra_filters": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "any",
    "build_extra_filters",
    "dict",
    "int",
    "isinstance",
    "simplejson.JSONDecodeError",
    "simplejson.loads",
    "str",
    "superset.db.session",
    "superset.models.dashboard.Dashboard",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.get_datasource_info": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "flask_babel._",
    "int",
    "str",
    "superset.exceptions.SupersetException",
    "superset.typing.FormData",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.get_form_data": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "all",
    "bool",
    "flask.g",
    "flask.request.args.get",
    "flask.request.form.get",
    "flask.request.is_json",
    "flask.request.json",
    "get_time_range_endpoints",
    "getattr",
    "hasattr",
    "int",
    "str",
    "superset.app.config",
    "superset.db.session.query",
    "superset.legacy.update_time_range",
    "superset.models.core.Url",
    "superset.models.slice.Slice",
    "superset.views.utils.REJECTED_FORM_DATA_KEYS",
    "superset.views.utils.loads_request_json",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple",
    "urllib.parse.unquote_plus"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.get_permissions": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "AttributeError",
    "collections.defaultdict",
    "flask_appbuilder.security.sqla.models.User",
    "set",
    "str",
    "typing.DefaultDict",
    "typing.Dict",
    "typing.List",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.get_time_range_endpoints": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "datetime.date.today",
    "flask_babel._",
    "int",
    "superset.app.config",
    "superset.db.session.query",
    "superset.exceptions.SupersetException",
    "superset.models.slice.Slice",
    "superset.typing.FormData",
    "superset.utils.core.TimeRangeEndpoint",
    "superset.utils.core.TimeRangeEndpoint.EXCLUSIVE",
    "superset.utils.core.TimeRangeEndpoint.INCLUSIVE",
    "superset.views.utils.get_datasource_info",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.get_viz": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "superset.connectors.connector_registry.ConnectorRegistry.get_datasource",
    "superset.db.session",
    "superset.typing.FormData",
    "superset.viz.BaseViz",
    "superset.viz.viz_types"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.views.utils.is_owner": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "bool",
    "flask_appbuilder.security.sqla.models.User",
    "superset.models.dashboard.Dashboard",
    "superset.models.slice.Slice",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.is_slice_in_container": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "any",
    "bool",
    "int",
    "str",
    "superset.views.utils.CONTAINER_TYPES",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.views.utils.loads_request_json": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "TypeError",
    "simplejson.JSONDecodeError",
    "simplejson.loads",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.views.utils.logger": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "superset.views.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.views.utils.models": {
  "data": {
   "shadows": "superset.models.core"
  },
  "type": "import"
 },
 "superset.views.utils.msgpack": {
  "data": {
   "shadows": "msgpack"
  },
  "type": "import"
 },
 "superset.views.utils.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "superset.views.utils.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "superset.views.utils.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.views.utils.result_set": {
  "data": {
   "shadows": "superset.result_set"
  },
  "type": "import"
 },
 "superset.views.utils.stats_logger": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "superset.views.utils.stats_timing": {
  "data": {
   "shadows": "superset.utils.decorators.stats_timing"
  },
  "type": "import"
 },
 "superset.views.utils.update_time_range": {
  "data": {
   "shadows": "superset.legacy.update_time_range"
  },
  "type": "import"
 },
 "superset.views.utils.viz": {
  "data": {
   "shadows": "superset.viz"
  },
  "type": "import"
 },
 "superset.views.utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "superset.viz": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "superset.app.config",
    "superset.viz.BaseViz",
    "superset.viz.config",
    "superset.viz.get_subclasses",
    "superset.viz.logging",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.viz.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.viz.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.viz.BaseDeckGLViz": {
  "data": {
   "lineno": 2304,
   "symbols_in_volume": [
    "credits",
    "str",
    "superset.viz.BaseViz",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "superset.viz.BaseDeckGLViz.add_null_filters": {
  "data": {
   "lineno": 2383,
   "symbols_in_volume": [
    "set",
    "sorted",
    "superset.utils.core.to_adhoc"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseDeckGLViz.get_data": {
  "data": {
   "lineno": 2435,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData",
    "superset.viz.config"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseDeckGLViz.get_js_columns": {
  "data": {
   "lineno": 2431,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseDeckGLViz.get_metrics": {
  "data": {
   "lineno": 2312,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseDeckGLViz.get_properties": {
  "data": {
   "lineno": 2457,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseDeckGLViz.get_spatial_columns": {
  "data": {
   "lineno": 2319,
   "symbols_in_volume": [
    "ValueError",
    "flask_babel.lazy_gettext",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseDeckGLViz.parse_coordinates": {
  "data": {
   "lineno": 2332,
   "symbols_in_volume": [
    "Exception",
    "flask_babel.lazy_gettext",
    "float",
    "geopy.point.Point",
    "staticmethod",
    "superset.exceptions.SpatialException",
    "typing.Any",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseDeckGLViz.process_spatial_data_obj": {
  "data": {
   "lineno": 2351,
   "symbols_in_volume": [
    "ValueError",
    "flask_babel.lazy_gettext",
    "list",
    "pandas.DataFrame",
    "pandas.to_numeric",
    "str",
    "superset.exceptions.NullValueException",
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseDeckGLViz.process_spatial_query_obj": {
  "data": {
   "lineno": 2316,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseDeckGLViz.query_obj": {
  "data": {
   "lineno": 2401,
   "symbols_in_volume": [
    "list",
    "set",
    "str",
    "super",
    "superset.typing.QueryObjectDict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseDeckGLViz.reverse_geohash_decode": {
  "data": {
   "lineno": 2342,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "superset.viz.geohash",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseDeckGLViz.reverse_latlong": {
  "data": {
   "lineno": 2347,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.DataFrame",
    "reversed",
    "staticmethod",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "credits",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.viz.BaseViz.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime",
    "datetime.timedelta",
    "flask.request",
    "flask_babel.lazy_gettext",
    "pandas.DataFrame",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.models.helpers.QueryResult",
    "superset.utils.core.get_form_data_token",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.apply_rolling": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "dict",
    "flask_babel.lazy_gettext",
    "int",
    "pandas.DataFrame",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.cache_key": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "str",
    "superset.extensions.security_manager.get_rls_ids",
    "superset.is_feature_enabled",
    "superset.typing.QueryObjectDict",
    "superset.utils.hashing.md5_sha_from_str",
    "superset.viz.copy",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.cache_timeout": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "property",
    "superset.viz.config"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.data": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.df_metrics_to_num": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "numpy.object_",
    "pandas.DataFrame",
    "pandas.to_numeric"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.force_cached": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.get_csv": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "isinstance",
    "pandas.RangeIndex",
    "str",
    "superset.viz.config",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.get_data": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.get_df": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "datetime.timedelta",
    "int",
    "numpy.inf",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "superset.typing.QueryObjectDict",
    "superset.utils.core.DTTM_ALIAS",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.get_df_payload": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "Exception",
    "flask_babel.lazy_gettext",
    "len",
    "str",
    "superset.errors.ErrorLevel.ERROR",
    "superset.errors.SupersetError",
    "superset.errors.SupersetErrorType.VIZ_GET_DF_ERROR",
    "superset.exceptions.CacheLoadError",
    "superset.exceptions.QueryObjectValidationError",
    "superset.extensions.cache_manager.data_cache",
    "superset.extensions.cache_manager.data_cache.get",
    "superset.typing.QueryObjectDict",
    "superset.utils.cache.set_and_log_cache",
    "superset.utils.core.QueryStatus.FAILED",
    "superset.utils.core.QueryStatus.SUCCESS",
    "superset.utils.core.error_msg_from_exception",
    "superset.utils.core.get_column_names_from_metrics",
    "superset.utils.core.get_stacktrace",
    "superset.viz.dataclasses",
    "superset.viz.logger",
    "superset.viz.stats_logger",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.get_json": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "simplejson.dumps",
    "str",
    "superset.utils.core.json_int_dttm_ser"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.get_payload": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "set",
    "superset.typing.QueryObjectDict",
    "superset.typing.VizPayload",
    "superset.utils.core.QueryStatus.FAILED",
    "superset.utils.core.get_time_filter_status",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.get_samples": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "str",
    "superset.viz.config",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.handle_js_int_overflow": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "abs",
    "int",
    "isinstance",
    "list",
    "staticmethod",
    "str",
    "superset.utils.core.JS_MAX_INTEGER",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.has_error": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "bool",
    "superset.typing.VizPayload",
    "superset.utils.core.QueryStatus.FAILED"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.json_data": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "property",
    "simplejson.dumps",
    "str"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.json_dumps": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "bool",
    "simplejson.dumps",
    "str",
    "superset.utils.core.json_int_dttm_ser",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.payload_json_and_has_error": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "bool",
    "str",
    "superset.typing.VizPayload",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.process_metrics": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "list",
    "superset.utils.core.get_metric_name",
    "superset.viz.METRIC_KEYS"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.process_query_filters": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "superset.utils.core.convert_legacy_filters_into_adhoc",
    "superset.utils.core.merge_extra_filters",
    "superset.utils.core.split_adhoc_filters_into_base_filters"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.query_obj": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict.fromkeys",
    "flask_babel.lazy_gettext",
    "int",
    "list",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.QueryObjectDict",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.date_parser.get_since_until",
    "superset.utils.date_parser.parse_past_timedelta",
    "superset.viz.config",
    "superset.viz.relative_end",
    "superset.viz.relative_start"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.raise_for_access": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "superset.extensions.security_manager.raise_for_access"
   ]
  },
  "type": "function"
 },
 "superset.viz.BaseViz.run_extra_queries": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "superset.viz.BigNumberTotalViz": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.BigNumberTotalViz.query_obj": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.BigNumberViz": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.BigNumberViz.get_data": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "numpy.min",
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS"
   ]
  },
  "type": "function"
 },
 "superset.viz.BigNumberViz.query_obj": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.BubbleViz": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.NVD3Viz"
   ]
  },
  "type": "class"
 },
 "superset.viz.BubbleViz.get_data": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "pandas.DataFrame",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.BubbleViz.query_obj": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "all",
    "dict.fromkeys",
    "flask_babel.lazy_gettext",
    "len",
    "list",
    "set",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.BulletViz": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.NVD3Viz"
   ]
  },
  "type": "class"
 },
 "superset.viz.BulletViz.get_data": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz.BulletViz.query_obj": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.CacheKey": {
  "data": {
   "shadows": "superset.models.cache.CacheKey"
  },
  "type": "import"
 },
 "superset.viz.CacheLoadError": {
  "data": {
   "shadows": "superset.exceptions.CacheLoadError"
  },
  "type": "import"
 },
 "superset.viz.CalHeatmapViz": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.CalHeatmapViz.get_data": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "ValueError",
    "dateutil.relativedelta.relativedelta",
    "hasattr",
    "pandas.DataFrame",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.date_parser.get_since_until",
    "superset.viz.relative_end",
    "superset.viz.relative_start"
   ]
  },
  "type": "function"
 },
 "superset.viz.CalHeatmapViz.query_obj": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "superset.viz.ChartDAO": {
  "data": {
   "shadows": "superset.charts.dao.ChartDAO"
  },
  "type": "import"
 },
 "superset.viz.ChordViz": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.ChordViz.get_data": {
  "data": {
   "lineno": 1886,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "pandas.DataFrame",
    "set",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz.ChordViz.query_obj": {
  "data": {
   "lineno": 1879,
   "symbols_in_volume": [
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.CountryMapViz": {
  "data": {
   "lineno": 1903,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.CountryMapViz.get_data": {
  "data": {
   "lineno": 1918,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz.CountryMapViz.query_obj": {
  "data": {
   "lineno": 1912,
   "symbols_in_volume": [
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DTTM_ALIAS": {
  "data": {
   "shadows": "superset.utils.core.DTTM_ALIAS"
  },
  "type": "import"
 },
 "superset.viz.DeckArc": {
  "data": {
   "lineno": 2681,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.BaseDeckGLViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.DeckArc.get_data": {
  "data": {
   "lineno": 2704,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.viz.config"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckArc.get_properties": {
  "data": {
   "lineno": 2695,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.DTTM_ALIAS",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckArc.query_obj": {
  "data": {
   "lineno": 2690,
   "symbols_in_volume": [
    "bool",
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckGLMultiLayer": {
  "data": {
   "lineno": 2277,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.DeckGLMultiLayer.get_data": {
  "data": {
   "lineno": 2290,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.db.session.query",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.id.in_",
    "superset.typing.VizData",
    "superset.viz.config"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckGLMultiLayer.query_obj": {
  "data": {
   "lineno": 2287,
   "symbols_in_volume": [
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckGeoJson": {
  "data": {
   "lineno": 2662,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.BaseDeckGLViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.DeckGeoJson.get_properties": {
  "data": {
   "lineno": 2676,
   "symbols_in_volume": [
    "simplejson.loads",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckGeoJson.query_obj": {
  "data": {
   "lineno": 2669,
   "symbols_in_volume": [
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckGrid": {
  "data": {
   "lineno": 2536,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.BaseDeckGLViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.DeckGrid.get_data": {
  "data": {
   "lineno": 2550,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckGrid.get_properties": {
  "data": {
   "lineno": 2544,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckHex": {
  "data": {
   "lineno": 2643,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.BaseDeckGLViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.DeckHex.get_data": {
  "data": {
   "lineno": 2657,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name",
    "superset.viz.DeckHex"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckHex.get_properties": {
  "data": {
   "lineno": 2651,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckPathViz": {
  "data": {
   "lineno": 2566,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "simplejson.loads",
    "superset.viz.BaseDeckGLViz",
    "superset.viz.geohash_to_json",
    "superset.viz.polyline"
   ]
  },
  "type": "class"
 },
 "superset.viz.DeckPathViz.get_data": {
  "data": {
   "lineno": 2608,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckPathViz.get_properties": {
  "data": {
   "lineno": 2594,
   "symbols_in_volume": [
    "deser",
    "str",
    "superset.utils.core.DTTM_ALIAS",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckPathViz.query_obj": {
  "data": {
   "lineno": 2580,
   "symbols_in_volume": [
    "bool",
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckPolygon": {
  "data": {
   "lineno": 2613,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.DeckPathViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.DeckPolygon.get_metrics": {
  "data": {
   "lineno": 2626,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckPolygon.get_properties": {
  "data": {
   "lineno": 2632,
   "symbols_in_volume": [
    "str",
    "super",
    "superset.utils.core.get_metric_name",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckPolygon.query_obj": {
  "data": {
   "lineno": 2621,
   "symbols_in_volume": [
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckScatterViz": {
  "data": {
   "lineno": 2461,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.BaseDeckGLViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.DeckScatterViz.get_data": {
  "data": {
   "lineno": 2499,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckScatterViz.get_metrics": {
  "data": {
   "lineno": 2479,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckScatterViz.get_properties": {
  "data": {
   "lineno": 2486,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.DTTM_ALIAS",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckScatterViz.query_obj": {
  "data": {
   "lineno": 2470,
   "symbols_in_volume": [
    "bool",
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckScreengrid": {
  "data": {
   "lineno": 2510,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.BaseDeckGLViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.DeckScreengrid.get_data": {
  "data": {
   "lineno": 2531,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckScreengrid.get_properties": {
  "data": {
   "lineno": 2524,
   "symbols_in_volume": [
    "str",
    "superset.utils.core.DTTM_ALIAS",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DeckScreengrid.query_obj": {
  "data": {
   "lineno": 2519,
   "symbols_in_volume": [
    "bool",
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.viz.DirectedForceViz": {
  "data": {
   "lineno": 1847,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.DirectedForceViz.get_data": {
  "data": {
   "lineno": 1863,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz.DirectedForceViz.query_obj": {
  "data": {
   "lineno": 1856,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "len",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.DistributionBarViz": {
  "data": {
   "lineno": 1666,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.DistributionBarViz.get_data": {
  "data": {
   "lineno": 1690,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pandas.DataFrame",
    "str",
    "superset.constants.NULL_STRING",
    "superset.typing.VizData",
    "tuple"
   ]
  },
  "type": "function"
 },
 "superset.viz.DistributionBarViz.query_obj": {
  "data": {
   "lineno": 1674,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "len",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.ErrorLevel": {
  "data": {
   "shadows": "superset.errors.ErrorLevel"
  },
  "type": "import"
 },
 "superset.viz.EventFlowViz": {
  "data": {
   "lineno": 2716,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.EventFlowViz.get_data": {
  "data": {
   "lineno": 2744,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz.EventFlowViz.query_obj": {
  "data": {
   "lineno": 2725,
   "symbols_in_volume": [
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.FilterBoxViz": {
  "data": {
   "lineno": 1990,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.FilterBoxViz.get_data": {
  "data": {
   "lineno": 2021,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz.FilterBoxViz.query_obj": {
  "data": {
   "lineno": 2001,
   "symbols_in_volume": [
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.FilterBoxViz.run_extra_queries": {
  "data": {
   "lineno": 2004,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz.HeatmapViz": {
  "data": {
   "lineno": 2074,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.HeatmapViz.get_data": {
  "data": {
   "lineno": 2093,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz.HeatmapViz.query_obj": {
  "data": {
   "lineno": 2086,
   "symbols_in_volume": [
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.HistogramViz": {
  "data": {
   "lineno": 1610,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.HistogramViz.get_data": {
  "data": {
   "lineno": 1643,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz.HistogramViz.labelify": {
  "data": {
   "lineno": 1633,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "str",
    "superset.viz.re",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.viz.HistogramViz.query_obj": {
  "data": {
   "lineno": 1618,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "int",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.QueryObjectDict",
    "superset.viz.config"
   ]
  },
  "type": "function"
 },
 "superset.viz.HorizonViz": {
  "data": {
   "lineno": 2127,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.NVD3TimeSeriesViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.JS_MAX_INTEGER": {
  "data": {
   "shadows": "superset.utils.core.JS_MAX_INTEGER"
  },
  "type": "import"
 },
 "superset.viz.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.viz.METRIC_KEYS": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "superset.viz.MapboxViz": {
  "data": {
   "lineno": 2142,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.MapboxViz.get_data": {
  "data": {
   "lineno": 2209,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "round",
    "superset.typing.VizData",
    "superset.viz.config",
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.viz.MapboxViz.query_obj": {
  "data": {
   "lineno": 2151,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "len",
    "list",
    "set",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.MultiLineViz": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.NVD3Viz"
   ]
  },
  "type": "class"
 },
 "superset.viz.MultiLineViz.get_data": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": [
    "max",
    "min",
    "pandas.DataFrame",
    "superset.charts.dao.ChartDAO.find_by_ids",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz.MultiLineViz.query_obj": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.NULL_STRING": {
  "data": {
   "shadows": "superset.constants.NULL_STRING"
  },
  "type": "import"
 },
 "superset.viz.NVD3CompareTimeSeriesViz": {
  "data": {
   "lineno": 1592,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.NVD3TimeSeriesViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.NVD3DualLineViz": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.NVD3Viz"
   ]
  },
  "type": "class"
 },
 "superset.viz.NVD3DualLineViz.get_data": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "pandas.DataFrame",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz.NVD3DualLineViz.query_obj": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.NVD3DualLineViz.to_series": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": [
    "enumerate",
    "pandas.DataFrame",
    "str",
    "superset.utils.core.get_metric_name",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.NVD3TimePivotViz": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.NVD3TimeSeriesViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.NVD3TimePivotViz.get_data": {
  "data": {
   "lineno": 1557,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "pandas.DataFrame",
    "pandas.tseries.frequencies.to_offset",
    "str",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.core.DTTM_ALIAS.max",
    "superset.utils.core.DTTM_ALIAS.rank",
    "superset.utils.core.get_metric_name",
    "type"
   ]
  },
  "type": "function"
 },
 "superset.viz.NVD3TimePivotViz.query_obj": {
  "data": {
   "lineno": 1552,
   "symbols_in_volume": [
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.NVD3TimeSeriesBarViz": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.NVD3TimeSeriesViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.NVD3TimeSeriesStackedViz": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.NVD3TimeSeriesViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.NVD3TimeSeriesViz": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "int",
    "superset.viz.NVD3Viz",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.viz.NVD3TimeSeriesViz.get_data": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "enumerate",
    "pandas.DataFrame",
    "sorted",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.VizData",
    "tuple"
   ]
  },
  "type": "function"
 },
 "superset.viz.NVD3TimeSeriesViz.process_data": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "bool",
    "flask_babel.lazy_gettext",
    "getattr",
    "pandas.DataFrame",
    "sum",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS"
   ]
  },
  "type": "function"
 },
 "superset.viz.NVD3TimeSeriesViz.run_extra_queries": {
  "data": {
   "lineno": 1304,
   "symbols_in_volume": [
    "ValueError",
    "flask_babel.lazy_gettext",
    "isinstance",
    "list",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.date_parser.parse_past_timedelta"
   ]
  },
  "type": "function"
 },
 "superset.viz.NVD3TimeSeriesViz.to_series": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.isnan",
    "pandas.DataFrame",
    "str",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.viz.NVD3Viz": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "credits",
    "str",
    "superset.viz.BaseViz",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.viz.NullValueException": {
  "data": {
   "shadows": "superset.exceptions.NullValueException"
  },
  "type": "import"
 },
 "superset.viz.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.viz.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "superset.viz.PairedTTestViz": {
  "data": {
   "lineno": 2748,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.PairedTTestViz.get_data": {
  "data": {
   "lineno": 2757,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "str",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.ParallelCoordinatesViz": {
  "data": {
   "lineno": 2048,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.ParallelCoordinatesViz.get_data": {
  "data": {
   "lineno": 2070,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz.ParallelCoordinatesViz.query_obj": {
  "data": {
   "lineno": 2064,
   "symbols_in_volume": [
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.PartitionViz": {
  "data": {
   "lineno": 2836,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.NVD3TimeSeriesViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.PartitionViz.get_data": {
  "data": {
   "lineno": 2993,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.DataFrame",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS"
   ]
  },
  "type": "function"
 },
 "superset.viz.PartitionViz.levels_for": {
  "data": {
   "lineno": 2852,
   "symbols_in_volume": [
    "int",
    "len",
    "pandas.DataFrame",
    "pandas.Series",
    "range",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.PartitionViz.levels_for_diff": {
  "data": {
   "lineno": 2868,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Series.div",
    "pandas.Series.sub",
    "range",
    "set",
    "str",
    "superset.utils.core.DTTM_ALIAS",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.PartitionViz.levels_for_time": {
  "data": {
   "lineno": 2904,
   "symbols_in_volume": [
    "int",
    "len",
    "pandas.DataFrame",
    "range",
    "str",
    "superset.typing.VizData",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.PartitionViz.nest_procs": {
  "data": {
   "lineno": 2959,
   "symbols_in_volume": [
    "int",
    "len",
    "pandas.DataFrame",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.viz.PartitionViz.nest_values": {
  "data": {
   "lineno": 2915,
   "symbols_in_volume": [
    "int",
    "len",
    "pandas.DataFrame",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.viz.PartitionViz.query_obj": {
  "data": {
   "lineno": 2845,
   "symbols_in_volume": [
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.PivotTableViz": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.PivotTableViz._format_datetime": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "ValueError",
    "datetime.date",
    "datetime.datetime",
    "isinstance",
    "pandas.Timestamp",
    "staticmethod",
    "str",
    "superset.utils.dates.datetime_to_epoch",
    "typing.Optional",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "superset.viz.PivotTableViz.get_aggfunc": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.api.types.is_numeric_dtype",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.viz.PivotTableViz.get_data": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.DataFrame",
    "str",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.core.get_metric_name",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.viz.PivotTableViz.query_obj": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "set",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.Point": {
  "data": {
   "shadows": "geopy.point.Point"
  },
  "type": "import"
 },
 "superset.viz.QueryMode": {
  "data": {
   "shadows": "superset.utils.core.QueryMode"
  },
  "type": "import"
 },
 "superset.viz.QueryObjectDict": {
  "data": {
   "shadows": "superset.typing.QueryObjectDict"
  },
  "type": "import"
 },
 "superset.viz.QueryObjectValidationError": {
  "data": {
   "shadows": "superset.exceptions.QueryObjectValidationError"
  },
  "type": "import"
 },
 "superset.viz.QueryResult": {
  "data": {
   "shadows": "superset.models.helpers.QueryResult"
  },
  "type": "import"
 },
 "superset.viz.RoseViz": {
  "data": {
   "lineno": 2805,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz.NVD3TimeSeriesViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.RoseViz.get_data": {
  "data": {
   "lineno": 2812,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.DataFrame",
    "str",
    "super",
    "superset.typing.VizData",
    "superset.viz.math",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.SankeyViz": {
  "data": {
   "lineno": 1782,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.SankeyViz.get_data": {
  "data": {
   "lineno": 1802,
   "symbols_in_volume": [
    "collections.defaultdict",
    "find_cycle",
    "flask_babel.lazy_gettext",
    "pandas.DataFrame",
    "set",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.VizData",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.viz.SankeyViz.get_data.find_cycle": {
  "data": {
   "lineno": 1818,
   "symbols_in_volume": [
    "set",
    "str",
    "typing.Dict",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple",
    "visit"
   ]
  },
  "type": "function"
 },
 "superset.viz.SankeyViz.get_data.find_cycle.visit": {
  "data": {
   "lineno": 1822,
   "symbols_in_volume": [
    "str",
    "typing.Optional",
    "typing.Tuple",
    "visit"
   ]
  },
  "type": "function"
 },
 "superset.viz.SankeyViz.query_obj": {
  "data": {
   "lineno": 1791,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "len",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.viz.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.viz.SpatialException": {
  "data": {
   "shadows": "superset.exceptions.SpatialException"
  },
  "type": "import"
 },
 "superset.viz.SunburstViz": {
  "data": {
   "lineno": 1736,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.SunburstViz.get_data": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name",
    "superset.viz.copy"
   ]
  },
  "type": "function"
 },
 "superset.viz.SunburstViz.query_obj": {
  "data": {
   "lineno": 1772,
   "symbols_in_volume": [
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.SupersetError": {
  "data": {
   "shadows": "superset.errors.SupersetError"
  },
  "type": "import"
 },
 "superset.viz.SupersetErrorType": {
  "data": {
   "shadows": "superset.errors.SupersetErrorType"
  },
  "type": "import"
 },
 "superset.viz.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.viz.TableViz": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.TableViz.get_data": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.DataFrame",
    "pandas.concat",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS"
   ]
  },
  "type": "function"
 },
 "superset.viz.TableViz.json_dumps": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "bool",
    "simplejson.dumps",
    "str",
    "superset.utils.core.json_iso_dttm_ser",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "superset.viz.TableViz.process_metrics": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "len",
    "str",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.core.QueryMode",
    "superset.utils.core.QueryMode.AGGREGATE",
    "superset.utils.core.QueryMode.RAW",
    "superset.utils.core.QueryMode.get",
    "superset.utils.core.get_metric_names",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.TableViz.query_obj": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "simplejson.loads",
    "super",
    "superset.typing.QueryObjectDict",
    "superset.utils.core.QueryMode.RAW",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz.TableViz.should_be_timeseries": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "bool",
    "flask_babel.lazy_gettext",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz.TimeTableViz": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.TimeTableViz.get_data": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "pandas.DataFrame",
    "str",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "superset.viz.TimeTableViz.query_obj": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "len",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz.TreemapViz": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.TreemapViz._nest": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.viz.TreemapViz.get_data": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.viz.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "superset.viz.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "superset.viz.VizData": {
  "data": {
   "shadows": "superset.typing.VizData"
  },
  "type": "import"
 },
 "superset.viz.VizPayload": {
  "data": {
   "shadows": "superset.typing.VizPayload"
  },
  "type": "import"
 },
 "superset.viz.WorldMapViz": {
  "data": {
   "lineno": 1932,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz.WorldMapViz.get_data": {
  "data": {
   "lineno": 1946,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "str",
    "superset.examples.countries.get",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz.WorldMapViz.query_obj": {
  "data": {
   "lineno": 1941,
   "symbols_in_volume": [
    "super",
    "superset.typing.QueryObjectDict"
   ]
  },
  "type": "function"
 },
 "superset.viz._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.viz.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.viz.cache_manager": {
  "data": {
   "shadows": "superset.extensions.cache_manager"
  },
  "type": "import"
 },
 "superset.viz.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "superset.viz.config": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "superset.viz.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "superset.viz.countries": {
  "data": {
   "shadows": "superset.examples.countries"
  },
  "type": "import"
 },
 "superset.viz.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "superset.viz.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "superset.viz.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.viz.datetime_to_epoch": {
  "data": {
   "shadows": "superset.utils.dates.datetime_to_epoch"
  },
  "type": "import"
 },
 "superset.viz.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.viz.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "superset.viz.geohash": {
  "data": {
   "shadows": "geohash"
  },
  "type": "import"
 },
 "superset.viz.geohash_to_json": {
  "data": {
   "lineno": 2555,
   "symbols_in_volume": [
    "float",
    "str",
    "superset.viz.geohash",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz.get_since_until": {
  "data": {
   "shadows": "superset.utils.date_parser.get_since_until"
  },
  "type": "import"
 },
 "superset.viz.get_subclasses": {
  "data": {
   "lineno": 3015,
   "symbols_in_volume": [
    "set",
    "superset.viz.BaseViz",
    "typing.Set",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "superset.viz.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "superset.viz.is_feature_enabled": {
  "data": {
   "shadows": "superset.is_feature_enabled"
  },
  "type": "import"
 },
 "superset.viz.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.viz.logger": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "superset.viz.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.viz.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "superset.viz.md5_sha_from_str": {
  "data": {
   "shadows": "superset.utils.hashing.md5_sha_from_str"
  },
  "type": "import"
 },
 "superset.viz.merge_extra_filters": {
  "data": {
   "shadows": "superset.utils.core.merge_extra_filters"
  },
  "type": "import"
 },
 "superset.viz.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "superset.viz.parse_past_timedelta": {
  "data": {
   "shadows": "superset.utils.date_parser.parse_past_timedelta"
  },
  "type": "import"
 },
 "superset.viz.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.viz.polyline": {
  "data": {
   "shadows": "polyline"
  },
  "type": "import"
 },
 "superset.viz.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "superset.viz.rdelta": {
  "data": {
   "shadows": "dateutil.relativedelta"
  },
  "type": "import"
 },
 "superset.viz.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.viz.relative_end": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "superset.viz.relative_start": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "superset.viz.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.viz.security_manager": {
  "data": {
   "shadows": "superset.extensions.security_manager"
  },
  "type": "import"
 },
 "superset.viz.set_and_log_cache": {
  "data": {
   "shadows": "superset.utils.cache.set_and_log_cache"
  },
  "type": "import"
 },
 "superset.viz.stats_logger": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "superset.viz.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.viz.to_adhoc": {
  "data": {
   "shadows": "superset.utils.core.to_adhoc"
  },
  "type": "import"
 },
 "superset.viz.to_offset": {
  "data": {
   "shadows": "pandas.tseries.frequencies.to_offset"
  },
  "type": "import"
 },
 "superset.viz.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.viz.viz_types": {
  "data": {
   "lineno": 3021
  },
  "type": "constant"
 },
 "superset.viz_sip38": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "globals",
    "issubclass",
    "superset.app.config",
    "superset.viz_sip38.BaseViz",
    "superset.viz_sip38.config",
    "superset.viz_sip38.inspect",
    "superset.viz_sip38.logging",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "superset.viz_sip38.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "superset.viz_sip38.BaseDatasource": {
  "data": {
   "shadows": "superset.connectors.base.models.BaseDatasource"
  },
  "type": "import"
 },
 "superset.viz_sip38.BaseDeckGLViz": {
  "data": {
   "lineno": 2188,
   "symbols_in_volume": [
    "credits",
    "str",
    "superset.viz_sip38.BaseViz",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.BaseDeckGLViz.add_null_filters": {
  "data": {
   "lineno": 2251,
   "symbols_in_volume": [
    "set",
    "sorted",
    "superset.utils.core.to_adhoc"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseDeckGLViz.get_data": {
  "data": {
   "lineno": 2284,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData",
    "superset.viz_sip38.config"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseDeckGLViz.get_js_columns": {
  "data": {
   "lineno": 2280
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseDeckGLViz.get_metrics": {
  "data": {
   "lineno": 2196
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseDeckGLViz.get_properties": {
  "data": {
   "lineno": 2306,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseDeckGLViz.parse_coordinates": {
  "data": {
   "lineno": 2200,
   "symbols_in_volume": [
    "Exception",
    "flask_babel.lazy_gettext",
    "geopy.point.Point",
    "staticmethod",
    "superset.exceptions.SpatialException"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseDeckGLViz.process_spatial_data_obj": {
  "data": {
   "lineno": 2219,
   "symbols_in_volume": [
    "ValueError",
    "flask_babel.lazy_gettext",
    "list",
    "pandas.to_numeric",
    "superset.exceptions.NullValueException",
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseDeckGLViz.query_obj": {
  "data": {
   "lineno": 2266,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseDeckGLViz.reverse_geohash_decode": {
  "data": {
   "lineno": 2210,
   "symbols_in_volume": [
    "staticmethod",
    "superset.viz_sip38.geohash"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseDeckGLViz.reverse_latlong": {
  "data": {
   "lineno": 2215,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "reversed",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "credits",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.BaseViz.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime",
    "datetime.timedelta",
    "dict",
    "flask.request",
    "flask_babel.lazy_gettext",
    "isinstance",
    "list",
    "pandas.DataFrame",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.models.helpers.QueryResult",
    "superset.viz_sip38.COLUMN_FORM_DATA_PARAMS",
    "superset.viz_sip38.SPATIAL_COLUMN_FORM_DATA_PARAMS",
    "superset.viz_sip38.logger",
    "superset.viz_sip38.uuid",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.apply_rolling": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "dict",
    "int"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.cache_key": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "superset.extensions.security_manager.get_rls_ids",
    "superset.viz_sip38.config",
    "superset.viz_sip38.copy",
    "superset.viz_sip38.hashlib"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.cache_timeout": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "property",
    "superset.extensions.cache_manager.data_cache.config"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.data": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.df_metrics_to_num": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.object_",
    "pandas.to_numeric"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.get_csv": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "isinstance",
    "pandas.RangeIndex",
    "str",
    "superset.viz_sip38.config",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.get_data": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.get_df": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "datetime.timedelta",
    "int",
    "numpy.inf",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.Timestamp",
    "pandas.to_datetime",
    "str",
    "superset.utils.core.DTTM_ALIAS",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.get_df_payload": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime.utcnow",
    "len",
    "str",
    "superset.errors.ErrorLevel.ERROR",
    "superset.errors.SupersetError",
    "superset.errors.SupersetErrorType.VIZ_GET_DF_ERROR",
    "superset.extensions.cache_manager.data_cache",
    "superset.extensions.cache_manager.data_cache.get",
    "superset.typing.QueryObjectDict",
    "superset.utils.cache.set_and_log_cache",
    "superset.utils.core.QueryStatus.FAILED",
    "superset.utils.core.QueryStatus.SUCCESS",
    "superset.utils.core.error_msg_from_exception",
    "superset.utils.core.get_stacktrace",
    "superset.viz_sip38.dataclasses",
    "superset.viz_sip38.logger",
    "superset.viz_sip38.stats_logger",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.get_json": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "simplejson.dumps",
    "superset.utils.core.json_int_dttm_ser"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.get_payload": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "superset.typing.QueryObjectDict",
    "superset.typing.VizPayload",
    "superset.utils.core.QueryStatus.FAILED",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.get_samples": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.handle_js_int_overflow": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "abs",
    "dict",
    "int",
    "isinstance",
    "list",
    "staticmethod",
    "str",
    "superset.utils.core.JS_MAX_INTEGER"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.json_data": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "property",
    "simplejson.dumps"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.json_dumps": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "simplejson.dumps",
    "superset.utils.core.json_int_dttm_ser"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.payload_json_and_has_error": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "bool",
    "len",
    "str",
    "superset.typing.VizPayload",
    "superset.utils.core.QueryStatus.FAILED",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.process_metrics": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "list",
    "superset.utils.core.get_metric_name",
    "superset.viz_sip38.METRIC_KEYS"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.process_query_filters": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "superset.utils.core.convert_legacy_filters_into_adhoc",
    "superset.utils.core.merge_extra_filters",
    "superset.utils.core.split_adhoc_filters_into_base_filters"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.query_obj": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "int",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.date_parser.get_since_until",
    "superset.utils.date_parser.parse_past_timedelta",
    "superset.viz_sip38.config",
    "superset.viz_sip38.relative_end",
    "superset.viz_sip38.relative_start",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.raise_for_access": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "superset.extensions.security_manager.raise_for_access"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BaseViz.run_extra_queries": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "superset.viz_sip38.BigNumberTotalViz": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.BigNumberTotalViz.query_obj": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BigNumberViz": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.BigNumberViz.get_data": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "numpy.min",
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BigNumberViz.query_obj": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BoxPlotViz": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.NVD3Viz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.BoxPlotViz.get_data": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "Q1",
    "Q3",
    "ValueError",
    "numpy.nanmedian",
    "pandas.DataFrame",
    "superset.typing.VizData",
    "whisker_high",
    "whisker_low"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BoxPlotViz.get_data.Q1": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "numpy.nanpercentile"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BoxPlotViz.get_data.Q3": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "numpy.nanpercentile"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BoxPlotViz.get_data.outliers": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "set",
    "whisker_high",
    "whisker_low"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BoxPlotViz.get_data.whisker_high": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "int",
    "numpy.nanpercentile"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BoxPlotViz.get_data.whisker_low": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "int",
    "numpy.nanpercentile"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BoxPlotViz.to_series": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "isinstance",
    "len",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BubbleViz": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.NVD3Viz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.BubbleViz.get_data": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list",
    "pandas.DataFrame",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BubbleViz.query_obj": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "all",
    "flask_babel.lazy_gettext",
    "len",
    "set",
    "super",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BulletViz": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.NVD3Viz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.BulletViz.get_data": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.BulletViz.query_obj": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.COLUMN_FORM_DATA_PARAMS": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "superset.viz_sip38.CalHeatmapViz": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.CalHeatmapViz.get_data": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "dateutil.relativedelta.relativedelta",
    "hasattr",
    "pandas.DataFrame",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.date_parser.get_since_until",
    "superset.viz_sip38.relative_end",
    "superset.viz_sip38.relative_start"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.CalHeatmapViz.query_obj": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.ChordViz": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.ChordViz.get_data": {
  "data": {
   "lineno": 1784,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "pandas.DataFrame",
    "set",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.ChordViz.query_obj": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.CountryMapViz": {
  "data": {
   "lineno": 1801,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.CountryMapViz.get_data": {
  "data": {
   "lineno": 1810,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DTTM_ALIAS": {
  "data": {
   "shadows": "superset.utils.core.DTTM_ALIAS"
  },
  "type": "import"
 },
 "superset.viz_sip38.DeckArc": {
  "data": {
   "lineno": 2512,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseDeckGLViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.DeckArc.get_data": {
  "data": {
   "lineno": 2535,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.viz_sip38.config"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckArc.get_properties": {
  "data": {
   "lineno": 2526,
   "symbols_in_volume": [
    "superset.utils.core.DTTM_ALIAS"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckArc.query_obj": {
  "data": {
   "lineno": 2521,
   "symbols_in_volume": [
    "bool",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckGLMultiLayer": {
  "data": {
   "lineno": 2161,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.DeckGLMultiLayer.get_data": {
  "data": {
   "lineno": 2174,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.db.session.query",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.id.in_",
    "superset.typing.VizData",
    "superset.viz_sip38.config"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckGLMultiLayer.query_obj": {
  "data": {
   "lineno": 2171
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckGeoJson": {
  "data": {
   "lineno": 2500,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseDeckGLViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.DeckGeoJson.get_properties": {
  "data": {
   "lineno": 2507,
   "symbols_in_volume": [
    "simplejson.loads"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckGrid": {
  "data": {
   "lineno": 2383,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseDeckGLViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.DeckGrid.get_data": {
  "data": {
   "lineno": 2394,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckGrid.get_properties": {
  "data": {
   "lineno": 2391
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckHex": {
  "data": {
   "lineno": 2484,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseDeckGLViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.DeckHex.get_data": {
  "data": {
   "lineno": 2495,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name",
    "superset.viz_sip38.DeckHex"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckHex.get_properties": {
  "data": {
   "lineno": 2492
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckPathViz": {
  "data": {
   "lineno": 2410,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "simplejson.loads",
    "superset.viz_sip38.BaseDeckGLViz",
    "superset.viz_sip38.geohash_to_json",
    "superset.viz_sip38.polyline"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.DeckPathViz.get_data": {
  "data": {
   "lineno": 2449,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckPathViz.get_properties": {
  "data": {
   "lineno": 2435,
   "symbols_in_volume": [
    "deser",
    "superset.utils.core.DTTM_ALIAS"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckPathViz.query_obj": {
  "data": {
   "lineno": 2424,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckPolygon": {
  "data": {
   "lineno": 2454,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.DeckPathViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.DeckPolygon.get_metrics": {
  "data": {
   "lineno": 2467
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckPolygon.get_properties": {
  "data": {
   "lineno": 2473,
   "symbols_in_volume": [
    "super",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckPolygon.query_obj": {
  "data": {
   "lineno": 2462,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckScatterViz": {
  "data": {
   "lineno": 2310,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseDeckGLViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.DeckScatterViz.get_data": {
  "data": {
   "lineno": 2346,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckScatterViz.get_metrics": {
  "data": {
   "lineno": 2328
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckScatterViz.get_properties": {
  "data": {
   "lineno": 2335,
   "symbols_in_volume": [
    "superset.utils.core.DTTM_ALIAS"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckScatterViz.query_obj": {
  "data": {
   "lineno": 2319,
   "symbols_in_volume": [
    "bool",
    "super"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckScreengrid": {
  "data": {
   "lineno": 2357,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseDeckGLViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.DeckScreengrid.get_data": {
  "data": {
   "lineno": 2378,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckScreengrid.get_properties": {
  "data": {
   "lineno": 2371,
   "symbols_in_volume": [
    "superset.utils.core.DTTM_ALIAS"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DeckScreengrid.query_obj": {
  "data": {
   "lineno": 2366,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "superset.viz_sip38.DirectedForceViz": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.DirectedForceViz.get_data": {
  "data": {
   "lineno": 1764,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DirectedForceViz.query_obj": {
  "data": {
   "lineno": 1757,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "len",
    "super",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DistributionBarViz": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.DistributionPieViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.DistributionBarViz.get_data": {
  "data": {
   "lineno": 1610,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pandas.DataFrame",
    "str",
    "superset.constants.NULL_STRING",
    "superset.typing.VizData",
    "tuple"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DistributionBarViz.query_obj": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.DistributionPieViz": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.NVD3Viz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.DistributionPieViz.get_data": {
  "data": {
   "lineno": 1527,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.ErrorLevel": {
  "data": {
   "shadows": "superset.errors.ErrorLevel"
  },
  "type": "import"
 },
 "superset.viz_sip38.EventFlowViz": {
  "data": {
   "lineno": 2547,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.EventFlowViz.get_data": {
  "data": {
   "lineno": 2575,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.EventFlowViz.query_obj": {
  "data": {
   "lineno": 2556,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.FilterBoxViz": {
  "data": {
   "lineno": 1872,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.FilterBoxViz.get_data": {
  "data": {
   "lineno": 1903,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.FilterBoxViz.query_obj": {
  "data": {
   "lineno": 1883
  },
  "type": "function"
 },
 "superset.viz_sip38.FilterBoxViz.run_extra_queries": {
  "data": {
   "lineno": 1886,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.HeatmapViz": {
  "data": {
   "lineno": 1967,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.HeatmapViz.get_data": {
  "data": {
   "lineno": 1979,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.HistogramViz": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.HistogramViz.get_data": {
  "data": {
   "lineno": 1566,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.HistogramViz.labelify": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "str",
    "superset.viz_sip38.re"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.HistogramViz.query_obj": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "int",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.viz_sip38.config"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.HorizonViz": {
  "data": {
   "lineno": 2013,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.NVD3TimeSeriesViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.IFrameViz": {
  "data": {
   "lineno": 1928,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.IFrameViz.get_data": {
  "data": {
   "lineno": 1943,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.IFrameViz.get_df": {
  "data": {
   "lineno": 1940,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.IFrameViz.query_obj": {
  "data": {
   "lineno": 1937
  },
  "type": "function"
 },
 "superset.viz_sip38.JS_MAX_INTEGER": {
  "data": {
   "shadows": "superset.utils.core.JS_MAX_INTEGER"
  },
  "type": "import"
 },
 "superset.viz_sip38.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "superset.viz_sip38.METRIC_KEYS": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "superset.viz_sip38.MapboxViz": {
  "data": {
   "lineno": 2028,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.MapboxViz.get_data": {
  "data": {
   "lineno": 2093,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "round",
    "superset.typing.VizData",
    "superset.viz_sip38.config",
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.MapboxViz.query_obj": {
  "data": {
   "lineno": 2037,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "len",
    "list",
    "set",
    "super",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.MultiLineViz": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.NVD3Viz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.MultiLineViz.get_data": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.db.session.query",
    "superset.models.slice.Slice",
    "superset.models.slice.Slice.id.in_",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.MultiLineViz.query_obj": {
  "data": {
   "lineno": 1349
  },
  "type": "function"
 },
 "superset.viz_sip38.NULL_STRING": {
  "data": {
   "shadows": "superset.constants.NULL_STRING"
  },
  "type": "import"
 },
 "superset.viz_sip38.NVD3CompareTimeSeriesViz": {
  "data": {
   "lineno": 1501,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.NVD3TimeSeriesViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.NVD3DualLineViz": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.NVD3Viz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.NVD3DualLineViz.get_data": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "pandas.DataFrame",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.NVD3DualLineViz.query_obj": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "super",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.NVD3DualLineViz.to_series": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "enumerate",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.NVD3TimePivotViz": {
  "data": {
   "lineno": 1453,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.NVD3TimeSeriesViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.NVD3TimePivotViz.get_data": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "pandas.DataFrame",
    "pandas.tseries.frequencies.to_offset",
    "str",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.core.DTTM_ALIAS.max",
    "superset.utils.core.DTTM_ALIAS.rank",
    "superset.utils.core.get_metric_name",
    "type"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.NVD3TimePivotViz.query_obj": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.NVD3TimeSeriesBarViz": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.NVD3TimeSeriesViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.NVD3TimeSeriesStackedViz": {
  "data": {
   "lineno": 1509,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.NVD3TimeSeriesViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.NVD3TimeSeriesViz": {
  "data": {
   "lineno": 1149,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "int",
    "superset.viz_sip38.NVD3Viz",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.NVD3TimeSeriesViz.get_data": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "enumerate",
    "pandas.DataFrame",
    "sorted",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.VizData",
    "tuple"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.NVD3TimeSeriesViz.process_data": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "bool",
    "flask_babel.lazy_gettext",
    "getattr",
    "pandas.DataFrame",
    "sum",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.NVD3TimeSeriesViz.run_extra_queries": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "isinstance",
    "list",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.date_parser.parse_past_timedelta"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.NVD3TimeSeriesViz.to_series": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.isnan",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.NVD3Viz": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "credits",
    "str",
    "superset.viz_sip38.BaseViz",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.NullValueException": {
  "data": {
   "shadows": "superset.exceptions.NullValueException"
  },
  "type": "import"
 },
 "superset.viz_sip38.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "superset.viz_sip38.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "superset.viz_sip38.PairedTTestViz": {
  "data": {
   "lineno": 2579,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.PairedTTestViz.get_data": {
  "data": {
   "lineno": 2588,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "str",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.ParallelCoordinatesViz": {
  "data": {
   "lineno": 1947,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.ParallelCoordinatesViz.get_data": {
  "data": {
   "lineno": 1963,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.PartitionViz": {
  "data": {
   "lineno": 2667,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.NVD3TimeSeriesViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.PartitionViz.get_data": {
  "data": {
   "lineno": 2800,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pandas.DataFrame",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.PartitionViz.levels_for": {
  "data": {
   "lineno": 2683,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.PartitionViz.levels_for_diff": {
  "data": {
   "lineno": 2697,
   "symbols_in_volume": [
    "float",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.Series.div",
    "pandas.Series.sub",
    "range",
    "set",
    "superset.utils.core.DTTM_ALIAS"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.PartitionViz.levels_for_time": {
  "data": {
   "lineno": 2731,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.PartitionViz.nest_procs": {
  "data": {
   "lineno": 2774,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.PartitionViz.nest_values": {
  "data": {
   "lineno": 2740,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.PartitionViz.query_obj": {
  "data": {
   "lineno": 2676,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.PivotTableViz": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.PivotTableViz.get_data": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.DataFrame",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.PivotTableViz.query_obj": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "set",
    "super",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.Point": {
  "data": {
   "shadows": "geopy.point.Point"
  },
  "type": "import"
 },
 "superset.viz_sip38.QueryObjectDict": {
  "data": {
   "shadows": "superset.typing.QueryObjectDict"
  },
  "type": "import"
 },
 "superset.viz_sip38.QueryObjectValidationError": {
  "data": {
   "shadows": "superset.exceptions.QueryObjectValidationError"
  },
  "type": "import"
 },
 "superset.viz_sip38.QueryResult": {
  "data": {
   "shadows": "superset.models.helpers.QueryResult"
  },
  "type": "import"
 },
 "superset.viz_sip38.RoseViz": {
  "data": {
   "lineno": 2636,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.NVD3TimeSeriesViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.RoseViz.get_data": {
  "data": {
   "lineno": 2643,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas.DataFrame",
    "super",
    "superset.typing.VizData",
    "superset.viz_sip38.math",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.SPATIAL_COLUMN_FORM_DATA_PARAMS": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "superset.viz_sip38.SankeyViz": {
  "data": {
   "lineno": 1702,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.SankeyViz.get_data": {
  "data": {
   "lineno": 1711,
   "symbols_in_volume": [
    "collections.defaultdict",
    "find_cycle",
    "flask_babel.lazy_gettext",
    "pandas.DataFrame",
    "set",
    "str",
    "superset.exceptions.QueryObjectValidationError",
    "superset.typing.VizData",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.SankeyViz.get_data.find_cycle": {
  "data": {
   "lineno": 1721,
   "symbols_in_volume": [
    "set",
    "visit"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.SankeyViz.get_data.find_cycle.visit": {
  "data": {
   "lineno": 1725,
   "symbols_in_volume": [
    "visit"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "superset.viz_sip38.Slice": {
  "data": {
   "shadows": "superset.models.slice.Slice"
  },
  "type": "import"
 },
 "superset.viz_sip38.SpatialException": {
  "data": {
   "shadows": "superset.exceptions.SpatialException"
  },
  "type": "import"
 },
 "superset.viz_sip38.SunburstViz": {
  "data": {
   "lineno": 1658,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.SunburstViz.get_data": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.SunburstViz.query_obj": {
  "data": {
   "lineno": 1692,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.SupersetError": {
  "data": {
   "shadows": "superset.errors.SupersetError"
  },
  "type": "import"
 },
 "superset.viz_sip38.SupersetErrorType": {
  "data": {
   "shadows": "superset.errors.SupersetErrorType"
  },
  "type": "import"
 },
 "superset.viz_sip38.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "superset.viz_sip38.TableViz": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.TableViz.get_data": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "dict",
    "list",
    "pandas.DataFrame",
    "pandas.concat",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS",
    "superset.utils.core.get_metric_names"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.TableViz.json_dumps": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "simplejson.dumps",
    "superset.utils.core.json_iso_dttm_ser"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.TableViz.query_obj": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "simplejson.loads",
    "super",
    "superset.exceptions.QueryObjectValidationError",
    "superset.utils.core.get_metric_name",
    "superset.utils.core.get_metric_names"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.TableViz.should_be_timeseries": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "bool",
    "flask_babel.lazy_gettext",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.TimeTableViz": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.TimeTableViz.get_data": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "pandas.DataFrame",
    "str",
    "superset.typing.VizData",
    "superset.utils.core.DTTM_ALIAS"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.TimeTableViz.query_obj": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "flask_babel.lazy_gettext",
    "len",
    "super",
    "superset.exceptions.QueryObjectValidationError"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.TreemapViz": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.TreemapViz._nest": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.TreemapViz.get_data": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "superset.typing.VizData"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "superset.viz_sip38.VizData": {
  "data": {
   "shadows": "superset.typing.VizData"
  },
  "type": "import"
 },
 "superset.viz_sip38.VizPayload": {
  "data": {
   "shadows": "superset.typing.VizPayload"
  },
  "type": "import"
 },
 "superset.viz_sip38.WorldMapViz": {
  "data": {
   "lineno": 1822,
   "symbols_in_volume": [
    "credits",
    "flask_babel.lazy_gettext",
    "superset.viz_sip38.BaseViz"
   ]
  },
  "type": "class"
 },
 "superset.viz_sip38.WorldMapViz.get_data": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "str",
    "superset.examples.countries.get",
    "superset.typing.VizData",
    "superset.utils.core.get_metric_name"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38._": {
  "data": {
   "shadows": "flask_babel.lazy_gettext"
  },
  "type": "import"
 },
 "superset.viz_sip38.app": {
  "data": {
   "shadows": "superset.app"
  },
  "type": "import"
 },
 "superset.viz_sip38.cache_manager": {
  "data": {
   "shadows": "superset.extensions.cache_manager"
  },
  "type": "import"
 },
 "superset.viz_sip38.config": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "superset.viz_sip38.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "superset.viz_sip38.countries": {
  "data": {
   "shadows": "superset.examples.countries"
  },
  "type": "import"
 },
 "superset.viz_sip38.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "superset.viz_sip38.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "superset.viz_sip38.db": {
  "data": {
   "shadows": "superset.db"
  },
  "type": "import"
 },
 "superset.viz_sip38.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "superset.viz_sip38.geohash": {
  "data": {
   "shadows": "geohash"
  },
  "type": "import"
 },
 "superset.viz_sip38.geohash_to_json": {
  "data": {
   "lineno": 2399,
   "symbols_in_volume": [
    "superset.viz_sip38.geohash"
   ]
  },
  "type": "function"
 },
 "superset.viz_sip38.get_since_until": {
  "data": {
   "shadows": "superset.utils.date_parser.get_since_until"
  },
  "type": "import"
 },
 "superset.viz_sip38.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "superset.viz_sip38.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "superset.viz_sip38.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "superset.viz_sip38.logger": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "superset.viz_sip38.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "superset.viz_sip38.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "superset.viz_sip38.merge_extra_filters": {
  "data": {
   "shadows": "superset.utils.core.merge_extra_filters"
  },
  "type": "import"
 },
 "superset.viz_sip38.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "superset.viz_sip38.parse_past_timedelta": {
  "data": {
   "shadows": "superset.utils.date_parser.parse_past_timedelta"
  },
  "type": "import"
 },
 "superset.viz_sip38.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "superset.viz_sip38.polyline": {
  "data": {
   "shadows": "polyline"
  },
  "type": "import"
 },
 "superset.viz_sip38.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "superset.viz_sip38.rdelta": {
  "data": {
   "shadows": "dateutil.relativedelta"
  },
  "type": "import"
 },
 "superset.viz_sip38.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "superset.viz_sip38.relative_end": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "superset.viz_sip38.relative_start": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "superset.viz_sip38.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "superset.viz_sip38.security_manager": {
  "data": {
   "shadows": "superset.extensions.security_manager"
  },
  "type": "import"
 },
 "superset.viz_sip38.set_and_log_cache": {
  "data": {
   "shadows": "superset.utils.cache.set_and_log_cache"
  },
  "type": "import"
 },
 "superset.viz_sip38.stats_logger": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "superset.viz_sip38.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "superset.viz_sip38.to_adhoc": {
  "data": {
   "shadows": "superset.utils.core.to_adhoc"
  },
  "type": "import"
 },
 "superset.viz_sip38.to_offset": {
  "data": {
   "shadows": "pandas.tseries.frequencies.to_offset"
  },
  "type": "import"
 },
 "superset.viz_sip38.utils": {
  "data": {
   "shadows": "superset.utils.core"
  },
  "type": "import"
 },
 "superset.viz_sip38.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "superset.viz_sip38.viz_types": {
  "data": {
   "lineno": 2820
  },
  "type": "constant"
 }
}