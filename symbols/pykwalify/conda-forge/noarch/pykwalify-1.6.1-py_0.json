{
 "pykwalify": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pykwalify.cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pykwalify.cli.cli_entrypoint": {
  "lineno": 86,
  "symbols_in_volume": [
   "sys.stderr.write",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pykwalify.cli.parse_cli": {
  "lineno": 14,
  "symbols_in_volume": [
   "docopt.docopt",
   "logging.getLogger",
   "pykwalify.__version__",
   "pykwalify.init_logging"
  ],
  "type": "function"
 },
 "pykwalify.cli.run": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "ruamel.yaml.__file__",
   "sys.exit",
   "sys.version_info"
  ],
  "type": "module"
 },
 "pykwalify.compat.b": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.compat.nativestr": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.compat.u": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.core": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pykwalify.core.Core": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pykwalify.core.Core.__init__": {
  "lineno": 33,
  "symbols_in_volume": [
   "json.load",
   "os.path.exists",
   "pykwalify.compat.yaml.safe_load",
   "pykwalify.errors.CoreError"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._handle_func": {
  "lineno": 240,
  "symbols_in_volume": [
   "pykwalify.errors.CoreError"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._load_extensions": {
  "lineno": 130,
  "symbols_in_volume": [
   "imp.load_source",
   "os.path.abspath",
   "os.path.exists",
   "os.path.isabs",
   "pykwalify.errors.CoreError"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._start_validate": {
  "lineno": 174,
  "symbols_in_volume": [
   "pykwalify.partial_schemas",
   "pykwalify.rule.Rule"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._validate": {
  "lineno": 204,
  "symbols_in_volume": [
   "pykwalify.errors.SchemaError.SchemaErrorEntry"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._validate_assert": {
  "lineno": 879,
  "symbols_in_volume": [
   "pykwalify.errors.CoreError",
   "pykwalify.errors.SchemaError.SchemaErrorEntry",
   "sys.exc_info",
   "traceback.extract_tb"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._validate_include": {
  "lineno": 272,
  "symbols_in_volume": [
   "pykwalify.errors.SchemaError.SchemaErrorEntry",
   "pykwalify.partial_schemas.get",
   "pykwalify.partial_schemas.keys"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._validate_length": {
  "lineno": 831,
  "symbols_in_volume": [
   "pykwalify.errors.CoreError",
   "pykwalify.errors.SchemaError.SchemaErrorEntry",
   "pykwalify.types.is_string"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._validate_mapping": {
  "lineno": 472,
  "symbols_in_volume": [
   "pykwalify.errors.SchemaError.SchemaErrorEntry",
   "pykwalify.partial_schemas.get",
   "pykwalify.partial_schemas.keys",
   "re.search"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._validate_range": {
  "lineno": 908,
  "symbols_in_volume": [
   "pykwalify.compat.nativestr",
   "pykwalify.errors.CoreError",
   "pykwalify.errors.SchemaError.SchemaErrorEntry",
   "pykwalify.types.tt"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._validate_scalar": {
  "lineno": 615,
  "symbols_in_volume": [
   "pykwalify.compat.nativestr",
   "pykwalify.errors.CoreError",
   "pykwalify.errors.SchemaError.SchemaErrorEntry",
   "pykwalify.types.is_scalar",
   "pykwalify.types.tt",
   "re.UNICODE",
   "re.match"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._validate_scalar_date": {
  "lineno": 780,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "dateutil.parser.parse",
   "pykwalify.errors.SchemaError.SchemaErrorEntry",
   "time.strptime"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._validate_scalar_timestamp": {
  "lineno": 715,
  "symbols_in_volume": [
   "datetime.datetime",
   "dateutil.parser.parse",
   "pykwalify.compat.basestring",
   "pykwalify.compat.nativestr",
   "pykwalify.errors.SchemaError.SchemaErrorEntry"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._validate_scalar_timestamp._check_int_timestamp_boundaries": {
  "lineno": 718,
  "symbols_in_volume": [
   "pykwalify.errors.SchemaError.SchemaErrorEntry"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._validate_scalar_type": {
  "lineno": 957,
  "symbols_in_volume": [
   "pykwalify.compat.unicode",
   "pykwalify.errors.CoreError",
   "pykwalify.errors.SchemaError.SchemaErrorEntry",
   "pykwalify.types.tt"
  ],
  "type": "function"
 },
 "pykwalify.core.Core._validate_sequence": {
  "lineno": 295,
  "symbols_in_volume": [
   "pykwalify.errors.CoreError",
   "pykwalify.errors.NotMappingError",
   "pykwalify.errors.NotSequenceError",
   "pykwalify.errors.SchemaError.SchemaErrorEntry"
  ],
  "type": "function"
 },
 "pykwalify.core.Core.validate": {
  "lineno": 150,
  "symbols_in_volume": [
   "pykwalify.compat.unicode",
   "pykwalify.errors.SchemaError"
  ],
  "type": "function"
 },
 "pykwalify.errors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pykwalify.errors.CoreError": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pykwalify.errors.CoreError.__init__": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.NotMappingError": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pykwalify.errors.NotMappingError.__init__": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.NotSequenceError": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pykwalify.errors.NotSequenceError.__init__": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.PyKwalifyException": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pykwalify.errors.PyKwalifyException.__init__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.PyKwalifyException.__repr__": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.PyKwalifyException.__str__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.PyKwalifyException.msg": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.PyKwalifyException.msg.fget": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.PyKwalifyException.msg.fset": {
  "lineno": 100,
  "symbols_in_volume": [
   "pykwalify.compat.basestring"
  ],
  "type": "function"
 },
 "pykwalify.errors.PyKwalifyException.retcode": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.PyKwalifyException.retcode.fget": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.PyKwalifyException.retcode.fset": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.PyKwalifyException.retname": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.PyKwalifyException.retname.fget": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.PyKwalifyException.retname.fset": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.RuleError": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pykwalify.errors.RuleError.__init__": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.SchemaConflict": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pykwalify.errors.SchemaConflict.__init__": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.SchemaError": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pykwalify.errors.SchemaError.SchemaErrorEntry": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pykwalify.errors.SchemaError.SchemaErrorEntry.__init__": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.SchemaError.SchemaErrorEntry.__repr__": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.SchemaError.__init__": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.errors.UnknownError": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pykwalify.errors.UnknownError.__init__": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.init_logging": {
  "lineno": 25,
  "symbols_in_volume": [
   "logging.config.dictConfig",
   "os.environ"
  ],
  "type": "function"
 },
 "pykwalify.rule": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pykwalify.rule.Rule": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pykwalify.rule.Rule.__init__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.__str__": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.allowempty_map": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.assertion": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.check_conflicts": {
  "lineno": 1284,
  "symbols_in_volume": [
   "pykwalify.errors.SchemaConflict",
   "pykwalify.types.mapping_aliases",
   "pykwalify.types.sequence_aliases"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.check_type_keywords": {
  "lineno": 1212,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.default": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.desc": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.enum": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.example": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.extensions": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.format": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.func": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.ident": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.include_name": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.init": {
  "lineno": 366,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.DEFAULT_TYPE",
   "pykwalify.types.is_string",
   "pykwalify.types.mapping_aliases",
   "pykwalify.types.sequence_aliases"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_allow_empty_map": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_assert_value": {
  "lineno": 863,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.is_string"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_default_value": {
  "lineno": 1185,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.is_collection_type"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_desc_value": {
  "lineno": 766,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.is_string"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_enum_value": {
  "lineno": 825,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.is_collection_type"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_example": {
  "lineno": 506,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.is_string"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_extensions": {
  "lineno": 663,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_format_value": {
  "lineno": 463,
  "symbols_in_volume": [
   "pykwalify.compat.basestring",
   "pykwalify.errors.RuleError",
   "pykwalify.types.is_string"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_func": {
  "lineno": 651,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.is_string"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_ident_value": {
  "lineno": 1019,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.is_bool",
   "pykwalify.types.is_collection_type"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_length_value": {
  "lineno": 518,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.is_bool",
   "pykwalify.types.is_number"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_mapping_value": {
  "lineno": 1117,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "re.compile"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_matching": {
  "lineno": 722,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_matching_rule": {
  "lineno": 677,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_name_value": {
  "lineno": 738,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.is_string"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_nullable_value": {
  "lineno": 752,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_pattern_value": {
  "lineno": 793,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.is_string",
   "re.compile"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_range_value": {
  "lineno": 884,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.is_bool",
   "pykwalify.types.is_number"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_required_value": {
  "lineno": 780,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.is_bool"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_sequence_value": {
  "lineno": 1082,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_type_value": {
  "lineno": 703,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.DEFAULT_TYPE",
   "pykwalify.types.is_builtin_type",
   "pykwalify.types.type_class"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_unique_value": {
  "lineno": 1055,
  "symbols_in_volume": [
   "pykwalify.errors.RuleError",
   "pykwalify.types.is_bool",
   "pykwalify.types.is_collection_type"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.init_version": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.keywords": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.length": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.map_regex_rule": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.mapping": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.matching": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.matching_rule": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.name": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.nullable": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.parent": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.pattern": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.pattern_regexp": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.range": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.regex_mappings": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.required": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.schema": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.schema_str": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.sequence": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.type": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.type_class": {
  "lineno": 296,
  "symbols_in_volume": [
   "pykwalify.types.type_class.setter"
  ],
  "type": "function"
 },
 "pykwalify.rule.Rule.unique": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.rule.Rule.version": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime"
  ],
  "type": "module"
 },
 "pykwalify.types.TextMeta": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pykwalify.types.TextMeta.__instancecheck__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_any": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_bool": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_builtin_type": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_collection": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_collection_type": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_correct_type": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_date": {
  "lineno": 139,
  "symbols_in_volume": [
   "datetime.date",
   "pykwalify.compat.basestring"
  ],
  "type": "function"
 },
 "pykwalify.types.is_enum": {
  "lineno": 115,
  "symbols_in_volume": [
   "pykwalify.compat.basestring"
  ],
  "type": "function"
 },
 "pykwalify.types.is_float": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_int": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_mapping_alias": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_none": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_number": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_scalar": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_scalar_type": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_sequence_alias": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_string": {
  "lineno": 72,
  "symbols_in_volume": [
   "pykwalify.compat.basestring",
   "pykwalify.compat.bytes"
  ],
  "type": "function"
 },
 "pykwalify.types.is_text": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pykwalify.types.is_timestamp": {
  "lineno": 131,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pykwalify.types.text": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pykwalify.types.type_class": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 }
}