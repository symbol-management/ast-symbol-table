{
 "linearmodels": {
  "lineno": null,
  "symbols_in_volume": [
   "get_versions",
   "linearmodels.iv.model._OLS",
   "os.environ.get"
  ],
  "type": "module"
 },
 "linearmodels._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.asset_pricing.covariance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance": {
  "lineno": 73,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.__init__": {
  "lineno": 95,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "int",
   "linearmodels.typing.NDArray",
   "numpy.ndarray",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.__repr__": {
  "lineno": 125,
  "symbols_in_volume": [
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.__str__": {
  "lineno": 122,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.config": {
  "lineno": 128,
  "symbols_in_volume": [
   "float",
   "property",
   "str",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.cov": {
  "lineno": 171,
  "symbols_in_volume": [
   "int",
   "linearmodels.typing.NDArray",
   "numpy.linalg.inv",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.inv_jacobian": {
  "lineno": 158,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.linalg.inv",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.jacobian": {
  "lineno": 150,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.linalg.inv",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.s": {
  "lineno": 132,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.square": {
  "lineno": 166,
  "symbols_in_volume": [
   "bool",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.HeteroskedasticWeight": {
  "lineno": 277,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.asset_pricing.covariance.HeteroskedasticWeight.__init__": {
  "lineno": 289,
  "symbols_in_volume": [
   "bool",
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.HeteroskedasticWeight.w": {
  "lineno": 293,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.linalg.inv"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.KernelCovariance": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.asset_pricing.covariance.KernelCovariance.__init__": {
  "lineno": 227,
  "symbols_in_volume": [
   "bool",
   "float",
   "int",
   "linearmodels.typing.NDArray",
   "numpy.ndarray",
   "str",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.KernelCovariance.__str__": {
  "lineno": 250,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.KernelCovariance.config": {
  "lineno": 254,
  "symbols_in_volume": [
   "float",
   "property",
   "str",
   "super",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.KernelCovariance.s": {
  "lineno": 261,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.KernelWeight": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.asset_pricing.covariance.KernelWeight.__init__": {
  "lineno": 333,
  "symbols_in_volume": [
   "bool",
   "float",
   "linearmodels.typing.NDArray",
   "str",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance.KernelWeight.w": {
  "lineno": 344,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.linalg.inv"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance._HACMixin": {
  "lineno": 17,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.asset_pricing.covariance._HACMixin.__init__": {
  "lineno": 18,
  "symbols_in_volume": [
   "float",
   "numpy.ndarray",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance._HACMixin._check_bandwidth": {
  "lineno": 51,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "float",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance._HACMixin._check_kernel": {
  "lineno": 44,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "isinstance",
   "linearmodels.iv.covariance.KERNEL_LOOKUP",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance._HACMixin._kernel_cov": {
  "lineno": 62,
  "symbols_in_volume": [
   "kernel_estimator",
   "linearmodels.iv.covariance.KERNEL_LOOKUP",
   "linearmodels.iv.covariance._cov_kernel",
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance._HACMixin.bandwidth": {
  "lineno": 31,
  "symbols_in_volume": [
   "float",
   "linearmodels.iv.covariance.kernel_optimal_bandwidth",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.covariance._HACMixin.kernel": {
  "lineno": 25,
  "symbols_in_volume": [
   "property",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.asset_pricing.model.LinearFactorModel": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.asset_pricing.model.LinearFactorModel.__init__": {
  "lineno": 498,
  "symbols_in_volume": [
   "bool",
   "linearmodels.iv.data.IVDataLike",
   "linearmodels.typing.ArrayLike",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.LinearFactorModel._jacobian": {
  "lineno": 701,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.c_",
   "numpy.eye",
   "numpy.kron",
   "numpy.ones",
   "numpy.r_",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.LinearFactorModel._moments": {
  "lineno": 728,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.c_",
   "numpy.ones",
   "numpy.reshape",
   "numpy.tile"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.LinearFactorModel.fit": {
  "lineno": 570,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "cov_est",
   "float",
   "int",
   "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance",
   "linearmodels.asset_pricing.covariance.KernelCovariance",
   "linearmodels.asset_pricing.results.LinearFactorModelResults",
   "linearmodels.utility.AttrDict",
   "linearmodels.utility.WaldTestStatistic",
   "list",
   "numpy.arange",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.linalg.pinv",
   "numpy.ones",
   "numpy.r_",
   "numpy.reshape",
   "str",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.LinearFactorModel.from_formula": {
  "lineno": 510,
  "symbols_in_volume": [
   "bool",
   "classmethod",
   "cls",
   "cls._prepare_data_from_formula",
   "linearmodels.typing.ArrayLike",
   "pandas.DataFrame",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.LinearFactorModelGMM": {
  "lineno": 748,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.asset_pricing.model.LinearFactorModelGMM.__init__": {
  "lineno": 792,
  "symbols_in_volume": [
   "bool",
   "linearmodels.iv.data.IVDataLike",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.LinearFactorModelGMM._j": {
  "lineno": 1080,
  "symbols_in_volume": [
   "bool",
   "float",
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.LinearFactorModelGMM._j_cue": {
  "lineno": 1087,
  "symbols_in_volume": [
   "bool",
   "float",
   "linearmodels.asset_pricing.covariance.HeteroskedasticWeight",
   "linearmodels.asset_pricing.covariance.KernelWeight",
   "linearmodels.typing.NDArray",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.LinearFactorModelGMM._jacobian": {
  "lineno": 1100,
  "symbols_in_volume": [
   "bool",
   "int",
   "linearmodels.typing.NDArray",
   "numpy.c_",
   "numpy.eye",
   "numpy.kron",
   "numpy.ones",
   "numpy.reshape",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.LinearFactorModelGMM._moments": {
  "lineno": 1059,
  "symbols_in_volume": [
   "bool",
   "int",
   "linearmodels.typing.NDArray",
   "numpy.c_",
   "numpy.ones",
   "numpy.reshape",
   "numpy.tile"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.LinearFactorModelGMM.fit": {
  "lineno": 856,
  "symbols_in_volume": [
   "LinearFactorModel",
   "ValueError",
   "bool",
   "callback_factory",
   "cov_est",
   "int",
   "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance",
   "linearmodels.asset_pricing.covariance.HeteroskedasticWeight",
   "linearmodels.asset_pricing.covariance.KernelCovariance",
   "linearmodels.asset_pricing.covariance.KernelWeight",
   "linearmodels.asset_pricing.results.GMMFactorModelResults",
   "linearmodels.utility.AttrDict",
   "linearmodels.utility.WaldTestStatistic",
   "linearmodels.utility.get_float",
   "linearmodels.utility.get_string",
   "list",
   "numpy.abs",
   "numpy.asarray",
   "numpy.c_",
   "numpy.r_",
   "numpy.reshape",
   "obj",
   "scipy.optimize.minimize",
   "slice",
   "str",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.LinearFactorModelGMM.from_formula": {
  "lineno": 799,
  "symbols_in_volume": [
   "bool",
   "classmethod",
   "cls",
   "cls._prepare_data_from_formula",
   "pandas.DataFrame",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.TradedFactorModel": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.asset_pricing.model.TradedFactorModel.__init__": {
  "lineno": 193,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVDataLike",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.TradedFactorModel.fit": {
  "lineno": 243,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "float",
   "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance",
   "linearmodels.asset_pricing.covariance.KernelCovariance",
   "linearmodels.asset_pricing.results.LinearFactorModelResults",
   "linearmodels.utility.AttrDict",
   "linearmodels.utility.WaldTestStatistic",
   "linearmodels.utility.get_float",
   "linearmodels.utility.get_string",
   "numpy.arange",
   "numpy.c_",
   "numpy.eye",
   "numpy.kron",
   "numpy.linalg.pinv",
   "numpy.ones",
   "numpy.reshape",
   "numpy.tile",
   "str",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.TradedFactorModel.from_formula": {
  "lineno": 196,
  "symbols_in_volume": [
   "classmethod",
   "cls",
   "pandas.DataFrame",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model._FactorModelBase": {
  "lineno": 55,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.asset_pricing.model._FactorModelBase.__init__": {
  "lineno": 67,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "linearmodels.iv.data.IVDataLike",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model._FactorModelBase.__repr__": {
  "lineno": 80,
  "symbols_in_volume": [
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model._FactorModelBase.__str__": {
  "lineno": 74,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model._FactorModelBase._drop_missing": {
  "lineno": 83,
  "symbols_in_volume": [
   "ValueError",
   "all",
   "any",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.missing_warning",
   "numpy.any",
   "numpy.c_"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model._FactorModelBase._prepare_data_from_formula": {
  "lineno": 136,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "patsy.highlevel.dmatrix",
   "patsy.missing.NAAction",
   "staticmethod",
   "str",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model._FactorModelBase._validate_data": {
  "lineno": 98,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.utility.has_constant",
   "numpy.linalg.matrix_rank"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model._FactorModelBase.formula": {
  "lineno": 132,
  "symbols_in_volume": [
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model._LinearFactorModelBase": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.asset_pricing.model._LinearFactorModelBase.__init__": {
  "lineno": 396,
  "symbols_in_volume": [
   "bool",
   "linearmodels.iv.data.IVDataLike",
   "linearmodels.typing.ArrayLike",
   "numpy.asarray",
   "numpy.diag",
   "numpy.eye",
   "numpy.linalg.eigh",
   "numpy.linalg.inv",
   "numpy.sqrt",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model._LinearFactorModelBase.__str__": {
  "lineno": 417,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.eye",
   "str",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model._LinearFactorModelBase._boundaries": {
  "lineno": 436,
  "symbols_in_volume": [
   "bool",
   "int",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model._LinearFactorModelBase._validate_additional_data": {
  "lineno": 425,
  "symbols_in_volume": [
   "ValueError",
   "int"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.callback_factory": {
  "lineno": 35,
  "symbols_in_volume": [
   "bool",
   "float",
   "int",
   "linearmodels.asset_pricing.covariance.HeteroskedasticWeight",
   "linearmodels.asset_pricing.covariance.KernelWeight",
   "linearmodels.typing.NDArray",
   "typing.Any",
   "typing.Callable",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.model.callback_factory.callback": {
  "lineno": 46,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "obj",
   "print"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.asset_pricing.results.GMMFactorModelResults": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.asset_pricing.results.GMMFactorModelResults.__init__": {
  "lineno": 322,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.GMMFactorModelResults.iterations": {
  "lineno": 337,
  "symbols_in_volume": [
   "int"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.GMMFactorModelResults.std_errors": {
  "lineno": 326,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.r_",
   "numpy.sqrt",
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults": {
  "lineno": 25,
  "symbols_in_volume": [
   "linearmodels.utility._SummaryStr"
  ],
  "type": "class"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "linearmodels.utility.AttrDict"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults._single_table": {
  "lineno": 152,
  "symbols_in_volume": [
   "bool",
   "enumerate",
   "f",
   "linearmodels.typing.NDArray",
   "linearmodels.utility._str",
   "linearmodels.utility.pval_format",
   "list",
   "numpy.c_",
   "scipy.stats.norm.cdf",
   "scipy.stats.norm.ppf",
   "staticmethod",
   "statsmodels.iolib.summary.SimpleTable",
   "statsmodels.iolib.summary.fmt_params",
   "str",
   "typing.List",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.alphas": {
  "lineno": 226,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.betas": {
  "lineno": 231,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.cov": {
  "lineno": 263,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.cov_estimator": {
  "lineno": 258,
  "symbols_in_volume": [
   "property",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.full_summary": {
  "lineno": 193,
  "symbols_in_volume": [
   "linearmodels.compat.statsmodels.Summary",
   "list",
   "numpy.asarray",
   "property",
   "statsmodels.iolib.summary.SimpleTable"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.j_statistic": {
  "lineno": 270,
  "symbols_in_volume": [
   "linearmodels.utility.WaldTestStatistic",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.name": {
  "lineno": 221,
  "symbols_in_volume": [
   "property",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.nobs": {
  "lineno": 216,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.params": {
  "lineno": 236,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.residual_ss": {
  "lineno": 315,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia": {
  "lineno": 289,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_se": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.sqrt",
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_tstats": {
  "lineno": 300,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.rsquared": {
  "lineno": 305,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.std_errors": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.sqrt",
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.summary": {
  "lineno": 57,
  "symbols_in_volume": [
   "enumerate",
   "f",
   "len",
   "linearmodels.compat.statsmodels.Summary",
   "linearmodels.utility._str",
   "linearmodels.utility.pval_format",
   "list",
   "numpy.abs",
   "numpy.asarray",
   "numpy.c_",
   "property",
   "scipy.stats.norm.cdf",
   "scipy.stats.norm.ppf",
   "statsmodels.iolib.summary.SimpleTable",
   "statsmodels.iolib.summary.fmt_2cols",
   "statsmodels.iolib.summary.fmt_params",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.total_ss": {
  "lineno": 310,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.asset_pricing.results.LinearFactorModelResults.tstats": {
  "lineno": 253,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property_cached.cached_property"
  ],
  "type": "function"
 },
 "linearmodels.compat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.compat.pandas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.compat.pandas.concat": {
  "lineno": 13,
  "symbols_in_volume": [
   "bool",
   "int",
   "linearmodels.typing.AnyPandas",
   "pandas.concat",
   "typing.Iterable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.compat.pandas.get_codes": {
  "lineno": 45,
  "symbols_in_volume": [
   "AttributeError",
   "pandas.CategoricalIndex",
   "pandas.MultiIndex",
   "pandas.Series",
   "pandas.core.arrays.categorical.CategoricalAccessor",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.compat.pandas.is_string_like": {
  "lineno": 29,
  "symbols_in_volume": [
   "bool",
   "isinstance",
   "object",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.compat.pandas.to_numpy": {
  "lineno": 57,
  "symbols_in_volume": [
   "AttributeError",
   "linearmodels.typing.AnyPandas",
   "linearmodels.typing.NDArray",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "linearmodels.compat.statsmodels": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.compat.statsmodels.Summary": {
  "lineno": 4,
  "symbols_in_volume": [
   "statsmodels.iolib.summary.Summary"
  ],
  "type": "class"
 },
 "linearmodels.compat.statsmodels.Summary.as_html": {
  "lineno": 5,
  "symbols_in_volume": [
   "statsmodels.iolib.summary.summary_return",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.conftest.pytest_addoption": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "linearmodels.conftest.pytest_configure": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "linearmodels.conftest.pytest_runtest_setup": {
  "lineno": 22,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "linearmodels.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.datasets.birthweight": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.datasets.birthweight.load": {
  "lineno": 25,
  "symbols_in_volume": [
   "linearmodels.datasets.load",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.datasets.card": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.datasets.card.load": {
  "lineno": 46,
  "symbols_in_volume": [
   "linearmodels.datasets.load",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.datasets.fertility": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.datasets.fertility.load": {
  "lineno": 37,
  "symbols_in_volume": [
   "linearmodels.datasets.load",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.datasets.french": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.datasets.french.load": {
  "lineno": 46,
  "symbols_in_volume": [
   "linearmodels.datasets.load",
   "pandas.DataFrame",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "linearmodels.datasets.fringe": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.datasets.fringe.load": {
  "lineno": 50,
  "symbols_in_volume": [
   "linearmodels.datasets.load",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.datasets.get_path": {
  "lineno": 7,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.split",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.datasets.jobtraining": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.datasets.jobtraining.load": {
  "lineno": 41,
  "symbols_in_volume": [
   "linearmodels.datasets.load",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.datasets.load": {
  "lineno": 11,
  "symbols_in_volume": [
   "get_path",
   "os.path.join",
   "pandas.DataFrame",
   "pandas.read_csv",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.datasets.meps": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.datasets.meps.load": {
  "lineno": 36,
  "symbols_in_volume": [
   "linearmodels.datasets.load",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.datasets.mroz": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.datasets.mroz.load": {
  "lineno": 33,
  "symbols_in_volume": [
   "linearmodels.datasets.load",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.datasets.munnell": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.datasets.munnell.load": {
  "lineno": 21,
  "symbols_in_volume": [
   "linearmodels.datasets.load",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.datasets.wage": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.datasets.wage.load": {
  "lineno": 27,
  "symbols_in_volume": [
   "linearmodels.datasets.load",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.datasets.wage_panel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.datasets.wage_panel.load": {
  "lineno": 23,
  "symbols_in_volume": [
   "linearmodels.datasets.load",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.formula": {
  "lineno": null,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS.from_formula",
   "linearmodels.iv.IVGMM.from_formula",
   "linearmodels.iv.IVGMMCUE.from_formula",
   "linearmodels.iv.IVLIML.from_formula",
   "linearmodels.panel.BetweenOLS.from_formula",
   "linearmodels.panel.FamaMacBeth.from_formula",
   "linearmodels.panel.FirstDifferenceOLS.from_formula",
   "linearmodels.panel.PanelOLS.from_formula",
   "linearmodels.panel.PooledOLS.from_formula",
   "linearmodels.panel.RandomEffects.from_formula",
   "linearmodels.system.IV3SLS.from_formula",
   "linearmodels.system.IVSystemGMM.from_formula",
   "linearmodels.system.SUR.from_formula"
  ],
  "type": "module"
 },
 "linearmodels.iv": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.iv._utility": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.iv._utility.IVFormulaParser": {
  "lineno": 62,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.iv._utility.IVFormulaParser.__init__": {
  "lineno": 80,
  "symbols_in_volume": [
   "int",
   "pandas.DataFrame",
   "patsy.missing.NAAction",
   "str",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv._utility.IVFormulaParser._empty_check": {
  "lineno": 206,
  "symbols_in_volume": [
   "linearmodels.typing.data.OptionalDataFrame",
   "pandas.DataFrame",
   "staticmethod"
  ],
  "type": "function"
 },
 "linearmodels.iv._utility.IVFormulaParser._parse": {
  "lineno": 88,
  "symbols_in_volume": [
   "ValueError",
   "len"
  ],
  "type": "function"
 },
 "linearmodels.iv._utility.IVFormulaParser.components": {
  "lineno": 201,
  "symbols_in_volume": [
   "property",
   "str",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv._utility.IVFormulaParser.data": {
  "lineno": 140,
  "symbols_in_volume": [
   "linearmodels.typing.data.OptionalDataFrame",
   "property",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.iv._utility.IVFormulaParser.dependent": {
  "lineno": 148,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "patsy.highlevel.dmatrix",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv._utility.IVFormulaParser.endog": {
  "lineno": 174,
  "symbols_in_volume": [
   "linearmodels.typing.data.OptionalDataFrame",
   "patsy.highlevel.dmatrix",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv._utility.IVFormulaParser.eval_env": {
  "lineno": 136,
  "symbols_in_volume": [
   "int"
  ],
  "type": "function"
 },
 "linearmodels.iv._utility.IVFormulaParser.exog": {
  "lineno": 161,
  "symbols_in_volume": [
   "linearmodels.typing.data.OptionalDataFrame",
   "patsy.highlevel.dmatrix",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv._utility.IVFormulaParser.instruments": {
  "lineno": 187,
  "symbols_in_volume": [
   "linearmodels.typing.data.OptionalDataFrame",
   "patsy.highlevel.dmatrix",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv._utility.annihilate": {
  "lineno": 43,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "proj"
  ],
  "type": "function"
 },
 "linearmodels.iv._utility.proj": {
  "lineno": 24,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.linalg.pinv"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing": {
  "lineno": null,
  "symbols_in_volume": [
   "ImportError",
   "Interaction",
   "collections.defaultdict",
   "dict",
   "hashlib.sha1",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.ndarray",
   "pandas.DataFrame",
   "str",
   "typing.DefaultDict",
   "typing.Dict",
   "typing.Hashable",
   "typing.TypeVar",
   "typing.Union"
  ],
  "type": "module"
 },
 "linearmodels.iv.absorbing.AbsorbingLS": {
  "lineno": 565,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.iv.absorbing.AbsorbingLS.__init__": {
  "lineno": 648,
  "symbols_in_volume": [
   "Interaction",
   "Interaction.from_frame",
   "TypeError",
   "isinstance",
   "linearmodels.iv.data.IVData",
   "linearmodels.typing.data.ArrayLike",
   "linearmodels.typing.data.OptionalArrayLike",
   "pandas.DataFrame",
   "scipy.sparse.csc_matrix",
   "str",
   "typing.Iterable",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS._check_constant": {
  "lineno": 712,
  "symbols_in_volume": [
   "bool",
   "numpy.any",
   "numpy.ptp",
   "numpy.where"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS._check_shape": {
  "lineno": 729,
  "symbols_in_volume": [
   "ValueError",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS._check_weights": {
  "lineno": 718,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "numpy.nanmean",
   "numpy.ones"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS._drop_missing": {
  "lineno": 696,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.to_numpy",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.missing_warning",
   "numpy.any"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS._f_statistic": {
  "lineno": 1015,
  "symbols_in_volume": [
   "bool",
   "linearmodels.iv.common.f_statistic",
   "linearmodels.iv.common.find_constant",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.InvalidTestStatistic",
   "linearmodels.utility.WaldTestStatistic",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS._first_time_fit": {
  "lineno": 821,
  "symbols_in_volume": [
   "AbsorbingRegressor",
   "bool",
   "float",
   "isinstance",
   "linearmodels.panel.utility.preconditioner",
   "lsmr_annihilate",
   "min",
   "numpy.sqrt",
   "pandas.DataFrame",
   "scipy.sparse.csc_matrix",
   "str",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS._post_estimation": {
  "lineno": 1023,
  "symbols_in_volume": [
   "cov_estimator",
   "cov_estimator.config",
   "cov_estimator.cov",
   "cov_estimator.debiased",
   "cov_estimator.s2",
   "float",
   "linearmodels.compat.pandas.to_numpy",
   "linearmodels.iv.model.ClusteredCovariance",
   "linearmodels.iv.model.HeteroskedasticCovariance",
   "linearmodels.iv.model.HomoskedasticCovariance",
   "linearmodels.iv.model.KernelCovariance",
   "linearmodels.typing.NDArray",
   "max",
   "numpy.average",
   "numpy.linalg.lstsq",
   "numpy.sqrt",
   "pandas.DataFrame",
   "pandas.Series",
   "str",
   "typing.Any",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS._prepare_interactions": {
  "lineno": 803,
  "symbols_in_volume": [
   "Interaction",
   "Interaction.from_frame",
   "TypeError",
   "isinstance",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS.absorbed_dependent": {
  "lineno": 743,
  "symbols_in_volume": [
   "RuntimeError",
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS.absorbed_exog": {
  "lineno": 764,
  "symbols_in_volume": [
   "RuntimeError",
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS.dependent": {
  "lineno": 787,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS.exog": {
  "lineno": 791,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS.fit": {
  "lineno": 877,
  "symbols_in_volume": [
   "bool",
   "cov_estimator",
   "float",
   "linearmodels.compat.pandas.to_numpy",
   "linearmodels.iv.model.COVARIANCE_ESTIMATORS",
   "linearmodels.iv.results.AbsorbingLSResults",
   "linearmodels.panel.utility.check_absorbed",
   "numpy.empty",
   "numpy.linalg.lstsq",
   "str",
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS.has_constant": {
  "lineno": 795,
  "symbols_in_volume": [
   "bool",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS.instruments": {
  "lineno": 799,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS.resids": {
  "lineno": 975,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS.weights": {
  "lineno": 783,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingLS.wresids": {
  "lineno": 992,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.to_numpy",
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingRegressor": {
  "lineno": 469,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.iv.absorbing.AbsorbingRegressor.__init__": {
  "lineno": 485,
  "symbols_in_volume": [
   "Interaction",
   "int",
   "linearmodels.typing.NDArray",
   "pandas.DataFrame",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingRegressor._regressors": {
  "lineno": 541,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.to_numpy",
   "linearmodels.panel.utility.dummy_matrix",
   "numpy.empty",
   "numpy.sqrt",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.diags",
   "scipy.sparse.hstack"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingRegressor.approx_rank": {
  "lineno": 504,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingRegressor.has_constant": {
  "lineno": 499,
  "symbols_in_volume": [
   "bool",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingRegressor.hash": {
  "lineno": 511,
  "symbols_in_volume": [
   "_reset",
   "hashlib.sha1",
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.compat.pandas.to_numpy",
   "numpy.ascontiguousarray",
   "property",
   "sorted",
   "str",
   "tuple",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.AbsorbingRegressor.regressors": {
  "lineno": 537,
  "symbols_in_volume": [
   "property",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.Interaction": {
  "lineno": 254,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "object"
  ],
  "type": "class"
 },
 "linearmodels.iv.absorbing.Interaction.__init__": {
  "lineno": 303,
  "symbols_in_volume": [
   "int",
   "linearmodels.typing.data.OptionalArrayLike",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.Interaction._check_data": {
  "lineno": 321,
  "symbols_in_volume": [
   "ValueError",
   "getattr",
   "linearmodels.iv.data.IVData",
   "max",
   "pandas.DataFrame",
   "pandas.api.types.is_categorical"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.Interaction.cat": {
  "lineno": 346,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.Interaction.cont": {
  "lineno": 351,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.Interaction.drop": {
  "lineno": 360,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.Interaction.from_frame": {
  "lineno": 427,
  "symbols_in_volume": [
   "Interaction",
   "pandas.DataFrame",
   "pandas.api.types.is_categorical",
   "staticmethod"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.Interaction.hash": {
  "lineno": 401,
  "symbols_in_volume": [
   "_reset",
   "hashlib.sha1",
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.compat.pandas.to_numpy",
   "numpy.ascontiguousarray",
   "property",
   "sorted",
   "str",
   "tuple",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.Interaction.isnull": {
  "lineno": 356,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.Interaction.nobs": {
  "lineno": 316,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.Interaction.sparse": {
  "lineno": 364,
  "symbols_in_volume": [
   "category_continuous_interaction",
   "category_interaction",
   "category_product",
   "numpy.empty",
   "property",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.hstack"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing._reset": {
  "lineno": 77,
  "symbols_in_volume": [
   "AttributeError",
   "hashlib.sha1"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.category_continuous_interaction": {
  "lineno": 226,
  "symbols_in_volume": [
   "bool",
   "category_product",
   "isinstance",
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.compat.pandas.to_numpy",
   "linearmodels.panel.utility.preconditioner",
   "linearmodels.typing.AnyPandas",
   "numpy.arange",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.category_interaction": {
  "lineno": 206,
  "symbols_in_volume": [
   "bool",
   "category_product",
   "isinstance",
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.panel.utility.dummy_matrix",
   "numpy.asarray",
   "pandas.Series",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.category_product": {
  "lineno": 158,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "enumerate",
   "filter",
   "isinstance",
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.typing.AnyPandas",
   "min",
   "numpy.dtype",
   "numpy.zeros",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.api.types.is_categorical",
   "sum"
  ],
  "type": "function"
 },
 "linearmodels.iv.absorbing.clear_cache": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "linearmodels.iv.absorbing.lsmr_annihilate": {
  "lineno": 90,
  "symbols_in_volume": [
   "bool",
   "dict",
   "float",
   "hashlib.sha1",
   "linearmodels.typing.NDArray",
   "numpy.ascontiguousarray",
   "numpy.column_stack",
   "numpy.empty_like",
   "range",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.linalg.lsmr",
   "str",
   "typing.Dict",
   "typing.Hashable",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.iv.common.f_statistic": {
  "lineno": 29,
  "symbols_in_volume": [
   "bool",
   "float",
   "int",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.InvalidTestStatistic",
   "linearmodels.utility.WaldTestStatistic",
   "list",
   "numpy.ix_",
   "numpy.linalg.inv",
   "range",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.common.find_constant": {
  "lineno": 10,
  "symbols_in_volume": [
   "int",
   "linearmodels.typing.NDArray",
   "numpy.ptp",
   "numpy.where",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance": {
  "lineno": null,
  "symbols_in_volume": [
   "float",
   "int",
   "mypy_extensions.VarArg",
   "numpy.ndarray",
   "str",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "module"
 },
 "linearmodels.iv.covariance.ClusteredCovariance": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.covariance.ClusteredCovariance.__init__": {
  "lineno": 667,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "len",
   "linearmodels.typing.NDArray",
   "linearmodels.typing.Numeric",
   "map",
   "numpy.arange",
   "numpy.asarray",
   "numpy.unique",
   "str",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.ClusteredCovariance.__str__": {
  "lineno": 696,
  "symbols_in_volume": [
   "str",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.ClusteredCovariance.config": {
  "lineno": 736,
  "symbols_in_volume": [
   "property",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.ClusteredCovariance.s": {
  "lineno": 701,
  "symbols_in_volume": [
   "_cov_cluster",
   "len",
   "linearmodels.typing.NDArray",
   "numpy.int64",
   "numpy.unique",
   "property",
   "rescale"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.ClusteredCovariance.s.rescale": {
  "lineno": 705,
  "symbols_in_volume": [
   "int",
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.HeteroskedasticCovariance": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.covariance.HeteroskedasticCovariance.__init__": {
  "lineno": 453,
  "symbols_in_volume": [
   "bool",
   "linearmodels.typing.NDArray",
   "linearmodels.typing.Numeric",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.HeteroskedasticCovariance.s": {
  "lineno": 467,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.HomoskedasticCovariance": {
  "lineno": 271,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.iv.covariance.HomoskedasticCovariance.__init__": {
  "lineno": 314,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "len",
   "linearmodels.typing.NDArray",
   "linearmodels.typing.Numeric",
   "numpy.linalg.pinv"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.HomoskedasticCovariance.__repr__": {
  "lineno": 347,
  "symbols_in_volume": [
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.HomoskedasticCovariance.__str__": {
  "lineno": 340,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.HomoskedasticCovariance.config": {
  "lineno": 403,
  "symbols_in_volume": [
   "property",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.HomoskedasticCovariance.cov": {
  "lineno": 370,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.linalg.inv",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.HomoskedasticCovariance.debiased": {
  "lineno": 398,
  "symbols_in_volume": [
   "bool",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.HomoskedasticCovariance.s": {
  "lineno": 355,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.HomoskedasticCovariance.s2": {
  "lineno": 388,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.KernelCovariance": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.covariance.KernelCovariance.__init__": {
  "lineno": 546,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "linearmodels.typing.NDArray",
   "linearmodels.typing.Numeric",
   "linearmodels.typing.OptionalNumeric",
   "str",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.KernelCovariance.__str__": {
  "lineno": 567,
  "symbols_in_volume": [
   "str",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.KernelCovariance.config": {
  "lineno": 605,
  "symbols_in_volume": [
   "property",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.KernelCovariance.s": {
  "lineno": 575,
  "symbols_in_volume": [
   "_cov_kernel",
   "kernel_optimal_bandwidth",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.has_constant",
   "numpy.ones",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance._cov_cluster": {
  "lineno": 43,
  "symbols_in_volume": [
   "len",
   "linearmodels.typing.NDArray",
   "numpy.argsort",
   "numpy.r_",
   "numpy.unique",
   "numpy.where",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance._cov_kernel": {
  "lineno": 78,
  "symbols_in_volume": [
   "ValueError",
   "len",
   "linearmodels.typing.NDArray",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.kernel_optimal_bandwidth": {
  "lineno": 204,
  "symbols_in_volume": [
   "ValueError",
   "int",
   "linearmodels.typing.NDArray",
   "min",
   "numpy.arange",
   "numpy.ceil",
   "numpy.empty",
   "numpy.sum",
   "range",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.kernel_weight_bartlett": {
  "lineno": 110,
  "symbols_in_volume": [
   "float",
   "int",
   "linearmodels.typing.NDArray",
   "numpy.arange"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.kernel_weight_parzen": {
  "lineno": 176,
  "symbols_in_volume": [
   "float",
   "int",
   "linearmodels.typing.NDArray",
   "numpy.arange"
  ],
  "type": "function"
 },
 "linearmodels.iv.covariance.kernel_weight_quadratic_spectral": {
  "lineno": 133,
  "symbols_in_volume": [
   "float",
   "int",
   "linearmodels.typing.NDArray",
   "numpy.arange",
   "numpy.cos",
   "numpy.pi",
   "numpy.sin",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "linearmodels.iv.data": {
  "lineno": null,
  "symbols_in_volume": [
   "linearmodels.typing.ArrayLike",
   "typing.Union"
  ],
  "type": "module"
 },
 "linearmodels.iv.data.IVData": {
  "lineno": 38,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.iv.data.IVData.__init__": {
  "lineno": 60,
  "symbols_in_volume": [
   "ImportError",
   "TypeError",
   "ValueError",
   "bool",
   "copy.deepcopy",
   "expand_categoricals",
   "int",
   "isinstance",
   "len",
   "linearmodels.compat.pandas.is_string_like",
   "list",
   "numpy.asarray",
   "numpy.empty",
   "numpy.float64",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.api.types.is_categorical_dtype",
   "pandas.api.types.is_numeric_dtype",
   "pandas.api.types.is_string_dtype",
   "range",
   "set",
   "str",
   "typing.Optional",
   "xarray.DataArray",
   "xarray.concat"
  ],
  "type": "function"
 },
 "linearmodels.iv.data.IVData.cols": {
  "lineno": 185,
  "symbols_in_volume": [
   "property",
   "typing.Any",
   "typing.List"
  ],
  "type": "function"
 },
 "linearmodels.iv.data.IVData.drop": {
  "lineno": 204,
  "symbols_in_volume": [
   "linearmodels.typing.ArrayLike",
   "list",
   "numpy.asarray",
   "pandas.Series"
  ],
  "type": "function"
 },
 "linearmodels.iv.data.IVData.isnull": {
  "lineno": 200,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.data.IVData.labels": {
  "lineno": 195,
  "symbols_in_volume": [
   "int",
   "property",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.data.IVData.ndarray": {
  "lineno": 170,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.data.IVData.ndim": {
  "lineno": 180,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.data.IVData.pandas": {
  "lineno": 165,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.data.IVData.rows": {
  "lineno": 190,
  "symbols_in_volume": [
   "property",
   "typing.Any",
   "typing.List"
  ],
  "type": "function"
 },
 "linearmodels.iv.data.IVData.shape": {
  "lineno": 175,
  "symbols_in_volume": [
   "int",
   "property",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.iv.data.convert_columns": {
  "lineno": 24,
  "symbols_in_volume": [
   "bool",
   "linearmodels.typing.AnyPandas",
   "pandas.Series",
   "pandas.api.types.is_categorical",
   "pandas.get_dummies",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.iv.data.expand_categoricals": {
  "lineno": 32,
  "symbols_in_volume": [
   "bool",
   "convert_columns",
   "linearmodels.compat.pandas.concat",
   "linearmodels.typing.AnyPandas"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.iv.gmm.HeteroskedasticWeightMatrix": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.gmm.HeteroskedasticWeightMatrix.__init__": {
  "lineno": 110,
  "symbols_in_volume": [
   "bool",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.HeteroskedasticWeightMatrix.weight_matrix": {
  "lineno": 113,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.HomoskedasticWeightMatrix": {
  "lineno": 19,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.iv.gmm.HomoskedasticWeightMatrix.__init__": {
  "lineno": 45,
  "symbols_in_volume": [
   "bool",
   "int",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.HomoskedasticWeightMatrix.config": {
  "lineno": 73,
  "symbols_in_volume": [
   "bool",
   "numpy.ndarray",
   "property",
   "str",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.HomoskedasticWeightMatrix.weight_matrix": {
  "lineno": 50,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.IVGMMCovariance": {
  "lineno": 333,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.HomoskedasticCovariance"
  ],
  "type": "class"
 },
 "linearmodels.iv.gmm.IVGMMCovariance.__init__": {
  "lineno": 390,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "linearmodels.typing.NDArray",
   "str",
   "super",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.IVGMMCovariance.__str__": {
  "lineno": 420,
  "symbols_in_volume": [
   "len",
   "numpy.asarray",
   "numpy.unique",
   "str",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.IVGMMCovariance.config": {
  "lineno": 458,
  "symbols_in_volume": [
   "bool",
   "numpy.ndarray",
   "property",
   "str",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.IVGMMCovariance.cov": {
  "lineno": 441,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.linalg.inv",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.KernelWeightMatrix": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.gmm.KernelWeightMatrix.__init__": {
  "lineno": 182,
  "symbols_in_volume": [
   "bool",
   "int",
   "linearmodels.iv.covariance.KERNEL_LOOKUP",
   "str",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.KernelWeightMatrix.bandwidth": {
  "lineno": 250,
  "symbols_in_volume": [
   "int",
   "property",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.KernelWeightMatrix.config": {
  "lineno": 233,
  "symbols_in_volume": [
   "bool",
   "numpy.ndarray",
   "property",
   "str",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.KernelWeightMatrix.weight_matrix": {
  "lineno": 197,
  "symbols_in_volume": [
   "linearmodels.iv.covariance._cov_kernel",
   "linearmodels.iv.covariance.kernel_optimal_bandwidth",
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.OneWayClusteredWeightMatrix": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.gmm.OneWayClusteredWeightMatrix.__init__": {
  "lineno": 271,
  "symbols_in_volume": [
   "bool",
   "linearmodels.typing.NDArray",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.OneWayClusteredWeightMatrix.config": {
  "lineno": 316,
  "symbols_in_volume": [
   "bool",
   "numpy.ndarray",
   "property",
   "str",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.gmm.OneWayClusteredWeightMatrix.weight_matrix": {
  "lineno": 277,
  "symbols_in_volume": [
   "ValueError",
   "len",
   "linearmodels.iv.covariance._cov_cluster",
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "numpy.unique"
  ],
  "type": "function"
 },
 "linearmodels.iv.model": {
  "lineno": null,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.ClusteredCovariance",
   "linearmodels.iv.covariance.HeteroskedasticCovariance",
   "linearmodels.iv.covariance.HomoskedasticCovariance",
   "linearmodels.iv.covariance.KernelCovariance",
   "linearmodels.iv.gmm.HeteroskedasticWeightMatrix",
   "linearmodels.iv.gmm.HomoskedasticWeightMatrix",
   "linearmodels.iv.gmm.KernelWeightMatrix",
   "linearmodels.iv.gmm.OneWayClusteredWeightMatrix",
   "linearmodels.iv.results.IVGMMResults",
   "linearmodels.iv.results.IVResults",
   "linearmodels.iv.results.OLSResults",
   "typing.Type",
   "typing.TypeVar",
   "typing.Union"
  ],
  "type": "module"
 },
 "linearmodels.iv.model.IV2SLS": {
  "lineno": 800,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.model.IV2SLS.__init__": {
  "lineno": 839,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVDataLike",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.model.IV2SLS.from_formula": {
  "lineno": 853,
  "symbols_in_volume": [
   "IV2SLS",
   "linearmodels.iv._utility.IVFormulaParser",
   "linearmodels.iv.data.IVDataLike",
   "pandas.DataFrame",
   "staticmethod",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.model.IVGMM": {
  "lineno": 997,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.model.IVGMM.__init__": {
  "lineno": 1048,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVDataLike",
   "str",
   "super",
   "typing.Any",
   "typing.Optional",
   "weight_matrix_estimator"
  ],
  "type": "function"
 },
 "linearmodels.iv.model.IVGMM._gmm_post_estimation": {
  "lineno": 1251,
  "symbols_in_volume": [
   "int",
   "linearmodels.typing.NDArray",
   "pandas.DataFrame",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.model.IVGMM.estimate_parameters": {
  "lineno": 1124,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.linalg.inv",
   "staticmethod"
  ],
  "type": "function"
 },
 "linearmodels.iv.model.IVGMM.fit": {
  "lineno": 1152,
  "symbols_in_volume": [
   "IV2SLS",
   "bool",
   "cov_estimator",
   "float",
   "int",
   "linearmodels.iv.gmm.IVGMMCovariance",
   "linearmodels.iv.results.IVGMMResults",
   "linearmodels.iv.results.OLSResults",
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "numpy.eye",
   "numpy.linalg.inv",
   "str",
   "typing.Any",
   "typing.Union",
   "weight_matrix"
  ],
  "type": "function"
 },
 "linearmodels.iv.model.IVGMM.from_formula": {
  "lineno": 1067,
  "symbols_in_volume": [
   "_gmm_model_from_formula",
   "isinstance",
   "linearmodels.iv.data.IVDataLike",
   "pandas.DataFrame",
   "staticmethod",
   "str",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.model.IVGMMCUE": {
  "lineno": 1267,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.model.IVGMMCUE.__init__": {
  "lineno": 1316,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVDataLike",
   "str",
   "super",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.model.IVGMMCUE.estimate_parameters": {
  "lineno": 1442,
  "symbols_in_volume": [
   "bool",
   "int",
   "linearmodels.typing.NDArray",
   "scipy.optimize.minimize",
   "str",
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.iv.model.IVGMMCUE.fit": {
  "lineno": 1495,
  "symbols_in_volume": [
   "IVGMM",
   "ValueError",
   "bool",
   "cov_estimator",
   "len",
   "linearmodels.iv.gmm.IVGMMCovariance",
   "linearmodels.iv.results.IVGMMResults",
   "linearmodels.iv.results.OLSResults",
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "numpy.linalg.inv",
   "pandas.Series",
   "str",
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Union",
   "weight_matrix"
  ],
  "type": "function"
 },
 "linearmodels.iv.model.IVGMMCUE.from_formula": {
  "lineno": 1340,
  "symbols_in_volume": [
   "_gmm_model_from_formula",
   "isinstance",
   "linearmodels.iv.data.IVDataLike",
   "pandas.DataFrame",
   "staticmethod",
   "str",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.model.IVGMMCUE.j": {
  "lineno": 1397,
  "symbols_in_volume": [
   "float",
   "linearmodels.typing.NDArray",
   "numpy.linalg.inv",
   "weight_matrix"
  ],
  "type": "function"
 },
 "linearmodels.iv.model.IVLIML": {
  "lineno": 661,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.model.IVLIML.__init__": {
  "lineno": 718,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVDataLike",
   "linearmodels.typing.Numeric",
   "linearmodels.typing.OptionalNumeric",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.model.IVLIML.from_formula": {
  "lineno": 739,
  "symbols_in_volume": [
   "IVLIML",
   "float",
   "linearmodels.iv._utility.IVFormulaParser",
   "linearmodels.iv.data.IVDataLike",
   "linearmodels.typing.OptionalNumeric",
   "pandas.DataFrame",
   "staticmethod",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVGMMBase": {
  "lineno": 901,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.model._IVGMMBase.__init__": {
  "lineno": 952,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVDataLike",
   "str",
   "super",
   "typing.Any",
   "typing.Optional",
   "weight_matrix_estimator"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVGMMBase._gmm_post_estimation": {
  "lineno": 971,
  "symbols_in_volume": [
   "int",
   "linearmodels.typing.NDArray",
   "pandas.DataFrame",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVGMMBase._j_statistic": {
  "lineno": 986,
  "symbols_in_volume": [
   "float",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.WaldTestStatistic"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVLSModelBase": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.model._IVLSModelBase.__init__": {
  "lineno": 512,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVDataLike",
   "linearmodels.typing.Numeric",
   "linearmodels.typing.OptionalNumeric",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVLSModelBase._estimate_kappa": {
  "lineno": 566,
  "symbols_in_volume": [
   "float",
   "linearmodels.utility.inv_sqrth",
   "min",
   "numpy.c_",
   "numpy.linalg.eigvalsh",
   "numpy.linalg.pinv"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVLSModelBase.estimate_parameters": {
  "lineno": 533,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "linearmodels.typing.Numeric",
   "numpy.linalg.inv",
   "numpy.linalg.pinv",
   "staticmethod"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVLSModelBase.fit": {
  "lineno": 582,
  "symbols_in_volume": [
   "bool",
   "cov_estimator",
   "linearmodels.iv.results.IVResults",
   "linearmodels.iv.results.OLSResults",
   "str",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVModelBase": {
  "lineno": 99,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.iv.model._IVModelBase.__init__": {
  "lineno": 156,
  "symbols_in_volume": [
   "UserWarning",
   "ValueError",
   "hasattr",
   "int",
   "linearmodels.iv.data.IVData",
   "linearmodels.iv.data.IVDataLike",
   "linearmodels.typing.Numeric",
   "linearmodels.typing.OptionalNumeric",
   "numpy.any",
   "numpy.array",
   "numpy.c_",
   "numpy.isscalar",
   "numpy.nanmean",
   "numpy.ones",
   "numpy.sqrt",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVModelBase._drop_missing": {
  "lineno": 331,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.missing_warning",
   "numpy.all",
   "numpy.any",
   "numpy.column_stack"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVModelBase._f_statistic": {
  "lineno": 401,
  "symbols_in_volume": [
   "bool",
   "linearmodels.iv.common.f_statistic",
   "linearmodels.iv.common.find_constant",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.InvalidTestStatistic",
   "linearmodels.utility.WaldTestStatistic",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVModelBase._post_estimation": {
  "lineno": 408,
  "symbols_in_volume": [
   "float",
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "numpy.average",
   "numpy.sqrt",
   "pandas.DataFrame",
   "pandas.Series",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVModelBase._validate_inputs": {
  "lineno": 313,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.utility.has_constant",
   "numpy.linalg.matrix_rank"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVModelBase.formula": {
  "lineno": 308,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVModelBase.has_constant": {
  "lineno": 386,
  "symbols_in_volume": [
   "bool",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVModelBase.isnull": {
  "lineno": 391,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVModelBase.notnull": {
  "lineno": 396,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.logical_not",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVModelBase.predict": {
  "lineno": 232,
  "symbols_in_volume": [
   "ValueError",
   "int",
   "linearmodels.iv._utility.IVFormulaParser",
   "linearmodels.iv.data.IVData",
   "linearmodels.iv.data.IVDataLike",
   "linearmodels.typing.ArrayLike",
   "numpy.asarray",
   "numpy.atleast_2d",
   "pandas.DataFrame",
   "pandas.concat",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVModelBase.resids": {
  "lineno": 370,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._IVModelBase.wresids": {
  "lineno": 349,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._OLS": {
  "lineno": 1584,
  "symbols_in_volume": [
   "IVLIML"
  ],
  "type": "class"
 },
 "linearmodels.iv.model._OLS.__init__": {
  "lineno": 1608,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVDataLike",
   "linearmodels.iv.results.OLSResults",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.model._gmm_model_from_formula": {
  "lineno": 1621,
  "symbols_in_volume": [
   "IVGMM",
   "cls",
   "linearmodels.iv._utility.IVFormulaParser",
   "linearmodels.iv.data.IVDataLike",
   "pandas.DataFrame",
   "str",
   "typing.Any",
   "typing.Optional",
   "typing.Type",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.results": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "module"
 },
 "linearmodels.iv.results.AbsorbingLSResults": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.results.AbsorbingLSResults.__init__": {
  "lineno": 604,
  "symbols_in_volume": [
   "str",
   "super",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.AbsorbingLSResults._top_right": {
  "lineno": 611,
  "symbols_in_volume": [
   "linearmodels.utility._str",
   "linearmodels.utility.pval_format",
   "numpy.isnan",
   "round",
   "str",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.AbsorbingLSResults.absorbed_effects": {
  "lineno": 631,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.AbsorbingLSResults.absorbed_rsquared": {
  "lineno": 626,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.AbsorbingLSResults.df_absorbed": {
  "lineno": 636,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.FirstStageResults": {
  "lineno": 642,
  "symbols_in_volume": [
   "linearmodels.utility._SummaryStr"
  ],
  "type": "class"
 },
 "linearmodels.iv.results.FirstStageResults.__init__": {
  "lineno": 647,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "numpy.c_",
   "pandas.DataFrame",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.FirstStageResults.diagnostics": {
  "lineno": 667,
  "symbols_in_volume": [
   "float",
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.iv.model._OLS",
   "linearmodels.utility.WaldTestStatistic",
   "numpy.linalg.inv",
   "numpy.linalg.pinv",
   "numpy.sqrt",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.to_numeric",
   "property_cached.cached_property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.FirstStageResults.individual": {
  "lineno": 756,
  "symbols_in_volume": [
   "linearmodels.iv.model._OLS",
   "numpy.c_",
   "numpy.sqrt",
   "pandas.DataFrame",
   "property_cached.cached_property",
   "str",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.FirstStageResults.summary": {
  "lineno": 780,
  "symbols_in_volume": [
   "len",
   "linearmodels.compat.statsmodels.Summary",
   "linearmodels.utility._str",
   "list",
   "numpy.array",
   "numpy.c_",
   "property",
   "range",
   "statsmodels.iolib.summary.SimpleTable",
   "statsmodels.iolib.table.default_txt_fmt.copy",
   "stub_concat",
   "table_concat"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVGMMResults": {
  "lineno": 1370,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.results.IVGMMResults.__init__": {
  "lineno": 1382,
  "symbols_in_volume": [
   "str",
   "super",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVGMMResults.c_stat": {
  "lineno": 1440,
  "symbols_in_volume": [
   "TypeError",
   "isinstance",
   "linearmodels.iv.IVGMM",
   "linearmodels.iv.model.IVGMM",
   "linearmodels.iv.model.IVGMMCUE",
   "linearmodels.utility.WaldTestStatistic",
   "list",
   "numpy.asarray",
   "numpy.c_",
   "numpy.empty",
   "str",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVGMMResults.iterations": {
  "lineno": 1397,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVGMMResults.j_stat": {
  "lineno": 1412,
  "symbols_in_volume": [
   "linearmodels.utility.InvalidTestStatistic",
   "linearmodels.utility.WaldTestStatistic",
   "property",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVGMMResults.weight_config": {
  "lineno": 1407,
  "symbols_in_volume": [
   "property",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVGMMResults.weight_matrix": {
  "lineno": 1392,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVGMMResults.weight_type": {
  "lineno": 1402,
  "symbols_in_volume": [
   "property",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVModelComparison": {
  "lineno": 1532,
  "symbols_in_volume": [
   "linearmodels.utility._ModelComparison"
  ],
  "type": "class"
 },
 "linearmodels.iv.results.IVModelComparison.__init__": {
  "lineno": 1548,
  "symbols_in_volume": [
   "str",
   "super",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVModelComparison.cov_estimator": {
  "lineno": 1566,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVModelComparison.estimator_method": {
  "lineno": 1561,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVModelComparison.rsquared_adj": {
  "lineno": 1556,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVModelComparison.summary": {
  "lineno": 1571,
  "symbols_in_volume": [
   "getattr",
   "len",
   "linearmodels.compat.statsmodels.Summary",
   "linearmodels.utility._str",
   "list",
   "map",
   "max",
   "pandas.Series",
   "pandas.concat",
   "property",
   "range",
   "statsmodels.iolib.summary.SimpleTable",
   "statsmodels.iolib.table.default_txt_fmt.copy",
   "str",
   "stub_concat",
   "table_concat",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVResults": {
  "lineno": 887,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.results.IVResults.__init__": {
  "lineno": 899,
  "symbols_in_volume": [
   "str",
   "super",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVResults._endogeneity_setup": {
  "lineno": 999,
  "symbols_in_volume": [
   "TypeError",
   "int",
   "isinstance",
   "linearmodels.iv.IV2SLS",
   "linearmodels.iv._utility.proj",
   "list",
   "numpy.c_",
   "numpy.empty",
   "numpy.ndarray",
   "str",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVResults.anderson_rubin": {
  "lineno": 1298,
  "symbols_in_volume": [
   "linearmodels.utility.InvalidTestStatistic",
   "linearmodels.utility.WaldTestStatistic",
   "numpy.log",
   "property_cached.cached_property",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVResults.basmann": {
  "lineno": 953,
  "symbols_in_volume": [
   "linearmodels.utility.InvalidTestStatistic",
   "linearmodels.utility.WaldTestStatistic",
   "property_cached.cached_property",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVResults.basmann_f": {
  "lineno": 1333,
  "symbols_in_volume": [
   "linearmodels.utility.InvalidTestStatistic",
   "linearmodels.utility.WaldTestStatistic",
   "property_cached.cached_property",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVResults.durbin": {
  "lineno": 1037,
  "symbols_in_volume": [
   "float",
   "linearmodels.utility.WaldTestStatistic",
   "str",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVResults.sargan": {
  "lineno": 905,
  "symbols_in_volume": [
   "linearmodels.iv._utility.annihilate",
   "linearmodels.utility.InvalidTestStatistic",
   "linearmodels.utility.WaldTestStatistic",
   "property_cached.cached_property",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVResults.wooldridge_overid": {
  "lineno": 1245,
  "symbols_in_volume": [
   "linearmodels.iv._utility.annihilate",
   "linearmodels.iv._utility.proj",
   "linearmodels.iv.model._OLS",
   "linearmodels.utility.InvalidTestStatistic",
   "linearmodels.utility.WaldTestStatistic",
   "numpy.c_",
   "numpy.ones",
   "property_cached.cached_property",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVResults.wooldridge_regression": {
  "lineno": 1201,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv._utility.annihilate",
   "linearmodels.iv.model._OLS",
   "linearmodels.utility.WaldTestStatistic",
   "numpy.c_",
   "numpy.linalg.inv",
   "property_cached.cached_property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVResults.wooldridge_score": {
  "lineno": 1157,
  "symbols_in_volume": [
   "linearmodels.iv._utility.annihilate",
   "linearmodels.iv.model._OLS",
   "linearmodels.utility.WaldTestStatistic",
   "numpy.ones",
   "property_cached.cached_property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.IVResults.wu_hausman": {
  "lineno": 1094,
  "symbols_in_volume": [
   "float",
   "linearmodels.utility.WaldTestStatistic",
   "str",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.OLSResults": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.results.OLSResults.__init__": {
  "lineno": 487,
  "symbols_in_volume": [
   "str",
   "super",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.OLSResults._out_of_sample": {
  "lineno": 492,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "linearmodels.typing.ArrayLike",
   "pandas.DataFrame",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.OLSResults._update_extra_text": {
  "lineno": 579,
  "symbols_in_volume": [
   "str",
   "typing.List"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.OLSResults.kappa": {
  "lineno": 574,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.OLSResults.predict": {
  "lineno": 510,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "len",
   "linearmodels.typing.OptionalArrayLike",
   "pandas.DataFrame",
   "pandas.concat",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._CommonIVResults": {
  "lineno": 855,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.iv.results._CommonIVResults.__init__": {
  "lineno": 860,
  "symbols_in_volume": [
   "str",
   "super",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._CommonIVResults.first_stage": {
  "lineno": 866,
  "symbols_in_volume": [
   "FirstStageResults",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase": {
  "lineno": 67,
  "symbols_in_volume": [
   "linearmodels.utility._SummaryStr"
  ],
  "type": "class"
 },
 "linearmodels.iv.results._LSModelResultsBase.__init__": {
  "lineno": 79,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase._top_right": {
  "lineno": 291,
  "symbols_in_volume": [
   "linearmodels.utility._str",
   "linearmodels.utility.pval_format",
   "numpy.isnan",
   "str",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase._update_extra_text": {
  "lineno": 398,
  "symbols_in_volume": [
   "str",
   "typing.List"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.conf_int": {
  "lineno": 264,
  "symbols_in_volume": [
   "float",
   "numpy.asarray",
   "pandas.DataFrame",
   "scipy.stats.norm.ppf",
   "scipy.stats.t.ppf"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.cov": {
  "lineno": 112,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.cov_config": {
  "lineno": 102,
  "symbols_in_volume": [
   "property",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.cov_estimator": {
  "lineno": 107,
  "symbols_in_volume": [
   "property",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.cov_type": {
  "lineno": 183,
  "symbols_in_volume": [
   "property",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.debiased": {
  "lineno": 231,
  "symbols_in_volume": [
   "bool",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.df_model": {
  "lineno": 162,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.df_resid": {
  "lineno": 157,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.f_statistic": {
  "lineno": 236,
  "symbols_in_volume": [
   "linearmodels.utility.WaldTestStatistic",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.fitted_values": {
  "lineno": 127,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.has_constant": {
  "lineno": 167,
  "symbols_in_volume": [
   "bool",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.idiosyncratic": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.method": {
  "lineno": 259,
  "symbols_in_volume": [
   "property",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.model_ss": {
  "lineno": 216,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.nobs": {
  "lineno": 152,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.params": {
  "lineno": 117,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.pvalues": {
  "lineno": 199,
  "symbols_in_volume": [
   "abs",
   "pandas.Series",
   "property_cached.cached_property",
   "scipy.stats.norm.cdf",
   "scipy.stats.t.cdf"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.resid_ss": {
  "lineno": 221,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.resids": {
  "lineno": 122,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.rsquared": {
  "lineno": 172,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.rsquared_adj": {
  "lineno": 177,
  "symbols_in_volume": [
   "float",
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.s2": {
  "lineno": 226,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.std_errors": {
  "lineno": 188,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.sqrt",
   "pandas.Series",
   "property_cached.cached_property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.summary": {
  "lineno": 306,
  "symbols_in_volume": [
   "enumerate",
   "f",
   "linearmodels.compat.statsmodels.Summary",
   "linearmodels.utility._str",
   "linearmodels.utility.pval_format",
   "list",
   "numpy.c_",
   "property",
   "statsmodels.iolib.summary.SimpleTable",
   "statsmodels.iolib.summary.fmt_2cols",
   "statsmodels.iolib.summary.fmt_params"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.total_ss": {
  "lineno": 211,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.tstats": {
  "lineno": 194,
  "symbols_in_volume": [
   "pandas.Series",
   "property_cached.cached_property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.wald_test": {
  "lineno": 401,
  "symbols_in_volume": [
   "linearmodels.utility.WaldTestStatistic",
   "linearmodels.utility.quadratic_form_test",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "str",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.results._LSModelResultsBase.wresids": {
  "lineno": 147,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.compare": {
  "lineno": 1671,
  "symbols_in_volume": [
   "IVModelComparison",
   "str",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.stub_concat": {
  "lineno": 44,
  "symbols_in_volume": [
   "len",
   "map",
   "max",
   "str",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "linearmodels.iv.results.table_concat": {
  "lineno": 53,
  "symbols_in_volume": [
   "len",
   "list",
   "map",
   "numpy.array",
   "str",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "linearmodels.panel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.panel.covariance": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Type",
   "typing.Union"
  ],
  "type": "module"
 },
 "linearmodels.panel.covariance.ACCovariance": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.panel.covariance.ACCovariance.__init__": {
  "lineno": 529,
  "symbols_in_volume": [
   "bool",
   "float",
   "int",
   "linearmodels.typing.NDArray",
   "str",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.ACCovariance._single_cov": {
  "lineno": 549,
  "symbols_in_volume": [
   "float",
   "linearmodels.iv.covariance.KERNEL_LOOKUP",
   "linearmodels.iv.covariance._cov_kernel",
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.ACCovariance.cov": {
  "lineno": 554,
  "symbols_in_volume": [
   "isinstance",
   "len",
   "linearmodels.typing.NDArray",
   "max",
   "numpy.floor",
   "numpy.linalg.inv",
   "numpy.unique",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "property_cached.cached_property"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.ClusteredCovariance": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.panel.covariance.ClusteredCovariance.__init__": {
  "lineno": 268,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "int",
   "linearmodels.iv.covariance.CLUSTER_ERR.format",
   "linearmodels.typing.NDArray",
   "numpy.arange",
   "numpy.asarray",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.ClusteredCovariance._calc_group_debias": {
  "lineno": 297,
  "symbols_in_volume": [
   "float",
   "linearmodels.typing.NDArray",
   "numpy.unique",
   "staticmethod"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.ClusteredCovariance.cov": {
  "lineno": 303,
  "symbols_in_volume": [
   "linearmodels.iv.covariance._cov_cluster",
   "linearmodels.typing.NDArray",
   "numpy.any",
   "numpy.arange",
   "numpy.argsort",
   "numpy.cumsum",
   "numpy.lexsort",
   "numpy.linalg.inv",
   "numpy.r_",
   "property_cached.cached_property"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.CovarianceManager": {
  "lineno": 606,
  "symbols_in_volume": [
   "object",
   "str",
   "typing.Dict"
  ],
  "type": "class"
 },
 "linearmodels.panel.covariance.CovarianceManager.__getitem__": {
  "lineno": 627,
  "symbols_in_volume": [
   "KeyError",
   "ValueError",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.CovarianceManager.__init__": {
  "lineno": 621,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.DriscollKraay": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.panel.covariance.DriscollKraay.__init__": {
  "lineno": 411,
  "symbols_in_volume": [
   "bool",
   "float",
   "int",
   "linearmodels.typing.NDArray",
   "str",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.DriscollKraay.cov": {
  "lineno": 432,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.KERNEL_LOOKUP",
   "linearmodels.iv.covariance._cov_kernel",
   "linearmodels.typing.NDArray",
   "numpy.floor",
   "numpy.linalg.inv",
   "pandas.DataFrame",
   "property_cached.cached_property"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.FamaMacBethCovariance": {
  "lineno": 639,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.panel.covariance.FamaMacBethCovariance.__init__": {
  "lineno": 669,
  "symbols_in_volume": [
   "bool",
   "float",
   "linearmodels.typing.NDArray",
   "pandas.DataFrame",
   "str",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.FamaMacBethCovariance.all_params": {
  "lineno": 714,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.FamaMacBethCovariance.bandwidth": {
  "lineno": 689,
  "symbols_in_volume": [
   "float",
   "linearmodels.iv.covariance.kernel_optimal_bandwidth",
   "numpy.all",
   "numpy.asarray",
   "numpy.isfinite",
   "numpy.sum",
   "property_cached.cached_property"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.FamaMacBethCovariance.cov": {
  "lineno": 701,
  "symbols_in_volume": [
   "bool",
   "int",
   "linearmodels.iv.covariance.KERNEL_LOOKUP",
   "linearmodels.iv.covariance._cov_kernel",
   "linearmodels.typing.NDArray",
   "numpy.all",
   "numpy.asarray",
   "numpy.isfinite",
   "property_cached.cached_property"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.HeteroskedasticCovariance": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.panel.covariance.HeteroskedasticCovariance.__init__": {
  "lineno": 177,
  "symbols_in_volume": [
   "bool",
   "int",
   "linearmodels.typing.NDArray",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.HeteroskedasticCovariance.cov": {
  "lineno": 193,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.linalg.inv",
   "property_cached.cached_property"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.HomoskedasticCovariance": {
  "lineno": 30,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.panel.covariance.HomoskedasticCovariance.__init__": {
  "lineno": 77,
  "symbols_in_volume": [
   "bool",
   "int",
   "linearmodels.typing.NDArray",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.HomoskedasticCovariance.cov": {
  "lineno": 118,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.linalg.inv",
   "property_cached.cached_property"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.HomoskedasticCovariance.deferred_cov": {
  "lineno": 125,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.HomoskedasticCovariance.eps": {
  "lineno": 107,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.HomoskedasticCovariance.name": {
  "lineno": 102,
  "symbols_in_volume": [
   "property",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.HomoskedasticCovariance.s2": {
  "lineno": 112,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.covariance.setup_covariance_estimator": {
  "lineno": 727,
  "symbols_in_volume": [
   "ACCovariance",
   "ClusteredCovariance",
   "DriscollKraay",
   "HeteroskedasticCovariance",
   "HomoskedasticCovariance",
   "bool",
   "int",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.get_array_like",
   "linearmodels.utility.get_bool",
   "linearmodels.utility.get_float",
   "linearmodels.utility.get_string",
   "str",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.data": {
  "lineno": null,
  "symbols_in_volume": [
   "PanelData",
   "linearmodels.typing.ArrayLike",
   "typing.Union"
  ],
  "type": "module"
 },
 "linearmodels.panel.data.PanelData": {
  "lineno": 109,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.panel.data.PanelData.__init__": {
  "lineno": 155,
  "symbols_in_volume": [
   "ImportError",
   "TypeError",
   "ValueError",
   "bool",
   "expand_categoricals",
   "int",
   "isinstance",
   "len",
   "linearmodels.utility.panel_to_frame",
   "list",
   "numpy.asarray",
   "numpy.float64",
   "numpy.log10",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.Series",
   "pandas.api.types.is_datetime64_any_dtype",
   "pandas.api.types.is_numeric_dtype",
   "range",
   "str",
   "typing.Hashable",
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.__repr__": {
  "lineno": 556,
  "symbols_in_volume": [
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.__str__": {
  "lineno": 553,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData._demean_both": {
  "lineno": 373,
  "symbols_in_volume": [
   "PanelData",
   "numpy.linalg.lstsq",
   "pandas.DataFrame",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData._demean_both_low_mem": {
  "lineno": 365,
  "symbols_in_volume": [
   "PanelData",
   "numpy.c_",
   "pandas.DataFrame",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData._minimize_multiindex": {
  "lineno": 660,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.utility.ensure_unique_column",
   "list",
   "pandas.DataFrame",
   "staticmethod"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData._repr_html_": {
  "lineno": 565,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.copy": {
  "lineno": 595,
  "symbols_in_volume": [
   "PanelData"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.count": {
  "lineno": 568,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.dataframe": {
  "lineno": 255,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.demean": {
  "lineno": 490,
  "symbols_in_volume": [
   "PanelData",
   "ValueError",
   "bool",
   "numpy.asarray",
   "numpy.ndarray",
   "numpy.sqrt",
   "str",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.drop": {
  "lineno": 270,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "pandas.Series",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.dummies": {
  "lineno": 673,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "linearmodels.compat.pandas.get_codes",
   "numpy.float64",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.get_dummies",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.entities": {
  "lineno": 333,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.typing.Label",
   "list",
   "property",
   "typing.List"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.entity_ids": {
  "lineno": 339,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.first_difference": {
  "lineno": 639,
  "symbols_in_volume": [
   "PanelData",
   "linearmodels.utility.panel_to_frame"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.general_demean": {
  "lineno": 399,
  "symbols_in_volume": [
   "PanelData",
   "demean_pass",
   "int",
   "isinstance",
   "list",
   "numpy.abs",
   "numpy.asarray",
   "numpy.int64",
   "numpy.max",
   "numpy.maximum",
   "numpy.ones",
   "numpy.ptp",
   "numpy.sqrt",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.general_demean.demean_pass": {
  "lineno": 447,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "pandas.DataFrame",
   "range",
   "weighted_group_mean"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.general_demean.weighted_group_mean": {
  "lineno": 436,
  "symbols_in_volume": [
   "int",
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.index": {
  "lineno": 588,
  "symbols_in_volume": [
   "isinstance",
   "pandas.MultiIndex",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.isnull": {
  "lineno": 302,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.mean": {
  "lineno": 604,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.ndim": {
  "lineno": 297,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.nentity": {
  "lineno": 317,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.nobs": {
  "lineno": 307,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.nvar": {
  "lineno": 312,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.panel": {
  "lineno": 247,
  "symbols_in_volume": [
   "_Panel",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.shape": {
  "lineno": 286,
  "symbols_in_volume": [
   "int",
   "pandas.Index",
   "property",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.time": {
  "lineno": 327,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.typing.Label",
   "list",
   "property",
   "typing.List"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.time_ids": {
  "lineno": 352,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.values2d": {
  "lineno": 260,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.values3d": {
  "lineno": 265,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.PanelData.vars": {
  "lineno": 322,
  "symbols_in_volume": [
   "linearmodels.typing.Label",
   "list",
   "property",
   "typing.List"
  ],
  "type": "function"
 },
 "linearmodels.panel.data._Panel": {
  "lineno": 22,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.panel.data._Panel.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "isinstance",
   "len",
   "linearmodels.compat.pandas.get_codes",
   "numpy.asarray",
   "numpy.reshape",
   "numpy.swapaxes",
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex",
   "pandas.MultiIndex.from_product"
  ],
  "type": "function"
 },
 "linearmodels.panel.data._Panel.from_array": {
  "lineno": 53,
  "symbols_in_volume": [
   "classmethod",
   "cls",
   "itertools.product",
   "len",
   "linearmodels.typing.Label",
   "linearmodels.typing.NDArray",
   "list",
   "numpy.reshape",
   "numpy.swapaxes",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_tuples",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "linearmodels.panel.data._Panel.items": {
  "lineno": 74,
  "symbols_in_volume": [
   "pandas.Index",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data._Panel.major_axis": {
  "lineno": 78,
  "symbols_in_volume": [
   "pandas.Index",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data._Panel.minor_axis": {
  "lineno": 82,
  "symbols_in_volume": [
   "pandas.Index",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data._Panel.shape": {
  "lineno": 70,
  "symbols_in_volume": [
   "int",
   "property",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.panel.data._Panel.to_frame": {
  "lineno": 90,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.panel.data._Panel.values": {
  "lineno": 86,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.convert_columns": {
  "lineno": 94,
  "symbols_in_volume": [
   "bool",
   "linearmodels.compat.pandas.is_string_like",
   "linearmodels.typing.AnyPandas",
   "pandas.Series",
   "pandas.api.types.is_categorical",
   "pandas.api.types.is_string_dtype",
   "pandas.get_dummies",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.data.expand_categoricals": {
  "lineno": 105,
  "symbols_in_volume": [
   "bool",
   "convert_columns",
   "linearmodels.compat.pandas.concat",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.panel.model": {
  "lineno": null,
  "symbols_in_volume": [
   "linearmodels.panel.covariance.ACCovariance",
   "linearmodels.panel.covariance.ClusteredCovariance",
   "linearmodels.panel.covariance.DriscollKraay",
   "linearmodels.panel.covariance.HeteroskedasticCovariance",
   "linearmodels.panel.covariance.HomoskedasticCovariance",
   "typing.Type",
   "typing.Union"
  ],
  "type": "module"
 },
 "linearmodels.panel.model.AmbiguityError": {
  "lineno": 179,
  "symbols_in_volume": [
   "Exception"
  ],
  "type": "class"
 },
 "linearmodels.panel.model.BetweenOLS": {
  "lineno": 1803,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.panel.model.BetweenOLS.__init__": {
  "lineno": 1829,
  "symbols_in_volume": [
   "linearmodels.panel.covariance.ClusteredCovariance",
   "linearmodels.panel.covariance.CovarianceManager",
   "linearmodels.panel.covariance.HeteroskedasticCovariance",
   "linearmodels.panel.covariance.HomoskedasticCovariance",
   "linearmodels.panel.data.PanelDataLike",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.BetweenOLS._setup_clusters": {
  "lineno": 1844,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "float",
   "linearmodels.panel.data.PanelDataLike",
   "linearmodels.typing.NDArray",
   "numpy.any",
   "numpy.int64",
   "numpy.nanmax",
   "numpy.nanmin",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.BetweenOLS.fit": {
  "lineno": 1870,
  "symbols_in_volume": [
   "bool",
   "dict",
   "float",
   "int",
   "isinstance",
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.panel.covariance.setup_covariance_estimator",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.results.PanelResults",
   "linearmodels.typing.NDArray",
   "numpy.all",
   "numpy.asarray",
   "numpy.linalg.lstsq",
   "numpy.ones_like",
   "numpy.sqrt",
   "pandas.DataFrame",
   "str",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.BetweenOLS.from_formula": {
  "lineno": 2001,
  "symbols_in_volume": [
   "PanelFormulaParser",
   "classmethod",
   "cls",
   "linearmodels.panel.data.PanelDataLike",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.FamaMacBeth": {
  "lineno": 2551,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.panel.model.FamaMacBeth.__init__": {
  "lineno": 2592,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelDataLike",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.FamaMacBeth._validate_blocks": {
  "lineno": 2602,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.utility.InferenceUnavailableWarning",
   "linearmodels.utility.MissingValueWarning",
   "numpy.sqrt",
   "pandas.DataFrame",
   "warnings.warn"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.FamaMacBeth._validate_blocks.validate_block": {
  "lineno": 2612,
  "symbols_in_volume": [
   "bool",
   "linearmodels.typing.NDArray",
   "numpy.linalg.matrix_rank"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.FamaMacBeth.fit": {
  "lineno": 2642,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "dict",
   "float",
   "linearmodels.panel.covariance.FamaMacBethCovariance",
   "linearmodels.panel.results.FamaMacBethResults",
   "list",
   "numpy.asarray",
   "numpy.c_",
   "numpy.full",
   "numpy.nan",
   "numpy.sqrt",
   "pandas.DataFrame",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.FamaMacBeth.fit.single": {
  "lineno": 2704,
  "symbols_in_volume": [
   "len",
   "numpy.linalg.lstsq",
   "numpy.linalg.matrix_rank",
   "numpy.nan",
   "numpy.r_",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.FamaMacBeth.from_formula": {
  "lineno": 2783,
  "symbols_in_volume": [
   "PanelFormulaParser",
   "classmethod",
   "cls",
   "linearmodels.panel.data.PanelDataLike",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.FirstDifferenceOLS": {
  "lineno": 2050,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.panel.model.FirstDifferenceOLS.__init__": {
  "lineno": 2074,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.data.PanelDataLike",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.FirstDifferenceOLS._setup_clusters": {
  "lineno": 2089,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "float",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.data.PanelDataLike",
   "linearmodels.utility.panel_to_frame",
   "numpy.any",
   "numpy.int64",
   "numpy.isfinite",
   "pandas.DataFrame",
   "pandas.Series",
   "set",
   "str",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.FirstDifferenceOLS.fit": {
  "lineno": 2139,
  "symbols_in_volume": [
   "bool",
   "dict",
   "float",
   "int",
   "isinstance",
   "linearmodels.panel.covariance.setup_covariance_estimator",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.results.PanelResults",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.panel_to_frame",
   "numpy.all",
   "numpy.asarray",
   "numpy.full_like",
   "numpy.linalg.lstsq",
   "numpy.nan",
   "numpy.ones_like",
   "numpy.sqrt",
   "pandas.DataFrame",
   "str",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.FirstDifferenceOLS.from_formula": {
  "lineno": 2292,
  "symbols_in_volume": [
   "PanelFormulaParser",
   "classmethod",
   "cls",
   "linearmodels.panel.data.PanelDataLike",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelFormulaParser": {
  "lineno": 79,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.panel.model.PanelFormulaParser.__init__": {
  "lineno": 97,
  "symbols_in_volume": [
   "int",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.data.PanelDataLike",
   "patsy.missing.NAAction",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelFormulaParser._parse": {
  "lineno": 105,
  "symbols_in_volume": [
   "ValueError",
   "map",
   "patsy.highlevel.ModelDesc.from_formula"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelFormulaParser.data": {
  "lineno": 147,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelFormulaParser.dependent": {
  "lineno": 155,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "patsy.highlevel.dmatrix",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelFormulaParser.entity_effect": {
  "lineno": 128,
  "symbols_in_volume": [
   "bool",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelFormulaParser.eval_env": {
  "lineno": 143,
  "symbols_in_volume": [
   "int"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelFormulaParser.exog": {
  "lineno": 166,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "patsy.highlevel.dmatrix",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelFormulaParser.time_effect": {
  "lineno": 133,
  "symbols_in_volume": [
   "bool",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS": {
  "lineno": 968,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.panel.model.PanelOLS.__init__": {
  "lineno": 1028,
  "symbols_in_volume": [
   "bool",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.data.PanelDataLike",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS.__str__": {
  "lineno": 1094,
  "symbols_in_volume": [
   "str",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS._choose_twoway_algo": {
  "lineno": 1358,
  "symbols_in_volume": [
   "bool",
   "linearmodels.utility.MemoryWarning",
   "min",
   "warnings.warn"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS._collect_effects": {
  "lineno": 1052,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "numpy.column_stack",
   "numpy.empty"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS._determine_df_adjustment": {
  "lineno": 1520,
  "symbols_in_volume": [
   "bool",
   "float",
   "linearmodels.typing.NDArray",
   "str",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS._drop_singletons": {
  "lineno": 1067,
  "symbols_in_volume": [
   "linearmodels.panel.utility.in_2core_graph",
   "linearmodels.utility.SingletonWarning",
   "numpy.all",
   "warnings.warn"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS._fast_path": {
  "lineno": 1380,
  "symbols_in_volume": [
   "bool",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.ensure_unique_column",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS._info": {
  "lineno": 1488,
  "symbols_in_volume": [
   "numpy.int32",
   "pandas.DataFrame",
   "pandas.Series",
   "panel_structure_stats",
   "str",
   "super",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS._is_effect_nested": {
  "lineno": 1506,
  "symbols_in_volume": [
   "bool",
   "enumerate",
   "len",
   "linearmodels.typing.NDArray",
   "numpy.all",
   "numpy.bool",
   "numpy.int64",
   "numpy.unique",
   "numpy.zeros",
   "staticmethod"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS._lsmr_path": {
  "lineno": 1247,
  "symbols_in_volume": [
   "linearmodels.panel.utility.dummy_matrix",
   "linearmodels.typing.NDArray",
   "numpy.column_stack",
   "numpy.concatenate",
   "numpy.sqrt",
   "numpy.zeros_like",
   "range",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.diags",
   "scipy.sparse.linalg.lsmr",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS._slow_path": {
  "lineno": 1307,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.column_stack",
   "numpy.float64",
   "numpy.linalg.lstsq",
   "numpy.ones_like",
   "numpy.sqrt",
   "numpy.zeros_like",
   "pandas.get_dummies",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS._validate_effects": {
  "lineno": 1109,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.data.PanelDataLike",
   "numpy.int64",
   "pandas.Categorical",
   "pandas.DataFrame",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS._weighted_fast_path": {
  "lineno": 1429,
  "symbols_in_volume": [
   "bool",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.ensure_unique_column",
   "numpy.sqrt",
   "numpy.zeros_like",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS.entity_effects": {
  "lineno": 1163,
  "symbols_in_volume": [
   "bool",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS.fit": {
  "lineno": 1539,
  "symbols_in_volume": [
   "bool",
   "dict",
   "float",
   "len",
   "linearmodels.panel.covariance.setup_covariance_estimator",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.results.PanelEffectsResults",
   "linearmodels.panel.utility.AbsorbingEffectWarning",
   "linearmodels.panel.utility.absorbing_warn_msg.format",
   "linearmodels.panel.utility.check_absorbed",
   "linearmodels.panel.utility.not_absorbed",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.WaldTestStatistic",
   "list",
   "map",
   "numpy.any",
   "numpy.linalg.lstsq",
   "numpy.sqrt",
   "numpy.zeros",
   "numpy.zeros_like",
   "pandas.DataFrame",
   "range",
   "set",
   "str",
   "typing.Optional",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS.from_formula": {
  "lineno": 1178,
  "symbols_in_volume": [
   "PanelFormulaParser",
   "bool",
   "classmethod",
   "cls",
   "linearmodels.panel.data.PanelDataLike",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS.other_effects": {
  "lineno": 1173,
  "symbols_in_volume": [
   "bool",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PanelOLS.time_effects": {
  "lineno": 1168,
  "symbols_in_volume": [
   "bool",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PooledOLS": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.panel.model.PooledOLS.__init__": {
  "lineno": 725,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelDataLike",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PooledOLS.fit": {
  "lineno": 782,
  "symbols_in_volume": [
   "bool",
   "dict",
   "float",
   "int",
   "isinstance",
   "linearmodels.panel.covariance.setup_covariance_estimator",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.results.PanelResults",
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "numpy.full_like",
   "numpy.linalg.lstsq",
   "numpy.nan",
   "numpy.sqrt",
   "pandas.DataFrame",
   "str",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PooledOLS.from_formula": {
  "lineno": 734,
  "symbols_in_volume": [
   "PanelFormulaParser",
   "classmethod",
   "cls",
   "linearmodels.panel.data.PanelDataLike",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.PooledOLS.predict": {
  "lineno": 906,
  "symbols_in_volume": [
   "PanelFormulaParser",
   "ValueError",
   "int",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.data.PanelDataLike",
   "linearmodels.typing.ArrayLike",
   "numpy.asarray",
   "numpy.atleast_2d",
   "pandas.DataFrame",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.RandomEffects": {
  "lineno": 2341,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.panel.model.RandomEffects.__init__": {
  "lineno": 2368,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelDataLike",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.RandomEffects.fit": {
  "lineno": 2425,
  "symbols_in_volume": [
   "bool",
   "dict",
   "float",
   "int",
   "isinstance",
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.panel.covariance.setup_covariance_estimator",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.results.RandomEffectsResults",
   "linearmodels.typing.NDArray",
   "max",
   "numpy.asarray",
   "numpy.linalg.inv",
   "numpy.linalg.lstsq",
   "numpy.ptp",
   "numpy.sqrt",
   "numpy.trace",
   "pandas.DataFrame",
   "str",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.RandomEffects.from_formula": {
  "lineno": 2377,
  "symbols_in_volume": [
   "PanelFormulaParser",
   "classmethod",
   "cls",
   "linearmodels.panel.data.PanelDataLike",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase": {
  "lineno": 203,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.panel.model._PanelModelBase.__init__": {
  "lineno": 219,
  "symbols_in_volume": [
   "linearmodels.panel.covariance.ACCovariance",
   "linearmodels.panel.covariance.ClusteredCovariance",
   "linearmodels.panel.covariance.CovarianceManager",
   "linearmodels.panel.covariance.DriscollKraay",
   "linearmodels.panel.covariance.HeteroskedasticCovariance",
   "linearmodels.panel.covariance.HomoskedasticCovariance",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.data.PanelDataLike",
   "linearmodels.typing.NDArray",
   "numpy.bool",
   "numpy.ones",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase.__repr__": {
  "lineno": 255,
  "symbols_in_volume": [
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase.__str__": {
  "lineno": 247,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase._adapt_weights": {
  "lineno": 299,
  "symbols_in_volume": [
   "AmbiguityError",
   "ValueError",
   "isinstance",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.data.PanelDataLike",
   "numpy.asarray",
   "numpy.ones",
   "numpy.squeeze",
   "pandas.DataFrame",
   "pandas.MultiIndex",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase._check_exog_rank": {
  "lineno": 341,
  "symbols_in_volume": [
   "ValueError",
   "int",
   "numpy.linalg.matrix_rank"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase._f_statistic": {
  "lineno": 400,
  "symbols_in_volume": [
   "float",
   "int",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.InvalidTestStatistic",
   "linearmodels.utility.WaldTestStatistic",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase._f_statistic_robust": {
  "lineno": 427,
  "symbols_in_volume": [
   "bool",
   "int",
   "len",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.InvalidTestStatistic",
   "linearmodels.utility.WaldTestStatistic",
   "numpy.bool",
   "numpy.ones",
   "typing.Callable",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase._f_statistic_robust.deferred_f": {
  "lineno": 446,
  "symbols_in_volume": [
   "float",
   "linearmodels.utility.WaldTestStatistic",
   "numpy.linalg.inv"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase._f_statistic_robust.invalid_f": {
  "lineno": 438,
  "symbols_in_volume": [
   "linearmodels.utility.InvalidTestStatistic"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase._info": {
  "lineno": 286,
  "symbols_in_volume": [
   "pandas.Series",
   "panel_structure_stats",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase._postestimation": {
  "lineno": 536,
  "symbols_in_volume": [
   "bool",
   "float",
   "int",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.AttrDict",
   "linearmodels.utility.InapplicableTestStatistic",
   "numpy.log",
   "numpy.pi"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase._prepare_between": {
  "lineno": 462,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase._rsquared": {
  "lineno": 475,
  "symbols_in_volume": [
   "bool",
   "float",
   "isinstance",
   "linearmodels.typing.NDArray",
   "numpy.all",
   "numpy.ndarray",
   "numpy.ones_like",
   "numpy.sqrt",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase._setup_clusters": {
  "lineno": 590,
  "symbols_in_volume": [
   "bool",
   "float",
   "linearmodels.panel.data.PanelDataLike",
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "numpy.int64",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "set",
   "str",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase._validate_data": {
  "lineno": 348,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.data.PanelData",
   "linearmodels.utility.has_constant",
   "linearmodels.utility.missing_warning",
   "numpy.all",
   "numpy.any",
   "numpy.asarray",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase.formula": {
  "lineno": 391,
  "symbols_in_volume": [
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase.has_constant": {
  "lineno": 395,
  "symbols_in_volume": [
   "bool",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase.not_null": {
  "lineno": 585,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase.predict": {
  "lineno": 639,
  "symbols_in_volume": [
   "PanelFormulaParser",
   "ValueError",
   "int",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.data.PanelDataLike",
   "linearmodels.typing.ArrayLike",
   "numpy.asarray",
   "numpy.atleast_2d",
   "pandas.DataFrame",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.model._PanelModelBase.reformat_clusters": {
  "lineno": 258,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.data.PanelDataLike"
  ],
  "type": "function"
 },
 "linearmodels.panel.model.panel_structure_stats": {
  "lineno": 72,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.bincount",
   "numpy.median",
   "pandas.Series",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.results": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "module"
 },
 "linearmodels.panel.results.FamaMacBethResults": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.panel.results.FamaMacBethResults.__init__": {
  "lineno": 806,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.FamaMacBethResults.all_params": {
  "lineno": 810,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelEffectsResults": {
  "lineno": 637,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.panel.results.PanelEffectsResults.__init__": {
  "lineno": 642,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelEffectsResults.f_pooled": {
  "lineno": 655,
  "symbols_in_volume": [
   "linearmodels.utility.WaldTestStatistic",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelEffectsResults.included_effects": {
  "lineno": 686,
  "symbols_in_volume": [
   "property",
   "str",
   "typing.List"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelEffectsResults.other_info": {
  "lineno": 704,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelEffectsResults.rsquared_inclusive": {
  "lineno": 709,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelEffectsResults.summary": {
  "lineno": 714,
  "symbols_in_volume": [
   "int",
   "linearmodels.compat.statsmodels.Summary",
   "linearmodels.utility._str",
   "linearmodels.utility.pval_format",
   "numpy.isfinite",
   "property",
   "scipy.stats",
   "scipy.stats.format",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelEffectsResults.variance_decomposition": {
  "lineno": 765,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelModelComparison": {
  "lineno": 823,
  "symbols_in_volume": [
   "linearmodels.utility._ModelComparison"
  ],
  "type": "class"
 },
 "linearmodels.panel.results.PanelModelComparison.__init__": {
  "lineno": 844,
  "symbols_in_volume": [
   "str",
   "super",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelModelComparison.cov_estimator": {
  "lineno": 872,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelModelComparison.estimator_method": {
  "lineno": 867,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelModelComparison.rsquared_between": {
  "lineno": 852,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelModelComparison.rsquared_overall": {
  "lineno": 862,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelModelComparison.rsquared_within": {
  "lineno": 857,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelModelComparison.summary": {
  "lineno": 877,
  "symbols_in_volume": [
   "f",
   "getattr",
   "len",
   "linearmodels.compat.statsmodels.Summary",
   "linearmodels.iv.results.default_txt_fmt.copy",
   "linearmodels.iv.results.stub_concat",
   "linearmodels.iv.results.table_concat",
   "linearmodels.utility._str",
   "linearmodels.utility.pval_format",
   "list",
   "map",
   "max",
   "pandas.Series",
   "pandas.concat",
   "property",
   "range",
   "statsmodels.iolib.summary.SimpleTable",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults": {
  "lineno": 32,
  "symbols_in_volume": [
   "linearmodels.utility._SummaryStr"
  ],
  "type": "class"
 },
 "linearmodels.panel.results.PanelResults.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "linearmodels.utility.AttrDict"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults._out_of_sample": {
  "lineno": 380,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "linearmodels.typing.OptionalArrayLike",
   "pandas.DataFrame",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.conf_int": {
  "lineno": 223,
  "symbols_in_volume": [
   "float",
   "numpy.asarray",
   "pandas.DataFrame",
   "scipy.stats.norm.ppf",
   "scipy.stats.t.ppf"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.cov": {
  "lineno": 75,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property_cached.cached_property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.df_model": {
  "lineno": 115,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.df_resid": {
  "lineno": 104,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.entity_info": {
  "lineno": 213,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.estimated_effects": {
  "lineno": 464,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.f_statistic": {
  "lineno": 529,
  "symbols_in_volume": [
   "linearmodels.utility.WaldTestStatistic",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.f_statistic_robust": {
  "lineno": 497,
  "symbols_in_volume": [
   "linearmodels.utility.WaldTestStatistic",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.fitted_values": {
  "lineno": 459,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.idiosyncratic": {
  "lineno": 475,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.loglik": {
  "lineno": 557,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.model_ss": {
  "lineno": 141,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.name": {
  "lineno": 131,
  "symbols_in_volume": [
   "property",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.nobs": {
  "lineno": 126,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.params": {
  "lineno": 70,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.predict": {
  "lineno": 394,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "len",
   "linearmodels.typing.OptionalArrayLike",
   "pandas.DataFrame",
   "pandas.concat",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.pvalues": {
  "lineno": 92,
  "symbols_in_volume": [
   "numpy.abs",
   "pandas.Series",
   "property_cached.cached_property",
   "scipy.stats.norm.cdf",
   "scipy.stats.t.cdf"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.resid_ss": {
  "lineno": 146,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.resids": {
  "lineno": 368,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.rsquared": {
  "lineno": 151,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.rsquared_between": {
  "lineno": 156,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.rsquared_overall": {
  "lineno": 190,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.rsquared_within": {
  "lineno": 173,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.s2": {
  "lineno": 208,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.std_errors": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.sqrt",
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.summary": {
  "lineno": 251,
  "symbols_in_volume": [
   "enumerate",
   "f",
   "int",
   "linearmodels.compat.statsmodels.Summary",
   "linearmodels.utility._str",
   "linearmodels.utility.pval_format",
   "list",
   "numpy.c_",
   "numpy.isfinite",
   "property",
   "statsmodels.iolib.summary.SimpleTable",
   "statsmodels.iolib.summary.fmt_2cols",
   "statsmodels.iolib.summary.fmt_params",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.time_info": {
  "lineno": 218,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.total_ss": {
  "lineno": 136,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.tstats": {
  "lineno": 87,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.wald_test": {
  "lineno": 562,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "linearmodels.utility.WaldTestStatistic",
   "linearmodels.utility.quadratic_form_test",
   "pandas.DataFrame",
   "pandas.Series",
   "str",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.PanelResults.wresids": {
  "lineno": 490,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.RandomEffectsResults": {
  "lineno": 773,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.panel.results.RandomEffectsResults.__init__": {
  "lineno": 778,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.RandomEffectsResults.theta": {
  "lineno": 792,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.RandomEffectsResults.variance_decomposition": {
  "lineno": 785,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.panel.results.compare": {
  "lineno": 987,
  "symbols_in_volume": [
   "PanelModelComparison",
   "str",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.utility": {
  "lineno": null,
  "symbols_in_volume": [
   "ImportError",
   "linearmodels.panel._utility._drop_singletons",
   "linearmodels.typing.NDArray",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "typing.TypeVar"
  ],
  "type": "module"
 },
 "linearmodels.panel.utility.AbsorbingEffectError": {
  "lineno": 22,
  "symbols_in_volume": [
   "Exception"
  ],
  "type": "class"
 },
 "linearmodels.panel.utility.AbsorbingEffectWarning": {
  "lineno": 40,
  "symbols_in_volume": [
   "Warning"
  ],
  "type": "class"
 },
 "linearmodels.panel.utility.PanelModelData": {
  "lineno": 457,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "linearmodels.panel.utility._py_drop_singletons": {
  "lineno": 262,
  "symbols_in_volume": [
   "_remove_node",
   "linearmodels.typing.NDArray",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.panel.utility._remove_node": {
  "lineno": 207,
  "symbols_in_volume": [
   "int",
   "linearmodels.typing.NDArray",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.panel.utility.check_absorbed": {
  "lineno": 399,
  "symbols_in_volume": [
   "AbsorbingEffectError",
   "linearmodels.typing.NDArray",
   "numpy.abs",
   "numpy.finfo",
   "numpy.float64",
   "numpy.linalg.eigh",
   "numpy.linalg.matrix_rank",
   "numpy.sort",
   "numpy.where",
   "range",
   "str",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "linearmodels.panel.utility.dummy_matrix": {
  "lineno": 108,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "collections.defaultdict",
   "fmt",
   "isinstance",
   "len",
   "linearmodels.typing.NDArray",
   "linearmodels.typing.data.ArrayLike",
   "list",
   "min",
   "numpy.arange",
   "numpy.asarray",
   "numpy.column_stack",
   "numpy.concatenate",
   "numpy.log2",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.unique",
   "pandas.DataFrame",
   "preconditioner",
   "range",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix",
   "str",
   "typing.Dict",
   "typing.List",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.utility.generate_panel_data": {
  "lineno": 468,
  "symbols_in_volume": [
   "PanelModelData",
   "bool",
   "float",
   "int",
   "isinstance",
   "linearmodels.compat.pandas.concat",
   "linearmodels.utility.panel_to_frame",
   "list",
   "numpy.arange",
   "numpy.concatenate",
   "numpy.nan",
   "numpy.ones",
   "numpy.random.RandomState",
   "pandas.date_range",
   "range",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.panel.utility.in_2core_graph": {
  "lineno": 287,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.panel._utility._drop_singletons",
   "linearmodels.typing.NDArray",
   "linearmodels.typing.data.ArrayLike",
   "list",
   "min_dtype",
   "numpy.any",
   "numpy.arange",
   "numpy.argsort",
   "numpy.asarray",
   "numpy.column_stack",
   "numpy.concatenate",
   "numpy.diff",
   "numpy.empty_like",
   "numpy.isin",
   "numpy.r_",
   "numpy.unique",
   "numpy.where",
   "pandas.DataFrame",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.panel.utility.in_2core_graph.min_dtype": {
  "lineno": 338,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "max",
   "min",
   "numpy.log2",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.panel.utility.in_2core_graph_slow": {
  "lineno": 360,
  "symbols_in_volume": [
   "in_2core_graph",
   "isinstance",
   "linearmodels.typing.NDArray",
   "linearmodels.typing.data.ArrayLike",
   "numpy.arange",
   "numpy.asarray",
   "numpy.bool",
   "numpy.column_stack",
   "numpy.isin",
   "numpy.unique",
   "numpy.zeros",
   "pandas.DataFrame",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.panel.utility.not_absorbed": {
  "lineno": 429,
  "symbols_in_volume": [
   "int",
   "linearmodels.typing.NDArray",
   "list",
   "numpy.abs",
   "numpy.diag",
   "numpy.finfo",
   "numpy.float64",
   "numpy.linalg.eigh",
   "numpy.linalg.matrix_rank",
   "numpy.linalg.qr",
   "numpy.sort",
   "numpy.where",
   "range",
   "set",
   "sorted",
   "typing.List"
  ],
  "type": "function"
 },
 "linearmodels.panel.utility.preconditioner": {
  "lineno": 56,
  "symbols_in_volume": [
   "bool",
   "id",
   "isinstance",
   "klass",
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "numpy.cumsum",
   "numpy.ndarray",
   "numpy.sqrt",
   "numpy.take",
   "numpy.zeros_like",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.issparse",
   "type",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.system": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.system._utility": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.system._utility.LinearConstraint": {
  "lineno": 201,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.system._utility.LinearConstraint.__init__": {
  "lineno": 225,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "bool",
   "int",
   "isinstance",
   "numpy.asarray",
   "numpy.float64",
   "numpy.ndarray",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system._utility.LinearConstraint.__repr__": {
  "lineno": 256,
  "symbols_in_volume": [
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system._utility.LinearConstraint.__str__": {
  "lineno": 259,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system._utility.LinearConstraint._compute_transform": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.eye",
   "numpy.linalg.eigh",
   "numpy.linalg.inv",
   "numpy.real"
  ],
  "type": "function"
 },
 "linearmodels.system._utility.LinearConstraint._verify_constraints": {
  "lineno": 262,
  "symbols_in_volume": [
   "ValueError",
   "numpy.all",
   "numpy.c_",
   "numpy.isfinite",
   "numpy.linalg.matrix_rank",
   "numpy.linalg.qr"
  ],
  "type": "function"
 },
 "linearmodels.system._utility.LinearConstraint.a": {
  "lineno": 316,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system._utility.LinearConstraint.q": {
  "lineno": 346,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.Series",
   "property",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system._utility.LinearConstraint.r": {
  "lineno": 293,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system._utility.LinearConstraint.t": {
  "lineno": 298,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system._utility.blocked_column_product": {
  "lineno": 10,
  "symbols_in_volume": [
   "len",
   "linearmodels.typing.ArraySequence",
   "linearmodels.typing.NDArray",
   "numpy.vstack",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.system._utility.blocked_cross_prod": {
  "lineno": 129,
  "symbols_in_volume": [
   "len",
   "linearmodels.typing.ArraySequence",
   "linearmodels.typing.NDArray",
   "numpy.concatenate",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.system._utility.blocked_diag_product": {
  "lineno": 35,
  "symbols_in_volume": [
   "len",
   "linearmodels.typing.ArraySequence",
   "linearmodels.typing.NDArray",
   "numpy.hstack",
   "numpy.vstack",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.system._utility.blocked_full_inner_product": {
  "lineno": 166,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.empty_like",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.system._utility.blocked_inner_prod": {
  "lineno": 63,
  "symbols_in_volume": [
   "all",
   "len",
   "linearmodels.typing.ArraySequence",
   "linearmodels.typing.NDArray",
   "list",
   "map",
   "numpy.all",
   "numpy.asarray",
   "numpy.cumsum",
   "numpy.diag",
   "numpy.hstack",
   "numpy.kron",
   "numpy.ones",
   "numpy.zeros",
   "range",
   "slice",
   "sum"
  ],
  "type": "function"
 },
 "linearmodels.system._utility.inv_matrix_sqrt": {
  "lineno": 194,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.diag",
   "numpy.linalg.eigh",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.system.covariance.GMMHeteroskedasticCovariance": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.system.covariance.GMMHeteroskedasticCovariance.__init__": {
  "lineno": 538,
  "symbols_in_volume": [
   "bool",
   "len",
   "linearmodels.system._utility.LinearConstraint",
   "linearmodels.typing.NDArray",
   "map",
   "numpy.empty",
   "numpy.ndarray",
   "range",
   "sum",
   "super",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.GMMHeteroskedasticCovariance._omega": {
  "lineno": 565,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.GMMHomoskedasticCovariance": {
  "lineno": 385,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.system.covariance.GMMHomoskedasticCovariance.__init__": {
  "lineno": 417,
  "symbols_in_volume": [
   "bool",
   "linearmodels.system._utility.LinearConstraint",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.AttrDict",
   "numpy.ndarray",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.GMMHomoskedasticCovariance.__repr__": {
  "lineno": 442,
  "symbols_in_volume": [
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.GMMHomoskedasticCovariance.__str__": {
  "lineno": 438,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.GMMHomoskedasticCovariance._adjustment": {
  "lineno": 489,
  "symbols_in_volume": [
   "float",
   "len",
   "list",
   "map",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.vstack",
   "range",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.GMMHomoskedasticCovariance._omega": {
  "lineno": 480,
  "symbols_in_volume": [
   "linearmodels.system._utility.blocked_inner_prod",
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.GMMHomoskedasticCovariance.cov": {
  "lineno": 446,
  "symbols_in_volume": [
   "len",
   "linearmodels.system._utility.blocked_cross_prod",
   "linearmodels.typing.NDArray",
   "numpy.eye",
   "numpy.linalg.inv",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.GMMHomoskedasticCovariance.cov_config": {
  "lineno": 501,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.GMMKernelCovariance": {
  "lineno": 573,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.covariance._HACMixin"
  ],
  "type": "class"
 },
 "linearmodels.system.covariance.GMMKernelCovariance.__init__": {
  "lineno": 614,
  "symbols_in_volume": [
   "bool",
   "float",
   "linearmodels.asset_pricing.covariance._HACMixin.__init__",
   "linearmodels.system._utility.LinearConstraint",
   "linearmodels.typing.NDArray",
   "numpy.ndarray",
   "str",
   "super",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.GMMKernelCovariance._omega": {
  "lineno": 636,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.GMMKernelCovariance.cov_config": {
  "lineno": 639,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HeteroskedasticCovariance": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.system.covariance.HeteroskedasticCovariance.__init__": {
  "lineno": 195,
  "symbols_in_volume": [
   "bool",
   "len",
   "linearmodels.system._utility.LinearConstraint",
   "linearmodels.system._utility.blocked_diag_product",
   "linearmodels.typing.NDArray",
   "map",
   "numpy.empty",
   "numpy.linalg.inv",
   "numpy.ndarray",
   "numpy.zeros",
   "range",
   "sum",
   "super",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HeteroskedasticCovariance._adjustment": {
  "lineno": 275,
  "symbols_in_volume": [
   "float",
   "list",
   "map",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.vstack",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HeteroskedasticCovariance._cov": {
  "lineno": 246,
  "symbols_in_volume": [
   "bool",
   "len",
   "linearmodels.system._utility.blocked_inner_prod",
   "linearmodels.typing.NDArray",
   "numpy.eye",
   "numpy.linalg.inv"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HeteroskedasticCovariance._gls_cov": {
  "lineno": 272,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HeteroskedasticCovariance._mvreg_cov": {
  "lineno": 269,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HeteroskedasticCovariance._xeex": {
  "lineno": 242,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HomoskedasticCovariance": {
  "lineno": 17,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.system.covariance.HomoskedasticCovariance.__init__": {
  "lineno": 53,
  "symbols_in_volume": [
   "bool",
   "len",
   "linearmodels.system._utility.LinearConstraint",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.AttrDict",
   "numpy.ndarray",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HomoskedasticCovariance.__repr__": {
  "lineno": 86,
  "symbols_in_volume": [
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HomoskedasticCovariance.__str__": {
  "lineno": 77,
  "symbols_in_volume": [
   "str",
   "typing.List"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HomoskedasticCovariance._adjustment": {
  "lineno": 95,
  "symbols_in_volume": [
   "float",
   "numpy.ndarray",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HomoskedasticCovariance._gls_cov": {
  "lineno": 118,
  "symbols_in_volume": [
   "linearmodels.system._utility.blocked_inner_prod",
   "linearmodels.typing.NDArray",
   "numpy.linalg.inv"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HomoskedasticCovariance._mvreg_cov": {
  "lineno": 99,
  "symbols_in_volume": [
   "len",
   "linearmodels.system._utility.blocked_inner_prod",
   "linearmodels.typing.NDArray",
   "numpy.eye",
   "numpy.linalg.inv"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HomoskedasticCovariance.cov": {
  "lineno": 139,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HomoskedasticCovariance.cov_config": {
  "lineno": 148,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.HomoskedasticCovariance.sigma": {
  "lineno": 90,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.KernelCovariance": {
  "lineno": 289,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.covariance._HACMixin"
  ],
  "type": "class"
 },
 "linearmodels.system.covariance.KernelCovariance.__init__": {
  "lineno": 344,
  "symbols_in_volume": [
   "bool",
   "float",
   "linearmodels.asset_pricing.covariance._HACMixin.__init__",
   "linearmodels.system._utility.LinearConstraint",
   "linearmodels.typing.NDArray",
   "numpy.ndarray",
   "str",
   "super",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.KernelCovariance._xeex": {
  "lineno": 374,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.system.covariance.KernelCovariance.cov_config": {
  "lineno": 377,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.system.gmm.HeteroskedasticWeightMatrix": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.system.gmm.HeteroskedasticWeightMatrix.__init__": {
  "lineno": 165,
  "symbols_in_volume": [
   "bool",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm.HeteroskedasticWeightMatrix._debias_scale": {
  "lineno": 214,
  "symbols_in_volume": [
   "float",
   "int",
   "linearmodels.typing.NDArray",
   "list",
   "map",
   "numpy.array",
   "numpy.repeat",
   "numpy.sqrt",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm.HeteroskedasticWeightMatrix.weight_matrix": {
  "lineno": 169,
  "symbols_in_volume": [
   "len",
   "linearmodels.typing.NDArray",
   "map",
   "numpy.empty",
   "numpy.ndarray",
   "range",
   "sum",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm.HomoskedasticWeightMatrix": {
  "lineno": 15,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.system.gmm.HomoskedasticWeightMatrix.__init__": {
  "lineno": 42,
  "symbols_in_volume": [
   "bool",
   "float",
   "linearmodels.utility.AttrDict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm.HomoskedasticWeightMatrix.__repr__": {
  "lineno": 58,
  "symbols_in_volume": [
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm.HomoskedasticWeightMatrix.__str__": {
  "lineno": 49,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm.HomoskedasticWeightMatrix._str_extra": {
  "lineno": 61,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm.HomoskedasticWeightMatrix.config": {
  "lineno": 124,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm.HomoskedasticWeightMatrix.sigma": {
  "lineno": 65,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "list",
   "map",
   "numpy.array",
   "numpy.sqrt",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm.HomoskedasticWeightMatrix.weight_matrix": {
  "lineno": 93,
  "symbols_in_volume": [
   "linearmodels.system._utility.blocked_inner_prod",
   "linearmodels.typing.NDArray",
   "numpy.ndarray",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm.KernelWeightMatrix": {
  "lineno": 227,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.covariance._HACMixin"
  ],
  "type": "class"
 },
 "linearmodels.system.gmm.KernelWeightMatrix.__init__": {
  "lineno": 271,
  "symbols_in_volume": [
   "bool",
   "float",
   "linearmodels.asset_pricing.covariance._HACMixin.__init__",
   "str",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm.KernelWeightMatrix._optimal_bandwidth": {
  "lineno": 333,
  "symbols_in_volume": [
   "float",
   "linearmodels.iv.covariance.kernel_optimal_bandwidth",
   "linearmodels.typing.NDArray"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm.KernelWeightMatrix.bandwidth": {
  "lineno": 346,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm.KernelWeightMatrix.config": {
  "lineno": 352,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.gmm.KernelWeightMatrix.weight_matrix": {
  "lineno": 287,
  "symbols_in_volume": [
   "len",
   "linearmodels.typing.NDArray",
   "map",
   "numpy.empty",
   "numpy.ndarray",
   "range",
   "sum",
   "typing.Optional",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "linearmodels.system.model": {
  "lineno": null,
  "symbols_in_volume": [
   "linearmodels.system.covariance.GMMHeteroskedasticCovariance",
   "linearmodels.system.covariance.GMMHomoskedasticCovariance",
   "linearmodels.system.covariance.GMMKernelCovariance",
   "linearmodels.system.covariance.HeteroskedasticCovariance",
   "linearmodels.system.covariance.HomoskedasticCovariance",
   "linearmodels.system.covariance.KernelCovariance",
   "linearmodels.system.gmm.HeteroskedasticWeightMatrix",
   "linearmodels.system.gmm.HomoskedasticWeightMatrix",
   "linearmodels.system.gmm.KernelWeightMatrix"
  ],
  "type": "module"
 },
 "linearmodels.system.model.IV3SLS": {
  "lineno": 1290,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.system.model.IV3SLS.__init__": {
  "lineno": 1374,
  "symbols_in_volume": [
   "linearmodels.typing.ArrayLike",
   "str",
   "super",
   "typing.Mapping",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.model.IV3SLS.from_formula": {
  "lineno": 1451,
  "symbols_in_volume": [
   "SystemFormulaParser",
   "classmethod",
   "cls",
   "linearmodels.typing.ArrayLike",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.Mapping",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.model.IV3SLS.multivariate_iv": {
  "lineno": 1382,
  "symbols_in_volume": [
   "ValueError",
   "classmethod",
   "cls",
   "linearmodels.iv.data.IVData",
   "linearmodels.typing.ArrayLike",
   "linearmodels.typing.OptionalArrayLike"
  ],
  "type": "function"
 },
 "linearmodels.system.model.IV3SLS.multivariate_ls": {
  "lineno": 1434,
  "symbols_in_volume": [
   "FutureWarning",
   "classmethod",
   "cls.multivariate_iv",
   "linearmodels.typing.ArrayLike",
   "linearmodels.typing.OptionalArrayLike",
   "warnings.warn"
  ],
  "type": "function"
 },
 "linearmodels.system.model.IVSystemGMM": {
  "lineno": 1735,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.system.model.IVSystemGMM.__init__": {
  "lineno": 1809,
  "symbols_in_volume": [
   "UserWarning",
   "ValueError",
   "bool",
   "float",
   "linearmodels.typing.ArrayLike",
   "str",
   "super",
   "typing.Mapping",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "linearmodels.system.model.IVSystemGMM._blocked_gmm": {
  "lineno": 1945,
  "symbols_in_volume": [
   "_parameters_from_xprod",
   "len",
   "linearmodels.system._utility.LinearConstraint",
   "linearmodels.system._utility.blocked_cross_prod",
   "linearmodels.typing.ArraySequence",
   "linearmodels.typing.NDArray",
   "numpy.eye",
   "numpy.linalg.inv",
   "numpy.vstack",
   "range",
   "staticmethod",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.model.IVSystemGMM._finalize_results": {
  "lineno": 1967,
  "symbols_in_volume": [
   "bool",
   "cov_est",
   "cov_est.cov_config",
   "float",
   "int",
   "len",
   "linearmodels.system.covariance.GMMHeteroskedasticCovariance",
   "linearmodels.system.covariance.GMMHomoskedasticCovariance",
   "linearmodels.system.results.GMMSystemResults",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.AttrDict",
   "numpy.hstack",
   "numpy.linalg.lstsq",
   "numpy.sqrt",
   "range",
   "str",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.model.IVSystemGMM._j_statistic": {
  "lineno": 2118,
  "symbols_in_volume": [
   "float",
   "len",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.WaldTestStatistic",
   "map",
   "numpy.concatenate",
   "numpy.linalg.inv",
   "range",
   "sum"
  ],
  "type": "function"
 },
 "linearmodels.system.model.IVSystemGMM.fit": {
  "lineno": 1834,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "cov_est",
   "float",
   "int",
   "len",
   "linearmodels.system._utility.blocked_cross_prod",
   "linearmodels.system._utility.blocked_inner_prod",
   "linearmodels.system.results.GMMSystemResults",
   "linearmodels.typing.NDArray",
   "map",
   "numpy.eye",
   "numpy.hstack",
   "numpy.linalg.inv",
   "range",
   "str",
   "sum",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.model.IVSystemGMM.from_formula": {
  "lineno": 2040,
  "symbols_in_volume": [
   "SystemFormulaParser",
   "bool",
   "classmethod",
   "cls",
   "float",
   "linearmodels.typing.ArrayLike",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SUR": {
  "lineno": 1522,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.system.model.SUR.__init__": {
  "lineno": 1598,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "isinstance",
   "len",
   "linearmodels.typing.ArrayLike",
   "str",
   "super",
   "tuple",
   "typing.Mapping",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SUR.from_formula": {
  "lineno": 1666,
  "symbols_in_volume": [
   "SystemFormulaParser",
   "classmethod",
   "cls",
   "linearmodels.typing.ArrayLike",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.Mapping",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SUR.multivariate_ls": {
  "lineno": 1623,
  "symbols_in_volume": [
   "classmethod",
   "cls",
   "linearmodels.iv.data.IVData",
   "linearmodels.typing.ArrayLike"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SystemFormulaParser": {
  "lineno": 144,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.system.model.SystemFormulaParser.__init__": {
  "lineno": 145,
  "symbols_in_volume": [
   "TypeError",
   "int",
   "isinstance",
   "linearmodels.iv._utility.IVFormulaParser",
   "linearmodels.typing.ArrayLike",
   "pandas.DataFrame",
   "pandas.Series",
   "str",
   "typing.Dict",
   "typing.Mapping",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SystemFormulaParser._get_variable": {
  "lineno": 220,
  "symbols_in_volume": [
   "dict",
   "getattr",
   "pandas.DataFrame",
   "str",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SystemFormulaParser._parse": {
  "lineno": 169,
  "symbols_in_volume": [
   "_missing_weights",
   "isinstance",
   "linearmodels.iv._utility.IVFormulaParser",
   "str",
   "typing.Mapping"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SystemFormulaParser._prevent_autoconst": {
  "lineno": 163,
  "symbols_in_volume": [
   "staticmethod",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SystemFormulaParser.data": {
  "lineno": 252,
  "symbols_in_volume": [
   "linearmodels.typing.ArrayLike",
   "property",
   "str",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SystemFormulaParser.dependent": {
  "lineno": 272,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property",
   "str",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SystemFormulaParser.endog": {
  "lineno": 280,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property",
   "str",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SystemFormulaParser.equation_labels": {
  "lineno": 248,
  "symbols_in_volume": [
   "list",
   "property",
   "str",
   "typing.List"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SystemFormulaParser.eval_env": {
  "lineno": 235,
  "symbols_in_volume": [
   "int",
   "linearmodels.iv._utility.IVFormulaParser"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SystemFormulaParser.exog": {
  "lineno": 276,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property",
   "str",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SystemFormulaParser.formula": {
  "lineno": 225,
  "symbols_in_volume": [
   "property",
   "str",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.system.model.SystemFormulaParser.instruments": {
  "lineno": 284,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property",
   "str",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.model._LSSystemModelBase": {
  "lineno": 1172,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.system.model._LSSystemModelBase.fit": {
  "lineno": 1175,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "float",
   "int",
   "len",
   "linearmodels.system._utility.blocked_column_product",
   "linearmodels.system._utility.blocked_diag_product",
   "linearmodels.system._utility.inv_matrix_sqrt",
   "linearmodels.system.results.SystemResults",
   "list",
   "map",
   "numpy.cumsum",
   "numpy.eye",
   "numpy.inf",
   "numpy.mean",
   "numpy.sqrt",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase": {
  "lineno": 289,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.system.model._SystemModelBase.__init__": {
  "lineno": 315,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "isinstance",
   "len",
   "linearmodels.iv.data.IVData",
   "linearmodels.system._utility.LinearConstraint",
   "linearmodels.typing.ArrayLike",
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "pandas.Index",
   "pandas.Series",
   "str",
   "typing.Dict",
   "typing.List",
   "typing.Mapping",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase.__repr__": {
  "lineno": 533,
  "symbols_in_volume": [
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase.__str__": {
  "lineno": 536,
  "symbols_in_volume": [
   "len",
   "str",
   "textwrap.wrap"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase._common_indiv_results": {
  "lineno": 816,
  "symbols_in_volume": [
   "bool",
   "float",
   "int",
   "len",
   "linearmodels.system.covariance.GMMHeteroskedasticCovariance",
   "linearmodels.system.covariance.GMMHomoskedasticCovariance",
   "linearmodels.system.covariance.HeteroskedasticCovariance",
   "linearmodels.system.covariance.HomoskedasticCovariance",
   "linearmodels.system.covariance.KernelCovariance",
   "linearmodels.system.gmm.HeteroskedasticWeightMatrix",
   "linearmodels.system.gmm.HomoskedasticWeightMatrix",
   "linearmodels.system.gmm.KernelWeightMatrix",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.AttrDict",
   "range",
   "str",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase._common_results": {
  "lineno": 900,
  "symbols_in_volume": [
   "bool",
   "int",
   "len",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.AttrDict",
   "list",
   "numpy.hstack",
   "pandas.DataFrame",
   "range",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase._construct_xhat": {
  "lineno": 657,
  "symbols_in_volume": [
   "len",
   "numpy.all",
   "numpy.linalg.lstsq",
   "numpy.sqrt",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase._drop_missing": {
  "lineno": 511,
  "symbols_in_volume": [
   "len",
   "linearmodels.utility.missing_warning",
   "numpy.any",
   "numpy.bool",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase._f_stat": {
  "lineno": 785,
  "symbols_in_volume": [
   "bool",
   "float",
   "len",
   "linearmodels.utility.AttrDict",
   "linearmodels.utility.InvalidTestStatistic",
   "linearmodels.utility.WaldTestStatistic",
   "list",
   "map",
   "numpy.linalg.LinAlgError",
   "numpy.linalg.inv",
   "numpy.sum",
   "range",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase._gls_estimate": {
  "lineno": 674,
  "symbols_in_volume": [
   "_parameters_from_xprod",
   "bool",
   "int",
   "len",
   "linearmodels.system._utility.blocked_inner_prod",
   "linearmodels.typing.NDArray",
   "numpy.diag",
   "numpy.linalg.inv",
   "numpy.zeros",
   "range",
   "typing.Sequence",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase._gls_finalize": {
  "lineno": 1018,
  "symbols_in_volume": [
   "bool",
   "cov_estimator",
   "float",
   "int",
   "len",
   "linearmodels.system.results.SystemResults",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.AttrDict",
   "numpy.hstack",
   "numpy.linalg.lstsq",
   "numpy.reshape",
   "numpy.sqrt",
   "range",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase._multivariate_ls_finalize": {
  "lineno": 717,
  "symbols_in_volume": [
   "bool",
   "cov_estimator",
   "float",
   "len",
   "linearmodels.system.results.SystemResults",
   "linearmodels.typing.NDArray",
   "linearmodels.utility.AttrDict",
   "numpy.linalg.lstsq",
   "numpy.ones_like",
   "numpy.sqrt",
   "range",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase._multivariate_ls_fit": {
  "lineno": 635,
  "symbols_in_volume": [
   "_parameters_from_xprod",
   "len",
   "linearmodels.system._utility.blocked_inner_prod",
   "linearmodels.typing.NDArray",
   "numpy.eye",
   "numpy.hstack",
   "numpy.vstack",
   "range",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase._sigma_scale": {
  "lineno": 1109,
  "symbols_in_volume": [
   "bool",
   "float",
   "linearmodels.typing.NDArray",
   "numpy.array",
   "numpy.float64",
   "numpy.sqrt",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase._system_r2": {
  "lineno": 958,
  "symbols_in_volume": [
   "_parameters_from_xprod",
   "bool",
   "dict",
   "float",
   "len",
   "linearmodels.system._utility.blocked_inner_prod",
   "linearmodels.system._utility.inv_matrix_sqrt",
   "linearmodels.typing.NDArray",
   "numpy.asarray",
   "numpy.diag",
   "numpy.eye",
   "numpy.hstack",
   "numpy.linalg.det",
   "numpy.linalg.inv",
   "numpy.linalg.matrix_rank",
   "numpy.nan",
   "numpy.sqrt",
   "numpy.zeros",
   "pandas.Series",
   "range",
   "str",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase._validate_data": {
  "lineno": 372,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "dict",
   "enumerate",
   "id",
   "int",
   "isinstance",
   "len",
   "linearmodels.iv.data.IVData",
   "linearmodels.utility.has_constant",
   "list",
   "map",
   "max",
   "min",
   "numpy.all",
   "numpy.concatenate",
   "numpy.linalg.matrix_rank",
   "numpy.nanmean",
   "numpy.ones",
   "numpy.ones_like",
   "numpy.sqrt",
   "pandas.Series",
   "set",
   "str",
   "tuple",
   "type",
   "typing.Mapping",
   "typing.Tuple",
   "vars",
   "zip"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase.add_constraints": {
  "lineno": 1129,
  "symbols_in_volume": [
   "len",
   "linearmodels.system._utility.LinearConstraint",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase.constraints": {
  "lineno": 1117,
  "symbols_in_volume": [
   "linearmodels.system._utility.LinearConstraint",
   "property",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase.formula": {
  "lineno": 368,
  "symbols_in_volume": [
   "str",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase.has_constant": {
  "lineno": 780,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase.param_names": {
  "lineno": 1159,
  "symbols_in_volume": [
   "property",
   "str",
   "typing.List"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase.predict": {
  "lineno": 545,
  "symbols_in_volume": [
   "SystemFormulaParser",
   "collections.abc.Mapping",
   "enumerate",
   "functools.reduce",
   "int",
   "isinstance",
   "linearmodels.iv.data.IVData",
   "linearmodels.typing.ArrayLike",
   "linearmodels.utility.AttrDict",
   "numpy.asarray",
   "pandas.DataFrame",
   "pandas.concat",
   "str",
   "typing.Mapping",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.model._SystemModelBase.reset_constraints": {
  "lineno": 1155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "linearmodels.system.model._missing_weights": {
  "lineno": 93,
  "symbols_in_volume": [
   "UserWarning",
   "linearmodels.typing.ArrayLike",
   "str",
   "typing.Dict",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "linearmodels.system.model._parameters_from_xprod": {
  "lineno": 101,
  "symbols_in_volume": [
   "linearmodels.system._utility.LinearConstraint",
   "linearmodels.typing.NDArray",
   "numpy.linalg.solve",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.system.results": {
  "lineno": null,
  "symbols_in_volume": [
   "linearmodels.typing.ArrayLike",
   "str",
   "typing.Dict",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "module"
 },
 "linearmodels.system.results.GMMSystemResults": {
  "lineno": 684,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.system.results.GMMSystemResults.__init__": {
  "lineno": 694,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.system.results.GMMSystemResults.j_stat": {
  "lineno": 716,
  "symbols_in_volume": [
   "linearmodels.utility.WaldTestStatistic",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results.GMMSystemResults.w": {
  "lineno": 701,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results.GMMSystemResults.weight_config": {
  "lineno": 711,
  "symbols_in_volume": [
   "property",
   "str",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.system.results.GMMSystemResults.weight_type": {
  "lineno": 706,
  "symbols_in_volume": [
   "property",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemEquationResult": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.system.results.SystemEquationResult.__init__": {
  "lineno": 535,
  "symbols_in_volume": [
   "SystemEquationResult",
   "linearmodels.utility.AttrDict",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemEquationResult.dependent": {
  "lineno": 550,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property",
   "str",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemEquationResult.equation_label": {
  "lineno": 545,
  "symbols_in_volume": [
   "property",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemEquationResult.f_statistic": {
  "lineno": 640,
  "symbols_in_volume": [
   "linearmodels.utility.WaldTestStatistic",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemEquationResult.fitted_values": {
  "lineno": 673,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemEquationResult.instruments": {
  "lineno": 555,
  "symbols_in_volume": [
   "linearmodels.typing.data.OptionalDataFrame",
   "property",
   "str",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemEquationResult.resids": {
  "lineno": 663,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemEquationResult.rsquared_adj": {
  "lineno": 678,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemEquationResult.summary": {
  "lineno": 560,
  "symbols_in_volume": [
   "linearmodels.compat.statsmodels.Summary",
   "linearmodels.utility._str",
   "linearmodels.utility.param_table",
   "linearmodels.utility.pval_format",
   "property",
   "statsmodels.iolib.summary.SimpleTable",
   "statsmodels.iolib.summary.fmt_2cols",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemEquationResult.wresids": {
  "lineno": 668,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemResults": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.system.results.SystemResults.__init__": {
  "lineno": 208,
  "symbols_in_volume": [
   "SystemEquationResult",
   "linearmodels.utility.AttrDict",
   "str",
   "super"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemResults._out_of_sample": {
  "lineno": 247,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "linearmodels.typing.ArrayLike",
   "pandas.DataFrame",
   "pandas.Series",
   "str",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemResults.equation_labels": {
  "lineno": 232,
  "symbols_in_volume": [
   "list",
   "property",
   "str",
   "typing.List"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemResults.equations": {
  "lineno": 227,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemResults.fitted_values": {
  "lineno": 242,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemResults.model": {
  "lineno": 222,
  "symbols_in_volume": [
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemResults.predict": {
  "lineno": 273,
  "symbols_in_volume": [
   "ValueError",
   "bool",
   "dict",
   "isinstance",
   "linearmodels.typing.ArrayLike",
   "pandas.DataFrame",
   "pandas.concat",
   "str",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemResults.resids": {
  "lineno": 237,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemResults.sigma": {
  "lineno": 370,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemResults.summary": {
  "lineno": 442,
  "symbols_in_volume": [
   "enumerate",
   "len",
   "linearmodels.compat.statsmodels.Summary",
   "linearmodels.utility._str",
   "linearmodels.utility.format_wide",
   "linearmodels.utility.param_table",
   "property",
   "statsmodels.iolib.summary.SimpleTable",
   "statsmodels.iolib.summary.fmt_2cols",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemResults.system_rsquared": {
  "lineno": 375,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results.SystemResults.wresids": {
  "lineno": 365,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults": {
  "lineno": 30,
  "symbols_in_volume": [
   "linearmodels.utility._SummaryStr"
  ],
  "type": "class"
 },
 "linearmodels.system.results._CommonResults.__init__": {
  "lineno": 31,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "linearmodels.utility.AttrDict"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.conf_int": {
  "lineno": 169,
  "symbols_in_volume": [
   "float",
   "numpy.asarray",
   "pandas.DataFrame",
   "scipy.stats.norm.ppf",
   "scipy.stats.t.ppf"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.cov": {
  "lineno": 59,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.cov_config": {
  "lineno": 69,
  "symbols_in_volume": [
   "bool",
   "property",
   "str",
   "typing.Dict"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.cov_estimator": {
  "lineno": 64,
  "symbols_in_volume": [
   "property",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.debiased": {
  "lineno": 79,
  "symbols_in_volume": [
   "bool",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.df_model": {
  "lineno": 164,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.df_resid": {
  "lineno": 159,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.iterations": {
  "lineno": 74,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.method": {
  "lineno": 54,
  "symbols_in_volume": [
   "property",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.model_ss": {
  "lineno": 144,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.nobs": {
  "lineno": 154,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.params": {
  "lineno": 84,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.pvalues": {
  "lineno": 100,
  "symbols_in_volume": [
   "numpy.abs",
   "pandas.Series",
   "property_cached.cached_property",
   "scipy.stats.norm.cdf",
   "scipy.stats.t.cdf"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.resid_ss": {
  "lineno": 149,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.rsquared": {
  "lineno": 112,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.std_errors": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.diag",
   "numpy.sqrt",
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.total_ss": {
  "lineno": 139,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.system.results._CommonResults.tstats": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.test": {
  "lineno": 84,
  "symbols_in_volume": [
   "ImportError",
   "bool",
   "isinstance",
   "list",
   "os.path.dirname",
   "print",
   "pytest.main",
   "str",
   "sys.exit",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.asset_pricing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.asset_pricing._utility": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.asset_pricing._utility.generate_data": {
  "lineno": 7,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "numpy.arange",
   "numpy.random.chisquare",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.sqrt",
   "pandas.DataFrame",
   "pandas.date_range",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing._utility.get_all": {
  "lineno": 33,
  "symbols_in_volume": [
   "attr",
   "callable",
   "dir",
   "getattr"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_covariance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.asset_pricing.test_covariance.data": {
  "lineno": 14,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "numpy.eye",
   "numpy.random.rand",
   "numpy.random.randn",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_covariance.test_alt_jacobians": {
  "lineno": 42,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance",
   "numpy.eye",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_covariance.test_center": {
  "lineno": 49,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.covariance.HeteroskedasticWeight",
   "linearmodels.asset_pricing.covariance.KernelWeight",
   "numpy.any"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_covariance.test_kernel_errors": {
  "lineno": 22,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.asset_pricing.covariance.KernelCovariance",
   "linearmodels.asset_pricing.covariance.KernelWeight",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_covariance.test_no_jacobian": {
  "lineno": 33,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.asset_pricing.covariance.KernelCovariance",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_formulas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.asset_pricing.test_formulas.data": {
  "lineno": 34,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.concat",
   "linearmodels.tests.asset_pricing._utility.generate_data",
   "numpy.array",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_formulas.model": {
  "lineno": 22,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.LinearFactorModel",
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "linearmodels.asset_pricing.model.TradedFactorModel",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_formulas.non_traded_model": {
  "lineno": 29,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.LinearFactorModel",
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_formulas.test_non_traded_risk_free": {
  "lineno": 64,
  "symbols_in_volume": [
   "non_traded_model",
   "non_traded_model.from_formula",
   "pandas.testing.assert_frame_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_formulas.test_traded_model_formula": {
  "lineno": 42,
  "symbols_in_volume": [
   "model",
   "model.from_formula",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_linear_factor_gmm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.asset_pricing.test_linear_factor_gmm.data": {
  "lineno": 9,
  "symbols_in_volume": [
   "linearmodels.tests.asset_pricing._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_linear_factor_gmm.test_linear_model_gmm_cue_smoke": {
  "lineno": 106,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_linear_factor_gmm.test_linear_model_gmm_kernel_bandwidth_smoke": {
  "lineno": 99,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_linear_factor_gmm.test_linear_model_gmm_kernel_smoke": {
  "lineno": 89,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "pytest.mark.smoke",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_linear_factor_gmm.test_linear_model_gmm_moments_jacobian": {
  "lineno": 14,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "numpy.c_",
   "numpy.diag",
   "numpy.eye",
   "numpy.hstack",
   "numpy.kron",
   "numpy.linalg.inv",
   "numpy.ones",
   "numpy.r_",
   "numpy.testing.assert_allclose",
   "numpy.vstack",
   "numpy.zeros",
   "range",
   "tuple"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_linear_factor_gmm.test_linear_model_gmm_smoke_iterate": {
  "lineno": 72,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_linear_factor_gmm.test_linear_model_gmm_smoke_risk_free": {
  "lineno": 79,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "pytest.mark.smoke",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_linear_factor_model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.asset_pricing.test_linear_factor_model.data": {
  "lineno": 16,
  "symbols_in_volume": [
   "linearmodels.tests.asset_pricing._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_linear_factor_model.test_infeasible": {
  "lineno": 334,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.asset_pricing.model.LinearFactorModel",
   "linearmodels.tests.asset_pricing._utility.generate_data",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_linear_factor_model.test_linear_model_parameters": {
  "lineno": 21,
  "symbols_in_volume": [
   "float",
   "linearmodels.asset_pricing.model.LinearFactorModel",
   "linearmodels.iv.covariance._cov_kernel",
   "linearmodels.iv.covariance.kernel_optimal_bandwidth",
   "linearmodels.iv.covariance.kernel_weight_bartlett",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "numpy.arange",
   "numpy.c_",
   "numpy.eye",
   "numpy.int64",
   "numpy.kron",
   "numpy.linalg.inv",
   "numpy.linalg.lstsq",
   "numpy.linalg.pinv",
   "numpy.ones",
   "numpy.r_",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "range",
   "scipy.stats.chi2"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_linear_factor_model.test_linear_model_parameters_risk_free": {
  "lineno": 128,
  "symbols_in_volume": [
   "float",
   "linearmodels.asset_pricing.model.LinearFactorModel",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "numpy.arange",
   "numpy.c_",
   "numpy.eye",
   "numpy.int64",
   "numpy.kron",
   "numpy.linalg.inv",
   "numpy.linalg.lstsq",
   "numpy.linalg.pinv",
   "numpy.ones",
   "numpy.r_",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "range",
   "scipy.stats.chi2"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_linear_factor_model.test_linear_model_parameters_risk_free_gls": {
  "lineno": 226,
  "symbols_in_volume": [
   "float",
   "linearmodels.asset_pricing.model.LinearFactorModel",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "numpy.arange",
   "numpy.c_",
   "numpy.cov",
   "numpy.diag",
   "numpy.eye",
   "numpy.int64",
   "numpy.kron",
   "numpy.linalg.eigh",
   "numpy.linalg.inv",
   "numpy.linalg.lstsq",
   "numpy.linalg.pinv",
   "numpy.ones",
   "numpy.r_",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "range",
   "scipy.stats.chi2",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings"
  ],
  "type": "module"
 },
 "linearmodels.tests.asset_pricing.test_model.data": {
  "lineno": 22,
  "symbols_in_volume": [
   "linearmodels.tests.asset_pricing._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model.test_all_missing": {
  "lineno": 208,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.asset_pricing.model.TradedFactorModel",
   "numpy.nan",
   "numpy.ones",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model.test_drop_missing": {
  "lineno": 180,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.asset_pricing.model.TradedFactorModel",
   "linearmodels.iv.data.IVData",
   "numpy.asarray",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model.test_errors": {
  "lineno": 134,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "linearmodels.asset_pricing.model.LinearFactorModel",
   "linearmodels.asset_pricing.model.TradedFactorModel",
   "numpy.c_",
   "numpy.ones",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model.test_linear_model_gmm_cue_smoke": {
  "lineno": 62,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model.test_linear_model_gmm_kernel_bandwidth_smoke": {
  "lineno": 55,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model.test_linear_model_gmm_kernel_smoke": {
  "lineno": 48,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model.test_linear_model_gmm_smoke": {
  "lineno": 27,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model.test_linear_model_gmm_smoke_iterate": {
  "lineno": 34,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model.test_linear_model_gmm_smoke_risk_free": {
  "lineno": 41,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model.test_linear_model_time_series": {
  "lineno": 69,
  "symbols_in_volume": [
   "float",
   "isinstance",
   "linearmodels.asset_pricing.model.TradedFactorModel",
   "linearmodels.iv.model._OLS",
   "linearmodels.tests.asset_pricing._utility.get_all",
   "list",
   "numpy.array",
   "numpy.asarray",
   "numpy.c_",
   "numpy.eye",
   "numpy.linalg.inv",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "pandas.DataFrame",
   "range",
   "scipy.stats.chi2.cdf",
   "statsmodels.tools.tools.add_constant"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model.test_linear_model_time_series_error": {
  "lineno": 128,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.asset_pricing.model.TradedFactorModel",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model.test_linear_model_time_series_kernel_smoke": {
  "lineno": 122,
  "symbols_in_volume": [
   "linearmodels.asset_pricing.model.TradedFactorModel",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model.test_repr": {
  "lineno": 215,
  "symbols_in_volume": [
   "hex",
   "id",
   "linearmodels.asset_pricing.model.LinearFactorModel",
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "linearmodels.asset_pricing.model.TradedFactorModel",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.asset_pricing.test_model.test_unknown_kernel": {
  "lineno": 199,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.asset_pricing.model.LinearFactorModel",
   "linearmodels.asset_pricing.model.LinearFactorModelGMM",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.datasets.test_datasets": {
  "lineno": null,
  "symbols_in_volume": [
   "linearmodels.datasets.birthweight",
   "linearmodels.datasets.card",
   "linearmodels.datasets.fertility",
   "linearmodels.datasets.french",
   "linearmodels.datasets.fringe",
   "linearmodels.datasets.jobtraining",
   "linearmodels.datasets.meps",
   "linearmodels.datasets.mroz",
   "linearmodels.datasets.munnell",
   "linearmodels.datasets.wage",
   "linearmodels.datasets.wage_panel",
   "list",
   "map"
  ],
  "type": "module"
 },
 "linearmodels.tests.datasets.test_datasets.dataset_module": {
  "lineno": 34,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.datasets.test_datasets.test_dataset": {
  "lineno": 39,
  "symbols_in_volume": [
   "isinstance",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.iv._utility": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.iv._utility.generate_data": {
  "lineno": 6,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "numpy.arange",
   "numpy.eye",
   "numpy.linalg.inv",
   "numpy.linalg.pinv",
   "numpy.random.multivariate_normal",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.results": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.iv.results.execute-stata": {
  "lineno": null,
  "symbols_in_volume": [
   "open",
   "os.getcwd",
   "os.path.exists",
   "os.path.join",
   "os.unlink",
   "print",
   "subprocess.call",
   "zip"
  ],
  "type": "module"
 },
 "linearmodels.tests.iv.results.execute-stata-simulated-data": {
  "lineno": null,
  "symbols_in_volume": [
   "count_vars",
   "itertools.product",
   "len",
   "list",
   "open",
   "os.getcwd",
   "os.path.exists",
   "os.path.join",
   "os.unlink",
   "print",
   "subprocess.call",
   "typing.Iterable",
   "typing.List",
   "zip"
  ],
  "type": "module"
 },
 "linearmodels.tests.iv.results.execute-stata-simulated-data.count_vars": {
  "lineno": 112,
  "symbols_in_volume": [
   "len"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.results.read_stata_results": {
  "lineno": null,
  "symbols_in_volume": [
   "__name__",
   "finalize",
   "os.getcwd",
   "os.path.join",
   "parse_block",
   "parse_file"
  ],
  "type": "module"
 },
 "linearmodels.tests.iv.results.read_stata_results.finalize": {
  "lineno": 79,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.results.read_stata_results.parse_block": {
  "lineno": 37,
  "symbols_in_volume": [
   "ValueError",
   "enumerate",
   "float",
   "len",
   "linearmodels.utility.AttrDict",
   "pandas.DataFrame",
   "repl_const"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.results.read_stata_results.parse_file": {
  "lineno": 23,
  "symbols_in_volume": [
   "collections.defaultdict",
   "list",
   "open",
   "str",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.results.read_stata_results.process_results": {
  "lineno": 108,
  "symbols_in_volume": [
   "finalize",
   "parse_block",
   "parse_file"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.results.read_stata_results.repl_const": {
  "lineno": 9,
  "symbols_in_volume": [
   "enumerate",
   "list",
   "pandas.to_numeric"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.results.simulated-test-data": {
  "lineno": null,
  "symbols_in_volume": [
   "len",
   "numpy.arange",
   "numpy.c_",
   "numpy.empty",
   "numpy.eye",
   "numpy.linalg.cholesky",
   "numpy.ones",
   "numpy.random.chisquare",
   "numpy.random.multivariate_normal",
   "numpy.random.seed",
   "numpy.tile",
   "numpy.zeros",
   "pandas.DataFrame",
   "range",
   "statsmodels.tools.tools.add_constant"
  ],
  "type": "module"
 },
 "linearmodels.tests.iv.test_absorbing": {
  "lineno": null,
  "symbols_in_volume": [
   "Hasher",
   "itertools.product",
   "pytest.mark.filterwarnings"
  ],
  "type": "module"
 },
 "linearmodels.tests.iv.test_absorbing.Hasher": {
  "lineno": 38,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_absorbing.Hasher.hash_func": {
  "lineno": 39,
  "symbols_in_volume": [
   "ImportError",
   "hashlib.sha1",
   "property",
   "xxhash.xxh64"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.Hasher.single": {
  "lineno": 50,
  "symbols_in_volume": [
   "numpy.ascontiguousarray"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.assert_results_equal": {
  "lineno": 572,
  "symbols_in_volume": [
   "NotImplementedError",
   "dir",
   "float",
   "getattr",
   "int",
   "isinstance",
   "left",
   "left.iloc",
   "linearmodels.compat.statsmodels.Summary",
   "linearmodels.iv.results.AbsorbingLSResults",
   "linearmodels.iv.results.OLSResults",
   "numpy.ndarray",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pandas.Series",
   "right",
   "right.iloc",
   "str",
   "struct.calcsize",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.cat": {
  "lineno": 78,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pandas.DataFrame",
   "pytest.fixture",
   "random_cat",
   "range",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.cont": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.fixture",
   "range",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.data": {
  "lineno": 216,
  "symbols_in_volume": [
   "generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.generate_data": {
  "lineno": 118,
  "symbols_in_volume": [
   "enumerate",
   "len",
   "linearmodels.iv.absorbing.Interaction",
   "linearmodels.utility.AttrDict",
   "max",
   "min",
   "numpy.column_stack",
   "numpy.ones",
   "numpy.random.RandomState",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.interact": {
  "lineno": 105,
  "symbols_in_volume": [
   "linearmodels.iv.absorbing.Interaction",
   "numpy.random.RandomState",
   "pytest.fixture",
   "random_cat",
   "random_cont",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.ols_data": {
  "lineno": 242,
  "symbols_in_volume": [
   "generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.random_cat": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.random_cont": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.rs": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_absorbing_exceptions": {
  "lineno": 261,
  "symbols_in_volume": [
   "RuntimeError",
   "TypeError",
   "ValueError",
   "isinstance",
   "linearmodels.iv.absorbing.AbsorbingLS",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pytest.raises",
   "random_cat"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_absorbing_regressors": {
  "lineno": 441,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.iv.absorbing.AbsorbingRegressor",
   "linearmodels.panel.utility.dummy_matrix",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "pandas.Series",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.diags",
   "scipy.sparse.hstack"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_absorbing_regressors_hash": {
  "lineno": 470,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.compat.pandas.to_numpy",
   "linearmodels.iv.absorbing.AbsorbingRegressor",
   "sorted",
   "tuple"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_against_ols": {
  "lineno": 496,
  "symbols_in_volume": [
   "assert_results_equal",
   "isinstance",
   "linearmodels.compat.pandas.to_numpy",
   "linearmodels.iv._utility.annihilate",
   "linearmodels.iv.absorbing.AbsorbingLS",
   "linearmodels.iv.model._OLS",
   "linearmodels.panel.utility.dummy_matrix",
   "numpy.any",
   "numpy.argsort",
   "numpy.column_stack",
   "numpy.linalg.eig",
   "numpy.linalg.matrix_rank",
   "numpy.ones",
   "numpy.ptp",
   "numpy.sqrt",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_cache": {
  "lineno": 541,
  "symbols_in_volume": [
   "generate_data",
   "len",
   "linearmodels.iv.absorbing.AbsorbingLS",
   "linearmodels.iv.absorbing._VARIABLE_CACHE"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_category_continuous_interaction": {
  "lineno": 353,
  "symbols_in_volume": [
   "linearmodels.iv.absorbing.category_continuous_interaction",
   "numpy.arange",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "pandas.Categorical",
   "pandas.Series"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_category_continuous_interaction_interwoven": {
  "lineno": 369,
  "symbols_in_volume": [
   "linearmodels.iv.absorbing.category_continuous_interaction",
   "numpy.arange",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "pandas.Categorical",
   "pandas.Series"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_category_interaction": {
  "lineno": 339,
  "symbols_in_volume": [
   "linearmodels.iv.absorbing.category_interaction",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "pandas.Categorical",
   "pandas.Series"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_category_product": {
  "lineno": 307,
  "symbols_in_volume": [
   "linearmodels.iv.absorbing.category_product",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_category_product_not_cat": {
  "lineno": 333,
  "symbols_in_volume": [
   "TypeError",
   "linearmodels.iv.absorbing.category_product",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.raises",
   "range",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_category_product_too_large": {
  "lineno": 324,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.absorbing.category_product",
   "pandas.DataFrame",
   "pytest.raises",
   "random_cat",
   "range",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_center_cov_arg": {
  "lineno": 619,
  "symbols_in_volume": [
   "generate_data",
   "linearmodels.iv.absorbing.AbsorbingLS"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_clear_cache": {
  "lineno": 301,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.absorbing._VARIABLE_CACHE",
   "linearmodels.iv.absorbing.clear_cache",
   "numpy.empty"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_drop_missing": {
  "lineno": 628,
  "symbols_in_volume": [
   "generate_data",
   "linearmodels.compat.pandas.to_numpy",
   "linearmodels.iv.absorbing.AbsorbingLS",
   "linearmodels.utility.MissingValueWarning",
   "numpy.nan",
   "pandas.Categorical",
   "pytest.warns"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_empty_absorbing_regressor": {
  "lineno": 490,
  "symbols_in_volume": [
   "linearmodels.iv.absorbing.AbsorbingRegressor",
   "tuple"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_empty_interaction": {
  "lineno": 429,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.iv.absorbing.Interaction",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_instrments": {
  "lineno": 562,
  "symbols_in_volume": [
   "generate_data",
   "linearmodels.iv.absorbing.AbsorbingLS"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_interaction_cat_bad_nobs": {
  "lineno": 422,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.absorbing.Interaction",
   "numpy.empty",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_interaction_cat_cont": {
  "lineno": 399,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.compat.pandas.to_numpy",
   "linearmodels.iv.absorbing.Interaction",
   "linearmodels.iv.absorbing.category_interaction",
   "linearmodels.iv.absorbing.category_product",
   "numpy.column_stack",
   "numpy.testing.assert_allclose",
   "numpy.where",
   "pandas.testing.assert_frame_equal",
   "range",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_interaction_cat_cont_convert": {
  "lineno": 435,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.to_numpy",
   "linearmodels.iv.absorbing.Interaction",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_interaction_cat_only": {
  "lineno": 379,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.iv.absorbing.Interaction",
   "linearmodels.iv.absorbing.category_interaction",
   "linearmodels.iv.absorbing.category_product",
   "numpy.testing.assert_allclose",
   "pandas.testing.assert_frame_equal",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_interaction_cont_only": {
  "lineno": 389,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.compat.pandas.to_numpy",
   "linearmodels.iv.absorbing.Interaction",
   "numpy.testing.assert_allclose",
   "pandas.testing.assert_frame_equal",
   "scipy.sparse.csc_matrix"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_interaction_from_frame": {
  "lineno": 416,
  "symbols_in_volume": [
   "linearmodels.iv.absorbing.Interaction",
   "linearmodels.iv.absorbing.Interaction.from_frame",
   "numpy.testing.assert_allclose",
   "pandas.concat"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.test_smoke": {
  "lineno": 247,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.compat.statsmodels.Summary",
   "linearmodels.iv.absorbing.AbsorbingLS",
   "pytest.mark.smoke",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_absorbing.weights": {
  "lineno": 97,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata": {
  "lineno": null,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "linearmodels.iv.IVGMM",
   "linearmodels.iv.IVLIML",
   "linearmodels.tests.iv.results.read_stata_results.process_results",
   "os.path.abspath",
   "os.path.join",
   "os.path.split",
   "pandas.read_csv",
   "pandas.read_stata",
   "pytest.mark.filterwarnings"
  ],
  "type": "module"
 },
 "linearmodels.tests.iv.test_against_stata.TestHousingResults": {
  "lineno": 64,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_against_stata.TestHousingResults.test_cov": {
  "lineno": 95,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestHousingResults.test_fstat": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestHousingResults.test_model_ss": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestHousingResults.test_params": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestHousingResults.test_residual_ss": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestHousingResults.test_rsquared": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestHousingResults.test_rsquared_adj": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestHousingResults.test_tstats": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestSimulatedResults": {
  "lineno": 162,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_against_stata.TestSimulatedResults.test_cov": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestSimulatedResults.test_fstat": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.skip"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestSimulatedResults.test_j_stat": {
  "lineno": 215,
  "symbols_in_volume": [
   "hasattr",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestSimulatedResults.test_kappa": {
  "lineno": 221,
  "symbols_in_volume": [
   "hasattr",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestSimulatedResults.test_model_ss": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestSimulatedResults.test_params": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestSimulatedResults.test_residual_ss": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestSimulatedResults.test_rsquared": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestSimulatedResults.test_rsquared_adj": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestSimulatedResults.test_tstats": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.TestSimulatedResults.test_weight_mat": {
  "lineno": 205,
  "symbols_in_volume": [
   "hasattr",
   "isinstance",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.construct_model": {
  "lineno": 117,
  "symbols_in_volume": [
   "copy.deepcopy",
   "mod",
   "numpy.empty",
   "pandas.DataFrame",
   "pytest.skip",
   "statsmodels.tools.tools.add_constant"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.housing": {
  "lineno": 40,
  "symbols_in_volume": [
   "copy.deepcopy",
   "list",
   "mod",
   "pytest.fixture",
   "statsmodels.tools.tools.add_constant"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_against_stata.simulated": {
  "lineno": 155,
  "symbols_in_volume": [
   "construct_model",
   "list",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.iv.test_covariance.TestAutomaticBandwidth": {
  "lineno": 314,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_covariance.TestAutomaticBandwidth.test_smoke": {
  "lineno": 315,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.kernel_optimal_bandwidth",
   "pytest.mark.smoke",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestAutomaticBandwidth.test_unknown_kernel": {
  "lineno": 324,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.covariance.kernel_optimal_bandwidth",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestClusteredCovariance": {
  "lineno": 187,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_covariance.TestClusteredCovariance.test_asymptotic": {
  "lineno": 188,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.covariance.ClusteredCovariance",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "numpy.unique",
   "numpy.zeros",
   "range",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestClusteredCovariance.test_debiased": {
  "lineno": 211,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.covariance.ClusteredCovariance",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "numpy.unique",
   "numpy.zeros",
   "range",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestClusteredCovariance.test_errors": {
  "lineno": 243,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.covariance.ClusteredCovariance",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestHeteroskedasticCovariance": {
  "lineno": 140,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_covariance.TestHeteroskedasticCovariance.test_asymptotic": {
  "lineno": 141,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.HeteroskedasticCovariance",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestHeteroskedasticCovariance.test_debiased": {
  "lineno": 149,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.HeteroskedasticCovariance",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestHeteroskedasticCovariance.test_kappa": {
  "lineno": 174,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.HeteroskedasticCovariance",
   "numpy.linalg.inv",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestHeteroskedasticCovariance.test_kappa_debiased": {
  "lineno": 160,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.HeteroskedasticCovariance",
   "numpy.linalg.inv",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestHomoskedasticCovariance": {
  "lineno": 85,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_covariance.TestHomoskedasticCovariance.test_asymptotic": {
  "lineno": 86,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.HomoskedasticCovariance",
   "numpy.linalg.inv",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestHomoskedasticCovariance.test_debiased": {
  "lineno": 98,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.HomoskedasticCovariance",
   "numpy.testing.assert_allclose",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestHomoskedasticCovariance.test_errors": {
  "lineno": 133,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.covariance.HomoskedasticCovariance",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestHomoskedasticCovariance.test_kappa": {
  "lineno": 110,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.HomoskedasticCovariance",
   "numpy.linalg.inv",
   "numpy.testing.assert_allclose",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestHomoskedasticCovariance.test_kappa_debiased": {
  "lineno": 122,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.HomoskedasticCovariance",
   "numpy.linalg.inv",
   "numpy.testing.assert_allclose",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestKernelCovariance": {
  "lineno": 250,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_covariance.TestKernelCovariance.test_asymptotic": {
  "lineno": 251,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.covariance.KernelCovariance",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "range",
   "str",
   "w"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestKernelCovariance.test_debiased": {
  "lineno": 279,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.KernelCovariance",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.TestKernelCovariance.test_unknown_kernel": {
  "lineno": 307,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.covariance.KernelCovariance",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.data": {
  "lineno": 37,
  "symbols_in_volume": [
   "linearmodels.tests.iv._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.kernel": {
  "lineno": 22,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.kernel_weight_bartlett",
   "linearmodels.iv.covariance.kernel_weight_parzen",
   "linearmodels.iv.covariance.kernel_weight_quadratic_spectral",
   "linearmodels.utility.AttrDict",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.test_cov_kernel": {
  "lineno": 42,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.covariance._cov_kernel",
   "numpy.arange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.test_kernel_bartlett": {
  "lineno": 47,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.kernel_weight_bartlett",
   "numpy.arange",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.test_kernel_parzen": {
  "lineno": 54,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.kernel_weight_parzen",
   "numpy.testing.assert_equal",
   "w"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.test_kernel_parzen.w": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.empty",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.test_kernel_qs": {
  "lineno": 70,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.kernel_weight_quadratic_spectral",
   "numpy.testing.assert_equal",
   "w"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_covariance.test_kernel_qs.w": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.empty",
   "numpy.pi",
   "numpy.sin",
   "range",
   "w"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data": {
  "lineno": null,
  "symbols_in_volume": [
   "ImportError"
  ],
  "type": "module"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler": {
  "lineno": 17,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_categorical": {
  "lineno": 147,
  "symbols_in_volume": [
   "dict",
   "linearmodels.iv.data.IVData",
   "list",
   "numpy.empty",
   "numpy.float",
   "numpy.testing.assert_equal",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.date_range",
   "sorted"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_categorical_keep_first": {
  "lineno": 185,
  "symbols_in_volume": [
   "dict",
   "linearmodels.iv.data.IVData",
   "list",
   "numpy.empty",
   "numpy.float",
   "numpy.testing.assert_equal",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.date_range",
   "sorted"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_categorical_no_conversion": {
  "lineno": 173,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "list",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_categorical_series": {
  "lineno": 161,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "list",
   "numpy.float",
   "numpy.testing.assert_equal",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.date_range",
   "sorted"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_existing_datahandler": {
  "lineno": 134,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "numpy.empty",
   "numpy.testing.assert_equal",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_incorrect_nobs": {
  "lineno": 204,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.data.IVData",
   "numpy.empty",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_invalid_types": {
  "lineno": 107,
  "symbols_in_volume": [
   "AnotherClass",
   "TypeError",
   "ValueError",
   "linearmodels.iv.data.IVData",
   "numpy.empty",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_invalid_types.AnotherClass": {
  "lineno": 114,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_invalid_types.AnotherClass.ndim": {
  "lineno": 115,
  "symbols_in_volume": [
   "int",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_mixed_data": {
  "lineno": 209,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.data.IVData",
   "pandas.Series",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_nobs_missing_error": {
  "lineno": 200,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.data.IVData",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_numpy_1d": {
  "lineno": 30,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "list",
   "numpy.arange",
   "numpy.empty",
   "numpy.testing.assert_equal",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_numpy_2d": {
  "lineno": 18,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "list",
   "numpy.arange",
   "numpy.empty",
   "numpy.testing.assert_equal",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_pandas_df_numeric": {
  "lineno": 41,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "list",
   "numpy.empty",
   "numpy.testing.assert_equal",
   "pandas.DataFrame",
   "pandas.date_range",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_pandas_series_numeric": {
  "lineno": 54,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "list",
   "numpy.empty",
   "numpy.testing.assert_equal",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_string_cat_equiv": {
  "lineno": 121,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_xarray_1d": {
  "lineno": 67,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "list",
   "numpy.arange",
   "numpy.random.randn",
   "numpy.testing.assert_equal",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.testing.assert_frame_equal",
   "pandas.testing.assert_series_equal",
   "pytest.mark.skipif",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.TestDataHandler.test_xarray_2d": {
  "lineno": 87,
  "symbols_in_volume": [
   "linearmodels.iv.data.IVData",
   "list",
   "numpy.arange",
   "numpy.random.randn",
   "numpy.testing.assert_equal",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pandas.testing.assert_frame_equal",
   "pandas.testing.assert_series_equal",
   "pytest.mark.skipif",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_data.test_duplicate_column_names": {
  "lineno": 215,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.data.IVData",
   "numpy.ones",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.iv.test_formulas.data": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.c_",
   "numpy.eye",
   "numpy.random.chisquare",
   "numpy.random.multivariate_normal",
   "numpy.random.seed",
   "numpy.zeros",
   "pandas.DataFrame",
   "pytest.fixture",
   "range",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.formula": {
  "lineno": 33,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.model_and_func": {
  "lineno": 13,
  "symbols_in_volume": [
   "linearmodels.formula.iv_2sls",
   "linearmodels.formula.iv_gmm",
   "linearmodels.formula.iv_gmm_cue",
   "linearmodels.formula.iv_liml",
   "linearmodels.iv.IV2SLS",
   "linearmodels.iv.IVGMM",
   "linearmodels.iv.IVGMMCUE",
   "linearmodels.iv.IVLIML",
   "list",
   "pytest.fixture",
   "zip"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.sigmoid": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.test_categorical": {
  "lineno": 169,
  "symbols_in_volume": [
   "func",
   "model",
   "model.from_formula",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.testing.assert_allclose",
   "pandas.Categorical",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.test_formula": {
  "lineno": 65,
  "symbols_in_volume": [
   "func",
   "model"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.test_formula_function": {
  "lineno": 200,
  "symbols_in_volume": [
   "ValueError",
   "func",
   "linearmodels.compat.pandas.concat",
   "model",
   "model.from_formula",
   "numpy.exp",
   "numpy.testing.assert_equal",
   "pytest.raises",
   "sigmoid"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.test_formula_kernel": {
  "lineno": 99,
  "symbols_in_volume": [
   "func",
   "model",
   "model.from_formula"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.test_formula_ols": {
  "lineno": 106,
  "symbols_in_volume": [
   "func",
   "model",
   "model.from_formula"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.test_formula_ols_weights": {
  "lineno": 119,
  "symbols_in_volume": [
   "func",
   "model",
   "model.from_formula"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.test_formula_weights": {
  "lineno": 82,
  "symbols_in_volume": [
   "func",
   "model",
   "model.from_formula"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.test_invalid_formula": {
  "lineno": 148,
  "symbols_in_volume": [
   "SyntaxError",
   "ValueError",
   "func",
   "model",
   "model.from_formula",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.test_no_exog": {
  "lineno": 132,
  "symbols_in_volume": [
   "func",
   "model",
   "model.from_formula",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.test_ols_formula": {
  "lineno": 287,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS.from_formula",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.test_predict_formula": {
  "lineno": 188,
  "symbols_in_volume": [
   "func",
   "model",
   "model.from_formula",
   "numpy.testing.assert_allclose",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.test_predict_formula_error": {
  "lineno": 252,
  "symbols_in_volume": [
   "ValueError",
   "func",
   "model",
   "model.from_formula",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.test_predict_formula_function": {
  "lineno": 226,
  "symbols_in_volume": [
   "func",
   "linearmodels.compat.pandas.concat",
   "model",
   "model.from_formula",
   "numpy.exp",
   "numpy.testing.assert_allclose",
   "pandas.testing.assert_frame_equal",
   "sigmoid"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_formulas.test_single_character_names": {
  "lineno": 264,
  "symbols_in_volume": [
   "func",
   "model",
   "model.from_formula"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.iv.test_gmm.TestClusterWeight": {
  "lineno": 168,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_gmm.TestClusterWeight.test_center": {
  "lineno": 169,
  "symbols_in_volume": [
   "linearmodels.iv.gmm.OneWayClusteredWeightMatrix",
   "numpy.testing.assert_allclose",
   "numpy.unique",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestClusterWeight.test_config": {
  "lineno": 197,
  "symbols_in_volume": [
   "linearmodels.iv.gmm.OneWayClusteredWeightMatrix",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestClusterWeight.test_debiased": {
  "lineno": 182,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.gmm.OneWayClusteredWeightMatrix",
   "numpy.testing.assert_allclose",
   "numpy.unique",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestClusterWeight.test_errors": {
  "lineno": 203,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.gmm.OneWayClusteredWeightMatrix",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestGMMCovariance": {
  "lineno": 209,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_gmm.TestGMMCovariance.test_clustered": {
  "lineno": 230,
  "symbols_in_volume": [
   "linearmodels.iv.gmm.IVGMMCovariance",
   "linearmodels.iv.gmm.OneWayClusteredWeightMatrix",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestGMMCovariance.test_heteroskedastic": {
  "lineno": 220,
  "symbols_in_volume": [
   "linearmodels.iv.gmm.HeteroskedasticWeightMatrix",
   "linearmodels.iv.gmm.IVGMMCovariance",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestGMMCovariance.test_homoskedastic": {
  "lineno": 210,
  "symbols_in_volume": [
   "linearmodels.iv.gmm.HomoskedasticWeightMatrix",
   "linearmodels.iv.gmm.IVGMMCovariance",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestGMMCovariance.test_kernel": {
  "lineno": 253,
  "symbols_in_volume": [
   "linearmodels.iv.gmm.IVGMMCovariance",
   "linearmodels.iv.gmm.KernelWeightMatrix",
   "numpy.testing.assert_allclose",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestGMMCovariance.test_unknown": {
  "lineno": 278,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.gmm.IVGMMCovariance",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestHeteroskedasticWeight": {
  "lineno": 79,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_gmm.TestHeteroskedasticWeight.test_center": {
  "lineno": 80,
  "symbols_in_volume": [
   "linearmodels.iv.gmm.HeteroskedasticWeightMatrix",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestHeteroskedasticWeight.test_config": {
  "lineno": 96,
  "symbols_in_volume": [
   "linearmodels.iv.gmm.HeteroskedasticWeightMatrix",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestHeteroskedasticWeight.test_debiased": {
  "lineno": 88,
  "symbols_in_volume": [
   "linearmodels.iv.gmm.HeteroskedasticWeightMatrix",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestHomoskedasticWeight": {
  "lineno": 46,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_gmm.TestHomoskedasticWeight.test_center": {
  "lineno": 47,
  "symbols_in_volume": [
   "linearmodels.iv.gmm.HomoskedasticWeightMatrix",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestHomoskedasticWeight.test_config": {
  "lineno": 69,
  "symbols_in_volume": [
   "linearmodels.iv.gmm.HomoskedasticWeightMatrix",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestHomoskedasticWeight.test_debiased": {
  "lineno": 54,
  "symbols_in_volume": [
   "linearmodels.iv.gmm.HomoskedasticWeightMatrix",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestHomoskedasticWeight.test_defaults": {
  "lineno": 62,
  "symbols_in_volume": [
   "linearmodels.iv.gmm.HomoskedasticWeightMatrix",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestKernelWeight": {
  "lineno": 107,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_gmm.TestKernelWeight.test_center": {
  "lineno": 108,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.gmm.KernelWeightMatrix",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestKernelWeight.test_config": {
  "lineno": 145,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.gmm.KernelWeightMatrix",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.TestKernelWeight.test_debiased": {
  "lineno": 128,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.gmm.KernelWeightMatrix",
   "numpy.testing.assert_allclose",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.bandwidth": {
  "lineno": 21,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.data": {
  "lineno": 41,
  "symbols_in_volume": [
   "linearmodels.tests.iv._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_gmm.kernel": {
  "lineno": 26,
  "symbols_in_volume": [
   "linearmodels.iv.covariance.kernel_weight_bartlett",
   "linearmodels.iv.covariance.kernel_weight_parzen",
   "linearmodels.iv.covariance.kernel_weight_quadratic_spectral",
   "linearmodels.utility.AttrDict",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_missing_data": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings"
  ],
  "type": "module"
 },
 "linearmodels.tests.iv.test_missing_data.data": {
  "lineno": 18,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "numpy.any",
   "numpy.arange",
   "numpy.eye",
   "numpy.isnan",
   "numpy.nan",
   "numpy.random.multivariate_normal",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.zeros",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_missing_data.get_all": {
  "lineno": 67,
  "symbols_in_volume": [
   "dir",
   "getattr",
   "val"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_missing_data.model": {
  "lineno": 13,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "linearmodels.iv.IVGMM",
   "linearmodels.iv.IVGMMCUE",
   "linearmodels.iv.IVLIML",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_missing_data.test_all_missing": {
  "lineno": 97,
  "symbols_in_volume": [
   "ValueError",
   "model",
   "numpy.nan",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_missing_data.test_missing": {
  "lineno": 75,
  "symbols_in_volume": [
   "get_all",
   "model",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_missing_data.test_missing_clustered": {
  "lineno": 85,
  "symbols_in_volume": [
   "ValueError",
   "get_all",
   "linearmodels.iv.IV2SLS",
   "pandas.testing.assert_series_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.iv.test_model.TestErrors": {
  "lineno": 75,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.iv.test_model.TestErrors.test_fuller_error": {
  "lineno": 107,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.IVLIML",
   "numpy.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.TestErrors.test_invalid_weights": {
  "lineno": 90,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.IV2SLS",
   "numpy.zeros_like",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.TestErrors.test_kappa_error": {
  "lineno": 103,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.IVLIML",
   "numpy.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.TestErrors.test_kappa_fuller_warning": {
  "lineno": 111,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.IVLIML",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.TestErrors.test_no_regressors": {
  "lineno": 129,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.IV2SLS",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.TestErrors.test_rank_deficient_endog": {
  "lineno": 82,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.IV2SLS",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.TestErrors.test_rank_deficient_exog": {
  "lineno": 76,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.IV2SLS",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.TestErrors.test_rank_deficient_instr": {
  "lineno": 95,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.IV2SLS",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.TestErrors.test_string_cat": {
  "lineno": 116,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.TestErrors.test_too_few_instruments": {
  "lineno": 133,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.IV2SLS",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.data": {
  "lineno": 17,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "numpy.arange",
   "numpy.eye",
   "numpy.linalg.inv",
   "numpy.linalg.pinv",
   "numpy.random.multivariate_normal",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.zeros",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.get_all": {
  "lineno": 67,
  "symbols_in_volume": [
   "dir",
   "getattr",
   "val"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_2sls_direct": {
  "lineno": 138,
  "symbols_in_volume": [
   "get_all",
   "linearmodels.iv.IV2SLS",
   "numpy.c_",
   "numpy.linalg.pinv",
   "numpy.testing.assert_allclose",
   "statsmodels.tools.tools.add_constant"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_2sls_direct_small": {
  "lineno": 151,
  "symbols_in_volume": [
   "get_all",
   "linearmodels.iv.IV2SLS",
   "numpy.all"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_2sls_just_identified": {
  "lineno": 217,
  "symbols_in_volume": [
   "get_all",
   "linearmodels.iv.IV2SLS"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_2sls_ols_equiv": {
  "lineno": 177,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "numpy.linalg.pinv",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_compare": {
  "lineno": 306,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.IV2SLS",
   "linearmodels.iv.IVGMM",
   "linearmodels.iv.results.compare"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_compare_single": {
  "lineno": 327,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.IV2SLS",
   "linearmodels.iv.results.compare"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_compare_single_single_parameter": {
  "lineno": 340,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.IV2SLS",
   "linearmodels.iv.results.compare"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_durbin_smoke": {
  "lineno": 242,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_first_stage_summary": {
  "lineno": 347,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_gmm_cue": {
  "lineno": 192,
  "symbols_in_volume": [
   "linearmodels.iv.IVGMM",
   "linearmodels.iv.IVGMMCUE"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_gmm_cue_optimization_options": {
  "lineno": 360,
  "symbols_in_volume": [
   "dict",
   "linearmodels.iv.IVGMM",
   "linearmodels.iv.IVGMMCUE"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_gmm_cue_starting_vals": {
  "lineno": 207,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.iv.IVGMM",
   "linearmodels.iv.IVGMMCUE",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_gmm_iter": {
  "lineno": 184,
  "symbols_in_volume": [
   "get_all",
   "linearmodels.iv.IVGMM"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_gmm_str": {
  "lineno": 352,
  "symbols_in_volume": [
   "linearmodels.iv.IVGMM",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_liml_direct": {
  "lineno": 163,
  "symbols_in_volume": [
   "get_all",
   "linearmodels.iv.IVLIML",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_model_missing": {
  "lineno": 281,
  "symbols_in_volume": [
   "copy.deepcopy",
   "len",
   "linearmodels.iv.IV2SLS",
   "linearmodels.utility.AttrDict",
   "list",
   "map",
   "numpy.any",
   "numpy.c_",
   "numpy.isnan",
   "numpy.nan",
   "numpy.testing.assert_equal",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_model_summary_smoke": {
  "lineno": 266,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "linearmodels.iv.model._OLS",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_wooldridge_smoke": {
  "lineno": 258,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_model.test_wu_hausman_smoke": {
  "lineno": 250,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_postestimation": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.join",
   "os.path.split",
   "pandas.read_csv",
   "pandas.read_stata"
  ],
  "type": "module"
 },
 "linearmodels.tests.iv.test_postestimation.data": {
  "lineno": 22,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "pytest.fixture",
   "statsmodels.tools.tools.add_constant"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_postestimation.test_anderson_rubin": {
  "lineno": 96,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_postestimation.test_basmann": {
  "lineno": 43,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_postestimation.test_basmann_f": {
  "lineno": 103,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_postestimation.test_c_stat_smoke": {
  "lineno": 111,
  "symbols_in_volume": [
   "linearmodels.iv.IVGMM",
   "numpy.testing.assert_allclose",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_postestimation.test_durbin": {
  "lineno": 54,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_postestimation.test_linear_restriction": {
  "lineno": 125,
  "symbols_in_volume": [
   "float",
   "len",
   "linearmodels.iv.IV2SLS",
   "numpy.asarray",
   "numpy.eye",
   "numpy.linalg.inv",
   "numpy.testing.assert_allclose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_postestimation.test_sargan": {
  "lineno": 32,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_postestimation.test_wooldridge_overid": {
  "lineno": 88,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_postestimation.test_wooldridge_regression": {
  "lineno": 80,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_postestimation.test_wooldridge_score": {
  "lineno": 72,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_postestimation.test_wu_hausman": {
  "lineno": 63,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_results": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.iv.test_results.data": {
  "lineno": 13,
  "symbols_in_volume": [
   "linearmodels.tests.iv._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_results.model": {
  "lineno": 18,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.iv.model.IVGMM",
   "linearmodels.iv.model.IVGMMCUE",
   "linearmodels.iv.model.IVLIML",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_results.result_checker": {
  "lineno": 23,
  "symbols_in_volume": [
   "attr",
   "callable",
   "dir",
   "getattr",
   "print",
   "result_checker",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_results.test_fitted_predict": {
  "lineno": 67,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.iv.data.IVData",
   "linearmodels.tests.panel._utility.assert_frame_similar",
   "list",
   "model",
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_results.test_fitted_predict_exception": {
  "lineno": 86,
  "symbols_in_volume": [
   "ValueError",
   "model",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_results.test_predict_no_selection": {
  "lineno": 94,
  "symbols_in_volume": [
   "ValueError",
   "model",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_results.test_results": {
  "lineno": 40,
  "symbols_in_volume": [
   "model",
   "result_checker"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_results.test_results_no_exog": {
  "lineno": 59,
  "symbols_in_volume": [
   "model",
   "result_checker"
  ],
  "type": "function"
 },
 "linearmodels.tests.iv.test_results.test_results_single": {
  "lineno": 51,
  "symbols_in_volume": [
   "model",
   "result_checker"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.panel._utility": {
  "lineno": null,
  "symbols_in_volume": [
   "ImportError"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel._utility.access_attributes": {
  "lineno": 236,
  "symbols_in_volume": [
   "callable",
   "dir",
   "getattr",
   "val"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel._utility.assert_frame_similar": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel._utility.assert_results_equal": {
  "lineno": 184,
  "symbols_in_volume": [
   "max",
   "min",
   "numpy.ones_like",
   "numpy.testing.assert_allclose",
   "pandas.testing.assert_frame_equal",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel._utility.generate_data": {
  "lineno": 66,
  "symbols_in_volume": [
   "int",
   "isinstance",
   "linearmodels.panel.data.PanelData",
   "linearmodels.utility.AttrDict",
   "linearmodels.utility.panel_to_frame",
   "list",
   "numpy.arange",
   "numpy.concatenate",
   "numpy.nan",
   "numpy.ones",
   "numpy.random.chisquare",
   "numpy.random.choice",
   "numpy.random.get_state",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.random.set_state",
   "numpy.random.standard_normal",
   "pandas.date_range",
   "range",
   "str",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel._utility.lsdv": {
  "lineno": 23,
  "symbols_in_volume": [
   "list",
   "numpy.c_",
   "numpy.float64",
   "numpy.linalg.lstsq",
   "numpy.ones_like",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.get_dummies"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.results": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.panel.results.execute-stata-simulated-data": {
  "lineno": null,
  "symbols_in_volume": [
   "open",
   "os.getcwd",
   "os.path.exists",
   "os.path.join",
   "os.unlink",
   "print",
   "sorted",
   "str",
   "subprocess.call",
   "typing.Dict"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.results.generate-panel-data": {
  "lineno": null,
  "symbols_in_volume": [
   "int",
   "linearmodels.compat.pandas.concat",
   "linearmodels.panel.data.PanelData",
   "linearmodels.utility.panel_to_frame",
   "numpy.arange",
   "numpy.nan",
   "numpy.ones",
   "numpy.random.chisquare",
   "numpy.random.choice",
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.MultiIndex.from_product",
   "pandas.date_range",
   "range",
   "str"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.results.parse_stata_results": {
  "lineno": null,
  "symbols_in_volume": [
   "__name__",
   "data",
   "open",
   "os.path.abspath",
   "os.path.join",
   "os.path.split",
   "print",
   "str",
   "typing.List"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.results.parse_stata_results.data": {
  "lineno": 67,
  "symbols_in_volume": [
   "parse_block"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.results.parse_stata_results.parse_block": {
  "lineno": 30,
  "symbols_in_volume": [
   "enumerate",
   "float",
   "io.StringIO",
   "linearmodels.utility.AttrDict",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.read_csv",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.test_between_ols.both_data_types": {
  "lineno": 41,
  "symbols_in_volume": [
   "data_gen",
   "itertools.product",
   "linearmodels.tests.panel._utility.datatypes",
   "list",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.data": {
  "lineno": 31,
  "symbols_in_volume": [
   "data_gen",
   "linearmodels.tests.panel._utility.datatypes",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.data_gen": {
  "lineno": 26,
  "symbols_in_volume": [
   "linearmodels.tests.panel._utility.generate_data"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.missing_data": {
  "lineno": 36,
  "symbols_in_volume": [
   "data_gen",
   "linearmodels.tests.panel._utility.datatypes",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_2way_cluster": {
  "lineno": 265,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.model.BetweenOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "list",
   "numpy.int32",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_alt_rsquared": {
  "lineno": 241,
  "symbols_in_volume": [
   "linearmodels.panel.model.BetweenOLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_alt_rsquared_missing": {
  "lineno": 247,
  "symbols_in_volume": [
   "linearmodels.panel.model.BetweenOLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_alt_rsquared_weighted": {
  "lineno": 253,
  "symbols_in_volume": [
   "linearmodels.panel.model.BetweenOLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_alt_rsquared_weighted_missing": {
  "lineno": 259,
  "symbols_in_volume": [
   "linearmodels.panel.model.BetweenOLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_cluster_error": {
  "lineno": 292,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.model.BetweenOLS",
   "numpy.int32",
   "numpy.random.randint",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_default_clusters": {
  "lineno": 305,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.model.BetweenOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.ndarray",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_fitted_effects_residuals": {
  "lineno": 329,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.panel.model.BetweenOLS",
   "linearmodels.tests.panel._utility.assert_frame_similar",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_missing": {
  "lineno": 176,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.BetweenOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.int32"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_missing_weighted": {
  "lineno": 207,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.model.BetweenOLS",
   "linearmodels.tests.panel._utility.assert_results_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_multiple_obs_per_entity": {
  "lineno": 117,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.BetweenOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.int32",
   "numpy.random.randint",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_multiple_obs_per_entity_weighted": {
  "lineno": 143,
  "symbols_in_volume": [
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.BetweenOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.int32",
   "numpy.nansum",
   "numpy.random.randint",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_results_access": {
  "lineno": 235,
  "symbols_in_volume": [
   "linearmodels.panel.model.BetweenOLS",
   "linearmodels.tests.panel._utility.access_attributes"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_single_entity": {
  "lineno": 46,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.model.BetweenOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.ndarray",
   "numpy.random.randint",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_single_entity_weights": {
  "lineno": 79,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.model.BetweenOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.ndarray",
   "numpy.random.randint",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_between_ols.test_unknown_covariance": {
  "lineno": 229,
  "symbols_in_volume": [
   "KeyError",
   "linearmodels.panel.model.BetweenOLS",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_cluster_input_formats": {
  "lineno": null,
  "symbols_in_volume": [
   "itertools.product",
   "linearmodels.tests.panel._utility.datatypes",
   "list",
   "map",
   "pytest.mark.filterwarnings",
   "str"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.test_cluster_input_formats.data": {
  "lineno": 21,
  "symbols_in_volume": [
   "linearmodels.tests.panel._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_cluster_input_formats.test_categorical_input": {
  "lineno": 27,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "numpy.random.randint",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_cluster_input_formats.test_integer_input": {
  "lineno": 77,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.Series",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_cluster_input_formats.test_mixed_input": {
  "lineno": 98,
  "symbols_in_volume": [
   "itertools.product",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "list",
   "map",
   "numpy.random.choice",
   "numpy.random.randint",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "string.ascii_lowercase"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_cluster_input_formats.test_nested_effects": {
  "lineno": 122,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "pandas.DataFrame",
   "pandas.Series",
   "pytest.raises",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_cluster_input_formats.test_string_input": {
  "lineno": 48,
  "symbols_in_volume": [
   "itertools.product",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "list",
   "map",
   "numpy.random.choice",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.Series",
   "range",
   "str",
   "string.ascii_lowercase"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data": {
  "lineno": null,
  "symbols_in_volume": [
   "ImportError",
   "linearmodels.tests.panel._utility.datatypes",
   "pytest.mark.filterwarnings"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.test_data.data": {
  "lineno": 33,
  "symbols_in_volume": [
   "int",
   "itertools.product",
   "linearmodels.tests.panel._utility.generate_data",
   "list",
   "map",
   "pytest.fixture",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.mi_df": {
  "lineno": 47,
  "symbols_in_volume": [
   "linearmodels.utility.panel_to_frame",
   "numpy.random.seed",
   "numpy.random.standard_normal",
   "pandas.date_range",
   "pytest.fixture",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_categorical_conversion": {
  "lineno": 572,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.utility.panel_to_frame",
   "numpy.all",
   "numpy.random.choice",
   "numpy.random.randn",
   "numpy.where",
   "pandas.Categorical",
   "pandas.date_range",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_count": {
  "lineno": 472,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.int64",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_demean": {
  "lineno": 239,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.testing.assert_allclose",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_demean_against_dummy_regression": {
  "lineno": 270,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.abs",
   "numpy.c_",
   "numpy.float64",
   "numpy.linalg.lstsq",
   "numpy.testing.assert_allclose",
   "pandas.Categorical",
   "pandas.get_dummies"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_demean_against_groupby": {
  "lineno": 254,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_demean_against_groupby.demean": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_demean_both_large_t": {
  "lineno": 374,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.utility.panel_to_frame",
   "numpy.abs",
   "numpy.c_",
   "numpy.float64",
   "numpy.linalg.pinv",
   "numpy.random.standard_normal",
   "numpy.testing.assert_allclose",
   "pandas.Categorical",
   "pandas.date_range",
   "pandas.get_dummies",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_demean_invalid": {
  "lineno": 393,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.data.PanelData",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_demean_many_missing": {
  "lineno": 315,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.all",
   "numpy.any",
   "numpy.isfinite",
   "numpy.isnan",
   "numpy.nan",
   "numpy.nanmean",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "range",
   "zip"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_demean_many_missing_dropped": {
  "lineno": 351,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.nan",
   "numpy.nanmean",
   "numpy.testing.assert_allclose",
   "numpy.unique"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_demean_missing": {
  "lineno": 299,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.nan",
   "numpy.nanmean",
   "numpy.testing.assert_allclose",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_demean_missing_alt_types": {
  "lineno": 436,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.panel.data.PanelData",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_demean_simple_weighted": {
  "lineno": 495,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_demean_weighted": {
  "lineno": 515,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.panel.data.PanelData",
   "numpy.abs",
   "numpy.linalg.lstsq",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "pandas.Categorical",
   "pandas.get_dummies"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_dimensions": {
  "lineno": 159,
  "symbols_in_volume": [
   "len",
   "linearmodels.panel.data.PanelData"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_drop": {
  "lineno": 166,
  "symbols_in_volume": [
   "len",
   "linearmodels.panel.data.PanelData",
   "numpy.bool",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_dummies": {
  "lineno": 399,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.data.PanelData",
   "numpy.all",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_existing_panel_data": {
  "lineno": 118,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.utility.panel_to_frame",
   "numpy.random.random",
   "pandas.date_range",
   "pandas.testing.assert_frame_equal",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_fake_panel_properties": {
  "lineno": 865,
  "symbols_in_volume": [
   "len",
   "linearmodels.panel.data._Panel",
   "list",
   "map",
   "pandas.testing.assert_frame_equal",
   "pandas.testing.assert_index_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_first_difference": {
  "lineno": 490,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_general_demean_oneway": {
  "lineno": 654,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.linalg.lstsq",
   "numpy.random.randint",
   "numpy.testing.assert_allclose",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.get_dummies"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_general_demean_twoway": {
  "lineno": 674,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.random.randint",
   "numpy.testing.assert_allclose",
   "numpy.zeros_like",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.get_dummies"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_general_unit_weighted_demean_oneway": {
  "lineno": 693,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.linalg.lstsq",
   "numpy.random.randint",
   "numpy.testing.assert_allclose",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.get_dummies"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_general_unit_weighted_demean_twoway": {
  "lineno": 748,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.random.chisquare",
   "numpy.random.randint",
   "numpy.random.seed",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "numpy.zeros_like",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.get_dummies"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_general_weighted_demean_oneway": {
  "lineno": 721,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.linalg.lstsq",
   "numpy.random.chisquare",
   "numpy.random.randint",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.get_dummies"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_ids": {
  "lineno": 217,
  "symbols_in_volume": [
   "len",
   "linearmodels.panel.data.PanelData",
   "numpy.all",
   "numpy.ptp",
   "numpy.unique",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_incorrect_dataframe": {
  "lineno": 191,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.data.PanelData",
   "list",
   "numpy.arange",
   "numpy.array",
   "numpy.random.permutation",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pytest.raises",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_incorrect_time_axis": {
  "lineno": 808,
  "symbols_in_volume": [
   "ValueError",
   "datetime.datetime",
   "linearmodels.panel.data.PanelData",
   "linearmodels.utility.panel_to_frame",
   "numpy.random.randn",
   "pytest.raises",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_incorrect_time_axis_xarray": {
  "lineno": 829,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.data.PanelData",
   "linearmodels.tests.panel._utility.MISSING_XARRAY",
   "numpy.random.randn",
   "pytest.mark.skipif",
   "pytest.raises",
   "range",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_incorrect_types": {
  "lineno": 206,
  "symbols_in_volume": [
   "TypeError",
   "linearmodels.panel.data.PanelData",
   "list",
   "numpy.random.randn",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_incorrect_types_xarray": {
  "lineno": 211,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.data.PanelData",
   "linearmodels.tests.panel._utility.MISSING_XARRAY",
   "numpy.random.randn",
   "pytest.mark.skipif",
   "pytest.raises",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_invalid_seires": {
  "lineno": 430,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.data.PanelData",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_labels": {
  "lineno": 175,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "list"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_mean_missing": {
  "lineno": 456,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_mean_weighted": {
  "lineno": 543,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.panel.data.PanelData",
   "list",
   "numpy.linalg.lstsq",
   "numpy.linalg.pinv",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "pandas.Categorical",
   "pandas.get_dummies"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_missing": {
  "lineno": 182,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.any",
   "numpy.isnan",
   "numpy.nan",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_named_index": {
  "lineno": 852,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.panel.data.PanelData",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_numpy_1d": {
  "lineno": 81,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.data.PanelData",
   "numpy.random.random",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_numpy_2d": {
  "lineno": 88,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.random.random",
   "numpy.reshape",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_numpy_3d": {
  "lineno": 58,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.utility.panel_to_frame",
   "numpy.random.random",
   "numpy.reshape",
   "numpy.testing.assert_equal",
   "pandas.testing.assert_frame_equal",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_original_unmodified": {
  "lineno": 775,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "numpy.ndarray",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "xarray.testing.assert_identical"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_pandas_dataframe": {
  "lineno": 109,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "numpy.random.random",
   "pandas.DataFrame",
   "pandas.date_range",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_pandas_multiindex_dataframe": {
  "lineno": 99,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.utility.panel_to_frame",
   "numpy.random.random",
   "pandas.date_range",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_repr_html": {
  "lineno": 648,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_roundtrip_3d": {
  "lineno": 414,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.panel.data.PanelData",
   "numpy.ndarray",
   "numpy.testing.assert_equal",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_series_multiindex": {
  "lineno": 424,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_str_repr": {
  "lineno": 233,
  "symbols_in_volume": [
   "hex",
   "id",
   "linearmodels.panel.data.PanelData",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_string_conversion": {
  "lineno": 604,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.utility.panel_to_frame",
   "numpy.all",
   "numpy.random.choice",
   "numpy.random.randn",
   "numpy.where",
   "pandas.date_range",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_string_nonconversion": {
  "lineno": 632,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.utility.panel_to_frame",
   "numpy.all",
   "numpy.random.choice",
   "numpy.random.randn",
   "pandas.api.types.is_string_dtype",
   "pandas.date_range",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_xarray_2d": {
  "lineno": 130,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.tests.panel._utility.MISSING_XARRAY",
   "list",
   "numpy.random.random",
   "numpy.reshape",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif",
   "range",
   "str",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_data.test_xarray_3d": {
  "lineno": 143,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.tests.panel._utility.MISSING_XARRAY",
   "list",
   "numpy.random.random",
   "numpy.reshape",
   "numpy.testing.assert_equal",
   "pytest.mark.skipif",
   "range",
   "str",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_fama_macbeth": {
  "lineno": null,
  "symbols_in_volume": [
   "itertools.product",
   "linearmodels.tests.panel._utility.datatypes",
   "list",
   "map",
   "pytest.mark.filterwarnings",
   "str"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.test_fama_macbeth.data": {
  "lineno": 29,
  "symbols_in_volume": [
   "linearmodels.tests.panel._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_fama_macbeth.test_block_size_error": {
  "lineno": 121,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.model.FamaMacBeth",
   "numpy.arange",
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.date_range",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_fama_macbeth.test_block_size_warnings": {
  "lineno": 104,
  "symbols_in_volume": [
   "linearmodels.panel.model.FamaMacBeth",
   "linearmodels.utility.InferenceUnavailableWarning",
   "linearmodels.utility.MissingValueWarning",
   "numpy.arange",
   "numpy.ones",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.date_range",
   "pytest.mark.filterwarnings",
   "pytest.warns"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_fama_macbeth.test_fama_macbeth": {
  "lineno": 37,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.FamaMacBeth",
   "linearmodels.tests.panel._utility.access_attributes",
   "numpy.array",
   "numpy.asarray",
   "numpy.linalg.lstsq",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_fama_macbeth.test_fama_macbeth_kernel_smoke": {
  "lineno": 72,
  "symbols_in_volume": [
   "linearmodels.panel.model.FamaMacBeth",
   "linearmodels.tests.panel._utility.access_attributes",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_fama_macbeth.test_fitted_effects_residuals": {
  "lineno": 84,
  "symbols_in_volume": [
   "linearmodels.panel.model.FamaMacBeth",
   "linearmodels.tests.panel._utility.assert_frame_similar",
   "numpy.nan",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_fama_macbeth.test_unknown_cov_type": {
  "lineno": 67,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.model.FamaMacBeth",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_firstdifference_ols": {
  "lineno": null,
  "symbols_in_volume": [
   "itertools.product",
   "linearmodels.tests.panel._utility.datatypes",
   "list",
   "map",
   "pytest.mark.filterwarnings",
   "str"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.test_firstdifference_ols.data": {
  "lineno": 27,
  "symbols_in_volume": [
   "linearmodels.tests.panel._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_firstdifference_ols.test_first_difference_errors": {
  "lineno": 164,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "linearmodels.panel.model.FirstDifferenceOLS",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_firstdifference_ols.test_firstdifference_error": {
  "lineno": 189,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.model.FirstDifferenceOLS",
   "numpy.random.randint",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_firstdifference_ols.test_firstdifference_ols": {
  "lineno": 33,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.model.FirstDifferenceOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.any",
   "numpy.array",
   "numpy.int32",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_firstdifference_ols.test_firstdifference_ols_weighted": {
  "lineno": 97,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.model.FirstDifferenceOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.any",
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_firstdifference_ols.test_fitted_effects_residuals": {
  "lineno": 201,
  "symbols_in_volume": [
   "linearmodels.panel.model.FirstDifferenceOLS",
   "linearmodels.tests.panel._utility.assert_frame_similar",
   "numpy.nan",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_firstdifference_ols.test_results_access": {
  "lineno": 183,
  "symbols_in_volume": [
   "linearmodels.panel.model.FirstDifferenceOLS",
   "linearmodels.tests.panel._utility.access_attributes"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_formula": {
  "lineno": null,
  "symbols_in_volume": [
   "linearmodels.formula.between_ols",
   "linearmodels.formula.fama_macbeth",
   "linearmodels.formula.first_difference_ols",
   "linearmodels.formula.pooled_ols",
   "linearmodels.formula.random_effects",
   "linearmodels.panel.model.BetweenOLS",
   "linearmodels.panel.model.FamaMacBeth",
   "linearmodels.panel.model.FirstDifferenceOLS",
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.panel.model.RandomEffects",
   "linearmodels.tests.panel._utility.datatypes",
   "pytest.mark.filterwarnings"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.test_formula.data": {
  "lineno": 35,
  "symbols_in_volume": [
   "int",
   "itertools.product",
   "linearmodels.tests.panel._utility.generate_data",
   "list",
   "map",
   "pytest.fixture",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_formula.effects": {
  "lineno": 63,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_formula.formula": {
  "lineno": 49,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_formula.models": {
  "lineno": 58,
  "symbols_in_volume": [
   "list",
   "pytest.fixture",
   "zip"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_formula.sigmoid": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_formula.test_basic_formulas": {
  "lineno": 72,
  "symbols_in_volume": [
   "formula_func",
   "isinstance",
   "linearmodels.panel.model.FirstDifferenceOLS",
   "list",
   "map",
   "model",
   "model.from_formula",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_formula.test_basic_formulas_math_op": {
  "lineno": 119,
  "symbols_in_volume": [
   "formula_func",
   "isinstance",
   "model",
   "model.from_formula",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_formula.test_basic_formulas_predict": {
  "lineno": 179,
  "symbols_in_volume": [
   "formula_func",
   "isinstance",
   "linearmodels.panel.model.FirstDifferenceOLS",
   "list",
   "map",
   "model",
   "model.from_formula",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_formula.test_formulas_predict_error": {
  "lineno": 224,
  "symbols_in_volume": [
   "ValueError",
   "formula_func",
   "isinstance",
   "list",
   "map",
   "model",
   "model.from_formula",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_formula.test_panel_ols_formula": {
  "lineno": 143,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "linearmodels.formula.panel_ols",
   "linearmodels.panel.model.PanelOLS.from_formula",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_formula.test_panel_ols_formulas_math_op": {
  "lineno": 133,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.panel.model.PanelOLS.from_formula",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_formula.test_parser": {
  "lineno": 246,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "linearmodels.panel.model.PanelFormulaParser",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_model": {
  "lineno": null,
  "symbols_in_volume": [
   "linearmodels.tests.panel._utility.datatypes",
   "pytest.mark.filterwarnings"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.test_model.data": {
  "lineno": 21,
  "symbols_in_volume": [
   "int",
   "itertools.product",
   "linearmodels.tests.panel._utility.generate_data",
   "list",
   "map",
   "numpy.random.RandomState",
   "pytest.fixture",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_model.test_absorbing_effect": {
  "lineno": 192,
  "symbols_in_volume": [
   "isinstance",
   "len",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.panel.utility.AbsorbingEffectError",
   "numpy.concatenate",
   "numpy.ones",
   "pandas.DataFrame",
   "pytest.mark.parametrize",
   "pytest.raises",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_model.test_all_missing": {
  "lineno": 224,
  "symbols_in_volume": [
   "len",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "pytest.mark.filterwarnings",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_model.test_incorrect_weight_shape": {
  "lineno": 162,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "linearmodels.panel.model.PanelOLS",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_model.test_invalid_weight_values": {
  "lineno": 115,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_model.test_panel_lsdv": {
  "lineno": 132,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.lsdv",
   "numpy.int64",
   "numpy.testing.assert_allclose",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_model.test_panel_ols": {
  "lineno": 36,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_model.test_valid_weight_shape": {
  "lineno": 42,
  "symbols_in_volume": [
   "isinstance",
   "len",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.prod",
   "numpy.random.random_sample",
   "numpy.testing.assert_equal",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_model.test_weight_ambiguity": {
  "lineno": 177,
  "symbols_in_volume": [
   "isinstance",
   "len",
   "linearmodels.panel.model.AmbiguityError",
   "linearmodels.panel.model.PanelOLS",
   "numpy.random.random_sample",
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_model.test_weight_incorrect_shape": {
  "lineno": 105,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.model.PanelOLS",
   "numpy.ones",
   "numpy.prod",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_covariance": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.panel.test_panel_covariance.TestCovariance": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.empty",
   "object"
  ],
  "type": "class"
 },
 "linearmodels.tests.panel.test_panel_covariance.TestCovariance.setup_class": {
  "lineno": 31,
  "symbols_in_volume": [
   "classmethod",
   "numpy.arange",
   "numpy.random.randint",
   "numpy.random.random_sample",
   "numpy.tile"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_covariance.TestCovariance.test_ac_covariance_smoke": {
  "lineno": 182,
  "symbols_in_volume": [
   "linearmodels.panel.covariance.ACCovariance",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_covariance.TestCovariance.test_clustered_covariance_error": {
  "lineno": 144,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.covariance.ClusteredCovariance",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_covariance.TestCovariance.test_clustered_covariance_smoke": {
  "lineno": 69,
  "symbols_in_volume": [
   "linearmodels.panel.covariance.ClusteredCovariance",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_covariance.TestCovariance.test_driscoll_kraay_smoke": {
  "lineno": 167,
  "symbols_in_volume": [
   "linearmodels.panel.covariance.DriscollKraay",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_covariance.TestCovariance.test_heteroskedastic_smoke": {
  "lineno": 47,
  "symbols_in_volume": [
   "linearmodels.panel.covariance.HeteroskedasticCovariance",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_covariance.TestCovariance.test_homoskedastic_smoke": {
  "lineno": 58,
  "symbols_in_volume": [
   "linearmodels.panel.covariance.HomoskedasticCovariance",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_covariance.test_covariance_manager": {
  "lineno": 198,
  "symbols_in_volume": [
   "KeyError",
   "ValueError",
   "linearmodels.panel.covariance.CovarianceManager",
   "linearmodels.panel.covariance.HeteroskedasticCovariance",
   "linearmodels.panel.covariance.HomoskedasticCovariance",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols": {
  "lineno": null,
  "symbols_in_volume": [
   "itertools.product",
   "linearmodels.tests.panel._utility.datatypes",
   "list",
   "map",
   "pytest.mark.filterwarnings",
   "str",
   "sum",
   "zip"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.test_panel_ols.absorbed_data": {
  "lineno": 43,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.compat.pandas.get_codes",
   "linearmodels.tests.panel._utility.generate_data",
   "numpy.arange",
   "numpy.array",
   "numpy.concatenate",
   "numpy.double",
   "numpy.ndarray",
   "numpy.random.RandomState",
   "numpy.tile",
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.const_data": {
  "lineno": 89,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.tests.panel._utility.generate_data",
   "linearmodels.utility.AttrDict",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.data": {
  "lineno": 35,
  "symbols_in_volume": [
   "linearmodels.tests.panel._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.entity_eff": {
  "lineno": 100,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.large_data": {
  "lineno": 60,
  "symbols_in_volume": [
   "linearmodels.tests.panel._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.lsdv_config": {
  "lineno": 124,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.singleton_data": {
  "lineno": 72,
  "symbols_in_volume": [
   "linearmodels.tests.panel._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_absorbed": {
  "lineno": 1376,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.panel.utility.AbsorbingEffectWarning",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.ndarray",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pytest.warns"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_absorbed_option": {
  "lineno": 1396,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_alt_rsquared": {
  "lineno": 1025,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_alt_rsquared_weighted": {
  "lineno": 1031,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_cluster_smoke": {
  "lineno": 1065,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "pytest.mark.smoke",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_const_data_both": {
  "lineno": 211,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "list",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_const_data_both_weights": {
  "lineno": 232,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "list",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.ones_like",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_const_data_entity": {
  "lineno": 151,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "list",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_const_data_only": {
  "lineno": 135,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_const_data_only_weights": {
  "lineno": 143,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_const_data_single_effect_weights": {
  "lineno": 183,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "list",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.ones_like",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_const_data_time": {
  "lineno": 167,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "list",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_cov_equiv_cluster": {
  "lineno": 1044,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_entity_other": {
  "lineno": 1144,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.int64"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_f_pooled": {
  "lineno": 1093,
  "symbols_in_volume": [
   "float",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.panel.model.PooledOLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_fitted_effects_residuals": {
  "lineno": 1239,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_frame_similar",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_low_memory": {
  "lineno": 1260,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_low_memory_auto": {
  "lineno": 1274,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.utility.MemoryWarning",
   "numpy.arange",
   "numpy.random.standard_normal",
   "numpy.reshape",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.Series",
   "pytest.warns"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_masked_singleton_removal": {
  "lineno": 1308,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pytest.mark.filterwarnings"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_methods_equivalent": {
  "lineno": 1170,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_other_weighted_smoke": {
  "lineno": 1164,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_both_fwl": {
  "lineno": 553,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_both_lsdv": {
  "lineno": 474,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "list",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.ones_like",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_both_lsdv_weighted": {
  "lineno": 738,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "list",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.ones_like",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_effects_sanity": {
  "lineno": 1203,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_entity_fwl": {
  "lineno": 348,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.linalg.lstsq",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_entity_lsdv": {
  "lineno": 271,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "list",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.ones_like",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_entity_lsdv_weighted": {
  "lineno": 579,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "list",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.ones_like",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_entity_other_equivalence": {
  "lineno": 823,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_entity_time_other_equivalence": {
  "lineno": 847,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.c_",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_no_effects": {
  "lineno": 259,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.tests.panel._utility.assert_results_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_no_effects_weighted": {
  "lineno": 265,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.tests.panel._utility.assert_results_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_other_fwl": {
  "lineno": 953,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "list",
   "numpy.column_stack",
   "numpy.int64",
   "numpy.linalg.lstsq",
   "numpy.ones_like",
   "pandas.get_dummies",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_other_incorrect_size": {
  "lineno": 988,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_other_lsdv": {
  "lineno": 862,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "list",
   "numpy.c_",
   "numpy.column_stack",
   "numpy.int64",
   "numpy.linalg.lstsq",
   "numpy.ones_like",
   "pandas.DataFrame",
   "pandas.get_dummies",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_time_fwl": {
  "lineno": 450,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.linalg.lstsq",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_time_lsdv": {
  "lineno": 374,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "list",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.ones_like",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_time_lsdv_weighted": {
  "lineno": 659,
  "symbols_in_volume": [
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "list",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.ones_like",
   "numpy.sqrt",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_panel_time_other_equivalence": {
  "lineno": 835,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_repeated_measures_weight": {
  "lineno": 1357,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS.from_formula",
   "numpy.arange",
   "numpy.random.RandomState",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.Series"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_results_access": {
  "lineno": 1000,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.tests.panel._utility.access_attributes"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_rsquared_inclusive_equivalence": {
  "lineno": 1193,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_singleton_removal": {
  "lineno": 1289,
  "symbols_in_volume": [
   "len",
   "linearmodels.panel.model.PanelOLS",
   "numpy.arange",
   "numpy.random.randn",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pytest.mark.filterwarnings",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_singleton_removal_mixed": {
  "lineno": 1335,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "numpy.testing.assert_allclose",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_singleton_removal_other_effects": {
  "lineno": 1321,
  "symbols_in_volume": [
   "linearmodels.panel.model.PanelOLS"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.test_too_many_effects": {
  "lineno": 1037,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.model.PanelOLS",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_panel_ols.time_eff": {
  "lineno": 105,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_pooled_ols": {
  "lineno": null,
  "symbols_in_volume": [
   "itertools.product",
   "linearmodels.tests.panel._utility.datatypes",
   "list",
   "map",
   "pytest.mark.filterwarnings",
   "str"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.test_pooled_ols.data": {
  "lineno": 29,
  "symbols_in_volume": [
   "linearmodels.tests.panel._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_pooled_ols.test_alt_rsquared": {
  "lineno": 109,
  "symbols_in_volume": [
   "linearmodels.panel.model.PooledOLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_pooled_ols.test_alt_rsquared_weighted": {
  "lineno": 115,
  "symbols_in_volume": [
   "linearmodels.panel.model.PooledOLS",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_pooled_ols.test_cov_equiv": {
  "lineno": 121,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.arange"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_pooled_ols.test_cov_equiv_cluster": {
  "lineno": 151,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_pooled_ols.test_cov_equiv_cluster_weighted": {
  "lineno": 177,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.arange"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_pooled_ols.test_cov_equiv_weighted": {
  "lineno": 135,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.arange"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_pooled_ols.test_diff_data_size": {
  "lineno": 65,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "linearmodels.panel.model.PooledOLS",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.IndexSlice",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_pooled_ols.test_fitted_effects_residuals": {
  "lineno": 214,
  "symbols_in_volume": [
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.tests.panel._utility.assert_frame_similar",
   "numpy.nan",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_pooled_ols.test_pooled_ols": {
  "lineno": 35,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.arange"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_pooled_ols.test_pooled_ols_weighted": {
  "lineno": 51,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.arange"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_pooled_ols.test_rank_deficient_array": {
  "lineno": 81,
  "symbols_in_volume": [
   "ValueError",
   "isinstance",
   "linearmodels.panel.model.PooledOLS",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_pooled_ols.test_results_access": {
  "lineno": 91,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.tests.panel._utility.access_attributes",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_pooled_ols.test_two_way_clustering": {
  "lineno": 192,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.IV2SLS",
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.tests.panel._utility.assert_results_equal",
   "numpy.arange",
   "numpy.int64",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_random_effects": {
  "lineno": null,
  "symbols_in_volume": [
   "itertools.product",
   "linearmodels.tests.panel._utility.datatypes",
   "list",
   "map",
   "pytest.mark.filterwarnings",
   "str"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.test_random_effects.data": {
  "lineno": 26,
  "symbols_in_volume": [
   "linearmodels.tests.panel._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_random_effects.test_fitted_effects_residuals": {
  "lineno": 57,
  "symbols_in_volume": [
   "linearmodels.panel.model.RandomEffects",
   "linearmodels.tests.panel._utility.assert_frame_similar",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_random_effects.test_random_effects_small_sample": {
  "lineno": 32,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.RandomEffects"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_random_effects.test_results_access": {
  "lineno": 51,
  "symbols_in_volume": [
   "linearmodels.panel.model.RandomEffects",
   "linearmodels.tests.panel._utility.access_attributes"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_results": {
  "lineno": null,
  "symbols_in_volume": [
   "itertools.product",
   "linearmodels.tests.panel._utility.datatypes",
   "list",
   "map",
   "str"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.test_results.data": {
  "lineno": 17,
  "symbols_in_volume": [
   "linearmodels.datasets.wage_panel.load",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_results.generated_data": {
  "lineno": 28,
  "symbols_in_volume": [
   "linearmodels.tests.panel._utility.generate_data",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_results.test_incorrect_type": {
  "lineno": 91,
  "symbols_in_volume": [
   "TypeError",
   "dict",
   "linearmodels.iv.model.IV2SLS",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.panel.results.compare",
   "pytest.raises",
   "statsmodels.tools.tools.add_constant"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_results.test_multiple": {
  "lineno": 50,
  "symbols_in_volume": [
   "ValueError",
   "dir",
   "getattr",
   "len",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.panel.model.RandomEffects",
   "linearmodels.panel.results.compare",
   "pytest.mark.parametrize",
   "pytest.raises",
   "statsmodels.tools.tools.add_constant"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_results.test_multiple_no_effects": {
  "lineno": 73,
  "symbols_in_volume": [
   "dict",
   "dir",
   "getattr",
   "len",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.panel.model.RandomEffects",
   "linearmodels.panel.results.compare",
   "statsmodels.tools.tools.add_constant"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_results.test_predict": {
  "lineno": 102,
  "symbols_in_volume": [
   "linearmodels.panel.data.PanelData",
   "linearmodels.panel.model.PanelOLS",
   "list",
   "pandas.testing.assert_series_equal",
   "pytest.mark.filterwarnings"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_results.test_predict_no_selection": {
  "lineno": 136,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.model.PanelOLS",
   "pytest.mark.filterwarnings",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_results.test_single": {
  "lineno": 36,
  "symbols_in_volume": [
   "dir",
   "getattr",
   "len",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.panel.results.compare",
   "pytest.mark.parametrize",
   "statsmodels.tools.tools.add_constant"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_results.test_wald_test": {
  "lineno": 146,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.model.PanelOLS",
   "numpy.asarray",
   "numpy.linalg.inv",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "pytest.raises",
   "statsmodels.tools.tools.add_constant"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_simulated_against_stata": {
  "lineno": null,
  "symbols_in_volume": [
   "filter",
   "linearmodels.panel.model.BetweenOLS",
   "linearmodels.panel.model.PanelOLS",
   "linearmodels.panel.model.PooledOLS",
   "linearmodels.panel.model.RandomEffects",
   "linearmodels.tests.panel.results.parse_stata_results.data",
   "list",
   "os.path.abspath",
   "os.path.join",
   "os.path.split",
   "pandas.read_stata",
   "pytest.mark.filterwarnings",
   "sorted"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.test_simulated_against_stata.correct_order": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "linearmodels.tests.panel.test_simulated_against_stata.data": {
  "lineno": 31,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.panel.data.PanelData",
   "linearmodels.utility.AttrDict",
   "mod",
   "pandas.DataFrame",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_simulated_against_stata.test_cov": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_simulated_against_stata.test_f_pooled": {
  "lineno": 140,
  "symbols_in_volume": [
   "getattr",
   "numpy.isnan",
   "numpy.testing.assert_allclose",
   "pytest.skip"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_simulated_against_stata.test_f_stat": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_simulated_against_stata.test_params": {
  "lineno": 99,
  "symbols_in_volume": [
   "correct_order",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_simulated_against_stata.test_rsquared_between": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.testing.assert_allclose",
   "pytest.xfail"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_simulated_against_stata.test_rsquared_within": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.isnan",
   "numpy.testing.assert_allclose",
   "pytest.xfail"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_simulated_against_stata.test_t_stat": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pytest.mark.filterwarnings"
  ],
  "type": "module"
 },
 "linearmodels.tests.panel.test_utility.dummy_format": {
  "lineno": 33,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_drop_singletons": {
  "lineno": 153,
  "symbols_in_volume": [
   "linearmodels.panel.utility.in_2core_graph",
   "linearmodels.panel.utility.in_2core_graph_slow",
   "numpy.concatenate",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_drop_singletons_large": {
  "lineno": 163,
  "symbols_in_volume": [
   "linearmodels.panel.utility.in_2core_graph",
   "linearmodels.panel.utility.in_2core_graph_slow",
   "numpy.column_stack",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_drop_singletons_pandas": {
  "lineno": 174,
  "symbols_in_volume": [
   "linearmodels.panel.utility.in_2core_graph",
   "linearmodels.panel.utility.in_2core_graph_slow",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_equal",
   "pandas.Series",
   "pandas.concat",
   "zip"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_drop_singletons_single": {
  "lineno": 104,
  "symbols_in_volume": [
   "linearmodels.panel.utility.in_2core_graph_slow",
   "numpy.any",
   "numpy.asarray",
   "numpy.isin",
   "numpy.random.RandomState",
   "numpy.sort",
   "numpy.testing.assert_array_equal",
   "numpy.unique",
   "pandas.Series"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_drop_singletons_slow": {
  "lineno": 119,
  "symbols_in_volume": [
   "linearmodels.panel.utility.dummy_matrix",
   "linearmodels.panel.utility.in_2core_graph_slow",
   "numpy.any",
   "numpy.arange",
   "numpy.concatenate",
   "numpy.isin",
   "numpy.random.RandomState",
   "numpy.testing.assert_array_equal",
   "numpy.unique",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_dummy_format": {
  "lineno": 38,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.panel.utility.dummy_matrix",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.int32",
   "numpy.int8",
   "numpy.ones",
   "numpy.squeeze",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_dummy_last": {
  "lineno": 52,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.panel.utility.dummy_matrix",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.int32",
   "numpy.int8",
   "numpy.squeeze",
   "numpy.testing.assert_array_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_dummy_pandas": {
  "lineno": 73,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.panel.utility.dummy_matrix",
   "numpy.array",
   "numpy.asarray",
   "numpy.int32",
   "numpy.squeeze",
   "numpy.testing.assert_array_equal",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_dummy_precondition": {
  "lineno": 84,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.panel.utility.dummy_matrix",
   "numpy.ndarray",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.concat",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_generate_panel_data": {
  "lineno": 222,
  "symbols_in_volume": [
   "int",
   "isinstance",
   "linearmodels.panel.utility.PanelModelData",
   "linearmodels.panel.utility.generate_panel_data",
   "numpy.any",
   "numpy.asarray",
   "numpy.isnan",
   "print",
   "pytest.mark.parametrize",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_invalid_format": {
  "lineno": 66,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.panel.utility.dummy_matrix",
   "numpy.int8",
   "numpy.zeros",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_preconditioner_copy": {
  "lineno": 190,
  "symbols_in_volume": [
   "id",
   "linearmodels.panel.utility.preconditioner",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_preconditioner_sparse": {
  "lineno": 200,
  "symbols_in_volume": [
   "id",
   "linearmodels.panel.utility.preconditioner",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_preconditioner_subclass": {
  "lineno": 210,
  "symbols_in_volume": [
   "linearmodels.panel.utility.preconditioner",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "type"
  ],
  "type": "function"
 },
 "linearmodels.tests.panel.test_utility.test_preconditioner_subclass.SubArray": {
  "lineno": 211,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "linearmodels.tests.system": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.system._utility": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.system._utility.atleast_k_elem": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int",
   "numpy.ones"
  ],
  "type": "function"
 },
 "linearmodels.tests.system._utility.convert_to_pandas": {
  "lineno": 245,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system._utility.generate_3sls_data": {
  "lineno": 63,
  "symbols_in_volume": [
   "atleast_k_elem",
   "linearmodels.utility.AttrDict",
   "numpy.c_",
   "numpy.concatenate",
   "numpy.eye",
   "numpy.linalg.matrix_rank",
   "numpy.ones",
   "numpy.random.chisquare",
   "numpy.random.seed",
   "numpy.random.standard_normal",
   "numpy.sqrt",
   "range",
   "zip"
  ],
  "type": "function"
 },
 "linearmodels.tests.system._utility.generate_3sls_data_v2": {
  "lineno": 294,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "numpy.arange",
   "numpy.empty",
   "numpy.hstack",
   "numpy.ones",
   "numpy.random.chisquare",
   "numpy.random.seed",
   "numpy.random.standard_normal",
   "numpy.sqrt",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system._utility.generate_data": {
  "lineno": 8,
  "symbols_in_volume": [
   "int",
   "len",
   "linearmodels.utility.AttrDict",
   "list",
   "numpy.array",
   "numpy.c_",
   "numpy.ones",
   "numpy.random.chisquare",
   "numpy.random.seed",
   "numpy.random.standard_normal",
   "numpy.sqrt",
   "range",
   "tuple"
  ],
  "type": "function"
 },
 "linearmodels.tests.system._utility.generate_simultaneous_data": {
  "lineno": 251,
  "symbols_in_volume": [
   "convert_to_pandas",
   "dict",
   "list",
   "numpy.arange",
   "numpy.concatenate",
   "numpy.linalg.inv",
   "numpy.ones",
   "numpy.random.chisquare",
   "numpy.random.seed",
   "numpy.random.standard_normal",
   "numpy.sqrt",
   "numpy.squeeze",
   "numpy.zeros",
   "range",
   "set",
   "sorted"
  ],
  "type": "function"
 },
 "linearmodels.tests.system._utility.simple_3sls": {
  "lineno": 192,
  "symbols_in_volume": [
   "len",
   "linearmodels.utility.AttrDict",
   "numpy.eye",
   "numpy.hstack",
   "numpy.kron",
   "numpy.linalg.inv",
   "numpy.linalg.lstsq",
   "numpy.linalg.solve",
   "numpy.vstack",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system._utility.simple_gmm": {
  "lineno": 354,
  "symbols_in_volume": [
   "len",
   "linearmodels.utility.AttrDict",
   "map",
   "numpy.eye",
   "numpy.kron",
   "numpy.linalg.inv",
   "numpy.linalg.solve",
   "numpy.reshape",
   "numpy.vstack",
   "numpy.zeros",
   "range",
   "sum"
  ],
  "type": "function"
 },
 "linearmodels.tests.system._utility.simple_sur": {
  "lineno": 154,
  "symbols_in_volume": [
   "len",
   "linearmodels.utility.AttrDict",
   "numpy.eye",
   "numpy.hstack",
   "numpy.kron",
   "numpy.linalg.inv",
   "numpy.linalg.lstsq",
   "numpy.linalg.solve",
   "numpy.vstack",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.results": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.system.results.execute-stata": {
  "lineno": null,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.tests.system._utility.generate_data",
   "list",
   "map",
   "open",
   "os.getcwd",
   "os.path.exists",
   "os.path.join",
   "os.unlink",
   "pandas.DataFrame",
   "print",
   "range",
   "str",
   "subprocess.call",
   "zip"
  ],
  "type": "module"
 },
 "linearmodels.tests.system.results.execute-stata-3sls": {
  "lineno": null,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.concat",
   "linearmodels.tests.system._utility.generate_simultaneous_data",
   "map",
   "open",
   "os.getcwd",
   "os.path.exists",
   "os.path.join",
   "os.unlink",
   "print",
   "range",
   "str",
   "subprocess.call",
   "typing.List"
  ],
  "type": "module"
 },
 "linearmodels.tests.system.results.generate_data": {
  "lineno": null,
  "symbols_in_volume": [
   "__name__",
   "enumerate",
   "linearmodels.compat.pandas.concat",
   "linearmodels.tests.system._utility.generate_data",
   "numpy.any",
   "numpy.nan",
   "numpy.prod",
   "numpy.random.random_sample",
   "numpy.random.seed",
   "numpy.where",
   "pandas.DataFrame",
   "range"
  ],
  "type": "module"
 },
 "linearmodels.tests.system.results.parse_stata_3sls_results": {
  "lineno": null,
  "symbols_in_volume": [
   "open",
   "os.path.abspath",
   "os.path.join",
   "os.path.split",
   "process_block",
   "str",
   "typing.List"
  ],
  "type": "module"
 },
 "linearmodels.tests.system.results.parse_stata_3sls_results.process_block": {
  "lineno": 13,
  "symbols_in_volume": [
   "enumerate",
   "float",
   "io.StringIO",
   "len",
   "linearmodels.utility.AttrDict",
   "list",
   "map",
   "pandas.read_csv",
   "parse_block"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.results.parse_stata_3sls_results.process_block.parse_block": {
  "lineno": 26,
  "symbols_in_volume": [
   "io.StringIO",
   "len",
   "numpy.asarray",
   "numpy.reshape",
   "pandas.DataFrame",
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.results.parse_stata_results": {
  "lineno": null,
  "symbols_in_volume": [
   "list",
   "open",
   "os.path.abspath",
   "os.path.join",
   "os.path.split",
   "split_block",
   "str",
   "typing.Dict",
   "typing.List"
  ],
  "type": "module"
 },
 "linearmodels.tests.system.results.parse_stata_results.process_params": {
  "lineno": 85,
  "symbols_in_volume": [
   "io.StringIO",
   "list",
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.results.parse_stata_results.process_sigma": {
  "lineno": 64,
  "symbols_in_volume": [
   "io.StringIO",
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.results.parse_stata_results.process_stats": {
  "lineno": 55,
  "symbols_in_volume": [
   "io.StringIO",
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.results.parse_stata_results.process_variance": {
  "lineno": 70,
  "symbols_in_volume": [
   "io.StringIO",
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.results.parse_stata_results.split_block": {
  "lineno": 32,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.utility.AttrDict",
   "process_params",
   "process_sigma",
   "process_stats",
   "process_variance"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls": {
  "lineno": null,
  "symbols_in_volume": [
   "itertools.product",
   "list",
   "map"
  ],
  "type": "module"
 },
 "linearmodels.tests.system.test_3sls.data": {
  "lineno": 60,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.tests.system._utility.generate_3sls_data",
   "list",
   "map",
   "max",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls.data.safe_len": {
  "lineno": 71,
  "symbols_in_volume": [
   "len",
   "numpy.array"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls.gen_id": {
  "lineno": 45,
  "symbols_in_volume": [
   "isinstance",
   "list"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls.test_direct_simple": {
  "lineno": 93,
  "symbols_in_volume": [
   "isinstance",
   "len",
   "linearmodels.system.model.IV3SLS",
   "linearmodels.tests.system._utility.simple_3sls",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.diag",
   "numpy.empty",
   "numpy.testing.assert_allclose",
   "tuple"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls.test_fitted": {
  "lineno": 255,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.system.model.IV3SLS",
   "numpy.concatenate",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls.test_multivariate_iv": {
  "lineno": 224,
  "symbols_in_volume": [
   "linearmodels.system.model.IV3SLS",
   "linearmodels.system.model.IV3SLS.multivariate_iv",
   "numpy.random.standard_normal",
   "pandas.DataFrame",
   "pandas.testing.assert_series_equal",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls.test_multivariate_iv_bad_data": {
  "lineno": 245,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.system.model.IV3SLS.multivariate_iv",
   "numpy.random.standard_normal",
   "pandas.DataFrame",
   "pytest.raises",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls.test_no_endog": {
  "lineno": 305,
  "symbols_in_volume": [
   "linearmodels.system.model.IV3SLS",
   "linearmodels.tests.system._utility.generate_3sls_data_v2",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls.test_no_exog": {
  "lineno": 277,
  "symbols_in_volume": [
   "linearmodels.system.model.IV3SLS",
   "linearmodels.tests.system._utility.generate_3sls_data_v2",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls.test_redundant_instruments": {
  "lineno": 177,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.system.model.IV3SLS",
   "numpy.concatenate",
   "numpy.random.standard_normal",
   "pytest.raises",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls.test_single_equation": {
  "lineno": 133,
  "symbols_in_volume": [
   "isinstance",
   "len",
   "linearmodels.system.model.IV3SLS",
   "linearmodels.tests.system._utility.simple_3sls",
   "list",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.diag",
   "numpy.testing.assert_allclose",
   "tuple"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls.test_too_few_instruments": {
  "lineno": 164,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.system.model.IV3SLS",
   "numpy.random.standard_normal",
   "pytest.raises",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls.test_too_many_instruments": {
  "lineno": 191,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.system.model.IV3SLS",
   "numpy.random.standard_normal",
   "pytest.raises",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls.test_uneven_shapes": {
  "lineno": 331,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.system.model.IV3SLS",
   "linearmodels.tests.system._utility.generate_3sls_data_v2",
   "list",
   "numpy.ones",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls.test_wrong_input_type": {
  "lineno": 204,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "linearmodels.system.model.IV3SLS",
   "numpy.concatenate",
   "numpy.random.standard_normal",
   "pytest.raises",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls_against_stata": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.system.test_3sls_against_stata.fit": {
  "lineno": 11,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.concat",
   "linearmodels.system.IV3SLS",
   "linearmodels.system.SUR",
   "linearmodels.tests.system._utility.generate_simultaneous_data",
   "linearmodels.tests.system.results.parse_stata_3sls_results.results",
   "linearmodels.tests.system.results.parse_stata_3sls_results.results.keys",
   "list",
   "mod",
   "mod.fit",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls_against_stata.test_params": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls_against_stata.test_pval": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls_against_stata.test_sigma": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_3sls_against_stata.test_tstats": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance": {
  "lineno": null,
  "symbols_in_volume": [
   "linearmodels.system.covariance.GMMHeteroskedasticCovariance",
   "linearmodels.system.covariance.GMMHomoskedasticCovariance",
   "linearmodels.system.covariance.HeteroskedasticCovariance",
   "linearmodels.system.covariance.HomoskedasticCovariance"
  ],
  "type": "module"
 },
 "linearmodels.tests.system.test_covariance._xpxi": {
  "lineno": 73,
  "symbols_in_volume": [
   "len",
   "map",
   "numpy.linalg.inv",
   "numpy.zeros",
   "range",
   "sum"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance._xpz": {
  "lineno": 89,
  "symbols_in_volume": [
   "len",
   "numpy.concatenate",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance._xpz_wi_zpxi": {
  "lineno": 106,
  "symbols_in_volume": [
   "_xpz",
   "numpy.linalg.inv"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance.cov": {
  "lineno": 26,
  "symbols_in_volume": [
   "est",
   "linearmodels.tests.system._utility.generate_3sls_data_v2",
   "list",
   "numpy.eye",
   "numpy.random.standard_normal",
   "pytest.fixture",
   "zip"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance.cov_data": {
  "lineno": 56,
  "symbols_in_volume": [
   "linearmodels.system.model.IV3SLS",
   "linearmodels.tests.system._utility.generate_3sls_data_v2",
   "numpy.asarray",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance.debias": {
  "lineno": 68,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance.gmm_cov": {
  "lineno": 41,
  "symbols_in_volume": [
   "est",
   "linearmodels.tests.system._utility.generate_3sls_data_v2",
   "list",
   "map",
   "numpy.concatenate",
   "numpy.eye",
   "numpy.random.standard_normal",
   "pytest.fixture",
   "sum",
   "zip"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance.test_gmm_heterosedastic_direct": {
  "lineno": 260,
  "symbols_in_volume": [
   "_xpz",
   "_xpz_wi_zpxi",
   "len",
   "linearmodels.system.covariance.GMMHeteroskedasticCovariance",
   "linearmodels.system.gmm.HeteroskedasticWeightMatrix",
   "numpy.concatenate",
   "numpy.linalg.inv",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance.test_gmm_homoskedastic_direct": {
  "lineno": 223,
  "symbols_in_volume": [
   "_xpz",
   "_xpz_wi_zpxi",
   "len",
   "linearmodels.system.covariance.GMMHomoskedasticCovariance",
   "linearmodels.system.gmm.HomoskedasticWeightMatrix",
   "numpy.concatenate",
   "numpy.eye",
   "numpy.kron",
   "numpy.linalg.inv",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance.test_gmm_kernel_direct": {
  "lineno": 288,
  "symbols_in_volume": [
   "_xpz",
   "_xpz_wi_zpxi",
   "len",
   "linearmodels.iv.covariance.kernel_weight_bartlett",
   "linearmodels.system.covariance.GMMKernelCovariance",
   "linearmodels.system.gmm.KernelWeightMatrix",
   "numpy.concatenate",
   "numpy.linalg.inv",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance.test_gmm_str_repr": {
  "lineno": 121,
  "symbols_in_volume": [
   "est",
   "est.__repr__",
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance.test_heteroskedastic_direct": {
  "lineno": 156,
  "symbols_in_volume": [
   "_xpxi",
   "len",
   "linearmodels.system.covariance.HeteroskedasticCovariance",
   "numpy.concatenate",
   "numpy.diag",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance.test_homoskedastic_direct": {
  "lineno": 129,
  "symbols_in_volume": [
   "_xpxi",
   "len",
   "linearmodels.system.covariance.HomoskedasticCovariance",
   "numpy.concatenate",
   "numpy.diag",
   "numpy.eye",
   "numpy.kron",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance.test_kernel_direct": {
  "lineno": 182,
  "symbols_in_volume": [
   "_xpxi",
   "len",
   "linearmodels.iv.covariance.kernel_weight_parzen",
   "linearmodels.system.covariance.KernelCovariance",
   "numpy.concatenate",
   "numpy.diag",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_covariance.test_str_repr": {
  "lineno": 113,
  "symbols_in_volume": [
   "est",
   "est.__repr__",
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_equivalence": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.system.test_equivalence.test_3sls_2sls_equiv": {
  "lineno": 14,
  "symbols_in_volume": [
   "linearmodels.IV2SLS",
   "linearmodels.IV3SLS",
   "linearmodels.tests.system._utility.generate_3sls_data_v2",
   "list",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_equivalence.test_gmm_3sls_equiv": {
  "lineno": 7,
  "symbols_in_volume": [
   "linearmodels.IV3SLS",
   "linearmodels.IVSystemGMM",
   "linearmodels.tests.system._utility.generate_3sls_data_v2",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_equivalence.test_gmm_equiv": {
  "lineno": 34,
  "symbols_in_volume": [
   "linearmodels.IVGMM",
   "linearmodels.IVSystemGMM",
   "linearmodels.tests.system._utility.generate_3sls_data_v2",
   "list",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_formulas": {
  "lineno": null,
  "symbols_in_volume": [
   "enumerate",
   "itertools.product",
   "len",
   "linearmodels.IV3SLS",
   "linearmodels.IVSystemGMM",
   "linearmodels.SUR",
   "linearmodels.formula.iv_3sls",
   "linearmodels.formula.iv_system_gmm",
   "linearmodels.formula.sur",
   "linearmodels.tests.system._utility.generate_3sls_data_v2",
   "list",
   "pandas.Series",
   "pandas.concat",
   "str"
  ],
  "type": "module"
 },
 "linearmodels.tests.system.test_formulas.config": {
  "lineno": 57,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_formulas.sigmoid": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_formulas.test_fromula": {
  "lineno": 64,
  "symbols_in_volume": [
   "interface",
   "linearmodels.IV3SLS",
   "linearmodels.IVSystemGMM",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_formulas.test_invalid_predict": {
  "lineno": 124,
  "symbols_in_volume": [
   "ValueError",
   "interface",
   "linearmodels.IV3SLS",
   "linearmodels.IVSystemGMM",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_formulas.test_parser": {
  "lineno": 135,
  "symbols_in_volume": [
   "dict",
   "interface",
   "isinstance",
   "linearmodels.system.model.SystemFormulaParser",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_formulas.test_predict": {
  "lineno": 76,
  "symbols_in_volume": [
   "dict",
   "interface",
   "isinstance",
   "linearmodels.IV3SLS",
   "linearmodels.IVSystemGMM",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_formulas.test_predict_partial": {
  "lineno": 90,
  "symbols_in_volume": [
   "interface",
   "linearmodels.IV3SLS",
   "linearmodels.IVSystemGMM",
   "linearmodels.utility.AttrDict",
   "list",
   "pandas.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm": {
  "lineno": null,
  "symbols_in_volume": [
   "itertools.product",
   "list",
   "map"
  ],
  "type": "module"
 },
 "linearmodels.tests.system.test_gmm.center": {
  "lineno": 62,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.data": {
  "lineno": 36,
  "symbols_in_volume": [
   "linearmodels.tests.system._utility.generate_3sls_data_v2",
   "linearmodels.utility.AttrDict",
   "numpy.concatenate",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.debias": {
  "lineno": 67,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.gen_id": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_cov": {
  "lineno": 91,
  "symbols_in_volume": [
   "linearmodels.system.IVSystemGMM",
   "linearmodels.tests.system._utility.simple_gmm",
   "numpy.asarray",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_fitted": {
  "lineno": 394,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.system.IVSystemGMM",
   "numpy.concatenate",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_fixed_sigma": {
  "lineno": 263,
  "symbols_in_volume": [
   "len",
   "linearmodels.system.IVSystemGMM",
   "numpy.any",
   "numpy.asarray",
   "numpy.diag",
   "numpy.ones",
   "numpy.random.standard_normal"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_formula_equivalence": {
  "lineno": 98,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.compat.pandas.concat",
   "linearmodels.system.IVSystemGMM",
   "linearmodels.system.IVSystemGMM.from_formula",
   "numpy.all",
   "numpy.any",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_formula_equivalence_weights": {
  "lineno": 141,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.compat.pandas.concat",
   "linearmodels.system.IVSystemGMM",
   "linearmodels.system.IVSystemGMM.from_formula",
   "linearmodels.utility.AttrDict",
   "numpy.all",
   "numpy.any",
   "numpy.random.chisquare",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_heteroskedastic_weight_direct": {
  "lineno": 349,
  "symbols_in_volume": [
   "len",
   "linearmodels.system.gmm.HeteroskedasticWeightMatrix",
   "numpy.concatenate",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "range",
   "zip"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_homoskedastic_weight_direct": {
  "lineno": 329,
  "symbols_in_volume": [
   "len",
   "linearmodels.system.gmm.HomoskedasticWeightMatrix",
   "numpy.concatenate",
   "numpy.eye",
   "numpy.kron",
   "numpy.testing.assert_allclose",
   "numpy.zeros_like",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_incorrect_sigma_shape": {
  "lineno": 275,
  "symbols_in_volume": [
   "ValueError",
   "len",
   "linearmodels.system.IVSystemGMM",
   "numpy.diag",
   "numpy.ones",
   "numpy.random.standard_normal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_initial_weight_matrix": {
  "lineno": 229,
  "symbols_in_volume": [
   "linearmodels.system.IVSystemGMM",
   "numpy.any",
   "numpy.concatenate",
   "numpy.random.standard_normal"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_invalid_sigma_usage": {
  "lineno": 283,
  "symbols_in_volume": [
   "UserWarning",
   "len",
   "linearmodels.system.IVSystemGMM",
   "numpy.diag",
   "numpy.ones",
   "numpy.random.standard_normal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_j_statistic_direct": {
  "lineno": 291,
  "symbols_in_volume": [
   "linearmodels.system.IVSystemGMM",
   "linearmodels.tests.system._utility.simple_gmm",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_kernel_equiv": {
  "lineno": 310,
  "symbols_in_volume": [
   "linearmodels.system.IVSystemGMM",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_kernel_optimal_bandwidth": {
  "lineno": 319,
  "symbols_in_volume": [
   "linearmodels.system.IVSystemGMM",
   "list"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_kernel_weight_direct": {
  "lineno": 369,
  "symbols_in_volume": [
   "len",
   "linearmodels.iv.covariance.kernel_weight_parzen",
   "linearmodels.system.gmm.KernelWeightMatrix",
   "numpy.concatenate",
   "numpy.ones",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "range",
   "zip"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_linear_constraint": {
  "lineno": 298,
  "symbols_in_volume": [
   "len",
   "linearmodels.system.IVSystemGMM",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_no_constant_smoke": {
  "lineno": 209,
  "symbols_in_volume": [
   "linearmodels.system.IVSystemGMM",
   "linearmodels.tests.system._utility.generate_3sls_data_v2",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_params": {
  "lineno": 72,
  "symbols_in_volume": [
   "linearmodels.system.IVSystemGMM",
   "linearmodels.tests.system._utility.simple_gmm",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_summary": {
  "lineno": 243,
  "symbols_in_volume": [
   "linearmodels.system.IVSystemGMM"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_summary_homoskedastic": {
  "lineno": 257,
  "symbols_in_volume": [
   "linearmodels.system.IVSystemGMM"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_unknown_cov_type": {
  "lineno": 221,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.system.IVSystemGMM",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_unknown_weight_type": {
  "lineno": 216,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.system.IVSystemGMM",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_weight_options": {
  "lineno": 192,
  "symbols_in_volume": [
   "hex",
   "id",
   "linearmodels.system.IVSystemGMM",
   "numpy.all",
   "numpy.diag",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.test_weights": {
  "lineno": 83,
  "symbols_in_volume": [
   "linearmodels.system.IVSystemGMM",
   "linearmodels.tests.system._utility.simple_gmm",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_gmm.weight_data": {
  "lineno": 50,
  "symbols_in_volume": [
   "linearmodels.system.IV3SLS",
   "linearmodels.tests.system._utility.generate_3sls_data_v2",
   "numpy.asarray",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur": {
  "lineno": null,
  "symbols_in_volume": [
   "itertools.product",
   "list",
   "map",
   "str"
  ],
  "type": "module"
 },
 "linearmodels.tests.system.test_sur.check_results": {
  "lineno": 43,
  "symbols_in_volume": [
   "hasattr",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.data": {
  "lineno": 70,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.tests.system._utility.generate_data",
   "list",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.gen_id": {
  "lineno": 30,
  "symbols_in_volume": [
   "isinstance",
   "list"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.get_res": {
  "lineno": 61,
  "symbols_in_volume": [
   "collections.abc.Mapping",
   "dir",
   "filter",
   "get_res",
   "getattr",
   "isinstance"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.kernel_options": {
  "lineno": 134,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.missing_data": {
  "lineno": 85,
  "symbols_in_volume": [
   "linearmodels.tests.system._utility.generate_data",
   "numpy.nan",
   "numpy.random.random_sample",
   "numpy.random.seed",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.mvreg_data": {
  "lineno": 109,
  "symbols_in_volume": [
   "linearmodels.tests.system._utility.generate_data",
   "numpy.hstack",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.mvreg_gen_id": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.reference_berndt": {
  "lineno": 750,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.linalg.det"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.reference_mcelroy": {
  "lineno": 733,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.eye",
   "numpy.kron",
   "numpy.linalg.inv",
   "numpy.ones"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_against_direct_model": {
  "lineno": 581,
  "symbols_in_volume": [
   "collections.abc.Mapping",
   "isinstance",
   "len",
   "linearmodels.system.model.SUR",
   "linearmodels.tests.system._utility.simple_sur",
   "list",
   "min",
   "numpy.testing.assert_allclose",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_constraint_setting": {
  "lineno": 406,
  "symbols_in_volume": [
   "len",
   "linearmodels.system.model.SUR",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_contrains_reset": {
  "lineno": 464,
  "symbols_in_volume": [
   "len",
   "linearmodels.system.model.SUR",
   "numpy.asarray",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_errors": {
  "lineno": 154,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "linearmodels.system.model.SUR",
   "numpy.c_",
   "numpy.random.standard_normal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_fitted": {
  "lineno": 662,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.system.model.SUR",
   "numpy.concatenate",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pandas.testing.assert_series_equal"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_formula": {
  "lineno": 208,
  "symbols_in_volume": [
   "linearmodels.system.model.SUR.from_formula",
   "numpy.random.standard_normal",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_formula_errors": {
  "lineno": 497,
  "symbols_in_volume": [
   "TypeError",
   "linearmodels.system.model.SUR.from_formula",
   "numpy.ones",
   "numpy.random.standard_normal",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_formula_partial_weights": {
  "lineno": 543,
  "symbols_in_volume": [
   "len",
   "linearmodels.system.model.SUR.from_formula",
   "numpy.ones",
   "numpy.random.chisquare",
   "numpy.random.standard_normal",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_formula_repeated_key": {
  "lineno": 505,
  "symbols_in_volume": [
   "linearmodels.system.model.SUR.from_formula",
   "numpy.random.standard_normal",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_formula_weights": {
  "lineno": 520,
  "symbols_in_volume": [
   "linearmodels.system.model.SUR.from_formula",
   "numpy.random.chisquare",
   "numpy.random.standard_normal",
   "numpy.testing.assert_allclose",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_gls_eye_mv_ols_equiv": {
  "lineno": 296,
  "symbols_in_volume": [
   "check_results",
   "len",
   "linearmodels.system.model.SUR",
   "linearmodels.system.model.SUR.multivariate_ls",
   "linearmodels.utility.AttrDict",
   "numpy.eye",
   "pandas.DataFrame",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_gls_without_mv_ols_equiv": {
  "lineno": 335,
  "symbols_in_volume": [
   "check_results",
   "linearmodels.system.model.SUR",
   "linearmodels.system.model.SUR.multivariate_ls",
   "linearmodels.utility.AttrDict",
   "pandas.DataFrame",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_invalid_constraints": {
  "lineno": 432,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "len",
   "linearmodels.system.model.SUR",
   "numpy.zeros",
   "pandas.Series",
   "pandas.concat",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_invalid_equation_labels": {
  "lineno": 575,
  "symbols_in_volume": [
   "ValueError",
   "enumerate",
   "linearmodels.system.model.SUR",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_invalid_kernel_options": {
  "lineno": 642,
  "symbols_in_volume": [
   "TypeError",
   "linearmodels.system.model.SUR",
   "linearmodels.tests.system._utility.generate_data",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_missing": {
  "lineno": 483,
  "symbols_in_volume": [
   "collections.abc.Mapping",
   "enumerate",
   "isinstance",
   "len",
   "linearmodels.system.model.SUR",
   "numpy.nan",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_model_repr": {
  "lineno": 615,
  "symbols_in_volume": [
   "hex",
   "id",
   "len",
   "linearmodels.system.model.SUR",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_mv_ols_equivalence": {
  "lineno": 242,
  "symbols_in_volume": [
   "check_results",
   "linearmodels.iv.model._OLS",
   "linearmodels.system.model.SUR.multivariate_ls",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_mv_ols_equivalence_debiased": {
  "lineno": 270,
  "symbols_in_volume": [
   "check_results",
   "linearmodels.iv.model._OLS",
   "linearmodels.system.model.SUR.multivariate_ls",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_mv_ols_equivalence_hetero_debiased": {
  "lineno": 283,
  "symbols_in_volume": [
   "check_results",
   "linearmodels.iv.model._OLS",
   "linearmodels.system.model.SUR.multivariate_ls",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_mv_ols_equivalence_robust": {
  "lineno": 257,
  "symbols_in_volume": [
   "check_results",
   "linearmodels.iv.model._OLS",
   "linearmodels.system.model.SUR.multivariate_ls",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_mv_ols_hac_smoke": {
  "lineno": 623,
  "symbols_in_volume": [
   "linearmodels.system.model.SUR",
   "linearmodels.tests.system._utility.generate_data",
   "numpy.testing.assert_allclose",
   "pytest.mark.smoke",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_mv_reg_smoke": {
  "lineno": 195,
  "symbols_in_volume": [
   "get_res",
   "linearmodels.system.model.SUR.multivariate_ls",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_ols_against_gls": {
  "lineno": 374,
  "symbols_in_volume": [
   "IndexError",
   "KeyError",
   "collections.abc.Mapping",
   "isinstance",
   "linearmodels.iv.model._OLS",
   "linearmodels.system._utility.blocked_column_product",
   "linearmodels.system._utility.blocked_diag_product",
   "linearmodels.system._utility.inv_matrix_sqrt",
   "linearmodels.system.model.SUR",
   "list",
   "numpy.asarray",
   "numpy.ones_like",
   "numpy.sqrt",
   "numpy.testing.assert_allclose",
   "zip"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_predict": {
  "lineno": 684,
  "symbols_in_volume": [
   "dict",
   "isinstance",
   "linearmodels.system.model.SUR",
   "list",
   "pandas.DataFrame",
   "pandas.testing.assert_frame_equal",
   "pandas.testing.assert_series_equal",
   "pytest.mark.filterwarnings"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_predict_error": {
  "lineno": 725,
  "symbols_in_volume": [
   "ValueError",
   "linearmodels.system.model.SUR",
   "pytest.mark.filterwarnings",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_restricted_f_statistic": {
  "lineno": 604,
  "symbols_in_volume": [
   "isinstance",
   "linearmodels.system.model.SUR",
   "linearmodels.tests.system._utility.generate_data",
   "linearmodels.utility.InvalidTestStatistic",
   "numpy.zeros",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_smoke": {
  "lineno": 143,
  "symbols_in_volume": [
   "get_res",
   "linearmodels.system.model.SUR",
   "pytest.mark.smoke"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur.test_system_r2_direct": {
  "lineno": 761,
  "symbols_in_volume": [
   "linearmodels.system.model.SUR",
   "linearmodels.tests.system._utility.generate_data",
   "numpy.hstack",
   "numpy.testing.assert_allclose",
   "reference_berndt",
   "reference_mcelroy"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur_against_stata": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings"
  ],
  "type": "module"
 },
 "linearmodels.tests.system.test_sur_against_stata.model_data": {
  "lineno": 22,
  "symbols_in_volume": [
   "bool",
   "enumerate",
   "linearmodels.system.SUR",
   "linearmodels.tests.system.results.generate_data.basic_data",
   "linearmodels.tests.system.results.generate_data.common_data",
   "linearmodels.tests.system.results.generate_data.missing_data",
   "linearmodels.tests.system.results.parse_stata_results.stata_results",
   "linearmodels.tests.system.results.parse_stata_results.stata_results.keys",
   "linearmodels.utility.AttrDict",
   "list",
   "numpy.float64",
   "pandas.DataFrame",
   "pytest.fixture",
   "str",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur_against_stata.test_cov": {
  "lineno": 88,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "numpy.diag",
   "numpy.sqrt",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur_against_stata.test_df_model": {
  "lineno": 155,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.utility.AttrDict",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur_against_stata.test_f_stat": {
  "lineno": 117,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.utility.AttrDict",
   "numpy.isnan",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur_against_stata.test_params": {
  "lineno": 82,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur_against_stata.test_pvals": {
  "lineno": 105,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur_against_stata.test_r2": {
  "lineno": 132,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.utility.AttrDict",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur_against_stata.test_sigma": {
  "lineno": 111,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur_against_stata.test_sum_of_squares": {
  "lineno": 142,
  "symbols_in_volume": [
   "enumerate",
   "linearmodels.utility.AttrDict",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_sur_against_stata.test_tstats": {
  "lineno": 99,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_utility": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.system.test_utility.data": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.eye",
   "numpy.int64",
   "numpy.isscalar",
   "numpy.ones",
   "numpy.random.randn",
   "pytest.fixture",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_utility.test_blocked_full_inner_product": {
  "lineno": 164,
  "symbols_in_volume": [
   "linearmodels.system._utility.blocked_full_inner_product",
   "numpy.eye",
   "numpy.kron",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_utility.test_blocked_outer_product": {
  "lineno": 176,
  "symbols_in_volume": [
   "linearmodels.system._utility.blocked_cross_prod",
   "numpy.arange",
   "numpy.concatenate",
   "numpy.diag",
   "numpy.eye",
   "numpy.kron",
   "numpy.linspace",
   "numpy.ones",
   "numpy.random.standard_normal",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_utility.test_column_product": {
  "lineno": 73,
  "symbols_in_volume": [
   "linearmodels.system._utility.blocked_column_product",
   "numpy.eye",
   "numpy.kron",
   "numpy.testing.assert_allclose",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_utility.test_diag_product": {
  "lineno": 83,
  "symbols_in_volume": [
   "len",
   "linearmodels.system._utility.blocked_diag_product",
   "numpy.eye",
   "numpy.hstack",
   "numpy.kron",
   "numpy.testing.assert_allclose",
   "numpy.vstack",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_utility.test_inner_product": {
  "lineno": 32,
  "symbols_in_volume": [
   "len",
   "linearmodels.system._utility.blocked_inner_prod",
   "numpy.eye",
   "numpy.hstack",
   "numpy.kron",
   "numpy.testing.assert_allclose",
   "numpy.vstack",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_utility.test_inner_product_short_circuit": {
  "lineno": 52,
  "symbols_in_volume": [
   "len",
   "linearmodels.system._utility.blocked_inner_prod",
   "numpy.eye",
   "numpy.hstack",
   "numpy.kron",
   "numpy.testing.assert_allclose",
   "numpy.vstack",
   "numpy.zeros",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_utility.test_inv_matrix_sqrt": {
  "lineno": 103,
  "symbols_in_volume": [
   "linearmodels.system._utility.inv_matrix_sqrt",
   "numpy.eye",
   "numpy.linalg.inv",
   "numpy.testing.assert_allclose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_utility.test_linear_constraint": {
  "lineno": 112,
  "symbols_in_volume": [
   "linearmodels.system._utility.LinearConstraint",
   "numpy.all",
   "numpy.linalg.lstsq",
   "numpy.random.randn",
   "numpy.sum",
   "numpy.testing.assert_allclose",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_utility.test_linear_constraint_errors": {
  "lineno": 133,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "linearmodels.system._utility.LinearConstraint",
   "numpy.zeros",
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "linearmodels.tests.system.test_utility.test_linear_constraint_repr": {
  "lineno": 152,
  "symbols_in_volume": [
   "hex",
   "id",
   "isinstance",
   "linearmodels.system._utility.LinearConstraint",
   "numpy.all",
   "numpy.asarray",
   "numpy.eye",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "linearmodels.tests.test_compat": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.tests.test_compat.data": {
  "lineno": 10,
  "symbols_in_volume": [
   "linearmodels.utility.AttrDict",
   "numpy.arange",
   "numpy.reshape",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.date_range",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.test_compat.test_concat_sort": {
  "lineno": 20,
  "symbols_in_volume": [
   "linearmodels.compat.pandas.concat",
   "list"
  ],
  "type": "function"
 },
 "linearmodels.tests.test_examples": {
  "lineno": null,
  "symbols_in_volume": [
   "ImportError",
   "glob.glob",
   "jupyter_client.kernelspec.find_kernel_specs",
   "list",
   "map",
   "os.path.abspath",
   "os.path.join",
   "os.path.split",
   "pytest.mark.skip",
   "sorted",
   "sys.version_info.major"
  ],
  "type": "module"
 },
 "linearmodels.tests.test_examples.notebook": {
  "lineno": 35,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "linearmodels.tests.test_examples.test_notebook": {
  "lineno": 40,
  "symbols_in_volume": [
   "nbconvert.preprocessors.ExecutePreprocessor",
   "nbformat.read",
   "os.path.split",
   "pytest.mark.slow",
   "pytest.skip"
  ],
  "type": "function"
 },
 "linearmodels.tests.test_utility": {
  "lineno": null,
  "symbols_in_volume": [
   "dir",
   "pandas"
  ],
  "type": "module"
 },
 "linearmodels.tests.test_utility.test_attr_dict": {
  "lineno": 125,
  "symbols_in_volume": [
   "AttributeError",
   "KeyError",
   "dir",
   "isinstance",
   "len",
   "linearmodels.utility.AttrDict",
   "list",
   "pytest.raises",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.test_utility.test_ensure_unique_column": {
  "lineno": 112,
  "symbols_in_volume": [
   "linearmodels.utility.ensure_unique_column",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "linearmodels.tests.test_utility.test_format_wide": {
  "lineno": 188,
  "symbols_in_volume": [
   "chr",
   "len",
   "linearmodels.utility.format_wide",
   "map",
   "max",
   "range"
  ],
  "type": "function"
 },
 "linearmodels.tests.test_utility.test_hasconstant": {
  "lineno": 47,
  "symbols_in_volume": [
   "bool",
   "linearmodels.utility.has_constant",
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "linearmodels.tests.test_utility.test_inapplicable_test_statistic": {
  "lineno": 93,
  "symbols_in_volume": [
   "hex",
   "id",
   "linearmodels.utility.InapplicableTestStatistic",
   "numpy.isnan",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.test_utility.test_inv_sqrth": {
  "lineno": 104,
  "symbols_in_volume": [
   "linearmodels.utility.inv_sqrth",
   "numpy.eye",
   "numpy.ones",
   "numpy.random.randn",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "linearmodels.tests.test_utility.test_invalid_test_statistic": {
  "lineno": 85,
  "symbols_in_volume": [
   "hex",
   "id",
   "linearmodels.utility.InvalidTestStatistic",
   "numpy.isnan",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.tests.test_utility.test_missing_warning": {
  "lineno": 28,
  "symbols_in_volume": [
   "len",
   "linearmodels.WARN_ON_MISSING",
   "linearmodels.utility.missing_warning",
   "numpy.bool",
   "numpy.zeros",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "linearmodels.tests.test_utility.test_panel_to_midf": {
  "lineno": 195,
  "symbols_in_volume": [
   "linearmodels.utility.panel_to_frame",
   "list",
   "map",
   "numpy.random.standard_normal",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "pandas.date_range",
   "pandas.testing.assert_frame_equal",
   "random.choice",
   "range",
   "string.ascii_lowercase"
  ],
  "type": "function"
 },
 "linearmodels.tests.test_utility.test_wald_statistic": {
  "lineno": 67,
  "symbols_in_volume": [
   "dict",
   "hex",
   "id",
   "isinstance",
   "linearmodels.utility.WaldTestStatistic",
   "numpy.testing.assert_allclose",
   "scipy.stats.chi2.cdf",
   "scipy.stats.f.cdf",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.typing": {
  "lineno": null,
  "symbols_in_volume": [
   "float",
   "int",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Hashable",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "module"
 },
 "linearmodels.typing.data": {
  "lineno": null,
  "symbols_in_volume": [
   "ImportError",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional",
   "typing.Union",
   "xarray.DataArray"
  ],
  "type": "module"
 },
 "linearmodels.typing.iv": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.utility": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "linearmodels.utility.AttrDict": {
  "lineno": 51,
  "symbols_in_volume": [
   "collections.abc.MutableMapping"
  ],
  "type": "class"
 },
 "linearmodels.utility.AttrDict.__contains__": {
  "lineno": 113,
  "symbols_in_volume": [
   "bool",
   "linearmodels.typing.Label"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.__delattr__": {
  "lineno": 137,
  "symbols_in_volume": [
   "linearmodels.typing.Label"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.__delitem__": {
  "lineno": 124,
  "symbols_in_volume": [
   "linearmodels.typing.Label"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.__dir__": {
  "lineno": 140,
  "symbols_in_volume": [
   "AttrDict",
   "list",
   "map",
   "set",
   "sorted",
   "str",
   "super",
   "typing.Iterable"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.__getattr__": {
  "lineno": 127,
  "symbols_in_volume": [
   "AttributeError",
   "linearmodels.typing.Label",
   "typing.Any"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.__getitem__": {
  "lineno": 116,
  "symbols_in_volume": [
   "linearmodels.typing.Label",
   "typing.Any"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.__init__": {
  "lineno": 108,
  "symbols_in_volume": [
   "dict",
   "typing.Any",
   "typing.Mapping",
   "typing.Sequence",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.__iter__": {
  "lineno": 146,
  "symbols_in_volume": [
   "linearmodels.typing.Label",
   "typing.Iterator"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.__len__": {
  "lineno": 98,
  "symbols_in_volume": [
   "int"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.__repr__": {
  "lineno": 101,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.__setattr__": {
  "lineno": 132,
  "symbols_in_volume": [
   "AttributeError",
   "linearmodels.typing.Label",
   "typing.Any"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.__setitem__": {
  "lineno": 119,
  "symbols_in_volume": [
   "KeyError",
   "linearmodels.typing.Label",
   "typing.Any"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.__str__": {
  "lineno": 105,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.clear": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.copy": {
  "lineno": 71,
  "symbols_in_volume": [
   "AttrDict"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.items": {
  "lineno": 82,
  "symbols_in_volume": [
   "typing.AbstractSet",
   "typing.Any",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.keys": {
  "lineno": 78,
  "symbols_in_volume": [
   "typing.AbstractSet",
   "typing.Any"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.pop": {
  "lineno": 90,
  "symbols_in_volume": [
   "linearmodels.typing.Label",
   "typing.Any"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.update": {
  "lineno": 56,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Iterable",
   "typing.Mapping",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.utility.AttrDict.values": {
  "lineno": 86,
  "symbols_in_volume": [
   "typing.Any",
   "typing.ValuesView"
  ],
  "type": "function"
 },
 "linearmodels.utility.InapplicableTestStatistic": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.utility.InapplicableTestStatistic.__init__": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.NaN",
   "str",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.utility.InapplicableTestStatistic.__str__": {
  "lineno": 379,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.utility.InapplicableTestStatistic.critical_values": {
  "lineno": 374,
  "symbols_in_volume": [
   "property"
  ],
  "type": "function"
 },
 "linearmodels.utility.InapplicableTestStatistic.pval": {
  "lineno": 369,
  "symbols_in_volume": [
   "float",
   "numpy.NaN",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.utility.InferenceUnavailableWarning": {
  "lineno": 43,
  "symbols_in_volume": [
   "Warning"
  ],
  "type": "class"
 },
 "linearmodels.utility.InvalidTestStatistic": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "class"
 },
 "linearmodels.utility.InvalidTestStatistic.__init__": {
  "lineno": 319,
  "symbols_in_volume": [
   "numpy.NaN",
   "str",
   "super",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.utility.InvalidTestStatistic.__str__": {
  "lineno": 336,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.utility.InvalidTestStatistic.critical_values": {
  "lineno": 331,
  "symbols_in_volume": [
   "property"
  ],
  "type": "function"
 },
 "linearmodels.utility.InvalidTestStatistic.pval": {
  "lineno": 326,
  "symbols_in_volume": [
   "float",
   "numpy.NaN",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.utility.InvalidTestWarning": {
  "lineno": 299,
  "symbols_in_volume": [
   "UserWarning"
  ],
  "type": "class"
 },
 "linearmodels.utility.MemoryWarning": {
  "lineno": 39,
  "symbols_in_volume": [
   "Warning"
  ],
  "type": "class"
 },
 "linearmodels.utility.MissingValueWarning": {
  "lineno": 31,
  "symbols_in_volume": [
   "Warning"
  ],
  "type": "class"
 },
 "linearmodels.utility.SingletonWarning": {
  "lineno": 47,
  "symbols_in_volume": [
   "Warning"
  ],
  "type": "class"
 },
 "linearmodels.utility.WaldTestStatistic": {
  "lineno": 211,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.utility.WaldTestStatistic.__init__": {
  "lineno": 234,
  "symbols_in_volume": [
   "float",
   "int",
   "scipy.stats.chi2",
   "scipy.stats.f",
   "str",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.utility.WaldTestStatistic.__repr__": {
  "lineno": 290,
  "symbols_in_volume": [
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.utility.WaldTestStatistic.__str__": {
  "lineno": 274,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.utility.WaldTestStatistic.critical_values": {
  "lineno": 264,
  "symbols_in_volume": [
   "dict",
   "float",
   "property",
   "str",
   "typing.Dict",
   "typing.Optional",
   "zip"
  ],
  "type": "function"
 },
 "linearmodels.utility.WaldTestStatistic.null": {
  "lineno": 269,
  "symbols_in_volume": [
   "property",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.utility.WaldTestStatistic.pval": {
  "lineno": 259,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.utility.WaldTestStatistic.stat": {
  "lineno": 254,
  "symbols_in_volume": [
   "float",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.utility._ModelComparison": {
  "lineno": 442,
  "symbols_in_volume": [
   "tuple",
   "typing.Tuple",
   "typing.Type"
  ],
  "type": "class"
 },
 "linearmodels.utility._ModelComparison.__init__": {
  "lineno": 455,
  "symbols_in_volume": [
   "TypeError",
   "ValueError",
   "dict",
   "enumerate",
   "isinstance",
   "str",
   "typing.Any",
   "typing.Dict",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "linearmodels.utility._ModelComparison._get_property": {
  "lineno": 490,
  "symbols_in_volume": [
   "getattr",
   "pandas.Series",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.utility._ModelComparison._get_series_property": {
  "lineno": 481,
  "symbols_in_volume": [
   "getattr",
   "linearmodels.compat.pandas.concat",
   "pandas.DataFrame",
   "pandas.Series",
   "str",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.utility._ModelComparison.f_statistic": {
  "lineno": 528,
  "symbols_in_volume": [
   "len",
   "numpy.empty",
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.utility._ModelComparison.nobs": {
  "lineno": 498,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.utility._ModelComparison.params": {
  "lineno": 503,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.utility._ModelComparison.pvalues": {
  "lineno": 518,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.utility._ModelComparison.rsquared": {
  "lineno": 523,
  "symbols_in_volume": [
   "pandas.Series",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.utility._ModelComparison.std_errors": {
  "lineno": 513,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.utility._ModelComparison.tstats": {
  "lineno": 508,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.utility._SummaryStr": {
  "lineno": 412,
  "symbols_in_volume": [
   "object"
  ],
  "type": "class"
 },
 "linearmodels.utility._SummaryStr.__repr__": {
  "lineno": 424,
  "symbols_in_volume": [
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.utility._SummaryStr.__str__": {
  "lineno": 421,
  "symbols_in_volume": [
   "str"
  ],
  "type": "function"
 },
 "linearmodels.utility._SummaryStr._repr_html_": {
  "lineno": 432,
  "symbols_in_volume": [
   "hex",
   "id",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.utility._SummaryStr.summary": {
  "lineno": 417,
  "symbols_in_volume": [
   "linearmodels.compat.statsmodels.Summary",
   "property"
  ],
  "type": "function"
 },
 "linearmodels.utility._str": {
  "lineno": 385,
  "symbols_in_volume": [
   "abs",
   "float",
   "int",
   "numpy.ceil",
   "numpy.isnan",
   "numpy.log10",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.utility.ensure_unique_column": {
  "lineno": 436,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.utility.format_wide": {
  "lineno": 583,
  "symbols_in_volume": [
   "enumerate",
   "int",
   "len",
   "str",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "linearmodels.utility.get_array_like": {
  "lineno": 782,
  "symbols_in_volume": [
   "ImportError",
   "TypeError",
   "bool",
   "isinstance",
   "linearmodels.typing.ArrayLike",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "str",
   "typing.Any",
   "typing.Mapping",
   "typing.Optional",
   "typing.Union",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "linearmodels.utility.get_bool": {
  "lineno": 757,
  "symbols_in_volume": [
   "TypeError",
   "bool",
   "isinstance",
   "str",
   "typing.Any",
   "typing.Mapping",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.utility.get_float": {
  "lineno": 728,
  "symbols_in_volume": [
   "TypeError",
   "float",
   "int",
   "isinstance",
   "numpy.floating",
   "str",
   "typing.Any",
   "typing.Mapping",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.utility.get_string": {
  "lineno": 698,
  "symbols_in_volume": [
   "TypeError",
   "isinstance",
   "str",
   "typing.Any",
   "typing.Mapping",
   "typing.Optional"
  ],
  "type": "function"
 },
 "linearmodels.utility.has_constant": {
  "lineno": 150,
  "symbols_in_volume": [
   "bool",
   "int",
   "linearmodels.typing.NDArray",
   "min",
   "numpy.abs",
   "numpy.all",
   "numpy.any",
   "numpy.argmax",
   "numpy.argwhere",
   "numpy.c_",
   "numpy.linalg.lstsq",
   "numpy.linalg.matrix_rank",
   "numpy.ones",
   "numpy.ptp",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "linearmodels.utility.inv_sqrth": {
  "lineno": 193,
  "symbols_in_volume": [
   "linearmodels.typing.NDArray",
   "numpy.diag",
   "numpy.linalg.eigh",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "linearmodels.utility.missing_warning": {
  "lineno": 540,
  "symbols_in_volume": [
   "linearmodels.WARN_ON_MISSING",
   "linearmodels.typing.ArrayLike",
   "numpy.any",
   "warnings.warn"
  ],
  "type": "function"
 },
 "linearmodels.utility.panel_to_frame": {
  "lineno": 621,
  "symbols_in_volume": [
   "bool",
   "len",
   "linearmodels.typing.Label",
   "linearmodels.typing.NDArray",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_product",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "linearmodels.utility.param_table": {
  "lineno": 553,
  "symbols_in_volume": [
   "bool",
   "enumerate",
   "func",
   "list",
   "numpy.asarray",
   "numpy.c_",
   "statsmodels.iolib.summary.SimpleTable",
   "statsmodels.iolib.summary.fmt_params",
   "str",
   "typing.Any"
  ],
  "type": "function"
 },
 "linearmodels.utility.pval_format": {
  "lineno": 405,
  "symbols_in_volume": [
   "float",
   "numpy.isnan",
   "str"
  ],
  "type": "function"
 },
 "linearmodels.utility.quadratic_form_test": {
  "lineno": 671,
  "symbols_in_volume": [
   "ValueError",
   "WaldTestStatistic",
   "float",
   "linearmodels.typing.ArrayLike",
   "linearmodels.typing.OptionalArrayLike",
   "list",
   "numpy.asarray",
   "numpy.linalg.inv",
   "numpy.zeros",
   "patsy.design_info.DesignInfo",
   "str",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 }
}