{
 "xrft": {
  "data": {
   "symbols_in_volume": [
    "get_versions"
   ]
  },
  "type": "module"
 },
 "xrft.__version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "xrft._version": {
  "data": {},
  "type": "module"
 },
 "xrft._version.get_versions": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "xrft._version.json",
    "xrft._version.version_json"
   ]
  },
  "type": "function"
 },
 "xrft._version.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "xrft._version.version_json": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "xrft.tests": {
  "data": {},
  "type": "module"
 },
 "xrft.tests.test_xrft": {
  "data": {},
  "type": "module"
 },
 "xrft.tests.test_xrft.TestCrossPhase": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xrft.tests.test_xrft.TestCrossPhase.test_cross_phase_1d": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.testing.assert_almost_equal",
    "xarray.DataArray",
    "xarray.testing.assert_equal",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.TestCrossPhase.test_cross_phase_2d": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "ValueError",
    "numpy.cos",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_almost_equal",
    "xarray.DataArray",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.TestDFTImag": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xrft.tests.test_xrft.TestDFTImag.test_dft_1d": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "len",
    "numpy.fft.fft",
    "numpy.fft.fftfreq",
    "numpy.fft.fftshift",
    "numpy.testing.assert_allclose",
    "scipy.signal.detrend",
    "type",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.test_data_1d",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.TestDFTImag.test_dft_1d_time": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len",
    "numpy.diff",
    "numpy.fft.fftfreq",
    "numpy.random.rand",
    "numpy.testing.assert_allclose",
    "pandas.api.types.is_datetime64_dtype",
    "xarray.DataArray",
    "xrft.tests.test_xrft.time_data",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.TestDFTImag.test_dft_2d": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.fft.fftn",
    "numpy.hanning",
    "numpy.newaxis",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "range",
    "xarray.DataArray",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.TestDFTImag.test_dft_3d_dask": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "ValueError",
    "numpy.fft.fftn",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "range",
    "scipy.signal.detrend",
    "xarray.DataArray",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.TestDFTImag.test_dft_4d": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "numpy.fft.fftn",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "range",
    "xarray.DataArray",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.TestDFTImag.test_dim_dft": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "numpy.random.rand",
    "numpy.testing.assert_array_equal",
    "range",
    "xarray.DataArray",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.TestDFTReal": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xrft.tests.test_xrft.TestDFTReal.test_dft_real_1d": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "len",
    "numpy.fft.rfft",
    "numpy.fft.rfftfreq",
    "numpy.testing.assert_allclose",
    "type",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.test_data_1d",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.TestDFTReal.test_dft_real_2d": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "float",
    "numpy.fft.fftfreq",
    "numpy.fft.rfftfreq",
    "numpy.fft.rfftn",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "range",
    "xarray.DataArray",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.TestSpectrum": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "xrft.tests.test_xrft.TestSpectrum.test_cross_spectrum": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.conj",
    "numpy.diff",
    "numpy.fft.fftfreq",
    "numpy.ma.masked_invalid",
    "numpy.random.rand",
    "numpy.real",
    "numpy.testing.assert_almost_equal",
    "range",
    "xarray.DataArray",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.TestSpectrum.test_power_spectrum": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.conj",
    "numpy.diff",
    "numpy.fft.fftfreq",
    "numpy.ma.masked_invalid",
    "numpy.random.rand",
    "numpy.real",
    "numpy.testing.assert_almost_equal",
    "range",
    "xarray.DataArray",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.TestSpectrum.test_spectrum_dim": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal",
    "range",
    "xarray.DataArray",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.cftime": {
  "data": {
   "shadows": "cftime"
  },
  "type": "import"
 },
 "xrft.tests.test_xrft.dsar": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xrft.tests.test_xrft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xrft.tests.test_xrft.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "xrft.tests.test_xrft.numpy_detrend": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.dot",
    "numpy.ones",
    "numpy.reshape",
    "range",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xrft.tests.test_xrft.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "xrft.tests.test_xrft.sample_data_3d": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.rand",
    "xarray.Dataset",
    "xrft.tests.test_xrft.pytest"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.spl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "xrft.tests.test_xrft.sps": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "xrft.tests.test_xrft.synthetic_field": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "int",
    "numpy.exp",
    "numpy.fft.fftfreq",
    "numpy.fft.fftshift",
    "numpy.fft.ifft2",
    "numpy.fft.ifftshift",
    "numpy.ma.masked_invalid",
    "numpy.meshgrid",
    "numpy.pi",
    "numpy.random.random",
    "numpy.real",
    "numpy.sqrt",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.synthetic_field_xr": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "len",
    "numpy.ones",
    "range",
    "xarray.DataArray",
    "xrft.tests.test_xrft.synthetic_field"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_chunks_to_segments": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.fft.fftn",
    "numpy.conj",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "range",
    "xarray.DataArray",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_data_1d": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.random.rand",
    "xarray.DataArray",
    "xrft.tests.test_xrft.pytest"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_dataset_type_error": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "TypeError",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.sample_data_3d",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_detrend": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "int",
    "len",
    "numpy.arange",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "range",
    "scipy.signal.detrend",
    "xarray.DataArray",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_dft_nocoords": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.random.random",
    "xarray.DataArray",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_isotropic_cs": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.ma.masked_invalid",
    "numpy.random.rand",
    "numpy.testing.assert_equal",
    "range",
    "slice",
    "xarray.DataArray",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_isotropic_ps": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.array",
    "numpy.ma.masked_invalid",
    "numpy.random.rand",
    "numpy.testing.assert_equal",
    "slice",
    "xarray.DataArray",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_isotropic_ps_slope": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "numpy.ma.masked_invalid",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "range",
    "xarray.DataArray",
    "xrft.tests.test_xrft.synthetic_field",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_isotropize": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "_test_iso",
    "xrft.tests.test_xrft.synthetic_field_xr"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_isotropize._test_iso": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "len",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_keep_coords": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "func",
    "getattr",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.sample_data_3d",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_parseval": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.diff",
    "numpy.hanning",
    "numpy.newaxis",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "numpy.tile",
    "range",
    "xarray.DataArray",
    "xrft.tests.test_xrft.numpy_detrend",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_spacing_tol": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "ValueError",
    "numpy.linspace",
    "numpy.random.rand",
    "xarray.DataArray",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.test_data_1d",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_spacing_tol_float_value": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "TypeError",
    "xrft.tests.test_xrft.pytest",
    "xrft.tests.test_xrft.test_data_1d",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.test_window_single_dim": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "numpy.random.random",
    "range",
    "xarray.DataArray",
    "xrft.tests.test_xrft.xrft"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.time_data": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.date_range",
    "xrft.tests.test_xrft.cftime",
    "xrft.tests.test_xrft.pytest"
   ]
  },
  "type": "function"
 },
 "xrft.tests.test_xrft.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "xrft.tests.test_xrft.xrft": {
  "data": {
   "shadows": "xrft"
  },
  "type": "import"
 },
 "xrft.tests.test_xrft.xrt": {
  "data": {
   "shadows": "xarray.testing"
  },
  "type": "import"
 },
 "xrft.xrft": {
  "data": {},
  "type": "module"
 },
 "xrft.xrft.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "xrft.xrft._apply_detrend": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "func",
    "scipy.signal.detrend",
    "xarray.DataArray",
    "xrft.xrft.detrend_wrap",
    "xrft.xrft.detrendn"
   ]
  },
  "type": "function"
 },
 "xrft.xrft._apply_window": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError",
    "functools.reduce",
    "getattr",
    "len",
    "numpy",
    "win_func",
    "xarray.DataArray",
    "xrft.xrft.operator"
   ]
  },
  "type": "function"
 },
 "xrft.xrft._apply_window.dask_win_func": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dask.array.from_delayed",
    "dask.delayed",
    "float"
   ]
  },
  "type": "function"
 },
 "xrft.xrft._calc_normalization_factor": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "xrft.xrft._cross_spectrum": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.conj"
   ]
  },
  "type": "function"
 },
 "xrft.xrft._diff_coord": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "getattr",
    "numpy.diff",
    "pandas.api.types.is_datetime64_dtype",
    "xarray.DataArray",
    "xrft.xrft.cftime"
   ]
  },
  "type": "function"
 },
 "xrft.xrft._fft_module": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dask.array.fft",
    "numpy.fft"
   ]
  },
  "type": "function"
 },
 "xrft.xrft._freq": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "fftfreq",
    "len",
    "numpy.fft.fftfreq",
    "numpy.fft.fftshift",
    "numpy.fft.rfftfreq",
    "zip"
   ]
  },
  "type": "function"
 },
 "xrft.xrft._new_dims_and_coords": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "len",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "xrft.xrft._power_spectrum": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.conj"
   ]
  },
  "type": "function"
 },
 "xrft.xrft._radial_wvnum": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "int",
    "numpy.bincount",
    "numpy.digitize",
    "numpy.linspace",
    "numpy.ma.masked_where",
    "numpy.newaxis",
    "numpy.ravel",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "xrft.xrft._stack_chunks": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.diff",
    "range",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xrft.xrft._transpose": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "list"
   ]
  },
  "type": "function"
 },
 "xrft.xrft.cftime": {
  "data": {
   "shadows": "cftime"
  },
  "type": "import"
 },
 "xrft.xrft.cross_phase": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.angle",
    "dask.array.conj",
    "isinstance",
    "len",
    "list",
    "numpy.angle",
    "numpy.conj",
    "xarray.apply_ufunc",
    "xrft.xrft.dft"
   ]
  },
  "type": "function"
 },
 "xrft.xrft.cross_spectrum": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "ValueError",
    "_cross_spectrum",
    "isinstance",
    "str",
    "xrft.xrft._calc_normalization_factor",
    "xrft.xrft.dft"
   ]
  },
  "type": "function"
 },
 "xrft.xrft.delayed": {
  "data": {
   "shadows": "dask.delayed"
  },
  "type": "import"
 },
 "xrft.xrft.detrend_wrap": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "xrft.xrft.detrend_wrap.func": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.map_blocks",
    "len",
    "range",
    "scipy.signal.detrend",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "xrft.xrft.detrendn": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.ones",
    "numpy.reshape",
    "numpy.tile",
    "numpy.zeros",
    "range",
    "scipy.linalg.inv",
    "type",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "xrft.xrft.dft": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "fft_fn",
    "float",
    "isinstance",
    "len",
    "list",
    "numpy.abs",
    "numpy.allclose",
    "numpy.isnan",
    "str",
    "type",
    "xarray.DataArray",
    "xrft.xrft._apply_detrend",
    "xrft.xrft._apply_window",
    "xrft.xrft._diff_coord",
    "xrft.xrft._fft_module",
    "xrft.xrft._freq",
    "xrft.xrft._new_dims_and_coords",
    "xrft.xrft._stack_chunks",
    "xrft.xrft._transpose"
   ]
  },
  "type": "function"
 },
 "xrft.xrft.dsar": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "xrft.xrft.fit_loglog": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "numpy.log2",
    "numpy.polyfit"
   ]
  },
  "type": "function"
 },
 "xrft.xrft.ft": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "xrft.xrft.isotropic_cross_spectrum": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "xrft.xrft.cross_spectrum",
    "xrft.xrft.isotropize"
   ]
  },
  "type": "function"
 },
 "xrft.xrft.isotropic_crossspectrum": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "Warning",
    "isotropic_cross_spectrum",
    "xrft.xrft.warnings"
   ]
  },
  "type": "function"
 },
 "xrft.xrft.isotropic_power_spectrum": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "xrft.xrft.isotropize",
    "xrft.xrft.power_spectrum"
   ]
  },
  "type": "function"
 },
 "xrft.xrft.isotropic_powerspectrum": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "Warning",
    "isotropic_power_spectrum",
    "xrft.xrft.warnings"
   ]
  },
  "type": "function"
 },
 "xrft.xrft.isotropize": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "min",
    "numpy.sqrt",
    "xrft.xrft._radial_wvnum"
   ]
  },
  "type": "function"
 },
 "xrft.xrft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "xrft.xrft.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "xrft.xrft.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "xrft.xrft.power_spectrum": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "_power_spectrum",
    "isinstance",
    "list",
    "str",
    "xrft.xrft._calc_normalization_factor",
    "xrft.xrft.dft"
   ]
  },
  "type": "function"
 },
 "xrft.xrft.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "xrft.xrft.spl": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "xrft.xrft.sps": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "xrft.xrft.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "xrft.xrft.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "xrft.xrft.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 }
}