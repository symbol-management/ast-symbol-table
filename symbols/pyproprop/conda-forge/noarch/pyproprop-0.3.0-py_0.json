{
 "pyproprop": {
  "data": {},
  "type": "module"
 },
 "pyproprop.format_str_case": {
  "data": {
   "symbols_in_volume": [
    "pyproprop.format_str_case.HYPHEN_STR_CASE_FORMAT_KEYWORD",
    "pyproprop.format_str_case.LOWER_STR_CASE_FORMAT_KEYWORD",
    "pyproprop.format_str_case.PASCAL_STR_CASE_FORMAT_KEYWORD",
    "pyproprop.format_str_case.SNAKE_STR_CASE_FORMAT_KEYWORD",
    "pyproprop.format_str_case.START_STR_CASE_FORMAT_KEYWORD",
    "pyproprop.format_str_case.TITLE_STR_CASE_FORMAT_KEYWORD",
    "pyproprop.format_str_case.UPPER_STR_CASE_FORMAT_KEYWORD",
    "pyproprop.format_str_case.format_str_hyphen_case",
    "pyproprop.format_str_case.format_str_lower_case",
    "pyproprop.format_str_case.format_str_pascal_case",
    "pyproprop.format_str_case.format_str_snake_case",
    "pyproprop.format_str_case.format_str_start_case",
    "pyproprop.format_str_case.format_str_title_case",
    "pyproprop.format_str_case.format_str_upper_case"
   ]
  },
  "type": "module"
 },
 "pyproprop.format_str_case.FORMAT_STR_DISPATCHER": {
  "data": {
   "lineno": 371
  },
  "type": "constant"
 },
 "pyproprop.format_str_case.HYPHEN_STR_CASE_FORMAT_KEYWORD": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyproprop.format_str_case.LOWER_STR_CASE_FORMAT_KEYWORD": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyproprop.format_str_case.PASCAL_STR_CASE_FORMAT_KEYWORD": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyproprop.format_str_case.SNAKE_STR_CASE_FORMAT_KEYWORD": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyproprop.format_str_case.START_STR_CASE_FORMAT_KEYWORD": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyproprop.format_str_case.SUPPORTED_STR_FORMAT_OPTIONS": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyproprop.format_str_case.TITLE_STR_CASE_FORMAT_KEYWORD": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyproprop.format_str_case.UPPER_STR_CASE_FORMAT_KEYWORD": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyproprop.format_str_case.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyproprop.format_str_case.format_str_case": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyproprop.format_str_case.re"
   ]
  },
  "type": "function"
 },
 "pyproprop.format_str_case.format_str_hyphen_case": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "pyproprop.format_str_case.re"
   ]
  },
  "type": "function"
 },
 "pyproprop.format_str_case.format_str_lower_case": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "pyproprop.format_str_case.format_str_pascal_case": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "pyproprop.format_str_case.re",
    "pyproprop.format_str_case.titlecase"
   ]
  },
  "type": "function"
 },
 "pyproprop.format_str_case.format_str_snake_case": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "pyproprop.format_str_case.re"
   ]
  },
  "type": "function"
 },
 "pyproprop.format_str_case.format_str_start_case": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyproprop.format_str_case.format_str_title_case": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pyproprop.format_str_case.titlecase"
   ]
  },
  "type": "function"
 },
 "pyproprop.format_str_case.format_str_upper_case": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "pyproprop.format_str_case.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyproprop.format_str_case.titlecase": {
  "data": {
   "shadows": "titlecase"
  },
  "type": "import"
 },
 "pyproprop.named_iterable": {
  "data": {},
  "type": "module"
 },
 "pyproprop.named_iterable.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pyproprop.named_iterable.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pyproprop.named_iterable.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyproprop.named_iterable.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pyproprop.named_iterable.make_iterable": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "iter"
   ]
  },
  "type": "function"
 },
 "pyproprop.named_iterable.named_iterable": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NamedTuple",
    "collections.namedtuple",
    "list",
    "pyproprop.named_iterable.make_iterable",
    "str",
    "sympy.sympify",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyproprop.named_iterable.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyproprop.named_iterable.sym": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "pyproprop.processed_property": {
  "data": {},
  "type": "module"
 },
 "pyproprop.processed_property.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pyproprop.processed_property.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pyproprop.processed_property.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "pyproprop.processed_property.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pyproprop.processed_property.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "pyproprop.processed_property.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyproprop.processed_property.processed_property": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "error_check_option_kwarg",
    "generate_name_description_error_message",
    "parse_kwarg"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.apply_method": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "post_method"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.cast_type": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "e",
    "exec",
    "locals",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_at_least": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "check_comparison"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_at_least.at_least_lambda": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_at_most": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "check_comparison"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_at_most.at_most_lambda": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_bounds": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "OverflowError",
    "ValueError",
    "numpy.asarray",
    "numpy.int64",
    "numpy.isclose",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_comparison": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "comparison_func",
    "format_for_output",
    "generate_name_description_error_message",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_equal_to": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "check_comparison"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_equal_to.equal_to_lambda": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_greater_than": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "check_comparison"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_greater_than.greater_than_lambda": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_len": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_less_than": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "check_comparison"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_less_than.less_than_lambda": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_max": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ValueError",
    "generate_name_description_error_message",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_min": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "ValueError",
    "generate_name_description_error_message",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_options": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "format_for_output",
    "generate_name_description_error_message"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_type": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "TypeError",
    "cast_type",
    "isinstance",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.error_check_option_kwarg": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "format_for_output",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.parse_kwarg": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "format_for_output",
    "isinstance",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.process_optimisable": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "TypeError",
    "check_bounds",
    "check_len",
    "isinstance",
    "numbers.Real",
    "repr",
    "type",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.prop": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "apply_method",
    "check_at_least",
    "check_at_most",
    "check_equal_to",
    "check_greater_than",
    "check_len",
    "check_less_than",
    "check_max",
    "check_min",
    "check_options",
    "check_type",
    "format_str_case",
    "isinstance",
    "process_optimisable",
    "setattr",
    "tuple",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "pyproprop.utils": {
  "data": {},
  "type": "module"
 },
 "pyproprop.utils.format_as_iterable": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "iter",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproprop.utils.format_for_output": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pyproprop.utils.format_multiple_items_for_output"
   ]
  },
  "type": "function"
 },
 "pyproprop.utils.format_multiple_items_for_output": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "format_str_case",
    "isinstance",
    "len",
    "pyproprop.utils.format_as_iterable",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproprop.utils.generate_name_description_error_message": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "format_str_case"
   ]
  },
  "type": "function"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.conftest": {
  "data": {},
  "type": "module"
 },
 "tests.conftest.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "tests.conftest.TestProcessedProperties": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "tests.conftest.TestProcessedProperties.TestProcessedProperties": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "pyproprop.processed_property",
    "str",
    "typing.Iterable"
   ]
  },
  "type": "class"
 },
 "tests.conftest.TestProcessedProperties.TestProcessedProperties.__init__": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "tests.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.conftest.processed_property": {
  "data": {
   "shadows": "pyproprop.processed_property"
  },
  "type": "import"
 },
 "tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.conftest.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "tests.unit": {
  "data": {},
  "type": "module"
 },
 "tests.unit.processed_property": {
  "data": {},
  "type": "module"
 },
 "tests.unit.processed_property.test_cast": {
  "data": {},
  "type": "module"
 },
 "tests.unit.processed_property.test_compare": {
  "data": {},
  "type": "module"
 },
 "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_compare.compare_equal_float_fixture": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "float",
    "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND",
    "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND",
    "tests.unit.processed_property.test_compare.make_fixture",
    "tests.unit.processed_property.test_compare.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.compare_equal_int_fixture": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "int",
    "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND",
    "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND",
    "tests.unit.processed_property.test_compare.make_fixture",
    "tests.unit.processed_property.test_compare.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.compare_exclusive_float_fixture": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "float",
    "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND",
    "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND",
    "tests.unit.processed_property.test_compare.make_fixture",
    "tests.unit.processed_property.test_compare.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.compare_exclusive_int_fixture": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "int",
    "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND",
    "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND",
    "tests.unit.processed_property.test_compare.make_fixture",
    "tests.unit.processed_property.test_compare.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.compare_fixture": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "tests.unit.processed_property.test_compare.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.compare_inclusive_float_fixture": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "float",
    "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND",
    "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND",
    "tests.unit.processed_property.test_compare.make_fixture",
    "tests.unit.processed_property.test_compare.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.compare_inclusive_int_fixture": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "int",
    "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND",
    "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND",
    "tests.unit.processed_property.test_compare.make_fixture",
    "tests.unit.processed_property.test_compare.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.make_fixture": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ClassWithComparisonProcessedProperties"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.make_fixture.ClassWithComparisonProcessedProperties": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pyproprop.processed_property"
   ]
  },
  "type": "class"
 },
 "tests.unit.processed_property.test_compare.make_fixture.ClassWithComparisonProcessedProperties.__init__": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.processed_property": {
  "data": {
   "shadows": "pyproprop.processed_property"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_compare.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_compare.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_compare.test_invalid_equal_float_comparison_raises_error": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "repr",
    "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND",
    "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND",
    "tests.unit.processed_property.test_compare.compare_equal_float_fixture",
    "tests.unit.processed_property.test_compare.pytest",
    "tests.unit.processed_property.test_compare.re"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.test_invalid_equal_int_comparison_raises_error": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "repr",
    "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND",
    "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND",
    "tests.unit.processed_property.test_compare.compare_equal_int_fixture",
    "tests.unit.processed_property.test_compare.pytest",
    "tests.unit.processed_property.test_compare.re"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.test_invalid_exclusive_float_comparison_raises_error": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND",
    "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND",
    "tests.unit.processed_property.test_compare.compare_exclusive_float_fixture",
    "tests.unit.processed_property.test_compare.pytest",
    "tests.unit.processed_property.test_compare.re"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.test_invalid_exclusive_int_comparison_raises_error": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND",
    "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND",
    "tests.unit.processed_property.test_compare.compare_exclusive_int_fixture",
    "tests.unit.processed_property.test_compare.pytest",
    "tests.unit.processed_property.test_compare.re"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.test_invalid_inclusive_float_comparison_raises_error": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "repr",
    "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND",
    "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND",
    "tests.unit.processed_property.test_compare.compare_inclusive_float_fixture",
    "tests.unit.processed_property.test_compare.pytest",
    "tests.unit.processed_property.test_compare.re"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.test_invalid_inclusive_int_comparison_raises_error": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "repr",
    "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND",
    "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND",
    "tests.unit.processed_property.test_compare.compare_inclusive_int_fixture",
    "tests.unit.processed_property.test_compare.pytest",
    "tests.unit.processed_property.test_compare.re"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.test_valid_init_values_do_not_raise_error": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND",
    "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND",
    "tests.unit.processed_property.test_compare.compare_fixture",
    "tests.unit.processed_property.test_compare.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_compare.test_valid_setter_values_do_not_raise_error": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "tests.unit.processed_property.test_compare.FIXTURE_LOWER_BOUND",
    "tests.unit.processed_property.test_compare.FIXTURE_UPPER_BOUND",
    "tests.unit.processed_property.test_compare.compare_fixture",
    "tests.unit.processed_property.test_compare.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general": {
  "data": {},
  "type": "module"
 },
 "tests.unit.processed_property.test_general.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.booleans": {
  "data": {
   "shadows": "hypothesis.strategies.booleans"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.example": {
  "data": {
   "shadows": "hypothesis.example"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.floats": {
  "data": {
   "shadows": "hypothesis.strategies.floats"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.integers": {
  "data": {
   "shadows": "hypothesis.strategies.integers"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.iterables": {
  "data": {
   "shadows": "hypothesis.strategies.iterables"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.lists": {
  "data": {
   "shadows": "hypothesis.strategies.lists"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.one_of": {
  "data": {
   "shadows": "hypothesis.strategies.one_of"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.test_boolean_type_checking": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "TypeError",
    "bool",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.iterables",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.one_of",
    "hypothesis.strategies.text",
    "isinstance",
    "tests.unit.processed_property.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_bound_checking": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "TestProcessedProperties._BOUNDS",
    "ValueError",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "tests.unit.processed_property.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_cast_to_string": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_error_message_for_options": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "ValueError",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "repr",
    "tests.unit.processed_property.test_general.pytest",
    "tests.unit.processed_property.test_general.re"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_float_type_checking": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "TypeError",
    "float",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.iterables",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.one_of",
    "hypothesis.strategies.text",
    "isinstance",
    "tests.unit.processed_property.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_integer_type_checking": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "TypeError",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.iterables",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.one_of",
    "hypothesis.strategies.text",
    "int",
    "isinstance",
    "tests.unit.processed_property.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_iterable_allowed_checking": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.iterables"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_iterable_type_checking": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "TypeError",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.iterables",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.one_of",
    "hypothesis.strategies.text",
    "isinstance",
    "tests.unit.processed_property.test_general.pytest",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_length_checking": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "TestProcessedProperties._REQUIRED_LENGTH",
    "ValueError",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.lists",
    "len",
    "numpy.isclose",
    "tests.unit.processed_property.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_max_value_checking": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "TestProcessedProperties._MAX_VALUE",
    "ValueError",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "tests.unit.processed_property.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_max_value_excl_checking": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "TestProcessedProperties._MAX_VALUE",
    "ValueError",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "tests.unit.processed_property.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_min_value_checking": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "TestProcessedProperties._MIN_VALUE",
    "ValueError",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "tests.unit.processed_property.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_min_value_excl_checking": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "TestProcessedProperties._MIN_VALUE",
    "ValueError",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "tests.unit.processed_property.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_optimisable_arg_passing": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "ValueError",
    "hypothesis.example",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.one_of",
    "hypothesis.strategies.tuples",
    "numpy.isclose",
    "tests.unit.processed_property.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_optimisable_error_handling": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "TypeError",
    "ValueError",
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.text",
    "hypothesis.strategies.tuples",
    "tests.unit.processed_property.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_optimisable_error_messaging_for_non_64_bit_bounds": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "ValueError",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.tuples",
    "tests.unit.processed_property.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_optional_default_object_return": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "TestProcessedProperties._DEFAULT_INT"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_optional_return": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "hypothesis.given",
    "hypothesis.strategies.integers"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_options_settable": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "hypothesis.given",
    "hypothesis.strategies.just",
    "hypothesis.strategies.one_of"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_string_type_checking": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "TypeError",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.iterables",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.one_of",
    "hypothesis.strategies.text",
    "isinstance",
    "str",
    "tests.unit.processed_property.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.test_type_checking_correct_when_property_updated": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TestProcessedProperties",
    "TypeError",
    "hypothesis.given",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "tests.unit.processed_property.test_general.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_general.text": {
  "data": {
   "shadows": "hypothesis.strategies.text"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_general.tuples": {
  "data": {
   "shadows": "hypothesis.strategies.tuples"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_iterable": {
  "data": {},
  "type": "module"
 },
 "tests.unit.processed_property.test_optimisable": {
  "data": {},
  "type": "module"
 },
 "tests.unit.processed_property.test_option": {
  "data": {},
  "type": "module"
 },
 "tests.unit.processed_property.test_option.ClassWithOptionProperties": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyproprop.processed_property",
    "str",
    "tests.unit.processed_property.test_option.OPTION_1_KEYWORD",
    "tests.unit.processed_property.test_option.OPTION_2_KEYWORD",
    "tests.unit.processed_property.test_option.OPTION_3_KEYWORD",
    "tests.unit.processed_property.test_option.OPTION_4_KEYWORD",
    "tests.unit.processed_property.test_option.OPTION_5_KEYWORD"
   ]
  },
  "type": "class"
 },
 "tests.unit.processed_property.test_option.ClassWithOptionProperties.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "tests.unit.processed_property.test_option.OPTION_1_KEYWORD"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_option.OPTION_1_KEYWORD": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_option.OPTION_2_KEYWORD": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_option.OPTION_3_KEYWORD": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_option.OPTION_4_KEYWORD": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_option.OPTION_5_KEYWORD": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_option.processed_property": {
  "data": {
   "shadows": "pyproprop.processed_property"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_option.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_option.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_option.test_correct_initialisation_class_with_option_properties": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "tests.unit.processed_property.test_option.OPTION_1_KEYWORD",
    "tests.unit.processed_property.test_option.test_fixture"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_option.test_fixture": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "tests.unit.processed_property.test_option.ClassWithOptionProperties",
    "tests.unit.processed_property.test_option.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_option.test_instantiation_class_with_option_properties": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "tests.unit.processed_property.test_option.ClassWithOptionProperties"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_option.test_missing_option_kwarg_with_unsupported_option": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "tests.unit.processed_property.test_option.pytest",
    "tests.unit.processed_property.test_option.re"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_option.test_missing_option_kwarg_with_unsupported_option.ClassWithSingleOptionAllUnsupportedOptionProperties": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "pyproprop.processed_property",
    "str",
    "tests.unit.processed_property.test_option.OPTION_1_KEYWORD"
   ]
  },
  "type": "class"
 },
 "tests.unit.processed_property.test_option.test_multiple_option_all_are_unsupported_option": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "tests.unit.processed_property.test_option.pytest",
    "tests.unit.processed_property.test_option.re"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_option.test_multiple_option_all_are_unsupported_option.ClassWithMultipleOptionAllUnsupportedOptionProperties": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "pyproprop.processed_property",
    "str",
    "tests.unit.processed_property.test_option.OPTION_1_KEYWORD",
    "tests.unit.processed_property.test_option.OPTION_2_KEYWORD",
    "tests.unit.processed_property.test_option.OPTION_3_KEYWORD",
    "tests.unit.processed_property.test_option.OPTION_4_KEYWORD",
    "tests.unit.processed_property.test_option.OPTION_5_KEYWORD"
   ]
  },
  "type": "class"
 },
 "tests.unit.processed_property.test_option.test_no_option_with_unsupported_option": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "tests.unit.processed_property.test_option.pytest",
    "tests.unit.processed_property.test_option.re"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_option.test_no_option_with_unsupported_option.ClassWithSingleOptionAllUnsupportedOptionProperties": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pyproprop.processed_property",
    "str",
    "tests.unit.processed_property.test_option.OPTION_1_KEYWORD"
   ]
  },
  "type": "class"
 },
 "tests.unit.processed_property.test_option.test_option_creation_from_dict_keys": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "ClassWithMultipleOptionAllUnsupportedOptionProperties"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_option.test_option_creation_from_dict_keys.ClassWithMultipleOptionAllUnsupportedOptionProperties": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pyproprop.processed_property",
    "str",
    "tests.unit.processed_property.test_option.OPTION_1_KEYWORD",
    "tests.unit.processed_property.test_option.OPTION_2_KEYWORD",
    "tests.unit.processed_property.test_option.OPTION_3_KEYWORD",
    "tests.unit.processed_property.test_option.OPTION_4_KEYWORD",
    "tests.unit.processed_property.test_option.OPTION_5_KEYWORD"
   ]
  },
  "type": "class"
 },
 "tests.unit.processed_property.test_option.test_option_creation_from_dict_keys.__init__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "tests.unit.processed_property.test_option.OPTION_1_KEYWORD"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_option.test_raises_value_error_with_invalid_option": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "tests.unit.processed_property.test_option.OPTION_2_KEYWORD",
    "tests.unit.processed_property.test_option.OPTION_5_KEYWORD",
    "tests.unit.processed_property.test_option.pytest",
    "tests.unit.processed_property.test_option.test_fixture"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_option.test_single_option_all_unsupported_option": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "tests.unit.processed_property.test_option.pytest",
    "tests.unit.processed_property.test_option.re"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_option.test_single_option_all_unsupported_option.ClassWithSingleOptionAllUnsupportedOptionProperties": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pyproprop.processed_property",
    "str",
    "tests.unit.processed_property.test_option.OPTION_1_KEYWORD"
   ]
  },
  "type": "class"
 },
 "tests.unit.processed_property.test_parse_kwargs": {
  "data": {},
  "type": "module"
 },
 "tests.unit.processed_property.test_post_method": {
  "data": {},
  "type": "module"
 },
 "tests.unit.processed_property.test_str_format": {
  "data": {
   "symbols_in_volume": [
    "tests.unit.processed_property.test_str_format.HYPHEN_KEYWORD",
    "tests.unit.processed_property.test_str_format.LOWER_KEYWORD",
    "tests.unit.processed_property.test_str_format.PASCAL_KEYWORD",
    "tests.unit.processed_property.test_str_format.SNAKE_KEYWORD",
    "tests.unit.processed_property.test_str_format.START_KEYWORD",
    "tests.unit.processed_property.test_str_format.TITLE_KEYWORD",
    "tests.unit.processed_property.test_str_format.UPPER_KEYWORD"
   ]
  },
  "type": "module"
 },
 "tests.unit.processed_property.test_str_format.EXAMPLE_STR_1": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.EXAMPLE_STR_1_FORMATTED": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.EXAMPLE_STR_2": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.EXAMPLE_STR_2_FORMATTED": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.EXAMPLE_STR_3": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.EXAMPLE_STR_3_FORMATTED": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.EXAMPLE_STR_4": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.EXAMPLE_STR_4_FORMATTED": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.EXAMPLE_STR_5": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.EXAMPLE_STR_5_FORMATTED": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.HYPHEN_KEYWORD": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.LOWER_KEYWORD": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.PASCAL_KEYWORD": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.SNAKE_KEYWORD": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.START_KEYWORD": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.TITLE_KEYWORD": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.UPPER_KEYWORD": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_str_format.processed_property": {
  "data": {
   "shadows": "pyproprop.processed_property"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_str_format.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_str_format.test_fixture": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ClassWithStringFormatProperties",
    "tests.unit.processed_property.test_str_format.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_str_format.test_fixture.ClassWithStringFormatProperties": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pyproprop.processed_property",
    "str"
   ]
  },
  "type": "class"
 },
 "tests.unit.processed_property.test_str_format.test_fixture.ClassWithStringFormatProperties.__init__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_str_format.test_formatted_string_expected_result": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tests.unit.processed_property.test_str_format.EXAMPLE_STR_1",
    "tests.unit.processed_property.test_str_format.EXAMPLE_STR_1_FORMATTED",
    "tests.unit.processed_property.test_str_format.EXAMPLE_STR_2",
    "tests.unit.processed_property.test_str_format.EXAMPLE_STR_2_FORMATTED",
    "tests.unit.processed_property.test_str_format.EXAMPLE_STR_3",
    "tests.unit.processed_property.test_str_format.EXAMPLE_STR_3_FORMATTED",
    "tests.unit.processed_property.test_str_format.EXAMPLE_STR_4",
    "tests.unit.processed_property.test_str_format.EXAMPLE_STR_4_FORMATTED",
    "tests.unit.processed_property.test_str_format.EXAMPLE_STR_5",
    "tests.unit.processed_property.test_str_format.EXAMPLE_STR_5_FORMATTED",
    "tests.unit.processed_property.test_str_format.HYPHEN_KEYWORD",
    "tests.unit.processed_property.test_str_format.LOWER_KEYWORD",
    "tests.unit.processed_property.test_str_format.PASCAL_KEYWORD",
    "tests.unit.processed_property.test_str_format.SNAKE_KEYWORD",
    "tests.unit.processed_property.test_str_format.START_KEYWORD",
    "tests.unit.processed_property.test_str_format.TITLE_KEYWORD",
    "tests.unit.processed_property.test_str_format.UPPER_KEYWORD",
    "tests.unit.processed_property.test_str_format.pytest",
    "tests.unit.processed_property.test_str_format.test_fixture"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_type_repr_error_msg": {
  "data": {
   "symbols_in_volume": [
    "set",
    "tests.unit.processed_property.test_type_repr_error_msg.OPTIONS",
    "tests.unit.processed_property.test_type_repr_error_msg.UNSUPPORTED_OPTIONS"
   ]
  },
  "type": "module"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.ClassWithOptionsProperty": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pyproprop.processed_property",
    "tests.unit.processed_property.test_type_repr_error_msg.OPTIONS",
    "tests.unit.processed_property.test_type_repr_error_msg.UNSUPPORTED_OPTIONS"
   ]
  },
  "type": "class"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.ClassWithOptionsProperty.__init__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.OPTIONS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.UNSUPPORTED_OPTIONS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.processed_property": {
  "data": {
   "shadows": "pyproprop.processed_property"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.supported_options": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.test_fixture": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tests.unit.processed_property.test_type_repr_error_msg.ClassWithOptionsProperty",
    "tests.unit.processed_property.test_type_repr_error_msg.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.test_invalid_options_raise_error": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.one_of",
    "hypothesis.strategies.text",
    "repr",
    "tests.unit.processed_property.test_type_repr_error_msg.ClassWithOptionsProperty",
    "tests.unit.processed_property.test_type_repr_error_msg.OPTIONS",
    "tests.unit.processed_property.test_type_repr_error_msg.pytest",
    "tests.unit.processed_property.test_type_repr_error_msg.re",
    "tests.unit.processed_property.test_type_repr_error_msg.test_fixture"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.test_unsupported_options_raise_error": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "repr",
    "tests.unit.processed_property.test_type_repr_error_msg.UNSUPPORTED_OPTIONS",
    "tests.unit.processed_property.test_type_repr_error_msg.pytest",
    "tests.unit.processed_property.test_type_repr_error_msg.re",
    "tests.unit.processed_property.test_type_repr_error_msg.test_fixture"
   ]
  },
  "type": "function"
 },
 "tests.unit.processed_property.test_type_repr_error_msg.test_valid_options_set_correctly": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "tests.unit.processed_property.test_type_repr_error_msg.pytest",
    "tests.unit.processed_property.test_type_repr_error_msg.supported_options",
    "tests.unit.processed_property.test_type_repr_error_msg.test_fixture"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_named_iterable": {
  "data": {},
  "type": "module"
 },
 "tests.unit.test_named_iterable.TestNamedIterable": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "tests.unit.test_named_iterable.pytest"
   ]
  },
  "type": "class"
 },
 "tests.unit.test_named_iterable.TestNamedIterable._named_iterable_fixture": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pyproprop.named_iterable",
    "tests.unit.test_named_iterable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_named_iterable.TestNamedIterable.test_dot_indexing": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "tests.unit.test_named_iterable.TestNamedIterable.test_not_named_dot_indexing_raises_error": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "AttributeError",
    "tests.unit.test_named_iterable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_named_iterable.assume": {
  "data": {
   "shadows": "hypothesis.assume"
  },
  "type": "import"
 },
 "tests.unit.test_named_iterable.given": {
  "data": {
   "shadows": "hypothesis.given"
  },
  "type": "import"
 },
 "tests.unit.test_named_iterable.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "tests.unit.test_named_iterable.named_iterable": {
  "data": {
   "shadows": "pyproprop.named_iterable"
  },
  "type": "import"
 },
 "tests.unit.test_named_iterable.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.unit.test_named_iterable.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "tests.unit.test_named_iterable.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "tests.unit.test_named_iterable.test_invalid_identifiers": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.iterables",
    "hypothesis.strategies.one_of",
    "hypothesis.strategies.text",
    "pyproprop.named_iterable",
    "tests.unit.test_named_iterable.pytest",
    "tests.unit.test_named_iterable.string",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_named_iterable.test_make_named_iterable_not_iterable": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyproprop.named_iterable"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_named_iterable.test_named_iterable_creation_as_mapping": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "any",
    "dict",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.floats",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.iterables",
    "hypothesis.strategies.one_of",
    "hypothesis.strategies.text",
    "list",
    "pyproprop.named_iterable",
    "str",
    "tests.unit.test_named_iterable.keyword",
    "tests.unit.test_named_iterable.string",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_named_iterable.test_named_iterable_creation_data_object": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "any",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.iterables",
    "hypothesis.strategies.text",
    "pyproprop.named_iterable",
    "str",
    "tests.unit.test_named_iterable.keyword",
    "tests.unit.test_named_iterable.string"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_named_iterable.test_named_iterable_creation_keyword_raises_error": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "hypothesis.given",
    "hypothesis.strategies.iterables",
    "hypothesis.strategies.just",
    "hypothesis.strategies.one_of",
    "pyproprop.named_iterable",
    "tests.unit.test_named_iterable.keyword",
    "tests.unit.test_named_iterable.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_str_format_function": {
  "data": {
   "symbols_in_volume": [
    "tests.unit.test_str_format_function.HYPHEN_KEYWORD",
    "tests.unit.test_str_format_function.LOWER_KEYWORD",
    "tests.unit.test_str_format_function.PASCAL_KEYWORD",
    "tests.unit.test_str_format_function.SNAKE_KEYWORD",
    "tests.unit.test_str_format_function.START_KEYWORD",
    "tests.unit.test_str_format_function.TITLE_KEYWORD",
    "tests.unit.test_str_format_function.UPPER_KEYWORD"
   ]
  },
  "type": "module"
 },
 "tests.unit.test_str_format_function.EXAMPLE_STR_1": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.EXAMPLE_STR_1_FORMATTED": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.EXAMPLE_STR_2": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.EXAMPLE_STR_2_FORMATTED": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.EXAMPLE_STR_3": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.EXAMPLE_STR_3_FORMATTED": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.EXAMPLE_STR_4": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.EXAMPLE_STR_4_FORMATTED": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.EXAMPLE_STR_5": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.EXAMPLE_STR_5_FORMATTED": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.HYPHEN_KEYWORD": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.LOWER_KEYWORD": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.PASCAL_KEYWORD": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.SNAKE_KEYWORD": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.START_KEYWORD": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.TITLE_KEYWORD": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.UPPER_KEYWORD": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "tests.unit.test_str_format_function.format_str_case": {
  "data": {
   "shadows": "pyproprop.format_str_case"
  },
  "type": "import"
 },
 "tests.unit.test_str_format_function.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.unit.test_str_format_function.test_formatted_string_method_expected_result_with_processing": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pyproprop.format_str_case",
    "tests.unit.test_str_format_function.EXAMPLE_STR_1",
    "tests.unit.test_str_format_function.EXAMPLE_STR_1_FORMATTED",
    "tests.unit.test_str_format_function.EXAMPLE_STR_2",
    "tests.unit.test_str_format_function.EXAMPLE_STR_2_FORMATTED",
    "tests.unit.test_str_format_function.EXAMPLE_STR_3",
    "tests.unit.test_str_format_function.EXAMPLE_STR_3_FORMATTED",
    "tests.unit.test_str_format_function.EXAMPLE_STR_4",
    "tests.unit.test_str_format_function.EXAMPLE_STR_4_FORMATTED",
    "tests.unit.test_str_format_function.EXAMPLE_STR_5",
    "tests.unit.test_str_format_function.EXAMPLE_STR_5_FORMATTED",
    "tests.unit.test_str_format_function.HYPHEN_KEYWORD",
    "tests.unit.test_str_format_function.LOWER_KEYWORD",
    "tests.unit.test_str_format_function.PASCAL_KEYWORD",
    "tests.unit.test_str_format_function.SNAKE_KEYWORD",
    "tests.unit.test_str_format_function.START_KEYWORD",
    "tests.unit.test_str_format_function.TITLE_KEYWORD",
    "tests.unit.test_str_format_function.UPPER_KEYWORD",
    "tests.unit.test_str_format_function.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_utils": {
  "data": {},
  "type": "module"
 },
 "tests.unit.test_utils.ClassWithProcessedProperties": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "int",
    "pyproprop.processed_property",
    "str"
   ]
  },
  "type": "class"
 },
 "tests.unit.test_utils.ClassWithProcessedProperties.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "tests.unit.test_utils.processed_property": {
  "data": {
   "shadows": "pyproprop.processed_property"
  },
  "type": "import"
 },
 "tests.unit.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.unit.test_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tests.unit.test_utils.test_fixture": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "tests.unit.test_utils.ClassWithProcessedProperties",
    "tests.unit.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_utils.test_generate_name_description_error_message_min_max_prop": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "tests.unit.test_utils.pytest",
    "tests.unit.test_utils.re",
    "tests.unit.test_utils.test_fixture"
   ]
  },
  "type": "function"
 },
 "tests.unit.test_utils.test_generate_name_description_error_message_options_prop": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "tests.unit.test_utils.pytest",
    "tests.unit.test_utils.re",
    "tests.unit.test_utils.test_fixture"
   ]
  },
  "type": "function"
 }
}