{
 "pyproprop": {
  "data": {},
  "type": "module"
 },
 "pyproprop.named_iterable": {
  "data": {},
  "type": "module"
 },
 "pyproprop.named_iterable.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pyproprop.named_iterable.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pyproprop.named_iterable.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyproprop.named_iterable.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "pyproprop.named_iterable.make_iterable": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "iter"
   ]
  },
  "type": "function"
 },
 "pyproprop.named_iterable.named_iterable": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NamedTuple",
    "collections.namedtuple",
    "list",
    "make_iterable",
    "str",
    "sympy.sympify",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyproprop.named_iterable.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyproprop.named_iterable.sym": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "pyproprop.processed_property": {
  "data": {},
  "type": "module"
 },
 "pyproprop.processed_property.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "pyproprop.processed_property.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "pyproprop.processed_property.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "pyproprop.processed_property.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pyproprop.processed_property.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "pyproprop.processed_property.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyproprop.processed_property.processed_property": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "error_check_option_kwarg",
    "generate_name_description_error_message",
    "parse_kwarg"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.apply_method": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "post_method"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.cast_type": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "e",
    "exec",
    "locals",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_at_least": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "check_comparison"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_at_least.at_least_lambda": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_at_most": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "check_comparison"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_at_most.at_most_lambda": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_bounds": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "OverflowError",
    "ValueError",
    "numpy.asarray",
    "numpy.int64",
    "numpy.isclose",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_comparison": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "comparison_func",
    "format_for_output",
    "generate_name_description_error_message",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_equal_to": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "check_comparison"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_equal_to.equal_to_lambda": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_greater_than": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "check_comparison"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_greater_than.greater_than_lambda": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_len": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_less_than": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "check_comparison"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_less_than.less_than_lambda": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_max": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "ValueError",
    "generate_name_description_error_message",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_min": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ValueError",
    "generate_name_description_error_message",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_options": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "format_for_output",
    "generate_name_description_error_message"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.check_type": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "TypeError",
    "cast_type",
    "isinstance",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.error_check_option_kwarg": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "format_for_output",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.parse_kwarg": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "format_for_output",
    "isinstance",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.process_optimisable": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "TypeError",
    "check_bounds",
    "check_len",
    "isinstance",
    "numbers.Real",
    "repr",
    "type",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "pyproprop.processed_property.processed_property.prop": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "apply_method",
    "check_at_least",
    "check_at_most",
    "check_equal_to",
    "check_greater_than",
    "check_len",
    "check_less_than",
    "check_max",
    "check_min",
    "check_options",
    "check_type",
    "format_str_case",
    "isinstance",
    "process_optimisable",
    "setattr",
    "tuple",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "pyproprop.utils": {
  "data": {
   "symbols_in_volume": [
    "pyproprop.utils.LOWER_STR_CASE_FORMAT_KEYWORD",
    "pyproprop.utils.PASCAL_STR_CASE_FORMAT_KEYWORD",
    "pyproprop.utils.SNAKE_STR_CASE_FORMAT_KEYWORD",
    "pyproprop.utils.START_STR_CASE_FORMAT_KEYWORD",
    "pyproprop.utils.TITLE_STR_CASE_FORMAT_KEYWORD",
    "pyproprop.utils.UPPER_STR_CASE_FORMAT_KEYWORD",
    "pyproprop.utils.format_str_lower_case",
    "pyproprop.utils.format_str_pascal_case",
    "pyproprop.utils.format_str_snake_case",
    "pyproprop.utils.format_str_start_case",
    "pyproprop.utils.format_str_title_case",
    "pyproprop.utils.format_str_upper_case"
   ]
  },
  "type": "module"
 },
 "pyproprop.utils.FORMAT_STR_DISPATCHER": {
  "data": {
   "lineno": 431
  },
  "type": "constant"
 },
 "pyproprop.utils.LOWER_STR_CASE_FORMAT_KEYWORD": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyproprop.utils.PASCAL_STR_CASE_FORMAT_KEYWORD": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyproprop.utils.SNAKE_STR_CASE_FORMAT_KEYWORD": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyproprop.utils.START_STR_CASE_FORMAT_KEYWORD": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyproprop.utils.SUPPORTED_STR_FORMAT_OPTIONS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyproprop.utils.TITLE_STR_CASE_FORMAT_KEYWORD": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyproprop.utils.UPPER_STR_CASE_FORMAT_KEYWORD": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyproprop.utils.format_as_iterable": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "iter",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproprop.utils.format_for_output": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "format_multiple_items_for_output"
   ]
  },
  "type": "function"
 },
 "pyproprop.utils.format_multiple_items_for_output": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "format_as_iterable",
    "isinstance",
    "len",
    "pyproprop.utils.format_str_case",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyproprop.utils.format_str_case": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pyproprop.utils.re"
   ]
  },
  "type": "function"
 },
 "pyproprop.utils.format_str_lower_case": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "pyproprop.utils.format_str_pascal_case": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "pyproprop.utils.re",
    "pyproprop.utils.titlecase"
   ]
  },
  "type": "function"
 },
 "pyproprop.utils.format_str_snake_case": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "pyproprop.utils.re"
   ]
  },
  "type": "function"
 },
 "pyproprop.utils.format_str_start_case": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyproprop.utils.format_str_title_case": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pyproprop.utils.titlecase"
   ]
  },
  "type": "function"
 },
 "pyproprop.utils.format_str_upper_case": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "pyproprop.utils.generate_name_description_error_message": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "format_str_case",
    "pyproprop.utils.START_STR_CASE_FORMAT_KEYWORD"
   ]
  },
  "type": "function"
 },
 "pyproprop.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyproprop.utils.titlecase": {
  "data": {
   "shadows": "titlecase"
  },
  "type": "import"
 }
}