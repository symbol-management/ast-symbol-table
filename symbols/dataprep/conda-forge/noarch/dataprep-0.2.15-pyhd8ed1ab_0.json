{
 "dataprep": {
  "data": {
   "symbols_in_volume": [
    "dataprep.logging"
   ]
  },
  "type": "module"
 },
 "dataprep.DEFAULT_PARTITIONS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "dataprep.__version__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "dataprep.assets.english_stopwords": {
  "data": {},
  "type": "module"
 },
 "dataprep.assets.english_stopwords.english_stopwords": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "dataprep.clean": {
  "data": {},
  "type": "module"
 },
 "dataprep.clean.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "dataprep.clean.clean_country": {
  "data": {
   "symbols_in_volume": [
    "dataprep.clean.clean_country.COUNTRY_DATA_FILE",
    "dataprep.clean.clean_country.DATA",
    "dataprep.clean.clean_country.os",
    "pandas.read_csv",
    "regex.IGNORECASE",
    "regex.compile",
    "str"
   ]
  },
  "type": "module"
 },
 "dataprep.clean.clean_country.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.clean.clean_country.COUNTRY_DATA_FILE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "dataprep.clean.clean_country.DATA": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "dataprep.clean.clean_country.REGEXES": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "dataprep.clean.clean_country.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.clean.clean_country._check_country": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "_get_format_from_name",
    "bool",
    "dataprep.clean.clean_country.DATA",
    "dataprep.clean.clean_country.REGEXES",
    "enumerate",
    "functools.lru_cache",
    "numpy.size",
    "regex.IGNORECASE",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_country._check_fuzzy_dist": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "dataprep.clean.clean_country.DATA",
    "enumerate",
    "functools.lru_cache",
    "int",
    "min",
    "regex.BESTMATCH",
    "regex.IGNORECASE",
    "regex.search",
    "str",
    "sum",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_country._format_country": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "_check_country",
    "_check_fuzzy_dist",
    "bool",
    "dataprep.clean.clean_country.DATA",
    "int",
    "numpy.nan",
    "pandas.isna",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_country._get_format_from_name": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_country.clean_country": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ProgressBar",
    "ValueError",
    "_format_country",
    "bool",
    "create_report_new",
    "dask.dataframe.DataFrame",
    "dataprep.clean.clean_country.dask",
    "int",
    "object",
    "operator.itemgetter",
    "pandas.DataFrame",
    "str",
    "to_dask",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_country.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.clean.clean_country.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.clean.clean_country.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "dataprep.clean.clean_country.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "dataprep.clean.clean_country.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.clean.clean_country.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dataprep.clean.clean_country.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.clean.clean_country.re": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "dataprep.clean.clean_country.validate_country": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "_check_country",
    "bool",
    "int",
    "isinstance",
    "pandas.Series",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_email": {
  "data": {
   "symbols_in_volume": [
    "dataprep.clean.clean_email.re"
   ]
  },
  "type": "module"
 },
 "dataprep.clean.clean_email.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.clean.clean_email.DOMAINS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "dataprep.clean.clean_email.DOMAIN_REGEX": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "dataprep.clean.clean_email.DOMAIN_WHITELIST": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "dataprep.clean.clean_email.STATS": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "dataprep.clean.clean_email.USER_REGEX": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dataprep.clean.clean_email.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.clean.clean_email.check_email": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "UnicodeError",
    "bool",
    "dataprep.clean.clean_email.DOMAIN_REGEX",
    "dataprep.clean.clean_email.DOMAIN_WHITELIST",
    "dataprep.clean.clean_email.USER_REGEX",
    "len",
    "str",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_email.clean_email": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "bool",
    "dask.dataframe.DataFrame",
    "dataprep.clean.clean_email.dask",
    "pandas.DataFrame",
    "report_email",
    "reset_stats",
    "str",
    "to_dask",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_email.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.clean.clean_email.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.clean.clean_email.fix_domain_name": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "dataprep.clean.clean_email.DOMAINS",
    "enumerate",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_email.format_email": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "bool",
    "check_email",
    "dataprep.clean.clean_email.fix_domain_name",
    "dataprep.clean.clean_email.re",
    "not_email",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_email.not_email": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dataprep.clean.clean_email.STATS",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_email.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.clean.clean_email.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "dataprep.clean.clean_email.report_email": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "dataprep.clean.clean_email.STATS",
    "int",
    "print",
    "round"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_email.reset_stats": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "dataprep.clean.clean_email.STATS"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_email.validate_email": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "bool",
    "check_email",
    "isinstance",
    "pandas.Series",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_ip": {
  "data": {},
  "type": "module"
 },
 "dataprep.clean.clean_ip.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.clean.clean_ip.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.clean.clean_ip._check_ip": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "ipaddress.ip_address",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_ip._format_ip": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "_check_ip",
    "hex",
    "int",
    "len",
    "numpy.nan",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_ip.clean_ip": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ProgressBar",
    "ValueError",
    "_format_ip",
    "bool",
    "create_report_new",
    "dask.dataframe.DataFrame",
    "dataprep.clean.clean_ip.dask",
    "isinstance",
    "object",
    "operator.itemgetter",
    "pandas.DataFrame",
    "str",
    "to_dask",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_ip.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.clean.clean_ip.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.clean.clean_ip.ip_address": {
  "data": {
   "shadows": "ipaddress.ip_address"
  },
  "type": "import"
 },
 "dataprep.clean.clean_ip.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "dataprep.clean.clean_ip.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.clean.clean_ip.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.clean.clean_ip.validate_ip": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "_check_ip",
    "bool",
    "isinstance",
    "pandas.Series",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_lat_long": {
  "data": {
   "symbols_in_volume": [
    "chr",
    "dataprep.clean.clean_lat_long.re"
   ]
  },
  "type": "module"
 },
 "dataprep.clean.clean_lat_long.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.clean.clean_lat_long.LAT_LONG_PATTERN": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dataprep.clean.clean_lat_long.LAT_PATTERN": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "dataprep.clean.clean_lat_long.LONG_PATTERN": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "dataprep.clean.clean_lat_long.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.clean.clean_lat_long.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.clean.clean_lat_long.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.clean.clean_lat_long._check_lat_long": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "abs",
    "bool",
    "dataprep.clean.clean_lat_long.LAT_LONG_PATTERN",
    "dataprep.clean.clean_lat_long.re",
    "float",
    "str",
    "sum",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_lat_long._check_lat_or_long": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "abs",
    "bool",
    "dataprep.clean.clean_lat_long.LAT_PATTERN",
    "dataprep.clean.clean_lat_long.LONG_PATTERN",
    "dataprep.clean.clean_lat_long.re",
    "float",
    "str",
    "sum",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_lat_long._format_lat_long": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ValueError",
    "_check_lat_long",
    "abs",
    "bool",
    "chr",
    "int",
    "numpy.nan",
    "round",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_lat_long._format_lat_or_long": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "ValueError",
    "_check_lat_or_long",
    "abs",
    "chr",
    "int",
    "numpy.nan",
    "round",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_lat_long.clean_lat_long": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ProgressBar",
    "ValueError",
    "_format_lat_long",
    "_format_lat_or_long",
    "bool",
    "create_report_new",
    "dask.dataframe.DataFrame",
    "dataprep.clean.clean_lat_long.dask",
    "object",
    "operator.itemgetter",
    "pandas.DataFrame",
    "str",
    "to_dask",
    "tuple",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_lat_long.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.clean.clean_lat_long.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.clean.clean_lat_long.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "dataprep.clean.clean_lat_long.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.clean.clean_lat_long.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.clean.clean_lat_long.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "dataprep.clean.clean_lat_long.validate_lat_long": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "_check_lat_long",
    "_check_lat_or_long",
    "bool",
    "float",
    "isinstance",
    "pandas.Series",
    "str",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_phone": {
  "data": {
   "symbols_in_volume": [
    "dataprep.clean.clean_phone.re"
   ]
  },
  "type": "module"
 },
 "dataprep.clean.clean_phone.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.clean.clean_phone.CA_US_PATTERN": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dataprep.clean.clean_phone.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.clean.clean_phone._check_phone": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "bool",
    "dataprep.clean.clean_phone.CA_US_PATTERN",
    "dataprep.clean.clean_phone.re",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_phone._format_phone": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "_check_phone",
    "bool",
    "numpy.nan",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_phone.clean_phone": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ProgressBar",
    "ValueError",
    "_format_phone",
    "bool",
    "create_report_new",
    "dask.dataframe.DataFrame",
    "dataprep.clean.clean_phone.dask",
    "object",
    "operator.itemgetter",
    "pandas.DataFrame",
    "str",
    "to_dask",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_phone.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.clean.clean_phone.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.clean.clean_phone.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "dataprep.clean.clean_phone.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.clean.clean_phone.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.clean.clean_phone.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "dataprep.clean.clean_phone.validate_phone": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "_check_phone",
    "bool",
    "isinstance",
    "pandas.Series",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_url": {
  "data": {
   "symbols_in_volume": [
    "dataprep.clean.clean_url.re",
    "set"
   ]
  },
  "type": "module"
 },
 "dataprep.clean.clean_url.AUTH_VALUES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "dataprep.clean.clean_url.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.clean.clean_url.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.clean.clean_url.QUERY_REGEX": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "dataprep.clean.clean_url.UNIFIED_AUTH_LIST": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "dataprep.clean.clean_url.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.clean.clean_url.VALID_URL_REGEX": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "dataprep.clean.clean_url._check_url": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "dataprep.clean.clean_url.VALID_URL_REGEX",
    "dataprep.clean.clean_url.re",
    "str",
    "typing.Any",
    "urllib.parse.unquote"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_url._format_url": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "_check_url",
    "bool",
    "dataprep.clean.clean_url.AUTH_VALUES",
    "dataprep.clean.clean_url.QUERY_REGEX",
    "dataprep.clean.clean_url.UNIFIED_AUTH_LIST",
    "dataprep.clean.clean_url.re",
    "dict",
    "isinstance",
    "len",
    "numpy.nan",
    "str",
    "typing.Any",
    "typing.List",
    "typing.Union",
    "urllib.parse.unquote",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_url._report_url": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "int",
    "pandas.Series",
    "print",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_url.clean_url": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ProgressBar",
    "_format_url",
    "_report_url",
    "bool",
    "dask.dataframe.DataFrame",
    "dataprep.clean.clean_url.AUTH_VALUES",
    "dataprep.clean.clean_url.UNIFIED_AUTH_LIST",
    "dataprep.clean.clean_url.dask",
    "isinstance",
    "object",
    "operator.itemgetter",
    "pandas.DataFrame",
    "set",
    "str",
    "to_dask",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.clean_url.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.clean.clean_url.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.clean.clean_url.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "dataprep.clean.clean_url.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.clean.clean_url.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.clean.clean_url.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "dataprep.clean.clean_url.unquote": {
  "data": {
   "shadows": "urllib.parse.unquote"
  },
  "type": "import"
 },
 "dataprep.clean.clean_url.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "dataprep.clean.clean_url.validate_url": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "_check_url",
    "bool",
    "isinstance",
    "pandas.Series",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.utils": {
  "data": {
   "symbols_in_volume": [
    "float",
    "numpy.nan"
   ]
  },
  "type": "module"
 },
 "dataprep.clean.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.clean.utils.NEARBYKEYS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "dataprep.clean.utils.NULL_VALUES": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "dataprep.clean.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.clean.utils.create_report": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "int",
    "print",
    "round",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.utils.create_report_new": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pandas.Series",
    "print",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.clean.utils.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.clean.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.clean.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.clean.utils.to_dask": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dask.dataframe.from_pandas",
    "isinstance",
    "numpy.ceil",
    "pandas.DataFrame",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.connector": {
  "data": {},
  "type": "module"
 },
 "dataprep.connector.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.connector.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.connector.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.connector.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "dataprep.connector.config_generator_ui": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ConfigGeneratorUI",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.config_manager": {
  "data": {},
  "type": "module"
 },
 "dataprep.connector.config_manager.GIT_REF_URL": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dataprep.connector.config_manager.META_URL": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "dataprep.connector.config_manager.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "dataprep.connector.config_manager.TABLE_URL": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "dataprep.connector.config_manager.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.connector.config_manager.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "dataprep.connector.config_manager.config_directory": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pathlib.Path",
    "tempfile.gettempdir"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.config_manager.download_config": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "Request",
    "dataprep.connector.config_manager.META_URL",
    "dataprep.connector.config_manager.TABLE_URL",
    "dataprep.connector.config_manager.config_directory",
    "dataprep.connector.config_manager.get_git_branch_hash",
    "dataprep.connector.config_manager.json",
    "json.dump",
    "shutil.rmtree",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.config_manager.ensure_config": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bool",
    "dataprep.connector.config_manager.config_directory",
    "download_config",
    "is_obsolete",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.config_manager.get_git_branch_hash": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Request",
    "dataprep.connector.config_manager.GIT_REF_URL",
    "dataprep.connector.config_manager.json",
    "str",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.config_manager.gettempdir": {
  "data": {
   "shadows": "tempfile.gettempdir"
  },
  "type": "import"
 },
 "dataprep.connector.config_manager.initialize_path": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bool",
    "config_directory",
    "dataprep.connector.config_manager.separate_branch",
    "ensure_config",
    "pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.config_manager.is_obsolete": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "bool",
    "dataprep.connector.config_manager.config_directory",
    "get_git_branch_hash",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.config_manager.jdump": {
  "data": {
   "shadows": "json.dump"
  },
  "type": "import"
 },
 "dataprep.connector.config_manager.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "dataprep.connector.config_manager.rmtree": {
  "data": {
   "shadows": "shutil.rmtree"
  },
  "type": "import"
 },
 "dataprep.connector.config_manager.separate_branch": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.connect": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Connector",
    "bool",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.connector": {
  "data": {},
  "type": "module"
 },
 "dataprep.connector.connector.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.connector.connector.Awaitable": {
  "data": {
   "shadows": "typing.Awaitable"
  },
  "type": "import"
 },
 "dataprep.connector.connector.ClientResponse": {
  "data": {
   "shadows": "aiohttp.client_reqrep.ClientResponse"
  },
  "type": "import"
 },
 "dataprep.connector.connector.ClientSession": {
  "data": {
   "shadows": "aiohttp.ClientSession"
  },
  "type": "import"
 },
 "dataprep.connector.connector.Connector": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "InvalidParameterError",
    "NotImplementedError",
    "Ref",
    "RequestError",
    "RuntimeError",
    "RuntimeWarning",
    "UniversalParameterOverridden",
    "ValueError",
    "aiohttp.ClientSession",
    "aiohttp.client_reqrep.ClientResponse",
    "asyncio.as_completed",
    "bool",
    "dataprep.connector.connector.math",
    "dataprep.connector.connector.sys",
    "getattr",
    "int",
    "isinstance",
    "jinja2.Environment",
    "jsonpath_ng.parse",
    "len",
    "list",
    "min",
    "pandas.DataFrame",
    "pandas.concat",
    "populate_field",
    "print",
    "range",
    "set",
    "str",
    "typing.Any",
    "typing.Awaitable",
    "typing.Dict",
    "typing.Optional",
    "typing.Set",
    "typing.Tuple",
    "typing.Union",
    "validate_fields",
    "warnings.warn"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.connector.Connector.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ImplicitDatabase",
    "OrderedThrottler",
    "bool",
    "initialize_path",
    "int",
    "jinja2.Environment",
    "jinja2.StrictUndefined",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.connector.Connector.info": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "info"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.connector.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.connector.connector.Environment": {
  "data": {
   "shadows": "jinja2.Environment"
  },
  "type": "import"
 },
 "dataprep.connector.connector.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.connector.connector.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "dataprep.connector.connector.StrictUndefined": {
  "data": {
   "shadows": "jinja2.StrictUndefined"
  },
  "type": "import"
 },
 "dataprep.connector.connector.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.connector.connector.UndefinedError": {
  "data": {
   "shadows": "jinja2.UndefinedError"
  },
  "type": "import"
 },
 "dataprep.connector.connector.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.connector.connector.as_completed": {
  "data": {
   "shadows": "asyncio.as_completed"
  },
  "type": "import"
 },
 "dataprep.connector.connector.jparse": {
  "data": {
   "shadows": "jsonpath_ng.parse"
  },
  "type": "import"
 },
 "dataprep.connector.connector.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "dataprep.connector.connector.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.connector.connector.populate_field": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "RuntimeWarning",
    "bool",
    "isinstance",
    "jinja2.Environment",
    "jinja2.UndefinedError",
    "str",
    "typing.Any",
    "typing.Dict",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.connector.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dataprep.connector.connector.validate_fields": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "KeyError",
    "bool",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.connector.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "dataprep.connector.errors": {
  "data": {},
  "type": "module"
 },
 "dataprep.connector.errors.InvalidAuthParams": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.errors.InvalidAuthParams.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.errors.InvalidAuthParams.__str__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.errors.InvalidParameterError": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Exception",
    "str"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.errors.InvalidParameterError.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.errors.InvalidParameterError.__str__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.errors.MissingRequiredAuthParams": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.errors.MissingRequiredAuthParams.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.errors.MissingRequiredAuthParams.__str__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.errors.RequestError": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.errors.RequestError.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.errors.RequestError.__str__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.errors.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "dataprep.connector.errors.UniversalParameterOverridden": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception",
    "str"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.errors.UniversalParameterOverridden.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.errors.UniversalParameterOverridden.__str__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator": {
  "data": {},
  "type": "module"
 },
 "dataprep.connector.generator.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "dataprep.connector.generator.generator": {
  "data": {},
  "type": "module"
 },
 "dataprep.connector.generator.generator.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.connector.generator.generator.AuthUnion": {
  "data": {
   "lineno": 160
  },
  "type": "class"
 },
 "dataprep.connector.generator.generator.ConfigGenerator": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.generator.generator.ConfigGenerator.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ConfigDef",
    "ConfigState",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.generator.ConfigGenerator.add_example": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "AuthUnion",
    "NotImplementedError",
    "PageUnion",
    "ValueError",
    "_create_config",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "urllib.parse.parse_qs",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.generator.ConfigGenerator.save": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "open",
    "pathlib.Path",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.generator.ConfigGenerator.to_string": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.generator.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.connector.generator.generator.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.connector.generator.generator.PageUnion": {
  "data": {
   "lineno": 166
  },
  "type": "class"
 },
 "dataprep.connector.generator.generator.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "dataprep.connector.generator.generator.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.connector.generator.generator._create_config": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ConfigDef",
    "Request",
    "RuntimeError",
    "dataprep.connector.generator.generator.json",
    "gen_schema_from_path",
    "search_table_path",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.generator.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "dataprep.connector.generator.generator.parse_qs": {
  "data": {
   "shadows": "urllib.parse.parse_qs"
  },
  "type": "import"
 },
 "dataprep.connector.generator.generator.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "dataprep.connector.generator.state": {
  "data": {},
  "type": "module"
 },
 "dataprep.connector.generator.state.ConfigDef": {
  "data": {
   "shadows": "dataprep.connector.schema.defs.ConfigDef"
  },
  "type": "import"
 },
 "dataprep.connector.generator.state.ConfigState": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.ConfigDef",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.generator.state.ConfigState.__add__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dataprep.connector.generator.state.ConfigState",
    "dataprep.connector.schema.defs.ConfigDef"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.state.ConfigState.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.ConfigDef",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.state.ConfigState.__repr__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.state.ConfigState.__str__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.state.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.connector.generator.table": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "collections.defaultdict",
    "float",
    "int",
    "str"
   ]
  },
  "type": "module"
 },
 "dataprep.connector.generator.table.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.connector.generator.table.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.connector.generator.table.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "dataprep.connector.generator.table.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.connector.generator.table._TYPE_MAPPING": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "dataprep.connector.generator.table._search_table_path": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dict",
    "int",
    "is_table_node",
    "isinstance",
    "len",
    "set",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.table.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "dataprep.connector.generator.table.gen_schema_from_path": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "SchemaFieldDef",
    "jsonpath_ng.parse",
    "str",
    "type",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.table.is_table_node": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bool",
    "dict",
    "isinstance",
    "list",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.table.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "dataprep.connector.generator.table.jparse": {
  "data": {
   "shadows": "jsonpath_ng.parse"
  },
  "type": "import"
 },
 "dataprep.connector.generator.table.search_table_path": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "_search_table_path",
    "max",
    "operator.itemgetter",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.ui": {
  "data": {
   "symbols_in_volume": [
    "ipywidgets.Layout"
   ]
  },
  "type": "module"
 },
 "dataprep.connector.generator.ui.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.BOX_LAYOUT": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "dataprep.connector.generator.ui.Box": {
  "data": {
   "shadows": "ipywidgets.Box"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.Button": {
  "data": {
   "shadows": "ipywidgets.Button"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.ConfigGeneratorUI": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ipywidgets.Dropdown",
    "ipywidgets.GridspecLayout",
    "ipywidgets.Output",
    "ipywidgets.RadioButtons",
    "ipywidgets.Text",
    "ipywidgets.Textarea",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.generator.ui.ConfigGeneratorUI.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ipywidgets.Output",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.ui.ConfigGeneratorUI._make_auth": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "_make_header",
    "dataprep.connector.generator.ui.BOX_LAYOUT",
    "ipywidgets.Box",
    "ipywidgets.RadioButtons",
    "ipywidgets.Textarea",
    "ipywidgets.VBox"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.ui.ConfigGeneratorUI._make_generator_option": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "_make_header",
    "dataprep.connector.generator.ui.BOX_LAYOUT",
    "ipywidgets.HBox",
    "ipywidgets.Label",
    "ipywidgets.Text",
    "ipywidgets.VBox"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.ui.ConfigGeneratorUI._make_grid": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ipywidgets.GridspecLayout"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.ui.ConfigGeneratorUI._make_pag": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "_make_header",
    "dataprep.connector.generator.ui.BOX_LAYOUT",
    "ipywidgets.Box",
    "ipywidgets.RadioButtons",
    "ipywidgets.Textarea",
    "ipywidgets.VBox"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.ui.ConfigGeneratorUI._make_req_param": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "_make_header",
    "dataprep.connector.generator.ui.BOX_LAYOUT",
    "ipywidgets.Box",
    "ipywidgets.Textarea",
    "ipywidgets.VBox"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.ui.ConfigGeneratorUI._make_result": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "_make_header",
    "ipywidgets.Button",
    "ipywidgets.Layout",
    "ipywidgets.VBox"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.ui.ConfigGeneratorUI._make_url": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "_make_header",
    "dataprep.connector.generator.ui.BOX_LAYOUT",
    "ipywidgets.Box",
    "ipywidgets.Dropdown",
    "ipywidgets.Text",
    "ipywidgets.VBox"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.ui.ConfigGeneratorUI._on_send_request": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ConfigGenerator",
    "IPython.display.Javascript",
    "IPython.display.display",
    "RuntimeError",
    "_pairs",
    "base64.b64encode",
    "dict",
    "int",
    "io.BytesIO",
    "typing.Any",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.ui.ConfigGeneratorUI.display": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "IPython.display.display"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.ui.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.Dropdown": {
  "data": {
   "shadows": "ipywidgets.Dropdown"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.GridspecLayout": {
  "data": {
   "shadows": "ipywidgets.GridspecLayout"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.HBox": {
  "data": {
   "shadows": "ipywidgets.HBox"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.HTML": {
  "data": {
   "shadows": "ipywidgets.HTML"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.Javascript": {
  "data": {
   "shadows": "IPython.display.Javascript"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.Label": {
  "data": {
   "shadows": "ipywidgets.Label"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.Layout": {
  "data": {
   "shadows": "ipywidgets.Layout"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.Output": {
  "data": {
   "shadows": "ipywidgets.Output"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.RadioButtons": {
  "data": {
   "shadows": "ipywidgets.RadioButtons"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.Text": {
  "data": {
   "shadows": "ipywidgets.Text"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.Textarea": {
  "data": {
   "shadows": "ipywidgets.Textarea"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.VBox": {
  "data": {
   "shadows": "ipywidgets.VBox"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui._make_header": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "int",
    "ipywidgets.HTML",
    "ipywidgets.Layout",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.ui._pairs": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "str",
    "typing.Any",
    "typing.Generator",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.generator.ui.b64encode": {
  "data": {
   "shadows": "base64.b64encode"
  },
  "type": "import"
 },
 "dataprep.connector.generator.ui.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "dataprep.connector.implicit_database": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "list",
    "str"
   ]
  },
  "type": "module"
 },
 "dataprep.connector.implicit_database.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.connector.implicit_database.ConfigDef": {
  "data": {
   "shadows": "dataprep.connector.schema.defs.ConfigDef"
  },
  "type": "import"
 },
 "dataprep.connector.implicit_database.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.connector.implicit_database.ImplicitDatabase": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "dataprep.connector.implicit_database.ImplicitTable",
    "str",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.implicit_database.ImplicitDatabase.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "RuntimeError",
    "dataprep.connector.implicit_database.ImplicitTable",
    "json.load",
    "open",
    "pathlib.Path",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.implicit_database.ImplicitTable": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.ConfigDef",
    "str"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.implicit_database.ImplicitTable.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.ConfigDef",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.implicit_database.ImplicitTable.from_json": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "NotImplementedError",
    "dataprep.connector.implicit_database._TYPE_MAPPING",
    "json.loads",
    "jsonpath_ng.parse",
    "len",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.implicit_database.ImplicitTable.from_response": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.implicit_database.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.connector.implicit_database.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "dataprep.connector.implicit_database.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.connector.implicit_database._TYPE_MAPPING": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "dataprep.connector.implicit_database.jload": {
  "data": {
   "shadows": "json.load"
  },
  "type": "import"
 },
 "dataprep.connector.implicit_database.jloads": {
  "data": {
   "shadows": "json.loads"
  },
  "type": "import"
 },
 "dataprep.connector.implicit_database.jparse": {
  "data": {
   "shadows": "jsonpath_ng.parse"
  },
  "type": "import"
 },
 "dataprep.connector.implicit_database.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.connector.info": {
  "data": {},
  "type": "module"
 },
 "dataprep.connector.info.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.connector.info.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.connector.info.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.connector.info.get_schema": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DataFrame.from_dict",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.info.info": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ImplicitDatabase",
    "bool",
    "get_schema",
    "get_styled_schema",
    "info_ui",
    "initialize_path",
    "isinstance",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.info.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.connector.info_ui": {
  "data": {
   "symbols_in_volume": [
    "dataprep.connector.info_ui.LOADER",
    "jinja2.Environment",
    "jinja2.PackageLoader",
    "jinja2.select_autoescape"
   ]
  },
  "type": "module"
 },
 "dataprep.connector.info_ui.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.connector.info_ui.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.connector.info_ui.ENV_LOADER": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "dataprep.connector.info_ui.Environment": {
  "data": {
   "shadows": "jinja2.Environment"
  },
  "type": "import"
 },
 "dataprep.connector.info_ui.LOADER": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "dataprep.connector.info_ui.PackageLoader": {
  "data": {
   "shadows": "jinja2.PackageLoader"
  },
  "type": "import"
 },
 "dataprep.connector.info_ui.info_ui": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dataprep.connector.info_ui.ENV_LOADER",
    "display_html",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.info_ui.select_autoescape": {
  "data": {
   "shadows": "jinja2.select_autoescape"
  },
  "type": "import"
 },
 "dataprep.connector.ref": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "dataprep.connector.ref.Generic": {
  "data": {
   "shadows": "typing.Generic"
  },
  "type": "import"
 },
 "dataprep.connector.ref.Ref": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "dataprep.connector.ref.T",
    "typing.Generic"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.ref.Ref.__bool__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.ref.Ref.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dataprep.connector.ref.T"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.ref.Ref.__int__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.ref.Ref.__repr__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.ref.Ref.__str__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.ref.Ref.set": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dataprep.connector.ref.T"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.ref.T": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "dataprep.connector.ref.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "dataprep.connector.schema": {
  "data": {},
  "type": "module"
 },
 "dataprep.connector.schema.base": {
  "data": {
   "symbols_in_volume": [
    "typing.TypeVar"
   ]
  },
  "type": "module"
 },
 "dataprep.connector.schema.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.connector.schema.base.BaseDef": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dataprep.connector.schema.base.Policy",
    "pydantic.BaseModel",
    "str",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.base.BaseDef.Config": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bool",
    "dataprep.connector.schema.base.camelcase",
    "str",
    "typing.Callable"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.base.BaseDef.merge": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "coalesce",
    "dataprep.connector.schema.base.BaseDefT",
    "dataprep.connector.schema.base.Policy",
    "getattr",
    "isinstance",
    "merge_values",
    "setattr",
    "type",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.base.BaseDefT": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "dataprep.connector.schema.base.BaseModel": {
  "data": {
   "shadows": "pydantic.BaseModel"
  },
  "type": "import"
 },
 "dataprep.connector.schema.base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "dataprep.connector.schema.base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.connector.schema.base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.connector.schema.base.Policy": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.base.Policy.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.base.T": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "dataprep.connector.schema.base.TypeVar": {
  "data": {
   "shadows": "typing.TypeVar"
  },
  "type": "import"
 },
 "dataprep.connector.schema.base.camelcase": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dataprep.connector.schema.base.re",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.base.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "dataprep.connector.schema.base.coalesce": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "dataprep.connector.schema.base.T",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.base.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "dataprep.connector.schema.base.merge_values": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "bool",
    "copy.deepcopy",
    "dataprep.connector.schema.base.BaseDef",
    "dataprep.connector.schema.base.Policy",
    "dict",
    "float",
    "int",
    "isinstance",
    "str",
    "type",
    "typing.Any",
    "typing.Dict",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.base.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "dataprep.connector.schema.defs.BearerAuthorizationDef",
    "dataprep.connector.schema.defs.FieldDef",
    "dataprep.connector.schema.defs.HeaderAuthorizationDef",
    "dataprep.connector.schema.defs.OAuth2AuthorizationCodeAuthorizationDef",
    "dataprep.connector.schema.defs.OAuth2ClientCredentialsAuthorizationDef",
    "dataprep.connector.schema.defs.OffsetPaginationDef",
    "dataprep.connector.schema.defs.PagePaginationDef",
    "dataprep.connector.schema.defs.QueryParamAuthorizationDef",
    "dataprep.connector.schema.defs.SeekPaginationDef",
    "dataprep.connector.schema.defs.TokenPaginationDef",
    "open",
    "pathlib.Path",
    "str",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "dataprep.connector.schema.defs.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.AuthorizationDef": {
  "data": {
   "lineno": 335
  },
  "type": "constant"
 },
 "dataprep.connector.schema.defs.BearerAuthorizationDef": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "pydantic.Field",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.BearerAuthorizationDef.build": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.validate_auth",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.defs.BodyDef": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.FieldDefUnion",
    "pydantic.Field",
    "str",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.ConfigDef": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.RequestDef",
    "dataprep.connector.schema.defs.ResponseDef",
    "int",
    "pydantic.Field",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.Environment": {
  "data": {
   "shadows": "jinja2.Environment"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.Field": {
  "data": {
   "shadows": "pydantic.Field"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.FieldDef": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.FieldDef.from_key_validation": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "isinstance",
    "jinja2.Environment",
    "jinja2.meta.find_undeclared_variables",
    "len",
    "list",
    "pydantic.root_validator",
    "set",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.defs.FieldDefUnion": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "dataprep.connector.schema.defs.HTTPServer": {
  "data": {
   "lineno": 128
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.HTTPServer.do_GET": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.OAUTH2_TEMPLATE",
    "threading.Thread",
    "urllib.parse.parse_qs",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.defs.HTTPServer.log_request": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.defs.HeaderAuthorizationDef": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "dict",
    "pydantic.Field",
    "str",
    "type",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.HeaderAuthorizationDef.build": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.validate_auth",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.defs.Javascript": {
  "data": {
   "shadows": "IPython.display.Javascript"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.Method": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.OAUTH2_TEMPLATE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "dataprep.connector.schema.defs.OAuth2AuthorizationCodeAuthorizationDef": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pydantic.Field",
    "str",
    "type",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.OAuth2AuthorizationCodeAuthorizationDef._auth": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "IPython.display.Javascript",
    "IPython.display.display",
    "RuntimeError",
    "dataprep.connector.schema.defs.HTTPServer",
    "dataprep.connector.schema.defs.TCPServer",
    "dataprep.connector.schema.defs.get_random_string",
    "dataprep.connector.schema.defs.webbrowser",
    "int",
    "is_notebook",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.defs.OAuth2AuthorizationCodeAuthorizationDef.build": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "Request",
    "RuntimeError",
    "ValueError",
    "base64.b64encode",
    "dataprep.connector.schema.defs.json",
    "dataprep.connector.schema.defs.validate_auth",
    "str",
    "time.time",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.defs.OAuth2ClientCredentialsAuthorizationDef": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pydantic.Field",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.OAuth2ClientCredentialsAuthorizationDef.build": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "Request",
    "RuntimeError",
    "ValueError",
    "base64.b64encode",
    "dataprep.connector.schema.defs.json",
    "dataprep.connector.schema.defs.validate_auth",
    "str",
    "time.time",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.defs.OffsetPaginationDef": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "int",
    "pydantic.Field",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.PagePaginationDef": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "int",
    "pydantic.Field",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.PaginationDef": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "dataprep.connector.schema.defs.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.QueryParamAuthorizationDef": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "pydantic.Field",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.QueryParamAuthorizationDef.build": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.validate_auth",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.defs.RequestDef": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.AuthorizationDef",
    "dataprep.connector.schema.defs.BodyDef",
    "dataprep.connector.schema.defs.FieldDefUnion",
    "dataprep.connector.schema.defs.Method",
    "dataprep.connector.schema.defs.PaginationDef",
    "dataprep.connector.schema.defs.SearchDef",
    "str",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.ResponseDef": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.SchemaFieldDef",
    "pydantic.Field",
    "str",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.SchemaFieldDef": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "str",
    "type",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.SchemaFieldDef.merge": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "ValueError",
    "dataprep.connector.schema.defs.SchemaFieldDef",
    "isinstance",
    "merge_type",
    "type"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.defs.SearchDef": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.SeekPaginationDef": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "int",
    "pydantic.Field",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.TCPServer": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.socketserver"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.TCPServer.server_bind": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.socket"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.defs.TYPE_TREE": {
  "data": {
   "lineno": 394
  },
  "type": "constant"
 },
 "dataprep.connector.schema.defs.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.TokenLocation": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "enum.Enum",
    "str"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.TokenPaginationDef": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.TokenLocation",
    "int",
    "pydantic.Field",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.schema.defs.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.b64encode": {
  "data": {
   "shadows": "base64.b64encode"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.get_random_string": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "dataprep.connector.schema.defs.random",
    "dataprep.connector.schema.defs.string",
    "int",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.defs.http.server": {
  "data": {
   "shadows": "http.server"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.merge_type": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "RuntimeError",
    "dataprep.connector.schema.defs.TYPE_TREE",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.defs.meta": {
  "data": {
   "shadows": "jinja2.meta"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.parse_qs": {
  "data": {
   "shadows": "urllib.parse.parse_qs"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.root_validator": {
  "data": {
   "shadows": "pydantic.root_validator"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.socketserver": {
  "data": {
   "shadows": "socketserver"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "dataprep.connector.schema.defs.validate_auth": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "InvalidAuthParams",
    "MissingRequiredAuthParams",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.schema.defs.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "dataprep.connector.throttler": {
  "data": {},
  "type": "module"
 },
 "dataprep.connector.throttler.Deque": {
  "data": {
   "shadows": "typing.Deque"
  },
  "type": "import"
 },
 "dataprep.connector.throttler.OrderedThrottler": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.throttler.OrderedThrottler.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "collections.deque",
    "float",
    "int",
    "typing.Deque"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.throttler.OrderedThrottler._flush": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "dataprep.connector.throttler.time"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.throttler.OrderedThrottler.session": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ThrottleSession"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.throttler.ThrottleSession": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "RuntimeError",
    "dataprep.connector.throttler.OrderedThrottler",
    "dataprep.connector.throttler.asyncio",
    "dataprep.connector.throttler.time",
    "int",
    "len"
   ]
  },
  "type": "class"
 },
 "dataprep.connector.throttler.ThrottleSession.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dataprep.connector.throttler.OrderedThrottler"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.throttler.ThrottleSession.release": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "dataprep.connector.throttler.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "dataprep.connector.throttler.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "dataprep.connector.throttler.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "dataprep.connector.utils": {
  "data": {},
  "type": "module"
 },
 "dataprep.connector.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.connector.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.connector.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.connector.utils.Request": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "dataprep.connector.utils.Request.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dict",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.utils.Request.get": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.utils.Request.post": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.utils.Request.put": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.connector.utils.http.client": {
  "data": {
   "shadows": "http.client"
  },
  "type": "import"
 },
 "dataprep.connector.utils.urllib.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "dataprep.datasets": {
  "data": {},
  "type": "module"
 },
 "dataprep.datasets.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "dataprep.datasets._base": {
  "data": {},
  "type": "module"
 },
 "dataprep.datasets._base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.datasets._base.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "dataprep.datasets._base.get_dataset_names": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dataprep.datasets._base.os",
    "filter",
    "list",
    "map",
    "os.path.dirname",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.datasets._base.load_dataset": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "dataprep.datasets._base.get_dataset_names",
    "dataprep.datasets._base.os",
    "os.path.dirname",
    "pandas.DataFrame",
    "pandas.read_csv",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.datasets._base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "dataprep.datasets._base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda": {
  "data": {
   "symbols_in_volume": [
    "bokeh.io.output_notebook",
    "is_notebook"
   ]
  },
  "type": "module"
 },
 "dataprep.eda.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "dataprep.eda.basic.configs": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.basic.configs.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.basic.configs.BarChart": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "dataprep.eda.basic.configs.ConfigBase",
    "int",
    "str"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.basic.configs.BarChart.from_dict": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.basic.configs.ConfigBase": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "str"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.basic.configs.ConfigBase.from_dict": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.basic.configs.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.basic.configs.Histogram": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "dataprep.eda.basic.configs.ConfigBase",
    "float",
    "int",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.basic.configs.Histogram.from_dict": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.basic.configs.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.basic.configs.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.basic.configs.WordCloud": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "dataprep.eda.basic.configs.ConfigBase",
    "int",
    "str"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.basic.configs.WordCloud.from_dict": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.basic.configs.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "dataprep.eda.container": {
  "data": {
   "symbols_in_volume": [
    "bokeh.io.output_notebook",
    "bokeh.resources.INLINE",
    "jinja2.Environment",
    "jinja2.PackageLoader"
   ]
  },
  "type": "module"
 },
 "dataprep.eda.container.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.container.Container": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "dataprep.eda.container.Container.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Context",
    "TypeError",
    "dataprep.eda.container.ENV_LOADER",
    "dataprep.eda.container.GRID_VISUAL_TYPES",
    "dataprep.eda.container.TAB_VISUAL_TYPES",
    "dataprep.eda.container.random",
    "setattr",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.container.Container._repr_html_": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.container.Container.save": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.container.Container.show": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "IPython.display.HTML",
    "IPython.display.display",
    "ImportError",
    "dataprep.eda.container.sys",
    "is_notebook",
    "print"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.container.Container.show_browser": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dataprep.eda.container.webbrowser",
    "open",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.container.Context": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "bokeh.resources.INLINE.render"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.container.Context.__getattr__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.container.Context.__getitem__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "KeyError",
    "getattr",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.container.Context.__init__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "bokeh.embed.components",
    "setattr",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.container.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.container.ENV_LOADER": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "dataprep.eda.container.Environment": {
  "data": {
   "shadows": "jinja2.Environment"
  },
  "type": "import"
 },
 "dataprep.eda.container.GRID_VISUAL_TYPES": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "dataprep.eda.container.HTML": {
  "data": {
   "shadows": "IPython.display.HTML"
  },
  "type": "import"
 },
 "dataprep.eda.container.INLINE": {
  "data": {
   "shadows": "bokeh.resources.INLINE"
  },
  "type": "import"
 },
 "dataprep.eda.container.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "dataprep.eda.container.PackageLoader": {
  "data": {
   "shadows": "jinja2.PackageLoader"
  },
  "type": "import"
 },
 "dataprep.eda.container.TAB_VISUAL_TYPES": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "dataprep.eda.container.components": {
  "data": {
   "shadows": "bokeh.embed.components"
  },
  "type": "import"
 },
 "dataprep.eda.container.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "dataprep.eda.container.output_notebook": {
  "data": {
   "shadows": "bokeh.io.output_notebook"
  },
  "type": "import"
 },
 "dataprep.eda.container.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "dataprep.eda.container.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dataprep.eda.container.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "dataprep.eda.correlation": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.correlation.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dataprep.eda.correlation.compute": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.correlation.compute.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "dataprep.eda.correlation.compute.bivariate": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.correlation.compute.bivariate.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.bivariate.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.bivariate._calc_bivariate": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Intermediate",
    "RuntimeError",
    "ValueError",
    "dask.dataframe.DataFrame",
    "dataprep.eda.correlation.compute.bivariate.dask",
    "int",
    "len",
    "numpy.argsort",
    "numpy.full",
    "scatter_with_regression",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.bivariate.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.bivariate.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.bivariate.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.bivariate.itruediv": {
  "data": {
   "shadows": "operator.itruediv"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.bivariate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.bivariate.pearson_influence": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "dask.array.Array",
    "dask.array.map_blocks",
    "dask.array.ones",
    "dask.array.sqrt",
    "dask.array.square",
    "dask.array.sum",
    "operator.itruediv"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.bivariate.scatter_with_regression": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.linalg.lstsq",
    "dask.dataframe.DataFrame",
    "int",
    "min",
    "pearson_influence",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.common": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.correlation.compute.common.CorrelationMethod": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "enum.Enum",
    "enum.auto"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.correlation.compute.common.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.common.auto": {
  "data": {
   "shadows": "enum.auto"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.common.corrcoef": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dataprep.eda.correlation.compute.common.dask",
    "numpy.corrcoef",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.common.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.common.kendalltau": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "dataprep.eda.correlation.compute.common.dask",
    "numpy.float64",
    "numpy.ndarray",
    "scipy.stats.kendalltau"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.common.kendalltau_": {
  "data": {
   "shadows": "scipy.stats.kendalltau"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.common.nanrankdata": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "bottleneck.nanrankdata",
    "dataprep.eda.correlation.compute.common.dask",
    "int",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.common.nanrankdata_": {
  "data": {
   "shadows": "bottleneck.nanrankdata"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.common.rankdata": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "bottleneck.rankdata",
    "dataprep.eda.correlation.compute.common.dask",
    "int",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.common.rankdata_": {
  "data": {
   "shadows": "bottleneck.rankdata"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.compute_correlation": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "DataArray",
    "ValueError",
    "_calc_bivariate",
    "_calc_nullivariate",
    "_calc_univariate",
    "float",
    "int",
    "str",
    "to_dask",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.nullivariate": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.correlation.compute.nullivariate.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.nullivariate.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.nullivariate.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.nullivariate.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.nullivariate.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.nullivariate._calc_nullivariate": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "Intermediate",
    "ValueError",
    "correlation_nxn",
    "create_string",
    "dataprep.eda.correlation.compute.nullivariate.dask",
    "float",
    "int",
    "least_corr",
    "list",
    "most_corr",
    "pandas.DataFrame",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.nullivariate._kendall_tau_nxn": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "dask.array.Array",
    "functools.partial",
    "pandas.DataFrame.corr"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.nullivariate._pearson_nxn": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "dask.array.Array",
    "functools.partial",
    "pandas.DataFrame.corr"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.nullivariate._spearman_nxn": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "dask.array.Array",
    "functools.partial",
    "pandas.DataFrame.corr"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.nullivariate.correlation_nxn": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_kendall_tau_nxn",
    "_pearson_nxn",
    "_spearman_nxn",
    "dask.array.Array",
    "len",
    "numpy.meshgrid",
    "numpy.ndarray",
    "range",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.nullivariate.create_string": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "cut_long_name",
    "int",
    "len",
    "str",
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.nullivariate.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.nullivariate.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.nullivariate.least_corr": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "abs",
    "enumerate",
    "float",
    "list",
    "numpy.ndarray",
    "numpy.where",
    "range",
    "round",
    "set",
    "typing.Any",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.nullivariate.most_corr": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "list",
    "numpy.ndarray",
    "numpy.where",
    "range",
    "round",
    "set",
    "typing.Any",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.nullivariate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.nullivariate.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.nullivariate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.univariate": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.correlation.compute.univariate.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.univariate.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.univariate._calc_univariate": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Intermediate",
    "ValueError",
    "_corr_filter",
    "dataprep.eda.correlation.compute.univariate.dask",
    "dataprep.eda.correlation.compute.univariate.sys",
    "float",
    "func",
    "int",
    "len",
    "numpy.full",
    "pandas.DataFrame",
    "print",
    "str",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.univariate._corr_filter": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "numpy.argsort",
    "numpy.count_nonzero",
    "numpy.isnan",
    "numpy.ndarray",
    "numpy.roll",
    "numpy.searchsorted",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.univariate._kendall_tau_1xn": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.from_delayed",
    "dask.array.isnan",
    "dask.array.stack",
    "kendalltau",
    "numpy.float",
    "range"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.univariate._pearson_1xn": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "corrcoef",
    "dask.array.Array",
    "dask.array.concatenate",
    "dask.array.from_delayed",
    "dask.array.isnan",
    "dask.array.stack",
    "numpy.float",
    "range"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.univariate._spearman_1xn": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.from_delayed",
    "dataprep.eda.correlation.compute.univariate._pearson_1xn",
    "nanrankdata",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.compute.univariate.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.univariate.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.univariate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.univariate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.compute.univariate.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.plot_correlation": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Container",
    "ProgressBar",
    "bool",
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "float",
    "int",
    "pandas.DataFrame",
    "render_correlation",
    "str",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.render": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.correlation.render.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.BasicTicker": {
  "data": {
   "shadows": "bokeh.models.BasicTicker"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.CategoricalColorMapper": {
  "data": {
   "shadows": "bokeh.models.CategoricalColorMapper"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.ColorBar": {
  "data": {
   "shadows": "bokeh.models.ColorBar"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.ColumnDataSource": {
  "data": {
   "shadows": "bokeh.models.ColumnDataSource"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.CustomJS": {
  "data": {
   "shadows": "bokeh.models.CustomJS"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.FactorRange": {
  "data": {
   "shadows": "bokeh.models.FactorRange"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.Figure": {
  "data": {
   "shadows": "bokeh.plotting.Figure"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.FuncTickFormatter": {
  "data": {
   "shadows": "bokeh.models.FuncTickFormatter"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.HoverTool": {
  "data": {
   "shadows": "bokeh.models.HoverTool"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.Legend": {
  "data": {
   "shadows": "bokeh.models.Legend"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.LegendItem": {
  "data": {
   "shadows": "bokeh.models.LegendItem"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.LinearColorMapper": {
  "data": {
   "shadows": "bokeh.models.LinearColorMapper"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.Panel": {
  "data": {
   "shadows": "bokeh.models.widgets.Panel"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.PrintfTickFormatter": {
  "data": {
   "shadows": "bokeh.models.PrintfTickFormatter"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.Select": {
  "data": {
   "shadows": "bokeh.models.Select"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.Tabs": {
  "data": {
   "shadows": "bokeh.models.widgets.Tabs"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.Title": {
  "data": {
   "shadows": "bokeh.models.annotations.Title"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.__all__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "dataprep.eda.correlation.render.column": {
  "data": {
   "shadows": "bokeh.layouts.column"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.create_color_mapper": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "bokeh.models.BasicTicker",
    "bokeh.models.ColorBar",
    "bokeh.models.LinearColorMapper",
    "bokeh.models.PrintfTickFormatter",
    "str",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.render.figure": {
  "data": {
   "shadows": "bokeh.plotting.figure"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.render_correlation": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NotImplementedError",
    "bokeh.plotting.Figure",
    "int",
    "render_correlation_heatmaps",
    "render_correlation_impact",
    "render_correlation_single_heatmaps",
    "render_crossfilter",
    "render_scatter",
    "str",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.render.render_correlation_heatmaps": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "bokeh.models.FactorRange",
    "bokeh.models.widgets.Panel",
    "bokeh.models.widgets.Tabs",
    "bokeh.plotting.Figure",
    "create_color_mapper",
    "dataprep.eda.correlation.render.tweak_figure",
    "int",
    "reversed",
    "str",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.render.render_correlation_impact": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "bokeh.models.FactorRange",
    "bokeh.models.widgets.Panel",
    "bokeh.plotting.Figure",
    "create_color_mapper",
    "dataprep.eda.correlation.render.tweak_figure",
    "int",
    "reversed",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.render.render_correlation_single_heatmaps": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "bokeh.models.FactorRange",
    "bokeh.models.widgets.Panel",
    "bokeh.plotting.figure",
    "create_color_mapper",
    "dataprep.eda.correlation.render.tweak_figure",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.render.render_crossfilter": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "bokeh.layouts.column",
    "bokeh.layouts.row",
    "bokeh.models.ColumnDataSource",
    "bokeh.models.CustomJS",
    "bokeh.models.HoverTool",
    "bokeh.models.Select",
    "bokeh.models.annotations.Title",
    "bokeh.plotting.Figure",
    "dict",
    "int",
    "list"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.render.render_scatter": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "bokeh.models.CategoricalColorMapper",
    "bokeh.models.HoverTool",
    "bokeh.models.Legend",
    "bokeh.models.LegendItem",
    "bokeh.plotting.Figure",
    "int",
    "len",
    "numpy.asarray",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.correlation.render.row": {
  "data": {
   "shadows": "bokeh.layouts.row"
  },
  "type": "import"
 },
 "dataprep.eda.correlation.render.tweak_figure": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "bokeh.models.FuncTickFormatter",
    "bokeh.plotting.Figure",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.create_report": {
  "data": {
   "symbols_in_volume": [
    "jinja2.Environment",
    "jinja2.PackageLoader"
   ]
  },
  "type": "module"
 },
 "dataprep.eda.create_report.ENV_LOADER": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dataprep.eda.create_report.Environment": {
  "data": {
   "shadows": "jinja2.Environment"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.INLINE": {
  "data": {
   "shadows": "bokeh.resources.INLINE"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.PackageLoader": {
  "data": {
   "shadows": "jinja2.PackageLoader"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "dataprep.eda.create_report.create_report": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Report",
    "bokeh.resources.INLINE.render",
    "bool",
    "dataprep.eda.create_report.ENV_LOADER",
    "format_report",
    "pandas.DataFrame",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.create_report.formatter": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.create_report.formatter.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.formatter.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.formatter.Figure": {
  "data": {
   "shadows": "bokeh.plotting.Figure"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.formatter.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.formatter.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.formatter.Title": {
  "data": {
   "shadows": "bokeh.models.Title"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.formatter.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.formatter.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.formatter.basic_computations": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Continuous",
    "DataArray",
    "DateTime",
    "Nominal",
    "TypeError",
    "calc_stats",
    "calc_stats_dt",
    "compute_missing_nullivariate",
    "cont_comps",
    "correlation_nxn",
    "dask.dataframe.DataFrame",
    "dataprep.eda.create_report.formatter.dask",
    "detect_dtype",
    "hash",
    "is_dtype",
    "min",
    "nom_comps",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.create_report.formatter.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.formatter.components": {
  "data": {
   "shadows": "bokeh.embed.components"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.formatter.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.formatter.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.formatter.filterwarnings": {
  "data": {
   "shadows": "warnings.filterwarnings"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.formatter.format_basic": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AttributeError",
    "Continuous",
    "DateTime",
    "Intermediate",
    "Nominal",
    "RuntimeWarning",
    "basic_computations",
    "bokeh.embed.components",
    "bokeh.models.Title",
    "bokeh.plotting.Figure",
    "dask.dataframe.DataFrame",
    "dataprep.eda.create_report.formatter.dask",
    "detect_dtype",
    "format_cat_stats",
    "format_num_stats",
    "format_ov_stats",
    "is_dtype",
    "len",
    "list",
    "pandas.DataFrame",
    "render",
    "render_correlation",
    "render_missing",
    "stats_viz_dt",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "warnings.catch_warnings",
    "warnings.filterwarnings"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.create_report.formatter.format_report": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ProgressBar",
    "ValueError",
    "bool",
    "dask.dataframe.DataFrame",
    "format_basic",
    "pandas.DataFrame",
    "str",
    "string_dtype_to_object",
    "to_dask",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.create_report.formatter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.report": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.create_report.report.CELL_HEIGHT_OVERRIDE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "dataprep.eda.create_report.report.HTML": {
  "data": {
   "shadows": "IPython.display.HTML"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.report.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.report.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.report.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.report.Report": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "dataprep.eda.create_report.report.Report.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.create_report.report.Report.__repr__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.create_report.report.Report._repr_html_": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dataprep.eda.create_report.report.CELL_HEIGHT_OVERRIDE",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.create_report.report.Report.save": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "pathlib.Path",
    "pathlib.Path.cwd",
    "print",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.create_report.report.Report.show": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "IPython.display.HTML",
    "IPython.display.display",
    "ImportError",
    "dataprep.eda.create_report.report.sys",
    "is_notebook",
    "print"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.create_report.report.Report.show_browser": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "dataprep.eda.create_report.report.webbrowser",
    "open",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.create_report.report.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.report.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dataprep.eda.create_report.report.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "dataprep.eda.data_array": {
  "data": {
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "pandas.DataFrame",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "dataprep.eda.data_array.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.data_array.DataArray": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.dataframe.DataFrame",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Index",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.data_array.DataArray.__getitem__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "dataprep.eda.data_array.DataArray",
    "functools.reduce",
    "isinstance",
    "numpy.promote_types",
    "str",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.data_array.DataArray.__init__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dask.dataframe.DataFrame",
    "dask.dataframe.Series",
    "dask.dataframe.from_pandas",
    "dataprep.eda.data_array.DataArray",
    "dataprep.eda.data_array.DataFrame",
    "isinstance",
    "math.ceil",
    "numpy.object",
    "pandas.DataFrame",
    "pandas.Series",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.data_array.DataArray.columns": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "pandas.Index",
    "property"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.data_array.DataArray.compute": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "ValueError",
    "dataprep.eda.data_array.dask",
    "int",
    "len",
    "numpy.isnan",
    "range",
    "slice",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.data_array.DataArray.dtypes": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pandas.Series",
    "property"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.data_array.DataArray.frame": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.data_array.DataArray.head": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "property"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.data_array.DataArray.nulls": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "dask.array.Array",
    "property"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.data_array.DataArray.select_dtypes": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "typing.Any",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.data_array.DataArray.select_num_columns": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "dataprep.eda.data_array.DataArray.shape": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.data_array.DataArray.values": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "dask.array.Array",
    "property"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.data_array.DataFrame": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dataprep.eda.data_array.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.eda.data_array.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.data_array.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "dataprep.eda.data_array.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.data_array.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.eda.data_array._get_chunk_shape": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.asarray",
    "numpy.ndarray",
    "slice"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.data_array.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "dataprep.eda.data_array.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "dataprep.eda.data_array.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "dataprep.eda.data_array.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.eda.data_array.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.data_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.data_array.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.data_array.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "dataprep.eda.distribution": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.distribution.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dataprep.eda.distribution.compute": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.distribution.compute.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dataprep.eda.distribution.compute.bivariate": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.distribution.compute.bivariate.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.bivariate.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.bivariate.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.bivariate.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.bivariate.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.bivariate.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.bivariate.box_comps": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "float",
    "min",
    "numpy.array",
    "pandas.Series",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.bivariate.calc_box_dt": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ValueError",
    "_calc_box_otlrs",
    "_calc_box_stats",
    "_get_timeunit",
    "dask.dataframe.DataFrame",
    "enumerate",
    "float",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.Series",
    "pandas.concat",
    "pandas.to_timedelta",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.bivariate.calc_box_num": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dask.dataframe.Series",
    "int",
    "pandas.cut"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.bivariate.calc_stacked_dt": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "ValueError",
    "_calc_groups",
    "_get_timeunit",
    "bool",
    "dask.dataframe.DataFrame",
    "int",
    "len",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.pivot_table",
    "pandas.to_timedelta",
    "str",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.bivariate.compute_bivariate": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Continuous",
    "DateTime",
    "Intermediate",
    "Nominal",
    "TypeError",
    "bool",
    "calc_box_num",
    "dask.dataframe.DataFrame",
    "dataprep.eda.distribution.compute.bivariate.dask",
    "detect_dtype",
    "hash",
    "int",
    "is_dtype",
    "min",
    "nom_cont_comps",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.bivariate.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.bivariate.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.bivariate.hist": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.histogram",
    "pandas.Series",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.bivariate.nom_cont_comps": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "bool",
    "dask.dataframe.DataFrame",
    "int",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.bivariate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.bivariate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.distribution.compute.common.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common.DTMAP": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "dataprep.eda.distribution.compute.common.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common._calc_box_otlrs": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "float",
    "len",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.common._calc_box_stats": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dask.dataframe.Series",
    "dataprep.eda.distribution.compute.common.dask",
    "dict",
    "len",
    "list",
    "numpy.nan",
    "numpy.round",
    "pandas.DataFrame",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.common._calc_groups": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "AttributeError",
    "bool",
    "dask.dataframe.DataFrame",
    "dict",
    "int",
    "len",
    "list",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.common._calc_line_dt": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "_calc_groups",
    "bool",
    "dask.dataframe.DataFrame",
    "dataprep.eda.distribution.compute.common.DTMAP",
    "dataprep.eda.distribution.compute.common._get_timeunit",
    "dataprep.eda.distribution.compute.common.dask",
    "dict",
    "drop_null",
    "float",
    "int",
    "len",
    "list",
    "numpy.ndarray",
    "pandas.DataFrame",
    "pandas.Grouper",
    "pandas.to_timedelta",
    "round",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.common._get_timeunit": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "abs",
    "int",
    "pandas.Timestamp",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.common.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common.gaussian_kde": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "dataprep.eda.distribution.compute.common.dask",
    "float",
    "numpy.ndarray",
    "scipy.stats.gaussian_kde",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.common.gaussian_kde_": {
  "data": {
   "shadows": "scipy.stats.gaussian_kde"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common.ks_2samp": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "dataprep.eda.distribution.compute.common.dask",
    "float",
    "numpy.ndarray",
    "scipy.stats.ks_2samp",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.common.ks_2samp_": {
  "data": {
   "shadows": "scipy.stats.ks_2samp"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common.normaltest": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "dataprep.eda.distribution.compute.common.dask",
    "numpy.ndarray",
    "scipy.stats.normaltest",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.common.normaltest_": {
  "data": {
   "shadows": "scipy.stats.normaltest"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.common.skewtest": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "dataprep.eda.distribution.compute.common.dask",
    "float",
    "numpy.ndarray",
    "scipy.stats.skewtest",
    "typing.Tuple",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.common.skewtest_": {
  "data": {
   "shadows": "scipy.stats.skewtest"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.compute": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "bool",
    "compute_bivariate",
    "compute_overview",
    "compute_trivariate",
    "compute_univariate",
    "dask.dataframe.DataFrame",
    "float",
    "int",
    "pandas.DataFrame",
    "str",
    "string_dtype_to_object",
    "sum",
    "to_dask",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.overview": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.distribution.compute.overview.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.overview.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.overview.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.overview.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.overview.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.overview._insight_pagination": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "numpy.ceil",
    "range",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.overview.calc_cont_col": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "dask.array.histogram",
    "dask.array.stats.chisquare",
    "dask.dataframe.Series",
    "int",
    "normaltest",
    "numpy.inf",
    "skewtest",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.overview.calc_nom_col": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "bool",
    "dask.array.stats.chisquare",
    "dask.dataframe.Series",
    "int",
    "isinstance",
    "pandas.Series",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.overview.calc_stats": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "get_dtype_cnts_and_num_cols",
    "itertools.combinations",
    "ks_2samp",
    "list",
    "min",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.overview.chisquare": {
  "data": {
   "shadows": "dask.array.stats.chisquare"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.overview.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.overview.compute_overview": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Continuous",
    "DateTime",
    "Intermediate",
    "Nominal",
    "TypeError",
    "_insight_pagination",
    "bool",
    "calc_cont_col",
    "calc_nom_col",
    "calc_stats",
    "dask.dataframe.DataFrame",
    "dataprep.eda.distribution.compute.overview.dask",
    "detect_dtype",
    "format_cont",
    "format_nom",
    "format_overview",
    "hash",
    "int",
    "is_dtype",
    "pandas.DataFrame",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.overview.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.overview.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.overview.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.overview.format_cont": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "int",
    "list",
    "round",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.overview.format_nom": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "int",
    "list",
    "round",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.overview.format_overview": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "round",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.overview.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.overview.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.trivariate": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.distribution.compute.trivariate.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.trivariate.compute_trivariate": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Continuous",
    "DateTime",
    "Intermediate",
    "Nominal",
    "ValueError",
    "bool",
    "dask.dataframe.DataFrame",
    "dataprep.eda.distribution.compute.trivariate.dask",
    "detect_dtype",
    "drop_null",
    "int",
    "is_dtype",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.trivariate.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.trivariate.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.distribution.compute.univariate.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.PorterStemmer": {
  "data": {
   "shadows": "nltk.stem.PorterStemmer"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.WordNetLemmatizer": {
  "data": {
   "shadows": "nltk.stem.WordNetLemmatizer"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.calc_box": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.dataframe.Series",
    "min",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.univariate.calc_cat_stats": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "dask.array.histogram",
    "dask.dataframe.DataFrame",
    "dask.dataframe.Series",
    "dask.dataframe.core.Scalar",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.univariate.calc_stats_dt": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "dask.dataframe.Series",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.univariate.calc_word_freq": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "bool",
    "dask.dataframe.DataFrame",
    "int",
    "nltk.stem.PorterStemmer",
    "nltk.stem.WordNetLemmatizer",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.univariate.chisquare": {
  "data": {
   "shadows": "dask.array.stats.chisquare"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.compute_univariate": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Continuous",
    "DateTime",
    "Intermediate",
    "Nominal",
    "TypeError",
    "bool",
    "cont_comps",
    "dask.dataframe.DataFrame",
    "dataprep.eda.distribution.compute.univariate.dask",
    "detect_dtype",
    "float",
    "hash",
    "int",
    "is_dtype",
    "nom_comps",
    "str",
    "typing.Any",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.univariate.cont_comps": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "calc_box",
    "dask.array.histogram",
    "dask.array.stats.chisquare",
    "dask.array.stats.kurtosis",
    "dask.array.stats.skew",
    "dask.dataframe.Series",
    "gaussian_kde",
    "int",
    "min",
    "normaltest",
    "numpy.inf",
    "numpy.linspace",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.univariate.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.ess": {
  "data": {
   "shadows": "english_stopwords"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.kurtosis": {
  "data": {
   "shadows": "dask.array.stats.kurtosis"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.nom_comps": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "bool",
    "calc_cat_stats",
    "calc_word_freq",
    "dask.array.stats.chisquare",
    "dask.dataframe.Series",
    "int",
    "isinstance",
    "pandas.Series",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.compute.univariate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.compute.univariate.skew": {
  "data": {
   "shadows": "dask.array.stats.skew"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.plot": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "Container",
    "ProgressBar",
    "bool",
    "compute",
    "dask.dataframe.DataFrame",
    "float",
    "int",
    "pandas.DataFrame",
    "render",
    "str",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.distribution.render.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.BasicTicker": {
  "data": {
   "shadows": "bokeh.models.BasicTicker"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.ColorBar": {
  "data": {
   "shadows": "bokeh.models.ColorBar"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.ColumnDataSource": {
  "data": {
   "shadows": "bokeh.models.ColumnDataSource"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.CustomJSHover": {
  "data": {
   "shadows": "bokeh.models.CustomJSHover"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.FactorRange": {
  "data": {
   "shadows": "bokeh.models.FactorRange"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.Figure": {
  "data": {
   "shadows": "bokeh.plotting.Figure"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.FuncTickFormatter": {
  "data": {
   "shadows": "bokeh.models.FuncTickFormatter"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.HoverTool": {
  "data": {
   "shadows": "bokeh.models.HoverTool"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.LayoutDOM": {
  "data": {
   "shadows": "bokeh.models.LayoutDOM"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.Legend": {
  "data": {
   "shadows": "bokeh.models.Legend"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.LegendItem": {
  "data": {
   "shadows": "bokeh.models.LegendItem"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.LinearColorMapper": {
  "data": {
   "shadows": "bokeh.models.LinearColorMapper"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.Panel": {
  "data": {
   "shadows": "bokeh.models.Panel"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.PrintfTickFormatter": {
  "data": {
   "shadows": "bokeh.models.PrintfTickFormatter"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.WordCloud": {
  "data": {
   "shadows": "wordcloud.WordCloud"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "dataprep.eda.distribution.render._empty_figure": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "bokeh.plotting.Figure",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render._format_axis": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "bokeh.plotting.Figure",
    "dataprep.eda.distribution.render._format_ticks",
    "dict",
    "float",
    "int",
    "max",
    "numpy.round",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render._format_bin_intervals": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "numpy.ndarray",
    "numpy.round",
    "range",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render._format_ticks": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "abs",
    "float",
    "int",
    "len",
    "numpy.round",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render._format_values": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "abs",
    "dict",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render._make_title": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.bar_viz": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "bokeh.plotting.Figure",
    "bool",
    "dataprep.eda.distribution.render._format_axis",
    "dataprep.eda.distribution.render.tweak_figure",
    "int",
    "len",
    "list",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.box_viz": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "abs",
    "bokeh.layouts.row",
    "bokeh.models.FuncTickFormatter",
    "bokeh.models.HoverTool",
    "bokeh.models.Panel",
    "bokeh.plotting.figure",
    "dataprep.eda.distribution.render._format_axis",
    "dataprep.eda.distribution.render._format_ticks",
    "dataprep.eda.distribution.render._make_title",
    "dataprep.eda.distribution.render.tweak_figure",
    "int",
    "len",
    "list",
    "max",
    "min",
    "numpy.float64",
    "numpy.nan",
    "numpy.round",
    "pandas.DataFrame",
    "pandas.Series",
    "range",
    "set",
    "str",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.box_viz_dt": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "abs",
    "bokeh.layouts.row",
    "bokeh.models.FuncTickFormatter",
    "bokeh.models.HoverTool",
    "bokeh.models.Panel",
    "bokeh.plotting.figure",
    "dataprep.eda.distribution.render._format_axis",
    "dataprep.eda.distribution.render._format_ticks",
    "dataprep.eda.distribution.render._make_title",
    "dataprep.eda.distribution.render.tweak_figure",
    "float",
    "int",
    "len",
    "list",
    "max",
    "min",
    "numpy.nan",
    "numpy.round",
    "pandas.DataFrame",
    "range",
    "set",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.cont_insights": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": [
    "numpy.round",
    "round",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.cumsum": {
  "data": {
   "shadows": "bokeh.transform.cumsum"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.dt_line_viz": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "bokeh.models.HoverTool",
    "bokeh.models.Panel",
    "bokeh.plotting.Figure",
    "bool",
    "dataprep.eda.distribution.render._format_axis",
    "dataprep.eda.distribution.render.tweak_figure",
    "float",
    "int",
    "pandas.DataFrame",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.dt_multiline_viz": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "bokeh.models.ColumnDataSource",
    "bokeh.models.HoverTool",
    "bokeh.models.Legend",
    "bokeh.models.Panel",
    "bokeh.plotting.figure",
    "dataprep.eda.distribution.render._format_axis",
    "dataprep.eda.distribution.render._make_title",
    "dataprep.eda.distribution.render.tweak_figure",
    "dict",
    "int",
    "len",
    "list",
    "max",
    "min",
    "numpy.Inf",
    "numpy.ndarray",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.figure": {
  "data": {
   "shadows": "bokeh.plotting.figure"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.format_cat_stats": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "dataprep.eda.distribution.render._format_values",
    "dict",
    "len",
    "str",
    "typing.Any",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.format_num_stats": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "dataprep.eda.distribution.render._format_values",
    "float",
    "numpy.nan",
    "numpy.round",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.format_ov_stats": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "dataprep.eda.distribution.render._format_values",
    "float",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.heatmap_viz": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "bokeh.models.BasicTicker",
    "bokeh.models.ColorBar",
    "bokeh.models.ColumnDataSource",
    "bokeh.models.FuncTickFormatter",
    "bokeh.models.HoverTool",
    "bokeh.models.LinearColorMapper",
    "bokeh.models.Panel",
    "bokeh.models.PrintfTickFormatter",
    "bokeh.plotting.figure",
    "bokeh.transform.transform",
    "dataprep.eda.distribution.render._make_title",
    "dataprep.eda.distribution.render.tweak_figure",
    "int",
    "len",
    "list",
    "pandas.DataFrame",
    "set",
    "sorted",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.hexbin": {
  "data": {
   "shadows": "bokeh.util.hex.hexbin"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.hexbin_viz": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "bokeh.models.ColorBar",
    "bokeh.models.HoverTool",
    "bokeh.models.LinearColorMapper",
    "bokeh.models.Panel",
    "bokeh.plotting.figure",
    "bokeh.transform.linear_cmap",
    "bokeh.util.hex.hexbin",
    "dataprep.eda.distribution.render._format_axis",
    "dataprep.eda.distribution.render.tweak_figure",
    "float",
    "int",
    "list",
    "max",
    "min",
    "pandas.DataFrame",
    "reversed",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.hist_viz": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "bokeh.models.HoverTool",
    "bokeh.plotting.Figure",
    "bool",
    "dataprep.eda.distribution.render._empty_figure",
    "dataprep.eda.distribution.render._format_axis",
    "dataprep.eda.distribution.render._format_bin_intervals",
    "dataprep.eda.distribution.render.tweak_figure",
    "int",
    "numpy.ndarray",
    "pandas.DataFrame",
    "str",
    "sum",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.kde_viz": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "bokeh.layouts.row",
    "bokeh.models.HoverTool",
    "bokeh.models.Panel",
    "bokeh.plotting.Figure",
    "dataprep.eda.distribution.render._format_axis",
    "dataprep.eda.distribution.render._format_bin_intervals",
    "dataprep.eda.distribution.render.tweak_figure",
    "int",
    "kde",
    "len",
    "max",
    "numpy.linspace",
    "numpy.ndarray",
    "pandas.DataFrame",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.line_viz": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "bokeh.layouts.row",
    "bokeh.models.ColumnDataSource",
    "bokeh.models.HoverTool",
    "bokeh.models.Legend",
    "bokeh.models.Panel",
    "bokeh.plotting.Figure",
    "bokeh.plotting.figure",
    "dataprep.eda.distribution.render._format_axis",
    "dataprep.eda.distribution.render._format_bin_intervals",
    "dataprep.eda.distribution.render._make_title",
    "dataprep.eda.distribution.render.tweak_figure",
    "int",
    "len",
    "max",
    "min",
    "pandas.DataFrame",
    "range",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.linear_cmap": {
  "data": {
   "shadows": "bokeh.transform.linear_cmap"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.nested_viz": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "bokeh.models.ColumnDataSource",
    "bokeh.models.FactorRange",
    "bokeh.models.Panel",
    "bokeh.plotting.figure",
    "dataprep.eda.distribution.render._format_axis",
    "dataprep.eda.distribution.render._make_title",
    "dataprep.eda.distribution.render.tweak_figure",
    "int",
    "len",
    "list",
    "numpy.pi",
    "pandas.DataFrame",
    "str",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.nom_insights": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": [
    "len",
    "range",
    "round",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.norm": {
  "data": {
   "shadows": "scipy.stats.norm"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.pie_viz": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "bokeh.layouts.row",
    "bokeh.models.Legend",
    "bokeh.models.LegendItem",
    "bokeh.models.Panel",
    "bokeh.plotting.Figure",
    "bokeh.transform.cumsum",
    "dataprep.eda.distribution.render.tweak_figure",
    "dict",
    "int",
    "len",
    "list",
    "numpy.pi",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.qqnorm_viz": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "bokeh.layouts.row",
    "bokeh.models.Panel",
    "bokeh.plotting.Figure",
    "dataprep.eda.distribution.render._format_axis",
    "dataprep.eda.distribution.render.tweak_figure",
    "float",
    "int",
    "numpy.concatenate",
    "numpy.linspace",
    "pandas.Series",
    "scipy.stats.norm.ppf",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.render": {
  "data": {
   "lineno": 1986,
   "symbols_in_volume": [
    "bokeh.models.LayoutDOM",
    "dataprep.eda.distribution.render.render_cat",
    "dataprep.eda.distribution.render.render_cat_num",
    "dataprep.eda.distribution.render.render_distribution_grid",
    "dataprep.eda.distribution.render.render_dt",
    "dataprep.eda.distribution.render.render_dt_cat",
    "dataprep.eda.distribution.render.render_dt_num",
    "dataprep.eda.distribution.render.render_dt_num_cat",
    "dataprep.eda.distribution.render.render_num",
    "dataprep.eda.distribution.render.render_two_cat",
    "dataprep.eda.distribution.render.render_two_num",
    "float",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.render_cat": {
  "data": {
   "lineno": 1465,
   "symbols_in_volume": [
    "bokeh.layouts.row",
    "bokeh.models.Panel",
    "dataprep.eda.distribution.render.bar_viz",
    "dataprep.eda.distribution.render.format_cat_stats",
    "dataprep.eda.distribution.render.hist_viz",
    "dataprep.eda.distribution.render.pie_viz",
    "dataprep.eda.distribution.render.wordcloud_viz",
    "dataprep.eda.distribution.render.wordfreq_viz",
    "int",
    "nom_insights",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.render_cat_num": {
  "data": {
   "lineno": 1734,
   "symbols_in_volume": [
    "bokeh.models.Panel",
    "dataprep.eda.distribution.render.box_viz",
    "dataprep.eda.distribution.render.line_viz",
    "int",
    "list",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.render_distribution_grid": {
  "data": {
   "lineno": 1422,
   "symbols_in_volume": [
    "Continuous",
    "DateTime",
    "Nominal",
    "bokeh.plotting.Figure",
    "dataprep.eda.distribution.render.bar_viz",
    "dataprep.eda.distribution.render.dt_line_viz",
    "dataprep.eda.distribution.render.format_ov_stats",
    "dataprep.eda.distribution.render.hist_viz",
    "int",
    "is_dtype",
    "list",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.render_dt": {
  "data": {
   "lineno": 1713,
   "symbols_in_volume": [
    "bokeh.models.Panel",
    "dataprep.eda.distribution.render.dt_line_viz",
    "dataprep.eda.distribution.render.stats_viz_dt",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.render_dt_cat": {
  "data": {
   "lineno": 1920,
   "symbols_in_volume": [
    "bokeh.models.Panel",
    "dataprep.eda.distribution.render.dt_multiline_viz",
    "dataprep.eda.distribution.render.stacked_viz",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.render_dt_num": {
  "data": {
   "lineno": 1877,
   "symbols_in_volume": [
    "bokeh.models.Panel",
    "dataprep.eda.distribution.render.box_viz_dt",
    "dataprep.eda.distribution.render.dt_line_viz",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.render_dt_num_cat": {
  "data": {
   "lineno": 1954,
   "symbols_in_volume": [
    "bokeh.models.Panel",
    "dataprep.eda.distribution.render.dt_multiline_viz",
    "int",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.render_num": {
  "data": {
   "lineno": 1594,
   "symbols_in_volume": [
    "bokeh.layouts.row",
    "bokeh.models.Panel",
    "cont_insights",
    "dataprep.eda.distribution.render.box_viz",
    "dataprep.eda.distribution.render.format_num_stats",
    "dataprep.eda.distribution.render.hist_viz",
    "dataprep.eda.distribution.render.kde_viz",
    "dataprep.eda.distribution.render.qqnorm_viz",
    "int",
    "kde",
    "pandas.DataFrame",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.render_two_cat": {
  "data": {
   "lineno": 1827,
   "symbols_in_volume": [
    "bokeh.models.Panel",
    "dataprep.eda.distribution.render.heatmap_viz",
    "dataprep.eda.distribution.render.nested_viz",
    "dataprep.eda.distribution.render.stacked_viz",
    "int",
    "len",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.render_two_num": {
  "data": {
   "lineno": 1776,
   "symbols_in_volume": [
    "AttributeError",
    "bokeh.models.Panel",
    "dataprep.eda.distribution.render.box_viz",
    "dataprep.eda.distribution.render.hexbin_viz",
    "dataprep.eda.distribution.render.scatter_viz",
    "float",
    "int",
    "list",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.row": {
  "data": {
   "shadows": "bokeh.layouts.row"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.scatter_viz": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "bokeh.models.Panel",
    "bokeh.plotting.figure",
    "dataprep.eda.distribution.render._format_axis",
    "dataprep.eda.distribution.render.tweak_figure",
    "int",
    "len",
    "pandas.DataFrame",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.stacked_viz": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "bokeh.models.ColumnDataSource",
    "bokeh.models.CustomJSHover",
    "bokeh.models.HoverTool",
    "bokeh.models.Legend",
    "bokeh.models.Panel",
    "bokeh.plotting.figure",
    "dataprep.eda.distribution.render._format_axis",
    "dataprep.eda.distribution.render._make_title",
    "dataprep.eda.distribution.render.tweak_figure",
    "dict",
    "int",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.concat",
    "str",
    "typing.Dict",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.stats_viz_dt": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "dataprep.eda.distribution.render._format_values",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.transform": {
  "data": {
   "shadows": "bokeh.transform.transform"
  },
  "type": "import"
 },
 "dataprep.eda.distribution.render.tweak_figure": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "bokeh.models.FuncTickFormatter",
    "bokeh.plotting.Figure",
    "bool",
    "int",
    "numpy.pi",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.wordcloud_viz": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "bokeh.layouts.row",
    "bokeh.models.Panel",
    "bokeh.plotting.figure",
    "int",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.full",
    "numpy.load",
    "numpy.uint32",
    "numpy.uint8",
    "pandas.Series",
    "pathlib.Path",
    "wordcloud.WordCloud"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.distribution.render.wordfreq_viz": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "bokeh.layouts.row",
    "bokeh.models.Panel",
    "bokeh.plotting.Figure",
    "bokeh.plotting.figure",
    "bool",
    "dataprep.eda.distribution.render._format_axis",
    "dataprep.eda.distribution.render.tweak_figure",
    "int",
    "list",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.dtypes": {
  "data": {
   "symbols_in_volume": [
    "dataprep.eda.dtypes.CATEGORICAL_NUMPY_DTYPES",
    "dataprep.eda.dtypes.CATEGORICAL_PANDAS_DTYPES",
    "dataprep.eda.dtypes.DATETIME_NUMPY_DTYPES",
    "dataprep.eda.dtypes.DATETIME_PANDAS_DTYPES",
    "dataprep.eda.dtypes.DType",
    "dataprep.eda.dtypes.NUMERICAL_NUMPY_DTYPES",
    "dataprep.eda.dtypes.STRING_PANDAS_DTYPES",
    "float",
    "numpy.bool",
    "numpy.datetime64",
    "numpy.number",
    "numpy.object",
    "pandas.CategoricalDtype",
    "pandas.DatetimeTZDtype",
    "pandas.PeriodDtype",
    "pandas.StringDtype",
    "str",
    "typing.Dict",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "dataprep.eda.dtypes.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.dtypes.CATEGORICAL_DTYPES": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dataprep.eda.dtypes.CATEGORICAL_NUMPY_DTYPES": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "dataprep.eda.dtypes.CATEGORICAL_PANDAS_DTYPES": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dataprep.eda.dtypes.Categorical": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dataprep.eda.dtypes.DType"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.dtypes.Continuous": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "dataprep.eda.dtypes.Numerical"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.dtypes.DATETIME_DTYPES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "dataprep.eda.dtypes.DATETIME_NUMPY_DTYPES": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "dataprep.eda.dtypes.DATETIME_PANDAS_DTYPES": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "dataprep.eda.dtypes.DType": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "dataprep.eda.dtypes.DTypeDef": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "dataprep.eda.dtypes.DTypeDict": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "dataprep.eda.dtypes.DTypeOrStr": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "dataprep.eda.dtypes.DateTime": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "dataprep.eda.dtypes.Numerical"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.dtypes.DefaultDict": {
  "data": {
   "shadows": "typing.DefaultDict"
  },
  "type": "import"
 },
 "dataprep.eda.dtypes.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.dtypes.Discrete": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "dataprep.eda.dtypes.Numerical"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.dtypes.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.eda.dtypes.NULL_VALUES": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "dataprep.eda.dtypes.NUMERICAL_DTYPES": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "dataprep.eda.dtypes.NUMERICAL_NUMPY_DTYPES": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "dataprep.eda.dtypes.Nominal": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dataprep.eda.dtypes.Categorical"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.dtypes.Numerical": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "dataprep.eda.dtypes.DType"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.dtypes.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.dtypes.Ordinal": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "dataprep.eda.dtypes.Categorical"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.dtypes.STRING_DTYPES": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "dataprep.eda.dtypes.STRING_PANDAS_DTYPES": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "dataprep.eda.dtypes.Text": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "dataprep.eda.dtypes.Nominal"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.dtypes.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.dtypes.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "dataprep.eda.dtypes.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.eda.dtypes.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.dtypes.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "dataprep.eda.dtypes.detect_dtype": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "dask.dataframe.Series",
    "dataprep.eda.dtypes.DType",
    "dataprep.eda.dtypes.DTypeDef",
    "detect_without_known",
    "dict",
    "isinstance",
    "map_dtype",
    "normalize_dtype",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.dtypes.detect_without_known": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "dask.dataframe.Series",
    "dataprep.eda.dtypes.Continuous",
    "dataprep.eda.dtypes.DType",
    "dataprep.eda.dtypes.DateTime",
    "dataprep.eda.dtypes.Nominal",
    "is_continuous",
    "is_datetime",
    "is_nominal"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.dtypes.drop_null": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "dask.dataframe.DataFrame",
    "dask.dataframe.Series",
    "dataprep.eda.dtypes.NULL_VALUES",
    "dataprep.eda.dtypes.is_datetime",
    "isinstance",
    "pandas.DataFrame",
    "pandas.Series",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.dtypes.get_dtype_cnts_and_num_cols": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "NotImplementedError",
    "collections.defaultdict",
    "dask.dataframe.DataFrame",
    "dataprep.eda.dtypes.Continuous",
    "dataprep.eda.dtypes.DType",
    "dataprep.eda.dtypes.DateTime",
    "dataprep.eda.dtypes.Nominal",
    "dataprep.eda.dtypes.detect_dtype",
    "dataprep.eda.dtypes.is_dtype",
    "dtype",
    "int",
    "str",
    "typing.DefaultDict",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "typing.Type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.dtypes.is_continuous": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "any",
    "bool",
    "dataprep.eda.dtypes.NUMERICAL_NUMPY_DTYPES",
    "dtype",
    "dtype.type",
    "issubclass",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.dtypes.is_datetime": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "any",
    "bool",
    "dataprep.eda.dtypes.DATETIME_NUMPY_DTYPES",
    "dataprep.eda.dtypes.DATETIME_PANDAS_DTYPES",
    "dtype",
    "dtype.type",
    "isinstance",
    "issubclass",
    "numpy.dtype",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.dtypes.is_dtype": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "bool",
    "dataprep.eda.dtypes.DType",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.dtypes.is_nominal": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "any",
    "bool",
    "dataprep.eda.dtypes.CATEGORICAL_NUMPY_DTYPES",
    "dataprep.eda.dtypes.CATEGORICAL_PANDAS_DTYPES",
    "dtype",
    "dtype.type",
    "is_continuous",
    "is_datetime",
    "isinstance",
    "issubclass",
    "numpy.dtype",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.dtypes.is_pandas_categorical": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "any",
    "bool",
    "dataprep.eda.dtypes.CATEGORICAL_PANDAS_DTYPES",
    "dtype",
    "isinstance",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.dtypes.map_dtype": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "dataprep.eda.dtypes.Categorical",
    "dataprep.eda.dtypes.Continuous",
    "dataprep.eda.dtypes.DType",
    "dataprep.eda.dtypes.Discrete",
    "dataprep.eda.dtypes.Nominal",
    "dataprep.eda.dtypes.Numerical",
    "dataprep.eda.dtypes.Ordinal",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.dtypes.normalize_dtype": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "dataprep.eda.dtypes.Categorical",
    "dataprep.eda.dtypes.Continuous",
    "dataprep.eda.dtypes.DType",
    "dataprep.eda.dtypes.DateTime",
    "dataprep.eda.dtypes.Discrete",
    "dataprep.eda.dtypes.Nominal",
    "dataprep.eda.dtypes.Numerical",
    "dataprep.eda.dtypes.Ordinal",
    "dataprep.eda.dtypes.Text",
    "dtype",
    "isinstance",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.dtypes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.dtypes.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.dtypes.string_dtype_to_object": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "any",
    "dask.dataframe.DataFrame",
    "dataprep.eda.dtypes.STRING_DTYPES",
    "isinstance",
    "object"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.intermediate": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.intermediate.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.intermediate.ColumnMetadata": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.intermediate.ColumnMetadata.__getitem__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.intermediate.ColumnMetadata.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.intermediate.ColumnsMetadata": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.intermediate.ColumnsMetadata.__getitem__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ColumnMetadata",
    "isinstance",
    "str",
    "tuple",
    "typing.Any",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.intermediate.ColumnsMetadata.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.intermediate.ColumnsMetadata.__setitem__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "pandas.Series",
    "str",
    "tuple",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.intermediate.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.intermediate.Intermediate": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.intermediate.Intermediate.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "super",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.intermediate.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.intermediate.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.eda.intermediate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.missing": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.missing.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.missing.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.eda.missing.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "dataprep.eda.missing.compute": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.missing.compute.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "dataprep.eda.missing.compute.bivariate": {
  "data": {
   "symbols_in_volume": [
    "dataprep.eda.missing.compute.bivariate._compute_missing_bivariate",
    "staged"
   ]
  },
  "type": "module"
 },
 "dataprep.eda.missing.compute.bivariate.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.bivariate.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.bivariate.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.bivariate.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.bivariate._compute_missing_bivariate": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ColumnsMetadata",
    "Continuous",
    "Intermediate",
    "dask.dataframe.from_dask_array",
    "detect_dtype",
    "float",
    "histogram",
    "int",
    "is_dtype",
    "len",
    "numpy.argsort",
    "numpy.concatenate",
    "numpy.linspace",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.repeat",
    "numpy.tile",
    "pandas.DataFrame",
    "scipy.stats.rv_histogram",
    "str",
    "typing.Any",
    "typing.Generator",
    "typing.List",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.bivariate.compute_missing_bivariate": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "dataprep.eda.missing.compute.bivariate.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.bivariate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.bivariate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.bivariate.rv_histogram": {
  "data": {
   "shadows": "scipy.stats.rv_histogram"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.catch_warnings": {
  "data": {
   "shadows": "warnings.catch_warnings"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.common": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.missing.compute.common.LABELS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dataprep.eda.missing.compute.common.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.common.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.common.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.common.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.common.histogram": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Continuous",
    "Nominal",
    "ValueError",
    "bool",
    "dask.array.Array",
    "dask.array.histogram",
    "dask.dataframe.from_dask_array",
    "detect_dtype",
    "int",
    "is_dtype",
    "len",
    "range",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.common.uni_histogram": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Continuous",
    "Nominal",
    "ValueError",
    "dask.array.Array",
    "dask.array.histogram",
    "dask.dataframe.Series",
    "detect_dtype",
    "int",
    "is_dtype",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.compute_missing": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "DataArray",
    "RuntimeWarning",
    "ValueError",
    "compute_missing_bivariate",
    "compute_missing_nullivariate",
    "compute_missing_univariate",
    "int",
    "str",
    "string_dtype_to_object",
    "typing.Optional",
    "typing.cast",
    "warnings.catch_warnings",
    "warnings.filterwarnings"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.filterwarnings": {
  "data": {
   "shadows": "warnings.filterwarnings"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.nullivariate": {
  "data": {
   "symbols_in_volume": [
    "dataprep.eda.missing.compute.nullivariate._compute_missing_nullivariate",
    "staged"
   ]
  },
  "type": "module"
 },
 "dataprep.eda.missing.compute.nullivariate.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.nullivariate.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.nullivariate.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.nullivariate.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.nullivariate.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.nullivariate.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.nullivariate.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.nullivariate._compute_missing_nullivariate": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "Intermediate",
    "cut_long_name",
    "enumerate",
    "int",
    "missing_bars",
    "missing_col_cnt",
    "missing_dendrogram",
    "missing_heatmap",
    "missing_most_col",
    "missing_most_row",
    "missing_row_cnt",
    "missing_spectrum",
    "pandas.DataFrame",
    "round",
    "str",
    "typing.Any",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.nullivariate.compute_missing_nullivariate": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "dataprep.eda.missing.compute.nullivariate.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.nullivariate.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.nullivariate.delayed": {
  "data": {
   "shadows": "dask.delayed"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.nullivariate.hierarchy": {
  "data": {
   "shadows": "scipy.cluster.hierarchy"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.nullivariate.missing_bars": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.dataframe.core.Scalar",
    "numpy.ndarray",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.nullivariate.missing_col_cnt": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.nullivariate.missing_dendrogram": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "dask.delayed",
    "scipy.cluster.hierarchy.dendrogram",
    "scipy.cluster.hierarchy.linkage",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.nullivariate.missing_heatmap": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "dask.array.corrcoef",
    "pandas.DataFrame",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.nullivariate.missing_most_col": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "dask.array.where",
    "float",
    "int",
    "typing.Any",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.nullivariate.missing_most_row": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "dask.array.where",
    "float",
    "int",
    "typing.Any",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.nullivariate.missing_perc_blockwise": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "int",
    "numpy.ndarray",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.nullivariate.missing_perc_blockwise.imp": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.nullivariate.missing_row_cnt": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.nullivariate.missing_spectrum": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "dask.array.Array",
    "dask.array.arange",
    "dask.array.concatenate",
    "dask.array.from_array",
    "dask.array.minimum",
    "dask.array.repeat",
    "dask.array.tile",
    "dataprep.eda.missing.compute.nullivariate.missing_perc_blockwise",
    "float",
    "int",
    "max",
    "min",
    "numpy.ceil",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.nullivariate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.nullivariate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.univariate": {
  "data": {
   "symbols_in_volume": [
    "dataprep.eda.missing.compute.univariate._compute_missing_univariate",
    "staged"
   ]
  },
  "type": "module"
 },
 "dataprep.eda.missing.compute.univariate.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.univariate.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.univariate.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.univariate.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.univariate._compute_missing_univariate": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ColumnsMetadata",
    "Intermediate",
    "Nominal",
    "detect_dtype",
    "float",
    "int",
    "is_dtype",
    "len",
    "numpy.argsort",
    "numpy.concatenate",
    "numpy.repeat",
    "pandas.DataFrame",
    "str",
    "typing.Any",
    "typing.Generator",
    "typing.List",
    "typing.Optional",
    "uni_histogram",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.compute.univariate.compute_missing_univariate": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "dataprep.eda.missing.compute.univariate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.missing.compute.univariate.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.missing.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.missing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.missing.plot_missing": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "Container",
    "ProgressBar",
    "bool",
    "compute_missing",
    "dask.dataframe.DataFrame",
    "int",
    "pandas.DataFrame",
    "render_missing",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.missing.render.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.BasicTicker": {
  "data": {
   "shadows": "bokeh.models.BasicTicker"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.CategoricalColorMapper": {
  "data": {
   "shadows": "bokeh.models.CategoricalColorMapper"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.ColorBar": {
  "data": {
   "shadows": "bokeh.models.ColorBar"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.ColumnDataSource": {
  "data": {
   "shadows": "bokeh.models.ColumnDataSource"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.CustomJSHover": {
  "data": {
   "shadows": "bokeh.models.CustomJSHover"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.FactorRange": {
  "data": {
   "shadows": "bokeh.models.FactorRange"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.Figure": {
  "data": {
   "shadows": "bokeh.plotting.Figure"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.FuncTickFormatter": {
  "data": {
   "shadows": "bokeh.models.FuncTickFormatter"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.HoverTool": {
  "data": {
   "shadows": "bokeh.models.HoverTool"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.LinearColorMapper": {
  "data": {
   "shadows": "bokeh.models.LinearColorMapper"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.NumeralTickFormatter": {
  "data": {
   "shadows": "bokeh.models.NumeralTickFormatter"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.Panel": {
  "data": {
   "shadows": "bokeh.models.Panel"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.PrintfTickFormatter": {
  "data": {
   "shadows": "bokeh.models.PrintfTickFormatter"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.Range1d": {
  "data": {
   "shadows": "bokeh.models.Range1d"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.Title": {
  "data": {
   "shadows": "bokeh.models.Title"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.__all__": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "dataprep.eda.missing.render.create_color_mapper": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "bokeh.models.BasicTicker",
    "bokeh.models.ColorBar",
    "bokeh.models.LinearColorMapper",
    "bokeh.models.NumeralTickFormatter",
    "list",
    "reversed",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render.create_color_mapper_heatmap": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "bokeh.models.BasicTicker",
    "bokeh.models.ColorBar",
    "bokeh.models.LinearColorMapper",
    "bokeh.models.PrintfTickFormatter",
    "str",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.render_bar_chart": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "bokeh.models.ColumnDataSource",
    "bokeh.models.CustomJSHover",
    "bokeh.models.HoverTool",
    "bokeh.plotting.Figure",
    "dataprep.eda.missing.render.tweak_figure",
    "dict",
    "enumerate",
    "int",
    "len",
    "list",
    "numpy.ndarray",
    "pandas.DataFrame",
    "relocate_legend",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render.render_boxwhisker": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "bokeh.plotting.Figure",
    "dataprep.eda.missing.render.tweak_figure",
    "int",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render.render_dendrogram": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "bokeh.models.ColumnDataSource",
    "bokeh.models.HoverTool",
    "bokeh.plotting.Figure",
    "dict",
    "int",
    "len",
    "list",
    "numpy.pi",
    "range",
    "round",
    "typing.Any",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render.render_dist": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "bokeh.models.Range1d",
    "bokeh.plotting.Figure",
    "dataprep.eda.missing.render.tweak_figure",
    "enumerate",
    "int",
    "pandas.DataFrame",
    "relocate_legend",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render.render_heatmaps": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "bokeh.models.FactorRange",
    "bokeh.plotting.Figure",
    "dataprep.eda.missing.render.create_color_mapper_heatmap",
    "dataprep.eda.missing.render.tweak_figure",
    "drop_null",
    "empty_figure",
    "int",
    "numpy.bool",
    "numpy.ones",
    "numpy.triu",
    "pandas.DataFrame",
    "reversed",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render.render_heatmaps.empty_figure": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "bokeh.plotting.Figure"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render.render_hist": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "Nominal",
    "bokeh.layouts.row",
    "bokeh.layouts.row.lower_bound",
    "bokeh.layouts.row.upper_bound",
    "bokeh.models.CategoricalColorMapper",
    "bokeh.models.FactorRange",
    "bokeh.models.Range1d",
    "bokeh.plotting.Figure",
    "bool",
    "dataprep.eda.missing.render.tweak_figure",
    "int",
    "is_dtype",
    "pandas.DataFrame",
    "relocate_legend",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render.render_missing": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "int",
    "render_missing_impact",
    "render_missing_impact_1v1",
    "render_missing_impact_1vn",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render.render_missing_impact": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "bokeh.layouts.row",
    "bokeh.models.Panel",
    "int",
    "render_bar_chart",
    "render_dendrogram",
    "render_heatmaps",
    "render_missing_spectrum",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render.render_missing_impact_1v1": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "Continuous",
    "bokeh.models.Panel",
    "dataprep.eda.missing.render.render_boxwhisker",
    "dataprep.eda.missing.render.render_dist",
    "dataprep.eda.missing.render.render_hist",
    "int",
    "is_dtype",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render.render_missing_impact_1vn": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "bokeh.models.Panel",
    "bokeh.models.Title",
    "dataprep.eda.missing.render.render_hist",
    "int",
    "len",
    "range",
    "str",
    "typing.Any",
    "typing.Dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render.render_missing_spectrum": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "bokeh.models.FactorRange",
    "bokeh.models.Range1d",
    "bokeh.plotting.Figure",
    "cut_long_name",
    "dataprep.eda.missing.render.create_color_mapper",
    "dataprep.eda.missing.render.tweak_figure",
    "fuse_missing_perc",
    "int",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.missing.render.row": {
  "data": {
   "shadows": "bokeh.layouts.row"
  },
  "type": "import"
 },
 "dataprep.eda.missing.render.tweak_figure": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "bokeh.models.FuncTickFormatter",
    "bokeh.plotting.Figure",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.outlier": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.outlier.computation": {
  "data": {},
  "type": "module"
 },
 "dataprep.eda.outlier.computation.DEFAULT_PARTITIONS": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "dataprep.eda.outlier.computation._calc_cat_outlier": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Intermediate",
    "dask.dataframe.DataFrame",
    "int",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.outlier.computation._calc_num_outlier": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Intermediate",
    "abs",
    "dask.dataframe.DataFrame",
    "dask.dataframe.from_dask_array",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.outlier.computation.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.output_notebook": {
  "data": {
   "shadows": "bokeh.io.output_notebook"
  },
  "type": "import"
 },
 "dataprep.eda.palette": {
  "data": {
   "symbols_in_volume": [
    "bokeh.palettes.Category10",
    "bokeh.palettes.Category20",
    "bokeh.palettes.Greys256",
    "bokeh.palettes.Pastel1",
    "bokeh.palettes.viridis"
   ]
  },
  "type": "module"
 },
 "dataprep.eda.palette.BRG": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "dataprep.eda.palette.CATEGORY10": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "dataprep.eda.palette.CATEGORY20": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "dataprep.eda.palette.Category10": {
  "data": {
   "shadows": "bokeh.palettes.Category10"
  },
  "type": "import"
 },
 "dataprep.eda.palette.Category20": {
  "data": {
   "shadows": "bokeh.palettes.Category20"
  },
  "type": "import"
 },
 "dataprep.eda.palette.GREYS256": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "dataprep.eda.palette.Greys256": {
  "data": {
   "shadows": "bokeh.palettes.Greys256"
  },
  "type": "import"
 },
 "dataprep.eda.palette.PASTEL1": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "dataprep.eda.palette.Pastel1": {
  "data": {
   "shadows": "bokeh.palettes.Pastel1"
  },
  "type": "import"
 },
 "dataprep.eda.palette.RDBU": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "dataprep.eda.palette.VIRIDIS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "dataprep.eda.palette.viridis": {
  "data": {
   "shadows": "bokeh.palettes.viridis"
  },
  "type": "import"
 },
 "dataprep.eda.progress_bar": {
  "data": {
   "symbols_in_volume": [
    "is_notebook"
   ]
  },
  "type": "module"
 },
 "dataprep.eda.progress_bar.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.progress_bar.Callback": {
  "data": {
   "shadows": "dask.callbacks.Callback"
  },
  "type": "import"
 },
 "dataprep.eda.progress_bar.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "dataprep.eda.progress_bar.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "dataprep.eda.progress_bar.ProgressBar": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "bool",
    "dask.callbacks.Callback",
    "float",
    "int",
    "str",
    "tqdm.tqdm",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "dataprep.eda.progress_bar.ProgressBar.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.progress_bar.ProgressBar._count_tasks": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "sum",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.progress_bar.ProgressBar._finish": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dataprep.eda.progress_bar.sys",
    "print",
    "str",
    "time.time",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.progress_bar.ProgressBar._init_pbar": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.progress_bar.ProgressBar._posttask": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "time.time",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.progress_bar.ProgressBar._pretask": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "str",
    "time.time",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.progress_bar.ProgressBar._start": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.progress_bar.ProgressBar._start_state": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "str",
    "time.time",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.progress_bar.ProgressBar._update_bar": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.progress_bar.ProgressBar.register": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.progress_bar.ProgressBar.unregister": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.progress_bar.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.progress_bar.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.eda.progress_bar.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "dataprep.eda.progress_bar.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "dataprep.eda.progress_bar.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "dataprep.eda.staged": {
  "data": {
   "symbols_in_volume": [
    "typing.Any",
    "typing.Callable",
    "typing.Generator"
   ]
  },
  "type": "module"
 },
 "dataprep.eda.staged.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.eda.staged.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "dataprep.eda.staged.Completion": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "dataprep.eda.staged.Decoratee": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "dataprep.eda.staged.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "dataprep.eda.staged.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "dataprep.eda.staged.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.eda.staged.cast": {
  "data": {
   "shadows": "typing.cast"
  },
  "type": "import"
 },
 "dataprep.eda.staged.dask": {
  "data": {
   "shadows": "dask"
  },
  "type": "import"
 },
 "dataprep.eda.staged.staged": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dataprep.eda.staged.Completion",
    "dataprep.eda.staged.Decoratee",
    "typing.Any",
    "typing.Callable",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.staged.staged.staged_imp": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "bool",
    "completion",
    "dataprep.eda.staged.Completion",
    "dataprep.eda.staged.dask",
    "func",
    "next",
    "typing.Any",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.staged.staged.staged_imp.completion": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "RuntimeError",
    "StopIteration",
    "typing.Any",
    "typing.cast"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dataprep.eda.utils.logging"
   ]
  },
  "type": "module"
 },
 "dataprep.eda.utils.Figure": {
  "data": {
   "shadows": "bokeh.plotting.Figure"
  },
  "type": "import"
 },
 "dataprep.eda.utils.LOGGER": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "dataprep.eda.utils.Legend": {
  "data": {
   "shadows": "bokeh.models.Legend"
  },
  "type": "import"
 },
 "dataprep.eda.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "dataprep.eda.utils.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "dataprep.eda.utils.cut_long_name": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "int",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.utils.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.eda.utils.fuse_missing_perc": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dataprep.eda.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.eda.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.eda.utils.relocate_legend": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bokeh.models.Legend",
    "bokeh.plotting.Figure",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.utils.sample_n": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.floor",
    "numpy.linspace",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "dataprep.eda.utils.to_dask": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dask.dataframe.Series",
    "dask.dataframe.from_pandas",
    "isinstance",
    "math.ceil",
    "pandas.DataFrame",
    "pandas.Series",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "dataprep.errors": {
  "data": {},
  "type": "module"
 },
 "dataprep.errors.DataprepError": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "dataprep.errors.UnreachableError": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dataprep.errors.DataprepError"
   ]
  },
  "type": "class"
 },
 "dataprep.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dataprep.tests": {
  "data": {},
  "type": "module"
 },
 "dataprep.tests.clean": {
  "data": {},
  "type": "module"
 },
 "dataprep.tests.clean.test_clean_country": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dataprep.tests.clean.test_clean_country.logging"
   ]
  },
  "type": "module"
 },
 "dataprep.tests.clean.test_clean_country.LOGGER": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "dataprep.tests.clean.test_clean_country.df_countries": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_country.pytest",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.df_typo_countries": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_country.pytest",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_country.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_country.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_country.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_country.test_clean_default": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "clean_country",
    "dataprep.tests.clean.test_clean_country.df_countries",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_clean_fuzzy_dist": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "clean_country",
    "dataprep.tests.clean.test_clean_country.df_typo_countries",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_clean_fuzzy_dist_input_format": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "clean_country",
    "dataprep.tests.clean.test_clean_country.df_countries",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_clean_fuzzy_dist_output_format": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "clean_country",
    "dataprep.tests.clean.test_clean_country.df_typo_countries",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_clean_inplace": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "clean_country",
    "dataprep.tests.clean.test_clean_country.df_countries",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_clean_input_format": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "clean_country",
    "dataprep.tests.clean.test_clean_country.df_countries",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_clean_input_format_strict": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "clean_country",
    "dataprep.tests.clean.test_clean_country.df_countries",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_clean_output_format": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "clean_country",
    "dataprep.tests.clean.test_clean_country.df_countries",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_clean_output_format_strict": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "clean_country",
    "dataprep.tests.clean.test_clean_country.df_countries",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_clean_strict": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "clean_country",
    "dataprep.tests.clean.test_clean_country.df_countries",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_input_format_output_format": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "clean_country",
    "dataprep.tests.clean.test_clean_country.df_countries",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_validate_series": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_country.df_countries",
    "pandas.DataFrame",
    "pandas.Series",
    "validate_country"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_validate_series_input_format": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_country.df_countries",
    "pandas.DataFrame",
    "pandas.Series",
    "validate_country"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_validate_series_strict": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_country.df_countries",
    "pandas.DataFrame",
    "pandas.Series",
    "validate_country"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_validate_series_strict_input_format": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_country.df_countries",
    "pandas.DataFrame",
    "pandas.Series",
    "validate_country"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_validate_value": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "validate_country"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_country.test_validate_value_input_format": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "validate_country"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_email": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dataprep.tests.clean.test_clean_email.logging"
   ]
  },
  "type": "module"
 },
 "dataprep.tests.clean.test_clean_email.LOGGER": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "dataprep.tests.clean.test_clean_email.df_broken_email": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_email.pytest",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_email.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_email.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_email.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_email.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_email.test_clean_default": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "clean_email",
    "dataprep.tests.clean.test_clean_email.df_broken_email",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_email.test_clean_fix_domain": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "clean_email",
    "dataprep.tests.clean.test_clean_email.df_broken_email",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_email.test_clean_inplace": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "clean_email",
    "dataprep.tests.clean.test_clean_email.df_broken_email",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_email.test_clean_pre_clean": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "clean_email",
    "dataprep.tests.clean.test_clean_email.df_broken_email",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_email.test_clean_split": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "clean_email",
    "dataprep.tests.clean.test_clean_email.df_broken_email",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_email.test_validate_series": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_email.df_broken_email",
    "pandas.DataFrame",
    "pandas.Series",
    "validate_email"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_email.test_validate_value": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "validate_email"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_ip": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dataprep.tests.clean.test_clean_ip.logging"
   ]
  },
  "type": "module"
 },
 "dataprep.tests.clean.test_clean_ip.LOGGER": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "dataprep.tests.clean.test_clean_ip.df_ips": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_ip.pytest",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_ip.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_ip.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_ip.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_ip.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_ip.test_clean_default": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "clean_ip",
    "dataprep.tests.clean.test_clean_ip.df_ips",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_ip.test_clean_input_ipv4": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "clean_ip",
    "dataprep.tests.clean.test_clean_ip.df_ips",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_ip.test_clean_input_ipv6": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "clean_ip",
    "dataprep.tests.clean.test_clean_ip.df_ips",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_ip.test_clean_output_binary": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "clean_ip",
    "dataprep.tests.clean.test_clean_ip.df_ips",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_ip.test_clean_output_full": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "clean_ip",
    "dataprep.tests.clean.test_clean_ip.df_ips",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_ip.test_clean_output_hexa": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "clean_ip",
    "dataprep.tests.clean.test_clean_ip.df_ips",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_ip.test_validate_series": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_ip.df_ips",
    "pandas.DataFrame",
    "pandas.Series",
    "validate_ip"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_ip.test_validate_value": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.nan",
    "validate_ip"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_lat_long": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dataprep.tests.clean.test_clean_lat_long.logging"
   ]
  },
  "type": "module"
 },
 "dataprep.tests.clean.test_clean_lat_long.LOGGER": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "dataprep.tests.clean.test_clean_lat_long.df_lat_long_column": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_lat_long.pytest",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_lat_long.df_separate_lat_long_columns": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_lat_long.pytest",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_lat_long.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_lat_long.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_lat_long.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_lat_long.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_lat_long.test_clean_default": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "clean_lat_long",
    "dataprep.tests.clean.test_clean_lat_long.df_lat_long_column",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_lat_long.test_clean_inplace": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "clean_lat_long",
    "dataprep.tests.clean.test_clean_lat_long.df_lat_long_column",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_lat_long.test_clean_lat_long_separate_columns_split": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "clean_lat_long",
    "dataprep.tests.clean.test_clean_lat_long.df_separate_lat_long_columns",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_lat_long.test_clean_output_format": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "clean_lat_long",
    "dataprep.tests.clean.test_clean_lat_long.df_lat_long_column",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_lat_long.test_clean_output_format_split": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "clean_lat_long",
    "dataprep.tests.clean.test_clean_lat_long.df_lat_long_column",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_lat_long.test_clean_split": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "clean_lat_long",
    "dataprep.tests.clean.test_clean_lat_long.df_lat_long_column",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_lat_long.test_clean_split_inplace": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "clean_lat_long",
    "dataprep.tests.clean.test_clean_lat_long.df_lat_long_column",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_lat_long.test_validate_series_lat": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_lat_long.df_separate_lat_long_columns",
    "pandas.DataFrame",
    "pandas.Series",
    "validate_lat_long"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_lat_long.test_validate_series_lat_long": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_lat_long.df_lat_long_column",
    "pandas.DataFrame",
    "pandas.Series",
    "validate_lat_long"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_lat_long.test_validate_value": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "validate_lat_long"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_phone": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dataprep.tests.clean.test_clean_phone.logging"
   ]
  },
  "type": "module"
 },
 "dataprep.tests.clean.test_clean_phone.LOGGER": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "dataprep.tests.clean.test_clean_phone.df_phone": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_phone.pytest",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_phone.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_phone.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_phone.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_phone.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_phone.test_clean_default": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "clean_phone",
    "dataprep.tests.clean.test_clean_phone.df_phone",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_phone.test_clean_inplace": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "clean_phone",
    "dataprep.tests.clean.test_clean_phone.df_phone",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_phone.test_clean_output_format": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "clean_phone",
    "dataprep.tests.clean.test_clean_phone.df_phone",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_phone.test_clean_split": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "clean_phone",
    "dataprep.tests.clean.test_clean_phone.df_phone",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_phone.test_clean_split_fix_missing": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "clean_phone",
    "dataprep.tests.clean.test_clean_phone.df_phone",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_phone.test_clean_split_inplace": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "clean_phone",
    "dataprep.tests.clean.test_clean_phone.df_phone",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_phone.test_clean_split_inplace_fix_missing": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "clean_phone",
    "dataprep.tests.clean.test_clean_phone.df_phone",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_phone.test_validate_series": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_phone.df_phone",
    "pandas.DataFrame",
    "pandas.Series",
    "validate_phone"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_phone.test_validate_value": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "validate_phone"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_url": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dataprep.tests.clean.test_clean_url.logging"
   ]
  },
  "type": "module"
 },
 "dataprep.tests.clean.test_clean_url.LOGGER": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "dataprep.tests.clean.test_clean_url.df_urls": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_url.pytest",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_url.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_url.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_url.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_url.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "dataprep.tests.clean.test_clean_url.test_clean_default": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "clean_url",
    "dataprep.tests.clean.test_clean_url.df_urls",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_url.test_clean_errors_ignore": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "clean_url",
    "dataprep.tests.clean.test_clean_url.df_urls",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_url.test_clean_inplace": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "clean_url",
    "dataprep.tests.clean.test_clean_url.df_urls",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_url.test_clean_split": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "clean_url",
    "dataprep.tests.clean.test_clean_url.df_urls",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_url.test_remove_auth_boolean": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "clean_url",
    "dataprep.tests.clean.test_clean_url.df_urls",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_url.test_remove_auth_list": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "clean_url",
    "dataprep.tests.clean.test_clean_url.df_urls",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_url.test_validate_series": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "dataprep.tests.clean.test_clean_url.df_urls",
    "pandas.DataFrame",
    "pandas.Series",
    "validate_url"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.clean.test_clean_url.test_validate_value": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "numpy.nan",
    "validate_url"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.connector": {
  "data": {},
  "type": "module"
 },
 "dataprep.tests.connector.test_integration": {
  "data": {},
  "type": "module"
 },
 "dataprep.tests.connector.test_integration.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "dataprep.tests.connector.test_integration.environ": {
  "data": {
   "shadows": "os.environ"
  },
  "type": "import"
 },
 "dataprep.tests.connector.test_integration.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "dataprep.tests.connector.test_integration.test_connector": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Connector",
    "dataprep.tests.connector.test_integration.asyncio",
    "dataprep.tests.connector.test_integration.pytest",
    "display_dataframe",
    "len",
    "os.environ",
    "os.environ.get"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.connector.test_integration.test_query_params": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Connector",
    "dataprep.tests.connector.test_integration.asyncio",
    "dataprep.tests.connector.test_integration.pytest",
    "len",
    "os.environ",
    "os.environ.get"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.connector.test_integration.test_requests": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Request"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.datasets": {
  "data": {},
  "type": "module"
 },
 "dataprep.tests.datasets.test_datasets": {
  "data": {},
  "type": "module"
 },
 "dataprep.tests.datasets.test_datasets.test_get_dataset_names": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "get_dataset_names",
    "len"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.datasets.test_datasets.test_load_dataset": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "get_dataset_names",
    "len",
    "load_dataset"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda": {
  "data": {},
  "type": "module"
 },
 "dataprep.tests.eda.test": {
  "data": {},
  "type": "module"
 },
 "dataprep.tests.eda.test.DateTime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test.TimeDelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test.test_dtypes": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "complex",
    "datetime.datetime.now",
    "datetime.timedelta",
    "is_continuous",
    "is_nominal",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_config": {
  "data": {},
  "type": "module"
 },
 "dataprep.tests.eda.test_config.test_bar": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "BarChart"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_config.test_hist": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "Histogram"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_config.test_word": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "WordCloud"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_create_report": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dataprep.tests.eda.test_create_report.logging"
   ]
  },
  "type": "module"
 },
 "dataprep.tests.eda.test_create_report.LOGGER": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "dataprep.tests.eda.test_create_report.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_create_report.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_create_report.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_create_report.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_create_report.platform": {
  "data": {
   "shadows": "sys.platform"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_create_report.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_create_report.simpledf": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dataprep.tests.eda.test_create_report.pytest",
    "numpy.arange",
    "numpy.random.choice",
    "numpy.random.rand",
    "numpy.random.shuffle",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_create_report.test_report": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "create_report",
    "dataprep.tests.eda.test_create_report.matplotlib",
    "dataprep.tests.eda.test_create_report.simpledf",
    "pandas.DataFrame",
    "sys.platform"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_create_report.test_report_show": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "create_report",
    "dataprep.tests.eda.test_create_report.matplotlib",
    "dataprep.tests.eda.test_create_report.simpledf",
    "pandas.DataFrame",
    "sys.platform"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dataprep.tests.eda.test_plot.logging"
   ]
  },
  "type": "module"
 },
 "dataprep.tests.eda.test_plot.LOGGER": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "dataprep.tests.eda.test_plot.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot.simpledf": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot.pytest",
    "numpy.arange",
    "numpy.random.choice",
    "numpy.random.rand",
    "numpy.random.shuffle",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "pandas.to_datetime",
    "to_dask"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot.test_sanity_compute_1": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot.simpledf",
    "plot"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot.test_sanity_compute_2": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot.simpledf",
    "plot"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot.test_sanity_compute_3": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot.simpledf",
    "plot"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot.test_sanity_compute_4": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot.simpledf",
    "plot"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot.test_sanity_compute_5": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot.simpledf",
    "plot"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot.test_specify_column_type": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Nominal",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot.simpledf",
    "plot"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation": {
  "data": {},
  "type": "module"
 },
 "dataprep.tests.eda.test_plot_correlation.DataArray": {
  "data": {
   "shadows": "dataprep.eda.data_array.DataArray"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_correlation.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_correlation.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_correlation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_correlation.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_correlation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_correlation.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_correlation.simpledf": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.pytest",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "to_dask"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_compute_kendall": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "_corr_filter",
    "_kendall_tau_1xn",
    "_kendall_tau_nxn",
    "dask.dataframe.DataFrame",
    "dataprep.eda.data_array.DataArray",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "numpy.isclose",
    "numpy.sort",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_compute_pearson": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "_corr_filter",
    "_pearson_1xn",
    "_pearson_nxn",
    "dask.dataframe.DataFrame",
    "dataprep.eda.data_array.DataArray",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "numpy.isclose",
    "numpy.sort",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_compute_spearman": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "_corr_filter",
    "_spearman_1xn",
    "_spearman_nxn",
    "dask.dataframe.DataFrame",
    "dataprep.eda.data_array.DataArray",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "numpy.isclose",
    "numpy.sort",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_sanity_compute_1": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_sanity_compute_2": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_sanity_compute_3": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_sanity_compute_4": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_sanity_compute_5": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_sanity_compute_6": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_sanity_compute_7": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_sanity_compute_8": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_sanity_compute_9": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_sanity_compute_fail_2": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.pytest",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_sanity_compute_fail_3": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.pytest",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_sanity_compute_fail_4": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.pytest",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_sanity_compute_fail_5": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.pytest",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_sanity_compute_fail_7": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.pytest",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.test_test_sanity_compute_fail_6": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "compute_correlation",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_correlation.pytest",
    "dataprep.tests.eda.test_plot_correlation.simpledf",
    "plot_correlation"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_correlation.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_missing": {
  "data": {},
  "type": "module"
 },
 "dataprep.tests.eda.test_plot_missing.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_missing.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_missing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_missing.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_missing.platform": {
  "data": {
   "shadows": "sys.platform"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_missing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_missing.simpledf": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_missing.pytest",
    "numpy.arange",
    "numpy.random.choice",
    "numpy.random.rand",
    "numpy.random.shuffle",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "to_dask"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_missing.sns": {
  "data": {
   "shadows": "seaborn"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_plot_missing.test_no_missing": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "dataprep.tests.eda.test_plot_missing.matplotlib",
    "plot_missing",
    "seaborn.load_dataset",
    "sys.platform"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_missing.test_sanity_compute_1": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "compute_missing",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_missing.simpledf",
    "render_missing"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_missing.test_sanity_compute_2": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "compute_missing",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_missing.simpledf",
    "render_missing"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_missing.test_sanity_compute_3": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "compute_missing",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_missing.simpledf",
    "render_missing"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_missing.test_sanity_compute_4": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "compute_missing",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_missing.simpledf",
    "render_missing"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_missing.test_sanity_compute_5": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "compute_missing",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_missing.simpledf",
    "render_missing"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_missing.test_sanity_compute_6": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "compute_missing",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_missing.pytest",
    "dataprep.tests.eda.test_plot_missing.simpledf"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_missing.test_sanity_compute_7": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "compute_missing",
    "dataprep.tests.eda.test_plot_missing.simpledf",
    "pandas.DataFrame",
    "render_missing",
    "to_dask"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_plot_missing.test_specify_column_type": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Numerical",
    "compute_missing",
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_plot_missing.simpledf",
    "render_missing"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_show": {
  "data": {},
  "type": "module"
 },
 "dataprep.tests.eda.test_show.dd": {
  "data": {
   "shadows": "dask.dataframe"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_show.environ": {
  "data": {
   "shadows": "os.environ"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_show.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_show.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_show.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "dataprep.tests.eda.test_show.simpledf": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_show.pytest",
    "numpy.random.rand",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.concat",
    "to_dask"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_show.test_show": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_show.simpledf",
    "plot",
    "plot_correlation",
    "plot_missing"
   ]
  },
  "type": "function"
 },
 "dataprep.tests.eda.test_show.test_show_browser": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "dask.dataframe.DataFrame",
    "dataprep.tests.eda.test_show.pytest",
    "dataprep.tests.eda.test_show.simpledf",
    "os.environ.get",
    "plot",
    "plot_correlation",
    "plot_missing"
   ]
  },
  "type": "function"
 },
 "dataprep.utils": {
  "data": {},
  "type": "module"
 },
 "dataprep.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "dataprep.utils.HTML": {
  "data": {
   "shadows": "IPython.core.display.HTML"
  },
  "type": "import"
 },
 "dataprep.utils.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "dataprep.utils.display": {
  "data": {
   "shadows": "IPython.core.display.display"
  },
  "type": "import"
 },
 "dataprep.utils.display_dataframe": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dataprep.utils.display_html",
    "get_styled_schema",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "dataprep.utils.display_html": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "IPython.core.display.HTML",
    "IPython.core.display.display",
    "dataprep.utils.is_notebook",
    "dataprep.utils.webbrowser",
    "str",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "dataprep.utils.get_ipython": {
  "data": {
   "shadows": "IPython.get_ipython"
  },
  "type": "import"
 },
 "dataprep.utils.get_styled_schema": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.utils.is_notebook": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "IPython.get_ipython",
    "ImportError",
    "NameError",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "dataprep.utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "dataprep.utils.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 }
}