{
 "shapicant": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "shapicant._base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "shapicant._base.BaseSelector": {
  "lineno": 15,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "shapicant._base.BaseSelector.__init__": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "shap.Explainer",
   "typing.Optional",
   "typing.Type",
   "typing.Union"
  ],
  "type": "function"
 },
 "shapicant._base.BaseSelector._check_is_fitted": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "shapicant._base.BaseSelector._compute_p_values": {
  "lineno": 99,
  "symbols_in_volume": [
   "functools.reduce",
   "pandas.Series",
   "typing.List"
  ],
  "type": "function"
 },
 "shapicant._base.BaseSelector._validate_params": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "shapicant._base.BaseSelector.fit": {
  "lineno": 47,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "shapicant._base.BaseSelector.fit_transform": {
  "lineno": 61,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "shapicant._base.BaseSelector.get_features": {
  "lineno": 68,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "shapicant._base.BaseSelector.transform": {
  "lineno": 54,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "shapicant._pandas_selector": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "shapicant._pandas_selector.PandasSelector": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "shapicant._pandas_selector.PandasSelector.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "shap.Explainer",
   "sklearn.base.BaseEstimator",
   "typing.Optional",
   "typing.Type",
   "typing.Union"
  ],
  "type": "function"
 },
 "shapicant._pandas_selector.PandasSelector._get_shap_values": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.where",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "shapicant._pandas_selector.PandasSelector.fit": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series",
   "tqdm.tqdm",
   "tqdm.tqdm.write",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "shapicant._pandas_selector.PandasSelector.fit_transform": {
  "lineno": 146,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "shapicant._pandas_selector.PandasSelector.transform": {
  "lineno": 131,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "shapicant._spark_selector": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "pyspark.ml.wrapper.JavaEstimator",
   "pyspark.sql.Column",
   "pyspark.sql.DataFrame"
  ],
  "type": "module"
 },
 "shapicant._spark_selector.SparkSelector": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "shapicant._spark_selector.SparkSelector.__init__": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int32",
   "numpy.random.RandomState",
   "pyspark.ml.wrapper.JavaEstimator",
   "shap.Explainer",
   "typing.Optional",
   "typing.Type",
   "typing.Union"
  ],
  "type": "function"
 },
 "shapicant._spark_selector.SparkSelector._attach_index": {
  "lineno": 303,
  "symbols_in_volume": [
   "pyspark.sql.DataFrame"
  ],
  "type": "function"
 },
 "shapicant._spark_selector.SparkSelector._compute_shap_values": {
  "lineno": 307,
  "symbols_in_volume": [
   "pyspark.sql.Column",
   "shap.Explainer",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "shapicant._spark_selector.SparkSelector._compute_shap_values.predict_contrib_udf": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.vstack",
   "pandas.DataFrame",
   "pandas.Series",
   "pyspark.sql.functions.pandas_udf",
   "pyspark.sql.types.ArrayType",
   "pyspark.sql.types.DoubleType"
  ],
  "type": "function"
 },
 "shapicant._spark_selector.SparkSelector._get_shap_values": {
  "lineno": 206,
  "symbols_in_volume": [
   "pandas.Series",
   "pyspark.sql.DataFrame",
   "pyspark.sql.functions.array",
   "pyspark.sql.functions.col",
   "pyspark.sql.functions.mean",
   "pyspark.sql.functions.when",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "shapicant._spark_selector.SparkSelector._set_additivity_false": {
  "lineno": 294,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "shapicant._spark_selector.SparkSelector._shuffle": {
  "lineno": 268,
  "symbols_in_volume": [
   "pyspark.sql.DataFrame",
   "pyspark.sql.functions.broadcast",
   "pyspark.sql.functions.rand",
   "typing.Optional"
  ],
  "type": "function"
 },
 "shapicant._spark_selector.SparkSelector.fit": {
  "lineno": 67,
  "symbols_in_volume": [
   "importlib.util.find_spec",
   "pyspark.ml.feature.VectorAssembler",
   "pyspark.ml.wrapper.JavaEstimator",
   "pyspark.sql.DataFrame",
   "tqdm.tqdm",
   "tqdm.tqdm.write",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "shapicant._spark_selector.SparkSelector.fit_transform": {
  "lineno": 177,
  "symbols_in_volume": [
   "pyspark.sql.DataFrame",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "shapicant._spark_selector.SparkSelector.transform": {
  "lineno": 161,
  "symbols_in_volume": [
   "pyspark.sql.DataFrame"
  ],
  "type": "function"
 },
 "shapicant.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "shapicant.tests.test_selector": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "shapicant.tests.test_selector.data": {
  "lineno": 11,
  "symbols_in_volume": [
   "pytest.fixture",
   "sklearn.datasets.make_classification"
  ],
  "type": "function"
 },
 "shapicant.tests.test_selector.test_pandas_selector": {
  "lineno": 26,
  "symbols_in_volume": [
   "lightgbm.LGBMClassifier",
   "pandas.DataFrame",
   "shap.TreeExplainer",
   "shapicant.PandasSelector"
  ],
  "type": "function"
 },
 "shapicant.tests.test_selector.test_spark_selector": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyspark.ml.classification.RandomForestClassifier",
   "pyspark.sql.SparkSession.builder.config",
   "shap.TreeExplainer",
   "shapicant.SparkSelector"
  ],
  "type": "function"
 }
}