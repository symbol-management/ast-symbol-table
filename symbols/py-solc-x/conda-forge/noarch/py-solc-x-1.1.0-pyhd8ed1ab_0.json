{
 "solcx": {
  "data": {},
  "type": "module"
 },
 "solcx.compile_files": {
  "data": {
   "shadows": "solcx.main.compile_files"
  },
  "type": "import"
 },
 "solcx.compile_solc": {
  "data": {
   "shadows": "solcx.install.compile_solc"
  },
  "type": "import"
 },
 "solcx.compile_source": {
  "data": {
   "shadows": "solcx.main.compile_source"
  },
  "type": "import"
 },
 "solcx.compile_standard": {
  "data": {
   "shadows": "solcx.main.compile_standard"
  },
  "type": "import"
 },
 "solcx.exceptions": {
  "data": {},
  "type": "module"
 },
 "solcx.exceptions.ContractsNotFound": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "solcx.exceptions.SolcError"
   ]
  },
  "type": "class"
 },
 "solcx.exceptions.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "solcx.exceptions.DownloadError": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "solcx.exceptions.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "solcx.exceptions.SolcError": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "solcx.exceptions.SolcError.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "solcx.exceptions.SolcError.__str__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "solcx.exceptions.SolcInstallationError": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "solcx.exceptions.SolcNotInstalled": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "solcx.exceptions.UnexpectedVersionError": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "solcx.exceptions.UnexpectedVersionWarning": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "solcx.exceptions.UnknownOption": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "class"
 },
 "solcx.exceptions.UnknownValue": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "solcx.exceptions.UnsupportedVersionError": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "solcx.get_compilable_solc_versions": {
  "data": {
   "shadows": "solcx.install.get_compilable_solc_versions"
  },
  "type": "import"
 },
 "solcx.get_installable_solc_versions": {
  "data": {
   "shadows": "solcx.install.get_installable_solc_versions"
  },
  "type": "import"
 },
 "solcx.get_installed_solc_versions": {
  "data": {
   "shadows": "solcx.install.get_installed_solc_versions"
  },
  "type": "import"
 },
 "solcx.get_solc_version": {
  "data": {
   "shadows": "solcx.main.get_solc_version"
  },
  "type": "import"
 },
 "solcx.get_solcx_install_folder": {
  "data": {
   "shadows": "solcx.install.get_solcx_install_folder"
  },
  "type": "import"
 },
 "solcx.import_installed_solc": {
  "data": {
   "shadows": "solcx.install.import_installed_solc"
  },
  "type": "import"
 },
 "solcx.install_solc": {
  "data": {
   "shadows": "solcx.install.install_solc"
  },
  "type": "import"
 },
 "solcx.install_solc_pragma": {
  "data": {
   "shadows": "solcx.install.install_solc_pragma"
  },
  "type": "import"
 },
 "solcx.link_code": {
  "data": {
   "shadows": "solcx.main.link_code"
  },
  "type": "import"
 },
 "solcx.set_solc_version": {
  "data": {
   "shadows": "solcx.install.set_solc_version"
  },
  "type": "import"
 },
 "solcx.set_solc_version_pragma": {
  "data": {
   "shadows": "solcx.install.set_solc_version_pragma"
  },
  "type": "import"
 },
 "solcx.utils": {
  "data": {},
  "type": "module"
 },
 "solcx.utils.lock": {
  "data": {
   "symbols_in_volume": [
    "solcx.utils.lock.fcntl",
    "solcx.utils.lock.os",
    "solcx.utils.lock.sys",
    "solcx.utils.lock.threading",
    "str",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "solcx.utils.lock.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "solcx.utils.lock.BLOCKING": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "solcx.utils.lock.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "solcx.utils.lock.NON_BLOCKING": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "solcx.utils.lock.OPEN_MODE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "solcx.utils.lock.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "solcx.utils.lock.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "solcx.utils.lock.UnixLock": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "solcx.utils.lock._ProcessLock"
   ]
  },
  "type": "class"
 },
 "solcx.utils.lock.UnixLock.__enter__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "solcx.utils.lock.UnixLock.__exit__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "solcx.utils.lock.UnixLock.acquire": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "BlockingIOError",
    "bool",
    "solcx.utils.lock.BLOCKING",
    "solcx.utils.lock.NON_BLOCKING",
    "solcx.utils.lock.fcntl"
   ]
  },
  "type": "function"
 },
 "solcx.utils.lock.UnixLock.release": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "solcx.utils.lock.fcntl"
   ]
  },
  "type": "function"
 },
 "solcx.utils.lock.WindowsLock": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "solcx.utils.lock._ProcessLock"
   ]
  },
  "type": "class"
 },
 "solcx.utils.lock.WindowsLock.__enter__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "solcx.utils.lock.WindowsLock.__exit__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "solcx.utils.lock.WindowsLock.acquire": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "OSError",
    "bool",
    "solcx.utils.lock.OPEN_MODE",
    "solcx.utils.lock.msvcrt",
    "solcx.utils.lock.os"
   ]
  },
  "type": "function"
 },
 "solcx.utils.lock.WindowsLock.release": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "solcx.utils.lock.msvcrt"
   ]
  },
  "type": "function"
 },
 "solcx.utils.lock._ProcessLock": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "solcx.utils.lock._ProcessLock.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pathlib.Path",
    "solcx.utils.lock.tempfile",
    "solcx.utils.lock.threading",
    "str"
   ]
  },
  "type": "function"
 },
 "solcx.utils.lock._base_lock": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "solcx.utils.lock.fcntl": {
  "data": {
   "shadows": "fcntl"
  },
  "type": "import"
 },
 "solcx.utils.lock.get_process_lock": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "solcx.utils.lock.UnixLock",
    "solcx.utils.lock.WindowsLock",
    "solcx.utils.lock._base_lock",
    "solcx.utils.lock.sys",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "solcx.utils.lock.msvcrt": {
  "data": {
   "shadows": "msvcrt"
  },
  "type": "import"
 },
 "solcx.utils.lock.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "solcx.utils.lock.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "solcx.utils.lock.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "solcx.utils.lock.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "solcx.wrapper": {
  "data": {},
  "type": "module"
 },
 "solcx.wrapper.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "solcx.wrapper.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "solcx.wrapper.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "solcx.wrapper.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "solcx.wrapper.SolcError": {
  "data": {
   "shadows": "solcx.exceptions.SolcError"
  },
  "type": "import"
 },
 "solcx.wrapper.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "solcx.wrapper.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "solcx.wrapper.UnknownOption": {
  "data": {
   "shadows": "solcx.exceptions.UnknownOption"
  },
  "type": "import"
 },
 "solcx.wrapper.UnknownValue": {
  "data": {
   "shadows": "solcx.exceptions.UnknownValue"
  },
  "type": "import"
 },
 "solcx.wrapper.VERSION_REGEX": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "solcx.wrapper.Version": {
  "data": {
   "shadows": "semantic_version.Version"
  },
  "type": "import"
 },
 "solcx.wrapper._get_solc_version": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "StopIteration",
    "bool",
    "next",
    "pathlib.Path",
    "semantic_version.Version",
    "semantic_version.Version.coerce",
    "solcx.exceptions.SolcError",
    "solcx.wrapper.VERSION_REGEX",
    "solcx.wrapper.re",
    "solcx.wrapper.subprocess",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "solcx.wrapper._to_string": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "list",
    "pathlib.Path",
    "str",
    "tuple",
    "type",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "solcx.wrapper.install": {
  "data": {
   "shadows": "solcx.install"
  },
  "type": "import"
 },
 "solcx.wrapper.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "solcx.wrapper.solc_wrapper": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "pathlib.Path",
    "solcx.exceptions.SolcError",
    "solcx.exceptions.UnknownOption",
    "solcx.exceptions.UnknownValue",
    "solcx.install.get_executable",
    "solcx.wrapper._get_solc_version",
    "solcx.wrapper._to_string",
    "solcx.wrapper.subprocess",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "solcx.wrapper.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 }
}