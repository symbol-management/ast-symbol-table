{
 "doepipeline": {
  "data": {},
  "type": "module"
 },
 "doepipeline.designer": {
  "data": {},
  "type": "module"
 },
 "doepipeline.designer.CategoricalFactor": {
  "data": {
   "lineno": 107
  },
  "type": "class"
 },
 "doepipeline.designer.CategoricalFactor.__init__": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "doepipeline.designer.CategoricalFactor.__repr__": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "doepipeline.designer.DesignerError": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "doepipeline.designer.ExperimentDesigner": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "doepipeline.designer.pyDOE2"
   ]
  },
  "type": "class"
 },
 "doepipeline.designer.ExperimentDesigner.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "AssertionError",
    "KeyError",
    "ValueError",
    "collections.OrderedDict",
    "doepipeline.designer.CategoricalFactor",
    "doepipeline.designer.DesignerError",
    "doepipeline.designer.UnsupportedDesign",
    "doepipeline.designer.factor_from_spec",
    "doepipeline.designer.logging",
    "doepipeline.model_utils.make_desirability_function",
    "int",
    "isinstance",
    "len",
    "list",
    "pandas.Series",
    "str"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner._check_convergence": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "doepipeline.designer.logging",
    "len",
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner._evaluate_screening": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "NotImplementedError",
    "collections.OrderedDict",
    "doepipeline.designer.CategoricalFactor",
    "doepipeline.designer.OptimizationResult",
    "doepipeline.designer.OrdinalFactor",
    "doepipeline.designer.logging",
    "int",
    "isinstance",
    "len",
    "max",
    "min",
    "numpy.array",
    "numpy.round",
    "pandas.Series",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner._new_optimization_design": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "NotImplementedError",
    "doepipeline.designer.CategoricalFactor",
    "doepipeline.designer.NumericFactor",
    "doepipeline.designer.OrdinalFactor",
    "doepipeline.designer.logging",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "matrix_designer",
    "numpy.array",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.repeat",
    "numpy.round",
    "pandas.Series",
    "pandas.concat"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner._new_screening_design": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "ValueError",
    "doepipeline.designer.CategoricalFactor",
    "doepipeline.designer.OrdinalFactor",
    "doepipeline.designer.pyDOE2",
    "enumerate",
    "float",
    "getattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.isfinite",
    "numpy.linspace",
    "numpy.logspace",
    "numpy.round",
    "numpy.unique",
    "object",
    "pandas.Series",
    "pandas.concat",
    "sorted",
    "space",
    "zip"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner._predict_optimum_settings": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "doepipeline.designer.CategoricalFactor",
    "doepipeline.designer.OptimizationResult",
    "doepipeline.designer.OrdinalFactor",
    "doepipeline.designer.logging",
    "doepipeline.model_utils.predict_optimum",
    "int",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.round",
    "object",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner._update_best_experiment": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner._update_numeric_factor": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "NotImplementedError",
    "abs",
    "doepipeline.designer.OrdinalFactor",
    "doepipeline.designer.QuantitativeFactor",
    "doepipeline.designer.logging",
    "isinstance",
    "numpy.round",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner._validate_new_factor_limits": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "abs",
    "doepipeline.designer.logging"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner.get_best_experiment": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "NotImplementedError",
    "collections.OrderedDict",
    "doepipeline.designer.logging",
    "isinstance",
    "list",
    "numpy.array",
    "pandas.core.frame.DataFrame",
    "sorted"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner.get_optimal_settings": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner.new_design": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner.reevaluate_screening": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "doepipeline.designer.DesignerError"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner.set_phase": {
  "data": {
   "lineno": 668
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner.treat_response": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "desirability_function",
    "doepipeline.designer._make_stored_boxcox",
    "doepipeline.designer.logging",
    "list",
    "numpy.log",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner.update_factors_from_csv": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "doepipeline.designer.CategoricalFactor",
    "doepipeline.designer.NumericFactor",
    "doepipeline.designer.logging",
    "isinstance",
    "issubclass",
    "pandas.DataFrame.from_csv",
    "pandas.isnull",
    "type"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner.update_factors_from_optimum": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "abs",
    "doepipeline.designer.CategoricalFactor",
    "doepipeline.designer.OptimizationResult",
    "doepipeline.designer.logging",
    "isinstance",
    "list",
    "numpy.array",
    "object",
    "pandas.Series",
    "zip"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.ExperimentDesigner.write_factor_csv": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "NotImplementedError",
    "doepipeline.designer.CategoricalFactor",
    "doepipeline.designer.NumericFactor",
    "doepipeline.designer.logging",
    "isinstance",
    "issubclass",
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "type"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.NumericFactor": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "doepipeline.designer.NumericFactor.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "TypeError",
    "doepipeline.designer.NumericFactor",
    "type"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.NumericFactor.__repr__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "doepipeline.designer.NumericFactor.center": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.NumericFactor.span": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.OptimizationResult": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "doepipeline.designer.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "doepipeline.designer.OrdinalFactor": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "doepipeline.designer.NumericFactor"
   ]
  },
  "type": "class"
 },
 "doepipeline.designer.OrdinalFactor.__setattr__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "doepipeline.designer.OrdinalFactor",
    "float",
    "int",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.QuantitativeFactor": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "doepipeline.designer.NumericFactor"
   ]
  },
  "type": "class"
 },
 "doepipeline.designer.UnsupportedDesign": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "doepipeline.designer.UnsupportedFactorType": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "doepipeline.designer._make_stored_boxcox": {
  "data": {
   "lineno": 858
  },
  "type": "function"
 },
 "doepipeline.designer._make_stored_boxcox.boxcox_transform": {
  "data": {
   "lineno": 859
  },
  "type": "function"
 },
 "doepipeline.designer.factor_from_spec": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "any",
    "doepipeline.designer.CategoricalFactor",
    "doepipeline.designer.OrdinalFactor",
    "doepipeline.designer.QuantitativeFactor",
    "doepipeline.designer.UnsupportedFactorType",
    "factor_class",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "doepipeline.designer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "doepipeline.designer.make_desirability_function": {
  "data": {
   "shadows": "doepipeline.model_utils.make_desirability_function"
  },
  "type": "import"
 },
 "doepipeline.designer.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "doepipeline.designer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "doepipeline.designer.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "doepipeline.designer.predict_optimum": {
  "data": {
   "shadows": "doepipeline.model_utils.predict_optimum"
  },
  "type": "import"
 },
 "doepipeline.designer.pyDOE2": {
  "data": {
   "shadows": "pyDOE2"
  },
  "type": "import"
 },
 "doepipeline.designer.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "doepipeline.executor": {
  "data": {},
  "type": "module"
 },
 "doepipeline.executor.base": {
  "data": {},
  "type": "module"
 },
 "doepipeline.executor.base.BasePipelineExecutor": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "doepipeline.executor.base.abc",
    "object"
   ]
  },
  "type": "class"
 },
 "doepipeline.executor.base.BasePipelineExecutor.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "bool",
    "dict",
    "doepipeline.executor.base.locale",
    "doepipeline.utils.validate_command",
    "doepipeline.utils.validate_log_file",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.base.BasePipelineExecutor._parse_results_file": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "doepipeline.executor.base.logging",
    "io.StringIO",
    "pandas.DataFrame",
    "pandas.Series.from_csv",
    "str"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.base.BasePipelineExecutor.change_dir": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.base.BasePipelineExecutor.execute_command": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "bool",
    "doepipeline.executor.base.abc",
    "doepipeline.executor.base.logging",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.base.BasePipelineExecutor.make_dir": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "dir"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.base.BasePipelineExecutor.poll_jobs": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "doepipeline.executor.base.abc"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.base.BasePipelineExecutor.read_file_contents": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "doepipeline.executor.base.abc"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.base.BasePipelineExecutor.run_jobs": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "doepipeline.executor.base.abc"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.base.BasePipelineExecutor.run_pipeline_collection": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "doepipeline.executor.base.CommandError",
    "doepipeline.executor.base.logging",
    "list",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.base.BasePipelineExecutor.set_env_variables": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "doepipeline.executor.base.abc"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.base.BasePipelineExecutor.touch_file": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "doepipeline.executor.base.logging",
    "doepipeline.executor.base.platform"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.base.BasePipelineExecutor.wait_until_current_jobs_are_finished": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "dict",
    "doepipeline.executor.base.BasePipelineExecutor",
    "doepipeline.executor.base.PipelineRunFailed",
    "doepipeline.executor.base.logging",
    "doepipeline.executor.base.time"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.base.CommandError": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "doepipeline.executor.base.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "doepipeline.executor.base.PipelineRunFailed": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "doepipeline.executor.base.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "doepipeline.executor.base.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "doepipeline.executor.base.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "doepipeline.executor.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "doepipeline.executor.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "doepipeline.executor.base.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "doepipeline.executor.base.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "doepipeline.executor.base.utils": {
  "data": {
   "shadows": "doepipeline.utils"
  },
  "type": "import"
 },
 "doepipeline.executor.local": {
  "data": {},
  "type": "module"
 },
 "doepipeline.executor.local.LocalPipelineExecutor": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "doepipeline.executor.local.LocalPipelineExecutor.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "dict",
    "doepipeline.executor.local.LocalPipelineExecutor",
    "super"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.local.LocalPipelineExecutor.change_dir": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "CommandError",
    "FileNotFoundError",
    "OSError",
    "dir",
    "doepipeline.executor.local.logging",
    "doepipeline.executor.local.os",
    "str"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.local.LocalPipelineExecutor.execute_command": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "CommandError",
    "OSError",
    "doepipeline.executor.local.LocalPipelineExecutor",
    "doepipeline.executor.local.logging",
    "doepipeline.executor.local.subprocess",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.local.LocalPipelineExecutor.make_dir": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "CommandError",
    "FileExistsError",
    "OSError",
    "dir",
    "doepipeline.executor.local.logging",
    "doepipeline.executor.local.os",
    "str"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.local.LocalPipelineExecutor.poll_jobs": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "dict",
    "doepipeline.executor.local.logging",
    "list",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.local.LocalPipelineExecutor.read_file_contents": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "doepipeline.executor.local.logging",
    "doepipeline.executor.local.os",
    "open"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.local.LocalPipelineExecutor.run_jobs": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "CommandError",
    "KeyError",
    "PipelineRunFailed",
    "collections.OrderedDict",
    "doepipeline.executor.local.logging",
    "doepipeline.executor.local.os",
    "enumerate",
    "isinstance",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.local.LocalPipelineExecutor.set_env_variables": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "dict",
    "doepipeline.executor.local.logging",
    "doepipeline.executor.local.os",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.local.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "doepipeline.executor.local.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "doepipeline.executor.local.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "doepipeline.executor.local.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "doepipeline.executor.slurm": {
  "data": {
   "symbols_in_volume": [
    "doepipeline.executor.slurm._field_len"
   ]
  },
  "type": "module"
 },
 "doepipeline.executor.slurm.FAIL_JOB_STATUS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "doepipeline.executor.slurm.LocalPipelineExecutor": {
  "data": {
   "shadows": "doepipeline.executor.local.LocalPipelineExecutor"
  },
  "type": "import"
 },
 "doepipeline.executor.slurm.OK_JOB_STATUS": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "doepipeline.executor.slurm.SACCT_FIELDS": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "doepipeline.executor.slurm.SlurmPipelineExecutor": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "doepipeline.executor.local.LocalPipelineExecutor"
   ]
  },
  "type": "class"
 },
 "doepipeline.executor.slurm.SlurmPipelineExecutor.poll_jobs": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "dict",
    "doepipeline.executor.slurm.FAIL_JOB_STATUS",
    "doepipeline.executor.slurm.OK_JOB_STATUS",
    "doepipeline.executor.slurm.SACCT_FIELDS",
    "doepipeline.executor.slurm.logging",
    "len",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.slurm.SlurmPipelineExecutor.run_jobs": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "doepipeline.executor.slurm.logging",
    "doepipeline.executor.slurm.os",
    "len",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "doepipeline.executor.slurm._field_len": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "doepipeline.executor.slurm.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "doepipeline.executor.slurm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "doepipeline.generator": {
  "data": {},
  "type": "module"
 },
 "doepipeline.generator.ExperimentDesigner": {
  "data": {
   "shadows": "doepipeline.designer.ExperimentDesigner"
  },
  "type": "import"
 },
 "doepipeline.generator.PipelineGenerator": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "doepipeline.generator.PipelineGenerator.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "dict",
    "doepipeline.utils.parse_job_to_template_string",
    "str"
   ]
  },
  "type": "function"
 },
 "doepipeline.generator.PipelineGenerator._update_working_directory": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "doepipeline.generator.logging",
    "doepipeline.generator.os",
    "str"
   ]
  },
  "type": "function"
 },
 "doepipeline.generator.PipelineGenerator._validate_config": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "dict",
    "doepipeline.generator._validate_constants",
    "doepipeline.generator._validate_factor_config",
    "doepipeline.generator._validate_job_list_config",
    "doepipeline.generator._validate_response_config",
    "doepipeline.generator._validate_setup_scrip_config",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "doepipeline.generator.PipelineGenerator.from_yaml": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "classmethod",
    "cls",
    "doepipeline.generator.yaml",
    "isinstance",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "doepipeline.generator.PipelineGenerator.get_base_directory": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "doepipeline.generator.PipelineGenerator.new_designer_from_config": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "designer_class",
    "doepipeline.designer.ExperimentDesigner"
   ]
  },
  "type": "function"
 },
 "doepipeline.generator.PipelineGenerator.new_pipeline_collection": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "any",
    "doepipeline.generator.collections",
    "doepipeline.generator.logging",
    "doepipeline.generator.re",
    "int",
    "list"
   ]
  },
  "type": "function"
 },
 "doepipeline.generator.PipelineGenerator.set_current_iteration": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "doepipeline.generator._validate_constants": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "all",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "doepipeline.generator._validate_factor_config": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "all",
    "any",
    "dict",
    "doepipeline.generator.re",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "doepipeline.generator._validate_job_list_config": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "doepipeline.generator._validate_response_config": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "all",
    "dict",
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.number"
   ]
  },
  "type": "function"
 },
 "doepipeline.generator._validate_setup_scrip_config": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "all",
    "dict",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "doepipeline.generator.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "doepipeline.generator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "doepipeline.generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "doepipeline.generator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "doepipeline.generator.parse_job_to_template_string": {
  "data": {
   "shadows": "doepipeline.utils.parse_job_to_template_string"
  },
  "type": "import"
 },
 "doepipeline.generator.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "doepipeline.generator.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "doepipeline.model_utils": {
  "data": {},
  "type": "module"
 },
 "doepipeline.model_utils.OptimizationFailed": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "doepipeline.model_utils.brute_force_selection": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "doepipeline.model_utils.crossvalidate_formula",
    "enumerate",
    "itertools.chain.from_iterable",
    "itertools.combinations",
    "len",
    "list",
    "numpy.issubdtype",
    "numpy.number",
    "range",
    "sorted",
    "statsmodels.formula.api.ols",
    "zip"
   ]
  },
  "type": "function"
 },
 "doepipeline.model_utils.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "doepipeline.model_utils.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "doepipeline.model_utils.combinations_with_replacement": {
  "data": {
   "shadows": "itertools.combinations_with_replacement"
  },
  "type": "import"
 },
 "doepipeline.model_utils.crossvalidate_formula": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "len",
    "range",
    "statsmodels.formula.api.ols"
   ]
  },
  "type": "function"
 },
 "doepipeline.model_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "doepipeline.model_utils.make_desirability_function": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "doepipeline.model_utils.make_desirability_function.desirability": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "doepipeline.model_utils.minimize": {
  "data": {
   "shadows": "scipy.optimize.minimize"
  },
  "type": "import"
 },
 "doepipeline.model_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "doepipeline.model_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "doepipeline.model_utils.predict_optimum": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "doepipeline.model_utils.brute_force_selection",
    "doepipeline.model_utils.crossvalidate_formula",
    "doepipeline.model_utils.logging",
    "doepipeline.model_utils.stepwise_regression",
    "len",
    "list",
    "numpy.isnan",
    "pandas.DataFrame",
    "pandas.Series",
    "predicted_response",
    "scipy.optimize.minimize",
    "statsmodels.formula.api.ols",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "doepipeline.model_utils.predict_optimum.predicted_response": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "doepipeline.model_utils.smf": {
  "data": {
   "shadows": "statsmodels.formula.api"
  },
  "type": "import"
 },
 "doepipeline.model_utils.stepwise_regression": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "doepipeline.model_utils.crossvalidate_formula",
    "enumerate",
    "itertools.chain.from_iterable",
    "itertools.combinations",
    "len",
    "list",
    "numpy.issubdtype",
    "numpy.number",
    "range",
    "sorted",
    "statsmodels.formula.api.ols",
    "zip"
   ]
  },
  "type": "function"
 }
}