{
 "gitfame": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gitfame.__main__": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gitfame._gitfame": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "re.DOTALL",
   "re.M",
   "re.compile"
  ],
  "type": "module"
 },
 "gitfame._gitfame._get_auth_stats": {
  "lineno": 186,
  "symbols_in_volume": [
   "logging.NOTSET",
   "os.path.join",
   "subprocess.STDOUT"
  ],
  "type": "function"
 },
 "gitfame._gitfame.hours": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gitfame._gitfame.main": {
  "lineno": 374,
  "symbols_in_volume": [
   "argopt.argopt",
   "logging",
   "logging.INFO",
   "logging.basicConfig",
   "os.path.join",
   "pkg_resources.Requirement.parse",
   "pkg_resources.resource_filename",
   "shutil.copyfile",
   "sys.exit"
  ],
  "type": "function"
 },
 "gitfame._gitfame.run": {
  "lineno": 289,
  "symbols_in_volume": [
   "functools.partial",
   "os.sep",
   "re.compile",
   "tabulate",
   "tqdm.contrib.concurrent.thread_map"
  ],
  "type": "function"
 },
 "gitfame._gitfame.tabulate": {
  "lineno": 94,
  "symbols_in_volume": [
   "csv.writer",
   "json.dumps",
   "tabulate.tabulate",
   "tabulate.tabulate_formats",
   "yaml.safe_dump"
  ],
  "type": "function"
 },
 "gitfame._utils": {
  "lineno": null,
  "symbols_in_volume": [
   "functools.partial",
   "logging.getLogger",
   "sys.stdout",
   "threading.RLock",
   "tqdm.tqdm",
   "tqdm.tqdm.set_lock"
  ],
  "type": "module"
 },
 "gitfame._utils.Max": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gitfame._utils.Str": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gitfame._utils.TqdmStream": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gitfame._utils.TqdmStream.write": {
  "lineno": 59,
  "symbols_in_volume": [
   "tqdm.tqdm.write"
  ],
  "type": "function"
 },
 "gitfame._utils._environ_cols_linux": {
  "lineno": 153,
  "symbols_in_volume": [
   "array.array",
   "fcntl.ioctl",
   "os.environ.get",
   "termios.TIOCGWINSZ"
  ],
  "type": "function"
 },
 "gitfame._utils._environ_cols_tput": {
  "lineno": 141,
  "symbols_in_volume": [
   "shlex.split",
   "subprocess.check_call"
  ],
  "type": "function"
 },
 "gitfame._utils._environ_cols_windows": {
  "lineno": 116,
  "symbols_in_volume": [
   "ctypes.create_string_buffer",
   "ctypes.windll.kernel32.GetConsoleScreenBufferInfo",
   "ctypes.windll.kernel32.GetStdHandle",
   "struct.unpack",
   "sys.stdin",
   "sys.stdout"
  ],
  "type": "function"
 },
 "gitfame._utils._environ_cols_wrapper": {
  "lineno": 179,
  "symbols_in_volume": [
   "platform.system"
  ],
  "type": "function"
 },
 "gitfame._utils.blank_col": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gitfame._utils.check_output": {
  "lineno": 69,
  "symbols_in_volume": [
   "subprocess.PIPE",
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "gitfame._utils.fext": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gitfame._utils.int_cast_or_len": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gitfame._utils.merge_stats": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gitfame._utils.print_unicode": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gitfame._utils.tighten": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gitfame._utils.tqdm": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "gitfame._utils.tqdm.__init__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "gitfame._utils.tqdm.__iter__": {
  "lineno": 38,
  "symbols_in_volume": [
   "sys.stderr.flush",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "gitfame._utils.tqdm.write": {
  "lineno": 45,
  "symbols_in_volume": [
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "gitfame._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "gitfame._version.commit_hash": {
  "lineno": 23,
  "symbols_in_volume": [
   "subprocess.STDOUT"
  ],
  "type": "function"
 }
}