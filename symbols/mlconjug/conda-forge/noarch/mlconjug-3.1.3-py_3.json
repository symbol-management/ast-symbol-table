{
 "mlconjug": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlconjug._MLCONJUG_TRANSLATIONS",
    "mlconjug._RESOURCE_PACKAGE",
    "mlconjug._SUPPORTED_LANGUAGES",
    "mlconjug._TRANSLATED_LANGUAGES",
    "mlconjug._TRANSLATIONS_PATH",
    "mlconjug._get_user_locale",
    "mlconjug._getdoc",
    "mlconjug._user_locale",
    "mlconjug.gettext",
    "mlconjug.inspect",
    "mlconjug.pkg_resources"
   ]
  },
  "type": "module"
 },
 "mlconjug.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "mlconjug.LinearSVC": {
  "data": {
   "shadows": "sklearn.svm.LinearSVC"
  },
  "type": "import"
 },
 "mlconjug.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "mlconjug.PyVerbiste": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlconjug.PyVerbiste._ABBREVS"
   ]
  },
  "type": "module"
 },
 "mlconjug.PyVerbiste.ConjugManager": {
  "data": {
   "lineno": 97
  },
  "type": "class"
 },
 "mlconjug.PyVerbiste.ConjugManager.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "_",
    "collections.OrderedDict",
    "mlconjug.PyVerbiste._CONJUGATIONS_RESOURCE_PATH",
    "mlconjug.PyVerbiste._LANGUAGES",
    "mlconjug.PyVerbiste._RESOURCE_PACKAGE",
    "mlconjug.PyVerbiste._VERBS_RESOURCE_PATH",
    "mlconjug.PyVerbiste.pkg_resources",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.ConjugManager.__repr__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.ConjugManager._detect_allowed_endings": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.ConjugManager._load_conjugations": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "mlconjug.PyVerbiste.json",
    "open"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.ConjugManager._load_verbs": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "mlconjug.PyVerbiste.json",
    "open"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.ConjugManager.get_conjug_info": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "mlconjug.PyVerbiste.copy"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.ConjugManager.get_verb_info": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "mlconjug.PyVerbiste.VerbInfo"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.ConjugManager.is_valid_verb": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.ET": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "mlconjug.PyVerbiste.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mlconjug.PyVerbiste.Verb": {
  "data": {
   "lineno": 344
  },
  "type": "class"
 },
 "mlconjug.PyVerbiste.Verb.__init__": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.Verb.__repr__": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.Verb._load_conjug": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "len",
    "list",
    "mlconjug.PyVerbiste._ABBREVS",
    "str"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.VerbEn": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "mlconjug.PyVerbiste.Verb"
   ]
  },
  "type": "class"
 },
 "mlconjug.PyVerbiste.VerbEn._load_conjug": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "len",
    "list",
    "mlconjug.PyVerbiste._AUXILIARIES",
    "mlconjug.PyVerbiste._IMPERATIVE_PRONOUNS",
    "mlconjug.PyVerbiste._PRONOUNS",
    "str"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.VerbEs": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "mlconjug.PyVerbiste.Verb"
   ]
  },
  "type": "class"
 },
 "mlconjug.PyVerbiste.VerbEs._load_conjug": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "len",
    "list",
    "mlconjug.PyVerbiste._IMPERATIVE_PRONOUNS",
    "mlconjug.PyVerbiste._NEGATION",
    "mlconjug.PyVerbiste._PRONOUNS",
    "str"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.VerbFr": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "mlconjug.PyVerbiste.Verb"
   ]
  },
  "type": "class"
 },
 "mlconjug.PyVerbiste.VerbFr._load_conjug": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "len",
    "list",
    "mlconjug.PyVerbiste._GENDER",
    "mlconjug.PyVerbiste._IMPERATIVE_PRONOUNS",
    "mlconjug.PyVerbiste._PRONOUNS",
    "str"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.VerbInfo": {
  "data": {
   "lineno": 315
  },
  "type": "class"
 },
 "mlconjug.PyVerbiste.VerbInfo.__eq__": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "mlconjug.PyVerbiste.VerbInfo"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.VerbInfo.__init__": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.VerbInfo.__repr__": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.VerbIt": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "mlconjug.PyVerbiste.Verb"
   ]
  },
  "type": "class"
 },
 "mlconjug.PyVerbiste.VerbIt._load_conjug": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "len",
    "list",
    "mlconjug.PyVerbiste._NEGATION",
    "mlconjug.PyVerbiste._PRONOUNS",
    "str"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.VerbPt": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "mlconjug.PyVerbiste.Verb"
   ]
  },
  "type": "class"
 },
 "mlconjug.PyVerbiste.VerbPt._load_conjug": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "len",
    "list",
    "mlconjug.PyVerbiste._NEGATION",
    "mlconjug.PyVerbiste._PRONOUNS",
    "str"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.VerbRo": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "mlconjug.PyVerbiste.Verb"
   ]
  },
  "type": "class"
 },
 "mlconjug.PyVerbiste.VerbRo._load_conjug": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "len",
    "list",
    "mlconjug.PyVerbiste._IMPERATIVE_PRONOUNS",
    "mlconjug.PyVerbiste._NEGATION",
    "mlconjug.PyVerbiste._PRONOUNS",
    "str"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.Verbiste": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "mlconjug.PyVerbiste.ConjugManager"
   ]
  },
  "type": "class"
 },
 "mlconjug.PyVerbiste.Verbiste._load_conjugations": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.Verbiste._load_tense": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.Verbiste._load_verbs": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.Verbiste._parse_conjugations": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "list",
    "xml.etree.ElementTree.parse"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste.Verbiste._parse_verbs": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "len",
    "xml.etree.ElementTree.parse"
   ]
  },
  "type": "function"
 },
 "mlconjug.PyVerbiste._ABBREVS": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mlconjug.PyVerbiste._AUXILIARIES": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "mlconjug.PyVerbiste._CONJUGATIONS_RESOURCE_PATH": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mlconjug.PyVerbiste._GENDER": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "mlconjug.PyVerbiste._IMPERATIVE_PRONOUNS": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mlconjug.PyVerbiste._LANGUAGES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlconjug.PyVerbiste._NEGATION": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "mlconjug.PyVerbiste._PRONOUNS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mlconjug.PyVerbiste._RESOURCE_PACKAGE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mlconjug.PyVerbiste._VERBS_RESOURCE_PATH": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mlconjug.PyVerbiste.__author__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mlconjug.PyVerbiste.__author_email__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mlconjug.PyVerbiste.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mlconjug.PyVerbiste.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mlconjug.PyVerbiste.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "mlconjug.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "mlconjug.SelectFromModel": {
  "data": {
   "shadows": "sklearn.feature_selection.SelectFromModel"
  },
  "type": "import"
 },
 "mlconjug._MLCONJUG_TRANSLATIONS": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "mlconjug._RESOURCE_PACKAGE": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mlconjug._SUPPORTED_LANGUAGES": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mlconjug._TRANSLATED_LANGUAGES": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mlconjug._TRANSLATIONS_PATH": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mlconjug.__author__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mlconjug.__copyright__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mlconjug.__credits__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mlconjug.__email__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mlconjug.__license__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mlconjug.__maintainer__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mlconjug.__status__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mlconjug.__version__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mlconjug._get_user_locale": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "isinstance",
    "locale.getdefaultlocale",
    "locale.windows_locale",
    "mlconjug.ctypes",
    "mlconjug.platform",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mlconjug._getdoc": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "AttributeError",
    "_",
    "isinstance",
    "mlconjug.inspect",
    "object.__doc__",
    "str"
   ]
  },
  "type": "function"
 },
 "mlconjug._user_locale": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "mlconjug.cli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mlconjug.cli.main"
   ]
  },
  "type": "module"
 },
 "mlconjug.cli.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "mlconjug.cli.main": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Conjugator",
    "_",
    "mlconjug.cli.click",
    "pprint.pprint"
   ]
  },
  "type": "function"
 },
 "mlconjug.cli.pprint": {
  "data": {
   "shadows": "pprint.pprint"
  },
  "type": "import"
 },
 "mlconjug.ctypes": {
  "data": {
   "shadows": "ctypes"
  },
  "type": "import"
 },
 "mlconjug.getdefaultlocale": {
  "data": {
   "shadows": "locale.getdefaultlocale"
  },
  "type": "import"
 },
 "mlconjug.gettext": {
  "data": {
   "shadows": "gettext"
  },
  "type": "import"
 },
 "mlconjug.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mlconjug.mlconjug": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "mlconjug.mlconjug-1": {
  "data": {
   "symbols_in_volume": [
    "mlconjug.mlconjug-1.custom_export_graphviz",
    "sklearn.tree.export_graphviz"
   ]
  },
  "type": "module"
 },
 "mlconjug.mlconjug-1.CountVectorizer": {
  "data": {
   "shadows": "sklearn.feature_extraction.text.CountVectorizer"
  },
  "type": "import"
 },
 "mlconjug.mlconjug-1.CustomCountVectorizer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "class"
 },
 "mlconjug.mlconjug-1.CustomCountVectorizer._char_ngrams": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug-1.DataSet": {
  "data": {
   "lineno": 56
  },
  "type": "class"
 },
 "mlconjug.mlconjug-1.DataSet.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug-1.DataSet.construct_dict_conjug": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug-1.DataSet.split_data": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "len",
    "mlconjug.mlconjug-1.random",
    "round"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug-1.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "mlconjug.mlconjug-1.EndingCountVectorizer": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "sklearn.feature_extraction.text.CountVectorizer"
   ]
  },
  "type": "class"
 },
 "mlconjug.mlconjug-1.EndingCountVectorizer._char_ngrams": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug-1.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mlconjug.mlconjug-1.__author__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mlconjug.mlconjug-1._tree": {
  "data": {
   "shadows": "sklearn.tree._tree"
  },
  "type": "import"
 },
 "mlconjug.mlconjug-1.custom_export_graphviz": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "isinstance",
    "mlconjug.mlconjug-1.six",
    "open",
    "recurse",
    "sklearn.tree._tree.Tree"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug-1.custom_export_graphviz.node_to_str": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "mlconjug.mlconjug-1.six",
    "sklearn.tree._tree.TREE_LEAF"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug-1.custom_export_graphviz.recurse": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "node_to_str",
    "recurse",
    "sklearn.tree._tree.TREE_LEAF"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug-1.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mlconjug.mlconjug-1.export_graphviz": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "mlconjug.mlconjug-1.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mlconjug.mlconjug-1.precision_recall_fscore_support": {
  "data": {
   "shadows": "sklearn.metrics.precision_recall_fscore_support"
  },
  "type": "import"
 },
 "mlconjug.mlconjug-1.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "mlconjug.mlconjug-1.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "mlconjug.mlconjug-1.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mlconjug.mlconjug-1.train_and_predict": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "len",
    "mlconjug.mlconjug-1.time",
    "numpy.mean",
    "print",
    "round",
    "sklearn.metrics.precision_recall_fscore_support",
    "sklearn.tree.DecisionTreeClassifier",
    "str",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug.Conjugator": {
  "data": {
   "lineno": 110
  },
  "type": "class"
 },
 "mlconjug.mlconjug.Conjugator.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ConjugManager",
    "mlconjug.mlconjug._PRE_TRAINED_MODEL_PATH",
    "mlconjug.mlconjug._RESOURCE_PACKAGE",
    "mlconjug.mlconjug.pickle",
    "mlconjug.mlconjug.pkg_resources",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug.Conjugator.__repr__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug.Conjugator.conjugate": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "VerbInfo",
    "_",
    "len",
    "mlconjug.mlconjug._LANGUAGE_FULL",
    "mlconjug.mlconjug._VERBS",
    "round"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug.Conjugator.set_model": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "_",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug.DataSet": {
  "data": {
   "lineno": 205
  },
  "type": "class"
 },
 "mlconjug.mlconjug.DataSet.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug.DataSet.__repr__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug.DataSet.construct_dict_conjug": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "collections.defaultdict",
    "list"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug.DataSet.split_data": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "_",
    "len",
    "mlconjug.mlconjug.random",
    "round"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug.Model": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mlconjug.mlconjug.Model.__init__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "CountVectorizer",
    "LinearSVC",
    "Pipeline",
    "SGDClassifier",
    "SelectFromModel",
    "functools.partial",
    "mlconjug.mlconjug.extract_verb_features"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug.Model.__repr__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "__name__",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug.Model.predict": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "mlconjug.mlconjug.Model.train": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "mlconjug.mlconjug.ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "mlconjug.mlconjug._ALPHABET": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mlconjug.mlconjug._LANGUAGE_FULL": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mlconjug.mlconjug._PRE_TRAINED_MODEL_PATH": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mlconjug.mlconjug._RESOURCE_PACKAGE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mlconjug.mlconjug._VERBS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mlconjug.mlconjug.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "mlconjug.mlconjug.extract_verb_features": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "len",
    "min",
    "mlconjug.mlconjug._ALPHABET",
    "mlconjug.mlconjug.re",
    "range",
    "round",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "mlconjug.mlconjug.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mlconjug.mlconjug.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "mlconjug.mlconjug.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "mlconjug.mlconjug.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "mlconjug.mlconjug.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mlconjug.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "mlconjug.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "mlconjug.windows_locale": {
  "data": {
   "shadows": "locale.windows_locale"
  },
  "type": "import"
 }
}