{
 "pyramid_log": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyramid_log.Formatter": {
  "lineno": 17,
  "symbols_in_volume": [
   "logging.Formatter"
  ],
  "type": "class"
 },
 "pyramid_log.Formatter.format": {
  "lineno": 56,
  "symbols_in_volume": [
   "logging.Formatter.format",
   "logging.disable",
   "logging.root.manager.disable",
   "pyramid.threadlocal.get_current_request"
  ],
  "type": "function"
 },
 "pyramid_log.Missing": {
  "lineno": 109,
  "symbols_in_volume": [
   "pyramid.compat.PY3"
  ],
  "type": "class"
 },
 "pyramid_log.Missing.__float__": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.Missing.__init__": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.Missing.__int__": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.Missing.__repr__": {
  "lineno": 135,
  "symbols_in_volume": [
   "pyramid.compat.native_"
  ],
  "type": "function"
 },
 "pyramid_log.Missing.__str__": {
  "lineno": 131,
  "symbols_in_volume": [
   "sys.getdefaultencoding"
  ],
  "type": "function"
 },
 "pyramid_log._DottedLookup": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyramid_log._DottedLookup.__getitem__": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log._DottedLookup.__init__": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log._WrapDict": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyramid_log._WrapDict.__delattr__": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log._WrapDict.__dict__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log._WrapDict.__getattr__": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log._WrapDict.__init__": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log._WrapDict.__setattr__": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests": {
  "lineno": null,
  "symbols_in_volume": [
   "pyramid.compat.text_"
  ],
  "type": "module"
 },
 "pyramid_log.tests.MockObject": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyramid_log.tests.MockObject.__init__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.MockWrapper": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyramid_log.tests.MockWrapper.__init__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestDottedLookup": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyramid_log.tests.TestDottedLookup.make_one": {
  "lineno": 232,
  "symbols_in_volume": [
   "pyramid_log._DottedLookup"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestDottedLookup.test_default_fallback": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestDottedLookup.test_dotted_attribute_lookup": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestDottedLookup.test_fallback": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestDottedLookup.test_getitem_lookup": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestFormatter": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyramid_log.tests.TestFormatter.make_one": {
  "lineno": 64,
  "symbols_in_volume": [
   "pyramid_log.Formatter"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestFormatter.test_format_asctime": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestFormatter.test_format_called_with_log_disabled": {
  "lineno": 92,
  "symbols_in_volume": [
   "logging.root.manager"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestFormatter.test_format_called_with_log_disabled.MockRequest": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyramid_log.tests.TestFormatter.test_format_called_with_log_disabled.MockRequest.disable": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestFormatter.test_format_parentheses_in_fallback": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestFormatter.test_with_explicit_request": {
  "lineno": 68,
  "symbols_in_volume": [
   "pyramid.request.Request.blank"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestFormatter.test_with_no_request": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestFormatter.test_with_threadlocal_request": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestIntegration": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyramid_log.tests.TestIntegration.logstream": {
  "lineno": 28,
  "symbols_in_volume": [
   "logging.StreamHandler",
   "logging.getLogger",
   "pyramid.compat.NativeIO",
   "pyramid_log.Formatter",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestIntegration.test_with_request": {
  "lineno": 45,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestIntegration.test_without_request": {
  "lineno": 52,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestMissing": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyramid_log.tests.TestMissing.make_one": {
  "lineno": 159,
  "symbols_in_volume": [
   "pyramid_log.Missing"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestMissing.test_float": {
  "lineno": 193,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestMissing.test_float_default_fallback": {
  "lineno": 201,
  "symbols_in_volume": [
   "math.isnan"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestMissing.test_float_not_a_number": {
  "lineno": 205,
  "symbols_in_volume": [
   "math.isnan"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestMissing.test_format": {
  "lineno": 209,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestMissing.test_format_unicode": {
  "lineno": 220,
  "symbols_in_volume": [
   "pyramid.compat.text_"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestMissing.test_int": {
  "lineno": 184,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestMissing.test_repr": {
  "lineno": 163,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestMissing.test_repr_unicode_key": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestMissing.test_str": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestWrapDict": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyramid_log.tests.TestWrapDict.make_one": {
  "lineno": 117,
  "symbols_in_volume": [
   "pyramid_log._WrapDict"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestWrapDict.test_delattr": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestWrapDict.test_dict": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestWrapDict.test_getattr": {
  "lineno": 127,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyramid_log.tests.TestWrapDict.test_getattr.Obj": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyramid_log.tests.TestWrapDict.test_getattr.Obj.m": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.TestWrapDict.test_setattr": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyramid_log.tests.current_request": {
  "lineno": 16,
  "symbols_in_volume": [
   "pyramid.request.Request.blank",
   "pyramid.testing.setUp",
   "pyramid.testing.tearDown",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyramid_log.tests.log_record": {
  "lineno": 58,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.LogRecord",
   "pytest.fixture"
  ],
  "type": "function"
 }
}