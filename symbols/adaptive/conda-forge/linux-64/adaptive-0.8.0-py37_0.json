{
 "adaptive": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "contextlib.suppress"
   ]
  },
  "type": "module"
 },
 "adaptive.AsyncRunner": {
  "data": {
   "shadows": "adaptive.runner.AsyncRunner"
  },
  "type": "import"
 },
 "adaptive.AverageLearner": {
  "data": {
   "shadows": "adaptive.learner.AverageLearner"
  },
  "type": "import"
 },
 "adaptive.BalancingLearner": {
  "data": {
   "shadows": "adaptive.learner.BalancingLearner"
  },
  "type": "import"
 },
 "adaptive.BaseLearner": {
  "data": {
   "shadows": "adaptive.learner.BaseLearner"
  },
  "type": "import"
 },
 "adaptive.BlockingRunner": {
  "data": {
   "shadows": "adaptive.runner.BlockingRunner"
  },
  "type": "import"
 },
 "adaptive.DataSaver": {
  "data": {
   "shadows": "adaptive.learner.DataSaver"
  },
  "type": "import"
 },
 "adaptive.IntegratorLearner": {
  "data": {
   "shadows": "adaptive.learner.IntegratorLearner"
  },
  "type": "import"
 },
 "adaptive.Learner1D": {
  "data": {
   "shadows": "adaptive.learner.Learner1D"
  },
  "type": "import"
 },
 "adaptive.Learner2D": {
  "data": {
   "shadows": "adaptive.learner.Learner2D"
  },
  "type": "import"
 },
 "adaptive.LearnerND": {
  "data": {
   "shadows": "adaptive.learner.LearnerND"
  },
  "type": "import"
 },
 "adaptive.Runner": {
  "data": {
   "shadows": "adaptive.runner.Runner"
  },
  "type": "import"
 },
 "adaptive.SKOptLearner": {
  "data": {
   "shadows": "adaptive.learner.SKOptLearner"
  },
  "type": "import"
 },
 "adaptive.__version__": {
  "data": {
   "shadows": "adaptive._version.__version__"
  },
  "type": "import"
 },
 "adaptive._static_version": {
  "data": {},
  "type": "module"
 },
 "adaptive._static_version.version": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "adaptive._version": {
  "data": {
   "symbols_in_volume": [
    "adaptive._version._build_py",
    "adaptive._version._sdist",
    "adaptive._version.get_version",
    "adaptive._version.os",
    "adaptive._version.package_root",
    "collections.namedtuple",
    "dict"
   ]
  },
  "type": "module"
 },
 "adaptive._version.STATIC_VERSION_FILE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "adaptive._version.Version": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "adaptive._version.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "adaptive._version.__version__": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "adaptive._version._build_py": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "distutils.command.build_py.build_py"
   ]
  },
  "type": "class"
 },
 "adaptive._version._build_py.run": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "adaptive._version.STATIC_VERSION_FILE",
    "adaptive._version._write_version",
    "adaptive._version.os",
    "adaptive._version.package_name",
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive._version._sdist": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "setuptools.command.sdist.sdist"
   ]
  },
  "type": "class"
 },
 "adaptive._version._sdist.make_release_tree": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "adaptive._version.STATIC_VERSION_FILE",
    "adaptive._version._write_version",
    "adaptive._version.os",
    "adaptive._version.package_name",
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive._version._write_version": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "OSError",
    "adaptive._version.__version__",
    "adaptive._version.os",
    "open"
   ]
  },
  "type": "function"
 },
 "adaptive._version.build_py_orig": {
  "data": {
   "shadows": "distutils.command.build_py.build_py"
  },
  "type": "import"
 },
 "adaptive._version.cmdclass": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "adaptive._version.distr_root": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "adaptive._version.get_static_version_info": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "adaptive._version.STATIC_VERSION_FILE",
    "adaptive._version.os",
    "adaptive._version.package_root",
    "exec",
    "open"
   ]
  },
  "type": "function"
 },
 "adaptive._version.get_version": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "adaptive._version.STATIC_VERSION_FILE",
    "adaptive._version.Version",
    "adaptive._version.get_static_version_info",
    "adaptive._version.get_version_from_git",
    "adaptive._version.get_version_from_git_archive",
    "adaptive._version.pep440_format"
   ]
  },
  "type": "function"
 },
 "adaptive._version.get_version_from_git": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "OSError",
    "ValueError",
    "adaptive._version.Version",
    "adaptive._version.distr_root",
    "adaptive._version.os",
    "adaptive._version.subprocess"
   ]
  },
  "type": "function"
 },
 "adaptive._version.get_version_from_git_archive": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "KeyError",
    "adaptive._version.Version",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "adaptive._version.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "adaptive._version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive._version.package_name": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "adaptive._version.package_root": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "adaptive._version.pep440_format": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "adaptive._version.sdist_orig": {
  "data": {
   "shadows": "setuptools.command.sdist.sdist"
  },
  "type": "import"
 },
 "adaptive._version.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive._version.version_is_from_git": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "adaptive._version.STATIC_VERSION_FILE",
    "adaptive._version.get_static_version_info"
   ]
  },
  "type": "function"
 },
 "adaptive.active_plotting_tasks": {
  "data": {
   "shadows": "adaptive.notebook_integration.active_plotting_tasks"
  },
  "type": "import"
 },
 "adaptive.learner": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "contextlib.suppress"
   ]
  },
  "type": "module"
 },
 "adaptive.learner.AverageLearner": {
  "data": {
   "shadows": "adaptive.learner.average_learner.AverageLearner"
  },
  "type": "import"
 },
 "adaptive.learner.BalancingLearner": {
  "data": {
   "shadows": "adaptive.learner.balancing_learner.BalancingLearner"
  },
  "type": "import"
 },
 "adaptive.learner.BaseLearner": {
  "data": {
   "shadows": "adaptive.learner.base_learner.BaseLearner"
  },
  "type": "import"
 },
 "adaptive.learner.DataSaver": {
  "data": {
   "shadows": "adaptive.learner.data_saver.DataSaver"
  },
  "type": "import"
 },
 "adaptive.learner.IntegratorLearner": {
  "data": {
   "shadows": "adaptive.learner.integrator_learner.IntegratorLearner"
  },
  "type": "import"
 },
 "adaptive.learner.Learner1D": {
  "data": {
   "shadows": "adaptive.learner.learner1D.Learner1D"
  },
  "type": "import"
 },
 "adaptive.learner.Learner2D": {
  "data": {
   "shadows": "adaptive.learner.learner2D.Learner2D"
  },
  "type": "import"
 },
 "adaptive.learner.LearnerND": {
  "data": {
   "shadows": "adaptive.learner.learnerND.LearnerND"
  },
  "type": "import"
 },
 "adaptive.learner.SKOptLearner": {
  "data": {
   "shadows": "adaptive.learner.skopt_learner.SKOptLearner"
  },
  "type": "import"
 },
 "adaptive.learner.average_learner": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.average_learner.AverageLearner": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.BaseLearner"
   ]
  },
  "type": "class"
 },
 "adaptive.learner.average_learner.AverageLearner.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Exception",
    "numpy.inf",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner._get_data": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner._loss_improvement": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner._set_data": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.ask": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "any",
    "list",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.loss": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "abs",
    "adaptive.utils.cache_latest",
    "math.sqrt",
    "max",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.mean": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.n_requested": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.plot": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "adaptive.notebook_integration.ensure_holoviews",
    "int",
    "math.sqrt",
    "max"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.remove_unfinished": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.std": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.inf",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.tell": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.tell_pending": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.BaseLearner": {
  "data": {
   "shadows": "adaptive.learner.base_learner.BaseLearner"
  },
  "type": "import"
 },
 "adaptive.learner.average_learner.cache_latest": {
  "data": {
   "shadows": "adaptive.utils.cache_latest"
  },
  "type": "import"
 },
 "adaptive.learner.average_learner.ensure_holoviews": {
  "data": {
   "shadows": "adaptive.notebook_integration.ensure_holoviews"
  },
  "type": "import"
 },
 "adaptive.learner.average_learner.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.average_learner.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.balancing_learner.BalancingLearner": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.BaseLearner"
   ]
  },
  "type": "class"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "TypeError",
    "adaptive.learner.balancing_learner.dispatch",
    "functools.partial",
    "len"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner._ask_and_tell_based_on_loss": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "map",
    "max",
    "operator.itemgetter",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner._ask_and_tell_based_on_loss_improvements": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "map",
    "max",
    "operator.itemgetter",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner._ask_and_tell_based_on_npoints": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "numpy.argmin",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner._get_data": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner._losses": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner._set_data": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.ask": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "adaptive.utils.restore"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.from_product": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "adaptive.utils.named_product",
    "classmethod",
    "cls",
    "functools.partial",
    "learner_type"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.load": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "collections.abc.Iterable",
    "fname",
    "isinstance",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.loss": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "adaptive.utils.cache_latest",
    "max"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.plot": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "adaptive.notebook_integration.ensure_holoviews",
    "collections.defaultdict",
    "dict",
    "isinstance",
    "len",
    "list",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.plot.plot_function": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "KeyError",
    "contextlib.suppress",
    "plotter",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.remove_unfinished": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.save": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "collections.abc.Iterable",
    "fname",
    "isinstance",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.strategy": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.tell": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.tell_pending": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BaseLearner": {
  "data": {
   "shadows": "adaptive.learner.base_learner.BaseLearner"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner.cache_latest": {
  "data": {
   "shadows": "adaptive.utils.cache_latest"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner.dispatch": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.ensure_holoviews": {
  "data": {
   "shadows": "adaptive.notebook_integration.ensure_holoviews"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner.named_product": {
  "data": {
   "shadows": "adaptive.utils.named_product"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner.restore": {
  "data": {
   "shadows": "adaptive.utils.restore"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive.learner.base_learner": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.base_learner.BaseLearner": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.abc"
   ]
  },
  "type": "class"
 },
 "adaptive.learner.base_learner.BaseLearner.__getstate__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.__setstate__": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner._get_data": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.abc"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner._set_data": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.abc"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.ask": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.abc"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.copy_from": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.load": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "EOFError",
    "FileNotFoundError",
    "adaptive.utils.load",
    "contextlib.suppress"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.loss": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.abc"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.remove_unfinished": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.abc"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.save": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "adaptive.utils.save"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.tell": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.tell_many": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.tell_pending": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.abc"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "adaptive.learner.base_learner.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "adaptive.learner.base_learner.load": {
  "data": {
   "shadows": "adaptive.utils.load"
  },
  "type": "import"
 },
 "adaptive.learner.base_learner.save": {
  "data": {
   "shadows": "adaptive.utils.save"
  },
  "type": "import"
 },
 "adaptive.learner.base_learner.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive.learner.base_learner.uses_nth_neighbors": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.uses_nth_neighbors._wrapped": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "adaptive.learner.data_saver": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.data_saver.BaseLearner": {
  "data": {
   "shadows": "adaptive.learner.base_learner.BaseLearner"
  },
  "type": "import"
 },
 "adaptive.learner.data_saver.DataSaver": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "adaptive.learner.data_saver.DataSaver.__getattr__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.data_saver.DataSaver.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.data_saver.DataSaver._get_data": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "adaptive.learner.data_saver.DataSaver._set_data": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "adaptive.learner.data_saver.DataSaver.load": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.BaseLearner.load",
    "adaptive.utils.copy_docstring_from"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.data_saver.DataSaver.save": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.BaseLearner.save",
    "adaptive.utils.copy_docstring_from"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.data_saver.DataSaver.tell": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.BaseLearner.tell",
    "adaptive.utils.copy_docstring_from"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.data_saver.DataSaver.tell_pending": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.BaseLearner.tell_pending",
    "adaptive.utils.copy_docstring_from"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.data_saver.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "adaptive.learner.data_saver._ds": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "adaptive.learner.data_saver.DataSaver",
    "learner_type"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.data_saver.copy_docstring_from": {
  "data": {
   "shadows": "adaptive.utils.copy_docstring_from"
  },
  "type": "import"
 },
 "adaptive.learner.data_saver.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "adaptive.learner.data_saver.make_datasaver": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "adaptive.learner.data_saver._ds",
    "adaptive.learner.data_saver.functools",
    "learner_type"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_coeffs": {
  "data": {
   "symbols_in_volume": [
    "adaptive.learner.integrator_coeffs.V",
    "adaptive.learner.integrator_coeffs.V_inv",
    "adaptive.learner.integrator_coeffs.calc_V",
    "adaptive.learner.integrator_coeffs.calc_bdef",
    "adaptive.learner.integrator_coeffs.eps",
    "adaptive.learner.integrator_coeffs.k",
    "adaptive.learner.integrator_coeffs.ns",
    "adaptive.learner.integrator_coeffs.xi",
    "list",
    "map",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.spacing",
    "numpy.sqrt",
    "zip"
   ]
  },
  "type": "module"
 },
 "adaptive.learner.integrator_coeffs.Fraction": {
  "data": {
   "shadows": "fractions.Fraction"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_coeffs.V": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.V_inv": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.Vcond": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.alpha": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.b_def": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.calc_V": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_coeffs.calc_bdef": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "adaptive.learner.integrator_coeffs.legendre",
    "adaptive.learner.integrator_coeffs.newton",
    "adaptive.learner.integrator_coeffs.scalar_product",
    "fractions.Fraction",
    "len",
    "list",
    "map",
    "max",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_coeffs.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_coeffs.eps": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.gamma": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.hint": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.k": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.legendre": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "fractions.Fraction",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_coeffs.min_sep": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.ndiv_max": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.newton": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "collections.defaultdict",
    "float",
    "int",
    "numpy.arange",
    "numpy.array",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_coeffs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_coeffs.ns": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.scalar_product": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_coeffs.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_coeffs.xi": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_learner": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.integrator_learner.BaseLearner": {
  "data": {
   "shadows": "adaptive.learner.base_learner.BaseLearner"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner.DivergentIntegralError": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.BaseLearner"
   ]
  },
  "type": "class"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.__init__": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner._Interval",
    "collections.defaultdict",
    "operator.attrgetter",
    "set",
    "sortedcontainers.SortedSet"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner._ask_and_tell_pending": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner._fill_stack": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "bool",
    "len",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner._get_data": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner._set_data": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "collections.defaultdict",
    "operator.attrgetter",
    "sortedcontainers.SortedSet"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.add_ival": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.approximating_intervals": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.ask": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "adaptive.utils.restore"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.done": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "abs",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.err": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner.sys",
    "numpy.inf",
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.igral": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.loss": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "abs",
    "adaptive.utils.cache_latest"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.npoints": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.plot": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "adaptive.notebook_integration.ensure_holoviews",
    "operator.attrgetter",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.pop_from_stack": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.propagate_removed": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "_propagate_removed_down"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.propagate_removed._propagate_removed_down": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "_propagate_removed_down"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.remove_unfinished": {
  "data": {
   "lineno": 452
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.tell": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "ValueError",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.tell_pending": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.SortedSet": {
  "data": {
   "shadows": "sortedcontainers.SortedSet"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner._Interval": {
  "data": {
   "lineno": 64
  },
  "type": "class"
 },
 "adaptive.learner.integrator_learner._Interval.T": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.__repr__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "hasattr",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.calc_err": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.zeros",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.calc_igral": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "math.sqrt"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.calc_ndiv": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner.DivergentIntegralError"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.complete_process": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "abs",
    "adaptive.learner.integrator_learner._calc_coeffs",
    "all",
    "len",
    "numpy.array",
    "scipy.linalg.norm",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.make_first": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner._Interval",
    "adaptive.learner.integrator_learner.sys",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.points": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.refine": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.refinement_complete": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "all",
    "len"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.split": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner._Interval",
    "len"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.update_heuristic_err": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.update_ndiv_recursively": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner.DivergentIntegralError"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._calc_coeffs": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner._downdate",
    "adaptive.learner.integrator_learner._zero_nans",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._downdate": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._zero_nans": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "numpy.isfinite",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner.cache_latest": {
  "data": {
   "shadows": "adaptive.utils.cache_latest"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner.ensure_holoviews": {
  "data": {
   "shadows": "adaptive.notebook_integration.ensure_holoviews"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner.norm": {
  "data": {
   "shadows": "scipy.linalg.norm"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner.restore": {
  "data": {
   "shadows": "adaptive.utils.restore"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.learner2D.BaseLearner": {
  "data": {
   "shadows": "adaptive.learner.base_learner.BaseLearner"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.Learner2D": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.BaseLearner"
   ]
  },
  "type": "class"
 },
 "adaptive.learner.learner2D.Learner2D.__init__": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "adaptive.learner.learner2D.default_loss",
    "adaptive.learner.learner2D.itertools",
    "collections.OrderedDict",
    "float",
    "len",
    "list",
    "numpy.inf",
    "numpy.mean",
    "numpy.ptp",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D._data_combined": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D._data_in_bounds": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "float",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.logical_and",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D._data_interp": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "float",
    "len",
    "list",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D._fill_stack": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "ValueError",
    "adaptive.learner.learner2D.choose_point_in_triangle",
    "clip",
    "enumerate",
    "len",
    "max",
    "min",
    "numpy.argmax",
    "numpy.inf",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D._get_data": {
  "data": {
   "lineno": 579
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D._scale": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "float",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D._set_data": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "copy.copy"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D._unscale": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "float",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.ask": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "len",
    "list",
    "max",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.bounds_are_done": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "any",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.data_combined": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.inside_bounds": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.ip": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "scipy.interpolate.LinearNDInterpolator"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.ip_combined": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "scipy.interpolate.LinearNDInterpolator"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.loss": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "adaptive.utils.cache_latest",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.npoints": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.plot": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "adaptive.learner.learner2D.areas",
    "adaptive.notebook_integration.ensure_holoviews",
    "dict",
    "int",
    "ip",
    "ip.tri.points",
    "ip.tri.vertices",
    "len",
    "math.sqrt",
    "max",
    "numpy.linspace",
    "numpy.nan",
    "numpy.pad",
    "numpy.rot90",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.remove_unfinished": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "numpy.inf",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.tell": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.tell_pending": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.vdim": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "TypeError",
    "iter",
    "len",
    "next",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.xy_scale": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.areas": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.cache_latest": {
  "data": {
   "shadows": "adaptive.utils.cache_latest"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.choose_point_in_triangle": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.cross",
    "numpy.linalg.norm",
    "numpy.roll"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.default_loss": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "adaptive.learner.learner2D.areas",
    "adaptive.learner.learner2D.deviations",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.deviations": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "deviation",
    "range",
    "scipy.interpolate.interpnd.estimate_gradients_2d_global"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.deviations.deviation": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "abs",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.ensure_holoviews": {
  "data": {
   "shadows": "adaptive.notebook_integration.ensure_holoviews"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.minimize_triangle_surface_loss": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "_get_vectors",
    "numpy.cross",
    "numpy.hstack",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.minimize_triangle_surface_loss._get_vectors": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.resolution_loss_function": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.resolution_loss_function.resolution_loss": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "adaptive.learner.learner2D.areas",
    "adaptive.learner.learner2D.default_loss",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.uniform_loss": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "adaptive.learner.learner2D.areas",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.learnerND.BaseLearner": {
  "data": {
   "shadows": "adaptive.learner.base_learner.BaseLearner"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.LearnerND": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.BaseLearner"
   ]
  },
  "type": "class"
 },
 "adaptive.learner.learnerND.LearnerND.__init__": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "NotImplementedError",
    "adaptive.learner.learnerND._simplex_evaluation_priority",
    "adaptive.learner.learnerND.default_loss",
    "adaptive.learner.learnerND.itertools",
    "adaptive.learner.learnerND.random",
    "collections.OrderedDict",
    "dict",
    "float",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "map",
    "numpy.diag",
    "numpy.diff",
    "numpy.linalg.inv",
    "set",
    "sorted",
    "sortedcontainers.SortedKeyList",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._ask": {
  "data": {
   "lineno": 525
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._ask_and_tell_pending": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "list",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._ask_best_point": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "adaptive.learner.learnerND.choose_point_in_simplex",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._ask_bound_point": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "next",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._ask_point_without_known_simplices": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diff",
    "numpy.inf",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._bounds_available": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "any",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._compute_loss": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "numpy.array",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._get_data": {
  "data": {
   "lineno": 871
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._get_hull_mesh": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "_get_plane_color",
    "adaptive.notebook_integration.ensure_plotly",
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._get_hull_mesh._get_plane_color": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "adaptive.learner.learnerND.random",
    "numpy.array",
    "numpy.linalg.matrix_rank",
    "range",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._get_iso": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "_get_vertex_index",
    "adaptive.learner.learnerND.itertools",
    "len",
    "max",
    "min",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._get_iso._get_vertex_index": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "abs",
    "adaptive.learner.learnerND.functools",
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._ip": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "scipy.interpolate.LinearNDInterpolator"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._pop_highest_existing_simplex": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "AssertionError",
    "abs",
    "len"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._recompute_all_losses": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "adaptive.learner.learnerND._simplex_evaluation_priority",
    "sortedcontainers.SortedKeyList"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._scale": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._set_data": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._simplex_exists": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._try_adding_pending_point_to_simplex": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._update_losses": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "set",
    "set.union"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._update_range": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "abs",
    "max",
    "min",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._update_subsimplex_losses": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.ask": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "adaptive.utils.restore"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.bounds_are_done": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "all",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.inside_bounds": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "all",
    "hasattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.loss": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "adaptive.utils.cache_latest",
    "dict",
    "float",
    "max"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.npoints": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.plot": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "NotImplementedError",
    "adaptive.notebook_integration.ensure_holoviews",
    "dict",
    "int",
    "len",
    "max",
    "numpy.array",
    "numpy.diag",
    "numpy.linspace",
    "numpy.min",
    "numpy.nan",
    "numpy.pad",
    "numpy.product",
    "numpy.rot90",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.plot_3D": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "adaptive.learner.learnerND.itertools",
    "adaptive.notebook_integration.ensure_plotly",
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.plot_isoline": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "adaptive.notebook_integration.ensure_holoviews",
    "collections.abc.Iterable",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.plot_isosurface": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "adaptive.notebook_integration.ensure_plotly",
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.plot_slice": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "adaptive.notebook_integration.ensure_holoviews",
    "dict",
    "enumerate",
    "int",
    "len",
    "max",
    "next",
    "numpy.diag",
    "numpy.linspace",
    "numpy.min",
    "numpy.product",
    "numpy.reshape",
    "numpy.rot90",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.points": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "float",
    "list",
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.remove_unfinished": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "dict",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.tell": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.tell_pending": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "set.union",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.tri": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "ValueError",
    "adaptive.learner.triangulation.Triangulation",
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.values": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "float",
    "list",
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.vdim": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "TypeError",
    "iter",
    "len",
    "next",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.SortedKeyList": {
  "data": {
   "shadows": "sortedcontainers.SortedKeyList"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.Triangulation": {
  "data": {
   "shadows": "adaptive.learner.triangulation.Triangulation"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND._simplex_evaluation_priority": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "round"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.cache_latest": {
  "data": {
   "shadows": "adaptive.utils.cache_latest"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.choose_point_in_simplex": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.circumsphere",
    "adaptive.learner.triangulation.point_in_simplex",
    "numpy.argmax",
    "numpy.average",
    "numpy.dot",
    "numpy.linalg.solve",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.circumsphere": {
  "data": {
   "shadows": "adaptive.learner.triangulation.circumsphere"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.curvature_loss_function": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.curvature_loss_function.curvature_loss": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.uses_nth_neighbors",
    "adaptive.learner.learnerND.triangle_loss",
    "adaptive.learner.learnerND.volume",
    "len"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.default_loss": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.simplex_volume_in_embedding",
    "collections.abc.Iterable",
    "isinstance",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.ensure_holoviews": {
  "data": {
   "shadows": "adaptive.notebook_integration.ensure_holoviews"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.ensure_plotly": {
  "data": {
   "shadows": "adaptive.notebook_integration.ensure_plotly"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.fast_det": {
  "data": {
   "shadows": "adaptive.learner.triangulation.fast_det"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.heapq": {
  "data": {
   "shadows": "heapq"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.orientation": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.linalg.slogdet",
    "numpy.subtract"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.point_in_simplex": {
  "data": {
   "shadows": "adaptive.learner.triangulation.point_in_simplex"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.restore": {
  "data": {
   "shadows": "adaptive.utils.restore"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.scipy.spatial": {
  "data": {
   "shadows": "scipy.spatial"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.simplex_volume_in_embedding": {
  "data": {
   "shadows": "adaptive.learner.triangulation.simplex_volume_in_embedding"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.std_loss": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "adaptive.learner.learnerND.volume",
    "len",
    "numpy.linalg.norm",
    "numpy.power",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.to_list": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "collections.abc.Iterable",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.triangle_loss": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.uses_nth_neighbors",
    "adaptive.learner.learnerND.to_list",
    "adaptive.learner.triangulation.simplex_volume_in_embedding",
    "len",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.uniform_loss": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "adaptive.learner.learnerND.volume"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.uses_nth_neighbors": {
  "data": {
   "shadows": "adaptive.learner.base_learner.uses_nth_neighbors"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.volume": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.fast_det",
    "float",
    "len",
    "numpy.abs",
    "numpy.math.factorial",
    "numpy.subtract"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.make_datasaver": {
  "data": {
   "shadows": "adaptive.learner.data_saver.make_datasaver"
  },
  "type": "import"
 },
 "adaptive.learner.skopt_learner": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.skopt_learner.BaseLearner": {
  "data": {
   "shadows": "adaptive.learner.base_learner.BaseLearner"
  },
  "type": "import"
 },
 "adaptive.learner.skopt_learner.Optimizer": {
  "data": {
   "shadows": "skopt.Optimizer"
  },
  "type": "import"
 },
 "adaptive.learner.skopt_learner.SKOptLearner": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.BaseLearner",
    "skopt.Optimizer"
   ]
  },
  "type": "class"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner._get_data": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner._set_data": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.ask": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NotImplementedError",
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.loss": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "adaptive.utils.cache_latest",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.npoints": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.plot": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "adaptive.notebook_integration.ensure_holoviews",
    "dict",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.remove_unfinished": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.tell": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.tell_pending": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.cache_latest": {
  "data": {
   "shadows": "adaptive.utils.cache_latest"
  },
  "type": "import"
 },
 "adaptive.learner.skopt_learner.ensure_holoviews": {
  "data": {
   "shadows": "adaptive.notebook_integration.ensure_holoviews"
  },
  "type": "import"
 },
 "adaptive.learner.skopt_learner.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.triangulation.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.Sized": {
  "data": {
   "shadows": "collections.abc.Sized"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.Triangulation": {
  "data": {
   "lineno": 251
  },
  "type": "class"
 },
 "adaptive.learner.triangulation.Triangulation.__init__": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "adaptive.learner.triangulation.is_iterable_and_sized",
    "all",
    "any",
    "len",
    "list",
    "map",
    "numpy.linalg.matrix_rank",
    "numpy.subtract",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation._extend_hull": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "ValueError",
    "adaptive.learner.triangulation.orientation",
    "collections.Counter",
    "len",
    "numpy.average",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation._relative_volume": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation._simplex_is_almost_flat": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.add_point": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.add_simplex": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.bowyer_watson": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "collections.Counter",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.circumscribed_circle": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.circumsphere",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.containing": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "set.intersection"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.convex_invariant": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.default_transform": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "numpy.eye",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.delete_simplex": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.dim": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.faces": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "itertools.chain",
    "itertools.combinations",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.get_face_sharing_neighbors": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.get_neighbors_from_vertices": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "set.union"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.get_opposing_vertices": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "ValueError",
    "find_opposing_vertex",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.get_opposing_vertices.find_opposing_vertex": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "len",
    "next",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.get_reduced_simplex": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "len",
    "list",
    "numpy.array",
    "numpy.linalg.solve",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.get_simplices_attached_to_points": {
  "data": {
   "lineno": 630
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.get_vertex": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.get_vertices": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.hull": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "collections.Counter",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.locate_point": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.point_in_cicumcircle": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.point_in_simplex": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.point_in_simplex"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.reference_invariant": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "any",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.vertex_invariant": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.volume": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "abs",
    "adaptive.learner.triangulation.fast_det",
    "float",
    "numpy.array",
    "numpy.math.factorial"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.volumes": {
  "data": {
   "lineno": 602
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.circumsphere": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.fast_2d_circumcircle",
    "adaptive.learner.triangulation.fast_3d_circumcircle",
    "adaptive.learner.triangulation.fast_det",
    "adaptive.learner.triangulation.fast_norm",
    "len",
    "numpy.delete",
    "numpy.square",
    "numpy.subtract",
    "numpy.sum",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.factorial": {
  "data": {
   "shadows": "math.factorial"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.fast_2d_circumcircle": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.math",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.fast_2d_point_in_simplex": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.fast_3d_circumcircle": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.fast_norm",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.fast_det": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "float",
    "numpy.asarray",
    "numpy.linalg.det"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.fast_norm": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.math",
    "len",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.is_iterable_and_sized": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "collections.abc.Iterable",
    "collections.abc.Sized",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.orientation": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.slogdet"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.point_in_simplex": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.fast_2d_point_in_simplex",
    "all",
    "float",
    "len",
    "numpy.array",
    "numpy.linalg.solve",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.scipy.spatial": {
  "data": {
   "shadows": "scipy.spatial"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.simplex_volume_in_embedding": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "adaptive.learner.triangulation.fast_det",
    "adaptive.learner.triangulation.math",
    "float",
    "len",
    "math.factorial",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "adaptive.live_plot": {
  "data": {
   "shadows": "adaptive.notebook_integration.live_plot"
  },
  "type": "import"
 },
 "adaptive.make_datasaver": {
  "data": {
   "shadows": "adaptive.learner.make_datasaver"
  },
  "type": "import"
 },
 "adaptive.notebook_extension": {
  "data": {
   "shadows": "adaptive.notebook_integration.notebook_extension"
  },
  "type": "import"
 },
 "adaptive.notebook_integration": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "adaptive.notebook_integration._async_enabled": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "adaptive.notebook_integration._holoviews_enabled": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "adaptive.notebook_integration._info_html": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "Exception",
    "adaptive.notebook_integration.datetime",
    "contextlib.suppress"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration._ipywidgets_enabled": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "adaptive.notebook_integration._plotly_enabled": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "adaptive.notebook_integration.active_plotting_tasks": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "adaptive.notebook_integration.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.ensure_holoviews": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "RuntimeError",
    "adaptive.notebook_integration.importlib"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.ensure_plotly": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "RuntimeError",
    "adaptive.notebook_integration._plotly_enabled",
    "adaptive.notebook_integration.plotly"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.holoviews": {
  "data": {
   "shadows": "holoviews"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.hv": {
  "data": {
   "shadows": "holoviews"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.in_ipynb": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "NameError",
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.ipywidgets": {
  "data": {
   "shadows": "ipywidgets"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.live_info": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "IPython.display.display",
    "RuntimeError",
    "adaptive.notebook_integration._holoviews_enabled",
    "adaptive.notebook_integration._info_html",
    "adaptive.notebook_integration.asyncio",
    "adaptive.notebook_integration.ipywidgets",
    "adaptive.notebook_integration.should_update",
    "update"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.live_plot": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "IPython.display.display",
    "RuntimeError",
    "adaptive.notebook_integration._holoviews_enabled",
    "adaptive.notebook_integration.active_plotting_tasks",
    "adaptive.notebook_integration.asyncio",
    "adaptive.notebook_integration.holoviews",
    "adaptive.notebook_integration.ipywidgets",
    "event",
    "plot_generator",
    "updater"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.live_plot.cancel": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "KeyError",
    "adaptive.notebook_integration.active_plotting_tasks",
    "contextlib.suppress"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.live_plot.plot_generator": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "plotter"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.notebook_extension": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "RuntimeError",
    "RuntimeWarning",
    "adaptive.notebook_integration._async_enabled",
    "adaptive.notebook_integration._holoviews_enabled",
    "adaptive.notebook_integration._ipywidgets_enabled",
    "adaptive.notebook_integration.holoviews",
    "adaptive.notebook_integration.in_ipynb",
    "adaptive.notebook_integration.warnings",
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.plotly": {
  "data": {
   "shadows": "plotly"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.plotly.figure_factory": {
  "data": {
   "shadows": "plotly.figure_factory"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.plotly.graph_objs": {
  "data": {
   "shadows": "plotly.graph_objs"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.plotly.offline": {
  "data": {
   "shadows": "plotly.offline"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.should_update": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "Exception",
    "adaptive.notebook_integration.random",
    "len"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "adaptive.runner": {
  "data": {
   "shadows": "adaptive.runner"
  },
  "type": "import"
 },
 "adaptive.runner.AsyncRunner": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "RuntimeError",
    "adaptive.runner.BaseRunner",
    "adaptive.runner.asyncio"
   ]
  },
  "type": "class"
 },
 "adaptive.runner.AsyncRunner.__init__": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "RuntimeError",
    "adaptive.notebook_integration.in_ipynb",
    "adaptive.runner.asyncio",
    "adaptive.runner.inspect",
    "adaptive.runner.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.AsyncRunner.__init__.goal": {
  "data": {
   "lineno": 460
  },
  "type": "function"
 },
 "adaptive.runner.AsyncRunner._submit": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "adaptive.runner.inspect"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.AsyncRunner.cancel": {
  "data": {
   "lineno": 511
  },
  "type": "function"
 },
 "adaptive.runner.AsyncRunner.elapsed_time": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "adaptive.runner.time"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.AsyncRunner.live_info": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "adaptive.notebook_integration.live_info"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.AsyncRunner.live_plot": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "adaptive.notebook_integration.live_plot"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.AsyncRunner.start_periodic_saving": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "_saver",
    "adaptive.runner.asyncio"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.AsyncRunner.status": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "Exception",
    "adaptive.runner.asyncio"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BaseRunner": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "adaptive.runner.abc"
   ]
  },
  "type": "class"
 },
 "adaptive.runner.BaseRunner.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "adaptive.runner._ensure_executor",
    "adaptive.runner.time"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BaseRunner._ask": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BaseRunner._cleanup": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "adaptive.runner.sys",
    "adaptive.runner.time"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BaseRunner._do_raise": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BaseRunner._get_futures": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "adaptive.runner.time",
    "len",
    "list",
    "max"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BaseRunner._get_max_tasks": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "adaptive.runner._get_ncores"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BaseRunner._process_futures": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "Exception",
    "adaptive.runner.time",
    "adaptive.runner.traceback"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BaseRunner._remove_unfinished": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BaseRunner._submit": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "adaptive.runner.abc"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BaseRunner.do_log": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BaseRunner.elapsed_time": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "adaptive.runner.abc"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BaseRunner.failed": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BaseRunner.overhead": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "adaptive.runner.BlockingRunner": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "adaptive.runner.BaseRunner"
   ]
  },
  "type": "class"
 },
 "adaptive.runner.BlockingRunner.__init__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "ValueError",
    "adaptive.runner.inspect",
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BlockingRunner._run": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "RuntimeError",
    "concurrent.futures.FIRST_COMPLETED",
    "concurrent.futures.wait"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.BlockingRunner._submit": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "adaptive.runner.BlockingRunner.elapsed_time": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "adaptive.runner.time"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.Runner": {
  "data": {
   "lineno": 610
  },
  "type": "constant"
 },
 "adaptive.runner.SequentialExecutor": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "concurrent.futures.Executor"
   ]
  },
  "type": "class"
 },
 "adaptive.runner.SequentialExecutor.map": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "fn",
    "map"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.SequentialExecutor.shutdown": {
  "data": {
   "lineno": 672
  },
  "type": "function"
 },
 "adaptive.runner.SequentialExecutor.submit": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "Exception",
    "concurrent.futures.Future",
    "fn"
   ]
  },
  "type": "function"
 },
 "adaptive.runner._default_executor": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "adaptive.runner._default_executor_kwargs": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "adaptive.runner._ensure_executor": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "TypeError",
    "adaptive.runner._default_executor",
    "adaptive.runner._default_executor_kwargs",
    "adaptive.runner.distributed",
    "adaptive.runner.ipyparallel",
    "adaptive.runner.with_distributed",
    "adaptive.runner.with_ipyparallel",
    "concurrent.futures.Executor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "adaptive.runner._get_ncores": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "TypeError",
    "adaptive.runner.SequentialExecutor",
    "adaptive.runner.distributed",
    "adaptive.runner.ipyparallel",
    "adaptive.runner.with_distributed",
    "adaptive.runner.with_ipyparallel",
    "adaptive.runner.with_mpi4py",
    "concurrent.futures.ProcessPoolExecutor",
    "concurrent.futures.ThreadPoolExecutor",
    "isinstance",
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.runner._windows_executor_msg": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "adaptive.runner.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "adaptive.runner.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "adaptive.runner.concurrent": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "adaptive.runner.distributed": {
  "data": {
   "shadows": "distributed"
  },
  "type": "import"
 },
 "adaptive.runner.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "adaptive.runner.in_ipynb": {
  "data": {
   "shadows": "adaptive.notebook_integration.in_ipynb"
  },
  "type": "import"
 },
 "adaptive.runner.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "adaptive.runner.ipyparallel": {
  "data": {
   "shadows": "ipyparallel"
  },
  "type": "import"
 },
 "adaptive.runner.live_info": {
  "data": {
   "shadows": "adaptive.notebook_integration.live_info"
  },
  "type": "import"
 },
 "adaptive.runner.live_plot": {
  "data": {
   "shadows": "adaptive.notebook_integration.live_plot"
  },
  "type": "import"
 },
 "adaptive.runner.mpi4py.futures": {
  "data": {
   "shadows": "mpi4py.futures"
  },
  "type": "import"
 },
 "adaptive.runner.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive.runner.replay_log": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.simple": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "goal"
   ]
  },
  "type": "function"
 },
 "adaptive.runner.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive.runner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "adaptive.runner.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "adaptive.runner.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "adaptive.runner.uvloop": {
  "data": {
   "shadows": "uvloop"
  },
  "type": "import"
 },
 "adaptive.runner.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "adaptive.runner.with_distributed": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "adaptive.runner.with_ipyparallel": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "adaptive.runner.with_mpi4py": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "adaptive.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive.tests": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.algorithm_4": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "adaptive.tests.algorithm_4.V",
    "adaptive.tests.algorithm_4.V_inv",
    "adaptive.tests.algorithm_4.calc_V",
    "adaptive.tests.algorithm_4.calc_bdef",
    "adaptive.tests.algorithm_4.eps",
    "adaptive.tests.algorithm_4.k",
    "adaptive.tests.algorithm_4.n",
    "adaptive.tests.algorithm_4.test_analytic",
    "adaptive.tests.algorithm_4.test_b_def",
    "adaptive.tests.algorithm_4.test_downdate",
    "adaptive.tests.algorithm_4.test_integration",
    "adaptive.tests.algorithm_4.test_legendre",
    "adaptive.tests.algorithm_4.test_newton",
    "adaptive.tests.algorithm_4.test_scalar_product",
    "adaptive.tests.algorithm_4.xi",
    "list",
    "map",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.pi",
    "numpy.spacing",
    "numpy.sqrt",
    "range",
    "scipy.linalg.inv",
    "scipy.linalg.norm",
    "zip"
   ]
  },
  "type": "module"
 },
 "adaptive.tests.algorithm_4.DivergentIntegralError": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "adaptive.tests.algorithm_4.DivergentIntegralError.__init__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.F63": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "abs",
    "adaptive.tests.algorithm_4.alpha"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.Frac": {
  "data": {
   "shadows": "fractions.Fraction"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.T_lr": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.V": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.V_inv": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.Vcond": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4._Interval": {
  "data": {
   "lineno": 229
  },
  "type": "class"
 },
 "adaptive.tests.algorithm_4._Interval.__init__": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._Interval.calc_igral_and_err": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4._calc_coeffs",
    "adaptive.tests.algorithm_4.sqrt_one_half",
    "len",
    "max",
    "numpy.zeros",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._Interval.make_first": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4._Interval",
    "adaptive.tests.algorithm_4._calc_coeffs",
    "adaptive.tests.algorithm_4.n",
    "classmethod",
    "f"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._Interval.points": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.xi"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._Interval.refine": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.hint",
    "adaptive.tests.algorithm_4.n",
    "f",
    "numpy.empty",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._Interval.split": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.T_lr",
    "adaptive.tests.algorithm_4._Interval",
    "adaptive.tests.algorithm_4.n",
    "adaptive.tests.algorithm_4.ndiv_max",
    "f",
    "len",
    "numpy.concatenate",
    "numpy.empty",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._calc_coeffs": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.V_inv",
    "adaptive.tests.algorithm_4._downdate",
    "adaptive.tests.algorithm_4._zero_nans",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._downdate": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.alpha",
    "adaptive.tests.algorithm_4.b_def",
    "adaptive.tests.algorithm_4.gamma",
    "adaptive.tests.algorithm_4.n",
    "adaptive.tests.algorithm_4.xi",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._zero_nans": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "len",
    "numpy.isfinite",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.algorithm_4": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "abs",
    "adaptive.tests.algorithm_4.DivergentIntegralError",
    "adaptive.tests.algorithm_4.Vcond",
    "adaptive.tests.algorithm_4._Interval",
    "adaptive.tests.algorithm_4.eps",
    "adaptive.tests.algorithm_4.max_ivals",
    "adaptive.tests.algorithm_4.min_sep",
    "f",
    "int",
    "isinstance",
    "len",
    "numpy.inf",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.alpha": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.b_def": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.calc_V": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.n",
    "adaptive.tests.algorithm_4.xi",
    "numpy.array",
    "numpy.ones",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.calc_bdef": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.legendre",
    "adaptive.tests.algorithm_4.newton",
    "adaptive.tests.algorithm_4.scalar_product",
    "fractions.Fraction",
    "len",
    "list",
    "map",
    "max",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.eps": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.f0": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "abs",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.f21": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.cosh",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.f24": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.f63": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "abs",
    "adaptive.tests.algorithm_4.alpha"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.f7": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.f_one_with_nan": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.inf",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.fdiv": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.gamma": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.hint": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.inv": {
  "data": {
   "shadows": "scipy.linalg.inv"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.k": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.legendre": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "fractions.Fraction",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.max_ivals": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.min_sep": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.n": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.ndiv_max": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.newton": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "collections.defaultdict",
    "float",
    "int",
    "numpy.arange",
    "numpy.array",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.norm": {
  "data": {
   "shadows": "scipy.linalg.norm"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.scalar_product": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.simple_newton": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.n",
    "itertools.combinations",
    "numpy.arange",
    "numpy.asarray",
    "numpy.cos",
    "numpy.pi",
    "numpy.prod",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.sqrt_one_half": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.test_analytic": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "F",
    "abs",
    "adaptive.tests.algorithm_4.DivergentIntegralError",
    "adaptive.tests.algorithm_4.algorithm_4",
    "adaptive.tests.algorithm_4.alpha",
    "adaptive.tests.algorithm_4.n",
    "f",
    "numpy.empty",
    "numpy.linspace",
    "numpy.random.random_sample",
    "numpy.random.seed",
    "numpy.seterr"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_analytic.F": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.F63",
    "adaptive.tests.algorithm_4.alpha"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_analytic.f": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.alpha",
    "adaptive.tests.algorithm_4.f63"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_b_def": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.b_def",
    "adaptive.tests.algorithm_4.legendre",
    "adaptive.tests.algorithm_4.n",
    "adaptive.tests.algorithm_4.newton",
    "float",
    "len",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_downdate": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4._calc_coeffs",
    "adaptive.tests.algorithm_4.xi",
    "len",
    "numpy.abs",
    "numpy.nan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_integration": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.DivergentIntegralError",
    "adaptive.tests.algorithm_4.algorithm_4",
    "adaptive.tests.algorithm_4.f0",
    "adaptive.tests.algorithm_4.f21",
    "adaptive.tests.algorithm_4.f24",
    "adaptive.tests.algorithm_4.f7",
    "adaptive.tests.algorithm_4.f_one_with_nan",
    "adaptive.tests.algorithm_4.fdiv",
    "numpy.inf",
    "numpy.seterr",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_legendre": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.legendre",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_newton": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.newton",
    "adaptive.tests.algorithm_4.simple_newton",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_scalar_product": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.legendre",
    "adaptive.tests.algorithm_4.n",
    "adaptive.tests.algorithm_4.scalar_product",
    "fractions.Fraction"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.xi": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "adaptive.tests.test_average_learner": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.test_average_learner.AverageLearner": {
  "data": {
   "shadows": "adaptive.learner.AverageLearner"
  },
  "type": "import"
 },
 "adaptive.tests.test_average_learner.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.test_average_learner.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive.tests.test_average_learner.test_avg_std_and_npoints": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abs",
    "adaptive.learner.AverageLearner",
    "adaptive.tests.test_average_learner.random",
    "len",
    "list",
    "numpy.array",
    "numpy.sqrt",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_average_learner.test_only_returns_new_points": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "adaptive.learner.AverageLearner",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_balancing_learner": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.test_balancing_learner.BalancingLearner": {
  "data": {
   "shadows": "adaptive.learner.BalancingLearner"
  },
  "type": "import"
 },
 "adaptive.tests.test_balancing_learner.Learner1D": {
  "data": {
   "shadows": "adaptive.learner.Learner1D"
  },
  "type": "import"
 },
 "adaptive.tests.test_balancing_learner.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "adaptive.tests.test_balancing_learner.simple": {
  "data": {
   "shadows": "adaptive.runner.simple"
  },
  "type": "import"
 },
 "adaptive.tests.test_balancing_learner.test_ask_0": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "adaptive.learner.BalancingLearner",
    "adaptive.learner.Learner1D",
    "adaptive.tests.test_balancing_learner.pytest",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_balancing_learner.test_balancing_learner_loss_cache": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "adaptive.learner.BalancingLearner",
    "adaptive.learner.Learner1D"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_balancing_learner.test_distribute_first_points_over_learners": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "adaptive.learner.BalancingLearner",
    "adaptive.learner.Learner1D",
    "adaptive.tests.test_balancing_learner.pytest",
    "len",
    "range",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_balancing_learner.test_strategies": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "adaptive.learner.BalancingLearner",
    "adaptive.learner.Learner1D",
    "adaptive.runner.simple",
    "adaptive.tests.test_balancing_learner.pytest",
    "all",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad": {
  "data": {
   "symbols_in_volume": [
    "numpy.spacing"
   ]
  },
  "type": "module"
 },
 "adaptive.tests.test_cquad.A4DivergentIntegralError": {
  "data": {
   "shadows": "adaptive.learner.integrator_learner.DivergentIntegralError"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.DivergentIntegralError": {
  "data": {
   "shadows": "adaptive.learner.integrator_learner.DivergentIntegralError"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.IntegratorLearner": {
  "data": {
   "shadows": "adaptive.learner.IntegratorLearner"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.eps": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "adaptive.tests.test_cquad.equal_ival": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.eps",
    "all",
    "getattr",
    "numpy.allclose",
    "print",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.equal_ivals": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.equal_ival",
    "all",
    "len",
    "operator.attrgetter",
    "print",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.ns": {
  "data": {
   "shadows": "adaptive.learner.integrator_coeffs.ns"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.run_integrator_learner": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "adaptive.learner.IntegratorLearner",
    "map",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.same_ivals": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.equal_ivals",
    "adaptive.tests.test_cquad.run_integrator_learner",
    "algorithm_4",
    "print"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_adding_points_and_skip_one_point": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "adaptive.learner.IntegratorLearner",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_approximating_intervals": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "adaptive.learner.IntegratorLearner",
    "adaptive.tests.test_cquad.random",
    "f24",
    "len",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_choosing_and_adding_multiple_points_at_once": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "adaptive.learner.IntegratorLearner"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_choosing_and_adding_points_one_by_one": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "adaptive.learner.IntegratorLearner",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_divergence": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner.DivergentIntegralError",
    "adaptive.tests.test_cquad.pytest",
    "adaptive.tests.test_cquad.run_integrator_learner",
    "algorithm_4"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_machine_precision": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.equal_ivals",
    "adaptive.tests.test_cquad.pytest",
    "adaptive.tests.test_cquad.run_integrator_learner",
    "algorithm_4",
    "functools.partial",
    "print"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_machine_precision2": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.run_integrator_learner",
    "algorithm_4",
    "functools.partial",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_removed_ask_one_by_one": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "RuntimeError",
    "adaptive.learner.IntegratorLearner",
    "adaptive.learner.integrator_coeffs.ns",
    "adaptive.tests.test_cquad.pytest",
    "numpy.exp",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_removed_choose_mutiple_points_at_once": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "adaptive.learner.IntegratorLearner",
    "adaptive.learner.integrator_coeffs.ns",
    "adaptive.tests.test_cquad.pytest",
    "list",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_tell_in_random_order": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "abs",
    "adaptive.learner.IntegratorLearner",
    "adaptive.tests.test_cquad.pytest",
    "adaptive.tests.test_cquad.random",
    "algorithm_4",
    "all",
    "f",
    "len",
    "numpy.allclose",
    "numpy.isfinite",
    "operator.attrgetter",
    "range",
    "set",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_tell_in_random_order_first_add_33": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.pytest",
    "adaptive.tests.test_cquad.test_tell_in_random_order"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_that_gives_same_intervals_as_reference_implementation": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.pytest",
    "adaptive.tests.test_cquad.same_ivals",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.test_learner1d.Learner1D": {
  "data": {
   "shadows": "adaptive.learner.Learner1D"
  },
  "type": "import"
 },
 "adaptive.tests.test_learner1d._run_on_discontinuity": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d._run_on_discontinuity.f": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.curvature_loss_function": {
  "data": {
   "shadows": "adaptive.learner.learner1D.curvature_loss_function"
  },
  "type": "import"
 },
 "adaptive.tests.test_learner1d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.test_learner1d.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive.tests.test_learner1d.simple": {
  "data": {
   "shadows": "adaptive.runner.simple"
  },
  "type": "import"
 },
 "adaptive.tests.test_learner1d.small_deviations": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "adaptive.tests.test_learner1d.random"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_NaN_loss": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.runner.simple",
    "f"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_NaN_loss.f": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "adaptive.tests.test_learner1d.random",
    "numpy.NaN"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_add_data_unordered": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_adding_existing_point_passes_silently": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_ask_does_not_return_known_points_when_returning_bounds": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_curvature_loss": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.learner.learner1D.curvature_loss_function",
    "adaptive.runner.simple",
    "f"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_curvature_loss.f": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_curvature_loss_vectors": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.learner.learner1D.curvature_loss_function",
    "adaptive.runner.simple",
    "f"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_curvature_loss_vectors.f": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_first_iteration": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_loss_at_machine_precision_interval_is_zero": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.runner.simple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_loss_at_machine_precision_interval_is_zero.f": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_loss_at_machine_precision_interval_is_zero.goal": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_loss_interpolation": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "abs",
    "adaptive.learner.Learner1D",
    "adaptive.tests.test_learner1d.random",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_loss_interpolation_for_unasked_point": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_order_adding_points": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_pending_loss_intervals": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_small_deviations": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.tests.test_learner1d.random",
    "adaptive.tests.test_learner1d.small_deviations",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_tell_many": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "_random_run",
    "adaptive.learner.Learner1D",
    "adaptive.runner.simple",
    "f",
    "numpy.array",
    "test_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_tell_many._random_run": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "adaptive.tests.test_learner1d.random",
    "max",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_tell_many.assert_equal_dicts": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_almost_equal",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_tell_many.f": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_tell_many.f_vec": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_tell_many.test_equal": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "assert_equal_dicts",
    "numpy.testing.assert_almost_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_termination_on_discontinuities": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "abs",
    "adaptive.tests.test_learner1d._run_on_discontinuity",
    "float",
    "min",
    "numpy.finfo"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_uniform_sampling1D_v2": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_uniform_sampling1D_v2.check": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "f",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_uniform_sampling1D_v2.check.f": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "adaptive.tests.test_learnernd": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.test_learnernd.LearnerND": {
  "data": {
   "shadows": "adaptive.learner.LearnerND"
  },
  "type": "import"
 },
 "adaptive.tests.test_learnernd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.test_learnernd.replay_log": {
  "data": {
   "shadows": "adaptive.runner.replay_log"
  },
  "type": "import"
 },
 "adaptive.tests.test_learnernd.scipy.spatial": {
  "data": {
   "shadows": "scipy.spatial"
  },
  "type": "import"
 },
 "adaptive.tests.test_learnernd.simple": {
  "data": {
   "shadows": "adaptive.runner.simple"
  },
  "type": "import"
 },
 "adaptive.tests.test_learnernd.test_faiure_case_LearnerND": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "adaptive.learner.LearnerND",
    "adaptive.runner.replay_log"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learnernd.test_interior_vs_bbox_gives_same_result": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "adaptive.learner.LearnerND",
    "adaptive.runner.simple",
    "generate_random_parametrization"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learnernd.test_vector_return_with_a_flat_layer": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "adaptive.learner.LearnerND",
    "adaptive.runner.simple",
    "f",
    "g",
    "generate_random_parametrization",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "adaptive.learner.Learner1D",
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.learner.SKOptLearner",
    "adaptive.tests.test_learners.adaptive",
    "adaptive.tests.test_learners.collections",
    "list"
   ]
  },
  "type": "module"
 },
 "adaptive.tests.test_learners.AverageLearner": {
  "data": {
   "shadows": "adaptive.learner.AverageLearner"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.BalancingLearner": {
  "data": {
   "shadows": "adaptive.learner.BalancingLearner"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.DataSaver": {
  "data": {
   "shadows": "adaptive.learner.DataSaver"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.IntegratorLearner": {
  "data": {
   "shadows": "adaptive.learner.IntegratorLearner"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.LOSS_FUNCTIONS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "adaptive.tests.test_learners.Learner1D": {
  "data": {
   "shadows": "adaptive.learner.Learner1D"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.Learner2D": {
  "data": {
   "shadows": "adaptive.learner.Learner2D"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.LearnerND": {
  "data": {
   "shadows": "adaptive.learner.LearnerND"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.SKOptLearner": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "adaptive.tests.test_learners.adaptive": {
  "data": {
   "shadows": "adaptive"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.add_loss_to_params": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.LOSS_FUNCTIONS",
    "dict"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.ask_randomly": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.random",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.ft": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.gaussian": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "adaptive.learner.AverageLearner",
    "adaptive.tests.test_learners.learn_with",
    "adaptive.tests.test_learners.random"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.generate_random_parametrization": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "TypeError",
    "adaptive.tests.test_learners.inspect",
    "any",
    "callable",
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.learn_with": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.learn_with._": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.learner_function_combos"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.learner_function_combos": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "adaptive.tests.test_learners.linear_with_peak": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.tests.test_learners.learn_with",
    "adaptive.tests.test_learners.uniform"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.maybe_skip": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.pytest"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.quadratic": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.tests.test_learners.learn_with",
    "adaptive.tests.test_learners.uniform"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.ring_of_fire": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.tests.test_learners.learn_with",
    "adaptive.tests.test_learners.math",
    "adaptive.tests.test_learners.uniform"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.run_with": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.add_loss_to_params",
    "adaptive.tests.test_learners.learner_function_combos",
    "adaptive.tests.test_learners.pytest",
    "dict",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.scipy.spatial": {
  "data": {
   "shadows": "scipy.spatial"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.simple": {
  "data": {
   "shadows": "adaptive.runner.simple"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.skopt": {
  "data": {
   "shadows": "skopt"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.sphere_of_fire": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "adaptive.learner.LearnerND",
    "adaptive.tests.test_learners.learn_with",
    "adaptive.tests.test_learners.math",
    "adaptive.tests.test_learners.uniform"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.test_adding_existing_data_is_idempotent": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.random",
    "adaptive.tests.test_learners.run_with",
    "f",
    "learner_type",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_adding_non_chosen_data": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "adaptive.learner.AverageLearner",
    "adaptive.learner.Learner1D",
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.random",
    "adaptive.tests.test_learners.run_with",
    "adaptive.tests.test_learners.xfail",
    "f",
    "learner_type",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_balancing_learner": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "adaptive.learner.AverageLearner",
    "adaptive.learner.BalancingLearner",
    "adaptive.learner.Learner1D",
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.random",
    "adaptive.tests.test_learners.run_with",
    "all",
    "f",
    "learner_type",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_convergence_for_arbitrary_ordering": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "NotImplementedError",
    "adaptive.learner.Learner1D",
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.tests.test_learners.pytest",
    "adaptive.tests.test_learners.run_with"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_expected_loss_improvement_is_less_than_total_loss": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "adaptive.learner.AverageLearner",
    "adaptive.learner.Learner1D",
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.random",
    "adaptive.tests.test_learners.run_with",
    "adaptive.tests.test_learners.xfail",
    "f",
    "learner_type",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_learner_accepts_lists": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.runner.simple",
    "adaptive.tests.test_learners.pytest",
    "learner_type"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_learner_accepts_lists.f": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_learner_performance_is_invariant_under_scaling": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.math",
    "adaptive.tests.test_learners.random",
    "adaptive.tests.test_learners.run_with",
    "adaptive.tests.test_learners.xfail",
    "dict",
    "f",
    "learner_type",
    "numpy.allclose",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_learner_subdomain": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "NotImplementedError",
    "adaptive.learner.Learner1D",
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.tests.test_learners.pytest",
    "adaptive.tests.test_learners.run_with"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_point_adding_order_is_irrelevant": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "adaptive.learner.AverageLearner",
    "adaptive.learner.Learner1D",
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.random",
    "adaptive.tests.test_learners.run_with",
    "adaptive.tests.test_learners.xfail",
    "f",
    "learner_type",
    "numpy.testing.assert_almost_equal",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_saving": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "adaptive.learner.AverageLearner",
    "adaptive.learner.IntegratorLearner",
    "adaptive.learner.Learner1D",
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.learner.SKOptLearner",
    "adaptive.runner.simple",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.maybe_skip",
    "adaptive.tests.test_learners.os",
    "adaptive.tests.test_learners.run_with",
    "adaptive.tests.test_learners.tempfile",
    "f",
    "learner_type",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_saving_of_balancing_learner": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "adaptive.learner.AverageLearner",
    "adaptive.learner.BalancingLearner",
    "adaptive.learner.IntegratorLearner",
    "adaptive.learner.Learner1D",
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.learner.SKOptLearner",
    "adaptive.runner.simple",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.maybe_skip",
    "adaptive.tests.test_learners.run_with",
    "adaptive.tests.test_learners.shutil",
    "adaptive.tests.test_learners.tempfile",
    "f",
    "learner_type",
    "numpy.testing.assert_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_saving_of_balancing_learner.fname": {
  "data": {
   "lineno": 485
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_saving_with_datasaver": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "adaptive.learner.AverageLearner",
    "adaptive.learner.DataSaver",
    "adaptive.learner.IntegratorLearner",
    "adaptive.learner.Learner1D",
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.learner.SKOptLearner",
    "adaptive.runner.simple",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.maybe_skip",
    "adaptive.tests.test_learners.operator",
    "adaptive.tests.test_learners.os",
    "adaptive.tests.test_learners.random",
    "adaptive.tests.test_learners.run_with",
    "adaptive.tests.test_learners.tempfile",
    "f",
    "learner_type",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_uniform_sampling1D": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.tests.test_learners.ask_randomly",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.run_with",
    "learner_type",
    "max",
    "min",
    "numpy.diff",
    "sorted"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_uniform_sampling2D": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "adaptive.learner.Learner2D",
    "adaptive.learner.LearnerND",
    "adaptive.tests.test_learners.ask_randomly",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.math",
    "adaptive.tests.test_learners.pytest",
    "adaptive.tests.test_learners.run_with",
    "int",
    "itertools.product",
    "learner_type",
    "len",
    "list",
    "max",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.uniform": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.random"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.xfail": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.pytest"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_notebook_integration": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.test_notebook_integration.ipykernel.iostream": {
  "data": {
   "shadows": "ipykernel.iostream"
  },
  "type": "import"
 },
 "adaptive.tests.test_notebook_integration.test_private_api_used_in_live_info": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "adaptive.tests.test_notebook_integration.zmq",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_notebook_integration.zmq": {
  "data": {
   "shadows": "zmq"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner": {
  "data": {
   "symbols_in_volume": [
    "adaptive.runner.simple",
    "adaptive.tests.test_runner.async_runner",
    "adaptive.tests.test_runner.blocking_runner"
   ]
  },
  "type": "module"
 },
 "adaptive.tests.test_runner.AsyncRunner": {
  "data": {
   "shadows": "adaptive.runner.AsyncRunner"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.BlockingRunner": {
  "data": {
   "shadows": "adaptive.runner.BlockingRunner"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.Client": {
  "data": {
   "shadows": "distributed.Client"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.Learner1D": {
  "data": {
   "shadows": "adaptive.learner.Learner1D"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.Learner2D": {
  "data": {
   "shadows": "adaptive.learner.Learner2D"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.LocalCluster": {
  "data": {
   "shadows": "distributed.LocalCluster"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.ProcessPoolExecutor": {
  "data": {
   "shadows": "concurrent.futures.ProcessPoolExecutor"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.SequentialExecutor": {
  "data": {
   "shadows": "adaptive.runner.SequentialExecutor"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.async_runner": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "adaptive.runner.AsyncRunner",
    "adaptive.runner.SequentialExecutor",
    "adaptive.tests.test_runner.asyncio"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.blocking_runner": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "adaptive.runner.BlockingRunner",
    "adaptive.runner.SequentialExecutor"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.dask_executor": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "adaptive.tests.test_runner.pytest",
    "distributed.Client"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.ipyparallel_executor": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "RuntimeError",
    "adaptive.tests.test_runner.pexpect",
    "adaptive.tests.test_runner.pytest",
    "ipyparallel.Client"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.linear": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.pexpect": {
  "data": {
   "shadows": "pexpect"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.runners": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "adaptive.tests.test_runner.simple": {
  "data": {
   "shadows": "adaptive.runner.simple"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.test_aync_def_function": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.runner.AsyncRunner",
    "adaptive.tests.test_runner.asyncio",
    "adaptive.tests.test_runner.trivial_goal",
    "runner",
    "runner.task"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.test_concurrent_futures_executor": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.runner.BlockingRunner",
    "adaptive.tests.test_runner.linear",
    "adaptive.tests.test_runner.trivial_goal",
    "concurrent.futures.ProcessPoolExecutor"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.test_distributed_executor": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.runner.BlockingRunner",
    "adaptive.runner.with_distributed",
    "adaptive.tests.test_runner.dask_executor",
    "adaptive.tests.test_runner.linear",
    "adaptive.tests.test_runner.pytest",
    "adaptive.tests.test_runner.trivial_goal"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.test_ipyparallel_executor": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.runner.BlockingRunner",
    "adaptive.runner.with_ipyparallel",
    "adaptive.tests.test_runner.ipyparallel_executor",
    "adaptive.tests.test_runner.linear",
    "adaptive.tests.test_runner.pytest",
    "adaptive.tests.test_runner.trivial_goal"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.test_nonconforming_output": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "adaptive.learner.Learner2D",
    "adaptive.tests.test_runner.pytest",
    "adaptive.tests.test_runner.runners",
    "adaptive.tests.test_runner.trivial_goal",
    "runner"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.test_nonconforming_output.f": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.test_simple": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "adaptive.learner.Learner1D",
    "adaptive.tests.test_runner.pytest",
    "adaptive.tests.test_runner.runners",
    "len",
    "runner"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.test_simple.f": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.trivial_goal": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.with_distributed": {
  "data": {
   "shadows": "adaptive.runner.with_distributed"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.with_ipyparallel": {
  "data": {
   "shadows": "adaptive.runner.with_ipyparallel"
  },
  "type": "import"
 },
 "adaptive.tests.test_skopt_learner": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError"
   ]
  },
  "type": "module"
 },
 "adaptive.tests.test_skopt_learner.SKOptLearner": {
  "data": {
   "shadows": "adaptive.learner.SKOptLearner"
  },
  "type": "import"
 },
 "adaptive.tests.test_skopt_learner.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.test_skopt_learner.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "adaptive.tests.test_skopt_learner.skopt": {
  "data": {
   "shadows": "skopt"
  },
  "type": "import"
 },
 "adaptive.tests.test_skopt_learner.test_skopt_learner_runs": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "adaptive.learner.SKOptLearner",
    "adaptive.tests.test_skopt_learner.pytest",
    "adaptive.tests.test_skopt_learner.with_scikit_optimize",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_skopt_learner.test_skopt_learner_runs.g": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.sin",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_skopt_learner.with_scikit_optimize": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "adaptive.tests.test_triangulation": {
  "data": {
   "symbols_in_volume": [
    "adaptive.tests.test_triangulation.pytest"
   ]
  },
  "type": "module"
 },
 "adaptive.tests.test_triangulation.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "adaptive.tests.test_triangulation.Triangulation": {
  "data": {
   "shadows": "adaptive.learner.triangulation.Triangulation"
  },
  "type": "import"
 },
 "adaptive.tests.test_triangulation._add_point_with_check": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation._check_faces_are_valid": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "any",
    "collections.Counter"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation._check_hull_is_valid": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "collections.Counter"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation._check_simplices_are_valid": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation._check_triangulation_is_valid": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "adaptive.tests.test_triangulation._check_faces_are_valid",
    "adaptive.tests.test_triangulation._check_hull_is_valid",
    "adaptive.tests.test_triangulation._check_simplices_are_valid"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation._make_standard_simplex": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation._make_triangulation": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation._standard_simplex_volume": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "math.factorial"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.factorial": {
  "data": {
   "shadows": "math.factorial"
  },
  "type": "import"
 },
 "adaptive.tests.test_triangulation.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "adaptive.tests.test_triangulation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.test_triangulation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "adaptive.tests.test_triangulation.test_adding_point_colinear_with_first_edge": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.multiply",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_adding_point_coplanar_with_a_face": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.sum",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_adding_point_inside_circumscribed_circle": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.itertools",
    "adaptive.tests.test_triangulation.with_dimension",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_adding_point_inside_standard_simplex": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation._standard_simplex_volume",
    "adaptive.tests.test_triangulation.itertools",
    "adaptive.tests.test_triangulation.pytest",
    "adaptive.tests.test_triangulation.with_dimension",
    "list",
    "numpy.isclose",
    "numpy.sum",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_adding_point_on_standard_simplex_edge": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation._standard_simplex_volume",
    "adaptive.tests.test_triangulation.with_dimension",
    "list",
    "numpy.average",
    "numpy.isclose",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_adding_point_on_standard_simplex_face": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation._standard_simplex_volume",
    "adaptive.tests.test_triangulation.itertools",
    "adaptive.tests.test_triangulation.with_dimension",
    "list",
    "numpy.average",
    "numpy.isclose",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_adding_point_outside_circumscribed_hypersphere_in_positive_orthant": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.with_dimension",
    "all",
    "len",
    "range",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_adding_point_outside_standard_simplex_in_negative_orthant": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.itertools",
    "adaptive.tests.test_triangulation.with_dimension",
    "len",
    "list",
    "range",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_initialisation_accepts_more_than_one_simplex": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.vstack",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_initialisation_raises_when_not_enough_points": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ValueError",
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.pytest",
    "adaptive.tests.test_triangulation.with_dimension"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_initialisation_raises_when_points_coplanar": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError",
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.pytest",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.average",
    "numpy.sum",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_triangulation_is_deterministic": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "adaptive.tests.test_triangulation._make_triangulation",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_triangulation_of_standard_simplex": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation._standard_simplex_volume",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.isclose",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_triangulation_raises_exception_for_1d_list": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "TypeError",
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation.pytest"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_triangulation_raises_exception_for_1d_points": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation.pytest"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_triangulation_volume_is_less_than_bounding_box": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_triangulation",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.random.random",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_zero_volume_initial_simplex_raises_exception": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.pytest",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.dot",
    "numpy.isclose",
    "numpy.linalg.det",
    "numpy.random.random",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.with_dimension": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "adaptive.tests.unit": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.unit.test_learnernd": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.unit.test_learnernd.ConvexHull": {
  "data": {
   "shadows": "scipy.spatial.ConvexHull"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd.LearnerND": {
  "data": {
   "shadows": "adaptive.learner.learnerND.LearnerND"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd.curvature_loss_function": {
  "data": {
   "shadows": "adaptive.learner.learnerND.curvature_loss_function"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd.ring_of_fire": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "adaptive.tests.unit.test_learnernd.math"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_learnernd.test_learnerND_accepts_ConvexHull_as_input": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "adaptive.learner.learnerND.LearnerND",
    "adaptive.tests.unit.test_learnernd.ring_of_fire",
    "numpy.allclose",
    "scipy.spatial.ConvexHull"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_learnernd.test_learnerND_curvature_inits_loss_depends_on_neighbors_correctly": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "adaptive.learner.learnerND.LearnerND",
    "adaptive.learner.learnerND.curvature_loss_function",
    "adaptive.tests.unit.test_learnernd.ring_of_fire"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_learnernd.test_learnerND_inits_loss_depends_on_neighbors_correctly": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "adaptive.learner.learnerND.LearnerND",
    "adaptive.tests.unit.test_learnernd.ring_of_fire"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_learnernd.test_learnerND_raises_if_too_many_neigbors": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError",
    "adaptive.learner.learnerND.LearnerND",
    "adaptive.tests.unit.test_learnernd.pytest",
    "adaptive.tests.unit.test_learnernd.ring_of_fire"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_learnernd.test_learnerND_raises_if_too_many_neigbors.loss": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.uses_nth_neighbors"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_learnernd.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd.uses_nth_neighbors": {
  "data": {
   "shadows": "adaptive.learner.base_learner.uses_nth_neighbors"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd_integration": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.unit.test_learnernd_integration.AsyncRunner": {
  "data": {
   "shadows": "adaptive.runner.AsyncRunner"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd_integration.BlockingRunner": {
  "data": {
   "shadows": "adaptive.runner.BlockingRunner"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd_integration.LearnerND": {
  "data": {
   "shadows": "adaptive.learner.LearnerND"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd_integration.SimpleRunner": {
  "data": {
   "shadows": "adaptive.runner.simple"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd_integration.curvature_loss_function": {
  "data": {
   "shadows": "adaptive.learner.learnerND.curvature_loss_function"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd_integration.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd_integration.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_learnernd_integration.ring_of_fire": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "adaptive.tests.unit.test_learnernd_integration.math"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_learnernd_integration.test_learnerND_curvature_runs_to_10_points": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "adaptive.learner.LearnerND",
    "adaptive.learner.learnerND.curvature_loss_function",
    "adaptive.runner.simple",
    "adaptive.tests.unit.test_learnernd_integration.ring_of_fire"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_learnernd_integration.test_learnerND_curvature_runs_to_10_points_Blocking": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "adaptive.learner.LearnerND",
    "adaptive.learner.learnerND.curvature_loss_function",
    "adaptive.runner.BlockingRunner",
    "adaptive.tests.unit.test_learnernd_integration.pytest",
    "adaptive.tests.unit.test_learnernd_integration.ring_of_fire",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_learnernd_integration.test_learnerND_log_works": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "adaptive.learner.LearnerND",
    "adaptive.learner.learnerND.curvature_loss_function",
    "adaptive.tests.unit.test_learnernd_integration.ring_of_fire"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_learnernd_integration.test_learnerND_runs_to_10_points": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "adaptive.learner.LearnerND",
    "adaptive.runner.simple",
    "adaptive.tests.unit.test_learnernd_integration.ring_of_fire"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_learnernd_integration.test_learnerND_runs_to_10_points_Blocking": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "adaptive.learner.LearnerND",
    "adaptive.runner.BlockingRunner",
    "adaptive.tests.unit.test_learnernd_integration.pytest",
    "adaptive.tests.unit.test_learnernd_integration.ring_of_fire",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_triangulation": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "adaptive.tests.unit.test_triangulation.Triangulation": {
  "data": {
   "shadows": "adaptive.learner.triangulation.Triangulation"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_triangulation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_triangulation.points": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "adaptive.tests.unit.test_triangulation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "adaptive.tests.unit.test_triangulation.test_triangulation_can_find_neighbors": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.unit.test_triangulation.points"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_triangulation.test_triangulation_can_find_oposing_points": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.unit.test_triangulation.points"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_triangulation.test_triangulation_can_find_the_simplices": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.unit.test_triangulation.points"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_triangulation.test_triangulation_can_get_oposing_points_if_only_one_simplex_exists": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.unit.test_triangulation.points"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.unit.test_triangulation.test_triangulation_find_opposing_vertices_raises_if_simplex_is_invalid": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "adaptive.learner.triangulation.Triangulation",
    "adaptive.tests.unit.test_triangulation.points",
    "adaptive.tests.unit.test_triangulation.pytest"
   ]
  },
  "type": "function"
 },
 "adaptive.utils": {
  "data": {
   "shadows": "adaptive.utils"
  },
  "type": "import"
 },
 "adaptive.utils.cache_latest": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "adaptive.utils.cache_latest.wrapper": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "adaptive.utils.functools",
    "f",
    "f.__name__",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "adaptive.utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "adaptive.utils.copy_docstring_from": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "adaptive.utils.copy_docstring_from.decorator": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "adaptive.utils.functools"
   ]
  },
  "type": "function"
 },
 "adaptive.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "adaptive.utils.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "adaptive.utils.load": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "_open",
    "adaptive.utils.gzip",
    "adaptive.utils.os",
    "adaptive.utils.pickle",
    "f",
    "open"
   ]
  },
  "type": "function"
 },
 "adaptive.utils.named_product": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "dict",
    "itertools.product",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive.utils.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "adaptive.utils.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "adaptive.utils.restore": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.utils.save": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "_open",
    "adaptive.utils.gzip",
    "adaptive.utils.os",
    "adaptive.utils.pickle",
    "f",
    "open"
   ]
  },
  "type": "function"
 },
 "adaptive.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 }
}