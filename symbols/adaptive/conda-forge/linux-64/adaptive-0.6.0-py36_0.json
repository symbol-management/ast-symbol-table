{
 "adaptive": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "contextlib.suppress"
   ]
  },
  "type": "module"
 },
 "adaptive.__version__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "adaptive._static_version": {
  "data": {},
  "type": "module"
 },
 "adaptive._static_version.version": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "adaptive.learner": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "contextlib.suppress"
   ]
  },
  "type": "module"
 },
 "adaptive.learner.average_learner": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.average_learner.AverageLearner": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "adaptive.learner.average_learner.AverageLearner.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Exception",
    "numpy.inf",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.ask": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "any",
    "list",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.loss": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "abs",
    "math.sqrt",
    "max",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.loss_improvement": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.mean": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.n_requested": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.plot": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ensure_holoviews",
    "int",
    "math.sqrt",
    "max"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.remove_unfinished": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.std": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.inf",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.tell": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.AverageLearner.tell_pending": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "adaptive.learner.average_learner.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "adaptive.learner.average_learner.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.average_learner.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.balancing_learner.BalancingLearner": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "TypeError",
    "adaptive.learner.balancing_learner.dispatch",
    "functools.partial",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner._ask_and_tell": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "enumerate",
    "max",
    "operator.itemgetter",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.ask": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "restore"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.from_product": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "functools.partial",
    "learner_type",
    "named_product"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.loss": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.losses": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.plot": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "ensure_holoviews",
    "isinstance",
    "len",
    "list",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.plot.plot_function": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "KeyError",
    "contextlib.suppress",
    "plotter",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.remove_unfinished": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.tell": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.BalancingLearner.tell_pending": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner.dispatch": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "adaptive.learner.balancing_learner.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "adaptive.learner.balancing_learner.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive.learner.base_learner": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.base_learner.BaseLearner": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.abc"
   ]
  },
  "type": "class"
 },
 "adaptive.learner.base_learner.BaseLearner.__getstate__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.__setstate__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.ask": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.abc"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.loss": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.abc"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.remove_unfinished": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.abc"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.tell": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.tell_many": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.BaseLearner.tell_pending": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "adaptive.learner.base_learner.abc"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.base_learner.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "adaptive.learner.base_learner.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "adaptive.learner.base_learner.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "adaptive.learner.data_saver": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.data_saver.DataSaver": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "adaptive.learner.data_saver.DataSaver.__getattr__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.data_saver.DataSaver.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.data_saver.DataSaver.tell": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "adaptive.learner.data_saver.DataSaver.tell_pending": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "adaptive.learner.data_saver.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "adaptive.learner.data_saver._ds": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "adaptive.learner.data_saver.DataSaver",
    "learner_type"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.data_saver.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "adaptive.learner.data_saver.make_datasaver": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "adaptive.learner.data_saver._ds",
    "adaptive.learner.data_saver.functools",
    "learner_type"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_coeffs": {
  "data": {
   "symbols_in_volume": [
    "adaptive.learner.integrator_coeffs.V",
    "adaptive.learner.integrator_coeffs.V_inv",
    "adaptive.learner.integrator_coeffs.calc_V",
    "adaptive.learner.integrator_coeffs.calc_bdef",
    "adaptive.learner.integrator_coeffs.eps",
    "adaptive.learner.integrator_coeffs.k",
    "adaptive.learner.integrator_coeffs.ns",
    "adaptive.learner.integrator_coeffs.xi",
    "list",
    "map",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.linspace",
    "numpy.pi",
    "numpy.spacing",
    "numpy.sqrt",
    "zip"
   ]
  },
  "type": "module"
 },
 "adaptive.learner.integrator_coeffs.Fraction": {
  "data": {
   "shadows": "fractions.Fraction"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_coeffs.V": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.V_inv": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.Vcond": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.alpha": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.b_def": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.calc_V": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ones",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_coeffs.calc_bdef": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "adaptive.learner.integrator_coeffs.legendre",
    "adaptive.learner.integrator_coeffs.newton",
    "adaptive.learner.integrator_coeffs.scalar_product",
    "fractions.Fraction",
    "len",
    "list",
    "map",
    "max",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_coeffs.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_coeffs.eps": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.gamma": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.hint": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.k": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.legendre": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "fractions.Fraction",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_coeffs.min_sep": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.ndiv_max": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.newton": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "collections.defaultdict",
    "float",
    "int",
    "numpy.arange",
    "numpy.array",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_coeffs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_coeffs.ns": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_coeffs.scalar_product": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_coeffs.scipy.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_coeffs.xi": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "adaptive.learner.integrator_learner": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.integrator_learner.DivergentIntegralError": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner": {
  "data": {
   "lineno": 309
  },
  "type": "class"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.__init__": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner._Interval",
    "collections.defaultdict",
    "operator.attrgetter",
    "set",
    "sortedcontainers.SortedSet"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner._ask_and_tell_pending": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner._fill_stack": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "bool",
    "len",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.add_ival": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.approximating_intervals": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.ask": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "restore"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.done": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "abs",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.err": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner.sys",
    "numpy.inf",
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.igral": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.loss": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.npoints": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.plot": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "ensure_holoviews",
    "operator.attrgetter",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.pop_from_stack": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.propagate_removed": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "_propagate_removed_down"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.propagate_removed._propagate_removed_down": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "_propagate_removed_down"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.remove_unfinished": {
  "data": {
   "lineno": 453
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.tell": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "ValueError",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.IntegratorLearner.tell_pending": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.SortedSet": {
  "data": {
   "shadows": "sortedcontainers.SortedSet"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner._Interval": {
  "data": {
   "lineno": 64
  },
  "type": "class"
 },
 "adaptive.learner.integrator_learner._Interval.T": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.__repr__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "hasattr",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.calc_err": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.zeros",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.calc_igral": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "math.sqrt"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.calc_ndiv": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner.DivergentIntegralError"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.complete_process": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "abs",
    "adaptive.learner.integrator_learner._calc_coeffs",
    "all",
    "len",
    "numpy.array",
    "scipy.linalg.norm",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.make_first": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner._Interval",
    "adaptive.learner.integrator_learner.sys",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.points": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.refine": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.refinement_complete": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "all",
    "len"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.split": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner._Interval",
    "len"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.update_heuristic_err": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._Interval.update_ndiv_recursively": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner.DivergentIntegralError"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._calc_coeffs": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "adaptive.learner.integrator_learner._downdate",
    "adaptive.learner.integrator_learner._zero_nans",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._downdate": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner._zero_nans": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "numpy.isfinite",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.integrator_learner.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner.norm": {
  "data": {
   "shadows": "scipy.linalg.norm"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "adaptive.learner.integrator_learner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "adaptive.learner.learner1D": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.learner1D.Learner1D": {
  "data": {
   "lineno": 81
  },
  "type": "class"
 },
 "adaptive.learner.learner1D.Learner1D.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "adaptive.learner.learner1D.default_loss",
    "adaptive.learner.learner1D.sortedcontainers",
    "copy.deepcopy",
    "float",
    "list",
    "max",
    "numpy.abs",
    "numpy.finfo",
    "numpy.inf",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D._ask_points_without_adding": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "finite_loss",
    "len",
    "list",
    "max",
    "min",
    "numpy.inf",
    "numpy.linspace",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D._ask_points_without_adding.finite_loss": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "adaptive.learner.learner1D.math"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D._subdivide_quals": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "abs",
    "adaptive.learner.learner1D.heapq",
    "adaptive.learner.learner1D.itertools",
    "adaptive.learner.learner1D.linspace",
    "list",
    "numpy.inf",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D.ask": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D.find_neighbors": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D.loss": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "float",
    "len",
    "max"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D.npoints": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D.plot": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "dict",
    "ensure_holoviews",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D.remove_unfinished": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "copy.deepcopy",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D.tell": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "copy.deepcopy",
    "float",
    "int",
    "isinstance",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D.tell_many": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "adaptive.learner.learner1D._get_neighbors_from_list",
    "copy.deepcopy",
    "len",
    "list",
    "numpy.array",
    "numpy.hstack",
    "numpy.inf",
    "numpy.max",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D.tell_pending": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D.update_interpolated_loss_in_interval": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D.update_losses": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D.update_neighbors": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D.update_scale": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "min",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.Learner1D.vdim": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "TypeError",
    "iter",
    "len",
    "next",
    "numpy.squeeze",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D._get_neighbors_from_list": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "adaptive.learner.learner1D.sortedcontainers",
    "numpy.roll",
    "numpy.sort",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "adaptive.learner.learner1D.default_loss": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError",
    "adaptive.learner.learner1D.math",
    "len",
    "numpy.hypot"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.heapq": {
  "data": {
   "shadows": "heapq"
  },
  "type": "import"
 },
 "adaptive.learner.learner1D.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "adaptive.learner.learner1D.linspace": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner1D.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "adaptive.learner.learner1D.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.learner1D.sortedcontainers": {
  "data": {
   "shadows": "sortedcontainers"
  },
  "type": "import"
 },
 "adaptive.learner.learner1D.uniform_loss": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "adaptive.learner.learner2D": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.learner2D.Learner2D": {
  "data": {
   "lineno": 146
  },
  "type": "class"
 },
 "adaptive.learner.learner2D.Learner2D.__init__": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "adaptive.learner.learner2D.default_loss",
    "adaptive.learner.learner2D.itertools",
    "collections.OrderedDict",
    "float",
    "len",
    "list",
    "numpy.inf",
    "numpy.mean",
    "numpy.ptp",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D._data_combined": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D._data_in_bounds": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "float",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.logical_and",
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D._data_interp": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "float",
    "len",
    "list",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D._fill_stack": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "ValueError",
    "adaptive.learner.learner2D.choose_point_in_triangle",
    "enumerate",
    "len",
    "numpy.argmax",
    "numpy.inf",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D._scale": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "float",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D._unscale": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "float",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.ask": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "len",
    "list",
    "max",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.bounds_are_done": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "any",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.data_combined": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.inside_bounds": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.ip": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "scipy.interpolate.LinearNDInterpolator"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.ip_combined": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "scipy.interpolate.LinearNDInterpolator"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.loss": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.npoints": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.plot": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "adaptive.learner.learner2D.areas",
    "dict",
    "ensure_holoviews",
    "int",
    "ip",
    "ip.tri.points",
    "ip.tri.vertices",
    "len",
    "math.sqrt",
    "max",
    "numpy.linspace",
    "numpy.nan",
    "numpy.pad",
    "numpy.rot90",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.remove_unfinished": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "numpy.inf",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.tell": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.tell_pending": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.vdim": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "TypeError",
    "iter",
    "len",
    "next",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.Learner2D.xy_scale": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.areas": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.choose_point_in_triangle": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "math.sqrt",
    "numpy.cross",
    "numpy.linalg.norm",
    "numpy.roll"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.default_loss": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "adaptive.learner.learner2D.areas",
    "adaptive.learner.learner2D.deviations",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.deviations": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "deviation",
    "range",
    "scipy.interpolate.interpnd.estimate_gradients_2d_global"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.deviations.deviation": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "abs",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.resolution_loss": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "adaptive.learner.learner2D.areas",
    "adaptive.learner.learner2D.deviations",
    "numpy.inf",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learner2D.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "adaptive.learner.learner2D.uniform_loss": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "adaptive.learner.learner2D.areas",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.learnerND.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.LearnerND": {
  "data": {
   "lineno": 101
  },
  "type": "class"
 },
 "adaptive.learner.learnerND.LearnerND.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "adaptive.learner.learnerND.default_loss",
    "adaptive.learner.learnerND.itertools",
    "adaptive.learner.learnerND.random",
    "collections.OrderedDict",
    "dict",
    "float",
    "len",
    "list",
    "map",
    "numpy.diag",
    "numpy.diff",
    "numpy.linalg.inv",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._ask": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._ask_and_tell_pending": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "list",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._ask_best_point": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "adaptive.learner.learnerND.choose_point_in_simplex",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._ask_bound_point": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "next",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._ask_point_without_known_simplices": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.diff",
    "numpy.inf",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._bounds_available": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "any",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._pop_highest_existing_simplex": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "AssertionError",
    "abs",
    "adaptive.learner.learnerND.heapq",
    "len"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._simplex_exists": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._try_adding_pending_point_to_simplex": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "Triangulation"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND._update_subsimplex_losses": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "adaptive.learner.learnerND.heapq"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.ask": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "restore"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.bounds_are_done": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "all",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.inside_bounds": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "all",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.ip": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "scipy.interpolate.LinearNDInterpolator"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.loss": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "float",
    "max"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.losses": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.npoints": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.plot": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "ensure_holoviews",
    "int",
    "len",
    "numpy.array",
    "numpy.linspace",
    "numpy.min",
    "numpy.nan",
    "numpy.pad",
    "numpy.rot90",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.plot_slice": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "dict",
    "ensure_holoviews",
    "enumerate",
    "int",
    "len",
    "next",
    "numpy.linspace",
    "numpy.min",
    "numpy.reshape",
    "numpy.rot90",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.points": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "float",
    "list",
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.remove_unfinished": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "dict",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.tell": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.tell_pending": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "set.union",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.tri": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "Triangulation",
    "ValueError",
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.update_losses": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "adaptive.learner.learnerND.heapq",
    "float",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.values": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "float",
    "list",
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.LearnerND.vdim": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "TypeError",
    "iter",
    "len",
    "next",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.choose_point_in_simplex": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "circumsphere",
    "numpy.argmax",
    "numpy.average",
    "numpy.dot",
    "numpy.linalg.solve",
    "numpy.unravel_index",
    "point_in_simplex"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.default_loss": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "collections.Iterable",
    "isinstance",
    "simplex_volume_in_embedding",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.heapq": {
  "data": {
   "shadows": "heapq"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.orientation": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.linalg.slogdet",
    "numpy.subtract"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.scipy.spatial": {
  "data": {
   "shadows": "scipy.spatial"
  },
  "type": "import"
 },
 "adaptive.learner.learnerND.std_loss": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "adaptive.learner.learnerND.volume",
    "len",
    "numpy.linalg.norm",
    "numpy.power",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.uniform_loss": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "adaptive.learner.learnerND.volume"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.learnerND.volume": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.linalg.det",
    "numpy.math.factorial",
    "numpy.subtract"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.skopt_learner.Optimizer": {
  "data": {
   "shadows": "skopt.Optimizer"
  },
  "type": "import"
 },
 "adaptive.learner.skopt_learner.SKOptLearner": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "skopt.Optimizer"
   ]
  },
  "type": "class"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.ask": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NotImplementedError",
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.loss": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.npoints": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.plot": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "ensure_holoviews",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.remove_unfinished": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.tell": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.SKOptLearner.tell_pending": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "adaptive.learner.skopt_learner.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation": {
  "data": {},
  "type": "module"
 },
 "adaptive.learner.triangulation.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.Sized": {
  "data": {
   "shadows": "collections.Sized"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.Triangulation": {
  "data": {
   "lineno": 238
  },
  "type": "class"
 },
 "adaptive.learner.triangulation.Triangulation.__init__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "adaptive.learner.triangulation.is_iterable_and_sized",
    "all",
    "any",
    "len",
    "list",
    "map",
    "numpy.linalg.matrix_rank",
    "numpy.subtract",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation._extend_hull": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ValueError",
    "adaptive.learner.triangulation.orientation",
    "collections.Counter",
    "len",
    "numpy.average",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.add_point": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.add_simplex": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.bowyer_watson": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "collections.Counter",
    "len",
    "list",
    "set",
    "set.union"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.circumscribed_circle": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.circumsphere",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.containing": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "set.intersection"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.convex_invariant": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.default_transform": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "numpy.eye",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.delete_simplex": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.dim": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.faces": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "itertools.chain",
    "itertools.combinations",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.get_reduced_simplex": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "len",
    "list",
    "numpy.array",
    "numpy.linalg.solve",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.get_vertices": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.hull": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "collections.Counter",
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.locate_point": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.point_in_cicumcircle": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.point_in_simplex": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.point_in_simplex"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.reference_invariant": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "any",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.vertex_invariant": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.volume": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "abs",
    "float",
    "numpy.array",
    "numpy.linalg.det",
    "numpy.math.factorial"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.Triangulation.volumes": {
  "data": {
   "lineno": 574
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.circumsphere": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.fast_2d_circumcircle",
    "adaptive.learner.triangulation.fast_3d_circumcircle",
    "adaptive.learner.triangulation.fast_norm",
    "len",
    "numpy.delete",
    "numpy.linalg.det",
    "numpy.square",
    "numpy.subtract",
    "numpy.sum",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.factorial": {
  "data": {
   "shadows": "math.factorial"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.fast_2d_circumcircle": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.math",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.fast_2d_point_in_simplex": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.fast_3d_circumcircle": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.fast_norm",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.fast_norm": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.math",
    "len",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.is_iterable_and_sized": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "collections.Iterable",
    "collections.Sized",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.orientation": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.linalg.slogdet"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.point_in_simplex": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "adaptive.learner.triangulation.fast_2d_point_in_simplex",
    "all",
    "float",
    "len",
    "numpy.array",
    "numpy.linalg.solve",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.learner.triangulation.scipy.spatial": {
  "data": {
   "shadows": "scipy.spatial"
  },
  "type": "import"
 },
 "adaptive.learner.triangulation.simplex_volume_in_embedding": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "adaptive.learner.triangulation.math",
    "float",
    "len",
    "math.factorial",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.linalg.det",
    "numpy.ones",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "adaptive.notebook_integration._async_enabled": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "adaptive.notebook_integration._info_html": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "Exception",
    "adaptive.notebook_integration.datetime",
    "contextlib.suppress"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration._plotting_enabled": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "adaptive.notebook_integration.active_plotting_tasks": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "adaptive.notebook_integration.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.display": {
  "data": {
   "shadows": "IPython.display.display"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.ensure_holoviews": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "RuntimeError",
    "adaptive.notebook_integration.importlib"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.holoviews": {
  "data": {
   "shadows": "holoviews"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.hv": {
  "data": {
   "shadows": "holoviews"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.in_ipynb": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NameError",
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.ipywidgets": {
  "data": {
   "shadows": "ipywidgets"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.live_info": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "IPython.display.display",
    "RuntimeError",
    "adaptive.notebook_integration._info_html",
    "adaptive.notebook_integration._plotting_enabled",
    "adaptive.notebook_integration.asyncio",
    "adaptive.notebook_integration.ipywidgets",
    "update"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.live_plot": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "IPython.display.display",
    "RuntimeError",
    "adaptive.notebook_integration._plotting_enabled",
    "adaptive.notebook_integration.active_plotting_tasks",
    "adaptive.notebook_integration.asyncio",
    "adaptive.notebook_integration.holoviews",
    "adaptive.notebook_integration.ipywidgets",
    "plot_generator",
    "updater"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.live_plot.cancel": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "KeyError",
    "adaptive.notebook_integration.active_plotting_tasks",
    "contextlib.suppress"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.live_plot.plot_generator": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "plotter"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.notebook_extension": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "RuntimeError",
    "RuntimeWarning",
    "adaptive.notebook_integration._async_enabled",
    "adaptive.notebook_integration._plotting_enabled",
    "adaptive.notebook_integration.holoviews",
    "adaptive.notebook_integration.in_ipynb",
    "adaptive.notebook_integration.warnings",
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "adaptive.notebook_integration.parse_version": {
  "data": {
   "shadows": "pkg_resources.parse_version"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive.notebook_integration.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "adaptive.suppress": {
  "data": {
   "shadows": "contextlib.suppress"
  },
  "type": "import"
 },
 "adaptive.tests": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.algorithm_4": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "adaptive.tests.algorithm_4.V",
    "adaptive.tests.algorithm_4.V_inv",
    "adaptive.tests.algorithm_4.calc_V",
    "adaptive.tests.algorithm_4.calc_bdef",
    "adaptive.tests.algorithm_4.eps",
    "adaptive.tests.algorithm_4.k",
    "adaptive.tests.algorithm_4.n",
    "adaptive.tests.algorithm_4.test_analytic",
    "adaptive.tests.algorithm_4.test_b_def",
    "adaptive.tests.algorithm_4.test_downdate",
    "adaptive.tests.algorithm_4.test_integration",
    "adaptive.tests.algorithm_4.test_legendre",
    "adaptive.tests.algorithm_4.test_newton",
    "adaptive.tests.algorithm_4.test_scalar_product",
    "adaptive.tests.algorithm_4.xi",
    "list",
    "map",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.pi",
    "numpy.spacing",
    "numpy.sqrt",
    "range",
    "scipy.linalg.inv",
    "scipy.linalg.norm",
    "zip"
   ]
  },
  "type": "module"
 },
 "adaptive.tests.algorithm_4.DivergentIntegralError": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "adaptive.tests.algorithm_4.DivergentIntegralError.__init__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.F63": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "abs",
    "adaptive.tests.algorithm_4.alpha"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.Frac": {
  "data": {
   "shadows": "fractions.Fraction"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.T_lr": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.V": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.V_inv": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.Vcond": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4._Interval": {
  "data": {
   "lineno": 229
  },
  "type": "class"
 },
 "adaptive.tests.algorithm_4._Interval.__init__": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._Interval.calc_igral_and_err": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4._calc_coeffs",
    "adaptive.tests.algorithm_4.sqrt_one_half",
    "len",
    "max",
    "numpy.zeros",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._Interval.make_first": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4._Interval",
    "adaptive.tests.algorithm_4._calc_coeffs",
    "adaptive.tests.algorithm_4.n",
    "classmethod",
    "f"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._Interval.points": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.xi"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._Interval.refine": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.hint",
    "adaptive.tests.algorithm_4.n",
    "f",
    "numpy.empty",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._Interval.split": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.T_lr",
    "adaptive.tests.algorithm_4._Interval",
    "adaptive.tests.algorithm_4.n",
    "adaptive.tests.algorithm_4.ndiv_max",
    "f",
    "len",
    "numpy.concatenate",
    "numpy.empty",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._calc_coeffs": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.V_inv",
    "adaptive.tests.algorithm_4._downdate",
    "adaptive.tests.algorithm_4._zero_nans",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._downdate": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.alpha",
    "adaptive.tests.algorithm_4.b_def",
    "adaptive.tests.algorithm_4.gamma",
    "adaptive.tests.algorithm_4.n",
    "adaptive.tests.algorithm_4.xi",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4._zero_nans": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "len",
    "numpy.isfinite",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.algorithm_4": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "abs",
    "adaptive.tests.algorithm_4.DivergentIntegralError",
    "adaptive.tests.algorithm_4.Vcond",
    "adaptive.tests.algorithm_4._Interval",
    "adaptive.tests.algorithm_4.eps",
    "adaptive.tests.algorithm_4.max_ivals",
    "adaptive.tests.algorithm_4.min_sep",
    "f",
    "int",
    "isinstance",
    "len",
    "numpy.inf",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.alpha": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.b_def": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.calc_V": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.n",
    "adaptive.tests.algorithm_4.xi",
    "numpy.array",
    "numpy.ones",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.calc_bdef": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.legendre",
    "adaptive.tests.algorithm_4.newton",
    "adaptive.tests.algorithm_4.scalar_product",
    "fractions.Fraction",
    "len",
    "list",
    "map",
    "max",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.eps": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.f0": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "abs",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.f21": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "numpy.cosh",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.f24": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "numpy.exp",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.f63": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "abs",
    "adaptive.tests.algorithm_4.alpha"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.f7": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.f_one_with_nan": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.inf",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.fdiv": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.gamma": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.hint": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.inv": {
  "data": {
   "shadows": "scipy.linalg.inv"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.k": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.legendre": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "fractions.Fraction",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.max_ivals": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.min_sep": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.n": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.ndiv_max": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.newton": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "collections.defaultdict",
    "float",
    "int",
    "numpy.arange",
    "numpy.array",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.norm": {
  "data": {
   "shadows": "scipy.linalg.norm"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.scalar_product": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.simple_newton": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.n",
    "itertools.combinations",
    "numpy.arange",
    "numpy.asarray",
    "numpy.cos",
    "numpy.pi",
    "numpy.prod",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.sqrt_one_half": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "adaptive.tests.algorithm_4.test_analytic": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "F",
    "abs",
    "adaptive.tests.algorithm_4.DivergentIntegralError",
    "adaptive.tests.algorithm_4.algorithm_4",
    "adaptive.tests.algorithm_4.alpha",
    "adaptive.tests.algorithm_4.n",
    "f",
    "numpy.empty",
    "numpy.linspace",
    "numpy.random.random_sample",
    "numpy.random.seed",
    "numpy.seterr"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_analytic.F": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.F63",
    "adaptive.tests.algorithm_4.alpha"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_analytic.f": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.alpha",
    "adaptive.tests.algorithm_4.f63"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_b_def": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.b_def",
    "adaptive.tests.algorithm_4.legendre",
    "adaptive.tests.algorithm_4.n",
    "adaptive.tests.algorithm_4.newton",
    "float",
    "len",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_downdate": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4._calc_coeffs",
    "adaptive.tests.algorithm_4.xi",
    "len",
    "numpy.abs",
    "numpy.nan",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_integration": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.DivergentIntegralError",
    "adaptive.tests.algorithm_4.algorithm_4",
    "adaptive.tests.algorithm_4.f0",
    "adaptive.tests.algorithm_4.f21",
    "adaptive.tests.algorithm_4.f24",
    "adaptive.tests.algorithm_4.f7",
    "adaptive.tests.algorithm_4.f_one_with_nan",
    "adaptive.tests.algorithm_4.fdiv",
    "numpy.inf",
    "numpy.seterr",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_legendre": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.legendre",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_newton": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.newton",
    "adaptive.tests.algorithm_4.simple_newton",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.test_scalar_product": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "adaptive.tests.algorithm_4.legendre",
    "adaptive.tests.algorithm_4.n",
    "adaptive.tests.algorithm_4.scalar_product",
    "fractions.Fraction"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.algorithm_4.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "adaptive.tests.algorithm_4.xi": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "adaptive.tests.test_average_learner": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.test_average_learner.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.test_average_learner.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive.tests.test_average_learner.test_avg_std_and_npoints": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "AverageLearner",
    "abs",
    "adaptive.tests.test_average_learner.random",
    "len",
    "list",
    "numpy.array",
    "numpy.sqrt",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_average_learner.test_only_returns_new_points": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "AverageLearner",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_balancing_learner": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.test_balancing_learner.test_balancing_learner_loss_cache": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "BalancingLearner",
    "Learner1D"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad": {
  "data": {
   "symbols_in_volume": [
    "numpy.spacing"
   ]
  },
  "type": "module"
 },
 "adaptive.tests.test_cquad.A4DivergentIntegralError": {
  "data": {
   "shadows": "DivergentIntegralError"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.eps": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "adaptive.tests.test_cquad.equal_ival": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.eps",
    "all",
    "getattr",
    "numpy.allclose",
    "print",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.equal_ivals": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.equal_ival",
    "all",
    "len",
    "operator.attrgetter",
    "print",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive.tests.test_cquad.rolling_shuffle": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.run_integrator_learner": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "IntegratorLearner",
    "map",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.same_ivals": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.equal_ivals",
    "adaptive.tests.test_cquad.run_integrator_learner",
    "algorithm_4",
    "print"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_adding_points_and_skip_one_point": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "IntegratorLearner",
    "numpy.testing.assert_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_approximating_intervals": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "IntegratorLearner",
    "adaptive.tests.test_cquad.random",
    "f24",
    "len",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_choosing_and_adding_multiple_points_at_once": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "IntegratorLearner"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_choosing_and_adding_points_one_by_one": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "IntegratorLearner",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_divergence": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.pytest",
    "adaptive.tests.test_cquad.run_integrator_learner",
    "algorithm_4"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_machine_precision": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.equal_ivals",
    "adaptive.tests.test_cquad.pytest",
    "adaptive.tests.test_cquad.run_integrator_learner",
    "algorithm_4",
    "functools.partial",
    "print"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_machine_precision2": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.run_integrator_learner",
    "algorithm_4",
    "functools.partial",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_removed_ask_one_by_one": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "IntegratorLearner",
    "RuntimeError",
    "adaptive.tests.test_cquad.pytest",
    "numpy.exp",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_removed_choose_mutiple_points_at_once": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "IntegratorLearner",
    "adaptive.tests.test_cquad.pytest",
    "list",
    "numpy.exp"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_tell_in_random_order": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "IntegratorLearner",
    "abs",
    "adaptive.tests.test_cquad.pytest",
    "adaptive.tests.test_cquad.random",
    "algorithm_4",
    "all",
    "f",
    "len",
    "numpy.allclose",
    "numpy.isfinite",
    "operator.attrgetter",
    "range",
    "set",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_tell_in_random_order_first_add_33": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.pytest",
    "adaptive.tests.test_cquad.test_tell_in_random_order"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_cquad.test_that_gives_same_intervals_as_reference_implementation": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "adaptive.tests.test_cquad.pytest",
    "adaptive.tests.test_cquad.same_ivals",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.test_learner1d._run_on_discontinuity": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Learner1D"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d._run_on_discontinuity.f": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.test_learner1d.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive.tests.test_learner1d.small_deviations": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "adaptive.tests.test_learner1d.random"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_add_data_unordered": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "Learner1D",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_adding_existing_point_passes_silently": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "Learner1D"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_ask_does_not_return_known_points_when_returning_bounds": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "Learner1D"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_first_iteration": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Learner1D",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_loss_at_machine_precision_interval_is_zero": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "Learner1D",
    "simple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_loss_at_machine_precision_interval_is_zero.f": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_loss_at_machine_precision_interval_is_zero.goal": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_loss_interpolation": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Learner1D",
    "abs",
    "adaptive.tests.test_learner1d.random",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_loss_interpolation_for_unasked_point": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Learner1D",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_order_adding_points": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "Learner1D"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_pending_loss_intervals": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Learner1D",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_small_deviations": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "Learner1D",
    "adaptive.tests.test_learner1d.random",
    "adaptive.tests.test_learner1d.small_deviations",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_tell_many": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "Learner1D",
    "_random_run",
    "f",
    "numpy.array",
    "simple",
    "test_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_tell_many._random_run": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "adaptive.tests.test_learner1d.random",
    "max",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_tell_many.assert_equal_dicts": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_almost_equal",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_tell_many.f": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_tell_many.f_vec": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_tell_many.test_equal": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "assert_equal_dicts",
    "numpy.testing.assert_almost_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_termination_on_discontinuities": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "abs",
    "adaptive.tests.test_learner1d._run_on_discontinuity",
    "float",
    "min",
    "numpy.finfo"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_uniform_sampling1D_v2": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_uniform_sampling1D_v2.check": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "Learner1D",
    "f",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learner1d.test_uniform_sampling1D_v2.check.f": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "adaptive.tests.test_learnernd": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.test_learnernd.test_faiure_case_LearnerND": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "LearnerND",
    "replay_log"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners": {
  "data": {
   "symbols_in_volume": [
    "adaptive.tests.test_learners.collections",
    "list"
   ]
  },
  "type": "module"
 },
 "adaptive.tests.test_learners.ask_randomly": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.random",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.ft": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.gaussian": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.learn_with",
    "adaptive.tests.test_learners.random"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.generate_random_parametrization": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "TypeError",
    "adaptive.tests.test_learners.inspect",
    "any",
    "callable",
    "functools.partial"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.it": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.learn_with": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.learn_with._": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.learner_function_combos"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.learner_function_combos": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "adaptive.tests.test_learners.linear_with_peak": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.learn_with",
    "adaptive.tests.test_learners.uniform"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.quadratic": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.learn_with",
    "adaptive.tests.test_learners.uniform"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.ring_of_fire": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.learn_with",
    "adaptive.tests.test_learners.math",
    "adaptive.tests.test_learners.uniform"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.run_with": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.learner_function_combos",
    "adaptive.tests.test_learners.pytest",
    "adaptive.tests.test_learners.xfail",
    "dict",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.scipy.spatial": {
  "data": {
   "shadows": "scipy.spatial"
  },
  "type": "import"
 },
 "adaptive.tests.test_learners.sphere_of_fire": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.learn_with",
    "adaptive.tests.test_learners.math",
    "adaptive.tests.test_learners.uniform"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_adding_existing_data_is_idempotent": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.random",
    "adaptive.tests.test_learners.run_with",
    "adaptive.tests.test_learners.xfail",
    "f",
    "learner_type",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_adding_non_chosen_data": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.random",
    "adaptive.tests.test_learners.run_with",
    "adaptive.tests.test_learners.xfail",
    "f",
    "learner_type",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_balancing_learner": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "BalancingLearner",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.random",
    "adaptive.tests.test_learners.run_with",
    "all",
    "f",
    "learner_type",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_convergence_for_arbitrary_ordering": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "NotImplementedError",
    "adaptive.tests.test_learners.pytest",
    "adaptive.tests.test_learners.run_with"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_expected_loss_improvement_is_less_than_total_loss": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.random",
    "adaptive.tests.test_learners.run_with",
    "adaptive.tests.test_learners.xfail",
    "f",
    "learner_type",
    "sum"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_learner_accepts_lists": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.pytest",
    "learner_type",
    "simple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_learner_accepts_lists.f": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_learner_performance_is_invariant_under_scaling": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "abs",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.random",
    "adaptive.tests.test_learners.run_with",
    "adaptive.tests.test_learners.xfail",
    "dict",
    "f",
    "learner_type",
    "numpy.allclose",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_learner_subdomain": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "NotImplementedError",
    "adaptive.tests.test_learners.pytest",
    "adaptive.tests.test_learners.run_with"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_point_adding_order_is_irrelevant": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.random",
    "adaptive.tests.test_learners.run_with",
    "adaptive.tests.test_learners.xfail",
    "f",
    "learner_type",
    "numpy.testing.assert_almost_equal",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_uniform_sampling1D": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.ask_randomly",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.run_with",
    "learner_type",
    "max",
    "min",
    "numpy.diff",
    "sorted"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.test_uniform_sampling2D": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.ask_randomly",
    "adaptive.tests.test_learners.generate_random_parametrization",
    "adaptive.tests.test_learners.math",
    "adaptive.tests.test_learners.pytest",
    "adaptive.tests.test_learners.run_with",
    "int",
    "itertools.product",
    "learner_type",
    "len",
    "list",
    "max",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.uniform": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.random"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_learners.xfail": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "adaptive.tests.test_learners.pytest"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_runner": {
  "data": {},
  "type": "module"
 },
 "adaptive.tests.test_runner.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.concurrent": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "adaptive.tests.test_runner.test_nonconforming_output": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "AsyncRunner",
    "BlockingRunner",
    "Learner2D",
    "SequentialExecutor",
    "adaptive.tests.test_runner.asyncio",
    "simple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.test_nonconforming_output.f": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "adaptive.tests.test_runner.test_nonconforming_output.goal": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "adaptive.tests.test_skopt_learner": {
  "data": {
   "symbols_in_volume": [
    "ModuleNotFoundError"
   ]
  },
  "type": "module"
 },
 "adaptive.tests.test_skopt_learner.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.test_skopt_learner.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "adaptive.tests.test_skopt_learner.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "adaptive.tests.test_skopt_learner.skopt": {
  "data": {
   "shadows": "skopt"
  },
  "type": "import"
 },
 "adaptive.tests.test_skopt_learner.test_skopt_learner_runs": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "SKOptLearner",
    "adaptive.tests.test_skopt_learner.pytest",
    "adaptive.tests.test_skopt_learner.with_scikit_optimize",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_skopt_learner.test_skopt_learner_runs.g": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.sin",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_skopt_learner.with_scikit_optimize": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "adaptive.tests.test_triangulation": {
  "data": {
   "symbols_in_volume": [
    "adaptive.tests.test_triangulation.pytest"
   ]
  },
  "type": "module"
 },
 "adaptive.tests.test_triangulation.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "adaptive.tests.test_triangulation._add_point_with_check": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation._check_faces_are_valid": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "any",
    "collections.Counter"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation._check_hull_is_valid": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "collections.Counter",
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation._check_simplices_are_valid": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation._check_triangulation_is_valid": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "adaptive.tests.test_triangulation._check_faces_are_valid",
    "adaptive.tests.test_triangulation._check_hull_is_valid",
    "adaptive.tests.test_triangulation._check_simplices_are_valid"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation._make_standard_simplex": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation._make_triangulation": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation._standard_simplex_volume": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "math.factorial"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "adaptive.tests.test_triangulation.factorial": {
  "data": {
   "shadows": "math.factorial"
  },
  "type": "import"
 },
 "adaptive.tests.test_triangulation.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "adaptive.tests.test_triangulation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "adaptive.tests.test_triangulation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "adaptive.tests.test_triangulation.test_adding_point_colinear_with_first_edge": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.multiply",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_adding_point_coplanar_with_a_face": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.sum",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_adding_point_inside_circumscribed_circle": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.itertools",
    "adaptive.tests.test_triangulation.with_dimension",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_adding_point_inside_standard_simplex": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation._standard_simplex_volume",
    "adaptive.tests.test_triangulation.itertools",
    "adaptive.tests.test_triangulation.pytest",
    "adaptive.tests.test_triangulation.with_dimension",
    "list",
    "numpy.isclose",
    "numpy.sum",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_adding_point_on_standard_simplex_edge": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation._standard_simplex_volume",
    "adaptive.tests.test_triangulation.with_dimension",
    "list",
    "numpy.average",
    "numpy.isclose",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_adding_point_on_standard_simplex_face": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation._standard_simplex_volume",
    "adaptive.tests.test_triangulation.itertools",
    "adaptive.tests.test_triangulation.with_dimension",
    "list",
    "numpy.average",
    "numpy.isclose",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_adding_point_outside_circumscribed_hypersphere_in_positive_orthant": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.with_dimension",
    "all",
    "len",
    "range",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_adding_point_outside_standard_simplex_in_negative_orthant": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "Triangulation",
    "adaptive.tests.test_triangulation._add_point_with_check",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.itertools",
    "adaptive.tests.test_triangulation.with_dimension",
    "len",
    "list",
    "range",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_initialisation_accepts_more_than_one_simplex": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "Triangulation",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.vstack",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_initialisation_raises_when_not_enough_points": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "Triangulation",
    "ValueError",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.pytest",
    "adaptive.tests.test_triangulation.with_dimension"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_initialisation_raises_when_points_coplanar": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "Triangulation",
    "ValueError",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.pytest",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.average",
    "numpy.sum",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_triangulation_is_deterministic": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "adaptive.tests.test_triangulation._make_triangulation",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_triangulation_of_standard_simplex": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Triangulation",
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation._standard_simplex_volume",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.isclose",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_triangulation_raises_exception_for_1d_list": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "Triangulation",
    "TypeError",
    "adaptive.tests.test_triangulation.pytest"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_triangulation_raises_exception_for_1d_points": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Triangulation",
    "ValueError",
    "adaptive.tests.test_triangulation.pytest"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_triangulation_volume_is_less_than_bounding_box": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "adaptive.tests.test_triangulation._check_triangulation_is_valid",
    "adaptive.tests.test_triangulation._make_triangulation",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.random.random",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.test_zero_volume_initial_simplex_raises_exception": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Triangulation",
    "ValueError",
    "adaptive.tests.test_triangulation._make_standard_simplex",
    "adaptive.tests.test_triangulation.pytest",
    "adaptive.tests.test_triangulation.with_dimension",
    "numpy.dot",
    "numpy.isclose",
    "numpy.linalg.det",
    "numpy.random.random",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "adaptive.tests.test_triangulation.with_dimension": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "adaptive.utils": {
  "data": {},
  "type": "module"
 },
 "adaptive.utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "adaptive.utils.named_product": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "dict",
    "itertools.product",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.utils.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "adaptive.utils.restore": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "zip"
   ]
  },
  "type": "function"
 },
 "adaptive.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "adaptive.utils.timed": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "adaptive.utils.time",
    "f"
   ]
  },
  "type": "function"
 },
 "adaptive.version": {
  "data": {
   "symbols_in_volume": [
    "adaptive.version._build",
    "adaptive.version._sdist",
    "adaptive.version.get_version",
    "adaptive.version.os",
    "adaptive.version.package_root",
    "collections.namedtuple",
    "dict"
   ]
  },
  "type": "module"
 },
 "adaptive.version.STATIC_VERSION_FILE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "adaptive.version.Version": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "adaptive.version.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "adaptive.version._build": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "distutils.command.build.build"
   ]
  },
  "type": "class"
 },
 "adaptive.version._build.run": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "adaptive.version.STATIC_VERSION_FILE",
    "adaptive.version._write_version",
    "adaptive.version.os",
    "adaptive.version.package_name",
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive.version._sdist": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "setuptools.command.sdist.sdist"
   ]
  },
  "type": "class"
 },
 "adaptive.version._sdist.make_release_tree": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "adaptive.version.STATIC_VERSION_FILE",
    "adaptive.version._write_version",
    "adaptive.version.os",
    "adaptive.version.package_name",
    "super"
   ]
  },
  "type": "function"
 },
 "adaptive.version._write_version": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "OSError",
    "adaptive.version.os",
    "adaptive.version.version",
    "open"
   ]
  },
  "type": "function"
 },
 "adaptive.version.build_orig": {
  "data": {
   "shadows": "distutils.command.build.build"
  },
  "type": "import"
 },
 "adaptive.version.cmdclass": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "adaptive.version.distr_root": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "adaptive.version.get_version": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "adaptive.version.STATIC_VERSION_FILE",
    "adaptive.version.Version",
    "adaptive.version.get_version_from_git",
    "adaptive.version.get_version_from_git_archive",
    "adaptive.version.os",
    "adaptive.version.package_root",
    "adaptive.version.semver_format",
    "exec",
    "open"
   ]
  },
  "type": "function"
 },
 "adaptive.version.get_version_from_git": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "OSError",
    "adaptive.version.Version",
    "adaptive.version.distr_root",
    "adaptive.version.os",
    "adaptive.version.subprocess"
   ]
  },
  "type": "function"
 },
 "adaptive.version.get_version_from_git_archive": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "KeyError",
    "adaptive.version.Version",
    "len",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "adaptive.version.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "adaptive.version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "adaptive.version.package_name": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "adaptive.version.package_root": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "adaptive.version.sdist_orig": {
  "data": {
   "shadows": "setuptools.command.sdist.sdist"
  },
  "type": "import"
 },
 "adaptive.version.semver_format": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "adaptive.version.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "adaptive.version.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "adaptive.version.version": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 }
}