{
 "localstack": {
  "data": {},
  "type": "module"
 },
 "localstack.config": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "boto3.Session",
    "float",
    "int",
    "localstack.config.CONFIG_ENV_VARS",
    "localstack.config.DATA_DIR",
    "localstack.config.DEBUG",
    "localstack.config.DOCKER_BRIDGE_IP",
    "localstack.config.DOCKER_HOST_FROM_CONTAINER",
    "localstack.config.HOSTNAME",
    "localstack.config.LAMBDA_EXECUTOR",
    "localstack.config.LOCALSTACK_HOSTNAME",
    "localstack.config.PORT_WEB_UI",
    "localstack.config.TMP_FOLDER",
    "localstack.config.candidates",
    "localstack.config.clean_key",
    "localstack.config.has_docker",
    "localstack.config.in_docker",
    "localstack.config.is_env_not_false",
    "localstack.config.is_env_true",
    "localstack.config.is_in_docker",
    "localstack.config.is_in_linux",
    "localstack.config.is_linux",
    "localstack.config.logging",
    "localstack.config.no_proxy",
    "localstack.config.os",
    "localstack.config.ping",
    "localstack.config.populate_configs",
    "localstack.config.six",
    "localstack.config.socket",
    "localstack.config.tempfile",
    "localstack.constants.AWS_REGION_US_EAST_1",
    "localstack.constants.DEFAULT_LAMBDA_CONTAINER_REGISTRY",
    "localstack.constants.DEFAULT_PORT_EDGE",
    "localstack.constants.DEFAULT_PORT_WEB_UI",
    "localstack.constants.DEFAULT_SERVICE_PORTS",
    "localstack.constants.FALSE_STRINGS",
    "localstack.constants.LOCALHOST",
    "localstack.constants.LOCALHOST_IP",
    "os.path.expanduser",
    "set"
   ]
  },
  "type": "module"
 },
 "localstack.config.AWS_REGION_US_EAST_1": {
  "data": {
   "shadows": "localstack.constants.AWS_REGION_US_EAST_1"
  },
  "type": "import"
 },
 "localstack.config.BUNDLE_API_PROCESSES": {
  "data": {
   "lineno": 380
  },
  "type": "constant"
 },
 "localstack.config.CLI_COMMANDS": {
  "data": {
   "lineno": 282
  },
  "type": "constant"
 },
 "localstack.config.CONFIG_ENV_VARS": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "localstack.config.CONFIG_FILE_PATH": {
  "data": {
   "lineno": 270
  },
  "type": "constant"
 },
 "localstack.config.DATA_DIR": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "localstack.config.DEBUG": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "localstack.config.DEFAULT_ENCODING": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "localstack.config.DEFAULT_LAMBDA_CONTAINER_REGISTRY": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_LAMBDA_CONTAINER_REGISTRY"
  },
  "type": "import"
 },
 "localstack.config.DEFAULT_PORT_EDGE": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_PORT_EDGE"
  },
  "type": "import"
 },
 "localstack.config.DEFAULT_PORT_WEB_UI": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_PORT_WEB_UI"
  },
  "type": "import"
 },
 "localstack.config.DEFAULT_REGION": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "localstack.config.DEFAULT_SERVICE_PORTS": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_SERVICE_PORTS"
  },
  "type": "import"
 },
 "localstack.config.DISABLE_EVENTS": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "localstack.config.DOCKER_BRIDGE_IP": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "localstack.config.DOCKER_CMD": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "localstack.config.DOCKER_FLAGS": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "localstack.config.DOCKER_HOST_FROM_CONTAINER": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "localstack.config.DOCKER_SOCK": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "localstack.config.DYNAMODB_ERROR_PROBABILITY": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "localstack.config.DYNAMODB_HEAP_SIZE": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "localstack.config.DYNAMODB_READ_ERROR_PROBABILITY": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "localstack.config.DYNAMODB_WRITE_ERROR_PROBABILITY": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "localstack.config.EDGE_PORT": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "localstack.config.EDGE_PORT_HTTP": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "localstack.config.EXTRA_CORS_ALLOWED_HEADERS": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "localstack.config.EXTRA_CORS_EXPOSE_HEADERS": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "localstack.config.FALSE_STRINGS": {
  "data": {
   "shadows": "localstack.constants.FALSE_STRINGS"
  },
  "type": "import"
 },
 "localstack.config.FORWARD_EDGE_INMEM": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "localstack.config.HOSTNAME": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "localstack.config.HOSTNAME_EXTERNAL": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "localstack.config.HOST_TMP_FOLDER": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "localstack.config.KINESIS_ERROR_PROBABILITY": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "localstack.config.KINESIS_LATENCY": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "localstack.config.KINESIS_SHARD_LIMIT": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "localstack.config.LAMBDA_CONTAINER_REGISTRY": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "localstack.config.LAMBDA_DOCKER_DNS": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "localstack.config.LAMBDA_DOCKER_NETWORK": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "localstack.config.LAMBDA_EXECUTOR": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "localstack.config.LAMBDA_FALLBACK_URL": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "localstack.config.LAMBDA_JAVA_OPTS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "localstack.config.LAMBDA_REMOTE_DOCKER": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "localstack.config.LAMBDA_REMOVE_CONTAINERS": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "localstack.config.LOCALHOST": {
  "data": {
   "shadows": "localstack.constants.LOCALHOST"
  },
  "type": "import"
 },
 "localstack.config.LOCALHOST_IP": {
  "data": {
   "shadows": "localstack.constants.LOCALHOST_IP"
  },
  "type": "import"
 },
 "localstack.config.LOCALSTACK_HOSTNAME": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "localstack.config.MAIN_CONTAINER_NAME": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "localstack.config.PORT_WEB_UI": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "localstack.config.PORT_WEB_UI_SSL": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "localstack.config.SKIP_INFRA_DOWNLOADS": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "localstack.config.SQS_PORT_EXTERNAL": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "localstack.config.START_WEB": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "localstack.config.STEPFUNCTIONS_LAMBDA_ENDPOINT": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "localstack.config.SYNCHRONOUS_API_GATEWAY_EVENTS": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "localstack.config.SYNCHRONOUS_DYNAMODB_EVENTS": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "localstack.config.SYNCHRONOUS_KINESIS_EVENTS": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "localstack.config.SYNCHRONOUS_SNS_EVENTS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "localstack.config.SYNCHRONOUS_SQS_EVENTS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "localstack.config.Session": {
  "data": {
   "shadows": "boto3.Session"
  },
  "type": "import"
 },
 "localstack.config.TMP_FOLDER": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "localstack.config.TRUE_STRINGS": {
  "data": {
   "shadows": "localstack.constants.TRUE_STRINGS"
  },
  "type": "import"
 },
 "localstack.config.USE_HTTP2_SERVER": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "localstack.config.USE_PROFILER": {
  "data": {
   "lineno": 383
  },
  "type": "constant"
 },
 "localstack.config.USE_SSL": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "localstack.config.VALID_REGIONS": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "localstack.config.WINDOWS_DOCKER_MOUNT_PREFIX": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "localstack.config.candidates": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "localstack.config.clean_key": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "localstack.config.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "localstack.config.external_service_url": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "localstack.config.HOSTNAME_EXTERNAL",
    "localstack.config.get_protocol",
    "localstack.config.service_port"
   ]
  },
  "type": "function"
 },
 "localstack.config.get_edge_url": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "localstack.config.EDGE_PORT",
    "localstack.config.EDGE_PORT_HTTP",
    "localstack.config.LOCALSTACK_HOSTNAME",
    "localstack.config.get_protocol"
   ]
  },
  "type": "function"
 },
 "localstack.config.get_protocol": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "localstack.config.USE_SSL"
   ]
  },
  "type": "function"
 },
 "localstack.config.has_docker": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "Exception",
    "localstack.config.os",
    "localstack.config.subprocess",
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.config.in_docker": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "localstack.config.os",
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.config.is_env_not_false": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "localstack.config.os",
    "localstack.constants.FALSE_STRINGS"
   ]
  },
  "type": "function"
 },
 "localstack.config.is_env_true": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "localstack.config.os",
    "localstack.constants.TRUE_STRINGS"
   ]
  },
  "type": "function"
 },
 "localstack.config.is_in_docker": {
  "data": {
   "lineno": 234
  },
  "type": "constant"
 },
 "localstack.config.is_in_linux": {
  "data": {
   "lineno": 235
  },
  "type": "constant"
 },
 "localstack.config.is_linux": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "localstack.config.six",
    "localstack.config.subprocess"
   ]
  },
  "type": "function"
 },
 "localstack.config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.config.no_proxy": {
  "data": {
   "lineno": 273
  },
  "type": "constant"
 },
 "localstack.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.config.parse_service_ports": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "Exception",
    "int",
    "len",
    "localstack.config.os",
    "localstack.config.re",
    "localstack.constants.DEFAULT_SERVICE_PORTS",
    "localstack.constants.DEFAULT_SERVICE_PORTS.get"
   ]
  },
  "type": "function"
 },
 "localstack.config.ping": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "localstack.config.platform",
    "localstack.config.subprocess"
   ]
  },
  "type": "function"
 },
 "localstack.config.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "localstack.config.populate_configs": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "globals",
    "list",
    "localstack.config.CONFIG_ENV_VARS",
    "localstack.config.LOCALSTACK_HOSTNAME",
    "localstack.config.get_protocol",
    "localstack.config.os",
    "localstack.config.parse_service_ports",
    "localstack.config.service_port",
    "localstack.config.six",
    "localstack.constants.DEFAULT_SERVICE_PORTS",
    "set"
   ]
  },
  "type": "function"
 },
 "localstack.config.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.config.service_port": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "localstack.config.EDGE_PORT",
    "localstack.config.EDGE_PORT_HTTP",
    "localstack.config.FORWARD_EDGE_INMEM"
   ]
  },
  "type": "function"
 },
 "localstack.config.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.config.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "localstack.config.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "localstack.config.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "localstack.constants": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "int",
    "localstack.constants.LOCALSTACK_ROOT_FOLDER",
    "localstack.constants.LOCALSTACK_VENV_FOLDER",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.constants.os"
   ]
  },
  "type": "module"
 },
 "localstack.constants.API_ENDPOINT": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "localstack.constants.APPLICATION_AMZ_CBOR_1_1": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "localstack.constants.APPLICATION_AMZ_JSON_1_0": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "localstack.constants.APPLICATION_AMZ_JSON_1_1": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "localstack.constants.APPLICATION_JSON": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "localstack.constants.APPLICATION_XML": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "localstack.constants.APPLICATION_X_WWW_FORM_URLENCODED": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "localstack.constants.AWS_REGION_US_EAST_1": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "localstack.constants.BIND_HOST": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "localstack.constants.CONFIG_UPDATE_PATH": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_LAMBDA_CONTAINER_REGISTRY": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_PORT_EDGE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_PORT_WEB_UI": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_SERVICE_PORTS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "localstack.constants.DOCKER_IMAGE_NAME": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "localstack.constants.DOCKER_IMAGE_NAME_FULL": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "localstack.constants.DYNAMODB_JAR_URL": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "localstack.constants.DYNAMODB_JAR_URL_ALPINE": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "localstack.constants.ELASTICMQ_JAR_URL": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "localstack.constants.ELASTICSEARCH_DEFAULT_VERSION": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "localstack.constants.ELASTICSEARCH_DELETE_MODULES": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "localstack.constants.ELASTICSEARCH_PLUGIN_LIST": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "localstack.constants.ELASTICSEARCH_URLS": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "localstack.constants.ENV_DEV": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.constants.ENV_INTERNAL_TEST_RUN": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "localstack.constants.FALSE_STRINGS": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "localstack.constants.HEADER_LOCALSTACK_EDGE_URL": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "localstack.constants.HEADER_LOCALSTACK_TARGET": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.constants.KMS_URL_PATTERN": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "localstack.constants.LAMBDA_TEST_ROLE": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "localstack.constants.LOCALHOST": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "localstack.constants.LOCALHOST_IP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.constants.LOCALSTACK_INFRA_PROCESS": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "localstack.constants.LOCALSTACK_MAVEN_VERSION": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "localstack.constants.LOCALSTACK_ROOT_FOLDER": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "localstack.constants.LOCALSTACK_VENV_FOLDER": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "localstack.constants.LOCALSTACK_WEB_PROCESS": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "localstack.constants.MAX_POOL_CONNECTIONS": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "localstack.constants.MOTO_ACCOUNT_ID": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "localstack.constants.PATH_USER_REQUEST": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "localstack.constants.REGION_LOCAL": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "localstack.constants.STEPFUNCTIONS_ZIP_URL": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "localstack.constants.STS_JAR_URL": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "localstack.constants.TEST_AWS_ACCESS_KEY_ID": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "localstack.constants.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "localstack.constants.TEST_AWS_SECRET_ACCESS_KEY": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "localstack.constants.TRUE_STRINGS": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "localstack.constants.VERSION": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "localstack.constants.localstack_client.config": {
  "data": {
   "shadows": "localstack_client.config"
  },
  "type": "import"
 },
 "localstack.constants.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.dashboard": {
  "data": {},
  "type": "module"
 },
 "localstack.dashboard.infra": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.dashboard.infra.logging",
    "localstack.dashboard.infra.os",
    "localstack.dashboard.infra.tempfile"
   ]
  },
  "type": "module"
 },
 "localstack.dashboard.infra.AWS_CACHE_TIMEOUT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.AWS_LAMBDA_CODE_CACHE_TIMEOUT": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.DEFAULT_REGION": {
  "data": {
   "shadows": "localstack.config.DEFAULT_REGION"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.DynamoDB": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.DynamoDB"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.DynamoDBStream": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.DynamoDBStream"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.ElasticSearch": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.ElasticSearch"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.EventSource": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.EventSource"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.FirehoseStream": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.FirehoseStream"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.KINESIS_RECENT_EVENTS_TIME_DIFF_SECS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.KinesisShard": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.KinesisShard"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.KinesisStream": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.KinesisStream"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.LOG": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.LambdaFunction": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.LambdaFunction"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.MOCK_OBJ": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.S3Bucket": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.S3Bucket"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.S3Notification": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.S3Notification"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.SqsQueue": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.SqsQueue"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.TMP_DOWNLOAD_CACHE_MAX_AGE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.TMP_DOWNLOAD_FILE_PATTERN": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.aws_cmd": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "localstack.dashboard.infra.socket",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.get_local_service_url",
    "localstack.utils.aws.aws_stack.is_local_env",
    "localstack.utils.common.is_port_open"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.clean_cache": {
  "data": {
   "shadows": "localstack.utils.common.clean_cache"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.cmd_dynamodb": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "localstack.dashboard.infra.run_aws_cmd"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.cmd_es": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "localstack.dashboard.infra.run_aws_cmd"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.cmd_firehose": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "localstack.dashboard.infra.run_aws_cmd"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.cmd_kinesis": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "localstack.dashboard.infra.run_aws_cmd"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.cmd_lambda": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "localstack.dashboard.infra.run_aws_cmd"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.cmd_s3api": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "localstack.dashboard.infra.run_aws_cmd"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.cmd_sqs": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "localstack.dashboard.infra.run_aws_cmd"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.download": {
  "data": {
   "shadows": "localstack.utils.common.download"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.extract_endpoints": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "localstack.dashboard.infra.re",
    "localstack.dashboard.infra.resolve_string_or_variable",
    "localstack.utils.aws.aws_models.DynamoDB",
    "localstack.utils.aws.aws_models.ElasticSearch",
    "localstack.utils.aws.aws_models.EventSource.get",
    "localstack.utils.aws.aws_models.FirehoseStream",
    "localstack.utils.aws.aws_models.S3Bucket",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_dynamo_dbs": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "Exception",
    "localstack.dashboard.infra.cmd_dynamodb",
    "localstack.dashboard.infra.json",
    "localstack.utils.common.parallelize"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_dynamo_dbs.handle": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "filter",
    "localstack.dashboard.infra.cmd_dynamodb",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_models.DynamoDB"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_elasticsearch_domains": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "Exception",
    "localstack.dashboard.infra.cmd_es",
    "localstack.dashboard.infra.json",
    "localstack.utils.common.parallelize"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_elasticsearch_domains.handle": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "filter",
    "localstack.dashboard.infra.cmd_es",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_models.ElasticSearch"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_firehose_streams": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "Exception",
    "filter",
    "localstack.dashboard.infra.cmd_firehose",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_models.EventSource.get",
    "localstack.utils.aws.aws_models.FirehoseStream"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_graph": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "isinstance",
    "localstack.dashboard.infra.get_dynamo_dbs",
    "localstack.dashboard.infra.get_elasticsearch_domains",
    "localstack.dashboard.infra.get_firehose_streams",
    "localstack.dashboard.infra.get_kinesis_streams",
    "localstack.dashboard.infra.get_lambda_functions",
    "localstack.dashboard.infra.get_s3_buckets",
    "localstack.dashboard.infra.get_sqs_queues",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_models.DynamoDBStream",
    "localstack.utils.common.short_uid"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_kinesis_events": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.kinesis_get_latest_records",
    "localstack.utils.common.mktime"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_kinesis_shards": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "localstack.dashboard.infra.cmd_kinesis",
    "localstack.dashboard.infra.json",
    "localstack.utils.aws.aws_models.KinesisShard"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_kinesis_streams": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Exception",
    "filter",
    "localstack.dashboard.infra.MOCK_OBJ",
    "localstack.dashboard.infra.cmd_kinesis",
    "localstack.dashboard.infra.get_kinesis_shards",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_models.KinesisStream"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_lambda_code": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "Exception",
    "hash",
    "len",
    "localstack.dashboard.infra.AWS_LAMBDA_CODE_CACHE_TIMEOUT",
    "localstack.dashboard.infra.MOCK_OBJ",
    "localstack.dashboard.infra.TMP_DOWNLOAD_CACHE_MAX_AGE",
    "localstack.dashboard.infra.TMP_DOWNLOAD_FILE_PATTERN",
    "localstack.dashboard.infra.cmd_lambda",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.last_cache_cleanup_time",
    "localstack.dashboard.infra.os",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.is_local_env",
    "localstack.utils.common.clean_cache",
    "localstack.utils.common.download",
    "localstack.utils.common.load_file",
    "localstack.utils.common.md5",
    "localstack.utils.common.mkdir",
    "localstack.utils.common.rm_rf",
    "localstack.utils.common.unzip",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_lambda_event_sources": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "localstack.dashboard.infra.MOCK_OBJ",
    "localstack.dashboard.infra.cmd_lambda",
    "localstack.dashboard.infra.json"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_lambda_functions": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "Exception",
    "localstack.dashboard.infra.MOCK_OBJ",
    "localstack.dashboard.infra.cmd_lambda",
    "localstack.dashboard.infra.json",
    "localstack.utils.common.parallelize"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_lambda_functions.handle": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "Exception",
    "filter",
    "localstack.dashboard.infra.LOG",
    "localstack.dashboard.infra.extract_endpoints",
    "localstack.dashboard.infra.get_lambda_code",
    "localstack.dashboard.infra.get_lambda_event_sources",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_models.EventSource.get",
    "localstack.utils.aws.aws_models.LambdaFunction"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_s3_buckets": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "Exception",
    "localstack.dashboard.infra.cmd_s3api",
    "localstack.dashboard.infra.json",
    "localstack.utils.common.parallelize"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_s3_buckets.handle": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "Exception",
    "filter",
    "localstack.dashboard.infra.cmd_s3api",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_models.EventSource.get",
    "localstack.utils.aws.aws_models.S3Bucket",
    "localstack.utils.aws.aws_models.S3Notification",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_sqs_queues": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "Exception",
    "filter",
    "localstack.dashboard.infra.cmd_sqs",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_models.SqsQueue",
    "localstack.utils.aws.aws_stack.sqs_queue_arn"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.is_port_open": {
  "data": {
   "shadows": "localstack.utils.common.is_port_open"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.last_cache_cleanup_time": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.load_file": {
  "data": {
   "shadows": "localstack.utils.common.load_file"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.md5": {
  "data": {
   "shadows": "localstack.utils.common.md5"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.mkdir": {
  "data": {
   "shadows": "localstack.utils.common.mkdir"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.mktime": {
  "data": {
   "shadows": "localstack.utils.common.mktime"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.new_tmp_file": {
  "data": {
   "shadows": "localstack.utils.common.new_tmp_file"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.parallelize": {
  "data": {
   "shadows": "localstack.utils.common.parallelize"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.read_kinesis_iterator": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "localstack.dashboard.infra.cmd_kinesis",
    "localstack.dashboard.infra.json",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.resolve_string_or_variable": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "localstack.dashboard.infra.LOG",
    "localstack.dashboard.infra.re"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.rm_rf": {
  "data": {
   "shadows": "localstack.utils.common.rm_rf"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.run": {
  "data": {
   "shadows": "localstack.utils.common.run"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.run_aws_cmd": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "localstack.dashboard.infra.aws_cmd",
    "localstack.dashboard.infra.run_cached"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.run_cached": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception",
    "localstack.config.DEFAULT_REGION",
    "localstack.dashboard.infra.AWS_CACHE_TIMEOUT",
    "localstack.dashboard.infra.LOG",
    "localstack.dashboard.infra.os",
    "localstack.utils.common.load_file",
    "localstack.utils.common.new_tmp_file",
    "localstack.utils.common.run",
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.unzip": {
  "data": {
   "shadows": "localstack.utils.common.unzip"
  },
  "type": "import"
 },
 "localstack.plugins": {
  "data": {},
  "type": "module"
 },
 "localstack.plugins.ENV_SCRIPT_STARTING_DOCKER": {
  "data": {
   "shadows": "localstack.utils.bootstrap.ENV_SCRIPT_STARTING_DOCKER"
  },
  "type": "import"
 },
 "localstack.plugins.Plugin": {
  "data": {
   "shadows": "localstack.services.plugins.Plugin"
  },
  "type": "import"
 },
 "localstack.plugins.TRUE_STRINGS": {
  "data": {
   "shadows": "localstack.constants.TRUE_STRINGS"
  },
  "type": "import"
 },
 "localstack.plugins.apigateway_listener": {
  "data": {
   "shadows": "localstack.services.apigateway.apigateway_listener"
  },
  "type": "import"
 },
 "localstack.plugins.apigateway_starter": {
  "data": {
   "shadows": "localstack.services.apigateway.apigateway_starter"
  },
  "type": "import"
 },
 "localstack.plugins.cloudformation_listener": {
  "data": {
   "shadows": "localstack.services.cloudformation.cloudformation_listener"
  },
  "type": "import"
 },
 "localstack.plugins.cloudformation_starter": {
  "data": {
   "shadows": "localstack.services.cloudformation.cloudformation_starter"
  },
  "type": "import"
 },
 "localstack.plugins.cloudwatch_listener": {
  "data": {
   "shadows": "localstack.services.cloudwatch.cloudwatch_listener"
  },
  "type": "import"
 },
 "localstack.plugins.cloudwatch_starter": {
  "data": {
   "shadows": "localstack.services.cloudwatch.cloudwatch_starter"
  },
  "type": "import"
 },
 "localstack.plugins.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.plugins.do_register_localstack_plugins": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Exception",
    "localstack.plugins.os",
    "localstack.plugins.sys",
    "localstack.services.apigateway.apigateway_listener.UPDATE_APIGATEWAY",
    "localstack.services.apigateway.apigateway_starter.start_apigateway",
    "localstack.services.cloudformation.cloudformation_listener.UPDATE_CLOUDFORMATION",
    "localstack.services.cloudformation.cloudformation_starter.start_cloudformation",
    "localstack.services.cloudwatch.cloudwatch_listener.UPDATE_CLOUD_WATCH",
    "localstack.services.cloudwatch.cloudwatch_starter.start_cloudwatch",
    "localstack.services.dynamodb.dynamodb_listener.UPDATE_DYNAMODB",
    "localstack.services.dynamodb.dynamodb_starter.check_dynamodb",
    "localstack.services.dynamodb.dynamodb_starter.start_dynamodb",
    "localstack.services.ec2.ec2_listener.UPDATE_EC2",
    "localstack.services.ec2.ec2_starter.start_ec2",
    "localstack.services.edge.start_edge",
    "localstack.services.events.events_listener.UPDATE_EVENTS",
    "localstack.services.events.events_starter.start_events",
    "localstack.services.iam.iam_listener.UPDATE_IAM",
    "localstack.services.iam.iam_starter.start_iam",
    "localstack.services.infra.start_acm",
    "localstack.services.infra.start_dynamodbstreams",
    "localstack.services.infra.start_elasticsearch_service",
    "localstack.services.infra.start_firehose",
    "localstack.services.infra.start_lambda",
    "localstack.services.infra.start_redshift",
    "localstack.services.infra.start_route53",
    "localstack.services.infra.start_sns",
    "localstack.services.infra.start_ssm",
    "localstack.services.infra.start_sts",
    "localstack.services.kinesis.kinesis_listener.UPDATE_KINESIS",
    "localstack.services.kinesis.kinesis_starter.check_kinesis",
    "localstack.services.kinesis.kinesis_starter.start_kinesis",
    "localstack.services.kms.kms_starter.start_kms",
    "localstack.services.logs.logs_listener.UPDATE_LOGS",
    "localstack.services.logs.logs_starter.start_cloudwatch_logs",
    "localstack.services.plugins.Plugin",
    "localstack.services.plugins.register_plugin",
    "localstack.services.s3.s3_listener.UPDATE_S3",
    "localstack.services.s3.s3_starter.check_s3",
    "localstack.services.s3.s3_starter.start_s3",
    "localstack.services.secretsmanager.secretsmanager_listener.UPDATE_SECRETSMANAGER",
    "localstack.services.secretsmanager.secretsmanager_starter.check_secretsmanager",
    "localstack.services.secretsmanager.secretsmanager_starter.start_secretsmanager",
    "localstack.services.ses.ses_starter.start_ses",
    "localstack.services.sns.sns_listener.UPDATE_SNS",
    "localstack.services.sqs.sqs_listener.UPDATE_SQS",
    "localstack.services.sqs.sqs_starter.check_sqs",
    "localstack.services.sqs.sqs_starter.start_sqs",
    "localstack.services.ssm.ssm_listener.UPDATE_SSM",
    "localstack.services.stepfunctions.stepfunctions_listener.UPDATE_STEPFUNCTIONS",
    "localstack.services.stepfunctions.stepfunctions_starter.start_stepfunctions",
    "localstack.services.sts.sts_listener.UPDATE_STS",
    "localstack.services.sts.sts_starter.start_sts",
    "localstack.utils.bootstrap.ENV_SCRIPT_STARTING_DOCKER",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.plugins.dynamodb_listener": {
  "data": {
   "shadows": "localstack.services.dynamodb.dynamodb_listener"
  },
  "type": "import"
 },
 "localstack.plugins.dynamodb_starter": {
  "data": {
   "shadows": "localstack.services.dynamodb.dynamodb_starter"
  },
  "type": "import"
 },
 "localstack.plugins.ec2_listener": {
  "data": {
   "shadows": "localstack.services.ec2.ec2_listener"
  },
  "type": "import"
 },
 "localstack.plugins.ec2_starter": {
  "data": {
   "shadows": "localstack.services.ec2.ec2_starter"
  },
  "type": "import"
 },
 "localstack.plugins.edge": {
  "data": {
   "shadows": "localstack.services.edge"
  },
  "type": "import"
 },
 "localstack.plugins.events_listener": {
  "data": {
   "shadows": "localstack.services.events.events_listener"
  },
  "type": "import"
 },
 "localstack.plugins.events_starter": {
  "data": {
   "shadows": "localstack.services.events.events_starter"
  },
  "type": "import"
 },
 "localstack.plugins.iam_listener": {
  "data": {
   "shadows": "localstack.services.iam.iam_listener"
  },
  "type": "import"
 },
 "localstack.plugins.iam_starter": {
  "data": {
   "shadows": "localstack.services.iam.iam_starter"
  },
  "type": "import"
 },
 "localstack.plugins.kinesis_listener": {
  "data": {
   "shadows": "localstack.services.kinesis.kinesis_listener"
  },
  "type": "import"
 },
 "localstack.plugins.kinesis_starter": {
  "data": {
   "shadows": "localstack.services.kinesis.kinesis_starter"
  },
  "type": "import"
 },
 "localstack.plugins.kms_starter": {
  "data": {
   "shadows": "localstack.services.kms.kms_starter"
  },
  "type": "import"
 },
 "localstack.plugins.logs_listener": {
  "data": {
   "shadows": "localstack.services.logs.logs_listener"
  },
  "type": "import"
 },
 "localstack.plugins.logs_starter": {
  "data": {
   "shadows": "localstack.services.logs.logs_starter"
  },
  "type": "import"
 },
 "localstack.plugins.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.plugins.register_localstack_plugins": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "localstack.config.EDGE_PORT",
    "localstack.config.EDGE_PORT_HTTP",
    "localstack.constants.TRUE_STRINGS",
    "localstack.plugins.do_register_localstack_plugins",
    "localstack.plugins.os",
    "localstack.utils.bootstrap.ENV_SCRIPT_STARTING_DOCKER"
   ]
  },
  "type": "function"
 },
 "localstack.plugins.register_plugin": {
  "data": {
   "shadows": "localstack.services.plugins.register_plugin"
  },
  "type": "import"
 },
 "localstack.plugins.s3_listener": {
  "data": {
   "shadows": "localstack.services.s3.s3_listener"
  },
  "type": "import"
 },
 "localstack.plugins.s3_starter": {
  "data": {
   "shadows": "localstack.services.s3.s3_starter"
  },
  "type": "import"
 },
 "localstack.plugins.secretsmanager_listener": {
  "data": {
   "shadows": "localstack.services.secretsmanager.secretsmanager_listener"
  },
  "type": "import"
 },
 "localstack.plugins.secretsmanager_starter": {
  "data": {
   "shadows": "localstack.services.secretsmanager.secretsmanager_starter"
  },
  "type": "import"
 },
 "localstack.plugins.ses_starter": {
  "data": {
   "shadows": "localstack.services.ses.ses_starter"
  },
  "type": "import"
 },
 "localstack.plugins.sns_listener": {
  "data": {
   "shadows": "localstack.services.sns.sns_listener"
  },
  "type": "import"
 },
 "localstack.plugins.sqs_listener": {
  "data": {
   "shadows": "localstack.services.sqs.sqs_listener"
  },
  "type": "import"
 },
 "localstack.plugins.sqs_starter": {
  "data": {
   "shadows": "localstack.services.sqs.sqs_starter"
  },
  "type": "import"
 },
 "localstack.plugins.ssm_listener": {
  "data": {
   "shadows": "localstack.services.ssm.ssm_listener"
  },
  "type": "import"
 },
 "localstack.plugins.start_acm": {
  "data": {
   "shadows": "localstack.services.infra.start_acm"
  },
  "type": "import"
 },
 "localstack.plugins.start_dynamodbstreams": {
  "data": {
   "shadows": "localstack.services.infra.start_dynamodbstreams"
  },
  "type": "import"
 },
 "localstack.plugins.start_elasticsearch_service": {
  "data": {
   "shadows": "localstack.services.infra.start_elasticsearch_service"
  },
  "type": "import"
 },
 "localstack.plugins.start_firehose": {
  "data": {
   "shadows": "localstack.services.infra.start_firehose"
  },
  "type": "import"
 },
 "localstack.plugins.start_lambda": {
  "data": {
   "shadows": "localstack.services.infra.start_lambda"
  },
  "type": "import"
 },
 "localstack.plugins.start_redshift": {
  "data": {
   "shadows": "localstack.services.infra.start_redshift"
  },
  "type": "import"
 },
 "localstack.plugins.start_route53": {
  "data": {
   "shadows": "localstack.services.infra.start_route53"
  },
  "type": "import"
 },
 "localstack.plugins.start_sns": {
  "data": {
   "shadows": "localstack.services.infra.start_sns"
  },
  "type": "import"
 },
 "localstack.plugins.start_ssm": {
  "data": {
   "shadows": "localstack.services.infra.start_ssm"
  },
  "type": "import"
 },
 "localstack.plugins.start_sts": {
  "data": {
   "shadows": "localstack.services.infra.start_sts"
  },
  "type": "import"
 },
 "localstack.plugins.stepfunctions_listener": {
  "data": {
   "shadows": "localstack.services.stepfunctions.stepfunctions_listener"
  },
  "type": "import"
 },
 "localstack.plugins.stepfunctions_starter": {
  "data": {
   "shadows": "localstack.services.stepfunctions.stepfunctions_starter"
  },
  "type": "import"
 },
 "localstack.plugins.sts_listener": {
  "data": {
   "shadows": "localstack.services.sts.sts_listener"
  },
  "type": "import"
 },
 "localstack.plugins.sts_starter": {
  "data": {
   "shadows": "localstack.services.sts.sts_starter"
  },
  "type": "import"
 },
 "localstack.plugins.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.services": {
  "data": {},
  "type": "module"
 },
 "localstack.services.apigateway": {
  "data": {},
  "type": "module"
 },
 "localstack.services.apigateway.apigateway_listener": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.constants.PATH_USER_REQUEST",
    "localstack.services.apigateway.apigateway_listener.ProxyListenerApiGateway",
    "localstack.services.apigateway.apigateway_listener.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.apigateway.apigateway_listener.APPLICATION_JSON": {
  "data": {
   "shadows": "localstack.constants.APPLICATION_JSON"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.AuthorizationError": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "localstack.services.apigateway.apigateway_listener.FlaskResponse": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.GATEWAY_RESPONSES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "localstack.services.apigateway.apigateway_listener.LOGGER": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "localstack.services.apigateway.apigateway_listener.LambdaResponse": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses.LambdaResponse"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.PATH_REGEX_AUTHORIZERS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "localstack.services.apigateway.apigateway_listener.PATH_REGEX_RESPONSES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "localstack.services.apigateway.apigateway_listener.PATH_REGEX_USER_REQUEST": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "localstack.services.apigateway.apigateway_listener.PATH_USER_REQUEST": {
  "data": {
   "shadows": "localstack.constants.PATH_USER_REQUEST"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.ProxyListenerApiGateway": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.apigateway.apigateway_listener.ProxyListenerApiGateway.forward_request": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "localstack.services.apigateway.apigateway_listener.PATH_REGEX_AUTHORIZERS",
    "localstack.services.apigateway.apigateway_listener.PATH_REGEX_RESPONSES",
    "localstack.services.apigateway.apigateway_listener.PATH_REGEX_USER_REQUEST",
    "localstack.services.apigateway.apigateway_listener.get_gateway_responses",
    "localstack.services.apigateway.apigateway_listener.invoke_rest_api_from_request",
    "localstack.services.apigateway.apigateway_listener.json",
    "localstack.services.apigateway.apigateway_listener.put_gateway_response",
    "localstack.services.apigateway.apigateway_listener.re",
    "localstack.services.apigateway.helpers.handle_authorizers",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.ProxyListenerApiGateway.return_response": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "localstack.services.apigateway.apigateway_listener.json",
    "localstack.services.apigateway.apigateway_listener.re",
    "localstack.utils.analytics.event_publisher.EVENT_APIGW_CREATE_API",
    "localstack.utils.analytics.event_publisher.EVENT_APIGW_DELETE_API",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.aws.aws_responses.requests_response",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.TEST_KINESIS_URL": {
  "data": {
   "shadows": "localstack.config.TEST_KINESIS_URL"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.TEST_SQS_URL": {
  "data": {
   "shadows": "localstack.config.TEST_SQS_URL"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.UPDATE_APIGATEWAY": {
  "data": {
   "lineno": 430
  },
  "type": "constant"
 },
 "localstack.services.apigateway.apigateway_listener.apply_template": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "localstack.constants.APPLICATION_JSON",
    "localstack.utils.aws.aws_stack.render_velocity_template"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.apply_template._params": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.authorize_invocation": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "localstack.services.apigateway.apigateway_listener.run_authorizer",
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.common": {
  "data": {
   "shadows": "localstack.utils.common"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.extract_path_params": {
  "data": {
   "shadows": "localstack.services.apigateway.helpers.extract_path_params"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.extract_query_string_params": {
  "data": {
   "shadows": "localstack.services.apigateway.helpers.extract_query_string_params"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.flask_to_requests_response": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses.flask_to_requests_response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.get_cors_response": {
  "data": {
   "shadows": "localstack.services.apigateway.helpers.get_cors_response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.get_gateway_responses": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "item",
    "localstack.services.apigateway.apigateway_listener.GATEWAY_RESPONSES"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.get_gateway_responses.item": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.get_resource_for_path": {
  "data": {
   "shadows": "localstack.services.apigateway.helpers.get_resource_for_path"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.handle_authorizers": {
  "data": {
   "shadows": "localstack.services.apigateway.helpers.handle_authorizers"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.helpers": {
  "data": {
   "shadows": "localstack.services.apigateway.helpers"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.invoke_rest_api": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "flask.Response",
    "function",
    "getattr",
    "int",
    "isinstance",
    "len",
    "list",
    "localstack.config.TEST_KINESIS_URL",
    "localstack.config.TEST_SQS_URL",
    "localstack.constants.APPLICATION_JSON",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.apigateway.apigateway_listener.LOGGER",
    "localstack.services.apigateway.apigateway_listener.apply_template",
    "localstack.services.apigateway.apigateway_listener.authorize_invocation",
    "localstack.services.apigateway.apigateway_listener.datetime",
    "localstack.services.apigateway.apigateway_listener.is_api_key_valid",
    "localstack.services.apigateway.apigateway_listener.json",
    "localstack.services.apigateway.apigateway_listener.requests",
    "localstack.services.apigateway.apigateway_listener.time",
    "localstack.services.apigateway.apigateway_listener.update_content_length",
    "localstack.services.apigateway.helpers.extract_path_params",
    "localstack.services.apigateway.helpers.extract_query_string_params",
    "localstack.services.apigateway.helpers.get_cors_response",
    "localstack.services.apigateway.helpers.get_resource_for_path",
    "localstack.services.apigateway.helpers.get_rest_api_paths",
    "localstack.services.apigateway.helpers.make_error_response",
    "localstack.services.awslambda.lambda_api.process_apigateway_invocation",
    "localstack.services.kinesis.kinesis_listener.ACTION_LIST_STREAMS",
    "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORDS",
    "localstack.utils.aws.aws_responses.LambdaResponse",
    "localstack.utils.aws.aws_responses.flask_to_requests_response",
    "localstack.utils.aws.aws_responses.requests_response",
    "localstack.utils.aws.aws_stack.connect_to_resource",
    "localstack.utils.aws.aws_stack.mock_aws_request_headers",
    "localstack.utils.aws.aws_stack.render_velocity_template",
    "localstack.utils.common.json_safe",
    "localstack.utils.common.make_http_request",
    "localstack.utils.common.to_bytes",
    "localstack.utils.common.to_str",
    "requests.models.Response",
    "six.moves.urllib_parse.urljoin",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.invoke_rest_api_from_request": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "localstack.services.apigateway.apigateway_listener.AuthorizationError",
    "localstack.services.apigateway.apigateway_listener.PATH_REGEX_USER_REQUEST",
    "localstack.services.apigateway.apigateway_listener.invoke_rest_api",
    "localstack.services.apigateway.apigateway_listener.re",
    "localstack.services.apigateway.helpers.make_error_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.is_api_key_valid": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "localstack.services.apigateway.apigateway_listener.validate_api_key"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.kinesis_listener": {
  "data": {
   "shadows": "localstack.services.kinesis.kinesis_listener"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.lambda_api": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.make_error_response": {
  "data": {
   "shadows": "localstack.services.apigateway.helpers.make_error_response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.put_gateway_response": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "localstack.services.apigateway.apigateway_listener.GATEWAY_RESPONSES"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.requests_response": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses.requests_response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.run_authorizer": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.to_bytes": {
  "data": {
   "shadows": "localstack.utils.common.to_bytes"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.update_content_length": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.urljoin": {
  "data": {
   "shadows": "six.moves.urllib_parse.urljoin"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.validate_api_key": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "item",
    "item.get",
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.apigateway.apigateway_starter.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.apigateway.apigateway_starter.APIGatewayResponse": {
  "data": {
   "shadows": "moto.apigateway.responses.APIGatewayResponse"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_starter.Integration": {
  "data": {
   "shadows": "moto.apigateway.models.Integration"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_starter.LOG": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "localstack.services.apigateway.apigateway_starter.NoIntegrationDefined": {
  "data": {
   "shadows": "moto.apigateway.exceptions.NoIntegrationDefined"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_starter.Resource": {
  "data": {
   "shadows": "moto.apigateway.models.Resource"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_starter.apigateway_models": {
  "data": {
   "shadows": "moto.apigateway.models"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_starter.apply_patches": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "apigateway_response_resource_methods_orig",
    "apigateway_response_restapis_individual_orig",
    "hasattr",
    "moto.apigateway.models.APIGatewayBackend",
    "moto.apigateway.models.APIGatewayBackend.delete_method",
    "moto.apigateway.models.APIGatewayBackend.put_rest_api",
    "moto.apigateway.models.Integration.__init__",
    "moto.apigateway.models.Resource.delete_integration",
    "moto.apigateway.models.Resource.get_integration",
    "moto.apigateway.models.Resource.get_method",
    "moto.apigateway.responses.APIGatewayResponse.resource_methods",
    "moto.apigateway.responses.APIGatewayResponse.restapis_individual"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_starter.apply_patches.apigateway_models_Integration_init": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "localstack.utils.common.short_uid",
    "moto.apigateway.models.Integration",
    "moto.apigateway.models.IntegrationResponse",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_starter.apply_patches.apigateway_models_backend_delete_method": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "moto.apigateway.exceptions.NoIntegrationDefined"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_starter.apply_patches.apigateway_models_backend_put_rest_api": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "moto.apigateway.models.Integration",
    "moto.apigateway.models.Resource",
    "moto.apigateway.utils.create_id"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_starter.apply_patches.apigateway_models_resource_delete_integration": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_starter.apply_patches.apigateway_models_resource_get_integration": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "moto.apigateway.exceptions.NoIntegrationDefined"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_starter.apply_patches.apigateway_models_resource_get_method": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "moto.apigateway.exceptions.NoIntegrationDefined"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_starter.apply_patches.apigateway_response_resource_methods": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "apigateway_response_resource_methods_orig",
    "len",
    "localstack.services.apigateway.apigateway_starter.json"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_starter.apply_patches.apigateway_response_restapis_individual": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "apigateway_response_restapis_individual_orig",
    "localstack.services.apigateway.apigateway_starter.json",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_starter.create_id": {
  "data": {
   "shadows": "moto.apigateway.utils.create_id"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_starter.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_starter.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_starter.start_apigateway": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "localstack.config.PORT_APIGATEWAY",
    "localstack.services.apigateway.apigateway_starter.apply_patches",
    "localstack.services.infra.start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_starter.start_moto_server": {
  "data": {
   "shadows": "localstack.services.infra.start_moto_server"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_starter.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers": {
  "data": {},
  "type": "module"
 },
 "localstack.services.apigateway.helpers.APIGATEWAY_SQS_DATA_INBOUND_TEMPLATE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "localstack.services.apigateway.helpers.APPLICATION_JSON": {
  "data": {
   "shadows": "localstack.constants.APPLICATION_JSON"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.AUTHORIZERS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "localstack.services.apigateway.helpers.PATH_REGEX_AUTHORIZER": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "localstack.services.apigateway.helpers.PATH_REGEX_MAIN": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "localstack.services.apigateway.helpers.PATH_REGEX_SUB": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "localstack.services.apigateway.helpers.PATH_USER_REQUEST": {
  "data": {
   "shadows": "localstack.constants.PATH_USER_REQUEST"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers._find_authorizer": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "localstack.services.apigateway.helpers.AUTHORIZERS"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.add_authorizer": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "localstack.services.apigateway.helpers.AUTHORIZERS",
    "localstack.services.apigateway.helpers.get_api_id_from_path",
    "localstack.services.apigateway.helpers.make_json_response",
    "localstack.services.apigateway.helpers.normalize_authorizer",
    "localstack.services.apigateway.helpers.to_authorizer_response_json",
    "localstack.utils.common.clone",
    "localstack.utils.common.short_uid"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.apply_patch": {
  "data": {
   "shadows": "jsonpatch.apply_patch"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.common": {
  "data": {
   "shadows": "localstack.utils.common"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.connect_api_gateway_to_sqs": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.apigateway.helpers.APIGATEWAY_SQS_DATA_INBOUND_TEMPLATE",
    "localstack.utils.aws.aws_stack.create_api_gateway",
    "localstack.utils.aws.aws_stack.extract_region_from_arn",
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.aws.aws_stack.sqs_queue_name"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.delete_authorizer": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "len",
    "localstack.services.apigateway.helpers.AUTHORIZERS",
    "localstack.services.apigateway.helpers.get_api_id_from_path",
    "localstack.services.apigateway.helpers.get_authorizer_id_from_path",
    "localstack.services.apigateway.helpers.make_accepted_response",
    "range"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.extract_path_params": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "enumerate",
    "localstack.services.apigateway.helpers.tokenize_path",
    "localstack.utils.common.json_safe"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.extract_query_string_params": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "len",
    "six.moves.urllib.parse.parse_qs",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.gateway_request_url": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "localstack.config.TEST_APIGATEWAY_URL",
    "localstack.constants.PATH_USER_REQUEST"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.get_api_id_from_path": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "localstack.services.apigateway.helpers.PATH_REGEX_MAIN",
    "localstack.services.apigateway.helpers.PATH_REGEX_SUB",
    "localstack.services.apigateway.helpers.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.get_authorizer_id_from_path": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "localstack.services.apigateway.helpers.PATH_REGEX_AUTHORIZER",
    "localstack.services.apigateway.helpers.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.get_authorizers": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "localstack.services.apigateway.helpers.AUTHORIZERS",
    "localstack.services.apigateway.helpers._find_authorizer",
    "localstack.services.apigateway.helpers.get_api_id_from_path",
    "localstack.services.apigateway.helpers.get_authorizer_id_from_path",
    "localstack.services.apigateway.helpers.make_error_response",
    "localstack.services.apigateway.helpers.to_authorizer_response_json"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.get_cors_response": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.get_resource_for_path": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "Exception",
    "len",
    "localstack.services.apigateway.helpers.path_matches_pattern",
    "localstack.services.apigateway.helpers.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.get_rest_api_paths": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.get_apigateway_path_for_resource"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.handle_authorizers": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "localstack.services.apigateway.helpers.add_authorizer",
    "localstack.services.apigateway.helpers.delete_authorizer",
    "localstack.services.apigateway.helpers.get_authorizers",
    "localstack.services.apigateway.helpers.make_error_response",
    "localstack.services.apigateway.helpers.update_authorizer"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.make_accepted_response": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.make_error_response": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "localstack.services.apigateway.helpers.json",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.make_json_response": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "localstack.constants.APPLICATION_JSON",
    "localstack.services.apigateway.helpers.json",
    "localstack.utils.aws.aws_responses.requests_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.normalize_authorizer": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "int",
    "localstack.utils.common.clone"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.path_matches_pattern": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "len",
    "localstack.services.apigateway.helpers.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.requests_response": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses.requests_response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.to_authorizer_response_json": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "localstack.utils.common.clone"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.tokenize_path": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.update_authorizer": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "jsonpatch.apply_patch",
    "len",
    "localstack.services.apigateway.helpers.AUTHORIZERS",
    "localstack.services.apigateway.helpers._find_authorizer",
    "localstack.services.apigateway.helpers.get_api_id_from_path",
    "localstack.services.apigateway.helpers.get_authorizer_id_from_path",
    "localstack.services.apigateway.helpers.make_error_response",
    "localstack.services.apigateway.helpers.make_json_response",
    "localstack.services.apigateway.helpers.normalize_authorizer",
    "localstack.services.apigateway.helpers.to_authorizer_response_json",
    "range"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse"
  },
  "type": "import"
 },
 "localstack.services.awslambda": {
  "data": {},
  "type": "module"
 },
 "localstack.services.awslambda.lambda_executors": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "localstack.config.TMP_FOLDER",
    "localstack.services.awslambda.lambda_executors.EXECUTOR_CONTAINERS_REUSE",
    "localstack.services.awslambda.lambda_executors.EXECUTOR_CONTAINERS_SEPARATE",
    "localstack.services.awslambda.lambda_executors.EXECUTOR_LOCAL",
    "localstack.services.awslambda.lambda_executors.LambdaExecutorLocal",
    "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers",
    "localstack.services.awslambda.lambda_executors.LambdaExecutorSeparateContainers",
    "localstack.services.awslambda.lambda_executors.logging",
    "localstack.services.install.INSTALL_PATH_LOCALSTACK_FAT_JAR"
   ]
  },
  "type": "module"
 },
 "localstack.services.awslambda.lambda_executors.AVAILABLE_EXECUTORS": {
  "data": {
   "lineno": 845
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.CaptureOutput": {
  "data": {
   "shadows": "localstack.utils.common.CaptureOutput"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.ContainerInfo": {
  "data": {
   "lineno": 216
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_executors.ContainerInfo.__init__": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.DEFAULT_EXECUTOR": {
  "data": {
   "lineno": 843
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.DOCKER_MAIN_CONTAINER_IP": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.EVENT_FILE_PATTERN": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.EVENT_SOURCE_SQS": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.EXECUTOR_CONTAINERS_REUSE": {
  "data": {
   "lineno": 842
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.EXECUTOR_CONTAINERS_SEPARATE": {
  "data": {
   "lineno": 841
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.EXECUTOR_LOCAL": {
  "data": {
   "lineno": 840
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.INSTALL_PATH_LOCALSTACK_FAT_JAR": {
  "data": {
   "shadows": "localstack.services.install.INSTALL_PATH_LOCALSTACK_FAT_JAR"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_API_PORT_OFFSET": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_API_UNIQUE_PORTS": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_EXECUTOR_CLASS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_EXECUTOR_JAR": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE2": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE21": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE31": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_GOLANG": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_JAVA11": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_JAVA8": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS10X": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS12X": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS43": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS610": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS810": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PROVIDED": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PYTHON27": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PYTHON36": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PYTHON37": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PYTHON38": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_RUBY": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_RUBY25": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_SERVER_PORT_OFFSET": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_SERVER_UNIQUE_PORTS": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LOG": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor.__init__": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor._execute": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor._prepare_environment": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.inject_test_credentials_into_env"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor.cleanup": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor.execute": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "do_execute",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.utils.common.FuncThread"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor.execute.do_execute": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "_run"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor.execute.do_execute._run": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "Exception",
    "callback",
    "int",
    "localstack.services.awslambda.lambda_executors.EVENT_SOURCE_SQS",
    "localstack.services.awslambda.lambda_executors.get_from_event",
    "localstack.services.awslambda.lambda_executors.time",
    "localstack.utils.aws.dead_letter_queue.lambda_error_to_dead_letter_queue",
    "localstack.utils.aws.dead_letter_queue.sqs_error_to_dead_letter_queue",
    "localstack.utils.cloudwatch.cloudwatch_util.cloudwatched"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor.run_lambda_executor": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors._store_logs",
    "localstack.services.awslambda.lambda_executors.six",
    "localstack.services.awslambda.lambda_executors.subprocess",
    "localstack.utils.common.run",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor.startup": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorContainers": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LambdaExecutor"
   ]
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorContainers._docker_cmd": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "localstack.config.DOCKER_CMD"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorContainers._execute": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "localstack.config.EDGE_PORT",
    "localstack.config.USE_SSL",
    "localstack.services.awslambda.lambda_executors.LAMBDA_EXECUTOR_CLASS",
    "localstack.services.awslambda.lambda_executors.LAMBDA_EXECUTOR_JAR",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.USE_CUSTOM_JAVA_EXECUTOR",
    "localstack.services.awslambda.lambda_executors.base64",
    "localstack.services.awslambda.lambda_executors.get_main_endpoint_from_container",
    "localstack.services.awslambda.lambda_executors.is_java_lambda",
    "localstack.services.awslambda.lambda_executors.is_nodejs_runtime",
    "localstack.services.awslambda.lambda_executors.json",
    "localstack.services.awslambda.lambda_executors.os",
    "localstack.utils.common.cp_r",
    "localstack.utils.common.json_safe",
    "localstack.utils.common.rm_rf",
    "localstack.utils.common.save_file",
    "localstack.utils.common.short_uid",
    "localstack.utils.common.to_bytes",
    "localstack.utils.common.to_str",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorContainers.prepare_event": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorContainers.prepare_execution": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorLocal": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LambdaExecutor"
   ]
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorLocal._execute": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "do_execute",
    "localstack.services.awslambda.lambda_executors._store_logs",
    "localstack.utils.common.CaptureOutput",
    "multiprocessing.Process",
    "multiprocessing.Queue"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorLocal._execute.do_execute": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "lambda_function",
    "localstack.services.awslambda.lambda_executors.os",
    "localstack.services.awslambda.lambda_executors.sys"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorLocal.execute_java_lambda": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "localstack.config.LAMBDA_JAVA_OPTS",
    "localstack.services.awslambda.lambda_executors.EVENT_FILE_PATTERN",
    "localstack.services.awslambda.lambda_executors.LAMBDA_EXECUTOR_CLASS",
    "localstack.services.awslambda.lambda_executors.LAMBDA_EXECUTOR_JAR",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.json",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.common.json_safe",
    "localstack.utils.common.save_file",
    "localstack.utils.common.short_uid"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LambdaExecutorContainers"
   ]
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.__init__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LAMBDA_SERVER_PORT_OFFSET",
    "localstack.services.awslambda.lambda_executors.LAMBDA_SERVER_UNIQUE_PORTS",
    "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers",
    "localstack.services.awslambda.lambda_executors.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.cleanup": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.destroy_docker_container": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.subprocess",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.destroy_existing_docker_containers": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "len",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.subprocess",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.get_all_container_names": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "len",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.subprocess",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.get_container_name": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.get_docker_container_network": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.subprocess",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.get_docker_container_status": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "len",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.idle_container_destroyer": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "dict",
    "int",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.MAX_CONTAINER_IDLE_TIME_MS",
    "localstack.services.awslambda.lambda_executors.time"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.prepare_execution": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "localstack.config.LAMBDA_REMOTE_DOCKER",
    "localstack.services.awslambda.lambda_executors.LOG",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.prime_docker_container": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "localstack.config.LAMBDA_DOCKER_DNS",
    "localstack.config.LAMBDA_DOCKER_NETWORK",
    "localstack.config.LAMBDA_REMOTE_DOCKER",
    "localstack.services.awslambda.lambda_executors.ContainerInfo",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.time",
    "localstack.utils.common.run",
    "pipes.quote"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.start_idle_container_destroyer_interval": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.threading"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.startup": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "localstack.config.LAMBDA_REMOVE_CONTAINERS"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorSeparateContainers": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LambdaExecutorContainers"
   ]
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorSeparateContainers.__init__": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LAMBDA_API_PORT_OFFSET",
    "localstack.services.awslambda.lambda_executors.LAMBDA_API_UNIQUE_PORTS",
    "localstack.services.awslambda.lambda_executors.LambdaExecutorSeparateContainers",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorSeparateContainers.prepare_event": {
  "data": {
   "lineno": 644
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorSeparateContainers.prepare_execution": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "localstack.config.LAMBDA_DOCKER_DNS",
    "localstack.config.LAMBDA_DOCKER_NETWORK",
    "localstack.config.LAMBDA_REMOTE_DOCKER",
    "localstack.utils.common.get_free_tcp_port"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.MAX_CONTAINER_IDLE_TIME_MS": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.Queue": {
  "data": {
   "shadows": "multiprocessing.Queue"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.TMP_FILES": {
  "data": {
   "shadows": "localstack.utils.common.TMP_FILES"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.USE_CUSTOM_JAVA_EXECUTOR": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.Util": {
  "data": {
   "lineno": 761
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_executors.Util.docker_image_for_runtime": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "any",
    "classmethod",
    "localstack.config.LAMBDA_CONTAINER_REGISTRY"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.Util.format_windows_path": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "classmethod",
    "len",
    "localstack.config.WINDOWS_DOCKER_MOUNT_PREFIX"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.Util.get_docker_remove_flag": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "classmethod",
    "localstack.config.LAMBDA_REMOVE_CONTAINERS"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.Util.get_host_path_for_path_in_docker": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "classmethod",
    "localstack.config.HOST_TMP_FOLDER",
    "localstack.config.TMP_FOLDER",
    "localstack.services.awslambda.lambda_executors.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.Util.get_java_classpath": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "classmethod",
    "localstack.services.awslambda.lambda_executors.glob",
    "localstack.services.awslambda.lambda_executors.os"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.Util.get_java_opts": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "classmethod",
    "localstack.config.LAMBDA_JAVA_OPTS",
    "localstack.services.awslambda.lambda_executors.re",
    "localstack.utils.common.get_free_tcp_port"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors._store_logs": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "int",
    "localstack.services.awslambda.lambda_executors.time",
    "localstack.utils.cloudwatch.cloudwatch_util.store_cloudwatch_logs",
    "localstack.utils.common.short_uid"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.bootstrap": {
  "data": {
   "shadows": "localstack.utils.bootstrap"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.cloudwatched": {
  "data": {
   "shadows": "localstack.utils.cloudwatch.cloudwatch_util.cloudwatched"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.cmd_quote": {
  "data": {
   "shadows": "pipes.quote"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.cp_r": {
  "data": {
   "shadows": "localstack.utils.common.cp_r"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.get_free_tcp_port": {
  "data": {
   "shadows": "localstack.utils.common.get_free_tcp_port"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.get_from_event": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.get_main_endpoint_from_container": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Exception",
    "localstack.config.DOCKER_HOST_FROM_CONTAINER",
    "localstack.services.awslambda.lambda_executors.DOCKER_MAIN_CONTAINER_IP",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.utils.bootstrap.get_main_container_ip",
    "localstack.utils.bootstrap.get_main_container_name",
    "localstack.utils.common.in_docker"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.in_docker": {
  "data": {
   "shadows": "localstack.utils.common.in_docker"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.is_java_lambda": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "getattr",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_JAVA11",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_JAVA8"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.is_nodejs_runtime": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.json_safe": {
  "data": {
   "shadows": "localstack.utils.common.json_safe"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.lambda_error_to_dead_letter_queue": {
  "data": {
   "shadows": "localstack.utils.aws.dead_letter_queue.lambda_error_to_dead_letter_queue"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.rm_rf": {
  "data": {
   "shadows": "localstack.utils.common.rm_rf"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.run": {
  "data": {
   "shadows": "localstack.utils.common.run"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.save_file": {
  "data": {
   "shadows": "localstack.utils.common.save_file"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.sqs_error_to_dead_letter_queue": {
  "data": {
   "shadows": "localstack.utils.aws.dead_letter_queue.sqs_error_to_dead_letter_queue"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.store_cloudwatch_logs": {
  "data": {
   "shadows": "localstack.utils.cloudwatch.cloudwatch_util.store_cloudwatch_logs"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.to_bytes": {
  "data": {
   "shadows": "localstack.utils.common.to_bytes"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.awslambda.multivalue_transformer": {
  "data": {},
  "type": "module"
 },
 "localstack.services.awslambda.multivalue_transformer.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "localstack.services.awslambda.multivalue_transformer.multi_value_dict_for_list": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "isinstance",
    "list",
    "localstack.utils.common.to_str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.multivalue_transformer.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.cloudformation": {
  "data": {},
  "type": "module"
 },
 "localstack.services.cloudformation.cloudformation_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.cloudformation.cloudformation_starter.logging",
    "localstack.services.cloudformation.service_models.CloudFormationStack",
    "localstack.services.cloudformation.service_models.ElasticsearchDomain",
    "localstack.services.cloudformation.service_models.EventsRule",
    "localstack.services.cloudformation.service_models.FirehoseDeliveryStream",
    "localstack.services.cloudformation.service_models.GatewayResponse",
    "localstack.services.cloudformation.service_models.LogsLogGroup",
    "localstack.services.cloudformation.service_models.S3BucketPolicy",
    "localstack.services.cloudformation.service_models.SNSSubscription",
    "localstack.services.cloudformation.service_models.SSMParameter",
    "localstack.services.cloudformation.service_models.SecretsManagerSecret",
    "localstack.services.cloudformation.service_models.StepFunctionsActivity",
    "localstack.stepfunctions.models.StateMachine",
    "moto.apigateway.models.Deployment",
    "moto.apigateway.models.Method",
    "moto.apigateway.models.Resource",
    "moto.apigateway.models.RestAPI",
    "moto.apigateway.models.Stage",
    "moto.server.main"
   ]
  },
  "type": "module"
 },
 "localstack.services.cloudformation.cloudformation_starter.BaseModel": {
  "data": {
   "shadows": "moto.core.BaseModel"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.CURRENTLY_UPDATING_RESOURCES": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "localstack.services.cloudformation.cloudformation_starter.CloudFormationBackend": {
  "data": {
   "shadows": "moto.cloudformation.models.CloudFormationBackend"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.FakeStack": {
  "data": {
   "shadows": "moto.cloudformation.models.FakeStack"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.LOG": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "localstack.services.cloudformation.cloudformation_starter.MAX_DEPENDENCY_DEPTH": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "localstack.services.cloudformation.cloudformation_starter.MODEL_MAP": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "localstack.services.cloudformation.cloudformation_starter.MOTO_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.MOTO_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.MOTO_CFN_ACCOUNT_ID": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "localstack.services.cloudformation.cloudformation_starter.Mock": {
  "data": {
   "shadows": "localstack.utils.common.Mock"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.Output": {
  "data": {
   "shadows": "boto.cloudformation.stack.Output"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.RUN_SERVER_IN_PROCESS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "localstack.services.cloudformation.cloudformation_starter.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.UnformattedGetAttTemplateException": {
  "data": {
   "shadows": "moto.cloudformation.exceptions.UnformattedGetAttTemplateException"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.ValidationError": {
  "data": {
   "shadows": "moto.cloudformation.exceptions.ValidationError"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.add_default_resource_props": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_starter.update_dynamodb_index_resource",
    "localstack.utils.common.canonical_json",
    "localstack.utils.common.json_safe",
    "localstack.utils.common.md5",
    "localstack.utils.common.short_uid"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apigw_models": {
  "data": {
   "shadows": "moto.apigateway.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "DynamoDB_Table_get_cfn_attribute_orig",
    "IAM_Role_get_cfn_attribute_orig",
    "Lambda_Function_get_cfn_attribute_orig",
    "Lambda_create_from_cloudformation_json_orig",
    "LogGroup_get_cfn_attribute_orig",
    "Mapping_create_from_cloudformation_json_orig",
    "S3_Bucket_get_cfn_attribute_orig",
    "SNS_Topic_get_cfn_attribute_orig",
    "SQS_Queue_get_cfn_attribute_orig",
    "clean_json_orig",
    "ddb_table_get_cfn_attribute_orig",
    "generate_stack_id_orig",
    "getattr",
    "hasattr",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.cloudformation.cloudformation_starter.MODEL_MAP",
    "localstack.services.cloudformation.service_models.ElasticsearchDomain.get_cfn_attribute",
    "localstack.services.cloudformation.service_models.FirehoseDeliveryStream.get_cfn_attribute",
    "make_cf_update_stack",
    "moto.apigateway.models.Deployment",
    "moto.apigateway.models.Deployment.create_from_cloudformation_json",
    "moto.apigateway.models.Deployment.delete_from_cloudformation_json",
    "moto.apigateway.models.Method.create_from_cloudformation_json",
    "moto.apigateway.models.Resource.create_from_cloudformation_json",
    "moto.apigateway.models.RestAPI.create_from_cloudformation_json",
    "moto.apigateway.models.RestAPI.get_cfn_attribute",
    "moto.awslambda.models.EventSourceMapping.create_from_cloudformation_json",
    "moto.awslambda.models.LambdaBackend",
    "moto.awslambda.models.LambdaFunction",
    "moto.awslambda.models.LambdaFunction.create_from_cloudformation_json",
    "moto.awslambda.models.LambdaFunction.get_cfn_attribute",
    "moto.awslambda.models.LambdaFunction.update_from_cloudformation_json",
    "moto.awslambda.models.LambdaVersion",
    "moto.awslambda.models.LambdaVersion.delete_from_cloudformation_json",
    "moto.awslambda.models.lambda_backends",
    "moto.cloudformation.models.CloudFormationBackend.create_change_set",
    "moto.cloudformation.models.CloudFormationBackend.describe_change_set",
    "moto.cloudformation.models.CloudFormationBackend.execute_change_set",
    "moto.cloudformation.models.FakeStack.initialize_resources",
    "moto.cloudformation.models.FakeStack.update",
    "moto.cloudformation.models.cloudformation_backends.items",
    "moto.cloudformation.models.generate_stack_id",
    "moto.cloudformation.parsing.ACCOUNT_ID",
    "moto.cloudformation.parsing.MODEL_MAP.update",
    "moto.cloudformation.parsing.ResourceMap.delete",
    "moto.cloudformation.parsing.ResourceMap.diff",
    "moto.cloudformation.parsing.clean_json",
    "moto.cloudformation.parsing.parse_and_create_resource",
    "moto.cloudformation.parsing.parse_and_delete_resource",
    "moto.cloudformation.parsing.parse_and_update_resource",
    "moto.cloudformation.parsing.parse_output",
    "moto.cloudformation.responses.CloudFormationResponse.describe_stack_events",
    "moto.cloudformation.responses.CloudFormationResponse.describe_stack_resource",
    "moto.cloudformation.responses.DESCRIBE_STACKS_TEMPLATE",
    "moto.cloudformation.responses.DESCRIBE_STACKS_TEMPLATE.replace",
    "moto.cloudformation.utils.generate_stack_id",
    "moto.cloudwatch.models.LogGroup",
    "moto.cloudwatch.models.LogGroup.get_cfn_attribute",
    "moto.dynamodb.models.Table.get_cfn_attribute",
    "moto.dynamodb2.models.Table.get_cfn_attribute",
    "moto.iam.models.Role",
    "moto.iam.models.Role.get_cfn_attribute",
    "moto.iam.models.Role.physical_resource_id",
    "moto.iam.models.Role.update_from_cloudformation_json",
    "moto.kinesis.models.Stream._arn_orig",
    "moto.kinesis.models.Stream.arn",
    "moto.kinesis.models.Stream.get_cfn_attribute",
    "moto.s3.models.FakeBucket.get_cfn_attribute",
    "moto.sns.models.Topic.create_from_cloudformation_json",
    "moto.sns.models.Topic.get_cfn_attribute",
    "moto.sqs.models.Queue.get_cfn_attribute",
    "moto.sqs.models.Queue.physical_resource_id",
    "parse_and_create_resource_orig",
    "parse_and_delete_resource_orig",
    "parse_and_update_resource_orig",
    "parse_output_orig",
    "resource_map_delete_orig",
    "stack_update_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Deployment_create_from_cloudformation_json": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "classmethod",
    "localstack.utils.common.short_uid",
    "moto.apigateway.models.Deployment"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.DynamoDB2_Table_get_cfn_attribute": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.dynamodb_stream_arn",
    "localstack.utils.aws.aws_stack.dynamodb_table_arn",
    "moto.cloudformation.exceptions.UnformattedGetAttTemplateException"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.DynamoDB_Table_get_cfn_attribute": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "DynamoDB_Table_get_cfn_attribute_orig",
    "Exception",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.ES_get_cfn_attribute": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "hasattr",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.es_domain_arn",
    "moto.cloudformation.exceptions.UnformattedGetAttTemplateException"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Firehose_get_cfn_attribute": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.firehose_stream_arn",
    "moto.cloudformation.exceptions.UnformattedGetAttTemplateException"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.IAM_Role_get_cfn_attribute": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "Exception",
    "IAM_Role_get_cfn_attribute_orig",
    "localstack.utils.aws.aws_stack.role_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.IAM_Role_physical_resource_id": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Kinesis_Stream_get_cfn_attribute": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "moto.cloudformation.exceptions.UnformattedGetAttTemplateException"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Lambda_Function_get_cfn_attribute": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "Exception",
    "Lambda_Function_get_cfn_attribute_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Lambda_create_from_cloudformation_json": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "Lambda_create_from_cloudformation_json_orig",
    "classmethod",
    "localstack.services.cloudformation.cloudformation_starter.docker"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Lambda_create_from_cloudformation_json._from_env": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "localstack.utils.common.Mock"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Lambda_update_from_cloudformation_json": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "Lambda_create_from_cloudformation_json_orig",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.LogGroup_get_cfn_attribute": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "Exception",
    "LogGroup_get_cfn_attribute_orig",
    "localstack.utils.aws.aws_stack.log_group_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Mapping_create_from_cloudformation_json": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "Exception",
    "Mapping_create_from_cloudformation_json_orig",
    "classmethod",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.services.cloudformation.service_models.BaseModel",
    "localstack.utils.aws.aws_stack.lambda_function_name"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Method_create_from_cloudformation_json": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "classmethod",
    "moto.apigateway.models.Method"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Resource_create_from_cloudformation_json": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "classmethod",
    "id",
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.common.short_uid",
    "moto.apigateway.models.Resource"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.RestAPI_create_from_cloudformation_json": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "classmethod",
    "id",
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.common.short_uid",
    "moto.apigateway.models.RestAPI"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.RestAPI_get_cfn_attribute": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "id",
    "moto.cloudformation.exceptions.UnformattedGetAttTemplateException"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Role_update_from_cloudformation_json": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.S3_Bucket_get_cfn_attribute": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "S3_Bucket_get_cfn_attribute_orig",
    "localstack.utils.aws.aws_stack.s3_bucket_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.SNS_Topic_create_from_cloudformation_json": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "SNS_Topic_create_from_cloudformation_json_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.SNS_Topic_get_cfn_attribute": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "SNS_Topic_get_cfn_attribute_orig",
    "localstack.utils.aws.aws_stack.fix_account_id_in_arns"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.SQS_Queue_get_cfn_attribute": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "SQS_Queue_get_cfn_attribute_orig",
    "localstack.utils.aws.aws_stack.sqs_queue_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.SQS_Queue_physical_resource_id": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "getattr",
    "localstack.utils.aws.aws_stack.get_sqs_queue_url",
    "property"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches._parse_and_create_resource": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "deploy_func",
    "dict",
    "find_id",
    "getattr",
    "hasattr",
    "isinstance",
    "localstack.services.cloudformation.cloudformation_starter.CURRENTLY_UPDATING_RESOURCES",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.services.cloudformation.cloudformation_starter.add_default_resource_props",
    "localstack.services.cloudformation.cloudformation_starter.convert_objs_to_ids",
    "localstack.services.cloudformation.cloudformation_starter.set_moto_account_ids",
    "localstack.services.cloudformation.cloudformation_starter.update_physical_resource_id",
    "localstack.services.cloudformation.cloudformation_starter.update_resource_name",
    "localstack.utils.cloudformation.template_deployer.all_resource_dependencies_satisfied",
    "localstack.utils.cloudformation.template_deployer.deploy_resource",
    "localstack.utils.cloudformation.template_deployer.is_updateable",
    "localstack.utils.cloudformation.template_deployer.remove_none_values",
    "localstack.utils.cloudformation.template_deployer.should_be_deployed",
    "localstack.utils.cloudformation.template_deployer.update_resource",
    "localstack.utils.common.clone",
    "localstack.utils.common.json_safe",
    "moto.cloudformation.parsing.parse_resource_and_generate_name",
    "parse_and_create_resource_orig",
    "parse_and_update_resource_orig",
    "update_resource_id"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches._parse_and_create_resource.find_id": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.cf_describe_stack_events": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_stack.get_region",
    "moto.cloudformation.exceptions.ValidationError",
    "moto.cloudformation.responses.DESCRIBE_STACK_EVENTS_RESPONSE"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.clean_json": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "RecursionError",
    "clean_json_orig",
    "dict",
    "isinstance",
    "list",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.services.cloudformation.cloudformation_starter.get_entity_id",
    "moto.core.BaseModel",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.cloudformation_backend_create_change_set": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "cloudformation_backend_create_change_set_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.cloudformation_backend_describe_change_set": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "cloudformation_backend_describe_change_set_orig",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.cloudformation.cloudformation_starter.MOTO_CFN_ACCOUNT_ID"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.cloudformation_backend_execute_change_set": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.cloudformation.cloudformation_starter.MOTO_CFN_ACCOUNT_ID",
    "localstack.utils.common.start_thread",
    "set_stack_status"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.cloudformation_backend_execute_change_set.do_execute": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "Exception",
    "cloudformation_backend_execute_change_set_orig",
    "set_stack_status"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.depl_delete_from_cloudformation_json": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.describe_stack_resource": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.utils.aws.aws_responses.flask_error_response_json",
    "localstack.utils.aws.aws_stack.get_region",
    "moto.cloudformation.exceptions.ValidationError",
    "moto.cloudformation.responses.DESCRIBE_STACK_RESOURCE_RESPONSE_TEMPLATE"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.generate_stack_id": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "generate_stack_id_orig",
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.initialize_resources": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "run_dependencies_deployment_loop"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.kinesis_arn": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.make_cf_update_stack": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_starter.types"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.make_cf_update_stack.cf_update_stack": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "cf_update_stack_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.parse_and_create_resource": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "Exception",
    "_parse_and_create_resource",
    "hasattr",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.services.cloudformation.cloudformation_starter.traceback"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.parse_and_delete_resource": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "AttributeError",
    "parse_and_delete_resource_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.parse_and_update_resource": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "Exception",
    "_parse_and_create_resource",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.services.cloudformation.cloudformation_starter.traceback"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.parse_output": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "KeyError",
    "boto.cloudformation.stack.Output",
    "hasattr",
    "parse_output_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.resource_map_delete": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "resource_map_delete_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.resource_map_diff": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "moto.cloudformation.exceptions.ValidationError",
    "resource_map_diff_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.run_dependencies_deployment_loop": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.run_dependencies_deployment_loop.run_loop": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "list",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.services.cloudformation.cloudformation_starter.MAX_DEPENDENCY_DEPTH",
    "parse_and_create_resource",
    "range",
    "set_stack_status"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.set_stack_status": {
  "data": {
   "lineno": 952
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.update": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "run_dependencies_deployment_loop",
    "stack_update_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.update_resource_id": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.cloudformation.template_deployer.resolve_refs_recursively",
    "moto.apigateway.models.Deployment",
    "moto.apigateway.models.Resource",
    "moto.apigateway.models.RestAPI",
    "moto.apigateway.models.apigateway_backends",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.vers_delete_from_cloudformation_json": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.aws_responses": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.boto3.session": {
  "data": {
   "shadows": "boto3.session"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.canonical_json": {
  "data": {
   "shadows": "localstack.utils.common.canonical_json"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.canonicalize_api_names": {
  "data": {
   "shadows": "localstack.services.infra.canonicalize_api_names"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.clone": {
  "data": {
   "shadows": "localstack.utils.common.clone"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.cloudformation_backends": {
  "data": {
   "shadows": "moto.cloudformation.models.cloudformation_backends"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.cloudformation_models": {
  "data": {
   "shadows": "moto.cloudformation.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.cloudformation_utils": {
  "data": {
   "shadows": "moto.cloudformation.utils"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.convert_objs_to_ids": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "localstack.utils.common.recurse_object"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.convert_objs_to_ids.fix_ids": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "localstack.services.cloudformation.cloudformation_starter.get_entity_id",
    "moto.core.BaseModel"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.cw_models": {
  "data": {
   "shadows": "moto.cloudwatch.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.do_run": {
  "data": {
   "shadows": "localstack.services.infra.do_run"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.docker": {
  "data": {
   "shadows": "docker"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.dynamodb2_models": {
  "data": {
   "shadows": "moto.dynamodb2.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.dynamodb_models": {
  "data": {
   "shadows": "moto.dynamodb.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.edge_ports_info": {
  "data": {
   "shadows": "localstack.utils.common.edge_ports_info"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.get_entity_id": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "hasattr",
    "isinstance",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "moto.apigateway.models.Resource",
    "moto.apigateway.models.RestAPI"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.get_free_tcp_port": {
  "data": {
   "shadows": "localstack.utils.common.get_free_tcp_port"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.iam_models": {
  "data": {
   "shadows": "moto.iam.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.inject_stats_endpoint": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "hasattr",
    "moto.server",
    "moto.server.create_backend_app",
    "moto.server.create_backend_app_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.inject_stats_endpoint._get_stats": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_starter.json",
    "pympler.muppy.get_objects",
    "pympler.summary",
    "pympler.summary.format_",
    "pympler.summary.summarize"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.inject_stats_endpoint.create_backend_app": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "moto.server.create_backend_app_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.json_safe": {
  "data": {
   "shadows": "localstack.utils.common.json_safe"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.kinesis_models": {
  "data": {
   "shadows": "moto.kinesis.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.lambda_models": {
  "data": {
   "shadows": "moto.awslambda.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.main": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_starter.start_up",
    "localstack.services.cloudformation.cloudformation_starter.sys",
    "localstack.services.infra.canonicalize_api_names",
    "localstack.utils.bootstrap.setup_logging"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.md5": {
  "data": {
   "shadows": "localstack.utils.common.md5"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.moto_main": {
  "data": {
   "shadows": "moto.server.main"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.moto_server": {
  "data": {
   "shadows": "moto.server"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.muppy": {
  "data": {
   "shadows": "pympler.muppy"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.parsing": {
  "data": {
   "shadows": "moto.cloudformation.parsing"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.recurse_object": {
  "data": {
   "shadows": "localstack.utils.common.recurse_object"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.responses": {
  "data": {
   "shadows": "moto.cloudformation.responses"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.s3_models": {
  "data": {
   "shadows": "moto.s3.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.service_models": {
  "data": {
   "shadows": "localstack.services.cloudformation.service_models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.set_moto_account_ids": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "localstack.utils.common.recurse_object"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.set_moto_account_ids.fix_ids": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "localstack.constants.MOTO_ACCOUNT_ID",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.cloudformation.cloudformation_starter.six"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.setup_logging": {
  "data": {
   "shadows": "localstack.utils.bootstrap.setup_logging"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.sfn_models": {
  "data": {
   "shadows": "localstack.stepfunctions.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.sns_models": {
  "data": {
   "shadows": "moto.sns.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.sqs_models": {
  "data": {
   "shadows": "moto.sqs.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.start_cloudformation": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "localstack.config.PORT_CLOUDFORMATION",
    "localstack.services.cloudformation.cloudformation_starter.RUN_SERVER_IN_PROCESS",
    "localstack.services.cloudformation.cloudformation_starter.sys",
    "localstack.services.infra.do_run",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.utils.common.FuncThread",
    "localstack.utils.common.edge_ports_info",
    "localstack.utils.common.get_free_tcp_port",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.start_proxy_for_service": {
  "data": {
   "shadows": "localstack.services.infra.start_proxy_for_service"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.start_thread": {
  "data": {
   "shadows": "localstack.utils.common.start_thread"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.start_up": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_starter.apply_patches",
    "localstack.services.cloudformation.cloudformation_starter.inject_stats_endpoint",
    "moto.server.main"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.summary": {
  "data": {
   "shadows": "pympler.summary"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.template_deployer": {
  "data": {
   "shadows": "localstack.utils.cloudformation.template_deployer"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.update_dynamodb_index_resource": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.update_physical_resource_id": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.services.cloudformation.service_models.ElasticsearchDomain",
    "localstack.services.cloudformation.service_models.EventsRule",
    "localstack.services.cloudformation.service_models.FirehoseDeliveryStream",
    "localstack.services.cloudformation.service_models.LogsLogGroup",
    "localstack.services.cloudformation.service_models.SecretsManagerSecret",
    "localstack.services.cloudformation.service_models.StepFunctionsActivity",
    "localstack.stepfunctions.models.StateMachine",
    "localstack.utils.aws.aws_stack.lambda_function_arn",
    "localstack.utils.aws.aws_stack.state_machine_arn",
    "localstack.utils.aws.aws_stack.stepfunctions_activity_arn",
    "moto.apigateway.models.RestAPI",
    "moto.awslambda.models.LambdaFunction",
    "moto.dynamodb.models.Table",
    "moto.dynamodb2.models.Table",
    "moto.kinesis.models.Stream",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.update_resource_name": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "isinstance",
    "localstack.stepfunctions.models.StateMachine"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.service_models": {
  "data": {},
  "type": "module"
 },
 "localstack.services.cloudformation.service_models.BaseModel": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "moto.core.models.CloudFormationModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.BaseModel.__init__": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "localstack.services.cloudformation.service_models.BaseModel.create_from_cloudformation_json": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.service_models.BaseModel.get_cfn_attribute": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "getattr",
    "moto.cloudformation.exceptions.UnformattedGetAttTemplateException"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.service_models.CloudFormationModel": {
  "data": {
   "shadows": "moto.core.models.CloudFormationModel"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.service_models.CloudFormationStack": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.ElasticsearchDomain": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.EventsRule": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.EventsRule.get_cfn_attribute": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.EventsRule",
    "localstack.utils.aws.aws_stack.events_rule_arn",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.service_models.FirehoseDeliveryStream": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.GatewayResponse": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.LogsLogGroup": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.LogsLogGroup.get_cfn_attribute": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.LogsLogGroup",
    "localstack.utils.aws.aws_stack.log_group_arn",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.service_models.S3BucketPolicy": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.SNSSubscription": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.SSMParameter": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.SecretsManagerSecret": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.StepFunctionsActivity": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.UnformattedGetAttTemplateException": {
  "data": {
   "shadows": "moto.cloudformation.exceptions.UnformattedGetAttTemplateException"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.service_models.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.dynamodb": {
  "data": {},
  "type": "module"
 },
 "localstack.services.dynamodb.dynamodb_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.dynamodb.dynamodb_starter.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.dynamodb.dynamodb_starter.LOGGER": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "localstack.services.dynamodb.dynamodb_starter.PORT_DYNAMODB_BACKEND": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "localstack.services.dynamodb.dynamodb_starter.ROOT_PATH": {
  "data": {
   "shadows": "localstack.services.install.ROOT_PATH"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.check_dynamodb": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "list",
    "localstack.services.dynamodb.dynamodb_starter.LOGGER",
    "localstack.services.dynamodb.dynamodb_starter.PORT_DYNAMODB_BACKEND",
    "localstack.services.dynamodb.dynamodb_starter.traceback",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.common.wait_for_port_open"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.do_run": {
  "data": {
   "shadows": "localstack.services.infra.do_run"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.edge_ports_info": {
  "data": {
   "shadows": "localstack.utils.common.edge_ports_info"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.get_free_tcp_port": {
  "data": {
   "shadows": "localstack.utils.common.get_free_tcp_port"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.install": {
  "data": {
   "shadows": "localstack.services.install"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.mkdir": {
  "data": {
   "shadows": "localstack.utils.common.mkdir"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.start_dynamodb": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "localstack.config.DATA_DIR",
    "localstack.config.DYNAMODB_HEAP_SIZE",
    "localstack.config.PORT_DYNAMODB",
    "localstack.services.dynamodb.dynamodb_starter.PORT_DYNAMODB_BACKEND",
    "localstack.services.infra.do_run",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.services.install.ROOT_PATH",
    "localstack.services.install.install_dynamodb_local",
    "localstack.utils.common.edge_ports_info",
    "localstack.utils.common.get_free_tcp_port",
    "localstack.utils.common.mkdir",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_starter.start_proxy_for_service": {
  "data": {
   "shadows": "localstack.services.infra.start_proxy_for_service"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.wait_for_port_open": {
  "data": {
   "shadows": "localstack.utils.common.wait_for_port_open"
  },
  "type": "import"
 },
 "localstack.services.dynamodbstreams": {
  "data": {},
  "type": "module"
 },
 "localstack.services.ec2": {
  "data": {},
  "type": "module"
 },
 "localstack.services.ec2.ec2_listener": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.ec2.ec2_listener.ProxyListenerEC2",
    "localstack.services.ec2.ec2_listener.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.ec2.ec2_listener.LOG": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "localstack.services.ec2.ec2_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.ec2.ec2_listener.ProxyListenerEC2": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.ec2.ec2_listener.ProxyListenerEC2.return_response": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "localstack.services.ec2.ec2_listener.fix_creation_date",
    "localstack.services.ec2.ec2_listener.fix_error_tag"
   ]
  },
  "type": "function"
 },
 "localstack.services.ec2.ec2_listener.UPDATE_EC2": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "localstack.services.ec2.ec2_listener.fix_creation_date": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Exception",
    "len",
    "localstack.services.ec2.ec2_listener.LOG",
    "localstack.services.ec2.ec2_listener.re",
    "localstack.utils.common.to_str",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.ec2.ec2_listener.fix_error_tag": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "localstack.services.ec2.ec2_listener.re",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.ec2.ec2_listener.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.ec2.ec2_listener.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.ec2.ec2_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.ec2.ec2_starter": {
  "data": {},
  "type": "module"
 },
 "localstack.services.ec2.ec2_starter.DESCRIBE_RESERVED_INSTANCES_OFFERINGS_RESPONSE": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "localstack.services.ec2.ec2_starter.DESCRIBE_RESERVED_INSTANCES_RESPONSE": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "localstack.services.ec2.ec2_starter.InvalidPermissionNotFoundError": {
  "data": {
   "shadows": "moto.ec2.exceptions.InvalidPermissionNotFoundError"
  },
  "type": "import"
 },
 "localstack.services.ec2.ec2_starter.PURCHASE_RESERVED_INSTANCES_OFFERINGS_RESPONSE": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "localstack.services.ec2.ec2_starter.ReservedInstances": {
  "data": {
   "shadows": "moto.ec2.responses.reserved_instances.ReservedInstances"
  },
  "type": "import"
 },
 "localstack.services.ec2.ec2_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.ec2.ec2_starter.ec2_models": {
  "data": {
   "shadows": "moto.ec2.models"
  },
  "type": "import"
 },
 "localstack.services.ec2.ec2_starter.patch_ec2": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "moto.ec2.models.ec2_backends.items",
    "moto.ec2.responses.reserved_instances.ReservedInstances.describe_reserved_instances",
    "moto.ec2.responses.reserved_instances.ReservedInstances.describe_reserved_instances_offerings",
    "moto.ec2.responses.reserved_instances.ReservedInstances.purchase_reserved_instances_offering",
    "patch_delete_nat_gateway",
    "patch_revoke_security_group_egress"
   ]
  },
  "type": "function"
 },
 "localstack.services.ec2.ec2_starter.patch_ec2.describe_reserved_instances": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "localstack.services.ec2.ec2_starter.patch_ec2.describe_reserved_instances_offerings": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "localstack.services.ec2.ec2_starter.patch_ec2.patch_delete_nat_gateway": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "localstack.services.ec2.ec2_starter.patch_ec2.patch_delete_nat_gateway.delete_nat_gateway": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "localstack.services.ec2.ec2_starter.patch_ec2.patch_revoke_security_group_egress": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "localstack.services.ec2.ec2_starter.patch_ec2.patch_revoke_security_group_egress.revoke_security_group_egress": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "moto.ec2.exceptions.InvalidPermissionNotFoundError",
    "revoke_security_group_egress_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.ec2.ec2_starter.patch_ec2.purchase_reserved_instances_offering": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "localstack.services.ec2.ec2_starter.start_ec2": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "localstack.config.PORT_EC2",
    "localstack.services.ec2.ec2_starter.patch_ec2",
    "localstack.services.infra.start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.ec2.ec2_starter.start_moto_server": {
  "data": {
   "shadows": "localstack.services.infra.start_moto_server"
  },
  "type": "import"
 },
 "localstack.services.edge": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "localstack.services.edge.logging",
    "localstack.services.edge.start_edge",
    "localstack.services.edge.sys"
   ]
  },
  "type": "module"
 },
 "localstack.services.edge.Environment": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack.Environment"
  },
  "type": "import"
 },
 "localstack.services.edge.HEADER_KILL_SIGNAL": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "localstack.services.edge.HEADER_LOCALSTACK_EDGE_URL": {
  "data": {
   "shadows": "localstack.constants.HEADER_LOCALSTACK_EDGE_URL"
  },
  "type": "import"
 },
 "localstack.services.edge.HEADER_LOCALSTACK_TARGET": {
  "data": {
   "shadows": "localstack.constants.HEADER_LOCALSTACK_TARGET"
  },
  "type": "import"
 },
 "localstack.services.edge.HTTPErrorResponse": {
  "data": {
   "shadows": "localstack.utils.server.http2_server.HTTPErrorResponse"
  },
  "type": "import"
 },
 "localstack.services.edge.LOCALHOST": {
  "data": {
   "shadows": "localstack.constants.LOCALHOST"
  },
  "type": "import"
 },
 "localstack.services.edge.LOCALHOST_IP": {
  "data": {
   "shadows": "localstack.constants.LOCALHOST_IP"
  },
  "type": "import"
 },
 "localstack.services.edge.LOCALSTACK_ROOT_FOLDER": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_ROOT_FOLDER"
  },
  "type": "import"
 },
 "localstack.services.edge.LOG": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.services.edge.PATH_USER_REQUEST": {
  "data": {
   "shadows": "localstack.constants.PATH_USER_REQUEST"
  },
  "type": "import"
 },
 "localstack.services.edge.PROXY_LISTENERS": {
  "data": {
   "shadows": "localstack.services.infra.PROXY_LISTENERS"
  },
  "type": "import"
 },
 "localstack.services.edge.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.edge.ProxyListenerEdge": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.edge.ProxyListenerEdge.forward_request": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "localstack.constants.HEADER_LOCALSTACK_EDGE_URL",
    "localstack.services.edge.HEADER_KILL_SIGNAL",
    "localstack.services.edge.LOG",
    "localstack.services.edge.do_forward_request",
    "localstack.services.edge.get_api_from_custom_rules",
    "localstack.services.edge.get_api_from_headers",
    "localstack.services.edge.json",
    "localstack.services.edge.os",
    "localstack.services.edge.serve_health_endpoint",
    "localstack.services.edge.serve_resource_graph",
    "localstack.utils.aws.aws_stack.mock_aws_request_headers",
    "localstack.utils.aws.aws_stack.set_default_region_in_headers",
    "localstack.utils.common.truncate",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.edge.TMP_THREADS": {
  "data": {
   "shadows": "localstack.utils.common.TMP_THREADS"
  },
  "type": "import"
 },
 "localstack.services.edge.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.edge.can_use_sudo": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.edge.dashboard_infra": {
  "data": {
   "shadows": "localstack.dashboard.infra"
  },
  "type": "import"
 },
 "localstack.services.edge.dns_server": {
  "data": {
   "shadows": "localstack_ext.services.dns_server"
  },
  "type": "import"
 },
 "localstack.services.edge.do_forward_request": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "hasattr",
    "localstack.config.FORWARD_EDGE_INMEM",
    "localstack.services.edge.do_forward_request_inmem",
    "localstack.services.edge.do_forward_request_network"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.do_forward_request_inmem": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "localstack.config.HOSTNAME",
    "localstack.constants.LOCALHOST",
    "localstack.constants.LOCALHOST_IP",
    "localstack.services.edge.LOG",
    "localstack.services.generic_proxy.modify_and_forward",
    "localstack.services.infra.PROXY_LISTENERS.get",
    "localstack.utils.server.http2_server.HTTPErrorResponse"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.do_forward_request_network": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "function",
    "getattr",
    "localstack.config.HOSTNAME",
    "localstack.utils.common.get_service_protocol",
    "localstack.utils.common.safe_requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.do_start_edge": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "Exception",
    "localstack.services.edge.ProxyListenerEdge",
    "localstack.services.generic_proxy.start_proxy_server",
    "localstack_ext.services.dns_server.start_servers",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.ensure_can_use_sudo": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "localstack.services.edge.can_use_sudo",
    "localstack.utils.common.is_root",
    "localstack.utils.common.run",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.get_api_from_custom_rules": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "localstack.config.PORT_APIGATEWAY",
    "localstack.config.PORT_DYNAMODB",
    "localstack.config.PORT_LAMBDA",
    "localstack.config.PORT_S3",
    "localstack.config.PORT_SQS",
    "localstack.constants.PATH_USER_REQUEST",
    "localstack.services.edge.is_s3_form_data",
    "localstack.services.sqs.sqs_listener.is_sqs_queue_url",
    "localstack.utils.common.to_bytes"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.get_api_from_headers": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "Exception",
    "localstack.config.PORT_APIGATEWAY",
    "localstack.config.PORT_CLOUDFRONT",
    "localstack.config.PORT_CLOUDWATCH",
    "localstack.config.PORT_COGNITO_IDENTITY",
    "localstack.config.PORT_COGNITO_IDP",
    "localstack.config.PORT_DYNAMODB",
    "localstack.config.PORT_DYNAMODBSTREAMS",
    "localstack.config.PORT_FIREHOSE",
    "localstack.config.PORT_S3",
    "localstack.config.PORT_STEPFUNCTIONS",
    "localstack.config.PORT_WEB_UI",
    "localstack.constants.HEADER_LOCALSTACK_TARGET",
    "localstack.services.edge.get_service_port_for_account",
    "localstack.services.edge.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.get_service_port_for_account": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "localstack.config.service_port"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.get_service_protocol": {
  "data": {
   "shadows": "localstack.utils.common.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.services.edge.is_root": {
  "data": {
   "shadows": "localstack.utils.common.is_root"
  },
  "type": "import"
 },
 "localstack.services.edge.is_s3_form_data": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "localstack.utils.common.to_bytes"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.is_sqs_queue_url": {
  "data": {
   "shadows": "localstack.services.sqs.sqs_listener.is_sqs_queue_url"
  },
  "type": "import"
 },
 "localstack.services.edge.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.edge.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.edge.modify_and_forward": {
  "data": {
   "shadows": "localstack.services.generic_proxy.modify_and_forward"
  },
  "type": "import"
 },
 "localstack.services.edge.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.services.edge.plugins": {
  "data": {
   "shadows": "localstack.services.plugins"
  },
  "type": "import"
 },
 "localstack.services.edge.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.edge.requests": {
  "data": {
   "shadows": "localstack.utils.common.safe_requests"
  },
  "type": "import"
 },
 "localstack.services.edge.run": {
  "data": {
   "shadows": "localstack.utils.common.run"
  },
  "type": "import"
 },
 "localstack.services.edge.serve_health_endpoint": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "localstack.services.edge.json",
    "localstack.services.plugins.get_services_health",
    "localstack.services.plugins.set_services_health",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.serve_resource_graph": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "localstack.dashboard.infra.get_graph",
    "localstack.services.edge.json",
    "localstack.utils.aws.aws_stack.Environment.from_string",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.set_default_region_in_headers": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack.set_default_region_in_headers"
  },
  "type": "import"
 },
 "localstack.services.edge.start_edge": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "Terminator",
    "localstack.config.EDGE_PORT",
    "localstack.config.EDGE_PORT_HTTP",
    "localstack.constants.LOCALSTACK_ROOT_FOLDER",
    "localstack.services.edge.do_start_edge",
    "localstack.services.edge.ensure_can_use_sudo",
    "localstack.services.edge.sys",
    "localstack.utils.common.TMP_THREADS.append",
    "localstack.utils.common.is_root",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.start_edge.Terminator": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.services.edge.start_edge.Terminator.stop": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "Exception",
    "localstack.constants.LOCALHOST",
    "localstack.services.edge.HEADER_KILL_SIGNAL",
    "localstack.utils.common.safe_requests.post",
    "localstack.utils.common.safe_requests.verify_ssl"
   ]
  },
  "type": "function"
 },
 "localstack.services.edge.start_proxy_server": {
  "data": {
   "shadows": "localstack.services.generic_proxy.start_proxy_server"
  },
  "type": "import"
 },
 "localstack.services.edge.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.services.edge.to_bytes": {
  "data": {
   "shadows": "localstack.utils.common.to_bytes"
  },
  "type": "import"
 },
 "localstack.services.edge.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.edge.truncate": {
  "data": {
   "shadows": "localstack.utils.common.truncate"
  },
  "type": "import"
 },
 "localstack.services.es": {
  "data": {},
  "type": "module"
 },
 "localstack.services.es.es_api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "flask.Flask",
    "localstack.services.es.es_api.APP_NAME",
    "localstack.services.es.es_api.app",
    "localstack.services.es.es_api.logging",
    "localstack.utils.tagging.TaggingService"
   ]
  },
  "type": "module"
 },
 "localstack.services.es.es_api.API_PREFIX": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "localstack.services.es.es_api.APP_NAME": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.services.es.es_api.DEFAULT_ES_VERSION": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "localstack.services.es.es_api.ELASTICSEARCH_DEFAULT_VERSION": {
  "data": {
   "shadows": "localstack.constants.ELASTICSEARCH_DEFAULT_VERSION"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.ES_DOMAINS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.services.es.es_api.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.LOG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "localstack.services.es.es_api.TAGS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "localstack.services.es.es_api.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.TaggingService": {
  "data": {
   "shadows": "localstack.utils.tagging.TaggingService"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.add_list_tags": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.args.get",
    "flask.request.data",
    "flask.request.method",
    "localstack.services.es.es_api.API_PREFIX",
    "localstack.services.es.es_api.TAGS",
    "localstack.services.es.es_api.app",
    "localstack.services.es.es_api.json",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.app": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "localstack.services.es.es_api.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.check_infra": {
  "data": {
   "shadows": "localstack.services.plugins.check_infra"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.cleanup_elasticsearch_instance": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "localstack.services.es.es_starter.stop_elasticsearch"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.create_domain": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request",
    "flask.request.data",
    "localstack.services.es.es_api.API_PREFIX",
    "localstack.services.es.es_api.ES_DOMAINS",
    "localstack.services.es.es_api.app",
    "localstack.services.es.es_api.error_response",
    "localstack.services.es.es_api.get_domain_status",
    "localstack.services.es.es_api.json",
    "localstack.services.es.es_api.time",
    "localstack.utils.analytics.event_publisher.EVENT_ES_CREATE_DOMAIN",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.common.FuncThread",
    "localstack.utils.common.to_str",
    "localstack.utils.persistence.record"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.create_domain.do_start": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "localstack.services.es.es_api.DEFAULT_ES_VERSION",
    "localstack.services.es.es_api.start_elasticsearch_instance"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.delete_domain": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request",
    "localstack.services.es.es_api.API_PREFIX",
    "localstack.services.es.es_api.ES_DOMAINS",
    "localstack.services.es.es_api.app",
    "localstack.services.es.es_api.cleanup_elasticsearch_instance",
    "localstack.services.es.es_api.error_response",
    "localstack.services.es.es_api.get_domain_status",
    "localstack.utils.analytics.event_publisher.EVENT_ES_DELETE_DOMAIN",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.persistence.record"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.describe_domain": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.es.es_api.API_PREFIX",
    "localstack.services.es.es_api.ES_DOMAINS",
    "localstack.services.es.es_api.app",
    "localstack.services.es.es_api.error_response",
    "localstack.services.es.es_api.get_domain_status"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.describe_domains": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.data",
    "localstack.services.es.es_api.API_PREFIX",
    "localstack.services.es.es_api.ES_DOMAINS",
    "localstack.services.es.es_api.app",
    "localstack.services.es.es_api.get_domain_status",
    "localstack.services.es.es_api.json",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.domain_config": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.config",
    "localstack.services.es.es_api.API_PREFIX",
    "localstack.services.es.es_api.app",
    "localstack.services.es.es_api.get_domain_config"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.error_response": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.make_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.es_starter": {
  "data": {
   "shadows": "localstack.services.es.es_starter"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.generic_proxy": {
  "data": {
   "shadows": "localstack.services.generic_proxy"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.get_compatible_versions": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.es.es_api.API_PREFIX",
    "localstack.services.es.es_api.app"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.get_domain_config": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.es.es_api.get_domain_config_status",
    "localstack.utils.aws.aws_stack.get_region",
    "random.randint"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.get_domain_config_status": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "localstack.services.es.es_api.time",
    "random.randint"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.get_domain_status": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "localstack.config.HOSTNAME_EXTERNAL",
    "localstack.config.PORT_ELASTICSEARCH",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.es.es_api.DEFAULT_ES_VERSION",
    "localstack.services.es.es_api.ES_DOMAINS",
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.common.get_service_protocol"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.get_install_version_for_api_version": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "localstack.constants.ELASTICSEARCH_DEFAULT_VERSION",
    "localstack.services.es.es_api.LOG"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.get_service_protocol": {
  "data": {
   "shadows": "localstack.utils.common.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.install": {
  "data": {
   "shadows": "localstack.services.install"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.jsonify": {
  "data": {
   "shadows": "flask.jsonify"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.list_domain_names": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.es.es_api.API_PREFIX",
    "localstack.services.es.es_api.ES_DOMAINS",
    "localstack.services.es.es_api.app"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.make_response": {
  "data": {
   "shadows": "flask.make_response"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.persistence": {
  "data": {
   "shadows": "localstack.utils.persistence"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.randint": {
  "data": {
   "shadows": "random.randint"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.serve": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "localstack.services.es.es_api.app",
    "localstack.services.generic_proxy.serve_flask_app"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.start_elasticsearch_instance": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "localstack.services.es.es_api.get_install_version_for_api_version",
    "localstack.services.es.es_api.time",
    "localstack.services.es.es_starter.check_elasticsearch",
    "localstack.services.es.es_starter.start_elasticsearch",
    "localstack.services.install.install_elasticsearch",
    "localstack.services.plugins.check_infra"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.es.es_starter.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.es.es_starter.LOG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.services.es.es_starter.STATE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "localstack.services.es.es_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.check_elasticsearch": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "localstack.services.es.es_starter.LOG",
    "localstack.services.es.es_starter.six",
    "localstack.services.es.es_starter.traceback",
    "localstack.utils.aws.aws_stack.connect_elasticsearch"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_starter.chmod_r": {
  "data": {
   "shadows": "localstack.utils.common.chmod_r"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.delete_all_elasticsearch_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "localstack.services.es.es_starter.os",
    "localstack.services.install.get_elasticsearch_install_dir",
    "localstack.utils.common.rm_rf"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_starter.do_run": {
  "data": {
   "shadows": "localstack.services.infra.do_run"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.get_free_tcp_port": {
  "data": {
   "shadows": "localstack.utils.common.get_free_tcp_port"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.get_service_protocol": {
  "data": {
   "shadows": "localstack.utils.common.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.install": {
  "data": {
   "shadows": "localstack.services.install"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.is_root": {
  "data": {
   "shadows": "localstack.utils.common.is_root"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.mkdir": {
  "data": {
   "shadows": "localstack.utils.common.mkdir"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.rm_rf": {
  "data": {
   "shadows": "localstack.utils.common.rm_rf"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.start_elasticsearch": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "localstack.config.DATA_DIR",
    "localstack.config.PORT_ELASTICSEARCH",
    "localstack.config.TMP_FOLDER",
    "localstack.services.es.es_starter.LOG",
    "localstack.services.es.es_starter.STATE",
    "localstack.services.es.es_starter.delete_all_elasticsearch_data",
    "localstack.services.es.es_starter.os",
    "localstack.services.infra.do_run",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.services.install.get_elasticsearch_install_dir",
    "localstack.services.install.install_elasticsearch",
    "localstack.utils.common.chmod_r",
    "localstack.utils.common.get_free_tcp_port",
    "localstack.utils.common.get_service_protocol",
    "localstack.utils.common.is_root",
    "localstack.utils.common.mkdir",
    "localstack.utils.common.rm_rf"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_starter.start_proxy_for_service": {
  "data": {
   "shadows": "localstack.services.infra.start_proxy_for_service"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.stop_elasticsearch": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "localstack.services.es.es_starter.LOG",
    "localstack.services.es.es_starter.STATE"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_starter.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.events": {
  "data": {},
  "type": "module"
 },
 "localstack.services.events.events_listener": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.config.TMP_FOLDER",
    "localstack.services.events.events_listener.ProxyListenerEvents",
    "localstack.services.events.events_listener.logging",
    "localstack.services.events.events_listener.os"
   ]
  },
  "type": "module"
 },
 "localstack.services.events.events_listener.EVENTS_TMP_DIR": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "localstack.services.events.events_listener.JobScheduler": {
  "data": {
   "shadows": "localstack.services.events.scheduler.JobScheduler"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.LOG": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.services.events.events_listener.MOTO_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.MOTO_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.ProxyListenerEvents": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener",
    "localstack.utils.tagging.TaggingService"
   ]
  },
  "type": "class"
 },
 "localstack.services.events.events_listener.ProxyListenerEvents.forward_request": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "localstack.services.events.events_listener.handle_delete_rule",
    "localstack.services.events.events_listener.handle_put_rule",
    "localstack.services.events.events_listener.json",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_listener.ProxyListenerEvents.return_response": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "len",
    "localstack.services.events.events_listener.fix_account_id",
    "localstack.services.events.events_listener.fix_date_format"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_listener.RULE_SCHEDULED_JOBS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "localstack.services.events.events_listener.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.TMP_FILES": {
  "data": {
   "shadows": "localstack.utils.common.TMP_FILES"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.TaggingService": {
  "data": {
   "shadows": "localstack.utils.tagging.TaggingService"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.UPDATE_EVENTS": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "localstack.services.events.events_listener._create_and_register_temp_dir": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "localstack.services.events.events_listener.EVENTS_TMP_DIR",
    "localstack.utils.common.TMP_FILES",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.common.mkdir"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_listener._dump_events_to_files": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "int",
    "localstack.services.events.events_listener.EVENTS_TMP_DIR",
    "localstack.services.events.events_listener.json",
    "localstack.services.events.events_listener.os",
    "localstack.services.events.events_listener.time",
    "localstack.utils.common.save_file",
    "round"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_listener._replace": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "localstack.services.events.events_listener.re",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_listener.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.convert_schedule_to_cron": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "Exception",
    "localstack.services.events.events_listener.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_listener.fix_account_id": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "localstack.constants.MOTO_ACCOUNT_ID",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.utils.aws.aws_stack.fix_account_id_in_arns"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_listener.fix_date_format": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "localstack.services.events.events_listener._replace"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_listener.get_scheduled_rule_func": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "localstack.services.events.events_listener.get_scheduled_rule_func.func": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len",
    "localstack.services.awslambda.lambda_api.run_lambda",
    "localstack.services.events.events_listener.LOG",
    "localstack.services.events.events_listener.json",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.get_sqs_queue_url"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_listener.handle_delete_rule": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "localstack.services.events.events_listener.LOG",
    "localstack.services.events.events_listener.RULE_SCHEDULED_JOBS",
    "localstack.services.events.scheduler.JobScheduler.instance",
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_listener.handle_put_rule": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "localstack.services.events.events_listener.LOG",
    "localstack.services.events.events_listener.RULE_SCHEDULED_JOBS",
    "localstack.services.events.events_listener.convert_schedule_to_cron",
    "localstack.services.events.events_listener.get_scheduled_rule_func",
    "localstack.services.events.scheduler.JobScheduler.instance",
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_listener.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.lambda_api": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.mkdir": {
  "data": {
   "shadows": "localstack.utils.common.mkdir"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.save_file": {
  "data": {
   "shadows": "localstack.utils.common.save_file"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.services.events.events_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.events.events_starter.DEFAULT_EVENT_BUS_NAME",
    "localstack.services.events.events_starter.logging",
    "set"
   ]
  },
  "type": "module"
 },
 "localstack.services.events.events_starter.APPLICATION_AMZ_JSON_1_1": {
  "data": {
   "shadows": "localstack.constants.APPLICATION_AMZ_JSON_1_1"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.DEFAULT_EVENT_BUS_NAME": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "localstack.services.events.events_starter.EVENT_RULES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.services.events.events_starter.JobScheduler": {
  "data": {
   "shadows": "localstack.services.events.scheduler.JobScheduler"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.LOG": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.services.events.events_starter.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter._create_and_register_temp_dir": {
  "data": {
   "shadows": "localstack.services.events.events_listener._create_and_register_temp_dir"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter._dump_events_to_files": {
  "data": {
   "shadows": "localstack.services.events.events_listener._dump_events_to_files"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.apply_patches": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "moto.events.models.Rule._generate_arn",
    "moto.events.responses.EventsHandler.delete_rule",
    "moto.events.responses.EventsHandler.put_events",
    "moto.events.responses.EventsHandler.put_rule",
    "moto.events.responses.EventsHandler.put_targets"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_starter.apply_patches.events_handler_delete_rule": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "events_handler_delete_rule_orig",
    "localstack.services.events.events_starter.DEFAULT_EVENT_BUS_NAME",
    "localstack.services.events.events_starter.EVENT_RULES",
    "set"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_starter.apply_patches.events_handler_put_events": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "events",
    "list",
    "localstack.constants.APPLICATION_AMZ_JSON_1_1",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.events.events_listener._create_and_register_temp_dir",
    "localstack.services.events.events_listener._dump_events_to_files",
    "localstack.services.events.events_starter.DEFAULT_EVENT_BUS_NAME",
    "localstack.services.events.events_starter.EVENT_RULES",
    "localstack.services.events.events_starter.datetime",
    "localstack.services.events.events_starter.filter_event_based_on_event_format",
    "localstack.services.events.events_starter.json",
    "localstack.services.events.events_starter.process_events",
    "localstack.services.events.events_starter.uuid",
    "localstack.utils.common.short_uid",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_starter.apply_patches.events_handler_put_rule": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "events_handler_put_rule_orig",
    "localstack.services.events.events_starter.DEFAULT_EVENT_BUS_NAME",
    "localstack.services.events.events_starter.EVENT_RULES",
    "set"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_starter.apply_patches.events_handler_put_targets": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "localstack.services.events.events_starter.json"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_starter.apply_patches.rule_model_generate_arn": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "localstack.constants.TEST_AWS_ACCOUNT_ID"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.events_handler": {
  "data": {
   "shadows": "moto.events.responses.EventsHandler"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.extract_jsonpath": {
  "data": {
   "shadows": "localstack.utils.common.extract_jsonpath"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.filter_event_based_on_event_format": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "localstack.services.events.events_starter.json"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_starter.filter_event_with_target_input_path": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "localstack.utils.common.extract_jsonpath"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_starter.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.process_events": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "localstack.services.events.events_starter.LOG",
    "localstack.services.events.events_starter.filter_event_with_target_input_path",
    "localstack.services.events.events_starter.send_event_to_firehose",
    "localstack.services.events.events_starter.send_event_to_lambda",
    "localstack.services.events.events_starter.send_event_to_sqs"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_starter.rule_model": {
  "data": {
   "shadows": "moto.events.models.Rule"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.run_lambda": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api.run_lambda"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.send_event_to_firehose": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "localstack.services.events.events_starter.json",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.firehose_name",
    "localstack.utils.common.to_bytes"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_starter.send_event_to_lambda": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.run_lambda"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_starter.send_event_to_sqs": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "localstack.services.events.events_starter.json",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.get_sqs_queue_url"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_starter.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.start_events": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "localstack.config.PORT_EVENTS",
    "localstack.services.events.events_starter.apply_patches",
    "localstack.services.events.events_starter.start_scheduler",
    "localstack.services.infra.start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_starter.start_moto_server": {
  "data": {
   "shadows": "localstack.services.infra.start_moto_server"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.start_scheduler": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "localstack.services.events.scheduler.JobScheduler.start"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.events_starter.to_bytes": {
  "data": {
   "shadows": "localstack.utils.common.to_bytes"
  },
  "type": "import"
 },
 "localstack.services.events.events_starter.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "localstack.services.events.scheduler": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.events.scheduler.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.events.scheduler.CronTab": {
  "data": {
   "shadows": "crontab.CronTab"
  },
  "type": "import"
 },
 "localstack.services.events.scheduler.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.services.events.scheduler.Job": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.services.events.scheduler.Job.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "localstack.utils.common.short_uid"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.scheduler.Job.do_run": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.scheduler.Job.run": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Exception",
    "localstack.services.events.scheduler.LOG"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.scheduler.Job.should_run_now": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "crontab.CronTab"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.scheduler.JobScheduler": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.services.events.scheduler.JobScheduler.__init__": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "localstack.services.events.scheduler.JobScheduler.add_job": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "localstack.services.events.scheduler.Job"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.scheduler.JobScheduler.cancel_job": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.scheduler.JobScheduler.instance": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "classmethod",
    "localstack.services.events.scheduler.JobScheduler"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.scheduler.JobScheduler.loop": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Exception",
    "list",
    "localstack.services.events.scheduler.time"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.scheduler.JobScheduler.start": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.scheduler.JobScheduler.start_loop": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread"
   ]
  },
  "type": "function"
 },
 "localstack.services.events.scheduler.LOG": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "localstack.services.events.scheduler.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.events.scheduler.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.services.events.scheduler.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.services.firehose": {
  "data": {},
  "type": "module"
 },
 "localstack.services.generic_proxy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "asyncio.selector_events.BaseSelectorEventLoop",
    "asyncio.selector_events.BaseSelectorEventLoop._accept_connection2",
    "asyncio.selector_events.BaseSelectorEventLoop._ls_patched",
    "hasattr",
    "localstack.config.EXTRA_CORS_ALLOWED_HEADERS",
    "localstack.config.EXTRA_CORS_ALLOWED_HEADERS.split",
    "localstack.config.EXTRA_CORS_EXPOSE_HEADERS",
    "localstack.config.EXTRA_CORS_EXPOSE_HEADERS.split",
    "localstack.config.USE_HTTP2_SERVER",
    "localstack.services.generic_proxy.CORS_ALLOWED_HEADERS",
    "localstack.services.generic_proxy.CORS_EXPOSE_HEADERS",
    "localstack.services.generic_proxy.DuplexSocket",
    "localstack.services.generic_proxy._accept_connection2_orig",
    "localstack.services.generic_proxy.is_ssl_socket",
    "localstack.services.generic_proxy.logging",
    "localstack.services.generic_proxy.result",
    "localstack.services.generic_proxy.ssl",
    "localstack.services.generic_proxy.sslcontext",
    "tuple"
   ]
  },
  "type": "module"
 },
 "localstack.services.generic_proxy.APPLICATION_JSON": {
  "data": {
   "shadows": "localstack.constants.APPLICATION_JSON"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.BaseHTTPRequestHandler": {
  "data": {
   "shadows": "six.moves.BaseHTTPServer.BaseHTTPRequestHandler"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.BaseSelectorEventLoop": {
  "data": {
   "shadows": "asyncio.selector_events.BaseSelectorEventLoop"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.CORS": {
  "data": {
   "shadows": "flask_cors.CORS"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.CORS_ALLOWED_HEADERS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.CORS_ALLOWED_METHODS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.CORS_EXPOSE_HEADERS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.CaseInsensitiveDict": {
  "data": {
   "shadows": "requests.structures.CaseInsensitiveDict"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.DuplexSocket": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ssl"
   ]
  },
  "type": "class"
 },
 "localstack.services.generic_proxy.DuplexSocket.accept": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.DuplexSocket",
    "localstack.services.generic_proxy.socket"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.DuplexSocket.is_ssl_socket": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "Exception",
    "peek_ssl_header",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.DuplexSocket.is_ssl_socket.peek_ssl_header": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "len",
    "localstack.services.generic_proxy.socket"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.EXTRA_CORS_ALLOWED_HEADERS": {
  "data": {
   "shadows": "localstack.config.EXTRA_CORS_ALLOWED_HEADERS"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.EXTRA_CORS_EXPOSE_HEADERS": {
  "data": {
   "shadows": "localstack.config.EXTRA_CORS_EXPOSE_HEADERS"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.GenericProxy": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread"
   ]
  },
  "type": "class"
 },
 "localstack.services.generic_proxy.GenericProxy.__init__": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ssl",
    "localstack.utils.common.FuncThread.__init__"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxy.create_ssl_cert": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "classmethod",
    "localstack.services.generic_proxy.get_cert_pem_file_path",
    "localstack.utils.common.generate_ssl_cert"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxy.get_flask_ssl_context": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "classmethod",
    "localstack.config.USE_SSL"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxy.run_cmd": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "Exception",
    "localstack.services.generic_proxy.GenericProxy",
    "localstack.services.generic_proxy.GenericProxyHandler",
    "localstack.services.generic_proxy.LOG",
    "localstack.services.generic_proxy.ThreadedHTTPServer",
    "localstack.services.generic_proxy.ssl",
    "localstack.services.generic_proxy.traceback"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxy.stop": {
  "data": {
   "lineno": 510
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "six.moves.BaseHTTPServer.BaseHTTPRequestHandler"
   ]
  },
  "type": "class"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Exception",
    "localstack.services.generic_proxy.LOG",
    "six.moves.BaseHTTPServer.BaseHTTPRequestHandler.__init__",
    "ssl.SSLError",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler._listeners": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_CONNECT": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_DELETE": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_GET": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_HEAD": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_OPTIONS": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_PATCH": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_POST": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_PUT": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.forward": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "Exception",
    "any",
    "isinstance",
    "len",
    "localstack.services.generic_proxy.LOG",
    "localstack.services.generic_proxy.modify_and_forward",
    "localstack.services.generic_proxy.traceback",
    "localstack.utils.aws.aws_responses.LambdaResponse",
    "localstack.utils.common.to_bytes",
    "localstack.utils.http_utils.create_chunked_data",
    "localstack.utils.http_utils.uses_chunked_encoding",
    "localstack.utils.testutil.is_local_test_mode",
    "map",
    "print",
    "requests.structures.CaseInsensitiveDict",
    "six.iteritems",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.log_message": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.parse_request": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.sys",
    "six.moves.BaseHTTPServer.BaseHTTPRequestHandler.parse_request"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.read_content": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "int",
    "localstack.services.generic_proxy.LOG",
    "localstack.services.generic_proxy.requests",
    "localstack.services.generic_proxy.socket"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.send_multi_value_headers": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.HTTPServer": {
  "data": {
   "shadows": "six.moves.BaseHTTPServer.HTTPServer"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.LOG": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.LambdaResponse": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses.LambdaResponse"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.Mock": {
  "data": {
   "shadows": "localstack.utils.common.Mock"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.ProxyListener": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.services.generic_proxy.ProxyListener.forward_request": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.ProxyListener.get_forward_url": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.ProxyListener.return_response": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.Request": {
  "data": {
   "shadows": "requests.models.Request"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.SERVER_CERT_PEM_FILE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.SSLError": {
  "data": {
   "shadows": "ssl.SSLError"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.TMP_THREADS": {
  "data": {
   "shadows": "localstack.utils.common.TMP_THREADS"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.ThreadedHTTPServer": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "six.moves.BaseHTTPServer.HTTPServer",
    "six.moves.socketserver.ThreadingMixIn"
   ]
  },
  "type": "class"
 },
 "localstack.services.generic_proxy.ThreadingMixIn": {
  "data": {
   "shadows": "six.moves.socketserver.ThreadingMixIn"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.USE_HTTP2_SERVER": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy._accept_connection2_orig": {
  "data": {
   "lineno": 473
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.append_cors_headers": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.CORS_ALLOWED_HEADERS",
    "localstack.services.generic_proxy.CORS_ALLOWED_METHODS",
    "localstack.services.generic_proxy.CORS_EXPOSE_HEADERS",
    "localstack.services.generic_proxy.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.build_x_forwarded_for": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.create_chunked_data": {
  "data": {
   "shadows": "localstack.utils.http_utils.create_chunked_data"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.generate_ssl_cert": {
  "data": {
   "shadows": "localstack.utils.common.generate_ssl_cert"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.get_cert_pem_file_path": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "localstack.config.TMP_FOLDER",
    "localstack.services.generic_proxy.SERVER_CERT_PEM_FILE",
    "localstack.services.generic_proxy.os"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.http2_server": {
  "data": {
   "shadows": "localstack.utils.server.http2_server"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.is_local_test_mode": {
  "data": {
   "shadows": "localstack.utils.testutil.is_local_test_mode"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.is_ssl_socket": {
  "data": {
   "lineno": 464
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.json_safe": {
  "data": {
   "shadows": "localstack.utils.common.json_safe"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.modify_and_forward": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "hasattr",
    "int",
    "is_full_url",
    "isinstance",
    "localstack.constants.APPLICATION_JSON",
    "localstack.services.generic_proxy.GenericProxyHandler",
    "localstack.services.generic_proxy.append_cors_headers",
    "localstack.services.generic_proxy.build_x_forwarded_for",
    "localstack.services.generic_proxy.inspect",
    "localstack.services.generic_proxy.json",
    "localstack.services.generic_proxy.requests",
    "localstack.utils.aws.aws_responses.LambdaResponse",
    "localstack.utils.common.json_safe",
    "requests.models.Request",
    "requests.models.Response",
    "requests_method",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.modify_and_forward.is_full_url": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.path_from_url": {
  "data": {
   "shadows": "localstack.utils.common.path_from_url"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.result": {
  "data": {
   "lineno": 467
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.run_proxy_server_http2": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.GenericProxy",
    "localstack.utils.server.http2_server.run_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.run_proxy_server_http2.handler": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.modify_and_forward",
    "localstack.utils.common.Mock",
    "localstack.utils.common.path_from_url",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.serve_flask_app": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "Exception",
    "flask_cors.CORS",
    "int",
    "localstack.config.FORWARD_EDGE_INMEM",
    "localstack.services.generic_proxy.GenericProxy",
    "localstack.services.generic_proxy.click",
    "localstack.services.generic_proxy.logging"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.serve_flask_app.noecho": {
  "data": {
   "lineno": 586
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.sslcontext": {
  "data": {
   "lineno": 466
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.start_proxy_server": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.GenericProxy",
    "localstack.services.generic_proxy.USE_HTTP2_SERVER",
    "localstack.services.generic_proxy.start_proxy_server_http2",
    "localstack.utils.common.TMP_THREADS.append"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.start_proxy_server_http2": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.run_proxy_server_http2"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.to_bytes": {
  "data": {
   "shadows": "localstack.utils.common.to_bytes"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlparse"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.uses_chunked_encoding": {
  "data": {
   "shadows": "localstack.utils.http_utils.uses_chunked_encoding"
  },
  "type": "import"
 },
 "localstack.services.iam": {
  "data": {},
  "type": "module"
 },
 "localstack.services.iam.iam_listener": {
  "data": {
   "symbols_in_volume": [
    "localstack.services.iam.iam_listener.ProxyListenerIAM"
   ]
  },
  "type": "module"
 },
 "localstack.services.iam.iam_listener.BOOL_ATTRS": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "localstack.services.iam.iam_listener.MessageConversion": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses.MessageConversion"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_listener.ProxyListenerIAM": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.iam.iam_listener.ProxyListenerIAM.forward_request": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.MessageConversion._reset_account_id",
    "requests.models.Request"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_listener.ProxyListenerIAM.return_response": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "len",
    "localstack.services.iam.iam_listener.BOOL_ATTRS",
    "localstack.utils.aws.aws_responses.MessageConversion.fix_account_id",
    "localstack.utils.aws.aws_responses.MessageConversion.fix_date_format",
    "localstack.utils.aws.aws_responses.MessageConversion.fix_error_codes",
    "localstack.utils.aws.aws_responses.MessageConversion.fix_xml_empty_boolean",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_listener.Request": {
  "data": {
   "shadows": "requests.models.Request"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_listener.UPDATE_IAM": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "localstack.services.iam.iam_starter": {
  "data": {},
  "type": "module"
 },
 "localstack.services.iam.iam_starter.ADDITIONAL_MANAGED_POLICIES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "localstack.services.iam.iam_starter.AWSManagedPolicy": {
  "data": {
   "shadows": "moto.iam.models.AWSManagedPolicy"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.GENERIC_EMPTY_TEMPLATE": {
  "data": {
   "shadows": "moto.iam.responses.GENERIC_EMPTY_TEMPLATE"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.IAMNotFoundException": {
  "data": {
   "shadows": "moto.iam.models.IAMNotFoundException"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.IamResponse": {
  "data": {
   "shadows": "moto.iam.responses.IamResponse"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.LIST_ROLES_TEMPLATE": {
  "data": {
   "shadows": "moto.iam.responses.LIST_ROLES_TEMPLATE"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.Policy": {
  "data": {
   "shadows": "moto.iam.models.Policy"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.SIMULATE_PRINCIPAL_POLICY_RESPONSE": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "localstack.services.iam.iam_starter.USER_RESPONSE_TEMPLATE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "localstack.services.iam.iam_starter.User": {
  "data": {
   "shadows": "moto.iam.models.User"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.VALID_STATEMENT_ELEMENTS": {
  "data": {
   "shadows": "moto.iam.policy_validation.VALID_STATEMENT_ELEMENTS"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.apply_patches": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "hasattr",
    "localstack.services.iam.iam_starter.ADDITIONAL_MANAGED_POLICIES",
    "moto.iam.models.AWSManagedPolicy.from_data",
    "moto.iam.models.Policy.__init__",
    "moto.iam.models.aws_managed_policies.extend",
    "moto.iam.models.iam_backend.detach_role_policy",
    "moto.iam.policy_validation.VALID_STATEMENT_ELEMENTS",
    "moto.iam.policy_validation.VALID_STATEMENT_ELEMENTS.append",
    "moto.iam.responses.IamResponse",
    "moto.iam.responses.IamResponse.create_user",
    "moto.iam.responses.IamResponse.delete_policy",
    "moto.iam.responses.IamResponse.get_user",
    "moto.iam.responses.IamResponse.list_roles",
    "moto.iam.responses.IamResponse.simulate_principal_policy"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_starter.apply_patches.iam_backend_detach_role_policy": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "KeyError",
    "moto.iam.models.IAMNotFoundException",
    "moto.iam.models.iam_backend.get_role"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_starter.apply_patches.iam_response_create_user": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "localstack.services.iam.iam_starter.USER_RESPONSE_TEMPLATE",
    "localstack.services.iam.iam_starter.uuid",
    "moto.iam.models.iam_backend.create_user",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_starter.apply_patches.iam_response_delete_policy": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "moto.iam.models.iam_backend.managed_policies.pop",
    "moto.iam.responses.GENERIC_EMPTY_TEMPLATE"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_starter.apply_patches.iam_response_get_user": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "localstack.services.iam.iam_starter.USER_RESPONSE_TEMPLATE",
    "localstack.services.iam.iam_starter.uuid",
    "moto.iam.models.User",
    "moto.iam.models.iam_backend.get_user",
    "moto.iam.models.iam_backend.get_user_from_access_key_id",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_starter.apply_patches.iam_response_list_roles": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "copy.deepcopy",
    "localstack.services.iam.iam_starter.json",
    "moto.iam.models.iam_backend.get_roles",
    "moto.iam.responses.LIST_ROLES_TEMPLATE",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_starter.apply_patches.iam_response_simulate_principal_policy": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "build_evaluation",
    "localstack.services.iam.iam_starter.SIMULATE_PRINCIPAL_POLICY_RESPONSE",
    "localstack.services.iam.iam_starter.json",
    "moto.iam.models.iam_backend.get_policy"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_starter.apply_patches.iam_response_simulate_principal_policy.build_evaluation": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "localstack.services.iam.iam_starter.apply_patches.policy__init__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "policy_init_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_starter.aws_managed_policies": {
  "data": {
   "shadows": "moto.iam.models.aws_managed_policies"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.moto_iam_backend": {
  "data": {
   "shadows": "moto.iam.models.iam_backend"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.quote": {
  "data": {
   "shadows": "urllib.parse.quote"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.start_iam": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "localstack.config.PORT_IAM",
    "localstack.services.iam.iam_starter.apply_patches",
    "localstack.services.infra.start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_starter.start_moto_server": {
  "data": {
   "shadows": "localstack.services.infra.start_moto_server"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "localstack.services.kinesis": {
  "data": {},
  "type": "module"
 },
 "localstack.services.kinesis.kinesis_listener": {
  "data": {
   "symbols_in_volume": [
    "localstack.services.kinesis.kinesis_listener.ACTION_PREFIX",
    "localstack.services.kinesis.kinesis_listener.ProxyListenerKinesis"
   ]
  },
  "type": "module"
 },
 "localstack.services.kinesis.kinesis_listener.ACTION_CREATE_STREAM": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.ACTION_DELETE_STREAM": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.ACTION_LIST_STREAMS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.ACTION_PREFIX": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORD": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORDS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.ACTION_UPDATE_SHARD_COUNT": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.ProxyListenerKinesis": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.kinesis.kinesis_listener.ProxyListenerKinesis.decode_content": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "localstack.services.kinesis.kinesis_listener.cbor2",
    "localstack.services.kinesis.kinesis_listener.json",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.kinesis.kinesis_listener.ProxyListenerKinesis.forward_request": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "consumer_matches",
    "float",
    "localstack.config.KINESIS_ERROR_PROBABILITY",
    "localstack.services.kinesis.kinesis_listener.ACTION_PREFIX",
    "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORD",
    "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORDS",
    "localstack.services.kinesis.kinesis_listener.STREAM_CONSUMERS",
    "localstack.services.kinesis.kinesis_listener.kinesis_error_response",
    "localstack.services.kinesis.kinesis_listener.random",
    "localstack.utils.common.clone",
    "localstack.utils.common.json_safe",
    "localstack.utils.common.now_utc"
   ]
  },
  "type": "function"
 },
 "localstack.services.kinesis.kinesis_listener.ProxyListenerKinesis.forward_request.consumer_matches": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "localstack.services.kinesis.kinesis_listener.ProxyListenerKinesis.return_response": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len",
    "localstack.services.awslambda.lambda_api.process_kinesis_records",
    "localstack.services.kinesis.kinesis_listener.ACTION_CREATE_STREAM",
    "localstack.services.kinesis.kinesis_listener.ACTION_DELETE_STREAM",
    "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORD",
    "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORDS",
    "localstack.services.kinesis.kinesis_listener.ACTION_UPDATE_SHARD_COUNT",
    "localstack.services.kinesis.kinesis_listener.json",
    "localstack.utils.analytics.event_publisher.EVENT_KINESIS_CREATE_STREAM",
    "localstack.utils.analytics.event_publisher.EVENT_KINESIS_DELETE_STREAM",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.common.epoch_timestamp",
    "range",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.kinesis.kinesis_listener.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.STREAM_CONSUMERS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.UPDATE_KINESIS": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.cbor2": {
  "data": {
   "shadows": "cbor2"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.clone": {
  "data": {
   "shadows": "localstack.utils.common.clone"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.epoch_timestamp": {
  "data": {
   "shadows": "localstack.utils.common.epoch_timestamp"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.json_safe": {
  "data": {
   "shadows": "localstack.utils.common.json_safe"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.kinesis_error_response": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORD",
    "localstack.services.kinesis.kinesis_listener.json",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.kinesis.kinesis_listener.lambda_api": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.now_utc": {
  "data": {
   "shadows": "localstack.utils.common.now_utc"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.kinesis.kinesis_starter.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.kinesis.kinesis_starter.LOGGER": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_starter.ROOT_PATH": {
  "data": {
   "shadows": "localstack.services.install.ROOT_PATH"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.check_kinesis": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "list",
    "localstack.services.kinesis.kinesis_starter.LOGGER",
    "localstack.services.kinesis.kinesis_starter.traceback",
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.services.kinesis.kinesis_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.do_run": {
  "data": {
   "shadows": "localstack.services.infra.do_run"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.edge_ports_info": {
  "data": {
   "shadows": "localstack.utils.common.edge_ports_info"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.get_free_tcp_port": {
  "data": {
   "shadows": "localstack.utils.common.get_free_tcp_port"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.install": {
  "data": {
   "shadows": "localstack.services.install"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.mkdir": {
  "data": {
   "shadows": "localstack.utils.common.mkdir"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.start_kinesis": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "localstack.config.DATA_DIR",
    "localstack.config.KINESIS_LATENCY",
    "localstack.config.KINESIS_SHARD_LIMIT",
    "localstack.config.PORT_KINESIS",
    "localstack.services.infra.do_run",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.services.install.ROOT_PATH",
    "localstack.services.install.install_kinesalite",
    "localstack.utils.common.edge_ports_info",
    "localstack.utils.common.get_free_tcp_port",
    "localstack.utils.common.mkdir",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.services.kinesis.kinesis_starter.start_proxy_for_service": {
  "data": {
   "shadows": "localstack.services.infra.start_proxy_for_service"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.kms": {
  "data": {},
  "type": "module"
 },
 "localstack.services.kms.kms_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.kms.kms_starter.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.kms.kms_starter.INSTALL_PATH_KMS_BINARY_PATTERN": {
  "data": {
   "shadows": "localstack.services.install.INSTALL_PATH_KMS_BINARY_PATTERN"
  },
  "type": "import"
 },
 "localstack.services.kms.kms_starter.LOG": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "localstack.services.kms.kms_starter.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.kms.kms_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.kms.kms_starter.do_run": {
  "data": {
   "shadows": "localstack.services.infra.do_run"
  },
  "type": "import"
 },
 "localstack.services.kms.kms_starter.edge_ports_info": {
  "data": {
   "shadows": "localstack.utils.common.edge_ports_info"
  },
  "type": "import"
 },
 "localstack.services.kms.kms_starter.get_arch": {
  "data": {
   "shadows": "localstack.utils.common.get_arch"
  },
  "type": "import"
 },
 "localstack.services.kms.kms_starter.get_free_tcp_port": {
  "data": {
   "shadows": "localstack.utils.common.get_free_tcp_port"
  },
  "type": "import"
 },
 "localstack.services.kms.kms_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.kms.kms_starter.start_kms": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "localstack.config.DEFAULT_REGION",
    "localstack.config.PORT_KMS",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.infra.do_run",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.services.install.INSTALL_PATH_KMS_BINARY_PATTERN.replace",
    "localstack.utils.common.edge_ports_info",
    "localstack.utils.common.get_arch",
    "localstack.utils.common.get_free_tcp_port",
    "localstack.utils.common.wait_for_port_open",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.kms.kms_starter.start_proxy_for_service": {
  "data": {
   "shadows": "localstack.services.infra.start_proxy_for_service"
  },
  "type": "import"
 },
 "localstack.services.kms.kms_starter.wait_for_port_open": {
  "data": {
   "shadows": "localstack.utils.common.wait_for_port_open"
  },
  "type": "import"
 },
 "localstack.services.logs": {
  "data": {},
  "type": "module"
 },
 "localstack.services.logs.logs_listener": {
  "data": {
   "symbols_in_volume": [
    "localstack.services.logs.logs_listener.ProxyListenerCloudWatchLogs"
   ]
  },
  "type": "module"
 },
 "localstack.services.logs.logs_listener.APPLICATION_AMZ_JSON_1_1": {
  "data": {
   "shadows": "localstack.constants.APPLICATION_AMZ_JSON_1_1"
  },
  "type": "import"
 },
 "localstack.services.logs.logs_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.logs.logs_listener.ProxyListenerCloudWatchLogs": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.logs.logs_listener.ProxyListenerCloudWatchLogs._fix_next_token_request": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "localstack.services.logs.logs_listener.re",
    "localstack.utils.common.to_str",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.services.logs.logs_listener.ProxyListenerCloudWatchLogs._fix_next_token_response": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "localstack.services.logs.logs_listener.re",
    "localstack.utils.common.to_str",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.services.logs.logs_listener.ProxyListenerCloudWatchLogs.forward_request": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len",
    "localstack.utils.common.to_str",
    "requests.models.Request",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.logs.logs_listener.ProxyListenerCloudWatchLogs.return_response": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "len",
    "localstack.constants.APPLICATION_AMZ_JSON_1_1",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.logs.logs_listener.re",
    "localstack.utils.common.to_str",
    "str",
    "str.encode"
   ]
  },
  "type": "function"
 },
 "localstack.services.logs.logs_listener.Request": {
  "data": {
   "shadows": "requests.models.Request"
  },
  "type": "import"
 },
 "localstack.services.logs.logs_listener.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.logs.logs_listener.UPDATE_LOGS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "localstack.services.logs.logs_listener.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.logs.logs_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.logs.logs_starter": {
  "data": {},
  "type": "module"
 },
 "localstack.services.logs.logs_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.logs.logs_starter.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "localstack.services.logs.logs_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.logs.logs_starter.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.logs.logs_starter.lambda_models": {
  "data": {
   "shadows": "moto.awslambda.models"
  },
  "type": "import"
 },
 "localstack.services.logs.logs_starter.patch_lambda": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "moto.awslambda.models.lambda_backends.values",
    "patch_get_function",
    "patch_send_log_event"
   ]
  },
  "type": "function"
 },
 "localstack.services.logs.logs_starter.patch_lambda.patch_get_function": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "localstack.services.logs.logs_starter.patch_lambda.patch_get_function.get_function": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "get_function_orig",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.lambda_function_name"
   ]
  },
  "type": "function"
 },
 "localstack.services.logs.logs_starter.patch_lambda.patch_send_log_event": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "localstack.services.logs.logs_starter.patch_lambda.patch_send_log_event.send_log_event": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "localstack.services.logs.logs_starter.base64",
    "localstack.services.logs.logs_starter.json",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.get_account_id",
    "localstack.utils.aws.aws_stack.lambda_function_name",
    "send_log_event_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.logs.logs_starter.start_cloudwatch_logs": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "localstack.config.PORT_LOGS",
    "localstack.services.infra.start_moto_server",
    "localstack.services.logs.logs_starter.patch_lambda"
   ]
  },
  "type": "function"
 },
 "localstack.services.logs.logs_starter.start_moto_server": {
  "data": {
   "shadows": "localstack.services.infra.start_moto_server"
  },
  "type": "import"
 },
 "localstack.services.plugins": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.plugins.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.plugins.LOG": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.services.plugins.Plugin": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.services.plugins.Plugin.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "localstack.services.plugins.Plugin.check": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "localstack.services.plugins.Plugin.is_enabled": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.canonicalize_api_names"
   ]
  },
  "type": "function"
 },
 "localstack.services.plugins.Plugin.name": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "localstack.services.plugins.Plugin.start": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "localstack.services.plugins.SERVICE_PLUGINS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "localstack.services.plugins.STATUSES": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "localstack.services.plugins.canonicalize_api_names": {
  "data": {
   "shadows": "localstack.utils.bootstrap.canonicalize_api_names"
  },
  "type": "import"
 },
 "localstack.services.plugins.check_infra": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Exception",
    "additional",
    "localstack.services.plugins.LOG",
    "localstack.services.plugins.SERVICE_PLUGINS",
    "localstack.services.plugins.check_service_health",
    "localstack.services.plugins.time",
    "localstack.services.plugins.traceback",
    "localstack.utils.bootstrap.canonicalize_api_names"
   ]
  },
  "type": "function"
 },
 "localstack.services.plugins.check_service_health": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Exception",
    "localstack.services.plugins.LOG",
    "localstack.services.plugins.SERVICE_PLUGINS",
    "localstack.services.plugins.record_service_health"
   ]
  },
  "type": "function"
 },
 "localstack.services.plugins.clone": {
  "data": {
   "shadows": "localstack.utils.common.clone"
  },
  "type": "import"
 },
 "localstack.services.plugins.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.plugins.get_service_protocol": {
  "data": {
   "shadows": "localstack.utils.common.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.services.plugins.get_services_health": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "dict",
    "localstack.services.plugins.STATUSES",
    "localstack.services.plugins.reload_services_health",
    "localstack.utils.common.clone"
   ]
  },
  "type": "function"
 },
 "localstack.services.plugins.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.plugins.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.plugins.record_service_health": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Exception",
    "localstack.config.EDGE_PORT",
    "localstack.config.LOCALHOST",
    "localstack.services.plugins.json",
    "localstack.services.plugins.requests",
    "localstack.utils.common.get_service_protocol"
   ]
  },
  "type": "function"
 },
 "localstack.services.plugins.register_plugin": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "localstack.services.plugins.SERVICE_PLUGINS"
   ]
  },
  "type": "function"
 },
 "localstack.services.plugins.reload_services_health": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "localstack.services.plugins.check_infra"
   ]
  },
  "type": "function"
 },
 "localstack.services.plugins.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "localstack.services.plugins.set_services_health": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "localstack.services.plugins.STATUSES",
    "localstack.services.plugins.get_services_health"
   ]
  },
  "type": "function"
 },
 "localstack.services.plugins.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.services.plugins.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.s3": {
  "data": {},
  "type": "module"
 },
 "localstack.services.s3.multipart_content": {
  "data": {},
  "type": "module"
 },
 "localstack.services.s3.multipart_content._iter_multipart_parts": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "localstack.services.s3.multipart_content.cgi",
    "parse_data"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.multipart_content.cgi": {
  "data": {
   "shadows": "cgi"
  },
  "type": "import"
 },
 "localstack.services.s3.multipart_content.email.parser": {
  "data": {
   "shadows": "email.parser"
  },
  "type": "import"
 },
 "localstack.services.s3.multipart_content.expand_multipart_filename": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "localstack.services.s3.multipart_content._iter_multipart_parts",
    "localstack.services.s3.multipart_content.cgi",
    "localstack.utils.common.to_bytes"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.multipart_content.find_multipart_key_value": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "localstack.services.s3.multipart_content._iter_multipart_parts",
    "localstack.services.s3.multipart_content.cgi",
    "localstack.utils.common.to_bytes"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.multipart_content.to_bytes": {
  "data": {
   "shadows": "localstack.utils.common.to_bytes"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.s3.s3_starter.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.s3.s3_starter.BUCKET_MARKER_LOCAL": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api.BUCKET_MARKER_LOCAL"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.LOG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "localstack.services.s3.s3_starter.MalformedXML": {
  "data": {
   "shadows": "moto.s3.responses.MalformedXML"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.S3ClientError": {
  "data": {
   "shadows": "moto.s3.exceptions.S3ClientError"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.S3_MAX_FILE_SIZE_MB": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "localstack.services.s3.s3_starter.TMP_STATE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "localstack.services.s3.s3_starter.apply_patches": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "create_bucket_orig",
    "create_from_cloudformation_json_orig",
    "delete_bucket_orig",
    "get_bucket_orig",
    "localstack.services.s3.s3_starter.S3_MAX_FILE_SIZE_MB",
    "localstack.services.s3.s3_starter.types",
    "moto.s3.models.DEFAULT_KEY_BUFFER_SIZE",
    "moto.s3.models.FakeBucket.create_from_cloudformation_json",
    "moto.s3.models.FakeKey.__init__",
    "moto.s3.models.s3_backend",
    "moto.s3.models.s3_backend.create_bucket",
    "moto.s3.models.s3_backend.delete_bucket",
    "moto.s3.models.s3_backend.get_bucket",
    "moto.s3.responses.ACTION_MAP",
    "moto.s3.responses.S3ResponseInstance",
    "moto.s3.responses.S3ResponseInstance._bucket_response_delete_keys",
    "moto.s3.responses.S3ResponseInstance._handle_range_header",
    "moto.s3.responses.S3ResponseInstance._key_response_delete",
    "moto.s3.responses.S3ResponseInstance._key_response_get",
    "moto.s3.responses.S3ResponseInstance._key_response_post",
    "moto.s3.responses.S3ResponseInstance._key_response_put",
    "moto.s3.responses.S3ResponseInstance._truncate_result",
    "moto.s3.responses.S3ResponseInstance.is_delete_keys",
    "moto.s3bucket_path.utils.is_delete_keys",
    "original_init",
    "s3_key_response_delete_orig",
    "s3_key_response_get_orig",
    "s3_key_response_post_orig",
    "s3_key_response_put_orig",
    "s3_truncate_result_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.Bucket_create_from_cloudformation_json": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "classmethod",
    "create_from_cloudformation_json_orig",
    "localstack.services.s3.s3_listener.normalize_bucket_name",
    "moto.s3.models.s3_backend.buckets.pop"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.InvalidObjectState": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "moto.s3.exceptions.S3ClientError"
   ]
  },
  "type": "class"
 },
 "localstack.services.s3.s3_starter.apply_patches.InvalidObjectState.__init__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.create_bucket": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "create_bucket_orig",
    "localstack.services.s3.s3_listener.normalize_bucket_name"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.delete_bucket": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "delete_bucket_orig",
    "localstack.services.s3.s3_listener.normalize_bucket_name",
    "moto.s3.exceptions.MissingBucket"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.get_bucket": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "get_bucket_orig",
    "localstack.services.awslambda.lambda_api.BUCKET_MARKER_LOCAL",
    "localstack.services.s3.s3_listener.normalize_bucket_name"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.init": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "moto.s3.models.DEFAULT_KEY_BUFFER_SIZE",
    "original_init"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.s3_bucket_response_delete_keys": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "len",
    "moto.s3.responses.MalformedXML",
    "moto.s3.responses.minidom.parseString",
    "moto.s3.responses.undo_clean_key_name"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.s3_key_response_delete": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "s3_key_response_delete_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.s3_key_response_get": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "InvalidObjectState",
    "s3_key_response_get_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.s3_key_response_post": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "s3_key_response_post_orig",
    "s3_update_acls"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.s3_key_response_put": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "s3_key_response_put_orig",
    "s3_update_acls"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.s3_response_handle_range_header": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "s3_response_handle_range_header_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.s3_response_is_delete_keys": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "moto.s3.responses.is_delete_keys",
    "utils_is_delete_keys"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.s3_truncate_result": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "s3_truncate_result_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.s3_update_acls": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "localstack.services.s3.s3_starter.TMP_STATE"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.utils_is_delete_keys": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "utils_is_delete_keys_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.check_s3": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "list",
    "localstack.services.s3.s3_listener.PORT_S3_BACKEND",
    "localstack.services.s3.s3_starter.LOG",
    "localstack.services.s3.s3_starter.traceback",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.common.wait_for_port_open"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.get_free_tcp_port": {
  "data": {
   "shadows": "localstack.utils.common.get_free_tcp_port"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.is_delete_keys": {
  "data": {
   "shadows": "moto.s3.responses.is_delete_keys"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.minidom": {
  "data": {
   "shadows": "moto.s3.responses.minidom"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.multiserver": {
  "data": {
   "shadows": "localstack.utils.server.multiserver"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.s3_exceptions": {
  "data": {
   "shadows": "moto.s3.exceptions"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.s3_listener": {
  "data": {
   "shadows": "localstack.services.s3.s3_listener"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.s3_models": {
  "data": {
   "shadows": "moto.s3.models"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.s3_responses": {
  "data": {
   "shadows": "moto.s3.responses"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.s3bucket_path_utils": {
  "data": {
   "shadows": "moto.s3bucket_path.utils"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.start_moto_server": {
  "data": {
   "shadows": "localstack.services.infra.start_moto_server"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.start_s3": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "localstack.config.FORWARD_EDGE_INMEM",
    "localstack.config.PORT_S3",
    "localstack.services.infra.start_moto_server",
    "localstack.services.s3.s3_listener.PORT_S3_BACKEND",
    "localstack.services.s3.s3_starter.apply_patches",
    "localstack.utils.common.get_free_tcp_port",
    "localstack.utils.server.multiserver.get_moto_server_port"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.undo_clean_key_name": {
  "data": {
   "shadows": "moto.s3.responses.undo_clean_key_name"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.wait_for_port_open": {
  "data": {
   "shadows": "localstack.utils.common.wait_for_port_open"
  },
  "type": "import"
 },
 "localstack.services.secretsmanager": {
  "data": {},
  "type": "module"
 },
 "localstack.services.secretsmanager.secretsmanager_listener": {
  "data": {
   "symbols_in_volume": [
    "localstack.services.secretsmanager.secretsmanager_listener.ProxyListenerSecretsManager"
   ]
  },
  "type": "module"
 },
 "localstack.services.secretsmanager.secretsmanager_listener.PersistingProxyListener": {
  "data": {
   "shadows": "localstack.utils.persistence.PersistingProxyListener"
  },
  "type": "import"
 },
 "localstack.services.secretsmanager.secretsmanager_listener.ProxyListenerSecretsManager": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "localstack.utils.persistence.PersistingProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.secretsmanager.secretsmanager_listener.ProxyListenerSecretsManager.api_name": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "localstack.services.secretsmanager.secretsmanager_listener.UPDATE_SECRETSMANAGER": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "localstack.services.secretsmanager.secretsmanager_starter": {
  "data": {},
  "type": "module"
 },
 "localstack.services.secretsmanager.secretsmanager_starter.SECRET_ARN_STORAGE": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "localstack.services.secretsmanager.secretsmanager_starter.apply_patches": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "moto.secretsmanager.models.secret_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.secretsmanager.secretsmanager_starter.apply_patches.secretsmanager_models_secret_arn": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "localstack.services.secretsmanager.secretsmanager_starter.SECRET_ARN_STORAGE",
    "secret_arn_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.secretsmanager.secretsmanager_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.secretsmanager.secretsmanager_starter.check_secretsmanager": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "isinstance",
    "list",
    "localstack.services.secretsmanager.secretsmanager_starter.logging",
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.services.secretsmanager.secretsmanager_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.secretsmanager.secretsmanager_starter.secretsmanager_models": {
  "data": {
   "shadows": "moto.secretsmanager.models"
  },
  "type": "import"
 },
 "localstack.services.secretsmanager.secretsmanager_starter.start_moto_server": {
  "data": {
   "shadows": "localstack.services.infra.start_moto_server"
  },
  "type": "import"
 },
 "localstack.services.secretsmanager.secretsmanager_starter.start_secretsmanager": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "localstack.services.infra.start_moto_server",
    "localstack.services.secretsmanager.secretsmanager_starter.apply_patches"
   ]
  },
  "type": "function"
 },
 "localstack.services.ses": {
  "data": {},
  "type": "module"
 },
 "localstack.services.ses.ses_starter": {
  "data": {},
  "type": "module"
 },
 "localstack.services.ses.ses_starter.MessageRejectedError": {
  "data": {
   "shadows": "moto.ses.exceptions.MessageRejectedError"
  },
  "type": "import"
 },
 "localstack.services.ses.ses_starter.apply_patches": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "moto.ses.responses.EmailResponse.send_raw_email"
   ]
  },
  "type": "function"
 },
 "localstack.services.ses.ses_starter.apply_patches.email_responses_send_raw_email": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "email_responses_send_raw_email_orig",
    "get_source_from_raw",
    "localstack.services.ses.ses_starter.base64",
    "localstack.utils.common.to_str",
    "moto.ses.exceptions.MessageRejectedError"
   ]
  },
  "type": "function"
 },
 "localstack.services.ses.ses_starter.apply_patches.get_source_from_raw": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "localstack.services.ses.ses_starter.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "localstack.services.ses.ses_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.ses.ses_starter.email_responses": {
  "data": {
   "shadows": "moto.ses.responses.EmailResponse"
  },
  "type": "import"
 },
 "localstack.services.ses.ses_starter.start_moto_server": {
  "data": {
   "shadows": "localstack.services.infra.start_moto_server"
  },
  "type": "import"
 },
 "localstack.services.ses.ses_starter.start_ses": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "localstack.config.PORT_SES",
    "localstack.services.infra.start_moto_server",
    "localstack.services.ses.ses_starter.apply_patches"
   ]
  },
  "type": "function"
 },
 "localstack.services.ses.ses_starter.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.sns": {
  "data": {},
  "type": "module"
 },
 "localstack.services.sqs": {
  "data": {},
  "type": "module"
 },
 "localstack.services.sqs.sqs_listener": {
  "data": {
   "symbols_in_volume": [
    "localstack.services.sqs.sqs_listener.API_VERSION",
    "localstack.services.sqs.sqs_listener.ProxyListenerSQS"
   ]
  },
  "type": "module"
 },
 "localstack.services.sqs.sqs_listener.API_VERSION": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_listener.HOSTNAME_EXTERNAL": {
  "data": {
   "shadows": "localstack.config.HOSTNAME_EXTERNAL"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.MSG_CONTENT_REGEX": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_listener.Message": {
  "data": {
   "shadows": "moto.sqs.models.Message"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.PersistingProxyListener": {
  "data": {
   "shadows": "localstack.utils.persistence.PersistingProxyListener"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "localstack.utils.persistence.PersistingProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS.api_name": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS.forward_request": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "len",
    "localstack.services.install.SQS_BACKEND_IMPL",
    "localstack.services.sns.sns_listener.unsubscribe_sqs_queue",
    "localstack.services.sqs.sqs_listener.API_VERSION",
    "localstack.services.sqs.sqs_listener.MSG_CONTENT_REGEX",
    "localstack.services.sqs.sqs_listener.QUEUE_ATTRIBUTES",
    "localstack.services.sqs.sqs_listener._get_attributes_forward_request",
    "localstack.services.sqs.sqs_listener._list_dead_letter_source_queues",
    "localstack.services.sqs.sqs_listener._queue_url",
    "localstack.services.sqs.sqs_listener._set_queue_attributes",
    "localstack.services.sqs.sqs_listener.is_sqs_queue_url",
    "localstack.services.sqs.sqs_listener.re",
    "localstack.utils.aws.aws_responses.make_requests_error",
    "localstack.utils.aws.aws_responses.requests_response",
    "localstack.utils.aws.aws_stack.mock_aws_request_headers",
    "localstack.utils.common.parse_request_data",
    "requests.models.Request",
    "six.moves.urllib.parse.urlencode",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS.get_message_attributes_md5": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "len",
    "localstack.utils.common.clone",
    "moto.sqs.models.Message",
    "moto.sqs.models.TRANSPORT_TYPE_ENCODINGS",
    "moto.sqs.utils.parse_message_attributes"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS.return_response": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "len",
    "localstack.config.HOSTNAME_EXTERNAL",
    "localstack.config.SQS_PORT_EXTERNAL",
    "localstack.config.USE_SSL",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.install.SQS_BACKEND_IMPL",
    "localstack.services.sqs.sqs_listener.ProxyListenerSQS",
    "localstack.services.sqs.sqs_listener._add_queue_attributes",
    "localstack.services.sqs.sqs_listener._fire_event",
    "localstack.services.sqs.sqs_listener._process_sent_message",
    "localstack.services.sqs.sqs_listener._set_queue_attributes",
    "localstack.services.sqs.sqs_listener.get_external_port",
    "localstack.services.sqs.sqs_listener.re",
    "localstack.services.sqs.sqs_listener.validate_empty_message_batch",
    "localstack.utils.aws.aws_responses.calculate_crc32",
    "localstack.utils.aws.aws_responses.make_requests_error",
    "localstack.utils.aws.aws_responses.requests_response",
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.common.parse_request_data",
    "localstack.utils.common.to_str",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.QUEUE_ATTRIBUTES": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_listener.Request": {
  "data": {
   "shadows": "requests.models.Request"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.SQS_BACKEND_IMPL": {
  "data": {
   "shadows": "localstack.services.install.SQS_BACKEND_IMPL"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.SQS_PORT_EXTERNAL": {
  "data": {
   "shadows": "localstack.config.SQS_PORT_EXTERNAL"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.TRANSPORT_TYPE_ENCODINGS": {
  "data": {
   "shadows": "moto.sqs.models.TRANSPORT_TYPE_ENCODINGS"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.UNSUPPORTED_ATTRIBUTE_NAMES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_listener.UPDATE_SQS": {
  "data": {
   "lineno": 370
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_listener.XMLNS_SQS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_listener._add_queue_attributes": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "localstack.services.install.SQS_BACKEND_IMPL",
    "localstack.services.sqs.sqs_listener.QUEUE_ATTRIBUTES",
    "localstack.services.sqs.sqs_listener._format_attributes_names",
    "localstack.services.sqs.sqs_listener._queue_url",
    "localstack.services.sqs.sqs_listener.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener._fire_event": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "localstack.services.sqs.sqs_listener.xmltodict",
    "localstack.utils.analytics.event_publisher.EVENT_SQS_CREATE_QUEUE",
    "localstack.utils.analytics.event_publisher.EVENT_SQS_DELETE_QUEUE",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener._format_attributes": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener._format_attributes_names": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener._get_attributes_forward_request": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "dict",
    "requests.models.Request",
    "six.moves.urllib.parse.urlencode"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener._list_dead_letter_source_queues": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "localstack.services.sqs.sqs_listener.format_list_dl_source_queues_response",
    "localstack.services.sqs.sqs_listener.json"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener._process_sent_message": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.process_sqs_message",
    "localstack.services.sqs.sqs_listener._queue_url"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener._queue_url": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "localstack.config.TEST_SQS_URL",
    "localstack.utils.common.get_service_protocol"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener._set_queue_attributes": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "int",
    "isinstance",
    "localstack.services.install.SQS_BACKEND_IMPL",
    "localstack.services.sqs.sqs_listener.QUEUE_ATTRIBUTES",
    "localstack.services.sqs.sqs_listener.UNSUPPORTED_ATTRIBUTE_NAMES",
    "localstack.services.sqs.sqs_listener._format_attributes",
    "localstack.services.sqs.sqs_listener.json"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.calculate_crc32": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses.calculate_crc32"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.clone": {
  "data": {
   "shadows": "localstack.utils.common.clone"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.constants": {
  "data": {
   "shadows": "localstack.constants"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.format_list_dl_source_queues_response": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "localstack.services.sqs.sqs_listener.XMLNS_SQS"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.get_external_port": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "int",
    "len",
    "localstack.config.PORT_SQS"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.get_service_protocol": {
  "data": {
   "shadows": "localstack.utils.common.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.is_sqs_queue_url": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.sqs.sqs_listener.re",
    "localstack.utils.common.path_from_url"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.lambda_api": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.make_requests_error": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses.make_requests_error"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.parse_message_attributes": {
  "data": {
   "shadows": "moto.sqs.utils.parse_message_attributes"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.parse_request_data": {
  "data": {
   "shadows": "localstack.utils.common.parse_request_data"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.path_from_url": {
  "data": {
   "shadows": "localstack.utils.common.path_from_url"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.requests_response": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses.requests_response"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.sns_listener": {
  "data": {
   "shadows": "localstack.services.sns.sns_listener"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.urlencode": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlencode"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.validate_empty_message_batch": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "len",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.xmltodict": {
  "data": {
   "shadows": "xmltodict"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.sqs.sqs_starter.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.sqs.sqs_starter.INSTALL_DIR_ELASTICMQ": {
  "data": {
   "shadows": "localstack.services.install.INSTALL_DIR_ELASTICMQ"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.LOCALSTACK_HOSTNAME": {
  "data": {
   "shadows": "localstack.config.LOCALSTACK_HOSTNAME"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.LOG": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_starter.MAX_HEAP_SIZE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_starter.PORT_SQS_BACKEND": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_starter.Queue": {
  "data": {
   "shadows": "moto.sqs.models.Queue"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.QueueDoesNotExist": {
  "data": {
   "shadows": "moto.sqs.exceptions.QueueDoesNotExist"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.SQS_BACKEND_IMPL": {
  "data": {
   "shadows": "localstack.services.install.SQS_BACKEND_IMPL"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.TMP_FILES": {
  "data": {
   "shadows": "localstack.utils.common.TMP_FILES"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.TMP_FOLDER": {
  "data": {
   "shadows": "localstack.config.TMP_FOLDER"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.check_sqs": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "Exception",
    "localstack.services.sqs.sqs_starter.LOG",
    "localstack.services.sqs.sqs_starter.PORT_SQS_BACKEND",
    "localstack.services.sqs.sqs_starter.traceback",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.common.wait_for_port_open"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.do_run": {
  "data": {
   "shadows": "localstack.services.infra.do_run"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.edge_ports_info": {
  "data": {
   "shadows": "localstack.utils.common.edge_ports_info"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.escape_html": {
  "data": {
   "shadows": "localstack.utils.common.escape_html"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.get_free_tcp_port": {
  "data": {
   "shadows": "localstack.utils.common.get_free_tcp_port"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.install_elasticmq": {
  "data": {
   "shadows": "localstack.services.install.install_elasticmq"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.patch_moto": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "add_message_orig",
    "moto.sqs.models.Queue.add_message",
    "moto.sqs.responses.RECEIVE_MESSAGE_RESPONSE",
    "moto.sqs.responses.RECEIVE_MESSAGE_RESPONSE.replace",
    "moto.sqs.responses.SQSResponse._get_queue_name",
    "moto.sqs.responses.SQSResponse.response_template",
    "response_template_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_starter.patch_moto.add_message": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "add_message_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_starter.patch_moto.response_template": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "hasattr",
    "localstack.services.sqs.sqs_starter.types",
    "render_orig",
    "response_template_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_starter.patch_moto.response_template._escape": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.common.escape_html",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_starter.patch_moto.response_template.render": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "render_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_starter.patch_moto.sqs_responses_get_queue_name": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "TypeError",
    "moto.sqs.exceptions.QueueDoesNotExist"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_starter.save_file": {
  "data": {
   "shadows": "localstack.utils.common.save_file"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.sqs_responses": {
  "data": {
   "shadows": "moto.sqs.responses"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.start_moto_server": {
  "data": {
   "shadows": "localstack.services.infra.start_moto_server"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.start_proxy_for_service": {
  "data": {
   "shadows": "localstack.services.infra.start_proxy_for_service"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.start_sqs": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "localstack.services.install.SQS_BACKEND_IMPL",
    "localstack.services.sqs.sqs_starter.start_sqs_elasticmq",
    "localstack.services.sqs.sqs_starter.start_sqs_moto"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_starter.start_sqs_elasticmq": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "localstack.config.LOCALSTACK_HOSTNAME",
    "localstack.config.PORT_SQS",
    "localstack.config.TMP_FOLDER",
    "localstack.services.infra.do_run",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.services.install.INSTALL_DIR_ELASTICMQ",
    "localstack.services.install.install_elasticmq",
    "localstack.services.sqs.sqs_starter.MAX_HEAP_SIZE",
    "localstack.services.sqs.sqs_starter.PORT_SQS_BACKEND",
    "localstack.services.sqs.sqs_starter.os",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.common.edge_ports_info",
    "localstack.utils.common.get_free_tcp_port",
    "localstack.utils.common.save_file",
    "localstack.utils.common.short_uid",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_starter.start_sqs_moto": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "localstack.config.PORT_SQS",
    "localstack.services.infra.start_moto_server",
    "localstack.services.sqs.sqs_starter.patch_moto"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_starter.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.wait_for_port_open": {
  "data": {
   "shadows": "localstack.utils.common.wait_for_port_open"
  },
  "type": "import"
 },
 "localstack.services.ssm": {
  "data": {},
  "type": "module"
 },
 "localstack.services.ssm.ssm_listener": {
  "data": {
   "symbols_in_volume": [
    "localstack.services.ssm.ssm_listener.ProxyListenerSSM"
   ]
  },
  "type": "module"
 },
 "localstack.services.ssm.ssm_listener.ACTION_GET_PARAM": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "localstack.services.ssm.ssm_listener.ACTION_GET_PARAMS": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "localstack.services.ssm.ssm_listener.ACTION_PUT_PARAM": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "localstack.services.ssm.ssm_listener.PersistingProxyListener": {
  "data": {
   "shadows": "localstack.utils.persistence.PersistingProxyListener"
  },
  "type": "import"
 },
 "localstack.services.ssm.ssm_listener.ProxyListenerSSM": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "localstack.utils.persistence.PersistingProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.ssm.ssm_listener.ProxyListenerSSM.api_name": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "localstack.services.ssm.ssm_listener.ProxyListenerSSM.forward_request": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "localstack.services.ssm.ssm_listener.ACTION_GET_PARAM",
    "localstack.services.ssm.ssm_listener.ACTION_GET_PARAMS",
    "localstack.services.ssm.ssm_listener.ACTION_PUT_PARAM",
    "localstack.services.ssm.ssm_listener.json",
    "localstack.services.ssm.ssm_listener.normalize_name",
    "localstack.utils.common.to_str",
    "range",
    "requests.models.Request"
   ]
  },
  "type": "function"
 },
 "localstack.services.ssm.ssm_listener.Request": {
  "data": {
   "shadows": "requests.models.Request"
  },
  "type": "import"
 },
 "localstack.services.ssm.ssm_listener.UPDATE_SSM": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "localstack.services.ssm.ssm_listener.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.ssm.ssm_listener.normalize_name": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "localstack.services.ssm.ssm_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions": {
  "data": {},
  "type": "module"
 },
 "localstack.services.stepfunctions.stepfunctions_listener": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.stepfunctions.stepfunctions_listener.ProxyListenerStepFunctions",
    "localstack.services.stepfunctions.stepfunctions_listener.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.LOG": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.ProxyListenerStepFunctions": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.ProxyListenerStepFunctions.forward_request": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.ProxyListenerStepFunctions.return_response": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "localstack.services.stepfunctions.stepfunctions_listener.json",
    "localstack.utils.analytics.event_publisher.EVENT_STEPFUNCTIONS_CREATE_SM",
    "localstack.utils.analytics.event_publisher.EVENT_STEPFUNCTIONS_DELETE_SM",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.UPDATE_STEPFUNCTIONS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.stepfunctions.stepfunctions_starter.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.LOG": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.MAX_HEAP_SIZE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.do_run": {
  "data": {
   "shadows": "localstack.services.infra.do_run"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.edge_ports_info": {
  "data": {
   "shadows": "localstack.services.infra.edge_ports_info"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.get_command": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "localstack.config.STEPFUNCTIONS_LAMBDA_ENDPOINT",
    "localstack.config.STEPFUNCTIONS_LAMBDA_ENDPOINT.lower",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.install.INSTALL_DIR_STEPFUNCTIONS",
    "localstack.services.stepfunctions.stepfunctions_starter.MAX_HEAP_SIZE",
    "localstack.utils.aws.aws_stack.get_local_service_url",
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.install": {
  "data": {
   "shadows": "localstack.services.install"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.start_proxy_for_service": {
  "data": {
   "shadows": "localstack.services.infra.start_proxy_for_service"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.start_stepfunctions": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "localstack.config.PORT_STEPFUNCTIONS",
    "localstack.services.infra.do_run",
    "localstack.services.infra.edge_ports_info",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.services.install.install_stepfunctions_local",
    "localstack.services.stepfunctions.stepfunctions_starter.get_command",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.services.sts": {
  "data": {},
  "type": "module"
 },
 "localstack.services.sts.sts_listener": {
  "data": {
   "symbols_in_volume": [
    "localstack.services.sts.sts_listener.ProxyListenerSTS"
   ]
  },
  "type": "module"
 },
 "localstack.services.sts.sts_listener.MessageConversion": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses.MessageConversion"
  },
  "type": "import"
 },
 "localstack.services.sts.sts_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.sts.sts_listener.ProxyListenerSTS": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.sts.sts_listener.ProxyListenerSTS.forward_request": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.MessageConversion._reset_account_id",
    "requests.models.Request"
   ]
  },
  "type": "function"
 },
 "localstack.services.sts.sts_listener.ProxyListenerSTS.return_response": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "len",
    "localstack.utils.aws.aws_responses.MessageConversion.fix_account_id",
    "localstack.utils.aws.aws_responses.MessageConversion.fix_date_format",
    "localstack.utils.aws.aws_responses.MessageConversion.fix_error_codes",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.sts.sts_listener.Request": {
  "data": {
   "shadows": "requests.models.Request"
  },
  "type": "import"
 },
 "localstack.services.sts.sts_listener.UPDATE_STS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "localstack.services.sts.sts_starter": {
  "data": {},
  "type": "module"
 },
 "localstack.services.sts.sts_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.sts.sts_starter.start_moto_server": {
  "data": {
   "shadows": "localstack.services.infra.start_moto_server"
  },
  "type": "import"
 },
 "localstack.services.sts.sts_starter.start_sts": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "localstack.config.PORT_STS",
    "localstack.services.infra.start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.stepfunctions": {
  "data": {},
  "type": "module"
 },
 "localstack.stepfunctions.models": {
  "data": {},
  "type": "module"
 },
 "localstack.stepfunctions.models.BaseModel": {
  "data": {
   "shadows": "moto.core.BaseModel"
  },
  "type": "import"
 },
 "localstack.stepfunctions.models.StateMachine": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "moto.core.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.stepfunctions.models.StateMachine.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "localstack.stepfunctions.models.StateMachine",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.stepfunctions.models.StateMachine.create_from_cloudformation_json": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "classmethod",
    "localstack.stepfunctions.models.StateMachine"
   ]
  },
  "type": "function"
 },
 "localstack.utils": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.analytics": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.analytics.event_publisher": {
  "data": {
   "symbols_in_volume": [
    "localstack.utils.common.short_uid",
    "six.moves.queue.Queue"
   ]
  },
  "type": "module"
 },
 "localstack.utils.analytics.event_publisher.API_ENDPOINT": {
  "data": {
   "shadows": "localstack.constants.API_ENDPOINT"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "localstack.utils.common.JsonObject"
   ]
  },
  "type": "class"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "localstack.utils.analytics.event_publisher.get_machine_id",
    "localstack.utils.analytics.event_publisher.get_process_id",
    "localstack.utils.analytics.event_publisher.read_api_key_safe",
    "localstack.utils.common.timestamp"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent.api_key": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent.event_type": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent.machine_id": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent.payload": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent.process_id": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent.timestamp": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.EVENT_APIGW_CREATE_API": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_APIGW_DELETE_API": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_CLOUDFORMATION_CREATE_STACK": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_DYNAMODB_CREATE_STREAM": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_DYNAMODB_CREATE_TABLE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_DYNAMODB_DELETE_TABLE": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_ES_CREATE_DOMAIN": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_ES_DELETE_DOMAIN": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_FIREHOSE_CREATE_STREAM": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_FIREHOSE_DELETE_STREAM": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_KINESIS_CREATE_STREAM": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_KINESIS_DELETE_STREAM": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_LAMBDA_CREATE_FUNC": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_LAMBDA_DELETE_FUNC": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_LAMBDA_INVOKE_FUNC": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_QUEUE": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_S3_CREATE_BUCKET": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_S3_DELETE_BUCKET": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_SNS_CREATE_TOPIC": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_SNS_DELETE_TOPIC": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_SQS_CREATE_QUEUE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_SQS_DELETE_QUEUE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_START_INFRA": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_STEPFUNCTIONS_CREATE_SM": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_STEPFUNCTIONS_DELETE_SM": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_STOP_INFRA": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.JsonObject": {
  "data": {
   "shadows": "localstack.utils.common.JsonObject"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.MACHINE_ID": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.PROCESS_ID": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.SENDER_THREAD": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher._get_config_file": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "localstack.utils.common.get_or_create_file"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.fire_event": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "localstack.config.DISABLE_EVENTS",
    "localstack.utils.analytics.event_publisher.AnalyticsEvent",
    "localstack.utils.analytics.event_publisher.EVENT_QUEUE",
    "localstack.utils.analytics.event_publisher.SENDER_THREAD",
    "localstack.utils.analytics.event_publisher.is_travis",
    "localstack.utils.analytics.event_publisher.poll_and_send_messages",
    "localstack.utils.analytics.event_publisher.read_api_key_safe",
    "localstack.utils.common.FuncThread",
    "localstack.utils.testutil.is_local_test_mode"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.get_config_file_homedir": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "localstack.config.CONFIG_FILE_PATH",
    "localstack.utils.analytics.event_publisher._get_config_file"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.get_config_file_tempdir": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "localstack.config.TMP_FOLDER",
    "localstack.utils.analytics.event_publisher._get_config_file",
    "localstack.utils.analytics.event_publisher.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.get_hash": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "hash",
    "hex"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.get_machine_id": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "localstack.utils.analytics.event_publisher.MACHINE_ID",
    "localstack.utils.analytics.event_publisher.PROCESS_ID",
    "localstack.utils.analytics.event_publisher.get_config_file_homedir",
    "localstack.utils.analytics.event_publisher.get_config_file_tempdir",
    "localstack.utils.analytics.event_publisher.json",
    "localstack.utils.common.load_file",
    "localstack.utils.common.save_file",
    "localstack.utils.common.short_uid",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.get_or_create_file": {
  "data": {
   "shadows": "localstack.utils.common.get_or_create_file"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.get_process_id": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "localstack.utils.analytics.event_publisher.PROCESS_ID"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.is_local_test_mode": {
  "data": {
   "shadows": "localstack.utils.testutil.is_local_test_mode"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.is_travis": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "localstack.utils.analytics.event_publisher.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.load_file": {
  "data": {
   "shadows": "localstack.utils.common.load_file"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.poll_and_send_messages": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "Exception",
    "localstack.constants.API_ENDPOINT.rstrip",
    "localstack.utils.analytics.event_publisher.EVENT_QUEUE",
    "localstack.utils.analytics.event_publisher.time",
    "localstack.utils.common.safe_requests.post"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.queue": {
  "data": {
   "shadows": "six.moves.queue"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.read_api_key": {
  "data": {
   "shadows": "localstack_ext.bootstrap.licensing.read_api_key"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.read_api_key_safe": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "localstack_ext.bootstrap.licensing.read_api_key"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.requests": {
  "data": {
   "shadows": "localstack.utils.common.safe_requests"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.save_file": {
  "data": {
   "shadows": "localstack.utils.common.save_file"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.timestamp": {
  "data": {
   "shadows": "localstack.utils.common.timestamp"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.utils.analytics.profiler.logging"
   ]
  },
  "type": "module"
 },
 "localstack.utils.analytics.profiler.LOCALSTACK_ROOT_FOLDER": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_ROOT_FOLDER"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.LOG": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "localstack.utils.analytics.profiler.PROFILED_METHODS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "localstack.utils.analytics.profiler.cProfile": {
  "data": {
   "shadows": "cProfile"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.curse": {
  "data": {
   "shadows": "forbiddenfruit.curse"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.log_duration": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.log_duration.wrapper": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.log_duration.wrapper.wrapped": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "f",
    "f.__name__",
    "functools.wraps",
    "localstack.utils.analytics.profiler.LOG",
    "localstack.utils.common.now_utc"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.now_utc": {
  "data": {
   "shadows": "localstack.utils.common.now_utc"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.profiled": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "localstack.utils.analytics.profiler.profiled_via_cprofile"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "_patch",
    "localstack.utils.analytics.profiler.PROFILED_METHODS",
    "localstack.utils.analytics.profiler.threading"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile._patch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception",
    "forbiddenfruit.curse",
    "getattr",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile._patch.m_patched": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "localstack.utils.analytics.profiler.traceback",
    "m_obj",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile.add_stats": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "localstack.utils.analytics.profiler.pstats"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile.enable_thread_profiling": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile.enable_thread_profiling.profile_run": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "add_stats",
    "localstack.utils.analytics.profiler.cProfile",
    "thread_run"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile.get_thread_stats": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "getattr",
    "localstack.utils.analytics.profiler.LOG"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile.profile_current_thread": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "add_stats",
    "localstack.utils.analytics.profiler.cProfile"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile.wrapper": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile.wrapper.wrapped": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "any",
    "enable_thread_profiling",
    "f",
    "functools.wraps",
    "get_thread_stats",
    "profile_current_thread",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_yappi": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_yappi.wrapper": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_yappi.wrapper.wrapped": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "all",
    "c",
    "f",
    "functools.wraps",
    "list",
    "localstack.constants.LOCALSTACK_ROOT_FOLDER",
    "localstack.utils.analytics.profiler.yappi",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_yappi.wrapper.wrapped.c": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.pstats": {
  "data": {
   "shadows": "pstats"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.yappi": {
  "data": {
   "shadows": "yappi"
  },
  "type": "import"
 },
 "localstack.utils.async_utils": {
  "data": {
   "symbols_in_volume": [
    "contextvars.copy_context",
    "localstack.utils.async_utils.AdaptiveThreadPool",
    "localstack.utils.async_utils.THREAD_POOL",
    "localstack.utils.async_utils.asyncio",
    "localstack.utils.async_utils.get",
    "localstack.utils.async_utils.loop",
    "localstack.utils.async_utils.msg",
    "localstack.utils.async_utils.thread_pool",
    "localstack.utils.common.TMP_THREADS.append",
    "run_sync"
   ]
  },
  "type": "module"
 },
 "localstack.utils.async_utils.AdaptiveThreadPool": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "localstack.utils.async_utils.AdaptiveThreadPool.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "localstack.utils.async_utils.AdaptiveThreadPool",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.async_utils.AdaptiveThreadPool.has_idle_threads": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "localstack.utils.async_utils.AdaptiveThreadPool.submit": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "localstack.utils.async_utils.AdaptiveThreadPool",
    "localstack.utils.common.start_worker_thread",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.async_utils.AdaptiveThreadPool.submit._run": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "localstack.utils.async_utils.AsyncThread": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread"
   ]
  },
  "type": "class"
 },
 "localstack.utils.async_utils.AsyncThread.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread.__init__"
   ]
  },
  "type": "function"
 },
 "localstack.utils.async_utils.AsyncThread.run_async": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "classmethod",
    "localstack.utils.async_utils.AsyncThread",
    "localstack.utils.common.TMP_THREADS.append"
   ]
  },
  "type": "function"
 },
 "localstack.utils.async_utils.AsyncThread.run_func": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "localstack.utils.async_utils.asyncio",
    "localstack.utils.async_utils.ensure_event_loop"
   ]
  },
  "type": "function"
 },
 "localstack.utils.async_utils.AsyncThread.stop": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "localstack.utils.async_utils.EVENT_LOOPS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "localstack.utils.async_utils.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.utils.async_utils.THREAD_POOL": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "localstack.utils.async_utils.TMP_THREADS": {
  "data": {
   "shadows": "localstack.utils.common.TMP_THREADS"
  },
  "type": "import"
 },
 "localstack.utils.async_utils.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "localstack.utils.async_utils.common": {
  "data": {
   "shadows": "localstack.utils.common"
  },
  "type": "import"
 },
 "localstack.utils.async_utils.concurrent.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "localstack.utils.async_utils.copy_context": {
  "data": {
   "shadows": "contextvars.copy_context"
  },
  "type": "import"
 },
 "localstack.utils.async_utils.ensure_event_loop": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.async_utils.asyncio",
    "localstack.utils.async_utils.loop"
   ]
  },
  "type": "function"
 },
 "localstack.utils.async_utils.get": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.common.INFRA_STOPPED"
   ]
  },
  "type": "function"
 },
 "localstack.utils.async_utils.get_named_event_loop": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "localstack.utils.async_utils.AsyncThread",
    "localstack.utils.async_utils.EVENT_LOOPS",
    "localstack.utils.async_utils.time"
   ]
  },
  "type": "function"
 },
 "localstack.utils.async_utils.get_named_event_loop.async_func_gen": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "localstack.utils.async_utils.EVENT_LOOPS",
    "localstack.utils.async_utils.loop"
   ]
  },
  "type": "function"
 },
 "localstack.utils.async_utils.loop": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "localstack.utils.async_utils.msg": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "localstack.utils.async_utils.start_worker_thread": {
  "data": {
   "shadows": "localstack.utils.common.start_worker_thread"
  },
  "type": "import"
 },
 "localstack.utils.async_utils.thread_pool": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "localstack.utils.async_utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.utils.auth": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.utils.auth.logging"
   ]
  },
  "type": "module"
 },
 "localstack.utils.auth.HmacV1Auth": {
  "data": {
   "shadows": "botocore.auth.HmacV1Auth"
  },
  "type": "import"
 },
 "localstack.utils.auth.HmacV1QueryAuth": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "botocore.auth.HmacV1Auth"
   ]
  },
  "type": "class"
 },
 "localstack.utils.auth.HmacV1QueryAuth.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "localstack.utils.auth.HmacV1QueryAuth._get_date": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.auth.HmacV1QueryAuth.get_signature": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "localstack.utils.auth.HmacV1QueryAuth.get_string_to_sign": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "localstack.utils.auth.logger": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "localstack.utils.auth.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.aws": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.aws.aws_models": {
  "data": {
   "symbols_in_volume": [
    "int",
    "localstack.utils.aws.aws_models.six"
   ]
  },
  "type": "module"
 },
 "localstack.utils.aws.aws_models.Component": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.Component.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.Component.__repr__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.Component.__str__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.Component.name": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.DynamoDB": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.DynamoDB.__init__": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.DynamoDB",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.DynamoDB.name": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.DynamoDBItem": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.DynamoDBItem.__eq__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.aws.aws_models.DynamoDBItem"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.DynamoDBItem.__hash__": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.DynamoDBItem.__init__": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.DynamoDBItem",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.DynamoDBStream": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.DynamoDBStream.__init__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.DynamoDBStream",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.ElasticSearch": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.ElasticSearch.__init__": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.ElasticSearch",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.ElasticSearch.name": {
  "data": {
   "lineno": 341
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.EventSource": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.EventSource.__init__": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.EventSource",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.EventSource.filter_type": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.aws.aws_models.six",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.EventSource.get": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.aws.aws_models.Component",
    "localstack.utils.aws.aws_models.DynamoDB",
    "localstack.utils.aws.aws_models.DynamoDBStream",
    "localstack.utils.aws.aws_models.ElasticSearch",
    "localstack.utils.aws.aws_models.EventSource",
    "localstack.utils.aws.aws_models.KinesisStream",
    "localstack.utils.aws.aws_models.LambdaFunction",
    "localstack.utils.aws.aws_models.SqsQueue",
    "print",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.FirehoseStream": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.KinesisStream"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.FirehoseStream.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.FirehoseStream",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.FirehoseStream.name": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.KinesisShard.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.KinesisShard",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard.__str__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard.length": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.long"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard.max": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.long",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard.percent": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "float",
    "localstack.utils.aws.aws_models.KinesisShard"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard.print_tree": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard.sort": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard.sort.compare": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.long"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.KinesisStream.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.KinesisStream",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.connect": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.create": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.describe": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.destroy": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.time"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.get_status": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.name": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.put": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.aws.aws_models.json",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.read": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.wait_for": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.aws.aws_models.time",
    "range"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.__init__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.LambdaFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.__str__": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.arn": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.clear_function_event_invoke_config": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.function": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.get_function_event_invoke_config": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.get_qualifier_version": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.get_version": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.max_version": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "int",
    "max"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.name": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.put_function_event_invoke_config": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime.utcnow",
    "dict",
    "int",
    "isinstance",
    "localstack.utils.common.isoformat_milliseconds"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.qualifier_exists": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.set_dead_letter_config": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.S3Bucket": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.S3Bucket.__init__": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.S3Bucket",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.S3Bucket.name": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.S3Notification": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.S3Notification.__init__": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.S3Notification",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.SqsQueue": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.SqsQueue.__init__": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.SqsQueue",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.SqsQueue.name": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_models.isoformat_milliseconds": {
  "data": {
   "shadows": "localstack.utils.common.isoformat_milliseconds"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_models.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_models.long": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "localstack.utils.aws.aws_models.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_models.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses": {
  "data": {
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.re"
   ]
  },
  "type": "module"
 },
 "localstack.utils.aws.aws_responses.CaseInsensitiveDict": {
  "data": {
   "shadows": "requests.models.CaseInsensitiveDict"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.ErrorResponse": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_responses.ErrorResponse.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.LambdaResponse": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_responses.LambdaResponse.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "requests.models.CaseInsensitiveDict"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.LambdaResponse.content": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.MOTO_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.MOTO_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.MessageConversion": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_responses.MessageConversion._reset_account_id": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "localstack.constants.MOTO_ACCOUNT_ID",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.utils.aws.aws_stack.fix_account_id_in_arns",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.MessageConversion.fix_account_id": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "localstack.constants.MOTO_ACCOUNT_ID",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.utils.aws.aws_stack.fix_account_id_in_arns",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.MessageConversion.fix_date_format": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "_replace",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.MessageConversion.fix_date_format._replace": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.re",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.MessageConversion.fix_error_codes": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.REGEX_FLAGS",
    "localstack.utils.aws.aws_responses.re",
    "localstack.utils.common.to_str",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.MessageConversion.fix_xml_empty_boolean": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.REGEX_FLAGS",
    "localstack.utils.aws.aws_responses.re",
    "localstack.utils.common.to_str",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.REGEX_FLAGS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.utils.aws.aws_responses.RequestsResponse": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.calculate_crc32": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "binascii.crc32",
    "localstack.utils.common.to_bytes"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.crc32": {
  "data": {
   "shadows": "binascii.crc32"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.flask_error_response_json": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.json",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.flask_error_response_xml": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.requests_error_response_xml",
    "localstack.utils.aws.aws_responses.requests_to_flask_response"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.flask_to_requests_response": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.requests_response"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.make_error": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.flask_error_response_xml"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.make_requests_error": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.flask_error_response_xml",
    "localstack.utils.aws.aws_responses.flask_to_requests_response"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.requests_error_response": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.requests_error_response_json",
    "localstack.utils.aws.aws_responses.requests_error_response_xml"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.requests_error_response_json": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.flask_error_response_json",
    "localstack.utils.aws.aws_responses.flask_to_requests_response"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.requests_error_response_xml": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "localstack.utils.common.short_uid",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.requests_error_response_xml_signature_calculation": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bytes",
    "int",
    "len",
    "localstack.utils.aws.aws_responses.binascii",
    "localstack.utils.aws.aws_responses.datetime",
    "localstack.utils.aws.aws_responses.xmltodict",
    "localstack.utils.common.short_uid",
    "requests.models.Response",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.requests_response": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "localstack.utils.aws.aws_responses.json",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.requests_to_flask_response": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "dict",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.response_regex_replace": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.re",
    "localstack.utils.aws.aws_responses.set_response_content",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.set_response_content": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "localstack.utils.aws.aws_responses.json",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.to_bytes": {
  "data": {
   "shadows": "localstack.utils.common.to_bytes"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.xmltodict": {
  "data": {
   "shadows": "xmltodict"
  },
  "type": "import"
 },
 "localstack.utils.aws.templating": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.aws.templating.VelocityInput": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.templating.VelocityInput.__getattr__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.VelocityInput.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.VelocityInput.__repr__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.VelocityInput.json": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "localstack.utils.aws.templating.json"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.VelocityInput.path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "localstack.utils.aws.templating.json",
    "localstack.utils.common.extract_jsonpath"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.VelocityUtil": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.templating.VelocityUtil.base64Decode": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.aws.templating.base64",
    "localstack.utils.aws.templating.json",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.VelocityUtil.base64Encode": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "isinstance",
    "localstack.config.DEFAULT_ENCODING",
    "localstack.utils.aws.templating.base64",
    "localstack.utils.aws.templating.json",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.VelocityUtil.escapeJavaScript": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.VelocityUtil.toJson": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "localstack.utils.aws.templating.json"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.VelocityUtil.urlDecode": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "six.moves.urllib.parse.unquote_plus"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.VelocityUtil.urlEncode": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "six.moves.urllib.parse.quote_plus"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.airspeed": {
  "data": {
   "shadows": "airspeed"
  },
  "type": "import"
 },
 "localstack.utils.aws.templating.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "localstack.utils.aws.templating.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.utils.aws.templating.extract_jsonpath": {
  "data": {
   "shadows": "localstack.utils.common.extract_jsonpath"
  },
  "type": "import"
 },
 "localstack.utils.aws.templating.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.aws.templating.quote_plus": {
  "data": {
   "shadows": "six.moves.urllib.parse.quote_plus"
  },
  "type": "import"
 },
 "localstack.utils.aws.templating.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.utils.aws.templating.recurse_object": {
  "data": {
   "shadows": "localstack.utils.common.recurse_object"
  },
  "type": "import"
 },
 "localstack.utils.aws.templating.render_velocity_template": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "localstack.utils.aws.templating.VelocityInput",
    "localstack.utils.aws.templating.VelocityUtil",
    "localstack.utils.aws.templating.airspeed",
    "localstack.utils.aws.templating.json",
    "localstack.utils.aws.templating.re",
    "localstack.utils.common.recurse_object"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.render_velocity_template.ExtendedString": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.templating.render_velocity_template.ExtendedString.toLowerCase": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ExtendedString"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.render_velocity_template.ExtendedString.toUpperCase": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ExtendedString"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.render_velocity_template.ExtendedString.trim": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ExtendedString"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.render_velocity_template.apply": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ExtendedString",
    "dict",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.templating.unquote_plus": {
  "data": {
   "shadows": "six.moves.urllib.parse.unquote_plus"
  },
  "type": "import"
 },
 "localstack.utils.cloudformation": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.cloudwatch": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.cloudwatch.cloudwatch_util": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.utils.cloudwatch.cloudwatch_util.logging"
   ]
  },
  "type": "module"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.LOG": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch.cloudwatch_util._func_name": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.cloudwatched": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.cloudwatched.wrapping": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.cloudwatched.wrapping.wrapped": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Exception",
    "func",
    "localstack.utils.cloudwatch.cloudwatch_util.publish_error",
    "localstack.utils.cloudwatch.cloudwatch_util.publish_result",
    "localstack.utils.common.now_utc"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.dimension_lambda": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "localstack.utils.cloudwatch.cloudwatch_util._func_name"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.now_utc": {
  "data": {
   "shadows": "localstack.utils.common.now_utc"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.publish_error": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "localstack.utils.cloudwatch.cloudwatch_util.LOG",
    "localstack.utils.cloudwatch.cloudwatch_util.publish_event",
    "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_error"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.publish_event": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "localstack.utils.analytics.event_publisher.EVENT_LAMBDA_INVOKE_FUNC",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.cloudwatch.cloudwatch_util._func_name",
    "localstack.utils.common.now_utc"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_duration": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_metric",
    "localstack.utils.common.now_utc"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_error": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_metric"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_metric": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime.now",
    "localstack.config.service_port",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.cloudwatch.cloudwatch_util.LOG",
    "localstack.utils.cloudwatch.cloudwatch_util.dimension_lambda"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_result": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "flask.Response",
    "isinstance",
    "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_error",
    "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_metric"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.publish_result": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "localstack.utils.cloudwatch.cloudwatch_util.LOG",
    "localstack.utils.cloudwatch.cloudwatch_util.publish_event",
    "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_result"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.store_cloudwatch_logs": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Exception",
    "enumerate",
    "float",
    "int",
    "len",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.is_service_enabled",
    "localstack.utils.cloudwatch.cloudwatch_util.time",
    "localstack.utils.common.to_str",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.utils.http_utils": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.http_utils.create_chunked_data": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "hex",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "localstack.utils.http_utils.parse_chunked_data": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "int",
    "localstack.utils.http_utils.re"
   ]
  },
  "type": "function"
 },
 "localstack.utils.http_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.utils.http_utils.uses_chunked_encoding": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "localstack.utils.kinesis": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.kinesis.kclipy_helper": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.kinesis.kclipy_helper.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kclipy_helper.create_config_file": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.common.save_file",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kclipy_helper.get_dir_of_file": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "localstack.utils.kinesis.kclipy_helper.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kclipy_helper.get_kcl_app_command": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "localstack.utils.kinesis.kclipy_helper.get_dir_of_file",
    "localstack.utils.kinesis.kclipy_helper.get_kcl_classpath",
    "localstack.utils.kinesis.kclipy_helper.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kclipy_helper.get_kcl_classpath": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "localstack.utils.kinesis.kclipy_helper.get_dir_of_file",
    "localstack.utils.kinesis.kclipy_helper.get_kcl_jar_path",
    "localstack.utils.kinesis.kclipy_helper.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kclipy_helper.get_kcl_dir": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "amazon_kclpy.kcl.__file__",
    "localstack.utils.kinesis.kclipy_helper.get_dir_of_file"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kclipy_helper.get_kcl_jar_path": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "glob.glob",
    "localstack.utils.kinesis.kclipy_helper.get_kcl_dir",
    "localstack.utils.kinesis.kclipy_helper.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kclipy_helper.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kclipy_helper.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kclipy_helper.kcl": {
  "data": {
   "shadows": "amazon_kclpy.kcl"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kclipy_helper.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kclipy_helper.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kclipy_helper.save_file": {
  "data": {
   "shadows": "localstack.utils.common.save_file"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.utils.kinesis.kinesis_connector.logging",
    "localstack.utils.kinesis.kinesis_connector.os",
    "localstack.utils.kinesis.kinesis_connector.tempfile"
   ]
  },
  "type": "module"
 },
 "localstack.utils.kinesis.kinesis_connector.CHECKPOINT_FREQ_SECS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.CHECKPOINT_RETRIES": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.CHECKPOINT_SLEEP_SECS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.DEFAULT_DDB_LEASE_TABLE_SUFFIX": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.DEFAULT_KCL_LOG_LEVEL": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.EVENTS_FILE_PATTERN": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.EventFileReaderThread": {
  "data": {
   "shadows": "localstack.utils.kinesis.kinesis_util.EventFileReaderThread"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.HOSTNAME": {
  "data": {
   "shadows": "localstack.config.HOSTNAME"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.KclLogListener": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.utils.kinesis.kinesis_connector.KclLogListener.__init__": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KclLogListener.update": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KclStartedLogListener": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "localstack.utils.kinesis.kinesis_connector.KclLogListener"
   ]
  },
  "type": "class"
 },
 "localstack.utils.kinesis.kinesis_connector.KclStartedLogListener.__init__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "localstack.utils.kinesis.kinesis_connector.KclStartedLogListener",
    "six.moves.queue.Queue",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KclStartedLogListener.update": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "localstack.utils.kinesis.kinesis_connector.re"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "amazon_kclpy.kcl.RecordProcessorBase"
   ]
  },
  "type": "class"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.checkpoint": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.common.retry",
    "localstack.utils.kinesis.kinesis_connector.CHECKPOINT_RETRIES",
    "localstack.utils.kinesis.kinesis_connector.CHECKPOINT_SLEEP_SECS",
    "localstack.utils.kinesis.kinesis_connector.LOGGER"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.checkpoint.do_checkpoint": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.initialize": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.log": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "localstack.utils.common.save_file"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.process_records": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "int",
    "localstack.utils.common.now",
    "localstack.utils.kinesis.kinesis_connector.CHECKPOINT_FREQ_SECS",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.run_processor": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "amazon_kclpy.kcl.KCLProcess",
    "localstack.utils.kinesis.kinesis_connector.KinesisProcessor",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.should_update_sequence": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.shutdown": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessorThread": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "localstack.utils.common.ShellCommandThread"
   ]
  },
  "type": "class"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessorThread.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.is_local_env",
    "localstack.utils.common.ShellCommandThread.__init__",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.kinesis.kclipy_helper.get_kcl_app_command",
    "localstack.utils.kinesis.kinesis_connector.MULTI_LANG_DAEMON_CLASS"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessorThread.start_consumer": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "localstack.utils.kinesis.kinesis_connector.KinesisProcessorThread",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisStream": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.KinesisStream"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.LOCALSTACK_ROOT_FOLDER": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_ROOT_FOLDER"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.LOCALSTACK_VENV_FOLDER": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_VENV_FOLDER"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.LOGGER": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.LOG_FILE_PATTERN": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.LOG_LEVELS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.MULTI_LANG_DAEMON_CLASS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread"
   ]
  },
  "type": "class"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread.__init__",
    "localstack.utils.kinesis.kinesis_connector.DEFAULT_KCL_LOG_LEVEL",
    "localstack.utils.kinesis.kinesis_connector.OutputReaderThread",
    "localstack.utils.kinesis.kinesis_connector.logging",
    "localstack.utils.kinesis.kinesis_connector.threading"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread._tail": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "localstack.utils.common.to_str",
    "localstack.utils.kinesis.kinesis_connector.subprocess"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread._tail_native": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread.get_log_level_names": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "classmethod",
    "localstack.utils.kinesis.kinesis_connector.LOG_LEVELS",
    "localstack.utils.kinesis.kinesis_connector.logging"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread.get_logger_for_level_in_log_line": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "getattr",
    "localstack.utils.kinesis.kinesis_connector.LOG_LEVELS",
    "localstack.utils.kinesis.kinesis_connector.logging",
    "localstack.utils.kinesis.kinesis_connector.re"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread.notify_subscribers": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.kinesis.kinesis_connector.LOGGER",
    "localstack.utils.kinesis.kinesis_connector.re"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread.running": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread.start_reading": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "len",
    "localstack.utils.kinesis.kinesis_connector.re",
    "logger_func"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread.stop": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.Queue": {
  "data": {
   "shadows": "six.moves.queue"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.ShellCommandThread": {
  "data": {
   "shadows": "localstack.utils.common.ShellCommandThread"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.TMP_FILES": {
  "data": {
   "shadows": "localstack.utils.common.TMP_FILES"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.TMP_THREADS": {
  "data": {
   "shadows": "localstack.utils.common.TMP_THREADS"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.USE_SSL": {
  "data": {
   "shadows": "localstack.config.USE_SSL"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.chmod_r": {
  "data": {
   "shadows": "localstack.utils.common.chmod_r"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.generate_processor_script": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "localstack.constants.LOCALSTACK_ROOT_FOLDER",
    "localstack.constants.LOCALSTACK_VENV_FOLDER",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.common.chmod_r",
    "localstack.utils.common.save_file",
    "localstack.utils.common.short_uid",
    "localstack.utils.kinesis.kinesis_connector.os",
    "localstack.utils.kinesis.kinesis_connector.tempfile"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.get_service_protocol": {
  "data": {
   "shadows": "localstack.utils.common.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.get_stream_info": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "bool",
    "localstack.config.HOSTNAME",
    "localstack.config.PORT_KINESIS",
    "localstack.config.USE_SSL",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.aws.aws_stack.is_local_env",
    "localstack.utils.aws.aws_stack.kinesis_stream_name",
    "localstack.utils.common.short_uid",
    "localstack.utils.kinesis.kinesis_connector.DEFAULT_DDB_LEASE_TABLE_SUFFIX",
    "localstack.utils.kinesis.kinesis_connector.os",
    "localstack.utils.kinesis.kinesis_connector.tempfile",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.kcl": {
  "data": {
   "shadows": "amazon_kclpy.kcl"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.kclipy_helper": {
  "data": {
   "shadows": "localstack.utils.kinesis.kclipy_helper"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.listen_to_kinesis": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.common.rm_rf",
    "localstack.utils.common.short_uid",
    "localstack.utils.kinesis.kinesis_connector.DEFAULT_KCL_LOG_LEVEL",
    "localstack.utils.kinesis.kinesis_connector.EVENTS_FILE_PATTERN",
    "localstack.utils.kinesis.kinesis_connector.KclStartedLogListener",
    "localstack.utils.kinesis.kinesis_connector.generate_processor_script",
    "localstack.utils.kinesis.kinesis_connector.start_kcl_client_process",
    "localstack.utils.kinesis.kinesis_connector.threading",
    "localstack.utils.kinesis.kinesis_util.EventFileReaderThread"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.now": {
  "data": {
   "shadows": "localstack.utils.common.now"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.retry": {
  "data": {
   "shadows": "localstack.utils.common.retry"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.rm_rf": {
  "data": {
   "shadows": "localstack.utils.common.rm_rf"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.run": {
  "data": {
   "shadows": "localstack.utils.common.run"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.save_file": {
  "data": {
   "shadows": "localstack.utils.common.save_file"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.start_kcl_client_process": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "len",
    "localstack.config.HOSTNAME",
    "localstack.config.PORT_DYNAMODB",
    "localstack.config.PORT_KINESIS",
    "localstack.utils.aws.aws_models.KinesisStream",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.is_local_env",
    "localstack.utils.aws.aws_stack.kinesis_stream_name",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.common.TMP_THREADS.append",
    "localstack.utils.common.get_service_protocol",
    "localstack.utils.common.run",
    "localstack.utils.common.short_uid",
    "localstack.utils.kinesis.kclipy_helper.create_config_file",
    "localstack.utils.kinesis.kinesis_connector.DEFAULT_KCL_LOG_LEVEL",
    "localstack.utils.kinesis.kinesis_connector.KinesisProcessorThread",
    "localstack.utils.kinesis.kinesis_connector.LOG_FILE_PATTERN",
    "localstack.utils.kinesis.kinesis_connector.OutputReaderThread",
    "localstack.utils.kinesis.kinesis_connector.get_stream_info",
    "localstack.utils.kinesis.kinesis_connector.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlparse"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_util": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.utils.kinesis.kinesis_util.logging"
   ]
  },
  "type": "module"
 },
 "localstack.utils.kinesis.kinesis_util.EventFileReaderThread": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread"
   ]
  },
  "type": "class"
 },
 "localstack.utils.kinesis.kinesis_util.EventFileReaderThread.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread.__init__"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_util.EventFileReaderThread.handle_connection": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Exception",
    "len",
    "localstack.utils.common.truncate",
    "localstack.utils.kinesis.kinesis_util.LOGGER",
    "localstack.utils.kinesis.kinesis_util.inspect",
    "localstack.utils.kinesis.kinesis_util.json",
    "localstack.utils.kinesis.kinesis_util.traceback"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_util.EventFileReaderThread.retrieve_loop": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.common.FuncThread",
    "localstack.utils.kinesis.kinesis_util.LOGGER",
    "localstack.utils.kinesis.kinesis_util.socket",
    "localstack.utils.kinesis.kinesis_util.traceback"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_util.EventFileReaderThread.stop": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_util.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_util.LOGGER": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_util.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_util.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_util.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_util.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_util.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_util.truncate": {
  "data": {
   "shadows": "localstack.utils.common.truncate"
  },
  "type": "import"
 },
 "localstack.utils.server": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.server.http2_server": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.utils.server.http2_server.apply_patches",
    "localstack.utils.server.http2_server.logging",
    "localstack.utils.server.http2_server.threading"
   ]
  },
  "type": "module"
 },
 "localstack.utils.server.http2_server.Closed": {
  "data": {
   "shadows": "hypercorn.events.Closed"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.Config": {
  "data": {
   "shadows": "hypercorn.config.Config"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.HTTPErrorResponse": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "localstack.utils.server.http2_server.HTTPErrorResponse.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "localstack.utils.server.http2_server.HTTPErrorResponse",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.http2_server.HTTP_METHODS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "localstack.utils.server.http2_server.LOG": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "localstack.utils.server.http2_server.Quart": {
  "data": {
   "shadows": "quart.Quart"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.SSL_CONTEXTS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "localstack.utils.server.http2_server.SSL_LOCK": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.utils.server.http2_server.TMP_THREADS": {
  "data": {
   "shadows": "localstack.utils.common.TMP_THREADS"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server._cancel_all_tasks": {
  "data": {
   "shadows": "quart.app._cancel_all_tasks"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.apply_patches": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Exception",
    "InformationalResponse_init_orig",
    "_read_data_orig",
    "create_ssl_context_orig",
    "hypercorn.asyncio.tcp_server.TCPServer._read_data",
    "hypercorn.config.Config.create_ssl_context",
    "hypercorn.events.Closed",
    "localstack.utils.server.http2_server.h11"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.http2_server.apply_patches.InformationalResponse_init": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "InformationalResponse_init_orig"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.http2_server.apply_patches.create_ssl_context": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "localstack.utils.common.retry",
    "localstack.utils.server.http2_server.SSL_CONTEXTS",
    "localstack.utils.server.http2_server.SSL_LOCK"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.http2_server.apply_patches.create_ssl_context._do_create": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "create_ssl_context_orig",
    "localstack.utils.server.http2_server.SSL_CONTEXTS"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.http2_server.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.ensure_event_loop": {
  "data": {
   "shadows": "localstack.utils.async_utils.ensure_event_loop"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.h11": {
  "data": {
   "shadows": "h11"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.load_file": {
  "data": {
   "shadows": "localstack.utils.common.load_file"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.make_response": {
  "data": {
   "shadows": "quart.make_response"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.request": {
  "data": {
   "shadows": "quart.request"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.retry": {
  "data": {
   "shadows": "localstack.utils.common.retry"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.run_server": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "dict",
    "getattr",
    "isinstance",
    "len",
    "localstack.utils.async_utils.ensure_event_loop",
    "localstack.utils.async_utils.run_sync",
    "localstack.utils.http_utils.uses_chunked_encoding",
    "localstack.utils.server.http2_server.HTTPErrorResponse",
    "localstack.utils.server.http2_server.HTTP_METHODS",
    "localstack.utils.server.http2_server.LOG",
    "localstack.utils.server.http2_server.traceback",
    "quart.Quart",
    "quart.make_response",
    "quart.request",
    "quart.request.get_data",
    "quart.request.method",
    "quart.request.url",
    "run_app_sync",
    "run_in_thread",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.http2_server.run_server.ProxyThread": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread"
   ]
  },
  "type": "class"
 },
 "localstack.utils.server.http2_server.run_server.ProxyThread.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread.__init__"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.http2_server.run_server.ProxyThread.run_proxy": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "localstack.utils.async_utils.ensure_event_loop",
    "localstack.utils.server.http2_server.asyncio",
    "run_app_sync"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.http2_server.run_server.ProxyThread.stop": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "localstack.utils.server.http2_server.run_server.run_app_sync": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Exception",
    "hypercorn.asyncio.serve",
    "hypercorn.config.Config",
    "len",
    "localstack.config",
    "localstack.config.bind",
    "localstack.config.certfile",
    "localstack.config.keyfile",
    "localstack.utils.async_utils.ensure_event_loop",
    "localstack.utils.common.load_file",
    "localstack.utils.server.http2_server.LOG",
    "localstack.utils.server.http2_server.asyncio",
    "localstack.utils.server.http2_server.os",
    "localstack.utils.server.http2_server.setup_quart_logging",
    "localstack.utils.server.http2_server.traceback",
    "quart.app._cancel_all_tasks",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.http2_server.run_server.run_in_thread": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ProxyThread",
    "localstack.utils.common.TMP_THREADS.append"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.http2_server.run_sync": {
  "data": {
   "shadows": "localstack.utils.async_utils.run_sync"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.serve": {
  "data": {
   "shadows": "hypercorn.asyncio.serve"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.setup_quart_logging": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "list",
    "localstack.config.DEBUG",
    "localstack.utils.server.http2_server.logging"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.http2_server.tcp_server": {
  "data": {
   "shadows": "hypercorn.asyncio.tcp_server"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.utils.server.http2_server.uses_chunked_encoding": {
  "data": {
   "shadows": "localstack.utils.http_utils.uses_chunked_encoding"
  },
  "type": "import"
 },
 "localstack.utils.tagging": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.tagging.TaggingService": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.utils.tagging.TaggingService.__init__": {
  "data": {
   "lineno": 3
  },
  "type": "function"
 },
 "localstack.utils.tagging.TaggingService.list_tags_for_resource": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "localstack.utils.tagging.TaggingService.tag_resource": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "localstack.utils.tagging.TaggingService.untag_resource": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 }
}