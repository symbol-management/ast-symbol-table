{
 "localstack": {
  "data": {},
  "type": "module"
 },
 "localstack.config": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "boto3.Session",
    "float",
    "int",
    "localstack.config.CONFIG_ENV_VARS",
    "localstack.config.DATA_DIR",
    "localstack.config.DOCKER_BRIDGE_IP",
    "localstack.config.DOCKER_HOST_FROM_CONTAINER",
    "localstack.config.HOSTNAME",
    "localstack.config.LAMBDA_EXECUTOR",
    "localstack.config.LOCALSTACK_HOSTNAME",
    "localstack.config.PORT_WEB_UI",
    "localstack.config.TMP_FOLDER",
    "localstack.config.TRUE_VALUES",
    "localstack.config.candidates",
    "localstack.config.clean_key",
    "localstack.config.has_docker",
    "localstack.config.in_docker",
    "localstack.config.is_in_docker",
    "localstack.config.logging",
    "localstack.config.no_proxy",
    "localstack.config.os",
    "localstack.config.ping",
    "localstack.config.populate_configs",
    "localstack.config.six",
    "localstack.config.socket",
    "localstack.config.tempfile",
    "localstack.constants.DEFAULT_LAMBDA_CONTAINER_REGISTRY",
    "localstack.constants.DEFAULT_PORT_WEB_UI",
    "localstack.constants.DEFAULT_SERVICE_PORTS",
    "localstack.constants.FALSE_STRINGS",
    "localstack.constants.LOCALHOST",
    "localstack.constants.PATH_USER_REQUEST",
    "localstack.constants.TRUE_STRINGS",
    "os.path.expanduser",
    "set"
   ]
  },
  "type": "module"
 },
 "localstack.config.BUNDLE_API_PROCESSES": {
  "data": {
   "lineno": 288
  },
  "type": "constant"
 },
 "localstack.config.CLI_COMMANDS": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "localstack.config.CONFIG_ENV_VARS": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "localstack.config.CONFIG_FILE_PATH": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "localstack.config.DATA_DIR": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "localstack.config.DEFAULT_ENCODING": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "localstack.config.DEFAULT_LAMBDA_CONTAINER_REGISTRY": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_LAMBDA_CONTAINER_REGISTRY"
  },
  "type": "import"
 },
 "localstack.config.DEFAULT_PORT_WEB_UI": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_PORT_WEB_UI"
  },
  "type": "import"
 },
 "localstack.config.DEFAULT_REGION": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "localstack.config.DEFAULT_SERVICE_PORTS": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_SERVICE_PORTS"
  },
  "type": "import"
 },
 "localstack.config.DOCKER_BRIDGE_IP": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "localstack.config.DOCKER_CMD": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "localstack.config.DOCKER_FLAGS": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "localstack.config.DOCKER_HOST_FROM_CONTAINER": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "localstack.config.DOCKER_SOCK": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "localstack.config.DYNAMODB_ERROR_PROBABILITY": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "localstack.config.EXTRA_CORS_ALLOWED_HEADERS": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "localstack.config.EXTRA_CORS_EXPOSE_HEADERS": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "localstack.config.FALSE_STRINGS": {
  "data": {
   "shadows": "localstack.constants.FALSE_STRINGS"
  },
  "type": "import"
 },
 "localstack.config.HOSTNAME": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "localstack.config.HOSTNAME_EXTERNAL": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "localstack.config.HOST_TMP_FOLDER": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "localstack.config.INBOUND_GATEWAY_URL_PATTERN": {
  "data": {
   "lineno": 294
  },
  "type": "constant"
 },
 "localstack.config.KINESIS_ERROR_PROBABILITY": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "localstack.config.KINESIS_LATENCY": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.config.KINESIS_SHARD_LIMIT": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "localstack.config.LAMBDA_CONTAINER_REGISTRY": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "localstack.config.LAMBDA_DOCKER_NETWORK": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "localstack.config.LAMBDA_EXECUTOR": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "localstack.config.LAMBDA_FALLBACK_URL": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "localstack.config.LAMBDA_JAVA_OPTS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.config.LAMBDA_REMOTE_DOCKER": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "localstack.config.LOCALHOST": {
  "data": {
   "shadows": "localstack.constants.LOCALHOST"
  },
  "type": "import"
 },
 "localstack.config.LOCALSTACK_HOSTNAME": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "localstack.config.PATH_USER_REQUEST": {
  "data": {
   "shadows": "localstack.constants.PATH_USER_REQUEST"
  },
  "type": "import"
 },
 "localstack.config.PORT_WEB_UI": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "localstack.config.PORT_WEB_UI_SSL": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "localstack.config.SQS_PORT_EXTERNAL": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "localstack.config.START_WEB": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "localstack.config.Session": {
  "data": {
   "shadows": "boto3.Session"
  },
  "type": "import"
 },
 "localstack.config.TMP_FOLDER": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "localstack.config.TRUE_STRINGS": {
  "data": {
   "shadows": "localstack.constants.TRUE_STRINGS"
  },
  "type": "import"
 },
 "localstack.config.TRUE_VALUES": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.config.USE_PROFILER": {
  "data": {
   "lineno": 291
  },
  "type": "constant"
 },
 "localstack.config.USE_SSL": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "localstack.config.VALID_REGIONS": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "localstack.config.candidates": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "localstack.config.clean_key": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "localstack.config.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "localstack.config.has_docker": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "Exception",
    "localstack.config.os",
    "localstack.config.subprocess",
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.config.in_docker": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "localstack.config.os",
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.config.is_in_docker": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "localstack.config.is_linux": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "isinstance",
    "localstack.config.six",
    "localstack.config.subprocess"
   ]
  },
  "type": "function"
 },
 "localstack.config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.config.no_proxy": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "localstack.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.config.parse_service_ports": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "Exception",
    "int",
    "len",
    "localstack.config.os",
    "localstack.config.re",
    "localstack.constants.DEFAULT_SERVICE_PORTS",
    "localstack.constants.DEFAULT_SERVICE_PORTS.get"
   ]
  },
  "type": "function"
 },
 "localstack.config.ping": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "localstack.config.platform",
    "localstack.config.subprocess"
   ]
  },
  "type": "function"
 },
 "localstack.config.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "localstack.config.populate_configs": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "globals",
    "localstack.config.LOCALSTACK_HOSTNAME",
    "localstack.config.USE_SSL",
    "localstack.config.os",
    "localstack.config.parse_service_ports",
    "localstack.config.six",
    "localstack.constants.DEFAULT_SERVICE_PORTS"
   ]
  },
  "type": "function"
 },
 "localstack.config.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.config.service_port": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "localstack.config.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.config.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "localstack.config.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "localstack.config.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "localstack.constants": {
  "data": {
   "symbols_in_volume": [
    "localstack.constants.LOCALSTACK_ROOT_FOLDER",
    "localstack.constants.LOCALSTACK_VENV_FOLDER",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.constants.os"
   ]
  },
  "type": "module"
 },
 "localstack.constants.API_ENDPOINT": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "localstack.constants.APPLICATION_AMZ_JSON_1_0": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "localstack.constants.APPLICATION_AMZ_JSON_1_1": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "localstack.constants.APPLICATION_JSON": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "localstack.constants.APPLICATION_X_WWW_FORM_URLENCODED": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "localstack.constants.BIND_HOST": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "localstack.constants.CONFIG_UPDATE_PATH": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_LAMBDA_CONTAINER_REGISTRY": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_PORT_APIGATEWAY_BACKEND": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_PORT_CLOUDFORMATION_BACKEND": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_PORT_DYNAMODB_BACKEND": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_PORT_EC2_BACKEND": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_PORT_ELASTICSEARCH_BACKEND": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_PORT_IAM_BACKEND": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_PORT_KINESIS_BACKEND": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_PORT_S3_BACKEND": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_PORT_SNS_BACKEND": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_PORT_SQS_BACKEND": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_PORT_STEPFUNCTIONS_BACKEND": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_PORT_WEB_UI": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "localstack.constants.DEFAULT_SERVICE_PORTS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "localstack.constants.DOCKER_IMAGE_NAME": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "localstack.constants.DYNAMODB_JAR_URL": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "localstack.constants.DYNAMODB_JAR_URL_ALPINE": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "localstack.constants.ELASTICMQ_JAR_URL": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "localstack.constants.ELASTICSEARCH_DELETE_MODULES": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "localstack.constants.ELASTICSEARCH_JAR_URL": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "localstack.constants.ELASTICSEARCH_PLUGIN_LIST": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "localstack.constants.ENV_DEV": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.constants.ENV_INTERNAL_TEST_RUN": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "localstack.constants.FALSE_STRINGS": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "localstack.constants.LAMBDA_TEST_ROLE": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "localstack.constants.LOCALHOST": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "localstack.constants.LOCALSTACK_INFRA_PROCESS": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "localstack.constants.LOCALSTACK_MAVEN_VERSION": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "localstack.constants.LOCALSTACK_ROOT_FOLDER": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "localstack.constants.LOCALSTACK_VENV_FOLDER": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "localstack.constants.LOCALSTACK_WEB_PROCESS": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "localstack.constants.MOTO_ACCOUNT_ID": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "localstack.constants.PATH_USER_REQUEST": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "localstack.constants.REGION_LOCAL": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "localstack.constants.STEPFUNCTIONS_ZIP_URL": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "localstack.constants.STS_JAR_URL": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "localstack.constants.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "localstack.constants.TRUE_STRINGS": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "localstack.constants.VERSION": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "localstack.constants.localstack_client.config": {
  "data": {
   "shadows": "localstack_client.config"
  },
  "type": "import"
 },
 "localstack.constants.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.dashboard": {
  "data": {},
  "type": "module"
 },
 "localstack.dashboard.api": {
  "data": {
   "symbols_in_volume": [
    "flask.Flask",
    "localstack.dashboard.api.app",
    "localstack.dashboard.api.os",
    "localstack.dashboard.api.root_path",
    "localstack.dashboard.api.web_dir"
   ]
  },
  "type": "module"
 },
 "localstack.dashboard.api.Environment": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack.Environment"
  },
  "type": "import"
 },
 "localstack.dashboard.api.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "localstack.dashboard.api.LOCALSTACK_WEB_PROCESS": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_WEB_PROCESS"
  },
  "type": "import"
 },
 "localstack.dashboard.api.VERSION": {
  "data": {
   "shadows": "localstack.constants.VERSION"
  },
  "type": "import"
 },
 "localstack.dashboard.api.app": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.dashboard.api.canonicalize_api_names": {
  "data": {
   "shadows": "localstack.utils.bootstrap.canonicalize_api_names"
  },
  "type": "import"
 },
 "localstack.dashboard.api.common": {
  "data": {
   "shadows": "localstack.utils.common"
  },
  "type": "import"
 },
 "localstack.dashboard.api.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.dashboard.api.ensure_webapp_installed": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "localstack.dashboard.api.os",
    "localstack.dashboard.api.web_dir",
    "localstack.utils.common.run",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.api.generic_proxy": {
  "data": {
   "shadows": "localstack.services.generic_proxy"
  },
  "type": "import"
 },
 "localstack.dashboard.api.get_graph": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "flask.jsonify",
    "get_payload",
    "localstack.dashboard.api.app",
    "localstack.dashboard.infra.get_graph",
    "localstack.utils.aws.aws_stack.Environment.from_string"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.api.get_kinesis_events": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "flask.jsonify",
    "get_payload",
    "localstack.dashboard.api.app",
    "localstack.dashboard.infra.get_kinesis_events",
    "localstack.utils.aws.aws_stack.Environment.from_string"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.api.get_lambda_code": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "flask.jsonify",
    "get_payload",
    "localstack.dashboard.api.app",
    "localstack.dashboard.infra.get_lambda_code",
    "localstack.utils.aws.aws_stack.Environment.from_string"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.api.get_payload": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "flask.request.data",
    "localstack.dashboard.api.json",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.api.get_status": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.dashboard.api.app",
    "localstack.services.infra.get_services_status"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.api.health": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.dashboard.api.app"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.api.hello": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "flask.render_template",
    "localstack.dashboard.api.app"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.api.infra": {
  "data": {
   "shadows": "localstack.dashboard.infra"
  },
  "type": "import"
 },
 "localstack.dashboard.api.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.dashboard.api.jsonify": {
  "data": {
   "shadows": "flask.jsonify"
  },
  "type": "import"
 },
 "localstack.dashboard.api.load_plugins": {
  "data": {
   "shadows": "localstack.utils.bootstrap.load_plugins"
  },
  "type": "import"
 },
 "localstack.dashboard.api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.dashboard.api.render_template": {
  "data": {
   "shadows": "flask.render_template"
  },
  "type": "import"
 },
 "localstack.dashboard.api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "localstack.dashboard.api.root_path": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.dashboard.api.send_from_directory": {
  "data": {
   "shadows": "flask.send_from_directory"
  },
  "type": "import"
 },
 "localstack.dashboard.api.send_static": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "flask.send_from_directory",
    "localstack.dashboard.api.app",
    "localstack.dashboard.api.web_dir"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.api.serve": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "localstack.config.PORT_WEB_UI_SSL",
    "localstack.config.USE_SSL",
    "localstack.constants.LOCALSTACK_WEB_PROCESS",
    "localstack.dashboard.api.app",
    "localstack.dashboard.api.ensure_webapp_installed",
    "localstack.dashboard.api.os",
    "localstack.services.generic_proxy.serve_flask_app",
    "localstack.services.infra.start_proxy",
    "localstack.utils.bootstrap.canonicalize_api_names",
    "localstack.utils.bootstrap.load_plugins"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.api.services_infra": {
  "data": {
   "shadows": "localstack.services.infra"
  },
  "type": "import"
 },
 "localstack.dashboard.api.set_status": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "flask.jsonify",
    "get_payload",
    "localstack.dashboard.api.app",
    "localstack.services.infra.set_service_status"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.api.spec": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask_swagger.swagger",
    "localstack.constants.VERSION",
    "localstack.dashboard.api.app"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.api.swagger": {
  "data": {
   "shadows": "flask_swagger.swagger"
  },
  "type": "import"
 },
 "localstack.dashboard.api.web_dir": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "localstack.dashboard.infra": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.dashboard.infra.logging",
    "localstack.dashboard.infra.os",
    "localstack.dashboard.infra.tempfile"
   ]
  },
  "type": "module"
 },
 "localstack.dashboard.infra.AWS_CACHE_TIMEOUT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.AWS_LAMBDA_CODE_CACHE_TIMEOUT": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.DEFAULT_REGION": {
  "data": {
   "shadows": "localstack.config.DEFAULT_REGION"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.DynamoDB": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.DynamoDB"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.DynamoDBStream": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.DynamoDBStream"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.ElasticSearch": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.ElasticSearch"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.EventSource": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.EventSource"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.FirehoseStream": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.FirehoseStream"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.KINESIS_RECENT_EVENTS_TIME_DIFF_SECS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.KinesisShard": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.KinesisShard"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.KinesisStream": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.KinesisStream"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.LOG": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.LambdaFunction": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.LambdaFunction"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.MOCK_OBJ": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.S3Bucket": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.S3Bucket"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.S3Notification": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.S3Notification"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.SqsQueue": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.SqsQueue"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.TMP_DOWNLOAD_CACHE_MAX_AGE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.TMP_DOWNLOAD_FILE_PATTERN": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.aws_cmd": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "localstack.dashboard.infra.socket",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.get_local_service_url",
    "localstack.utils.aws.aws_stack.is_local_env",
    "localstack.utils.common.is_port_open"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.clean_cache": {
  "data": {
   "shadows": "localstack.utils.common.clean_cache"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.cmd_dynamodb": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "localstack.dashboard.infra.run_aws_cmd"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.cmd_es": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "localstack.dashboard.infra.run_aws_cmd"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.cmd_firehose": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "localstack.dashboard.infra.run_aws_cmd"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.cmd_kinesis": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "localstack.dashboard.infra.run_aws_cmd"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.cmd_lambda": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "localstack.dashboard.infra.run_aws_cmd"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.cmd_s3api": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "localstack.dashboard.infra.run_aws_cmd"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.cmd_sqs": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "localstack.dashboard.infra.run_aws_cmd"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.download": {
  "data": {
   "shadows": "localstack.utils.common.download"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.extract_endpoints": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "localstack.dashboard.infra.re",
    "localstack.dashboard.infra.resolve_string_or_variable",
    "localstack.utils.aws.aws_models.DynamoDB",
    "localstack.utils.aws.aws_models.ElasticSearch",
    "localstack.utils.aws.aws_models.EventSource.get",
    "localstack.utils.aws.aws_models.FirehoseStream",
    "localstack.utils.aws.aws_models.S3Bucket",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_dynamo_dbs": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "localstack.dashboard.infra.cmd_dynamodb",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.socket",
    "localstack.utils.common.parallelize"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_dynamo_dbs.handle": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "filter",
    "localstack.dashboard.infra.cmd_dynamodb",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_models.DynamoDB"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_elasticsearch_domains": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "localstack.dashboard.infra.cmd_es",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.socket",
    "localstack.utils.common.parallelize"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_elasticsearch_domains.handle": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "filter",
    "localstack.dashboard.infra.cmd_es",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_models.ElasticSearch"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_firehose_streams": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "filter",
    "localstack.dashboard.infra.cmd_firehose",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.re",
    "localstack.dashboard.infra.socket",
    "localstack.utils.aws.aws_models.EventSource.get",
    "localstack.utils.aws.aws_models.FirehoseStream"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_graph": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "isinstance",
    "localstack.dashboard.infra.get_dynamo_dbs",
    "localstack.dashboard.infra.get_elasticsearch_domains",
    "localstack.dashboard.infra.get_firehose_streams",
    "localstack.dashboard.infra.get_kinesis_streams",
    "localstack.dashboard.infra.get_lambda_functions",
    "localstack.dashboard.infra.get_s3_buckets",
    "localstack.dashboard.infra.get_sqs_queues",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_models.DynamoDBStream",
    "localstack.utils.common.short_uid"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_kinesis_events": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.kinesis_get_latest_records",
    "localstack.utils.common.mktime"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_kinesis_shards": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "localstack.dashboard.infra.cmd_kinesis",
    "localstack.dashboard.infra.json",
    "localstack.utils.aws.aws_models.KinesisShard"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_kinesis_streams": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "filter",
    "get_kinesis_shards",
    "localstack.dashboard.infra.MOCK_OBJ",
    "localstack.dashboard.infra.cmd_kinesis",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.re",
    "localstack.dashboard.infra.socket",
    "localstack.utils.aws.aws_models.KinesisStream"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_lambda_code": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "Exception",
    "hash",
    "len",
    "localstack.dashboard.infra.AWS_LAMBDA_CODE_CACHE_TIMEOUT",
    "localstack.dashboard.infra.MOCK_OBJ",
    "localstack.dashboard.infra.TMP_DOWNLOAD_CACHE_MAX_AGE",
    "localstack.dashboard.infra.TMP_DOWNLOAD_FILE_PATTERN",
    "localstack.dashboard.infra.cmd_lambda",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.last_cache_cleanup_time",
    "localstack.dashboard.infra.os",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.is_local_env",
    "localstack.utils.common.clean_cache",
    "localstack.utils.common.download",
    "localstack.utils.common.load_file",
    "localstack.utils.common.md5",
    "localstack.utils.common.mkdir",
    "localstack.utils.common.rm_rf",
    "localstack.utils.common.unzip",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_lambda_event_sources": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "localstack.dashboard.infra.MOCK_OBJ",
    "localstack.dashboard.infra.cmd_lambda",
    "localstack.dashboard.infra.json"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_lambda_functions": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "localstack.dashboard.infra.MOCK_OBJ",
    "localstack.dashboard.infra.cmd_lambda",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.socket",
    "localstack.utils.common.parallelize"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_lambda_functions.handle": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "Exception",
    "filter",
    "get_lambda_code",
    "get_lambda_event_sources",
    "localstack.dashboard.infra.LOG",
    "localstack.dashboard.infra.extract_endpoints",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_models.EventSource.get",
    "localstack.utils.aws.aws_models.LambdaFunction"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_s3_buckets": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "localstack.dashboard.infra.cmd_s3api",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.socket",
    "localstack.utils.common.parallelize"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_s3_buckets.handle": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "Exception",
    "filter",
    "localstack.dashboard.infra.cmd_s3api",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.re",
    "localstack.utils.aws.aws_models.EventSource.get",
    "localstack.utils.aws.aws_models.S3Bucket",
    "localstack.utils.aws.aws_models.S3Notification",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.get_sqs_queues": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "filter",
    "localstack.dashboard.infra.cmd_sqs",
    "localstack.dashboard.infra.json",
    "localstack.dashboard.infra.re",
    "localstack.dashboard.infra.socket",
    "localstack.utils.aws.aws_models.SqsQueue",
    "localstack.utils.aws.aws_stack.sqs_queue_arn"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.is_port_open": {
  "data": {
   "shadows": "localstack.utils.common.is_port_open"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.last_cache_cleanup_time": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.dashboard.infra.load_file": {
  "data": {
   "shadows": "localstack.utils.common.load_file"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.md5": {
  "data": {
   "shadows": "localstack.utils.common.md5"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.mkdir": {
  "data": {
   "shadows": "localstack.utils.common.mkdir"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.mktime": {
  "data": {
   "shadows": "localstack.utils.common.mktime"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.new_tmp_file": {
  "data": {
   "shadows": "localstack.utils.common.new_tmp_file"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.parallelize": {
  "data": {
   "shadows": "localstack.utils.common.parallelize"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.read_kinesis_iterator": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "localstack.dashboard.infra.cmd_kinesis",
    "localstack.dashboard.infra.json",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.resolve_string_or_variable": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "localstack.dashboard.infra.LOG",
    "localstack.dashboard.infra.re"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.rm_rf": {
  "data": {
   "shadows": "localstack.utils.common.rm_rf"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.run": {
  "data": {
   "shadows": "localstack.utils.common.run"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.run_aws_cmd": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "aws_cmd",
    "localstack.dashboard.infra.run_cached"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.run_cached": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception",
    "localstack.config.DEFAULT_REGION",
    "localstack.dashboard.infra.AWS_CACHE_TIMEOUT",
    "localstack.dashboard.infra.LOG",
    "localstack.dashboard.infra.os",
    "localstack.utils.common.load_file",
    "localstack.utils.common.new_tmp_file",
    "localstack.utils.common.run",
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.dashboard.infra.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.dashboard.infra.unzip": {
  "data": {
   "shadows": "localstack.utils.common.unzip"
  },
  "type": "import"
 },
 "localstack.plugins": {
  "data": {},
  "type": "module"
 },
 "localstack.plugins.Plugin": {
  "data": {
   "shadows": "localstack.services.infra.Plugin"
  },
  "type": "import"
 },
 "localstack.plugins.apigateway_listener": {
  "data": {
   "shadows": "localstack.services.apigateway.apigateway_listener"
  },
  "type": "import"
 },
 "localstack.plugins.cloudformation_listener": {
  "data": {
   "shadows": "localstack.services.cloudformation.cloudformation_listener"
  },
  "type": "import"
 },
 "localstack.plugins.cloudformation_starter": {
  "data": {
   "shadows": "localstack.services.cloudformation.cloudformation_starter"
  },
  "type": "import"
 },
 "localstack.plugins.dynamodb_listener": {
  "data": {
   "shadows": "localstack.services.dynamodb.dynamodb_listener"
  },
  "type": "import"
 },
 "localstack.plugins.dynamodb_starter": {
  "data": {
   "shadows": "localstack.services.dynamodb.dynamodb_starter"
  },
  "type": "import"
 },
 "localstack.plugins.es_starter": {
  "data": {
   "shadows": "localstack.services.es.es_starter"
  },
  "type": "import"
 },
 "localstack.plugins.iam_listener": {
  "data": {
   "shadows": "localstack.services.iam.iam_listener"
  },
  "type": "import"
 },
 "localstack.plugins.iam_starter": {
  "data": {
   "shadows": "localstack.services.iam.iam_starter"
  },
  "type": "import"
 },
 "localstack.plugins.kinesis_listener": {
  "data": {
   "shadows": "localstack.services.kinesis.kinesis_listener"
  },
  "type": "import"
 },
 "localstack.plugins.kinesis_starter": {
  "data": {
   "shadows": "localstack.services.kinesis.kinesis_starter"
  },
  "type": "import"
 },
 "localstack.plugins.register_localstack_plugins": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception",
    "localstack.plugins.sys",
    "localstack.services.apigateway.apigateway_listener.UPDATE_APIGATEWAY",
    "localstack.services.cloudformation.cloudformation_listener.UPDATE_CLOUDFORMATION",
    "localstack.services.cloudformation.cloudformation_starter.start_cloudformation",
    "localstack.services.dynamodb.dynamodb_listener.UPDATE_DYNAMODB",
    "localstack.services.dynamodb.dynamodb_starter.check_dynamodb",
    "localstack.services.dynamodb.dynamodb_starter.start_dynamodb",
    "localstack.services.es.es_starter.check_elasticsearch",
    "localstack.services.es.es_starter.start_elasticsearch",
    "localstack.services.iam.iam_listener.UPDATE_IAM",
    "localstack.services.iam.iam_starter.start_iam",
    "localstack.services.infra.Plugin",
    "localstack.services.infra.register_plugin",
    "localstack.services.infra.start_apigateway",
    "localstack.services.infra.start_cloudwatch",
    "localstack.services.infra.start_cloudwatch_logs",
    "localstack.services.infra.start_dynamodbstreams",
    "localstack.services.infra.start_ec2",
    "localstack.services.infra.start_elasticsearch_service",
    "localstack.services.infra.start_events",
    "localstack.services.infra.start_firehose",
    "localstack.services.infra.start_lambda",
    "localstack.services.infra.start_redshift",
    "localstack.services.infra.start_route53",
    "localstack.services.infra.start_secretsmanager",
    "localstack.services.infra.start_ses",
    "localstack.services.infra.start_sns",
    "localstack.services.infra.start_ssm",
    "localstack.services.infra.start_sts",
    "localstack.services.kinesis.kinesis_listener.UPDATE_KINESIS",
    "localstack.services.kinesis.kinesis_starter.check_kinesis",
    "localstack.services.kinesis.kinesis_starter.start_kinesis",
    "localstack.services.s3.s3_listener.UPDATE_S3",
    "localstack.services.s3.s3_starter.check_s3",
    "localstack.services.s3.s3_starter.start_s3",
    "localstack.services.sns.sns_listener.UPDATE_SNS",
    "localstack.services.sqs.sqs_listener.UPDATE_SQS",
    "localstack.services.sqs.sqs_starter.start_sqs",
    "localstack.services.stepfunctions.stepfunctions_listener.UPDATE_STEPFUNCTIONS",
    "localstack.services.stepfunctions.stepfunctions_starter.start_stepfunctions",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.plugins.register_plugin": {
  "data": {
   "shadows": "localstack.services.infra.register_plugin"
  },
  "type": "import"
 },
 "localstack.plugins.s3_listener": {
  "data": {
   "shadows": "localstack.services.s3.s3_listener"
  },
  "type": "import"
 },
 "localstack.plugins.s3_starter": {
  "data": {
   "shadows": "localstack.services.s3.s3_starter"
  },
  "type": "import"
 },
 "localstack.plugins.sns_listener": {
  "data": {
   "shadows": "localstack.services.sns.sns_listener"
  },
  "type": "import"
 },
 "localstack.plugins.sqs_listener": {
  "data": {
   "shadows": "localstack.services.sqs.sqs_listener"
  },
  "type": "import"
 },
 "localstack.plugins.sqs_starter": {
  "data": {
   "shadows": "localstack.services.sqs.sqs_starter"
  },
  "type": "import"
 },
 "localstack.plugins.start_apigateway": {
  "data": {
   "shadows": "localstack.services.infra.start_apigateway"
  },
  "type": "import"
 },
 "localstack.plugins.start_cloudwatch": {
  "data": {
   "shadows": "localstack.services.infra.start_cloudwatch"
  },
  "type": "import"
 },
 "localstack.plugins.start_cloudwatch_logs": {
  "data": {
   "shadows": "localstack.services.infra.start_cloudwatch_logs"
  },
  "type": "import"
 },
 "localstack.plugins.start_dynamodbstreams": {
  "data": {
   "shadows": "localstack.services.infra.start_dynamodbstreams"
  },
  "type": "import"
 },
 "localstack.plugins.start_ec2": {
  "data": {
   "shadows": "localstack.services.infra.start_ec2"
  },
  "type": "import"
 },
 "localstack.plugins.start_elasticsearch_service": {
  "data": {
   "shadows": "localstack.services.infra.start_elasticsearch_service"
  },
  "type": "import"
 },
 "localstack.plugins.start_events": {
  "data": {
   "shadows": "localstack.services.infra.start_events"
  },
  "type": "import"
 },
 "localstack.plugins.start_firehose": {
  "data": {
   "shadows": "localstack.services.infra.start_firehose"
  },
  "type": "import"
 },
 "localstack.plugins.start_lambda": {
  "data": {
   "shadows": "localstack.services.infra.start_lambda"
  },
  "type": "import"
 },
 "localstack.plugins.start_redshift": {
  "data": {
   "shadows": "localstack.services.infra.start_redshift"
  },
  "type": "import"
 },
 "localstack.plugins.start_route53": {
  "data": {
   "shadows": "localstack.services.infra.start_route53"
  },
  "type": "import"
 },
 "localstack.plugins.start_secretsmanager": {
  "data": {
   "shadows": "localstack.services.infra.start_secretsmanager"
  },
  "type": "import"
 },
 "localstack.plugins.start_ses": {
  "data": {
   "shadows": "localstack.services.infra.start_ses"
  },
  "type": "import"
 },
 "localstack.plugins.start_sns": {
  "data": {
   "shadows": "localstack.services.infra.start_sns"
  },
  "type": "import"
 },
 "localstack.plugins.start_ssm": {
  "data": {
   "shadows": "localstack.services.infra.start_ssm"
  },
  "type": "import"
 },
 "localstack.plugins.start_sts": {
  "data": {
   "shadows": "localstack.services.infra.start_sts"
  },
  "type": "import"
 },
 "localstack.plugins.stepfunctions_listener": {
  "data": {
   "shadows": "localstack.services.stepfunctions.stepfunctions_listener"
  },
  "type": "import"
 },
 "localstack.plugins.stepfunctions_starter": {
  "data": {
   "shadows": "localstack.services.stepfunctions.stepfunctions_starter"
  },
  "type": "import"
 },
 "localstack.plugins.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.services": {
  "data": {},
  "type": "module"
 },
 "localstack.services.apigateway": {
  "data": {},
  "type": "module"
 },
 "localstack.services.apigateway.apigateway_listener": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.constants.PATH_USER_REQUEST",
    "localstack.services.apigateway.apigateway_listener.ProxyListenerApiGateway",
    "localstack.services.apigateway.apigateway_listener.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.apigateway.apigateway_listener.APPLICATION_JSON": {
  "data": {
   "shadows": "localstack.constants.APPLICATION_JSON"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.FlaskResponse": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.GATEWAY_RESPONSES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "localstack.services.apigateway.apigateway_listener.LOGGER": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.services.apigateway.apigateway_listener.PATH_REGEX_AUTHORIZERS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "localstack.services.apigateway.apigateway_listener.PATH_REGEX_RESPONSES": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "localstack.services.apigateway.apigateway_listener.PATH_REGEX_USER_REQUEST": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "localstack.services.apigateway.apigateway_listener.PATH_USER_REQUEST": {
  "data": {
   "shadows": "localstack.constants.PATH_USER_REQUEST"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.ProxyListenerApiGateway": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.apigateway.apigateway_listener.ProxyListenerApiGateway.forward_request": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "get_gateway_responses",
    "invoke_rest_api",
    "localstack.services.apigateway.apigateway_listener.PATH_REGEX_AUTHORIZERS",
    "localstack.services.apigateway.apigateway_listener.PATH_REGEX_RESPONSES",
    "localstack.services.apigateway.apigateway_listener.PATH_REGEX_USER_REQUEST",
    "localstack.services.apigateway.apigateway_listener.json",
    "localstack.services.apigateway.apigateway_listener.re",
    "localstack.services.apigateway.helpers.handle_authorizers",
    "localstack.utils.common.to_str",
    "put_gateway_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.ProxyListenerApiGateway.return_response": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "localstack.services.apigateway.apigateway_listener.json",
    "localstack.services.apigateway.apigateway_listener.re",
    "localstack.utils.analytics.event_publisher.EVENT_APIGW_CREATE_API",
    "localstack.utils.analytics.event_publisher.EVENT_APIGW_DELETE_API",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.aws.aws_responses.requests_response",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.TEST_KINESIS_URL": {
  "data": {
   "shadows": "localstack.config.TEST_KINESIS_URL"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.TEST_SQS_URL": {
  "data": {
   "shadows": "localstack.config.TEST_SQS_URL"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.UPDATE_APIGATEWAY": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "localstack.services.apigateway.apigateway_listener.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.common": {
  "data": {
   "shadows": "localstack.utils.common"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.extract_path_params": {
  "data": {
   "shadows": "localstack.services.apigateway.helpers.extract_path_params"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.extract_query_string_params": {
  "data": {
   "shadows": "localstack.services.apigateway.helpers.extract_query_string_params"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.flask_to_requests_response": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses.flask_to_requests_response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.get_cors_response": {
  "data": {
   "shadows": "localstack.services.apigateway.helpers.get_cors_response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.get_gateway_responses": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "item",
    "localstack.services.apigateway.apigateway_listener.GATEWAY_RESPONSES"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.get_gateway_responses.item": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.get_resource_for_path": {
  "data": {
   "shadows": "localstack.services.apigateway.helpers.get_resource_for_path"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.handle_authorizers": {
  "data": {
   "shadows": "localstack.services.apigateway.helpers.handle_authorizers"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.helpers": {
  "data": {
   "shadows": "localstack.services.apigateway.helpers"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.invoke_rest_api": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "flask.Response",
    "function",
    "getattr",
    "int",
    "isinstance",
    "len",
    "list",
    "localstack.config.TEST_KINESIS_URL",
    "localstack.config.TEST_SQS_URL",
    "localstack.constants.APPLICATION_JSON",
    "localstack.services.apigateway.apigateway_listener.LOGGER",
    "localstack.services.apigateway.apigateway_listener.json",
    "localstack.services.apigateway.apigateway_listener.requests",
    "localstack.services.apigateway.helpers.extract_path_params",
    "localstack.services.apigateway.helpers.extract_query_string_params",
    "localstack.services.apigateway.helpers.get_cors_response",
    "localstack.services.apigateway.helpers.get_resource_for_path",
    "localstack.services.apigateway.helpers.get_rest_api_paths",
    "localstack.services.apigateway.helpers.make_error",
    "localstack.services.awslambda.lambda_api.process_apigateway_invocation",
    "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORDS",
    "localstack.utils.aws.aws_responses.flask_to_requests_response",
    "localstack.utils.aws.aws_stack.mock_aws_request_headers",
    "localstack.utils.aws.aws_stack.render_velocity_template",
    "localstack.utils.common.json_safe",
    "localstack.utils.common.make_http_request",
    "localstack.utils.common.to_bytes",
    "requests.models.Response",
    "six.moves.urllib_parse.urljoin"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.kinesis_listener": {
  "data": {
   "shadows": "localstack.services.kinesis.kinesis_listener"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.lambda_api": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.make_error": {
  "data": {
   "shadows": "localstack.services.apigateway.helpers.make_error"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.put_gateway_response": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "localstack.services.apigateway.apigateway_listener.GATEWAY_RESPONSES"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.apigateway_listener.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.requests_response": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses.requests_response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.to_bytes": {
  "data": {
   "shadows": "localstack.utils.common.to_bytes"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.apigateway.apigateway_listener.urljoin": {
  "data": {
   "shadows": "six.moves.urllib_parse.urljoin"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers": {
  "data": {},
  "type": "module"
 },
 "localstack.services.apigateway.helpers.APIGATEWAY_SQS_DATA_INBOUND_TEMPLATE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.services.apigateway.helpers.APPLICATION_JSON": {
  "data": {
   "shadows": "localstack.constants.APPLICATION_JSON"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.AUTHORIZERS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.services.apigateway.helpers.PATH_REGEX_MAIN": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.services.apigateway.helpers.PATH_REGEX_SUB": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "localstack.services.apigateway.helpers.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.add_authorizer": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "localstack.services.apigateway.helpers.AUTHORIZERS",
    "localstack.services.apigateway.helpers.get_api_id_from_path",
    "localstack.utils.common.clone",
    "localstack.utils.common.short_uid"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.common": {
  "data": {
   "shadows": "localstack.utils.common"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.connect_api_gateway_to_sqs": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.apigateway.helpers.APIGATEWAY_SQS_DATA_INBOUND_TEMPLATE",
    "localstack.utils.aws.aws_stack.create_api_gateway",
    "localstack.utils.aws.aws_stack.extract_region_from_arn",
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.aws.aws_stack.sqs_queue_name"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.extract_path_params": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "enumerate",
    "localstack.services.apigateway.helpers.tokenize_path",
    "localstack.utils.common.json_safe"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.extract_query_string_params": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "len",
    "six.moves.urllib.parse.parse_qs",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.get_api_id_from_path": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "localstack.services.apigateway.helpers.PATH_REGEX_MAIN",
    "localstack.services.apigateway.helpers.PATH_REGEX_SUB",
    "localstack.services.apigateway.helpers.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.get_authorizers": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "localstack.services.apigateway.helpers.AUTHORIZERS",
    "localstack.services.apigateway.helpers.get_api_id_from_path"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.get_cors_response": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.get_resource_for_path": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "Exception",
    "len",
    "localstack.services.apigateway.helpers.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.get_rest_api_paths": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.get_apigateway_path_for_resource"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.handle_authorizers": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "localstack.services.apigateway.helpers.add_authorizer",
    "localstack.services.apigateway.helpers.get_authorizers",
    "localstack.services.apigateway.helpers.make_error",
    "localstack.services.apigateway.helpers.make_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.make_error": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "localstack.services.apigateway.helpers.json",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.make_response": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "localstack.constants.APPLICATION_JSON",
    "localstack.services.apigateway.helpers.json",
    "localstack.utils.aws.aws_responses.requests_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.requests_response": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses.requests_response"
  },
  "type": "import"
 },
 "localstack.services.apigateway.helpers.tokenize_path": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "localstack.services.apigateway.helpers.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse"
  },
  "type": "import"
 },
 "localstack.services.awslambda": {
  "data": {},
  "type": "module"
 },
 "localstack.services.awslambda.lambda_api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "flask.Flask",
    "localstack.config.LAMBDA_EXECUTOR",
    "localstack.config.TMP_FOLDER",
    "localstack.services.awslambda.lambda_api.APP_NAME",
    "localstack.services.awslambda.lambda_api.logging",
    "localstack.services.awslambda.lambda_api.threading",
    "localstack.services.awslambda.lambda_executors.AVAILABLE_EXECUTORS.get",
    "localstack.services.awslambda.lambda_executors.DEFAULT_EXECUTOR",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE2",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE21",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_JAVA8",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS610",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS810",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PYTHON27",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PYTHON36",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_RUBY",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_RUBY25"
   ]
  },
  "type": "module"
 },
 "localstack.services.awslambda.lambda_api.APP_NAME": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.ARCHIVE_FILE_PATTERN": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.BUCKET_MARKER_LOCAL": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.ClientError": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_api.ClientError.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.ClientError",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.ClientError.get_response": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "error_response",
    "flask.Response",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.DO_USE_DOCKER": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.IAM_POLICY_VERSION": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_HANDLER": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_RUNTIME": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_STARTING_POSITION": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_TIMEOUT": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_EXECUTOR": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_JAR_FILE_NAME": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIMES": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_CUSTOM_RUNTIME": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_CUSTOM_RUNTIME"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_DOTNETCORE2": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE2"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_DOTNETCORE21": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE21"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_GOLANG": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_GOLANG"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_JAVA8": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_JAVA8"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_NODEJS": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_NODEJS610": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS610"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_NODEJS810": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS810"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_PYTHON27": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PYTHON27"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_PYTHON36": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PYTHON36"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_RUBY": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_RUBY"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_RUBY25": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_RUBY25"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_SCRIPT_PATTERN": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.LAMBDA_ZIP_FILE_NAME": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.LOG": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.LambdaContext": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_api.LambdaContext.__init__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.LambdaContext.get_remaining_time_in_millis": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.LambdaFunction": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.LambdaFunction"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.PATH_ROOT": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.POLICY_NAME_PATTERN": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.StringIO": {
  "data": {
   "shadows": "six.moves.cStringIO"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.TIMESTAMP_FORMAT_MILLIS": {
  "data": {
   "shadows": "localstack.utils.common.TIMESTAMP_FORMAT_MILLIS"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.TMP_FILES": {
  "data": {
   "shadows": "localstack.utils.common.TMP_FILES"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.add_event_source": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "float",
    "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_STARTING_POSITION",
    "localstack.services.awslambda.lambda_api.event_source_mappings",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.time",
    "localstack.services.awslambda.lambda_api.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.add_function_mapping": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.func_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.add_permission": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.data",
    "localstack.services.awslambda.lambda_api.IAM_POLICY_VERSION",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.POLICY_NAME_PATTERN",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.json",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.common.short_uid",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.app": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.arn_to_lambda": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.aws_responses": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.before_request": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "flask.request.environ",
    "flask.request.headers.get",
    "localstack.services.awslambda.lambda_api.app"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.cleanup": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.LAMBDA_EXECUTOR",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.event_source_mappings"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.cloudwatched": {
  "data": {
   "shadows": "localstack.utils.cloudwatch.cloudwatch_util.cloudwatched"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.create_alias": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.data",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.do_update_alias",
    "localstack.services.awslambda.lambda_api.error_response",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.json",
    "localstack.services.awslambda.lambda_api.not_found_error"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.create_event_source_mapping": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.data",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.add_event_source",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.json",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.create_function": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime.utcnow",
    "flask.Response",
    "flask.jsonify",
    "flask.request.data",
    "isinstance",
    "localstack.services.awslambda.lambda_api.ClientError",
    "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_TIMEOUT",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.error_response",
    "localstack.services.awslambda.lambda_api.format_func_details",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.json",
    "localstack.services.awslambda.lambda_api.publish_new_function_version",
    "localstack.services.awslambda.lambda_api.set_function_code",
    "localstack.services.awslambda.lambda_api.traceback",
    "localstack.services.awslambda.lambda_api.uuid",
    "localstack.utils.analytics.event_publisher.EVENT_LAMBDA_CREATE_FUNC",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.aws.aws_models.LambdaFunction",
    "localstack.utils.common.isoformat_milliseconds",
    "localstack.utils.common.to_str",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.delete_event_source": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "enumerate",
    "localstack.services.awslambda.lambda_api.event_source_mappings"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.delete_event_source_mapping": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.delete_event_source"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.delete_function": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "KeyError",
    "flask.jsonify",
    "len",
    "localstack.services.awslambda.lambda_api.LAMBDA_EXECUTOR",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.event_source_mappings",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.not_found_error",
    "localstack.utils.analytics.event_publisher.EVENT_LAMBDA_DELETE_FUNC",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.do_list_functions": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "format_func_details",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.utils.aws.aws_models.LambdaFunction",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.do_list_versions": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.get_function_version",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.do_update_alias": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.ensure_readable": {
  "data": {
   "shadows": "localstack.utils.common.ensure_readable"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.error_response": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.LOG",
    "localstack.utils.aws.aws_responses.flask_error_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.event_source_mappings": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.exec_lambda_code": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "localstack.services.awslambda.lambda_api.LAMBDA_SCRIPT_PATTERN",
    "localstack.services.awslambda.lambda_api.LOG",
    "localstack.services.awslambda.lambda_api.exec_mutex",
    "localstack.services.awslambda.lambda_api.imp",
    "localstack.services.awslambda.lambda_api.os",
    "localstack.services.awslambda.lambda_api.sys",
    "localstack.services.awslambda.lambda_api.traceback",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.common.save_file",
    "localstack.utils.common.short_uid"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.exec_mutex": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_api.format_func_details": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.forward_to_fallback_url": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "localstack.config.LAMBDA_FALLBACK_URL",
    "localstack.config.LAMBDA_FALLBACK_URL.replace",
    "localstack.config.LAMBDA_FALLBACK_URL.startswith",
    "localstack.services.awslambda.lambda_api.ClientError",
    "localstack.services.awslambda.lambda_api.re",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.create_dynamodb_table",
    "localstack.utils.common.now_utc",
    "localstack.utils.common.safe_requests.post",
    "localstack.utils.common.short_uid",
    "six.moves.urllib.parse.urlparse",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.func_arn": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.lambda_function_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.generic_proxy": {
  "data": {
   "shadows": "localstack.services.generic_proxy"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.get_alias": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.not_found_error"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.get_event_source_mapping": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "flask.jsonify",
    "len",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.event_source_mappings",
    "localstack.services.awslambda.lambda_api.not_found_error"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.get_event_sources": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.event_source_mappings",
    "localstack.services.awslambda.lambda_api.func_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.get_function": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.url",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.do_list_functions",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.not_found_error"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.get_function_code": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "flask.Response",
    "localstack.services.awslambda.lambda_api.LAMBDA_ZIP_FILE_NAME",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.utils.common.load_file"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.get_function_configuration": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.format_func_details",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.not_found_error"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.get_function_version": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "format_func_details",
    "localstack.services.awslambda.lambda_api.arn_to_lambda"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.get_handler_file_from_name": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_RUNTIME",
    "localstack.services.awslambda.lambda_api.os",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_CUSTOM_RUNTIME",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE2",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE21",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_GOLANG",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_RUBY"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.get_handler_function_from_name": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_RUNTIME",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE2",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE21"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.get_java_handler": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "localstack.services.awslambda.lambda_api.ClientError",
    "localstack.services.awslambda.lambda_api.LOG",
    "localstack.services.awslambda.lambda_api.error_response",
    "localstack.services.awslambda.lambda_api.zipfile",
    "localstack.utils.common.is_jar_archive",
    "localstack.utils.common.new_tmp_file",
    "localstack.utils.common.save_file"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.get_java_handler.execute": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.EXECUTOR_LOCAL.execute_java_lambda"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.get_lambda_policy": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.json",
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.get_policy": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.get_lambda_policy"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.get_zip_bytes": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "Exception",
    "io.BytesIO",
    "localstack.services.awslambda.lambda_api.ClientError",
    "localstack.services.awslambda.lambda_api.base64",
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.invoke_function": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "Exception",
    "_create_response",
    "flask.request.args.get",
    "flask.request.environ.get",
    "flask.request.get_data",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.error_response",
    "localstack.services.awslambda.lambda_api.forward_to_fallback_url",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.json",
    "localstack.services.awslambda.lambda_api.not_found_error",
    "localstack.services.awslambda.lambda_api.re",
    "localstack.services.awslambda.lambda_api.run_lambda",
    "localstack.utils.common.parse_chunked_data",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.invoke_function._create_response": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "bytes",
    "dict",
    "flask.Response",
    "flask.jsonify",
    "isinstance",
    "list",
    "localstack.services.awslambda.lambda_api.json",
    "localstack.utils.common.is_number",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.is_jar_archive": {
  "data": {
   "shadows": "localstack.utils.common.is_jar_archive"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.is_number": {
  "data": {
   "shadows": "localstack.utils.common.is_number"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.is_zip_file": {
  "data": {
   "shadows": "localstack.utils.common.is_zip_file"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.isoformat_milliseconds": {
  "data": {
   "shadows": "localstack.utils.common.isoformat_milliseconds"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.jsonify": {
  "data": {
   "shadows": "flask.jsonify"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.lambda_executors": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_executors"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.list_aliases": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.not_found_error",
    "sorted"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.list_event_source_mappings": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.args.get",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.event_source_mappings",
    "localstack.services.awslambda.lambda_api.func_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.list_functions": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.do_list_functions"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.list_tags": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.not_found_error"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.list_versions": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.do_list_versions",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.not_found_error"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.load_file": {
  "data": {
   "shadows": "localstack.utils.common.load_file"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.md5": {
  "data": {
   "shadows": "localstack.utils.common.md5"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.mkdir": {
  "data": {
   "shadows": "localstack.utils.common.mkdir"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.new_tmp_file": {
  "data": {
   "shadows": "localstack.utils.common.new_tmp_file"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.not_found_error": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.error_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.now_utc": {
  "data": {
   "shadows": "localstack.utils.common.now_utc"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.parse_chunked_data": {
  "data": {
   "shadows": "localstack.utils.common.parse_chunked_data"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.process_apigateway_invocation": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "localstack.services.awslambda.lambda_api.LOG",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.traceback",
    "run_lambda"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.process_kinesis_records": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "Exception",
    "get_event_sources",
    "localstack.services.awslambda.lambda_api.LOG",
    "localstack.services.awslambda.lambda_api.traceback",
    "localstack.utils.aws.aws_stack.kinesis_stream_arn",
    "run_lambda"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.process_sns_notification": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "Exception",
    "localstack.services.awslambda.lambda_api.LOG",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.traceback",
    "localstack.utils.common.TIMESTAMP_FORMAT_MILLIS",
    "localstack.utils.common.timestamp",
    "run_lambda"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.process_sqs_message": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "Exception",
    "get_event_sources",
    "int",
    "iter",
    "len",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.awslambda.lambda_api.LOG",
    "localstack.services.awslambda.lambda_api.time",
    "localstack.services.awslambda.lambda_api.traceback",
    "localstack.services.awslambda.lambda_api.uuid",
    "localstack.utils.aws.aws_stack.sqs_queue_arn",
    "localstack.utils.common.md5",
    "next",
    "run_lambda",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.publish_new_function_version": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.get_function_version",
    "localstack.services.awslambda.lambda_api.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.publish_version": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.not_found_error",
    "localstack.services.awslambda.lambda_api.publish_new_function_version"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.put_concurrency": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.data",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.json",
    "localstack.services.awslambda.lambda_api.not_found_error"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.remove_permission": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.args.get",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.error_response",
    "localstack.services.awslambda.lambda_api.get_lambda_policy",
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.run": {
  "data": {
   "shadows": "localstack.utils.common.run"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.run_lambda": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "Exception",
    "error_response",
    "localstack.services.awslambda.lambda_api.LAMBDA_EXECUTOR",
    "localstack.services.awslambda.lambda_api.LambdaContext",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.sys",
    "localstack.services.awslambda.lambda_api.traceback",
    "localstack.utils.aws.aws_stack.fix_arn",
    "localstack.utils.cloudwatch.cloudwatch_util.cloudwatched",
    "not_found_error",
    "six.moves.cStringIO"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.safe_requests": {
  "data": {
   "shadows": "localstack.utils.common.safe_requests"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.save_file": {
  "data": {
   "shadows": "localstack.utils.common.save_file"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.serve": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.LAMBDA_EXECUTOR",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.generic_proxy.serve_flask_app"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.set_archive_code": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "len",
    "localstack.config.TMP_FOLDER",
    "localstack.services.awslambda.lambda_api.BUCKET_MARKER_LOCAL",
    "localstack.services.awslambda.lambda_api.LAMBDA_EXECUTOR",
    "localstack.services.awslambda.lambda_api.LAMBDA_ZIP_FILE_NAME",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.base64",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.get_zip_bytes",
    "localstack.services.awslambda.lambda_api.hashlib",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.common.mkdir",
    "localstack.utils.common.save_file",
    "localstack.utils.common.short_uid"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.set_function_code": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "Exception",
    "localstack.config.LAMBDA_REMOTE_DOCKER",
    "localstack.services.awslambda.lambda_api.BUCKET_MARKER_LOCAL",
    "localstack.services.awslambda.lambda_api.ClientError",
    "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_HANDLER",
    "localstack.services.awslambda.lambda_api.LAMBDA_JAR_FILE_NAME",
    "localstack.services.awslambda.lambda_api.LAMBDA_ZIP_FILE_NAME",
    "localstack.services.awslambda.lambda_api.LOG",
    "localstack.services.awslambda.lambda_api.add_function_mapping",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.error_response",
    "localstack.services.awslambda.lambda_api.exec_lambda_code",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.get_handler_file_from_name",
    "localstack.services.awslambda.lambda_api.get_handler_function_from_name",
    "localstack.services.awslambda.lambda_api.get_java_handler",
    "localstack.services.awslambda.lambda_api.get_zip_bytes",
    "localstack.services.awslambda.lambda_api.os",
    "localstack.services.awslambda.lambda_api.set_archive_code",
    "localstack.services.awslambda.lambda_api.use_docker",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_JAVA8",
    "localstack.utils.common.ensure_readable",
    "localstack.utils.common.is_jar_archive",
    "localstack.utils.common.is_zip_file",
    "localstack.utils.common.load_file",
    "localstack.utils.common.run",
    "localstack.utils.common.save_file",
    "localstack.utils.common.unzip"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.set_function_code.generic_handler": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.ClientError"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.tag_resource": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.data",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.json",
    "localstack.services.awslambda.lambda_api.not_found_error"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.timestamp": {
  "data": {
   "shadows": "localstack.utils.common.timestamp"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.untag_resource": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.args.getlist",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.not_found_error"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.unzip": {
  "data": {
   "shadows": "localstack.utils.common.unzip"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.update_alias": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.data",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.do_update_alias",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.json",
    "localstack.services.awslambda.lambda_api.not_found_error"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.update_event_source": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "float",
    "localstack.services.awslambda.lambda_api.event_source_mappings",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.time"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.update_event_source_mapping": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.data",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.json",
    "localstack.services.awslambda.lambda_api.update_event_source"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.update_function_code": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "flask.Response",
    "flask.jsonify",
    "flask.request.data",
    "isinstance",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.format_func_details",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.json",
    "localstack.services.awslambda.lambda_api.set_function_code",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.update_function_configuration": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.data",
    "localstack.services.awslambda.lambda_api.LAMBDA_EXECUTOR",
    "localstack.services.awslambda.lambda_api.PATH_ROOT",
    "localstack.services.awslambda.lambda_api.app",
    "localstack.services.awslambda.lambda_api.arn_to_lambda",
    "localstack.services.awslambda.lambda_api.func_arn",
    "localstack.services.awslambda.lambda_api.json",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlparse"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.use_docker": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "Exception",
    "localstack.config.LAMBDA_EXECUTOR",
    "localstack.services.awslambda.lambda_api.DO_USE_DOCKER",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_api.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_api.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "localstack.config.TMP_FOLDER",
    "localstack.services.awslambda.lambda_executors.EXECUTOR_CONTAINERS_REUSE",
    "localstack.services.awslambda.lambda_executors.EXECUTOR_CONTAINERS_SEPARATE",
    "localstack.services.awslambda.lambda_executors.EXECUTOR_LOCAL",
    "localstack.services.awslambda.lambda_executors.LambdaExecutorLocal",
    "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers",
    "localstack.services.awslambda.lambda_executors.LambdaExecutorSeparateContainers",
    "localstack.services.awslambda.lambda_executors.logging",
    "localstack.services.install.INSTALL_PATH_LOCALSTACK_FAT_JAR"
   ]
  },
  "type": "module"
 },
 "localstack.services.awslambda.lambda_executors.AVAILABLE_EXECUTORS": {
  "data": {
   "lineno": 692
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.CaptureOutput": {
  "data": {
   "shadows": "localstack.utils.common.CaptureOutput"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.ContainerInfo": {
  "data": {
   "lineno": 162
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_executors.ContainerInfo.__init__": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.DEFAULT_EXECUTOR": {
  "data": {
   "lineno": 690
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.EVENT_FILE_PATTERN": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.EXECUTOR_CONTAINERS_REUSE": {
  "data": {
   "lineno": 689
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.EXECUTOR_CONTAINERS_SEPARATE": {
  "data": {
   "lineno": 688
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.EXECUTOR_LOCAL": {
  "data": {
   "lineno": 687
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.INSTALL_PATH_LOCALSTACK_FAT_JAR": {
  "data": {
   "shadows": "localstack.services.install.INSTALL_PATH_LOCALSTACK_FAT_JAR"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_EVENT_FILE": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_EXECUTOR_CLASS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_EXECUTOR_JAR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_CUSTOM_RUNTIME": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE2": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE21": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_GOLANG": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_JAVA8": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS10X": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS610": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS810": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PYTHON27": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PYTHON36": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_RUBY": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_RUBY25": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_SERVER_PORT_OFFSET": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LAMBDA_SERVER_UNIQUE_PORTS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LOG": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor.__init__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor._execute": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor._store_logs": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "Exception",
    "enumerate",
    "float",
    "int",
    "len",
    "localstack.services.awslambda.lambda_executors.time",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.is_service_enabled",
    "localstack.utils.common.short_uid",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor.cleanup": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor.execute": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "do_execute",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.utils.common.FuncThread"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor.execute.do_execute": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "int",
    "localstack.services.awslambda.lambda_executors.time"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor.run_lambda_executor": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "localstack.services.awslambda.lambda_executors.six",
    "localstack.services.awslambda.lambda_executors.subprocess",
    "localstack.utils.common.run",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutor.startup": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorContainers": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LambdaExecutor"
   ]
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorContainers._docker_cmd": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "localstack.config.DOCKER_CMD"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorContainers._execute": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "localstack.config.DOCKER_HOST_FROM_CONTAINER",
    "localstack.config.USE_SSL",
    "localstack.services.awslambda.lambda_executors.LAMBDA_EVENT_FILE",
    "localstack.services.awslambda.lambda_executors.LAMBDA_EXECUTOR_CLASS",
    "localstack.services.awslambda.lambda_executors.LAMBDA_EXECUTOR_JAR",
    "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_JAVA8",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.json",
    "localstack.services.awslambda.lambda_executors.os",
    "localstack.utils.common.cp_r",
    "localstack.utils.common.json_safe",
    "localstack.utils.common.save_file"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorContainers.prepare_event": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorContainers.prepare_execution": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorLocal": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LambdaExecutor"
   ]
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorLocal._execute": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "do_execute",
    "localstack.utils.common.CaptureOutput",
    "multiprocessing.Process",
    "multiprocessing.Queue"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorLocal._execute.do_execute": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "lambda_function",
    "localstack.services.awslambda.lambda_executors.os"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorLocal.execute_java_lambda": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.EVENT_FILE_PATTERN",
    "localstack.services.awslambda.lambda_executors.LAMBDA_EXECUTOR_CLASS",
    "localstack.services.awslambda.lambda_executors.LAMBDA_EXECUTOR_JAR",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.json",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.common.save_file",
    "localstack.utils.common.short_uid"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LambdaExecutorContainers"
   ]
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.__init__": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LAMBDA_SERVER_PORT_OFFSET",
    "localstack.services.awslambda.lambda_executors.LAMBDA_SERVER_UNIQUE_PORTS",
    "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers",
    "localstack.services.awslambda.lambda_executors.threading",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.cleanup": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.destroy_docker_container": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.subprocess",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.destroy_existing_docker_containers": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "len",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.subprocess",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.get_all_container_names": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "len",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.subprocess",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.get_container_name": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.get_docker_container_network": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.subprocess",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.get_docker_container_status": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "len",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.idle_container_destroyer": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "dict",
    "int",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.MAX_CONTAINER_IDLE_TIME_MS",
    "localstack.services.awslambda.lambda_executors.time"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.prepare_execution": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "localstack.config.LAMBDA_REMOTE_DOCKER",
    "localstack.services.awslambda.lambda_executors.LAMBDA_EVENT_FILE",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.os",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.prime_docker_container": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "localstack.config.LAMBDA_CONTAINER_REGISTRY",
    "localstack.config.LAMBDA_DOCKER_NETWORK",
    "localstack.config.LAMBDA_REMOTE_DOCKER",
    "localstack.services.awslambda.lambda_executors.ContainerInfo",
    "localstack.services.awslambda.lambda_executors.LOG",
    "localstack.services.awslambda.lambda_executors.time",
    "localstack.utils.common.run",
    "pipes.quote"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.start_idle_container_destroyer_interval": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.threading"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorReuseContainers.startup": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorSeparateContainers": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_executors.LambdaExecutorContainers"
   ]
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorSeparateContainers.prepare_event": {
  "data": {
   "lineno": 571
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.LambdaExecutorSeparateContainers.prepare_execution": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "localstack.config.LAMBDA_CONTAINER_REGISTRY",
    "localstack.config.LAMBDA_DOCKER_NETWORK",
    "localstack.config.LAMBDA_REMOTE_DOCKER"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.MAX_CONTAINER_IDLE_TIME_MS": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "localstack.services.awslambda.lambda_executors.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.Queue": {
  "data": {
   "shadows": "multiprocessing.Queue"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.TMP_FILES": {
  "data": {
   "shadows": "localstack.utils.common.TMP_FILES"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.Util": {
  "data": {
   "lineno": 665
  },
  "type": "class"
 },
 "localstack.services.awslambda.lambda_executors.Util.get_host_path_for_path_in_docker": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "classmethod",
    "localstack.config.HOST_TMP_FOLDER",
    "localstack.config.TMP_FOLDER",
    "localstack.services.awslambda.lambda_executors.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.Util.get_java_opts": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "classmethod",
    "localstack.config.LAMBDA_JAVA_OPTS",
    "localstack.utils.common.get_free_tcp_port"
   ]
  },
  "type": "function"
 },
 "localstack.services.awslambda.lambda_executors.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.cmd_quote": {
  "data": {
   "shadows": "pipes.quote"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.cp_r": {
  "data": {
   "shadows": "localstack.utils.common.cp_r"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.get_free_tcp_port": {
  "data": {
   "shadows": "localstack.utils.common.get_free_tcp_port"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.json_safe": {
  "data": {
   "shadows": "localstack.utils.common.json_safe"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.run": {
  "data": {
   "shadows": "localstack.utils.common.run"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.save_file": {
  "data": {
   "shadows": "localstack.utils.common.save_file"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.services.awslambda.lambda_executors.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.cloudformation": {
  "data": {},
  "type": "module"
 },
 "localstack.services.cloudformation.cloudformation_listener": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.cloudformation.cloudformation_listener.ProxyListenerCloudFormation",
    "localstack.services.cloudformation.cloudformation_listener.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.cloudformation.cloudformation_listener.LOG": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "localstack.services.cloudformation.cloudformation_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_listener.ProxyListenerCloudFormation": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.cloudformation_listener.ProxyListenerCloudFormation._list_stack_names": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_listener.ProxyListenerCloudFormation.forward_request": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "events",
    "events.extend",
    "localstack.services.cloudformation.cloudformation_listener.make_response",
    "localstack.services.cloudformation.cloudformation_listener.re",
    "localstack.services.cloudformation.cloudformation_listener.validate_template",
    "localstack.utils.analytics.event_publisher.EVENT_CLOUDFORMATION_CREATE_STACK",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.common.obj_to_xml",
    "localstack.utils.common.to_str",
    "six.moves.urllib.parse.parse_qs"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_listener.ProxyListenerCloudFormation.return_response": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_listener.LOG",
    "localstack.utils.aws.aws_stack.fix_account_id_in_arns"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_listener.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_listener.UPDATE_CLOUDFORMATION": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "localstack.services.cloudformation.cloudformation_listener.XMLNS_CLOUDFORMATION": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "localstack.services.cloudformation.cloudformation_listener.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_listener.error_response": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_listener.XMLNS_CLOUDFORMATION",
    "localstack.services.cloudformation.cloudformation_listener.uuid",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_listener.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_listener.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_listener.make_response": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_listener.XMLNS_CLOUDFORMATION",
    "localstack.services.cloudformation.cloudformation_listener.uuid",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_listener.obj_to_xml": {
  "data": {
   "shadows": "localstack.utils.common.obj_to_xml"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_listener.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_listener.template_deployer": {
  "data": {
   "shadows": "localstack.utils.cloudformation.template_deployer"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_listener.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_listener.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_listener.validate_template": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception",
    "localstack.services.cloudformation.cloudformation_listener.LOG",
    "localstack.services.cloudformation.cloudformation_listener.error_response",
    "localstack.services.cloudformation.cloudformation_listener.make_response",
    "localstack.utils.cloudformation.template_deployer.template_to_json"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.cloudformation.cloudformation_starter.logging",
    "localstack.services.cloudformation.service_models.GatewayResponse",
    "localstack.services.cloudformation.service_models.SNSSubscription",
    "localstack.services.cloudformation.service_models.StepFunctionsActivity",
    "localstack.stepfunctions.models.StateMachine",
    "moto.apigateway.models.Deployment",
    "moto.apigateway.models.Method",
    "moto.apigateway.models.Resource",
    "moto.apigateway.models.RestAPI",
    "moto.server.main"
   ]
  },
  "type": "module"
 },
 "localstack.services.cloudformation.cloudformation_starter.BUCKET_MARKER_LOCAL": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api.BUCKET_MARKER_LOCAL"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.BaseModel": {
  "data": {
   "shadows": "moto.core.BaseModel"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.CURRENTLY_UPDATING_RESOURCES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "localstack.services.cloudformation.cloudformation_starter.DEFAULT_PORT_CLOUDFORMATION_BACKEND": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_PORT_CLOUDFORMATION_BACKEND"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.LOG": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "localstack.services.cloudformation.cloudformation_starter.MODEL_MAP": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "localstack.services.cloudformation.cloudformation_starter.MOTO_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.MOTO_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.Output": {
  "data": {
   "shadows": "boto.cloudformation.stack.Output"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.RUN_SERVER_IN_PROCESS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "localstack.services.cloudformation.cloudformation_starter.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.UnformattedGetAttTemplateException": {
  "data": {
   "shadows": "moto.cloudformation.exceptions.UnformattedGetAttTemplateException"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.ValidationError": {
  "data": {
   "shadows": "moto.cloudformation.exceptions.ValidationError"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.apigw_models": {
  "data": {
   "shadows": "moto.apigateway.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "DynamoDB_Table_get_cfn_attribute_orig",
    "IAM_Role_get_cfn_attribute_orig",
    "Lambda_Function_get_cfn_attribute_orig",
    "Lambda_create_from_cloudformation_json_orig",
    "Mapping_create_from_cloudformation_json_orig",
    "SQS_Queue_get_cfn_attribute_orig",
    "clean_json_orig",
    "hasattr",
    "localstack.services.cloudformation.cloudformation_starter.MODEL_MAP",
    "moto.apigateway.models.Deployment",
    "moto.apigateway.models.Deployment.create_from_cloudformation_json",
    "moto.apigateway.models.Deployment.delete_from_cloudformation_json",
    "moto.apigateway.models.Method.create_from_cloudformation_json",
    "moto.apigateway.models.Resource.create_from_cloudformation_json",
    "moto.apigateway.models.RestAPI.create_from_cloudformation_json",
    "moto.apigateway.models.RestAPI.get_cfn_attribute",
    "moto.awslambda.models.EventSourceMapping.create_from_cloudformation_json",
    "moto.awslambda.models.LambdaFunction",
    "moto.awslambda.models.LambdaFunction.create_from_cloudformation_json",
    "moto.awslambda.models.LambdaFunction.get_cfn_attribute",
    "moto.awslambda.models.LambdaFunction.update_from_cloudformation_json",
    "moto.awslambda.models.LambdaVersion",
    "moto.awslambda.models.LambdaVersion.delete_from_cloudformation_json",
    "moto.cloudformation.parsing.MODEL_MAP.update",
    "moto.cloudformation.parsing.clean_json",
    "moto.cloudformation.parsing.parse_and_create_resource",
    "moto.cloudformation.parsing.parse_and_update_resource",
    "moto.cloudformation.parsing.parse_output",
    "moto.cloudformation.responses.CloudFormationResponse.describe_stack_resource",
    "moto.dynamodb.models.Table.get_cfn_attribute",
    "moto.dynamodb2.models.Table.get_cfn_attribute",
    "moto.iam.models.Role.get_cfn_attribute",
    "moto.s3.models.S3Backend.get_key",
    "moto.sqs.models.Queue.get_cfn_attribute",
    "moto.sqs.models.Queue.physical_resource_id",
    "parse_and_create_resource_orig",
    "parse_and_update_resource_orig",
    "parse_output_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Deployment_create_from_cloudformation_json": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "classmethod",
    "localstack.utils.common.short_uid",
    "moto.apigateway.models.Deployment"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.DynamoDB2_Table_get_cfn_attribute": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.dynamodb_stream_arn",
    "localstack.utils.aws.aws_stack.dynamodb_table_arn",
    "moto.cloudformation.exceptions.UnformattedGetAttTemplateException"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.DynamoDB_Table_get_cfn_attribute": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "DynamoDB_Table_get_cfn_attribute_orig",
    "Exception",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.IAM_Role_get_cfn_attribute": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "Exception",
    "IAM_Role_get_cfn_attribute_orig",
    "localstack.utils.aws.aws_stack.role_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Lambda_Function_get_cfn_attribute": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "Exception",
    "Lambda_Function_get_cfn_attribute_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Lambda_create_from_cloudformation_json": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "Lambda_create_from_cloudformation_json_orig",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Lambda_update_from_cloudformation_json": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "Lambda_create_from_cloudformation_json_orig",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Mapping_create_from_cloudformation_json": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "Mapping_create_from_cloudformation_json_orig",
    "classmethod",
    "localstack.utils.aws.aws_stack.lambda_function_name"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Method_create_from_cloudformation_json": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "classmethod",
    "moto.apigateway.models.Method"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.Resource_create_from_cloudformation_json": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "classmethod",
    "id",
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.common.short_uid",
    "moto.apigateway.models.Resource"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.RestAPI_create_from_cloudformation_json": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "classmethod",
    "id",
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.common.short_uid",
    "moto.apigateway.models.RestAPI"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.RestAPI_get_cfn_attribute": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "id",
    "moto.cloudformation.exceptions.UnformattedGetAttTemplateException"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.SNS_Topic_get_cfn_attribute": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "SNS_Topic_get_cfn_attribute",
    "localstack.utils.aws.aws_stack.fix_account_id_in_arns"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.SQS_Queue_get_cfn_attribute": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "SQS_Queue_get_cfn_attribute_orig",
    "localstack.utils.aws.aws_stack.sqs_queue_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.SQS_Queue_physical_resource_id": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_sqs_queue_url",
    "property"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches._parse_and_create_resource": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "deploy_func",
    "dict",
    "find_id",
    "hasattr",
    "isinstance",
    "localstack.services.cloudformation.cloudformation_starter.CURRENTLY_UPDATING_RESOURCES",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.services.cloudformation.cloudformation_starter.convert_objs_to_ids",
    "localstack.services.cloudformation.cloudformation_starter.set_moto_account_ids",
    "localstack.services.cloudformation.cloudformation_starter.update_physical_resource_id",
    "localstack.utils.cloudformation.template_deployer.deploy_resource",
    "localstack.utils.cloudformation.template_deployer.is_updateable",
    "localstack.utils.cloudformation.template_deployer.should_be_deployed",
    "localstack.utils.cloudformation.template_deployer.update_resource",
    "localstack.utils.common.clone",
    "localstack.utils.common.json_safe",
    "moto.cloudformation.parsing.parse_resource",
    "parse_and_create_resource_orig",
    "parse_and_update_resource_orig",
    "update_resource_id",
    "update_resource_name"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches._parse_and_create_resource.find_id": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.clean_json": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "clean_json_orig",
    "dict",
    "isinstance",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.services.cloudformation.cloudformation_starter.get_entity_id",
    "moto.core.BaseModel",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.depl_delete_from_cloudformation_json": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_starter.LOG"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.describe_stack_resource": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.utils.aws.aws_responses.flask_error_response",
    "localstack.utils.aws.aws_stack.get_region",
    "moto.cloudformation.exceptions.ValidationError",
    "moto.cloudformation.responses.DESCRIBE_STACK_RESOURCE_RESPONSE_TEMPLATE"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.get_key": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.BUCKET_MARKER_LOCAL",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "moto.s3.models.FakeKey"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.parse_and_create_resource": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "Exception",
    "_parse_and_create_resource",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.services.cloudformation.cloudformation_starter.traceback"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.parse_and_update_resource": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "Exception",
    "_parse_and_create_resource",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.services.cloudformation.cloudformation_starter.traceback"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.parse_output": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "KeyError",
    "boto.cloudformation.stack.Output",
    "parse_output_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.update_resource_id": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "moto.apigateway.models.Deployment",
    "moto.apigateway.models.Resource",
    "moto.apigateway.models.RestAPI",
    "moto.apigateway.models.apigateway_backends",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.update_resource_name": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "isinstance",
    "localstack.stepfunctions.models.StateMachine"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.apply_patches.vers_delete_from_cloudformation_json": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_starter.LOG"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.aws_responses": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.canonicalize_api_names": {
  "data": {
   "shadows": "localstack.services.infra.canonicalize_api_names"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.clone": {
  "data": {
   "shadows": "localstack.utils.common.clone"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.convert_objs_to_ids": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "localstack.utils.common.recurse_object"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.convert_objs_to_ids.fix_ids": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "localstack.services.cloudformation.cloudformation_starter.get_entity_id",
    "moto.core.BaseModel"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.do_run": {
  "data": {
   "shadows": "localstack.services.infra.do_run"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.dynamodb2_models": {
  "data": {
   "shadows": "moto.dynamodb2.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.dynamodb_models": {
  "data": {
   "shadows": "moto.dynamodb.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.get_entity_id": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Exception",
    "getattr",
    "hasattr",
    "isinstance",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "moto.apigateway.models.Resource",
    "moto.apigateway.models.RestAPI"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.get_service_protocol": {
  "data": {
   "shadows": "localstack.services.infra.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.iam_models": {
  "data": {
   "shadows": "moto.iam.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.inject_stats_endpoint": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "hasattr",
    "moto.server",
    "moto.server.create_backend_app",
    "moto.server.create_backend_app_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.inject_stats_endpoint._get_stats": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_starter.json",
    "pympler.muppy.get_objects",
    "pympler.summary",
    "pympler.summary.format_",
    "pympler.summary.summarize"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.inject_stats_endpoint.create_backend_app": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "moto.server.create_backend_app_orig"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.json_safe": {
  "data": {
   "shadows": "localstack.utils.common.json_safe"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.lambda_models": {
  "data": {
   "shadows": "moto.awslambda.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.main": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_starter.start_up",
    "localstack.services.cloudformation.cloudformation_starter.sys",
    "localstack.services.infra.canonicalize_api_names",
    "localstack.utils.bootstrap.setup_logging"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.moto_main": {
  "data": {
   "shadows": "moto.server.main"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.moto_server": {
  "data": {
   "shadows": "moto.server"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.muppy": {
  "data": {
   "shadows": "pympler.muppy"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.parsing": {
  "data": {
   "shadows": "moto.cloudformation.parsing"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.recurse_object": {
  "data": {
   "shadows": "localstack.utils.common.recurse_object"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.responses": {
  "data": {
   "shadows": "moto.cloudformation.responses"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.s3_models": {
  "data": {
   "shadows": "moto.s3.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.service_models": {
  "data": {
   "shadows": "localstack.services.cloudformation.service_models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.set_moto_account_ids": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "localstack.utils.common.recurse_object"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.set_moto_account_ids.fix_ids": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "localstack.constants.MOTO_ACCOUNT_ID",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.cloudformation.cloudformation_starter.six"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.setup_logging": {
  "data": {
   "shadows": "localstack.utils.bootstrap.setup_logging"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.sfn_models": {
  "data": {
   "shadows": "localstack.stepfunctions.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.sqs_models": {
  "data": {
   "shadows": "moto.sqs.models"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.start_cloudformation": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "localstack.config.PORT_CLOUDFORMATION",
    "localstack.constants.DEFAULT_PORT_CLOUDFORMATION_BACKEND",
    "localstack.services.cloudformation.cloudformation_starter.RUN_SERVER_IN_PROCESS",
    "localstack.services.cloudformation.cloudformation_starter.sys",
    "localstack.services.infra.do_run",
    "localstack.services.infra.get_service_protocol",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.utils.common.FuncThread",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.start_proxy_for_service": {
  "data": {
   "shadows": "localstack.services.infra.start_proxy_for_service"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.start_up": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "localstack.services.cloudformation.cloudformation_starter.apply_patches",
    "localstack.services.cloudformation.cloudformation_starter.inject_stats_endpoint",
    "moto.server.main"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.cloudformation_starter.summary": {
  "data": {
   "shadows": "pympler.summary"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.template_deployer": {
  "data": {
   "shadows": "localstack.utils.cloudformation.template_deployer"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.cloudformation.cloudformation_starter.update_physical_resource_id": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "localstack.services.cloudformation.cloudformation_starter.LOG",
    "localstack.services.cloudformation.service_models.StepFunctionsActivity",
    "localstack.stepfunctions.models.StateMachine",
    "localstack.utils.aws.aws_stack.lambda_function_arn",
    "localstack.utils.aws.aws_stack.state_machine_arn",
    "localstack.utils.aws.aws_stack.stepfunctions_activity_arn",
    "moto.awslambda.models.LambdaFunction",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.service_models": {
  "data": {},
  "type": "module"
 },
 "localstack.services.cloudformation.service_models.BaseModel": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.BaseModel.__init__": {
  "data": {
   "lineno": 3
  },
  "type": "function"
 },
 "localstack.services.cloudformation.service_models.BaseModel.create_from_cloudformation_json": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "localstack.services.cloudformation.service_models.GatewayResponse": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.SNSSubscription": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.cloudformation.service_models.StepFunctionsActivity": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "localstack.services.cloudformation.service_models.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.services.dynamodb": {
  "data": {},
  "type": "module"
 },
 "localstack.services.dynamodb.dynamodb_listener": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.dynamodb.dynamodb_listener.ProxyListenerDynamoDB",
    "localstack.services.dynamodb.dynamodb_listener.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.dynamodb.dynamodb_listener.ACTION_PREFIX": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "localstack.services.dynamodb.dynamodb_listener.LOGGER": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.services.dynamodb.dynamodb_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.ProxyListenerDynamoDB": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "localstack.services.dynamodb.dynamodb_listener.threading",
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.dynamodb.dynamodb_listener.ProxyListenerDynamoDB.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.ProxyListenerDynamoDB._thread_local": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "localstack.services.dynamodb.dynamodb_listener.ProxyListenerDynamoDB"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.ProxyListenerDynamoDB.forward_request": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "error_response",
    "error_response_throughput",
    "find_existing_item",
    "fix_headers_for_updated_response",
    "localstack.config.DYNAMODB_ERROR_PROBABILITY",
    "localstack.services.dynamodb.dynamodb_listener.ACTION_PREFIX",
    "localstack.services.dynamodb.dynamodb_listener.ProxyListenerDynamoDB",
    "localstack.services.dynamodb.dynamodb_listener.json",
    "localstack.services.dynamodb.dynamodb_listener.random",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.common.to_str",
    "requests.models.Response",
    "sorted"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.ProxyListenerDynamoDB.prepare_batch_write_item_records": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "dynamodb_extract_keys",
    "isinstance",
    "localstack.utils.aws.aws_stack.dynamodb_table_arn",
    "localstack.utils.common.clone",
    "requests.models.Response",
    "sorted"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.ProxyListenerDynamoDB.prepare_transact_write_item_records": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "dynamodb_extract_keys",
    "enumerate",
    "find_existing_item",
    "isinstance",
    "localstack.utils.aws.aws_stack.dynamodb_table_arn",
    "localstack.utils.common.clone",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.ProxyListenerDynamoDB.return_response": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "create_dynamodb_stream",
    "dynamodb_extract_keys",
    "find_existing_item",
    "fix_headers_for_updated_response",
    "forward_to_ddb_stream",
    "forward_to_lambda",
    "isinstance",
    "len",
    "localstack.services.dynamodb.dynamodb_listener.ACTION_PREFIX",
    "localstack.services.dynamodb.dynamodb_listener.TABLE_DEFINITIONS",
    "localstack.services.dynamodb.dynamodb_listener.json",
    "localstack.services.dynamodb.dynamodb_listener.re",
    "localstack.utils.analytics.event_publisher.EVENT_DYNAMODB_CREATE_TABLE",
    "localstack.utils.analytics.event_publisher.EVENT_DYNAMODB_DELETE_TABLE",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.aws.aws_stack.dynamodb_table_arn",
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.common.to_str",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.TABLE_DEFINITIONS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "localstack.services.dynamodb.dynamodb_listener.UPDATE_DYNAMODB": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "localstack.services.dynamodb.dynamodb_listener.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.calculate_crc32": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "binascii.crc32",
    "localstack.utils.common.to_bytes"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.clone": {
  "data": {
   "shadows": "localstack.utils.common.clone"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.crc32": {
  "data": {
   "shadows": "binascii.crc32"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.create_dynamodb_stream": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "localstack.services.dynamodbstreams.dynamodbstreams_api.add_dynamodb_stream"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.dynamodb_extract_keys": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "error_response",
    "localstack.services.dynamodb.dynamodb_listener.LOGGER",
    "localstack.services.dynamodb.dynamodb_listener.TABLE_DEFINITIONS"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.dynamodbstreams_api": {
  "data": {
   "shadows": "localstack.services.dynamodbstreams.dynamodbstreams_api"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.error_response": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "localstack.services.dynamodb.dynamodb_listener.json",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.error_response_throughput": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "localstack.services.dynamodb.dynamodb_listener.error_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.find_existing_item": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "localstack.services.dynamodb.dynamodb_listener.LOGGER",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.dynamodb_get_item_raw"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.fix_headers_for_updated_response": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "calculate_crc32",
    "len",
    "localstack.utils.common.to_bytes"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.forward_to_ddb_stream": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "localstack.services.dynamodbstreams.dynamodbstreams_api.forward_events"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.forward_to_lambda": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.get_event_sources",
    "localstack.services.awslambda.lambda_api.run_lambda"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_listener.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.lambda_api": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.to_bytes": {
  "data": {
   "shadows": "localstack.utils.common.to_bytes"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.dynamodb.dynamodb_starter.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.dynamodb.dynamodb_starter.DEFAULT_PORT_DYNAMODB_BACKEND": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_PORT_DYNAMODB_BACKEND"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.LOGGER": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.services.dynamodb.dynamodb_starter.MAX_HEAP_SIZE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "localstack.services.dynamodb.dynamodb_starter.ROOT_PATH": {
  "data": {
   "shadows": "localstack.services.install.ROOT_PATH"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.check_dynamodb": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "list",
    "localstack.constants.DEFAULT_PORT_DYNAMODB_BACKEND",
    "localstack.services.dynamodb.dynamodb_starter.LOGGER",
    "localstack.services.dynamodb.dynamodb_starter.traceback",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.common.wait_for_port_open"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.do_run": {
  "data": {
   "shadows": "localstack.services.infra.do_run"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.get_service_protocol": {
  "data": {
   "shadows": "localstack.services.infra.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.install": {
  "data": {
   "shadows": "localstack.services.install"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.mkdir": {
  "data": {
   "shadows": "localstack.utils.common.mkdir"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.start_dynamodb": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "localstack.config.DATA_DIR",
    "localstack.config.PORT_DYNAMODB",
    "localstack.constants.DEFAULT_PORT_DYNAMODB_BACKEND",
    "localstack.services.dynamodb.dynamodb_starter.MAX_HEAP_SIZE",
    "localstack.services.infra.do_run",
    "localstack.services.infra.get_service_protocol",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.services.install.ROOT_PATH",
    "localstack.services.install.install_dynamodb_local",
    "localstack.utils.common.mkdir",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodb.dynamodb_starter.start_proxy_for_service": {
  "data": {
   "shadows": "localstack.services.infra.start_proxy_for_service"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.dynamodb.dynamodb_starter.wait_for_port_open": {
  "data": {
   "shadows": "localstack.utils.common.wait_for_port_open"
  },
  "type": "import"
 },
 "localstack.services.dynamodbstreams": {
  "data": {},
  "type": "module"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api": {
  "data": {
   "symbols_in_volume": [
    "flask.Flask",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.APP_NAME"
   ]
  },
  "type": "module"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.ACTION_HEADER_PREFIX": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.APP_NAME": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.DDB_KINESIS_STREAM_NAME_PREFIX": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.DDB_STREAMS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.SEQUENCE_NUMBER_COUNTER": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.add_dynamodb_stream": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "get_kinesis_stream_name",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.DDB_STREAMS",
    "localstack.utils.analytics.event_publisher.EVENT_DYNAMODB_CREATE_STREAM",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.aws.aws_stack.create_kinesis_stream",
    "localstack.utils.aws.aws_stack.dynamodb_stream_arn",
    "localstack.utils.aws.aws_stack.dynamodb_table_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.app": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.error_response": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.make_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.forward_events": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "get_kinesis_stream_name",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.DDB_STREAMS",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.SEQUENCE_NUMBER_COUNTER",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.json",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "str",
    "table_name_from_stream_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.generic_proxy": {
  "data": {
   "shadows": "localstack.services.generic_proxy"
  },
  "type": "import"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.get_kinesis_stream_name": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "localstack.services.dynamodbstreams.dynamodbstreams_api.DDB_KINESIS_STREAM_NAME_PREFIX"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.jsonify": {
  "data": {
   "shadows": "flask.jsonify"
  },
  "type": "import"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.kinesis_shard_id": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.make_response": {
  "data": {
   "shadows": "flask.make_response"
  },
  "type": "import"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.post_request": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "error_response",
    "flask.jsonify",
    "flask.request.data",
    "flask.request.headers.get",
    "get_kinesis_stream_name",
    "kinesis_shard_id",
    "list",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.ACTION_HEADER_PREFIX",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.DDB_STREAMS",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.app",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.json",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.common.to_str",
    "print",
    "shard_id",
    "stream_name_from_stream_arn",
    "table_name_from_stream_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.random_id": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "kinesis_shard_id",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.hashlib",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.six",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.uuid",
    "localstack.utils.common.to_bytes"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.serve": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "localstack.services.dynamodbstreams.dynamodbstreams_api.app",
    "localstack.services.generic_proxy.serve_flask_app"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.shard_id": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "kinesis_shard_id",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.random_id"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.stream_name_from_stream_arn": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "localstack.services.dynamodbstreams.dynamodbstreams_api.get_kinesis_stream_name",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.table_name_from_stream_arn"
   ]
  },
  "type": "function"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.table_name_from_stream_arn": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.to_bytes": {
  "data": {
   "shadows": "localstack.utils.common.to_bytes"
  },
  "type": "import"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.dynamodbstreams.dynamodbstreams_api.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "localstack.services.es": {
  "data": {},
  "type": "module"
 },
 "localstack.services.es.es_api": {
  "data": {
   "symbols_in_volume": [
    "flask.Flask",
    "localstack.services.es.es_api.APP_NAME"
   ]
  },
  "type": "module"
 },
 "localstack.services.es.es_api.API_PREFIX": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "localstack.services.es.es_api.APP_NAME": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.services.es.es_api.ES_DOMAINS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "localstack.services.es.es_api.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.add_list_tags": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.args.get",
    "flask.request.method",
    "localstack.services.es.es_api.API_PREFIX",
    "localstack.services.es.es_api.app"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.app": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "localstack.services.es.es_api.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.create_domain": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.request.data",
    "localstack.services.es.es_api.API_PREFIX",
    "localstack.services.es.es_api.ES_DOMAINS",
    "localstack.services.es.es_api.app",
    "localstack.services.es.es_api.error_response",
    "localstack.services.es.es_api.get_domain_status",
    "localstack.services.es.es_api.json",
    "localstack.utils.analytics.event_publisher.EVENT_ES_CREATE_DOMAIN",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.delete_domain": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.es.es_api.API_PREFIX",
    "localstack.services.es.es_api.ES_DOMAINS",
    "localstack.services.es.es_api.app",
    "localstack.services.es.es_api.error_response",
    "localstack.services.es.es_api.get_domain_status",
    "localstack.utils.analytics.event_publisher.EVENT_ES_DELETE_DOMAIN",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.describe_domain": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.es.es_api.API_PREFIX",
    "localstack.services.es.es_api.ES_DOMAINS",
    "localstack.services.es.es_api.app",
    "localstack.services.es.es_api.error_response",
    "localstack.services.es.es_api.get_domain_status"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.domain_config": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.es.es_api.API_PREFIX",
    "localstack.services.es.es_api.app",
    "localstack.services.es.es_api.get_domain_config"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.error_response": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "flask.jsonify",
    "flask.make_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.generic_proxy": {
  "data": {
   "shadows": "localstack.services.generic_proxy"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.get_domain_config": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.es.es_api.get_domain_config_status",
    "localstack.utils.aws.aws_stack.get_region",
    "random.randint"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.get_domain_config_status": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "localstack.services.es.es_api.time",
    "random.randint"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.get_domain_status": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.utils.aws.aws_stack.get_elasticsearch_endpoint",
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.jsonify": {
  "data": {
   "shadows": "flask.jsonify"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.list_domain_names": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "flask.jsonify",
    "localstack.services.es.es_api.API_PREFIX",
    "localstack.services.es.es_api.ES_DOMAINS",
    "localstack.services.es.es_api.app"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.make_response": {
  "data": {
   "shadows": "flask.make_response"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.randint": {
  "data": {
   "shadows": "random.randint"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.serve": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "localstack.services.es.es_api.app",
    "localstack.services.generic_proxy.serve_flask_app"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_api.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.services.es.es_api.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.es.es_starter.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.es.es_starter.DEFAULT_PORT_ELASTICSEARCH_BACKEND": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_PORT_ELASTICSEARCH_BACKEND"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.LOCALSTACK_ROOT_FOLDER": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_ROOT_FOLDER"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.LOGGER": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "localstack.services.es.es_starter.ROOT_PATH": {
  "data": {
   "shadows": "localstack.services.install.ROOT_PATH"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.check_elasticsearch": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "localstack.services.es.es_starter.LOGGER",
    "localstack.services.es.es_starter.six",
    "localstack.services.es.es_starter.traceback",
    "localstack.utils.aws.aws_stack.connect_elasticsearch"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_starter.chmod_r": {
  "data": {
   "shadows": "localstack.utils.common.chmod_r"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.delete_all_elasticsearch_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "localstack.constants.LOCALSTACK_ROOT_FOLDER",
    "localstack.services.es.es_starter.os",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_starter.do_run": {
  "data": {
   "shadows": "localstack.services.infra.do_run"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.get_service_protocol": {
  "data": {
   "shadows": "localstack.services.infra.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.install": {
  "data": {
   "shadows": "localstack.services.install"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.is_root": {
  "data": {
   "shadows": "localstack.utils.common.is_root"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.mkdir": {
  "data": {
   "shadows": "localstack.utils.common.mkdir"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.run": {
  "data": {
   "shadows": "localstack.utils.common.run"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.start_elasticsearch": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "localstack.config.DATA_DIR",
    "localstack.config.PORT_ELASTICSEARCH",
    "localstack.constants.DEFAULT_PORT_ELASTICSEARCH_BACKEND",
    "localstack.services.es.es_starter.delete_all_elasticsearch_data",
    "localstack.services.es.es_starter.os",
    "localstack.services.infra.do_run",
    "localstack.services.infra.get_service_protocol",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.services.install.ROOT_PATH",
    "localstack.services.install.install_elasticsearch",
    "localstack.utils.common.chmod_r",
    "localstack.utils.common.is_root",
    "localstack.utils.common.mkdir",
    "localstack.utils.common.run",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.services.es.es_starter.start_proxy_for_service": {
  "data": {
   "shadows": "localstack.services.infra.start_proxy_for_service"
  },
  "type": "import"
 },
 "localstack.services.es.es_starter.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.firehose": {
  "data": {},
  "type": "module"
 },
 "localstack.services.firehose.firehose_api": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "boto3.dynamodb.types.TypeDeserializer",
    "flask.Flask",
    "localstack.services.firehose.firehose_api.APP_NAME",
    "localstack.services.firehose.firehose_api.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.firehose.firehose_api.ACTION_HEADER_PREFIX": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.services.firehose.firehose_api.APP_NAME": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "localstack.services.firehose.firehose_api.DELIVERY_STREAMS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "localstack.services.firehose.firehose_api.Flask": {
  "data": {
   "shadows": "flask.Flask"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.LOG": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "localstack.services.firehose.firehose_api.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.TypeDeserializer": {
  "data": {
   "shadows": "boto3.dynamodb.types.TypeDeserializer"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.app": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "localstack.services.firehose.firehose_api.aws_responses": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.bucket_name": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.connect_elasticsearch": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack.connect_elasticsearch"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.create_stream": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "localstack.services.firehose.firehose_api.DELIVERY_STREAMS",
    "localstack.services.firehose.firehose_api.process_records",
    "localstack.services.firehose.firehose_api.time",
    "localstack.services.firehose.firehose_api.update_destination",
    "localstack.utils.analytics.event_publisher.EVENT_FIREHOSE_CREATE_STREAM",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.aws.aws_stack.firehose_stream_arn",
    "localstack.utils.common.short_uid",
    "localstack.utils.kinesis.kinesis_connector.listen_to_kinesis"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.delete_stream": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "error_not_found",
    "localstack.services.firehose.firehose_api.DELIVERY_STREAMS",
    "localstack.utils.analytics.event_publisher.EVENT_FIREHOSE_DELETE_STREAM",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.deser": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "localstack.services.firehose.firehose_api.error_not_found": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "error_response",
    "localstack.constants.TEST_AWS_ACCOUNT_ID"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.error_response": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.flask_error_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.extract_region_from_auth_header": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack.extract_region_from_auth_header"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.firehose_stream_arn": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack.firehose_stream_arn"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.generic_proxy": {
  "data": {
   "shadows": "localstack.services.generic_proxy"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.get_delivery_stream_names": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "localstack.services.firehose.firehose_api.DELIVERY_STREAMS",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.get_delivery_stream_tags": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "enumerate",
    "iter",
    "len",
    "localstack.services.firehose.firehose_api.DELIVERY_STREAMS",
    "next"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.get_destination": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "get_stream"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.get_s3_client": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack.get_s3_client"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.get_stream": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "localstack.services.firehose.firehose_api.DELIVERY_STREAMS"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.jsonify": {
  "data": {
   "shadows": "flask.jsonify"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.kinesis_connector": {
  "data": {
   "shadows": "localstack.utils.kinesis.kinesis_connector"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.post_request": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "dict",
    "flask.jsonify",
    "flask.request.data",
    "flask.request.headers",
    "flask.request.headers.get",
    "isinstance",
    "localstack.services.firehose.firehose_api.ACTION_HEADER_PREFIX",
    "localstack.services.firehose.firehose_api.app",
    "localstack.services.firehose.firehose_api.create_stream",
    "localstack.services.firehose.firehose_api.delete_stream",
    "localstack.services.firehose.firehose_api.error_not_found",
    "localstack.services.firehose.firehose_api.error_response",
    "localstack.services.firehose.firehose_api.get_delivery_stream_names",
    "localstack.services.firehose.firehose_api.get_delivery_stream_tags",
    "localstack.services.firehose.firehose_api.get_stream",
    "localstack.services.firehose.firehose_api.json",
    "localstack.services.firehose.firehose_api.put_record",
    "localstack.services.firehose.firehose_api.put_records",
    "localstack.services.firehose.firehose_api.update_destination",
    "localstack.services.firehose.firehose_api.uuid",
    "localstack.utils.aws.aws_stack.extract_region_from_auth_header",
    "localstack.utils.common.to_str",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.process_records": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "localstack.services.firehose.firehose_api.put_records"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.put_record": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "put_records"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.put_records": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Exception",
    "bucket_name",
    "get_stream",
    "localstack.services.firehose.firehose_api.LOG",
    "localstack.services.firehose.firehose_api.base64",
    "localstack.services.firehose.firehose_api.json",
    "localstack.services.firehose.firehose_api.traceback",
    "localstack.services.firehose.firehose_api.uuid",
    "localstack.utils.aws.aws_stack.connect_elasticsearch",
    "localstack.utils.aws.aws_stack.get_s3_client",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.role_arn": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "localstack.constants.TEST_AWS_ACCOUNT_ID"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.serve": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "localstack.services.firehose.firehose_api.app",
    "localstack.services.generic_proxy.serve_flask_app"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.firehose.firehose_api.update_destination": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "localstack.services.firehose.firehose_api.get_destination",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "localstack.services.firehose.firehose_api.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.config.EXTRA_CORS_ALLOWED_HEADERS",
    "localstack.config.EXTRA_CORS_ALLOWED_HEADERS.split",
    "localstack.config.EXTRA_CORS_EXPOSE_HEADERS",
    "localstack.config.EXTRA_CORS_EXPOSE_HEADERS.split",
    "localstack.config.TMP_FOLDER",
    "localstack.services.generic_proxy.CORS_ALLOWED_HEADERS",
    "localstack.services.generic_proxy.CORS_EXPOSE_HEADERS",
    "localstack.services.generic_proxy.logging",
    "tuple"
   ]
  },
  "type": "module"
 },
 "localstack.services.generic_proxy.APPLICATION_JSON": {
  "data": {
   "shadows": "localstack.constants.APPLICATION_JSON"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.BaseHTTPRequestHandler": {
  "data": {
   "shadows": "six.moves.BaseHTTPServer.BaseHTTPRequestHandler"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.CORS": {
  "data": {
   "shadows": "flask_cors.CORS"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.CORS_ALLOWED_HEADERS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.CORS_ALLOWED_METHODS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.CORS_EXPOSE_HEADERS": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.CaseInsensitiveDict": {
  "data": {
   "shadows": "requests.structures.CaseInsensitiveDict"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.ENV_INTERNAL_TEST_RUN": {
  "data": {
   "shadows": "localstack.constants.ENV_INTERNAL_TEST_RUN"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.EXTRA_CORS_ALLOWED_HEADERS": {
  "data": {
   "shadows": "localstack.config.EXTRA_CORS_ALLOWED_HEADERS"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.EXTRA_CORS_EXPOSE_HEADERS": {
  "data": {
   "shadows": "localstack.config.EXTRA_CORS_EXPOSE_HEADERS"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.GenericProxy": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread"
   ]
  },
  "type": "class"
 },
 "localstack.services.generic_proxy.GenericProxy.__init__": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ssl",
    "localstack.utils.common.FuncThread.__init__"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxy.create_ssl_cert": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "classmethod",
    "localstack.services.generic_proxy.SERVER_CERT_PEM_FILE",
    "localstack.utils.common.generate_ssl_cert"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxy.get_flask_ssl_context": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "classmethod",
    "localstack.config.USE_SSL"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxy.run_cmd": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "Exception",
    "localstack.services.generic_proxy.GenericProxy",
    "localstack.services.generic_proxy.GenericProxyHandler",
    "localstack.services.generic_proxy.LOG",
    "localstack.services.generic_proxy.ThreadedHTTPServer",
    "localstack.services.generic_proxy.ssl",
    "localstack.services.generic_proxy.traceback"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxy.stop": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "six.moves.BaseHTTPServer.BaseHTTPRequestHandler"
   ]
  },
  "type": "class"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.LOG",
    "six.moves.BaseHTTPServer.BaseHTTPRequestHandler.__init__",
    "ssl.SSLError"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler._listeners": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler._send_cors_headers": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.CORS_ALLOWED_HEADERS",
    "localstack.services.generic_proxy.CORS_ALLOWED_METHODS",
    "localstack.services.generic_proxy.CORS_EXPOSE_HEADERS",
    "localstack.services.generic_proxy.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.build_x_forwarded_for": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_CONNECT": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_DELETE": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_GET": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_HEAD": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_OPTIONS": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_PATCH": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_POST": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.do_PUT": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.requests"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.forward": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "Exception",
    "any",
    "dict",
    "int",
    "isinstance",
    "len",
    "localstack.constants.APPLICATION_JSON",
    "localstack.constants.ENV_INTERNAL_TEST_RUN",
    "localstack.services.generic_proxy.LOG",
    "localstack.services.generic_proxy.inspect",
    "localstack.services.generic_proxy.json",
    "localstack.services.generic_proxy.os",
    "localstack.services.generic_proxy.traceback",
    "localstack.utils.common.to_bytes",
    "print",
    "requests.models.Request",
    "requests.models.Response",
    "requests.structures.CaseInsensitiveDict",
    "six.iteritems",
    "six.moves.urllib.parse.urlparse",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.log_message": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.parse_request": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.sys",
    "six.moves.BaseHTTPServer.BaseHTTPRequestHandler.parse_request"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.GenericProxyHandler.read_content": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "int",
    "localstack.services.generic_proxy.LOG",
    "localstack.services.generic_proxy.requests",
    "localstack.services.generic_proxy.socket"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.HTTPServer": {
  "data": {
   "shadows": "six.moves.BaseHTTPServer.HTTPServer"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.LOG": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.ProxyListener": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.services.generic_proxy.ProxyListener.forward_request": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.ProxyListener.get_forward_url": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.ProxyListener.return_response": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.QUIET": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.Request": {
  "data": {
   "shadows": "requests.models.Request"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.SERVER_CERT_PEM_FILE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "localstack.services.generic_proxy.SSLError": {
  "data": {
   "shadows": "ssl.SSLError"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.TMP_FOLDER": {
  "data": {
   "shadows": "localstack.config.TMP_FOLDER"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.ThreadedHTTPServer": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "six.moves.BaseHTTPServer.HTTPServer",
    "six.moves.socketserver.ThreadingMixIn"
   ]
  },
  "type": "class"
 },
 "localstack.services.generic_proxy.ThreadingMixIn": {
  "data": {
   "shadows": "six.moves.socketserver.ThreadingMixIn"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.USE_SSL": {
  "data": {
   "shadows": "localstack.config.USE_SSL"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.click": {
  "data": {
   "shadows": "click"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.generate_ssl_cert": {
  "data": {
   "shadows": "localstack.utils.common.generate_ssl_cert"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.serve_flask_app": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "flask_cors.CORS",
    "int",
    "localstack.services.generic_proxy.GenericProxy",
    "localstack.services.generic_proxy.click",
    "localstack.services.generic_proxy.logging"
   ]
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.serve_flask_app.noecho": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "localstack.services.generic_proxy.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.ssl": {
  "data": {
   "shadows": "ssl"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.to_bytes": {
  "data": {
   "shadows": "localstack.utils.common.to_bytes"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.generic_proxy.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlparse"
  },
  "type": "import"
 },
 "localstack.services.iam": {
  "data": {},
  "type": "module"
 },
 "localstack.services.iam.iam_listener": {
  "data": {
   "symbols_in_volume": [
    "localstack.services.iam.iam_listener.ProxyListenerIAM"
   ]
  },
  "type": "module"
 },
 "localstack.services.iam.iam_listener.MOTO_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.MOTO_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_listener.ProxyListenerIAM": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.iam.iam_listener.ProxyListenerIAM._fix_account_id": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "localstack.constants.MOTO_ACCOUNT_ID",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.utils.aws.aws_stack.fix_account_id_in_arns"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_listener.ProxyListenerIAM._fix_date_format": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "localstack.services.iam.iam_listener.ProxyListenerIAM._replace": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "localstack.services.iam.iam_listener.re",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_listener.ProxyListenerIAM._reset_account_id": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "localstack.constants.MOTO_ACCOUNT_ID",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.utils.aws.aws_stack.fix_account_id_in_arns"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_listener.ProxyListenerIAM.forward_request": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "requests.models.Request"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_listener.ProxyListenerIAM.return_response": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_listener.Request": {
  "data": {
   "shadows": "requests.models.Request"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_listener.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_listener.UPDATE_IAM": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "localstack.services.iam.iam_listener.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_listener.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter": {
  "data": {},
  "type": "module"
 },
 "localstack.services.iam.iam_starter.DEFAULT_PORT_IAM_BACKEND": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_PORT_IAM_BACKEND"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.GENERIC_EMPTY_TEMPLATE": {
  "data": {
   "shadows": "moto.iam.responses.GENERIC_EMPTY_TEMPLATE"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.IamResponse": {
  "data": {
   "shadows": "moto.iam.responses.IamResponse"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.moto_iam_backend": {
  "data": {
   "shadows": "moto.iam.models.iam_backend"
  },
  "type": "import"
 },
 "localstack.services.iam.iam_starter.patch_moto": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "hasattr",
    "moto.iam.responses.IamResponse",
    "moto.iam.responses.IamResponse.delete_policy"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_starter.patch_moto.delete_policy": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "moto.iam.models.iam_backend.managed_policies.pop",
    "moto.iam.responses.GENERIC_EMPTY_TEMPLATE"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_starter.start_iam": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "localstack.config.PORT_IAM",
    "localstack.constants.DEFAULT_PORT_IAM_BACKEND",
    "localstack.services.iam.iam_starter.patch_moto",
    "localstack.services.infra.start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.iam.iam_starter.start_moto_server": {
  "data": {
   "shadows": "localstack.services.infra.start_moto_server"
  },
  "type": "import"
 },
 "localstack.services.infra": {
  "data": {
   "symbols_in_volume": [
    "localstack.services.generic_proxy.GenericProxyHandler.DEFAULT_LISTENERS.append",
    "localstack.services.infra.ConfigUpdateProxyListener",
    "localstack.services.infra.logging",
    "localstack.services.infra.os"
   ]
  },
  "type": "module"
 },
 "localstack.services.infra.ConfigUpdateProxyListener": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.infra.ConfigUpdateProxyListener.forward_request": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "getattr",
    "localstack.config",
    "localstack.constants.CONFIG_UPDATE_PATH",
    "localstack.services.infra.json",
    "localstack.services.infra.re",
    "localstack.services.infra.update_config_variable",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.DEFAULT_BACKEND_HOST": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "localstack.services.infra.DEFAULT_PORT_APIGATEWAY_BACKEND": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_PORT_APIGATEWAY_BACKEND"
  },
  "type": "import"
 },
 "localstack.services.infra.DEFAULT_PORT_EC2_BACKEND": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_PORT_EC2_BACKEND"
  },
  "type": "import"
 },
 "localstack.services.infra.DEFAULT_PORT_SNS_BACKEND": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_PORT_SNS_BACKEND"
  },
  "type": "import"
 },
 "localstack.services.infra.DEFAULT_SERVICE_PORTS": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_SERVICE_PORTS"
  },
  "type": "import"
 },
 "localstack.services.infra.ENV_DEV": {
  "data": {
   "shadows": "localstack.constants.ENV_DEV"
  },
  "type": "import"
 },
 "localstack.services.infra.ENV_INTERNAL_TEST_RUN": {
  "data": {
   "shadows": "localstack.constants.ENV_INTERNAL_TEST_RUN"
  },
  "type": "import"
 },
 "localstack.services.infra.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.services.infra.GenericProxy": {
  "data": {
   "shadows": "localstack.services.generic_proxy.GenericProxy"
  },
  "type": "import"
 },
 "localstack.services.infra.GenericProxyHandler": {
  "data": {
   "shadows": "localstack.services.generic_proxy.GenericProxyHandler"
  },
  "type": "import"
 },
 "localstack.services.infra.LOCALSTACK_INFRA_PROCESS": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_INFRA_PROCESS"
  },
  "type": "import"
 },
 "localstack.services.infra.LOCALSTACK_VENV_FOLDER": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_VENV_FOLDER"
  },
  "type": "import"
 },
 "localstack.services.infra.LOG": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "localstack.services.infra.Plugin": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.services.infra.Plugin.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "localstack.services.infra.Plugin.check": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "localstack.services.infra.Plugin.name": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "localstack.services.infra.Plugin.start": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "localstack.services.infra.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.infra.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.infra.SERVICE_PLUGINS": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "localstack.services.infra.SIGNAL_HANDLERS_SETUP": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "localstack.services.infra.ShellCommandThread": {
  "data": {
   "shadows": "localstack.utils.common.ShellCommandThread"
  },
  "type": "import"
 },
 "localstack.services.infra.TMP_THREADS": {
  "data": {
   "shadows": "localstack.utils.common.TMP_THREADS"
  },
  "type": "import"
 },
 "localstack.services.infra.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "localstack.services.infra.canonicalize_api_names": {
  "data": {
   "shadows": "localstack.utils.bootstrap.canonicalize_api_names"
  },
  "type": "import"
 },
 "localstack.services.infra.check_aws_credentials": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "Exception",
    "localstack.services.infra.boto3",
    "localstack.services.infra.os"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.check_infra": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "Exception",
    "additional",
    "localstack.services.infra.LOG",
    "localstack.services.infra.SERVICE_PLUGINS",
    "localstack.services.infra.time",
    "localstack.services.infra.traceback"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.common": {
  "data": {
   "shadows": "localstack.utils.common"
  },
  "type": "import"
 },
 "localstack.services.infra.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.infra.constants": {
  "data": {
   "shadows": "localstack.constants"
  },
  "type": "import"
 },
 "localstack.services.infra.do_run": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "localstack.services.infra.subprocess",
    "localstack.services.infra.sys",
    "localstack.utils.bootstrap.is_debug",
    "localstack.utils.common.ShellCommandThread",
    "localstack.utils.common.TMP_THREADS.append",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.dynamodbstreams_api": {
  "data": {
   "shadows": "localstack.services.dynamodbstreams.dynamodbstreams_api"
  },
  "type": "import"
 },
 "localstack.services.infra.es_api": {
  "data": {
   "shadows": "localstack.services.es.es_api"
  },
  "type": "import"
 },
 "localstack.services.infra.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.infra.firehose_api": {
  "data": {
   "shadows": "localstack.services.firehose.firehose_api"
  },
  "type": "import"
 },
 "localstack.services.infra.generic_proxy": {
  "data": {
   "shadows": "localstack.services.generic_proxy"
  },
  "type": "import"
 },
 "localstack.services.infra.get_free_tcp_port": {
  "data": {
   "shadows": "localstack.utils.common.get_free_tcp_port"
  },
  "type": "import"
 },
 "localstack.services.infra.get_service_protocol": {
  "data": {
   "shadows": "localstack.utils.common.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.services.infra.get_service_status": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "localstack.config.parse_service_ports",
    "localstack.utils.common.is_port_open"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.get_services_status": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "get_service_status",
    "localstack.config.parse_service_ports"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.in_ci": {
  "data": {
   "shadows": "localstack.utils.bootstrap.in_ci"
  },
  "type": "import"
 },
 "localstack.services.infra.in_docker": {
  "data": {
   "shadows": "localstack.utils.common.in_docker"
  },
  "type": "import"
 },
 "localstack.services.infra.install": {
  "data": {
   "shadows": "localstack.services.install"
  },
  "type": "import"
 },
 "localstack.services.infra.is_debug": {
  "data": {
   "shadows": "localstack.utils.bootstrap.is_debug"
  },
  "type": "import"
 },
 "localstack.services.infra.is_linux": {
  "data": {
   "shadows": "localstack.utils.common.is_linux"
  },
  "type": "import"
 },
 "localstack.services.infra.is_port_open": {
  "data": {
   "shadows": "localstack.utils.common.is_port_open"
  },
  "type": "import"
 },
 "localstack.services.infra.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.infra.lambda_api": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api"
  },
  "type": "import"
 },
 "localstack.services.infra.load_plugins": {
  "data": {
   "shadows": "localstack.utils.bootstrap.load_plugins"
  },
  "type": "import"
 },
 "localstack.services.infra.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.infra.multiserver": {
  "data": {
   "shadows": "localstack.utils.server.multiserver"
  },
  "type": "import"
 },
 "localstack.services.infra.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.services.infra.persistence": {
  "data": {
   "shadows": "localstack.utils.persistence"
  },
  "type": "import"
 },
 "localstack.services.infra.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.infra.register_plugin": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "localstack.services.infra.SERVICE_PLUGINS"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.register_signal_handlers": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "localstack.services.infra.SIGNAL_HANDLERS_SETUP",
    "localstack.services.infra.signal"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.register_signal_handlers.signal_handler": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "localstack.services.infra.os",
    "stop_infra"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.restore_persisted_data": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "localstack.utils.persistence.restore_persisted_data"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.run": {
  "data": {
   "shadows": "localstack.utils.common.run"
  },
  "type": "import"
 },
 "localstack.services.infra.set_service_status": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "get_service_status",
    "localstack.config.parse_service_ports",
    "localstack.config.populate_configs",
    "localstack.constants.DEFAULT_SERVICE_PORTS.get",
    "localstack.services.infra.LOG",
    "localstack.services.infra.SERVICE_PLUGINS",
    "localstack.services.infra.os",
    "localstack.services.infra.re",
    "localstack.services.infra.update_config_variable"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.setup_logging": {
  "data": {
   "shadows": "localstack.utils.bootstrap.setup_logging"
  },
  "type": "import"
 },
 "localstack.services.infra.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "localstack.services.infra.start_apigateway": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "localstack.config.PORT_APIGATEWAY",
    "localstack.constants.DEFAULT_PORT_APIGATEWAY_BACKEND",
    "start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_cloudwatch": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "localstack.config.PORT_CLOUDWATCH",
    "start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_cloudwatch_logs": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "localstack.config.PORT_LOGS",
    "start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_dynamodbstreams": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "localstack.config.PORT_DYNAMODBSTREAMS",
    "localstack.services.dynamodbstreams.dynamodbstreams_api.serve",
    "start_local_api"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_ec2": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "localstack.config.PORT_EC2",
    "localstack.constants.DEFAULT_PORT_EC2_BACKEND",
    "start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_elasticsearch_service": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "localstack.config.PORT_ES",
    "localstack.services.es.es_api.serve",
    "start_local_api"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_events": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "localstack.config.PORT_EVENTS",
    "start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_firehose": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "localstack.config.PORT_FIREHOSE",
    "localstack.services.firehose.firehose_api.serve",
    "start_local_api"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_infra": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "localstack.config.DEFAULT_REGION",
    "localstack.config.LAMBDA_EXECUTOR",
    "localstack.constants.ENV_DEV",
    "localstack.constants.ENV_INTERNAL_TEST_RUN",
    "localstack.constants.LOCALSTACK_INFRA_PROCESS",
    "localstack.services.infra.SERVICE_PLUGINS",
    "localstack.services.infra.check_aws_credentials",
    "localstack.services.infra.check_infra",
    "localstack.services.infra.os",
    "localstack.services.infra.register_signal_handlers",
    "localstack.services.infra.restore_persisted_data",
    "localstack.services.infra.stop_infra",
    "localstack.services.infra.sys",
    "localstack.services.infra.time",
    "localstack.services.infra.traceback",
    "localstack.services.install.install_components",
    "localstack.utils.analytics.event_publisher.EVENT_START_INFRA",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.bootstrap.canonicalize_api_names",
    "localstack.utils.bootstrap.in_ci",
    "localstack.utils.bootstrap.load_plugins",
    "localstack.utils.bootstrap.setup_logging",
    "localstack.utils.common.in_docker",
    "localstack.utils.common.is_linux",
    "max",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_lambda": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "localstack.config.PORT_LAMBDA",
    "localstack.services.awslambda.lambda_api.serve",
    "start_local_api"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_local_api": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread",
    "localstack.utils.common.TMP_THREADS.append",
    "localstack.utils.common.get_service_protocol",
    "method",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_moto_server": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "localstack.config.BUNDLE_API_PROCESSES",
    "localstack.config.USE_SSL",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.utils.common.get_free_tcp_port",
    "localstack.utils.common.get_service_protocol",
    "localstack.utils.server.multiserver.start_api_server",
    "print",
    "start_moto_server_separate"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_moto_server_separate": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "localstack.constants.BIND_HOST",
    "localstack.constants.LOCALSTACK_VENV_FOLDER",
    "localstack.services.infra.do_run",
    "localstack.services.infra.os",
    "localstack.utils.common.run"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_proxy": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "localstack.config.USE_SSL",
    "localstack.services.generic_proxy.GenericProxy",
    "localstack.utils.common.TMP_THREADS.append"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_proxy_for_service": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "localstack.services.infra.DEFAULT_BACKEND_HOST",
    "localstack.services.infra.os",
    "start_proxy"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_redshift": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "localstack.config.PORT_REDSHIFT",
    "start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_route53": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "localstack.config.PORT_ROUTE53",
    "start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_secretsmanager": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "localstack.config.PORT_SECRETSMANAGER",
    "start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_ses": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "localstack.config.PORT_SES",
    "start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_sns": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "localstack.config.PORT_SNS",
    "localstack.constants.DEFAULT_PORT_SNS_BACKEND",
    "start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_ssm": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "localstack.config.PORT_SSM",
    "start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.start_sts": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "localstack.config.PORT_STS",
    "start_moto_server"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.stop_infra": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.cleanup",
    "localstack.services.generic_proxy.QUIET",
    "localstack.services.infra.time",
    "localstack.utils.analytics.event_publisher.EVENT_STOP_INFRA",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.common.INFRA_STOPPED",
    "localstack.utils.common.cleanup",
    "localstack.utils.common.cleanup_resources"
   ]
  },
  "type": "function"
 },
 "localstack.services.infra.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "localstack.services.infra.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.services.infra.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.services.infra.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.infra.update_config_variable": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "localstack.config",
    "localstack.services.infra.LOG",
    "setattr"
   ]
  },
  "type": "function"
 },
 "localstack.services.install": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "len",
    "localstack.constants.LOCALSTACK_MAVEN_VERSION",
    "localstack.services.install.INSTALL_DIR_INFRA",
    "localstack.services.install.ROOT_PATH",
    "localstack.services.install.THIS_PATH",
    "localstack.services.install.install_all_components",
    "localstack.services.install.install_amazon_kinesis_client_libs",
    "localstack.services.install.logging",
    "localstack.services.install.os",
    "localstack.services.install.sys",
    "localstack.utils.bootstrap.bootstrap_installation",
    "print"
   ]
  },
  "type": "module"
 },
 "localstack.services.install.APPLY_DDB_ALPINE_FIX": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "localstack.services.install.DEFAULT_SERVICE_PORTS": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_SERVICE_PORTS"
  },
  "type": "import"
 },
 "localstack.services.install.DYNAMODB_JAR_URL": {
  "data": {
   "shadows": "localstack.constants.DYNAMODB_JAR_URL"
  },
  "type": "import"
 },
 "localstack.services.install.DYNAMODB_JAR_URL_ALPINE": {
  "data": {
   "shadows": "localstack.constants.DYNAMODB_JAR_URL_ALPINE"
  },
  "type": "import"
 },
 "localstack.services.install.ELASTICMQ_JAR_URL": {
  "data": {
   "shadows": "localstack.constants.ELASTICMQ_JAR_URL"
  },
  "type": "import"
 },
 "localstack.services.install.ELASTICSEARCH_DELETE_MODULES": {
  "data": {
   "shadows": "localstack.constants.ELASTICSEARCH_DELETE_MODULES"
  },
  "type": "import"
 },
 "localstack.services.install.ELASTICSEARCH_JAR_URL": {
  "data": {
   "shadows": "localstack.constants.ELASTICSEARCH_JAR_URL"
  },
  "type": "import"
 },
 "localstack.services.install.ELASTICSEARCH_PLUGIN_LIST": {
  "data": {
   "shadows": "localstack.constants.ELASTICSEARCH_PLUGIN_LIST"
  },
  "type": "import"
 },
 "localstack.services.install.INSTALL_DIR_DDB": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "localstack.services.install.INSTALL_DIR_ELASTICMQ": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "localstack.services.install.INSTALL_DIR_ES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "localstack.services.install.INSTALL_DIR_INFRA": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.services.install.INSTALL_DIR_KCL": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "localstack.services.install.INSTALL_DIR_NPM": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "localstack.services.install.INSTALL_DIR_STEPFUNCTIONS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "localstack.services.install.INSTALL_PATH_LOCALSTACK_FAT_JAR": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "localstack.services.install.JAVAC_TARGET_VERSION": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "localstack.services.install.LOCALSTACK_INFRA_PROCESS": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_INFRA_PROCESS"
  },
  "type": "import"
 },
 "localstack.services.install.LOCALSTACK_MAVEN_VERSION": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_MAVEN_VERSION"
  },
  "type": "import"
 },
 "localstack.services.install.LOGGER": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "localstack.services.install.OVERWRITE_DDB_FILES_IN_DOCKER": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "localstack.services.install.ROOT_PATH": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "localstack.services.install.STEPFUNCTIONS_ZIP_URL": {
  "data": {
   "shadows": "localstack.constants.STEPFUNCTIONS_ZIP_URL"
  },
  "type": "import"
 },
 "localstack.services.install.STS_JAR_URL": {
  "data": {
   "shadows": "localstack.constants.STS_JAR_URL"
  },
  "type": "import"
 },
 "localstack.services.install.THIS_PATH": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "localstack.services.install.URL_LOCALSTACK_FAT_JAR": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "localstack.services.install.bootstrap": {
  "data": {
   "shadows": "localstack.utils.bootstrap"
  },
  "type": "import"
 },
 "localstack.services.install.chmod_r": {
  "data": {
   "shadows": "localstack.utils.common.chmod_r"
  },
  "type": "import"
 },
 "localstack.services.install.download": {
  "data": {
   "shadows": "localstack.utils.common.download"
  },
  "type": "import"
 },
 "localstack.services.install.download_and_extract_with_retry": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "Exception",
    "download_and_extract",
    "localstack.services.install.LOGGER",
    "localstack.utils.common.mkdir",
    "localstack.utils.common.rm_rf"
   ]
  },
  "type": "function"
 },
 "localstack.services.install.download_and_extract_with_retry.download_and_extract": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "localstack.services.install.os",
    "localstack.utils.common.download",
    "localstack.utils.common.unzip"
   ]
  },
  "type": "function"
 },
 "localstack.services.install.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "localstack.services.install.in_docker": {
  "data": {
   "shadows": "localstack.utils.common.in_docker"
  },
  "type": "import"
 },
 "localstack.services.install.install_all_components": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "localstack.constants.DEFAULT_SERVICE_PORTS.keys",
    "localstack.constants.LOCALSTACK_INFRA_PROCESS",
    "localstack.services.install.install_components",
    "localstack.services.install.os",
    "localstack.utils.bootstrap.load_plugins"
   ]
  },
  "type": "function"
 },
 "localstack.services.install.install_amazon_kinesis_client_libs": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "localstack.constants.STS_JAR_URL",
    "localstack.services.install.INSTALL_DIR_KCL",
    "localstack.services.install.JAVAC_TARGET_VERSION",
    "localstack.services.install.ROOT_PATH",
    "localstack.services.install.glob",
    "localstack.services.install.os",
    "localstack.services.install.shutil",
    "localstack.services.install.tempfile",
    "localstack.utils.common.download",
    "localstack.utils.common.mkdir",
    "localstack.utils.common.run",
    "localstack.utils.kinesis.kclipy_helper.get_kcl_classpath"
   ]
  },
  "type": "function"
 },
 "localstack.services.install.install_component": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "installer",
    "localstack.services.install.install_dynamodb_local",
    "localstack.services.install.install_elasticmq",
    "localstack.services.install.install_elasticsearch",
    "localstack.services.install.install_kinesalite",
    "localstack.services.install.install_stepfunctions_local"
   ]
  },
  "type": "function"
 },
 "localstack.services.install.install_components": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "localstack.services.install.install_component",
    "localstack.services.install.install_lambda_java_libs",
    "localstack.utils.common.parallelize"
   ]
  },
  "type": "function"
 },
 "localstack.services.install.install_dynamodb_local": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "download_and_extract_with_retry",
    "localstack.constants.DYNAMODB_JAR_URL",
    "localstack.constants.DYNAMODB_JAR_URL_ALPINE",
    "localstack.services.install.APPLY_DDB_ALPINE_FIX",
    "localstack.services.install.INSTALL_DIR_DDB",
    "localstack.services.install.OVERWRITE_DDB_FILES_IN_DOCKER",
    "localstack.services.install.os",
    "localstack.services.install.tempfile",
    "localstack.utils.common.in_docker",
    "localstack.utils.common.is_alpine",
    "localstack.utils.common.rm_rf",
    "localstack.utils.common.run",
    "localstack.utils.common.save_file",
    "log_install_msg"
   ]
  },
  "type": "function"
 },
 "localstack.services.install.install_elasticmq": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "localstack.constants.ELASTICMQ_JAR_URL",
    "localstack.services.install.INSTALL_DIR_ELASTICMQ",
    "localstack.services.install.os",
    "localstack.services.install.shutil",
    "localstack.services.install.tempfile",
    "localstack.utils.common.download",
    "localstack.utils.common.mkdir",
    "log_install_msg"
   ]
  },
  "type": "function"
 },
 "localstack.services.install.install_elasticsearch": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception",
    "download_and_extract_with_retry",
    "localstack.constants.ELASTICSEARCH_DELETE_MODULES",
    "localstack.constants.ELASTICSEARCH_JAR_URL",
    "localstack.constants.ELASTICSEARCH_PLUGIN_LIST",
    "localstack.services.install.INSTALL_DIR_ES",
    "localstack.services.install.INSTALL_DIR_INFRA",
    "localstack.services.install.glob",
    "localstack.services.install.os",
    "localstack.services.install.re",
    "localstack.services.install.shutil",
    "localstack.services.install.tempfile",
    "localstack.utils.common.chmod_r",
    "localstack.utils.common.is_alpine",
    "localstack.utils.common.load_file",
    "localstack.utils.common.mkdir",
    "localstack.utils.common.rm_rf",
    "localstack.utils.common.run",
    "localstack.utils.common.save_file",
    "log_install_msg",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.services.install.install_kinesalite": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "localstack.services.install.INSTALL_DIR_NPM",
    "localstack.services.install.ROOT_PATH",
    "localstack.services.install.os",
    "localstack.utils.common.run",
    "log_install_msg"
   ]
  },
  "type": "function"
 },
 "localstack.services.install.install_lambda_java_libs": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "localstack.services.install.INSTALL_PATH_LOCALSTACK_FAT_JAR",
    "localstack.services.install.URL_LOCALSTACK_FAT_JAR",
    "localstack.services.install.os",
    "localstack.utils.common.download",
    "log_install_msg"
   ]
  },
  "type": "function"
 },
 "localstack.services.install.install_stepfunctions_local": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "download_and_extract_with_retry",
    "localstack.constants.STEPFUNCTIONS_ZIP_URL",
    "localstack.services.install.INSTALL_DIR_STEPFUNCTIONS",
    "localstack.services.install.os",
    "localstack.services.install.tempfile",
    "log_install_msg"
   ]
  },
  "type": "function"
 },
 "localstack.services.install.is_alpine": {
  "data": {
   "shadows": "localstack.utils.common.is_alpine"
  },
  "type": "import"
 },
 "localstack.services.install.kclipy_helper": {
  "data": {
   "shadows": "localstack.utils.kinesis.kclipy_helper"
  },
  "type": "import"
 },
 "localstack.services.install.load_file": {
  "data": {
   "shadows": "localstack.utils.common.load_file"
  },
  "type": "import"
 },
 "localstack.services.install.log_install_msg": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "localstack.services.install.LOGGER"
   ]
  },
  "type": "function"
 },
 "localstack.services.install.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.install.mkdir": {
  "data": {
   "shadows": "localstack.utils.common.mkdir"
  },
  "type": "import"
 },
 "localstack.services.install.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.services.install.parallelize": {
  "data": {
   "shadows": "localstack.utils.common.parallelize"
  },
  "type": "import"
 },
 "localstack.services.install.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.install.rm_rf": {
  "data": {
   "shadows": "localstack.utils.common.rm_rf"
  },
  "type": "import"
 },
 "localstack.services.install.run": {
  "data": {
   "shadows": "localstack.utils.common.run"
  },
  "type": "import"
 },
 "localstack.services.install.save_file": {
  "data": {
   "shadows": "localstack.utils.common.save_file"
  },
  "type": "import"
 },
 "localstack.services.install.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "localstack.services.install.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.services.install.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "localstack.services.install.unzip": {
  "data": {
   "shadows": "localstack.utils.common.unzip"
  },
  "type": "import"
 },
 "localstack.services.kinesis": {
  "data": {},
  "type": "module"
 },
 "localstack.services.kinesis.kinesis_listener": {
  "data": {
   "symbols_in_volume": [
    "localstack.services.kinesis.kinesis_listener.ACTION_PREFIX",
    "localstack.services.kinesis.kinesis_listener.ProxyListenerKinesis"
   ]
  },
  "type": "module"
 },
 "localstack.services.kinesis.kinesis_listener.ACTION_CREATE_STREAM": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.ACTION_DELETE_STREAM": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.ACTION_PREFIX": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORD": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORDS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.ACTION_UPDATE_SHARD_COUNT": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.ProxyListenerKinesis": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.kinesis.kinesis_listener.ProxyListenerKinesis.forward_request": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "kinesis_error_response",
    "localstack.config.KINESIS_ERROR_PROBABILITY",
    "localstack.services.kinesis.kinesis_listener.ACTION_PREFIX",
    "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORD",
    "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORDS",
    "localstack.services.kinesis.kinesis_listener.json",
    "localstack.services.kinesis.kinesis_listener.random",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.kinesis.kinesis_listener.ProxyListenerKinesis.return_response": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "localstack.services.awslambda.lambda_api.process_kinesis_records",
    "localstack.services.kinesis.kinesis_listener.ACTION_CREATE_STREAM",
    "localstack.services.kinesis.kinesis_listener.ACTION_DELETE_STREAM",
    "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORD",
    "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORDS",
    "localstack.services.kinesis.kinesis_listener.ACTION_UPDATE_SHARD_COUNT",
    "localstack.services.kinesis.kinesis_listener.json",
    "localstack.utils.analytics.event_publisher.EVENT_KINESIS_CREATE_STREAM",
    "localstack.utils.analytics.event_publisher.EVENT_KINESIS_DELETE_STREAM",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.common.to_str",
    "range",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.kinesis.kinesis_listener.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.UPDATE_KINESIS": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_listener.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.kinesis_error_response": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORD",
    "localstack.services.kinesis.kinesis_listener.json",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.kinesis.kinesis_listener.lambda_api": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.kinesis.kinesis_starter.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.kinesis.kinesis_starter.DEFAULT_PORT_KINESIS_BACKEND": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_PORT_KINESIS_BACKEND"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.LOGGER": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.services.kinesis.kinesis_starter.ROOT_PATH": {
  "data": {
   "shadows": "localstack.services.install.ROOT_PATH"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.check_kinesis": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "list",
    "localstack.services.kinesis.kinesis_starter.LOGGER",
    "localstack.services.kinesis.kinesis_starter.traceback",
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.services.kinesis.kinesis_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.do_run": {
  "data": {
   "shadows": "localstack.services.infra.do_run"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.get_service_protocol": {
  "data": {
   "shadows": "localstack.services.infra.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.install": {
  "data": {
   "shadows": "localstack.services.install"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.mkdir": {
  "data": {
   "shadows": "localstack.utils.common.mkdir"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.start_kinesis": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "localstack.config.DATA_DIR",
    "localstack.config.KINESIS_LATENCY",
    "localstack.config.KINESIS_SHARD_LIMIT",
    "localstack.config.PORT_KINESIS",
    "localstack.constants.DEFAULT_PORT_KINESIS_BACKEND",
    "localstack.services.infra.do_run",
    "localstack.services.infra.get_service_protocol",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.services.install.ROOT_PATH",
    "localstack.services.install.install_kinesalite",
    "localstack.utils.common.mkdir",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.services.kinesis.kinesis_starter.start_proxy_for_service": {
  "data": {
   "shadows": "localstack.services.infra.start_proxy_for_service"
  },
  "type": "import"
 },
 "localstack.services.kinesis.kinesis_starter.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.s3": {
  "data": {},
  "type": "module"
 },
 "localstack.services.s3.multipart_content": {
  "data": {},
  "type": "module"
 },
 "localstack.services.s3.multipart_content._iter_multipart_parts": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "localstack.services.s3.multipart_content.cgi",
    "parse_data"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.multipart_content.cgi": {
  "data": {
   "shadows": "cgi"
  },
  "type": "import"
 },
 "localstack.services.s3.multipart_content.email.parser": {
  "data": {
   "shadows": "email.parser"
  },
  "type": "import"
 },
 "localstack.services.s3.multipart_content.expand_multipart_filename": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "localstack.services.s3.multipart_content._iter_multipart_parts",
    "localstack.services.s3.multipart_content.cgi",
    "localstack.utils.common.to_bytes"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.multipart_content.find_multipart_redirect_url": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "localstack.services.s3.multipart_content._iter_multipart_parts",
    "localstack.services.s3.multipart_content.cgi",
    "localstack.utils.common.to_bytes"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.multipart_content.to_bytes": {
  "data": {
   "shadows": "localstack.utils.common.to_bytes"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.s3.s3_listener.ProxyListenerS3",
    "localstack.services.s3.s3_listener.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.s3.s3_listener.ALLOWED_HEADER_OVERRIDES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "localstack.services.s3.s3_listener.BUCKET_CORS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "localstack.services.s3.s3_listener.BUCKET_LIFECYCLE": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "localstack.services.s3.s3_listener.ClientError": {
  "data": {
   "shadows": "botocore.client.ClientError"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.HOSTNAME": {
  "data": {
   "shadows": "localstack.config.HOSTNAME"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.HOSTNAME_EXTERNAL": {
  "data": {
   "shadows": "localstack.config.HOSTNAME_EXTERNAL"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.LOGGER": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "localstack.services.s3.s3_listener.NOTIFICATION_DESTINATION_TYPES": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "localstack.services.s3.s3_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.ProxyListenerS3": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.s3.s3_listener.ProxyListenerS3._update_location": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "localstack.config.HOSTNAME_EXTERNAL",
    "localstack.config.PORT_S3",
    "localstack.services.s3.s3_listener.re",
    "localstack.utils.common.get_service_protocol"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.ProxyListenerS3.forward_request": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "localstack.services.s3.multipart_content.expand_multipart_filename",
    "localstack.services.s3.s3_listener.check_content_md5",
    "localstack.services.s3.s3_listener.delete_cors",
    "localstack.services.s3.s3_listener.get_cors",
    "localstack.services.s3.s3_listener.get_encryption",
    "localstack.services.s3.s3_listener.get_lifecycle",
    "localstack.services.s3.s3_listener.get_replication",
    "localstack.services.s3.s3_listener.handle_notification_request",
    "localstack.services.s3.s3_listener.set_cors",
    "localstack.services.s3.s3_listener.set_lifecycle",
    "localstack.services.s3.s3_listener.strip_chunk_signatures",
    "localstack.utils.common.to_bytes",
    "localstack.utils.persistence.record",
    "requests.models.Request",
    "six.moves.urllib.parse.parse_qs",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.ProxyListenerS3.is_query_allowable": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.ProxyListenerS3.is_s3_copy_request": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.ProxyListenerS3.return_response": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "Exception",
    "all",
    "isinstance",
    "len",
    "localstack.services.s3.multipart_content.find_multipart_redirect_url",
    "localstack.services.s3.s3_listener.ALLOWED_HEADER_OVERRIDES",
    "localstack.services.s3.s3_listener.LOGGER",
    "localstack.services.s3.s3_listener.append_cors_headers",
    "localstack.services.s3.s3_listener.append_last_modified_headers",
    "localstack.services.s3.s3_listener.expand_redirect_url",
    "localstack.services.s3.s3_listener.get_bucket_name",
    "localstack.services.s3.s3_listener.re",
    "localstack.services.s3.s3_listener.send_notifications",
    "localstack.services.s3.s3_listener.six",
    "localstack.utils.analytics.event_publisher.EVENT_S3_CREATE_BUCKET",
    "localstack.utils.analytics.event_publisher.EVENT_S3_DELETE_BUCKET",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.common.to_bytes",
    "localstack.utils.common.to_str",
    "six.moves.urllib.parse.parse_qs",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.Request": {
  "data": {
   "shadows": "requests.models.Request"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.S3_NOTIFICATIONS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "localstack.services.s3.s3_listener.TIMESTAMP_FORMAT_MILLIS": {
  "data": {
   "shadows": "localstack.utils.common.TIMESTAMP_FORMAT_MILLIS"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.UPDATE_S3": {
  "data": {
   "lineno": 726
  },
  "type": "constant"
 },
 "localstack.services.s3.s3_listener.XMLNS_S3": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "localstack.services.s3.s3_listener._get_s3_filter": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.append_cors_headers": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "localstack.services.s3.s3_listener.BUCKET_CORS",
    "localstack.services.s3.s3_listener.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.append_last_modified_headers": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "localstack.services.s3.s3_listener.LOGGER",
    "localstack.services.s3.s3_listener.datetime",
    "localstack.services.s3.s3_listener.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.botocore.config": {
  "data": {
   "shadows": "botocore.config"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.bucket_exists": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "botocore.client.ClientError",
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.check_content_md5": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "Exception",
    "localstack.services.s3.s3_listener.base64",
    "localstack.services.s3.s3_listener.codecs",
    "localstack.services.s3.s3_listener.strip_chunk_signatures",
    "localstack.services.s3.s3_listener.xmltodict",
    "localstack.utils.aws.aws_responses.requests_response",
    "localstack.utils.common.md5",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.clone": {
  "data": {
   "shadows": "localstack.utils.common.clone"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.dateutil.parser": {
  "data": {
   "shadows": "dateutil.parser"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.delete_cors": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "bucket_exists",
    "localstack.services.s3.s3_listener.BUCKET_CORS",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.event_type_matches": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "events",
    "localstack.services.s3.s3_listener.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.expand_redirect_url": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "localstack.services.s3.s3_listener.collections",
    "six.moves.urllib.parse.parse_qsl",
    "six.moves.urllib.parse.urlencode",
    "six.moves.urllib.parse.urlparse",
    "six.moves.urllib.parse.urlunparse"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.filter_rules_match": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "_get_s3_filter",
    "localstack.services.s3.s3_listener.LOGGER",
    "prefix_with_slash"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.get_bucket_name": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "localstack.config.HOSTNAME",
    "localstack.config.HOSTNAME_EXTERNAL",
    "localstack.services.s3.s3_listener.re",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.get_cors": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "bucket_exists",
    "localstack.services.s3.s3_listener.BUCKET_CORS",
    "localstack.services.s3.s3_listener.xmltodict",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.get_encryption": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "localstack.services.s3.s3_listener.xmltodict",
    "localstack.utils.aws.aws_responses.requests_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.get_event_message": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.common.TIMESTAMP_FORMAT_MILLIS",
    "localstack.utils.common.short_uid",
    "localstack.utils.common.timestamp"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.get_lifecycle": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "localstack.services.s3.s3_listener.BUCKET_LIFECYCLE",
    "localstack.services.s3.s3_listener.xmltodict",
    "localstack.utils.aws.aws_responses.requests_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.get_replication": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "localstack.config",
    "localstack.services.s3.s3_listener.xmltodict",
    "localstack.utils.aws.aws_responses.requests_response"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.get_service_protocol": {
  "data": {
   "shadows": "localstack.utils.common.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.handle_notification_request": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "events",
    "isinstance",
    "list",
    "localstack.config",
    "localstack.config.get",
    "localstack.services.s3.s3_listener.NOTIFICATION_DESTINATION_TYPES",
    "localstack.services.s3.s3_listener.S3_NOTIFICATIONS",
    "localstack.services.s3.s3_listener.XMLNS_S3",
    "localstack.services.s3.s3_listener._get_s3_filter",
    "localstack.services.s3.s3_listener.six",
    "localstack.services.s3.s3_listener.uuid",
    "localstack.services.s3.s3_listener.xmltodict",
    "localstack.utils.common.clone",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.md5": {
  "data": {
   "shadows": "localstack.utils.common.md5"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.multipart_content": {
  "data": {
   "shadows": "localstack.services.s3.multipart_content"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.persistence": {
  "data": {
   "shadows": "localstack.utils.persistence"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.prefix_with_slash": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.queue_url_for_arn": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.requests_response": {
  "data": {
   "shadows": "localstack.utils.aws.aws_responses.requests_response"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.send_notification_for_subscriber": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "Exception",
    "filter",
    "localstack.services.s3.s3_listener.LOGGER",
    "localstack.services.s3.s3_listener.NOTIFICATION_DESTINATION_TYPES",
    "localstack.services.s3.s3_listener.event_type_matches",
    "localstack.services.s3.s3_listener.filter_rules_match",
    "localstack.services.s3.s3_listener.get_event_message",
    "localstack.services.s3.s3_listener.json",
    "localstack.services.s3.s3_listener.queue_url_for_arn",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.send_notifications": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "localstack.services.s3.s3_listener.S3_NOTIFICATIONS",
    "send_notification_for_subscriber"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.set_cors": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "bucket_exists",
    "dict",
    "isinstance",
    "localstack.services.s3.s3_listener.BUCKET_CORS",
    "localstack.services.s3.s3_listener.xmltodict",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.set_lifecycle": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "isinstance",
    "localstack.services.s3.s3_listener.BUCKET_LIFECYCLE",
    "localstack.services.s3.s3_listener.six",
    "localstack.services.s3.s3_listener.xmltodict",
    "localstack.utils.common.to_str",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.strip_chunk_signatures": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "localstack.services.s3.s3_listener.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_listener.timestamp": {
  "data": {
   "shadows": "localstack.utils.common.timestamp"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.to_bytes": {
  "data": {
   "shadows": "localstack.utils.common.to_bytes"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_listener.xmltodict": {
  "data": {
   "shadows": "xmltodict"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.s3.s3_starter.logging",
    "moto.server.main"
   ]
  },
  "type": "module"
 },
 "localstack.services.s3.s3_starter.DEFAULT_PORT_S3_BACKEND": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_PORT_S3_BACKEND"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.LOGGER": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "localstack.services.s3.s3_starter.S3_MAX_FILE_SIZE_MB": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "localstack.services.s3.s3_starter.apply_patches": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "localstack.services.s3.s3_starter.S3_MAX_FILE_SIZE_MB",
    "moto.s3.models.DEFAULT_KEY_BUFFER_SIZE",
    "moto.s3.models.FakeKey.__init__",
    "original_init"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.apply_patches.init": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "moto.s3.models.DEFAULT_KEY_BUFFER_SIZE",
    "original_init"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.check_s3": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "list",
    "localstack.constants.DEFAULT_PORT_S3_BACKEND",
    "localstack.services.s3.s3_starter.LOGGER",
    "localstack.services.s3.s3_starter.traceback",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.common.wait_for_port_open"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.do_run": {
  "data": {
   "shadows": "localstack.services.infra.do_run"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.get_service_protocol": {
  "data": {
   "shadows": "localstack.services.infra.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.main": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "localstack.services.s3.s3_starter.apply_patches",
    "localstack.services.s3.s3_starter.sys",
    "localstack.utils.bootstrap.setup_logging",
    "moto.server.main"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.moto_main": {
  "data": {
   "shadows": "moto.server.main"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.s3_models": {
  "data": {
   "shadows": "moto.s3.models"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.setup_logging": {
  "data": {
   "shadows": "localstack.utils.bootstrap.setup_logging"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.start_proxy_for_service": {
  "data": {
   "shadows": "localstack.services.infra.start_proxy_for_service"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.start_s3": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "localstack.config.PORT_S3",
    "localstack.constants.DEFAULT_PORT_S3_BACKEND",
    "localstack.services.infra.do_run",
    "localstack.services.infra.get_service_protocol",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.services.s3.s3_starter.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.services.s3.s3_starter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.services.s3.s3_starter.wait_for_port_open": {
  "data": {
   "shadows": "localstack.utils.common.wait_for_port_open"
  },
  "type": "import"
 },
 "localstack.services.sns": {
  "data": {},
  "type": "module"
 },
 "localstack.services.sns.sns_listener": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.sns.sns_listener.ProxyListenerSNS",
    "localstack.services.sns.sns_listener.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.sns.sns_listener.LOGGER": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "localstack.services.sns.sns_listener.MOTO_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.MOTO_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.ProxyListenerSNS": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.sns.sns_listener.ProxyListenerSNS._reset_account_id": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "localstack.constants.MOTO_ACCOUNT_ID",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.utils.aws.aws_stack.fix_account_id_in_arns"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.ProxyListenerSNS.forward_request": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception",
    "do_delete_topic",
    "do_list_tags_for_resource",
    "do_tag_resource",
    "do_unsubscribe",
    "do_untag_resource",
    "get_subscription_by_arn",
    "int",
    "len",
    "localstack.services.sns.sns_listener.SNS_SUBSCRIPTIONS",
    "localstack.utils.aws.aws_stack.check_valid_region",
    "localstack.utils.aws.aws_stack.fix_account_id_in_arns",
    "localstack.utils.common.to_str",
    "make_error",
    "make_response",
    "publish_message",
    "range",
    "requests.models.Request",
    "six.moves.urllib.parse.parse_qs",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.ProxyListenerSNS.return_response": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "do_create_topic",
    "do_subscribe",
    "get_subscribe_attributes",
    "localstack.services.sns.sns_listener.xmltodict",
    "localstack.utils.analytics.event_publisher.EVENT_SNS_CREATE_TOPIC",
    "localstack.utils.analytics.event_publisher.EVENT_SNS_DELETE_TOPIC",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.aws.aws_stack.fix_account_id_in_arns",
    "localstack.utils.common.to_str",
    "six.moves.urllib.parse.parse_qs"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.Request": {
  "data": {
   "shadows": "requests.models.Request"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.SNS_SUBSCRIPTIONS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "localstack.services.sns.sns_listener.SNS_TAGS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "localstack.services.sns.sns_listener.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.TEST_SNS_URL": {
  "data": {
   "shadows": "localstack.config.TEST_SNS_URL"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.TIMESTAMP_FORMAT_MILLIS": {
  "data": {
   "shadows": "localstack.utils.common.TIMESTAMP_FORMAT_MILLIS"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.UPDATE_SNS": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "localstack.services.sns.sns_listener._get_tags": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "localstack.services.sns.sns_listener.SNS_TAGS"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.check_filter_policy": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "localstack.services.sns.sns_listener.evaluate_filter_policy_conditions"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.create_sns_message_body": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "get_message_attributes",
    "localstack.services.sns.sns_listener.json",
    "localstack.services.sns.sns_listener.six",
    "localstack.services.sns.sns_listener.uuid",
    "localstack.utils.common.TIMESTAMP_FORMAT_MILLIS",
    "localstack.utils.common.timestamp",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.create_sqs_message_attributes": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.do_create_topic": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "localstack.services.sns.sns_listener.SNS_SUBSCRIPTIONS"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.do_delete_topic": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "localstack.services.sns.sns_listener.SNS_SUBSCRIPTIONS"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.do_list_tags_for_resource": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "localstack.services.sns.sns_listener._get_tags"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.do_subscribe": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "localstack.config.TEST_SNS_URL",
    "localstack.services.sns.sns_listener.SNS_SUBSCRIPTIONS",
    "localstack.services.sns.sns_listener.publish_message",
    "localstack.utils.common.short_uid"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.do_tag_resource": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "localstack.services.sns.sns_listener._get_tags"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.do_unsubscribe": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "localstack.services.sns.sns_listener.SNS_SUBSCRIPTIONS"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.do_untag_resource": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "localstack.services.sns.sns_listener.SNS_TAGS",
    "localstack.services.sns.sns_listener._get_tags"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.evaluate_condition": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "dict",
    "localstack.services.sns.sns_listener.evaluate_numeric_condition",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.evaluate_filter_policy_conditions": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "list",
    "localstack.services.sns.sns_listener.ast",
    "localstack.services.sns.sns_listener.evaluate_condition",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.evaluate_numeric_condition": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "len",
    "localstack.services.sns.sns_listener.is_number",
    "range"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.get_message_attributes": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.get_subscribe_attributes": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.get_subscription_by_arn": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "localstack.services.sns.sns_listener.SNS_SUBSCRIPTIONS"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.get_topic_by_arn": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "localstack.services.sns.sns_listener.SNS_SUBSCRIPTIONS"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.is_number": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.lambda_api": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.make_error": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "localstack.utils.common.short_uid",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.make_response": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "localstack.utils.common.short_uid",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.publish_message": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Exception",
    "check_filter_policy",
    "create_sns_message_body",
    "create_sqs_message_attributes",
    "get_message_attributes",
    "localstack.services.awslambda.lambda_api.process_sns_notification",
    "localstack.services.sns.sns_listener.LOGGER",
    "localstack.services.sns.sns_listener.SNS_SUBSCRIPTIONS",
    "localstack.services.sns.sns_listener.json",
    "localstack.services.sns.sns_listener.requests",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.get_sqs_queue_url",
    "make_error",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.sns.sns_listener.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.timestamp": {
  "data": {
   "shadows": "localstack.utils.common.timestamp"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "localstack.services.sns.sns_listener.xmltodict": {
  "data": {
   "shadows": "xmltodict"
  },
  "type": "import"
 },
 "localstack.services.sqs": {
  "data": {},
  "type": "module"
 },
 "localstack.services.sqs.sqs_listener": {
  "data": {
   "symbols_in_volume": [
    "localstack.services.sqs.sqs_listener.ProxyListenerSQS",
    "localstack.services.sqs.sqs_listener.XMLNS_SQS"
   ]
  },
  "type": "module"
 },
 "localstack.services.sqs.sqs_listener.HOSTNAME_EXTERNAL": {
  "data": {
   "shadows": "localstack.config.HOSTNAME_EXTERNAL"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS._add_queue_attributes": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "localstack.services.sqs.sqs_listener.QUEUE_ATTRIBUTES",
    "localstack.services.sqs.sqs_listener.re"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS._fire_event": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "localstack.services.sqs.sqs_listener.xmltodict",
    "localstack.utils.analytics.event_publisher.EVENT_SQS_CREATE_QUEUE",
    "localstack.utils.analytics.event_publisher.EVENT_SQS_DELETE_QUEUE",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS._format_attributes": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS._queue_url": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "localstack.config.TEST_SQS_URL",
    "localstack.config.USE_SSL"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS._send_message": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "localstack.services.awslambda.lambda_api.process_sqs_message",
    "localstack.services.sqs.sqs_listener.SUCCESSFUL_SEND_MESSAGE_XML_TEMPLATE",
    "localstack.services.sqs.sqs_listener.uuid",
    "localstack.utils.aws.aws_stack.extract_region_from_auth_header",
    "localstack.utils.common.md5",
    "requests.models.Response",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS._set_queue_attributes": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "dict",
    "localstack.services.sqs.sqs_listener.QUEUE_ATTRIBUTES",
    "localstack.services.sqs.sqs_listener.UNSUPPORTED_ATTRIBUTE_NAMES"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS.format_message_attributes": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS.forward_request": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "requests.models.Request",
    "six.moves.urllib.parse.urlencode"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS.parse_request_data": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "localstack.utils.common.to_str",
    "six.moves.urllib.parse.parse_qs",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.ProxyListenerSQS.return_response": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "get_external_port",
    "len",
    "localstack.config.HOSTNAME_EXTERNAL",
    "localstack.config.SQS_PORT_EXTERNAL",
    "localstack.config.USE_SSL",
    "localstack.services.sqs.sqs_listener.XMLNS_SQS",
    "localstack.services.sqs.sqs_listener.re",
    "localstack.services.sqs.sqs_listener.uuid",
    "localstack.utils.aws.aws_stack.extract_region_from_auth_header",
    "localstack.utils.common.to_str",
    "requests.models.Response",
    "six.moves.urllib.parse.parse_qs"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.QUEUE_ATTRIBUTES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_listener.Request": {
  "data": {
   "shadows": "requests.models.Request"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.SQS_PORT_EXTERNAL": {
  "data": {
   "shadows": "localstack.config.SQS_PORT_EXTERNAL"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.SUCCESSFUL_SEND_MESSAGE_XML_TEMPLATE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_listener.UNSUPPORTED_ATTRIBUTE_NAMES": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_listener.UPDATE_SQS": {
  "data": {
   "lineno": 308
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_listener.VALID_ATTRIBUTE_NAMES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_listener.XMLNS_SQS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_listener.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.extract_region_from_auth_header": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack.extract_region_from_auth_header"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.get_external_port": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "localstack.services.sqs.sqs_listener.lambda_api": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.md5": {
  "data": {
   "shadows": "localstack.utils.common.md5"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.urlencode": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlencode"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_listener.xmltodict": {
  "data": {
   "shadows": "xmltodict"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.sqs.sqs_starter.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.sqs.sqs_starter.DEFAULT_PORT_SQS_BACKEND": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_PORT_SQS_BACKEND"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.INSTALL_DIR_ELASTICMQ": {
  "data": {
   "shadows": "localstack.services.install.INSTALL_DIR_ELASTICMQ"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.LOCALSTACK_HOSTNAME": {
  "data": {
   "shadows": "localstack.config.LOCALSTACK_HOSTNAME"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.LOGGER": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_starter.MAX_HEAP_SIZE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.services.sqs.sqs_starter.TMP_FILES": {
  "data": {
   "shadows": "localstack.utils.common.TMP_FILES"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.TMP_FOLDER": {
  "data": {
   "shadows": "localstack.config.TMP_FOLDER"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.do_run": {
  "data": {
   "shadows": "localstack.services.infra.do_run"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.get_service_protocol": {
  "data": {
   "shadows": "localstack.services.infra.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.install_elasticmq": {
  "data": {
   "shadows": "localstack.services.install.install_elasticmq"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.save_file": {
  "data": {
   "shadows": "localstack.utils.common.save_file"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.start_proxy_for_service": {
  "data": {
   "shadows": "localstack.services.infra.start_proxy_for_service"
  },
  "type": "import"
 },
 "localstack.services.sqs.sqs_starter.start_sqs": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "localstack.config.LOCALSTACK_HOSTNAME",
    "localstack.config.PORT_SQS",
    "localstack.config.TMP_FOLDER",
    "localstack.constants.DEFAULT_PORT_SQS_BACKEND",
    "localstack.services.infra.do_run",
    "localstack.services.infra.get_service_protocol",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.services.install.INSTALL_DIR_ELASTICMQ",
    "localstack.services.install.install_elasticmq",
    "localstack.services.sqs.sqs_starter.MAX_HEAP_SIZE",
    "localstack.services.sqs.sqs_starter.os",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.common.save_file",
    "localstack.utils.common.short_uid",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.services.stepfunctions": {
  "data": {},
  "type": "module"
 },
 "localstack.services.stepfunctions.stepfunctions_listener": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.stepfunctions.stepfunctions_listener.ProxyListenerStepFunctions",
    "localstack.services.stepfunctions.stepfunctions_listener.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.LOG": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.ProxyListenerStepFunctions": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.ProxyListenerStepFunctions.forward_request": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.ProxyListenerStepFunctions.return_response": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "localstack.services.stepfunctions.stepfunctions_listener.json",
    "localstack.utils.analytics.event_publisher.EVENT_STEPFUNCTIONS_CREATE_SM",
    "localstack.utils.analytics.event_publisher.EVENT_STEPFUNCTIONS_DELETE_SM",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.analytics.event_publisher.get_hash",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.UPDATE_STEPFUNCTIONS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_listener.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.services.stepfunctions.stepfunctions_starter.logging"
   ]
  },
  "type": "module"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.DEFAULT_PORT_STEPFUNCTIONS_BACKEND": {
  "data": {
   "shadows": "localstack.constants.DEFAULT_PORT_STEPFUNCTIONS_BACKEND"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.LOG": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.MAX_HEAP_SIZE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.do_run": {
  "data": {
   "shadows": "localstack.services.infra.do_run"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.get_service_protocol": {
  "data": {
   "shadows": "localstack.services.infra.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.install": {
  "data": {
   "shadows": "localstack.services.install"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.start_proxy_for_service": {
  "data": {
   "shadows": "localstack.services.infra.start_proxy_for_service"
  },
  "type": "import"
 },
 "localstack.services.stepfunctions.stepfunctions_starter.start_stepfunctions": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "localstack.config.PORT_STEPFUNCTIONS",
    "localstack.constants.DEFAULT_PORT_STEPFUNCTIONS_BACKEND",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.services.infra.do_run",
    "localstack.services.infra.get_service_protocol",
    "localstack.services.infra.start_proxy_for_service",
    "localstack.services.install.INSTALL_DIR_STEPFUNCTIONS",
    "localstack.services.install.install_stepfunctions_local",
    "localstack.services.stepfunctions.stepfunctions_starter.MAX_HEAP_SIZE",
    "localstack.utils.aws.aws_stack.get_local_service_url",
    "localstack.utils.aws.aws_stack.get_region",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.stepfunctions": {
  "data": {},
  "type": "module"
 },
 "localstack.stepfunctions.models": {
  "data": {},
  "type": "module"
 },
 "localstack.stepfunctions.models.BaseModel": {
  "data": {
   "shadows": "moto.core.BaseModel"
  },
  "type": "import"
 },
 "localstack.stepfunctions.models.StateMachine": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "moto.core.BaseModel"
   ]
  },
  "type": "class"
 },
 "localstack.stepfunctions.models.StateMachine.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "localstack.stepfunctions.models.StateMachine",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.stepfunctions.models.StateMachine.create_from_cloudformation_json": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "classmethod",
    "localstack.stepfunctions.models.StateMachine"
   ]
  },
  "type": "function"
 },
 "localstack.utils": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.analytics": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.analytics.event_publisher": {
  "data": {
   "symbols_in_volume": [
    "localstack.utils.common.short_uid",
    "six.moves.queue.Queue"
   ]
  },
  "type": "module"
 },
 "localstack.utils.analytics.event_publisher.API_ENDPOINT": {
  "data": {
   "shadows": "localstack.constants.API_ENDPOINT"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "localstack.utils.common.JsonObject"
   ]
  },
  "type": "class"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "get_machine_id",
    "get_process_id",
    "localstack.utils.common.timestamp",
    "read_api_key_safe"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent.api_key": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent.event_type": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent.machine_id": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent.payload": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent.process_id": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.AnalyticsEvent.timestamp": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.CONFIG_FILE_PATH": {
  "data": {
   "shadows": "localstack.config.CONFIG_FILE_PATH"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.ENV_INTERNAL_TEST_RUN": {
  "data": {
   "shadows": "localstack.constants.ENV_INTERNAL_TEST_RUN"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.EVENT_APIGW_CREATE_API": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_APIGW_DELETE_API": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_CLOUDFORMATION_CREATE_STACK": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_DYNAMODB_CREATE_STREAM": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_DYNAMODB_CREATE_TABLE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_DYNAMODB_DELETE_TABLE": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_ES_CREATE_DOMAIN": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_ES_DELETE_DOMAIN": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_FIREHOSE_CREATE_STREAM": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_FIREHOSE_DELETE_STREAM": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_KINESIS_CREATE_STREAM": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_KINESIS_DELETE_STREAM": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_LAMBDA_CREATE_FUNC": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_LAMBDA_DELETE_FUNC": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_LAMBDA_INVOKE_FUNC": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_QUEUE": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_S3_CREATE_BUCKET": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_S3_DELETE_BUCKET": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_SNS_CREATE_TOPIC": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_SNS_DELETE_TOPIC": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_SQS_CREATE_QUEUE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_SQS_DELETE_QUEUE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_START_INFRA": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_STEPFUNCTIONS_CREATE_SM": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_STEPFUNCTIONS_DELETE_SM": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.EVENT_STOP_INFRA": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.JsonObject": {
  "data": {
   "shadows": "localstack.utils.common.JsonObject"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.MACHINE_ID": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.PROCESS_ID": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.SENDER_THREAD": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "localstack.utils.analytics.event_publisher.TMP_FOLDER": {
  "data": {
   "shadows": "localstack.config.TMP_FOLDER"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.fire_event": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "localstack.constants.ENV_INTERNAL_TEST_RUN",
    "localstack.utils.analytics.event_publisher.AnalyticsEvent",
    "localstack.utils.analytics.event_publisher.EVENT_QUEUE",
    "localstack.utils.analytics.event_publisher.SENDER_THREAD",
    "localstack.utils.analytics.event_publisher.is_travis",
    "localstack.utils.analytics.event_publisher.os",
    "localstack.utils.analytics.event_publisher.poll_and_send_messages",
    "localstack.utils.analytics.event_publisher.read_api_key_safe",
    "localstack.utils.common.FuncThread"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.get_config_file_homedir": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "localstack.config.CONFIG_FILE_PATH",
    "localstack.utils.analytics.event_publisher.get_or_create_file"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.get_config_file_tempdir": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "localstack.config.TMP_FOLDER",
    "localstack.utils.analytics.event_publisher.get_or_create_file",
    "localstack.utils.analytics.event_publisher.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.get_hash": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "hash",
    "hex"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.get_machine_id": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "localstack.utils.analytics.event_publisher.MACHINE_ID",
    "localstack.utils.analytics.event_publisher.PROCESS_ID",
    "localstack.utils.analytics.event_publisher.get_config_file_homedir",
    "localstack.utils.analytics.event_publisher.get_config_file_tempdir",
    "localstack.utils.analytics.event_publisher.json",
    "localstack.utils.common.load_file",
    "localstack.utils.common.save_file",
    "localstack.utils.common.short_uid",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.get_or_create_file": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.analytics.event_publisher.os",
    "localstack.utils.common.save_file"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.get_process_id": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "localstack.utils.analytics.event_publisher.PROCESS_ID"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.is_travis": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "localstack.utils.analytics.event_publisher.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.load_file": {
  "data": {
   "shadows": "localstack.utils.common.load_file"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.poll_and_send_messages": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "Exception",
    "localstack.constants.API_ENDPOINT.rstrip",
    "localstack.utils.analytics.event_publisher.EVENT_QUEUE",
    "localstack.utils.analytics.event_publisher.time",
    "localstack.utils.common.safe_requests.post"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.queue": {
  "data": {
   "shadows": "six.moves.queue"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.read_api_key": {
  "data": {
   "shadows": "localstack_ext.bootstrap.licensing.read_api_key"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.read_api_key_safe": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "localstack_ext.bootstrap.licensing.read_api_key"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.event_publisher.requests": {
  "data": {
   "shadows": "localstack.utils.common.safe_requests"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.save_file": {
  "data": {
   "shadows": "localstack.utils.common.save_file"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.timestamp": {
  "data": {
   "shadows": "localstack.utils.common.timestamp"
  },
  "type": "import"
 },
 "localstack.utils.analytics.event_publisher.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.utils.analytics.profiler.logging"
   ]
  },
  "type": "module"
 },
 "localstack.utils.analytics.profiler.LOCALSTACK_ROOT_FOLDER": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_ROOT_FOLDER"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.LOG": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "localstack.utils.analytics.profiler.PROFILED_METHODS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "localstack.utils.analytics.profiler.cProfile": {
  "data": {
   "shadows": "cProfile"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.curse": {
  "data": {
   "shadows": "forbiddenfruit.curse"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.profiled": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "profiled_via_cprofile"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "_patch",
    "localstack.utils.analytics.profiler.PROFILED_METHODS",
    "localstack.utils.analytics.profiler.threading"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile._patch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception",
    "forbiddenfruit.curse",
    "getattr",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile._patch.m_patched": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "localstack.utils.analytics.profiler.traceback",
    "m_obj",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile.add_stats": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "localstack.utils.analytics.profiler.pstats"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile.enable_thread_profiling": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile.enable_thread_profiling.profile_run": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "add_stats",
    "localstack.utils.analytics.profiler.cProfile",
    "thread_run"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile.get_thread_stats": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "getattr",
    "localstack.utils.analytics.profiler.LOG"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile.profile_current_thread": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "add_stats",
    "localstack.utils.analytics.profiler.cProfile"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile.wrapper": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_cprofile.wrapper.wrapped": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "any",
    "enable_thread_profiling",
    "f",
    "functools.wraps",
    "get_thread_stats",
    "profile_current_thread",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_yappi": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_yappi.wrapper": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_yappi.wrapper.wrapped": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "all",
    "c",
    "f",
    "functools.wraps",
    "list",
    "localstack.constants.LOCALSTACK_ROOT_FOLDER",
    "localstack.utils.analytics.profiler.yappi",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.profiled_via_yappi.wrapper.wrapped.c": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.analytics.profiler.pstats": {
  "data": {
   "shadows": "pstats"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "localstack.utils.analytics.profiler.yappi": {
  "data": {
   "shadows": "yappi"
  },
  "type": "import"
 },
 "localstack.utils.aws": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.aws.aws_models": {
  "data": {
   "symbols_in_volume": [
    "int",
    "localstack.utils.aws.aws_models.six"
   ]
  },
  "type": "module"
 },
 "localstack.utils.aws.aws_models.Component": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.Component.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.Component.__repr__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.Component.__str__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.Component.name": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.DynamoDB": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.DynamoDB.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.DynamoDB",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.DynamoDB.name": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.DynamoDBItem": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.DynamoDBItem.__eq__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.aws.aws_models.DynamoDBItem"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.DynamoDBItem.__hash__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.DynamoDBItem.__init__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.DynamoDBItem",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.DynamoDBStream": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.DynamoDBStream.__init__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.DynamoDBStream",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.ElasticSearch": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.ElasticSearch.__init__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.ElasticSearch",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.ElasticSearch.name": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.EventSource": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.EventSource.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.EventSource",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.EventSource.filter_type": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.aws.aws_models.six",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.EventSource.get": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.aws.aws_models.Component",
    "localstack.utils.aws.aws_models.DynamoDB",
    "localstack.utils.aws.aws_models.DynamoDBStream",
    "localstack.utils.aws.aws_models.ElasticSearch",
    "localstack.utils.aws.aws_models.EventSource",
    "localstack.utils.aws.aws_models.KinesisStream",
    "localstack.utils.aws.aws_models.LambdaFunction",
    "localstack.utils.aws.aws_models.SqsQueue",
    "print",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.FirehoseStream": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.KinesisStream"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.FirehoseStream.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.FirehoseStream",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.FirehoseStream.name": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.KinesisShard.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.KinesisShard",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard.__str__": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard.length": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.long"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard.max": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.long",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard.percent": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "float",
    "localstack.utils.aws.aws_models.KinesisShard"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard.print_tree": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard.sort": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisShard.sort.compare": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.long"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.KinesisStream.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.KinesisStream",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.connect": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.create": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.describe": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.destroy": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.time"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.get_status": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.name": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.put": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.aws.aws_models.json",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.read": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.KinesisStream.wait_for": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.aws.aws_models.time",
    "range"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.__init__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.LambdaFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.__str__": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.arn": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.function": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.get_qualifier_version": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.get_version": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.max_version": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "int",
    "max"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.name": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.LambdaFunction.qualifier_exists": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.S3Bucket": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.S3Bucket.__init__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.S3Bucket",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.S3Bucket.name": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.S3Notification": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.S3Notification.__init__": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.S3Notification",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.SqsQueue": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.Component"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_models.SqsQueue.__init__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "id",
    "localstack.utils.aws.aws_models.SqsQueue",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.SqsQueue.name": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_models.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_models.long": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "localstack.utils.aws.aws_models.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_models.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_models.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.aws.aws_responses.RequestsResponse": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.flask_error_response": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.json",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.flask_to_requests_response": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_responses.requests_response"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_responses.requests_error_response": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "flask_to_requests_response",
    "localstack.utils.aws.aws_responses.flask_error_response"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.requests_response": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "localstack.utils.aws.aws_responses.json",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_responses.requests_to_flask_response": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dict",
    "requests.models.Response"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.constants.ENV_DEV",
    "localstack.constants.REGION_LOCAL",
    "localstack.utils.aws.aws_stack.Environment",
    "localstack.utils.aws.aws_stack.logging"
   ]
  },
  "type": "module"
 },
 "localstack.utils.aws.aws_stack.APPLICATION_AMZ_JSON_1_0": {
  "data": {
   "shadows": "localstack.constants.APPLICATION_AMZ_JSON_1_0"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.APPLICATION_AMZ_JSON_1_1": {
  "data": {
   "shadows": "localstack.constants.APPLICATION_AMZ_JSON_1_1"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.APPLICATION_X_WWW_FORM_URLENCODED": {
  "data": {
   "shadows": "localstack.constants.APPLICATION_X_WWW_FORM_URLENCODED"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.AWS4Auth": {
  "data": {
   "shadows": "requests_aws4auth.AWS4Auth"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.BOTO_CLIENTS_CACHE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "localstack.utils.aws.aws_stack.CREATE_NEW_SESSION_PER_BOTO3_CONNECTION": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "localstack.utils.aws.aws_stack.CUSTOM_BOTO3_SESSION": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "localstack.utils.aws.aws_stack.DEFAULT_TIMER_LOOP_SECONDS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "localstack.utils.aws.aws_stack.ENV_ACCESS_KEY": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.utils.aws.aws_stack.ENV_DEV": {
  "data": {
   "shadows": "localstack.constants.ENV_DEV"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.ENV_SECRET_KEY": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "localstack.utils.aws.aws_stack.ENV_SESSION_TOKEN": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "localstack.utils.aws.aws_stack.Elasticsearch": {
  "data": {
   "shadows": "elasticsearch.Elasticsearch"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.Environment": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_stack.Environment.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "get_local_region"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.Environment.__str__": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.Environment.apply_json": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.aws.aws_stack.json",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.Environment.from_json": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "localstack.utils.aws.aws_stack.Environment",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.Environment.from_string": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Exception",
    "get_local_region",
    "len",
    "localstack.utils.aws.aws_stack.Environment",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.INITIAL_BOTO3_SESSION": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "localstack.utils.aws.aws_stack.KinesisStream": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.KinesisStream"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.LOCALHOST": {
  "data": {
   "shadows": "localstack.constants.LOCALHOST"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.LOCAL_REGION": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "localstack.utils.aws.aws_stack.LOG": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "localstack.utils.aws.aws_stack.MOTO_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.MOTO_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.PREDEFINED_ENVIRONMENTS": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "localstack.utils.aws.aws_stack.REGION_LOCAL": {
  "data": {
   "shadows": "localstack.constants.REGION_LOCAL"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.RequestsHttpConnection": {
  "data": {
   "shadows": "elasticsearch.RequestsHttpConnection"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.VelocityInput": {
  "data": {
   "lineno": 204
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_stack.VelocityInput.__init__": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.VelocityInput.json": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.json"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.VelocityInput.path": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "jsonpath_rw.parse",
    "len",
    "localstack.utils.aws.aws_stack.json"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.VelocityUtil": {
  "data": {
   "lineno": 222
  },
  "type": "class"
 },
 "localstack.utils.aws.aws_stack.VelocityUtil.base64Decode": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.aws.aws_stack.base64",
    "localstack.utils.aws.aws_stack.json",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.VelocityUtil.base64Encode": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "isinstance",
    "localstack.config.DEFAULT_ENCODING",
    "localstack.utils.aws.aws_stack.base64",
    "localstack.utils.aws.aws_stack.json",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack._resource_arn": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_account_id",
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.airspeed": {
  "data": {
   "shadows": "airspeed"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.apigateway_invocations_arn": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.apigateway_restapi_arn": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_account_id",
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.check_valid_region": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "Exception",
    "localstack.config.VALID_REGIONS",
    "localstack.utils.aws.aws_stack.re"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.cognito_user_pool_arn": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "_resource_arn"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.connect_elasticsearch": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "elasticsearch.Elasticsearch",
    "elasticsearch.RequestsHttpConnection",
    "localstack.utils.aws.aws_stack.CUSTOM_BOTO3_SESSION",
    "localstack.utils.aws.aws_stack.ENV_ACCESS_KEY",
    "localstack.utils.aws.aws_stack.ENV_SECRET_KEY",
    "localstack.utils.aws.aws_stack.ENV_SESSION_TOKEN",
    "localstack.utils.aws.aws_stack.get_elasticsearch_endpoint",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.is_local_env",
    "localstack.utils.aws.aws_stack.os",
    "requests_aws4auth.AWS4Auth"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.connect_to_resource": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.connect_to_service": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "localstack.config",
    "localstack.constants.REGION_LOCAL",
    "localstack.utils.aws.aws_stack.BOTO_CLIENTS_CACHE",
    "localstack.utils.aws.aws_stack.get_boto3_session",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.get_local_service_url",
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.aws.aws_stack.is_local_env",
    "method",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.create_api_gateway": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "create_api_gateway_integrations",
    "localstack.utils.aws.aws_stack.LOG",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.six",
    "method",
    "method.get"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.create_api_gateway_integrations": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.connect_to_service",
    "method",
    "method.get"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.create_dynamodb_table": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.aws.aws_stack.connect_to_resource",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.time",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.create_kinesis_stream": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_models.KinesisStream",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.common.run_safe"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.create_sqs_queue": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.get_environment"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.dynamodb_get_item_raw": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "localstack.config.TEST_DYNAMODB_URL",
    "localstack.utils.aws.aws_stack.json",
    "localstack.utils.aws.aws_stack.mock_aws_request_headers",
    "localstack.utils.common.make_http_request"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.dynamodb_stream_arn": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_account_id",
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.dynamodb_table_arn": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "_resource_arn"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.extract_region_from_arn": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.extract_region_from_auth_header": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.aws.aws_stack.re"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.firehose_stream_arn": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_account_id",
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.fix_account_id_in_arns": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "localstack.constants.MOTO_ACCOUNT_ID",
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.utils.aws.aws_stack.re",
    "localstack.utils.common.is_string_or_bytes",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.fix_arn": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.LOG",
    "localstack.utils.aws.aws_stack.lambda_function_arn",
    "localstack.utils.aws.aws_stack.lambda_function_name"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.get_account_id": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.is_local_env",
    "localstack.utils.aws.aws_stack.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.get_apigateway_integration": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "method"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.get_apigateway_path_for_resource": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "filter",
    "list",
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.get_apigateway_resource_for_path": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.get_boto3_credentials": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.CUSTOM_BOTO3_SESSION",
    "localstack.utils.aws.aws_stack.INITIAL_BOTO3_SESSION",
    "localstack.utils.aws.aws_stack.boto3"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.get_boto3_session": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.CREATE_NEW_SESSION_PER_BOTO3_CONNECTION",
    "localstack.utils.aws.aws_stack.CUSTOM_BOTO3_SESSION",
    "localstack.utils.aws.aws_stack.boto3"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.get_elasticsearch_endpoint": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.is_local_env",
    "localstack.utils.aws.aws_stack.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.get_environment": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "localstack.constants.ENV_DEV",
    "localstack.utils.aws.aws_stack.Environment",
    "localstack.utils.aws.aws_stack.os",
    "localstack.utils.common.is_string"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.get_iam_role": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_environment"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.get_local_region": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "localstack.config.DEFAULT_REGION",
    "localstack.utils.aws.aws_stack.LOCAL_REGION",
    "localstack.utils.aws.aws_stack.boto3"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.get_local_service_url": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "localstack.constants.LOCALHOST",
    "localstack.utils.aws.aws_stack.os",
    "localstack.utils.common.get_service_protocol"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.get_region": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "get_local_region"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.get_s3_client": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "localstack.config.TEST_S3_URL",
    "localstack.utils.aws.aws_stack.boto3"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.get_service_protocol": {
  "data": {
   "shadows": "localstack.utils.common.get_service_protocol"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.get_sqs_queue_url": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.extract_region_from_arn",
    "localstack.utils.aws.aws_stack.sqs_queue_name"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.iam_resource_arn": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "get_iam_role",
    "localstack.utils.aws.aws_stack.get_account_id",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.role_arn"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.is_local_env": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "localstack.constants.ENV_DEV",
    "localstack.constants.REGION_LOCAL"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.is_port_open": {
  "data": {
   "shadows": "localstack.utils.common.is_port_open"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.is_service_enabled": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.aws.aws_stack.get_local_service_url",
    "localstack.utils.common.is_port_open"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.is_string": {
  "data": {
   "shadows": "localstack.utils.common.is_string"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.is_string_or_bytes": {
  "data": {
   "shadows": "localstack.utils.common.is_string_or_bytes"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.kinesis_get_latest_records": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "Exception",
    "len",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.common.to_str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.kinesis_stream_arn": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_account_id",
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.lambda_function_arn": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "lambda_function_or_layer_arn"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.lambda_function_name": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.lambda_function_or_layer_arn": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.aws.aws_stack.get_account_id",
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.aws.aws_stack.re",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.lambda_layer_arn": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "lambda_function_or_layer_arn"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.make_http_request": {
  "data": {
   "shadows": "localstack.utils.common.make_http_request"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.mock_aws_request_headers": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "localstack.constants.APPLICATION_AMZ_JSON_1_0",
    "localstack.constants.APPLICATION_AMZ_JSON_1_1",
    "localstack.constants.APPLICATION_X_WWW_FORM_URLENCODED",
    "localstack.utils.aws.aws_stack.get_boto3_credentials",
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.parse": {
  "data": {
   "shadows": "jsonpath_rw.parse"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.render_velocity_template": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.VelocityInput",
    "localstack.utils.aws.aws_stack.VelocityUtil",
    "localstack.utils.aws.aws_stack.airspeed",
    "localstack.utils.aws.aws_stack.json"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.role_arn": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_account_id",
    "localstack.utils.aws.aws_stack.get_environment"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.run_safe": {
  "data": {
   "shadows": "localstack.utils.common.run_safe"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.s3_bucket_arn": {
  "data": {
   "lineno": 413
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.sns_topic_arn": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_account_id",
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.sqs_queue_arn": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_account_id",
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.sqs_queue_name": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.sqs_receive_message": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.extract_region_from_arn",
    "localstack.utils.aws.aws_stack.get_sqs_queue_url"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.state_machine_arn": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "_resource_arn"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.stepfunctions_activity_arn": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "_resource_arn"
   ]
  },
  "type": "function"
 },
 "localstack.utils.aws.aws_stack.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.utils.aws.aws_stack.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.bootstrap.logging",
    "localstack.utils.bootstrap.os",
    "localstack.utils.bootstrap.threading"
   ]
  },
  "type": "module"
 },
 "localstack.utils.bootstrap.API_COMPOSITES": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "localstack.utils.bootstrap.API_DEPENDENCIES": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "localstack.utils.bootstrap.BASIC_LIB_MARKER": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "localstack.utils.bootstrap.DO_CHMOD_DOCKER_SOCK": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "localstack.utils.bootstrap.FuncThread": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.threading"
   ]
  },
  "type": "class"
 },
 "localstack.utils.bootstrap.FuncThread.__init__": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.threading"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.FuncThread.run": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.bootstrap.LOG",
    "localstack.utils.bootstrap.traceback"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.FuncThread.stop": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.LOG"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.IGNORED_LIB_MARKER": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "localstack.utils.bootstrap.LOG": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "localstack.utils.bootstrap.LOG_DATE_FORMAT": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "localstack.utils.bootstrap.LOG_FORMAT": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "localstack.utils.bootstrap.MAIN_CONTAINER_NAME": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "localstack.utils.bootstrap.PLUGINS_LOADED": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.utils.bootstrap.PLUGIN_SCOPE_COMMANDS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "localstack.utils.bootstrap.PLUGIN_SCOPE_SERVICES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "localstack.utils.bootstrap.bootstrap_installation": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Exception",
    "install_dependencies",
    "localstack.services.infra"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.canonicalize_api_names": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "contains",
    "enumerate",
    "list",
    "localstack.config.DEFAULT_SERVICE_PORTS.get",
    "localstack.config.SERVICE_PORTS",
    "localstack.config.SERVICE_PORTS.keys",
    "localstack.config.SERVICE_PORTS.pop",
    "localstack.config.populate_configs",
    "localstack.utils.bootstrap.API_COMPOSITES",
    "localstack.utils.bootstrap.API_DEPENDENCIES",
    "set"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.canonicalize_api_names.contains": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.constants": {
  "data": {
   "shadows": "localstack.constants"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.docker_container_running": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "get_docker_container_names"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.get_docker_container_names": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.re",
    "run",
    "to_str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.in_ci": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.infra": {
  "data": {
   "shadows": "localstack.services.infra"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.install_dependencies": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.BASIC_LIB_MARKER",
    "localstack.utils.bootstrap.IGNORED_LIB_MARKER",
    "localstack.utils.bootstrap.LOG",
    "localstack.utils.bootstrap.os",
    "localstack.utils.bootstrap.re",
    "localstack.utils.bootstrap.shutil",
    "open",
    "run_pip_main"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.is_api_enabled": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.canonicalize_api_names"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.is_debug": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.is_linux": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.to_str",
    "subprocess32.CalledProcessError",
    "subprocess32.check_output"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.is_mac_os": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.to_str",
    "subprocess32.CalledProcessError",
    "subprocess32.check_output"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.load_plugin_from_path": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "Exception",
    "exec",
    "localstack.utils.bootstrap.LOG",
    "localstack.utils.bootstrap.PLUGIN_SCOPE_COMMANDS",
    "localstack.utils.bootstrap.PLUGIN_SCOPE_SERVICES",
    "localstack.utils.bootstrap.os",
    "localstack.utils.bootstrap.re",
    "method_to_execute",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.load_plugins": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "localstack.utils.bootstrap.PLUGINS_LOADED",
    "localstack.utils.bootstrap.PLUGIN_SCOPE_SERVICES",
    "localstack.utils.bootstrap.load_plugin_from_path",
    "localstack.utils.bootstrap.pkgutil",
    "localstack.utils.bootstrap.six",
    "setup_logging",
    "tuple"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.mkdir": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "OSError",
    "localstack.utils.bootstrap.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.mutex_popen": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "localstack.utils.bootstrap.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.pip._internal": {
  "data": {
   "shadows": "pip._internal"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.pip._internal.main": {
  "data": {
   "shadows": "pip._internal.main"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.pip_mod": {
  "data": {
   "shadows": "pip"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.pkgutil": {
  "data": {
   "shadows": "pkgutil"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.pty": {
  "data": {
   "shadows": "pty"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.run": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "is_linux",
    "is_mac_os",
    "isinstance",
    "localstack.config.DEFAULT_ENCODING",
    "localstack.utils.bootstrap.FuncThread",
    "localstack.utils.bootstrap.mutex_popen",
    "localstack.utils.bootstrap.os",
    "localstack.utils.bootstrap.pty",
    "localstack.utils.bootstrap.six",
    "localstack.utils.bootstrap.sys",
    "open",
    "print",
    "subprocess32.CalledProcessError",
    "subprocess32.PIPE",
    "subprocess32.Popen",
    "subprocess32.STDOUT",
    "subprocess32.check_output"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.run.pipe_streams": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.os",
    "localstack.utils.bootstrap.select",
    "localstack.utils.bootstrap.sys"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.run_pip_main": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "hasattr",
    "pip",
    "pip._internal",
    "pip._internal.main",
    "pip._internal.main.main",
    "pip.main"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.select": {
  "data": {
   "shadows": "select"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.setup_logging": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "WerkzeugLogFilter",
    "format",
    "is_debug",
    "len",
    "localstack.utils.bootstrap.LOG_DATE_FORMAT",
    "localstack.utils.bootstrap.LOG_FORMAT",
    "localstack.utils.bootstrap.logging",
    "localstack.utils.bootstrap.warnings"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.setup_logging.WerkzeugLogFilter": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.logging"
   ]
  },
  "type": "class"
 },
 "localstack.utils.bootstrap.setup_logging.WerkzeugLogFilter.filter": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.start_infra_in_docker": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "Exception",
    "ShellRunnerThread",
    "in_ci",
    "int",
    "is_mapped",
    "len",
    "localstack.config.CONFIG_ENV_VARS",
    "localstack.config.DOCKER_CMD",
    "localstack.config.DOCKER_FLAGS",
    "localstack.config.DOCKER_SOCK",
    "localstack.config.HOST_TMP_FOLDER",
    "localstack.config.PORT_WEB_UI",
    "localstack.config.PORT_WEB_UI_SSL",
    "localstack.config.SERVICE_PORTS",
    "localstack.config.START_WEB",
    "localstack.config.TMP_FOLDER",
    "localstack.constants.DOCKER_IMAGE_NAME",
    "localstack.utils.bootstrap.DO_CHMOD_DOCKER_SOCK",
    "localstack.utils.bootstrap.MAIN_CONTAINER_NAME",
    "localstack.utils.bootstrap.canonicalize_api_names",
    "localstack.utils.bootstrap.docker_container_running",
    "localstack.utils.bootstrap.load_plugins",
    "localstack.utils.bootstrap.os",
    "localstack.utils.bootstrap.re",
    "localstack.utils.bootstrap.sys",
    "localstack.utils.bootstrap.time",
    "mkdir",
    "print",
    "range",
    "run",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.start_infra_in_docker.ShellRunnerThread": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.threading"
   ]
  },
  "type": "class"
 },
 "localstack.utils.bootstrap.start_infra_in_docker.ShellRunnerThread.__init__": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.threading"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.start_infra_in_docker.ShellRunnerThread.run": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "run"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.start_infra_in_docker.is_mapped": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.start_infra_locally": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "localstack.services.infra.start_infra",
    "localstack.utils.bootstrap.bootstrap_installation"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.to_str": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.bootstrap.six"
   ]
  },
  "type": "function"
 },
 "localstack.utils.bootstrap.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.utils.bootstrap.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "localstack.utils.cli": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.cli.MAIN_CONTAINER_NAME": {
  "data": {
   "shadows": "localstack.utils.bootstrap.MAIN_CONTAINER_NAME"
  },
  "type": "import"
 },
 "localstack.utils.cli.cmd_infra": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "Exception",
    "docopt.docopt",
    "localstack.utils.bootstrap.start_infra_in_docker",
    "localstack.utils.bootstrap.start_infra_locally",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cli.cmd_ssh": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "docopt.docopt",
    "localstack.utils.bootstrap.MAIN_CONTAINER_NAME",
    "localstack.utils.bootstrap.docker_container_running",
    "localstack.utils.bootstrap.run"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cli.cmd_web": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "docopt.docopt",
    "len",
    "localstack.config.PORT_WEB_UI"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cli.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.utils.cli.docker_container_running": {
  "data": {
   "shadows": "localstack.utils.bootstrap.docker_container_running"
  },
  "type": "import"
 },
 "localstack.utils.cli.docopt": {
  "data": {
   "shadows": "docopt.docopt"
  },
  "type": "import"
 },
 "localstack.utils.cli.localstack.dashboard.api": {
  "data": {
   "shadows": "localstack.dashboard.api"
  },
  "type": "import"
 },
 "localstack.utils.cli.run": {
  "data": {
   "shadows": "localstack.utils.bootstrap.run"
  },
  "type": "import"
 },
 "localstack.utils.cli.start_infra_in_docker": {
  "data": {
   "shadows": "localstack.utils.bootstrap.start_infra_in_docker"
  },
  "type": "import"
 },
 "localstack.utils.cli.start_infra_locally": {
  "data": {
   "shadows": "localstack.utils.bootstrap.start_infra_locally"
  },
  "type": "import"
 },
 "localstack.utils.cloudformation": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.cloudformation.template_deployer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "convert_acl_cf_to_s3",
    "get_role_arn",
    "localstack.utils.cloudformation.template_deployer.PLACEHOLDER_RESOURCE_NAME",
    "localstack.utils.cloudformation.template_deployer.get_bucket_location_config",
    "localstack.utils.cloudformation.template_deployer.logging",
    "localstack.utils.cloudformation.template_deployer.select_attributes",
    "localstack.utils.common.merge_dicts"
   ]
  },
  "type": "module"
 },
 "localstack.utils.cloudformation.template_deployer.ACTION_CREATE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "localstack.utils.cloudformation.template_deployer.LOG": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.utils.cloudformation.template_deployer.PLACEHOLDER_RESOURCE_NAME": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "localstack.utils.cloudformation.template_deployer.RESOURCE_TO_FUNCTION": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "localstack.utils.cloudformation.template_deployer.UPDATEABLE_RESOURCES": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.utils.cloudformation.template_deployer.all_dependencies_satisfied": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "localstack.utils.cloudformation.template_deployer.is_deployable_resource",
    "localstack.utils.cloudformation.template_deployer.is_deployed",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.utils.cloudformation.template_deployer.check_not_found_exception": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "filter",
    "list",
    "localstack.utils.cloudformation.template_deployer.LOG",
    "localstack.utils.cloudformation.template_deployer.traceback",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.common": {
  "data": {
   "shadows": "localstack.utils.common"
  },
  "type": "import"
 },
 "localstack.utils.cloudformation.template_deployer.convert_acl_cf_to_s3": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "localstack.utils.cloudformation.template_deployer.re"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.convert_data_types": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "localstack.utils.common.recurse_object"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.convert_data_types.cast": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "bool",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.convert_data_types.fix_types": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "cast",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.deploy_resource": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "deploy_resource_via_sdk_function",
    "isinstance",
    "list",
    "localstack.utils.cloudformation.template_deployer.ACTION_CREATE",
    "localstack.utils.cloudformation.template_deployer.LOG",
    "localstack.utils.cloudformation.template_deployer.RESOURCE_TO_FUNCTION",
    "localstack.utils.cloudformation.template_deployer.get_client",
    "localstack.utils.cloudformation.template_deployer.get_resource_type"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.deploy_resource_via_sdk_function": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "Exception",
    "callable",
    "dict",
    "function",
    "getattr",
    "isinstance",
    "list",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.fix_account_id_in_arns",
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.cloudformation.template_deployer.LOG",
    "localstack.utils.cloudformation.template_deployer.PLACEHOLDER_RESOURCE_NAME",
    "localstack.utils.cloudformation.template_deployer.convert_data_types",
    "localstack.utils.cloudformation.template_deployer.get_client",
    "localstack.utils.cloudformation.template_deployer.get_resource_name",
    "localstack.utils.cloudformation.template_deployer.json",
    "localstack.utils.cloudformation.template_deployer.lambda_get_params",
    "localstack.utils.cloudformation.template_deployer.remove_none_values",
    "localstack.utils.cloudformation.template_deployer.resolve_ref",
    "localstack.utils.cloudformation.template_deployer.resolve_refs_recursively",
    "localstack.utils.cloudformation.template_deployer.retrieve_topic_arn",
    "localstack.utils.common.merge_recursive",
    "params",
    "params.pop",
    "prop_key",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.deploy_template": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "localstack.utils.cloudformation.template_deployer.LOG",
    "localstack.utils.cloudformation.template_deployer.deploy_resource",
    "localstack.utils.cloudformation.template_deployer.describe_stack_resource",
    "localstack.utils.cloudformation.template_deployer.parse_template",
    "next",
    "next.items",
    "range",
    "resources_to_deploy_next",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.describe_stack_resource": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.cloudformation.template_deployer.LOG"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.extract_resource_attribute": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.cloudformation.template_deployer.LOG"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.get_bucket_location_config": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.get_client": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.aws.aws_stack.connect_to_resource",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.cloudformation.template_deployer.ACTION_CREATE",
    "localstack.utils.cloudformation.template_deployer.LOG",
    "localstack.utils.cloudformation.template_deployer.RESOURCE_TO_FUNCTION",
    "localstack.utils.cloudformation.template_deployer.get_resource_type",
    "localstack.utils.cloudformation.template_deployer.get_service_name"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.get_resource_dependencies": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "localstack.utils.cloudformation.template_deployer.json",
    "localstack.utils.common.json_safe",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.get_resource_name": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "localstack.utils.cloudformation.template_deployer.LOG",
    "localstack.utils.cloudformation.template_deployer.get_resource_type"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.get_resource_type": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.get_role_arn": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.role_arn",
    "resolve_refs_recursively"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.get_service_name": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.is_deployable_resource": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "bool",
    "localstack.utils.cloudformation.template_deployer.ACTION_CREATE",
    "localstack.utils.cloudformation.template_deployer.LOG",
    "localstack.utils.cloudformation.template_deployer.RESOURCE_TO_FUNCTION",
    "localstack.utils.cloudformation.template_deployer.get_resource_type"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.is_deployed": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "bool",
    "localstack.utils.cloudformation.template_deployer.retrieve_resource_details"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.is_updateable": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "localstack.utils.cloudformation.template_deployer.UPDATEABLE_RESOURCES",
    "localstack.utils.cloudformation.template_deployer.get_resource_type",
    "localstack.utils.cloudformation.template_deployer.is_deployable_resource",
    "localstack.utils.cloudformation.template_deployer.is_deployed"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "localstack.utils.cloudformation.template_deployer.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.cloudformation.template_deployer.lambda_get_params": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.cloudformation.template_deployer.moto.cloudformation.utils": {
  "data": {
   "shadows": "moto.cloudformation.utils"
  },
  "type": "import"
 },
 "localstack.utils.cloudformation.template_deployer.parse_template": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.cloudformation.template_deployer.json",
    "localstack.utils.cloudformation.template_deployer.yaml"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.utils.cloudformation.template_deployer.remove_none_values": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "localstack.utils.common.recurse_object"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.remove_none_values.remove_nones": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.resolve_ref": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.cloudformation.template_deployer.LOG",
    "localstack.utils.cloudformation.template_deployer.describe_stack_resource",
    "localstack.utils.cloudformation.template_deployer.extract_resource_attribute",
    "localstack.utils.cloudformation.template_deployer.get_resource_type",
    "localstack.utils.cloudformation.template_deployer.retrieve_resource_details"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.resolve_refs_recursively": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "list",
    "localstack.utils.cloudformation.template_deployer.resolve_ref",
    "range",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.resources_to_deploy_next": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "localstack.utils.cloudformation.template_deployer.should_be_deployed",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.retrieve_resource_details": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "Exception",
    "any",
    "check_not_found_exception",
    "filter",
    "is_deployable_resource",
    "len",
    "list",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.aws.aws_stack.get_apigateway_path_for_resource",
    "localstack.utils.aws.aws_stack.lambda_function_arn",
    "localstack.utils.aws.aws_stack.lambda_function_name",
    "localstack.utils.cloudformation.template_deployer.LOG",
    "localstack.utils.cloudformation.template_deployer.get_resource_type",
    "resolve_refs_recursively"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.retrieve_topic_arn": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.select_attributes": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "localstack.utils.cloudformation.template_deployer.str_or_none"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.should_be_deployed": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "all_dependencies_satisfied",
    "get_resource_dependencies",
    "localstack.utils.cloudformation.template_deployer.is_deployable_resource",
    "localstack.utils.cloudformation.template_deployer.is_deployed"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.str_or_none": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "localstack.utils.cloudformation.template_deployer.json",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "localstack.utils.cloudformation.template_deployer.template_to_json": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "localstack.utils.cloudformation.template_deployer.json",
    "localstack.utils.cloudformation.template_deployer.parse_template"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.utils.cloudformation.template_deployer.update_resource": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "dict",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.cloudformation.template_deployer.LOG",
    "localstack.utils.cloudformation.template_deployer.UPDATEABLE_RESOURCES",
    "localstack.utils.cloudformation.template_deployer.get_resource_type",
    "localstack.utils.cloudformation.template_deployer.resolve_refs_recursively"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudformation.template_deployer.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.cloudwatch.cloudwatch_util": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch.cloudwatch_util._func_name": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.cloudwatched": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.cloudwatched.wrapping": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.cloudwatched.wrapping.wrapped": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Exception",
    "func",
    "localstack.utils.cloudwatch.cloudwatch_util.publish_error",
    "localstack.utils.cloudwatch.cloudwatch_util.publish_result",
    "localstack.utils.common.now_utc"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.dimension_lambda": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_func_name"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.event_publisher": {
  "data": {
   "shadows": "localstack.utils.analytics.event_publisher"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.now_utc": {
  "data": {
   "shadows": "localstack.utils.common.now_utc"
  },
  "type": "import"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.publish_error": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "localstack.utils.cloudwatch.cloudwatch_util.publish_event",
    "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_error"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.publish_event": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "localstack.utils.analytics.event_publisher.EVENT_LAMBDA_INVOKE_FUNC",
    "localstack.utils.analytics.event_publisher.fire_event",
    "localstack.utils.cloudwatch.cloudwatch_util._func_name",
    "localstack.utils.common.now_utc"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_duration": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_metric",
    "localstack.utils.common.now_utc"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_error": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_metric"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_metric": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "localstack.config.service_port",
    "localstack.utils.aws.aws_stack.connect_to_service",
    "localstack.utils.cloudwatch.cloudwatch_util.dimension_lambda"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_result": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "flask.Response",
    "isinstance",
    "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_error",
    "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_metric"
   ]
  },
  "type": "function"
 },
 "localstack.utils.cloudwatch.cloudwatch_util.publish_result": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "localstack.utils.cloudwatch.cloudwatch_util.publish_event",
    "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_result"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.utils.common.logging",
    "localstack.utils.common.os",
    "localstack.utils.common.short_uid",
    "localstack.utils.common.tempfile",
    "localstack.utils.common.threading"
   ]
  },
  "type": "module"
 },
 "localstack.utils.common.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "localstack.utils.common.CACHE_CLEAN_TIMEOUT": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "localstack.utils.common.CACHE_FILE_PATTERN": {
  "data": {
   "lineno": 978
  },
  "type": "constant"
 },
 "localstack.utils.common.CACHE_MAX_AGE": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "localstack.utils.common.CODEC_HANDLER_UNDERSCORE": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "localstack.utils.common.CaptureOutput": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "localstack.utils.common.sys",
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.utils.common.CaptureOutput.LogStreamIO": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "localstack.utils.common.io"
   ]
  },
  "type": "class"
 },
 "localstack.utils.common.CaptureOutput.LogStreamIO.write": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "localstack.utils.common.CaptureOutput",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.CaptureOutput.__enter__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "localstack.utils.common.sys",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.CaptureOutput.__exit__": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "localstack.utils.common.CaptureOutput.__init__": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "localstack.utils.common.CaptureOutput._ident": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "localstack.utils.common.threading"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.CaptureOutput._proxy": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "localstack.utils.common.CaptureOutput._proxy.proxy": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.CaptureOutput._set": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "localstack.utils.common.sys"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.CaptureOutput.stderr": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.CaptureOutput.stdout": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.CustomEncoder": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "localstack.utils.common.json"
   ]
  },
  "type": "class"
 },
 "localstack.utils.common.CustomEncoder.default": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime",
    "float",
    "int",
    "isinstance",
    "localstack.utils.common.CustomEncoder",
    "localstack.utils.common.decimal",
    "localstack.utils.common.six",
    "str",
    "super",
    "to_str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.DEFAULT_ENCODING": {
  "data": {
   "shadows": "localstack.config.DEFAULT_ENCODING"
  },
  "type": "import"
 },
 "localstack.utils.common.DOWNLOAD_CHUNK_SIZE": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "localstack.utils.common.ENV_DEV": {
  "data": {
   "shadows": "localstack.constants.ENV_DEV"
  },
  "type": "import"
 },
 "localstack.utils.common.FuncThread": {
  "data": {
   "shadows": "localstack.utils.bootstrap.FuncThread"
  },
  "type": "import"
 },
 "localstack.utils.common.INFRA_STOPPED": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "localstack.utils.common.JsonObject": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.utils.common.JsonObject.__repr__": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "localstack.utils.common.JsonObject.__str__": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "localstack.utils.common.JsonObject.apply_json": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.common.json",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.JsonObject.as_dict": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.JsonObject.from_json": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "localstack.utils.common.JsonObject"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.JsonObject.from_json_list": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "classmethod",
    "cls.from_json"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.JsonObject.to_dict": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "localstack.utils.common.json"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.JsonObject.to_json": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "localstack.utils.common.decimal",
    "localstack.utils.common.json"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.LOG": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "localstack.utils.common.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "localstack.utils.common.NetrcBypassAuth": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "localstack.utils.common.requests"
   ]
  },
  "type": "class"
 },
 "localstack.utils.common.NetrcBypassAuth.__call__": {
  "data": {
   "lineno": 892
  },
  "type": "function"
 },
 "localstack.utils.common.Pool": {
  "data": {
   "shadows": "multiprocessing.dummy.Pool"
  },
  "type": "import"
 },
 "localstack.utils.common.SafeStringIO": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "localstack.utils.common.io"
   ]
  },
  "type": "class"
 },
 "localstack.utils.common.SafeStringIO.write": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.common.SafeStringIO",
    "localstack.utils.common.six",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.ShellCommandThread": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.FuncThread"
   ]
  },
  "type": "class"
 },
 "localstack.utils.common.ShellCommandThread.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.FuncThread.__init__",
    "localstack.utils.common.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.ShellCommandThread.is_killed": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "localstack.utils.common.INFRA_STOPPED",
    "localstack.utils.common.psutil"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.ShellCommandThread.run_cmd": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "Exception",
    "convert_line",
    "filter_line",
    "iter",
    "localstack.utils.common.LOG",
    "localstack.utils.common.subprocess",
    "localstack.utils.common.sys",
    "run"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.ShellCommandThread.run_cmd.convert_line": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "to_str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.ShellCommandThread.run_cmd.filter_line": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "localstack.utils.common.ShellCommandThread.stop": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.common.LOG",
    "localstack.utils.common.psutil"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.StringIO": {
  "data": {
   "shadows": "six.moves.cStringIO"
  },
  "type": "import"
 },
 "localstack.utils.common.TIMESTAMP_FORMAT": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "localstack.utils.common.TIMESTAMP_FORMAT_MILLIS": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "localstack.utils.common.TMP_FILES": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "localstack.utils.common.TMP_PROCESSES": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "localstack.utils.common.TMP_THREADS": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "localstack.utils.common._RequestsSafe": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "localstack.utils.common._RequestsSafe.__getattr__": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "localstack.utils.common.requests"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common._RequestsSafe.__getattr__._wrapper": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "localstack.utils.common.NetrcBypassAuth",
    "method"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common._unzip_file_entry": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "localstack.utils.common.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "localstack.utils.common.base64_to_hex": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "localstack.utils.common.base64",
    "localstack.utils.common.binascii"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "localstack.utils.common.bootstrap": {
  "data": {
   "shadows": "localstack.utils.bootstrap"
  },
  "type": "import"
 },
 "localstack.utils.common.chmod_r": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "localstack.utils.common.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.clean_cache": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "localstack.utils.common.CACHE_CLEAN_TIMEOUT",
    "localstack.utils.common.CACHE_FILE_PATTERN",
    "localstack.utils.common.CACHE_MAX_AGE",
    "localstack.utils.common.glob",
    "localstack.utils.common.last_cache_clean_time",
    "localstack.utils.common.mutex_clean",
    "localstack.utils.common.now",
    "localstack.utils.common.os",
    "localstack.utils.common.rm_rf",
    "set"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.cleanup": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "cleanup_tmp_files",
    "localstack.constants.ENV_DEV"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.cleanup_resources": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "localstack.utils.common.cleanup_threads_and_processes",
    "localstack.utils.common.cleanup_tmp_files"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.cleanup_threads_and_processes": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "Exception",
    "clear_list",
    "localstack.utils.common.TMP_PROCESSES",
    "localstack.utils.common.TMP_THREADS",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.cleanup_tmp_files": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.common.TMP_FILES",
    "localstack.utils.common.rm_rf"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.clear_list": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.clone": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "localstack.utils.common.json"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.closing": {
  "data": {
   "shadows": "contextlib.closing"
  },
  "type": "import"
 },
 "localstack.utils.common.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.utils.common.cp_r": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "localstack.utils.common.os",
    "localstack.utils.common.shutil"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.crypto": {
  "data": {
   "shadows": "OpenSSL.crypto"
  },
  "type": "import"
 },
 "localstack.utils.common.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "localstack.utils.common.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "localstack.utils.common.dns.resolver": {
  "data": {
   "shadows": "dns.resolver"
  },
  "type": "import"
 },
 "localstack.utils.common.download": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "len",
    "localstack.utils.common.DOWNLOAD_CHUNK_SIZE",
    "localstack.utils.common.LOG",
    "localstack.utils.common.os",
    "localstack.utils.common.requests",
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.dump_thread_info": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "localstack.utils.common.threading",
    "print",
    "run"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.ensure_readable": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.common.LOG",
    "localstack.utils.common.os",
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.fix_json_keys": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "to_str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.generate_ssl_cert": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "OpenSSL.crypto.FILETYPE_PEM",
    "OpenSSL.crypto.PKey",
    "OpenSSL.crypto.TYPE_RSA",
    "OpenSSL.crypto.X509",
    "OpenSSL.crypto.dump_certificate",
    "OpenSSL.crypto.dump_privatekey",
    "localstack.utils.common.TMP_FILES",
    "localstack.utils.common.os",
    "localstack.utils.common.save_file",
    "localstack.utils.common.short_uid",
    "localstack.utils.common.to_str",
    "six.moves.cStringIO"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.get_docker_container_names": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.get_docker_container_names"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.get_free_tcp_port": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "localstack.utils.common.socket"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.get_service_protocol": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "localstack.config.USE_SSL"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "localstack.utils.common.has_docker": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "Exception",
    "run"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "localstack.utils.common.in_docker": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "localstack.config.in_docker"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "localstack.utils.common.is_alpine": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "localstack.utils.common.os",
    "localstack.utils.common.subprocess",
    "to_str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.is_ip_address": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "localstack.utils.common.socket"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.is_jar_archive": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.common.tempfile",
    "localstack.utils.common.zipfile"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.is_linux": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.is_linux"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.is_mac_os": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.is_mac_os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.is_number": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.is_port_open": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "Exception",
    "bytes",
    "contextlib.closing",
    "isinstance",
    "len",
    "list",
    "localstack.utils.common.six",
    "localstack.utils.common.socket",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.is_root": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "run"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.is_string": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.common.six",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.is_string_or_bytes": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "localstack.utils.common.is_string",
    "localstack.utils.common.six"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.is_zip_file": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "io.BytesIO",
    "localstack.utils.common.zipfile"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.isoformat_milliseconds": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.common.json_safe": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "Exception",
    "fix_json_keys",
    "localstack.utils.common.CustomEncoder",
    "localstack.utils.common.json"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.last_cache_clean_time": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "localstack.utils.common.load_file": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "localstack.utils.common.os",
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.common.make_http_request": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "localstack.utils.common.NetrcBypassAuth",
    "localstack.utils.common.is_string",
    "localstack.utils.common.requests",
    "method",
    "method.lower"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.md5": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "localstack.utils.common.hashlib",
    "to_bytes"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.merge_dicts": {
  "data": {
   "lineno": 433
  },
  "type": "function"
 },
 "localstack.utils.common.merge_recursive": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "localstack.utils.common.LOG"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.mkdir": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "OSError",
    "localstack.utils.common.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.mktime": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "localstack.utils.common.time",
    "localstack.utils.common.timestamp"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.mutex_clean": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "localstack.utils.common.new_tmp_dir": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "localstack.utils.common.mkdir",
    "localstack.utils.common.new_tmp_file",
    "localstack.utils.common.rm_rf"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.new_tmp_file": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "localstack.utils.common.TMP_FILES",
    "localstack.utils.common.os",
    "localstack.utils.common.tempfile"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.now": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "mktime"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.now_utc": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "datetime.datetime.utcnow",
    "mktime"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.obj_to_xml": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.utils.common.parallelize": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "func",
    "len",
    "list",
    "multiprocessing.dummy.Pool"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.parse_chunked_data": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "int",
    "localstack.utils.common.re"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "localstack.utils.common.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.utils.common.recurse_object": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "dict",
    "func",
    "isinstance",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.remove_non_ascii": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "localstack.utils.common.CODEC_HANDLER_UNDERSCORE"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "localstack.utils.common.retry": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "Exception",
    "function",
    "localstack.utils.common.time",
    "range"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.rm_rf": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "localstack.utils.common.chmod_r",
    "localstack.utils.common.os",
    "localstack.utils.common.shutil"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.run": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "clean_cache",
    "do_run",
    "hash",
    "localstack.utils.common.CACHE_FILE_PATTERN",
    "localstack.utils.common.md5",
    "localstack.utils.common.mkdir",
    "localstack.utils.common.now",
    "localstack.utils.common.os",
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.run.do_run": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "localstack.utils.bootstrap.run"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.run_cmd_safe": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "localstack.utils.common.run_safe",
    "run"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.run_safe": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "Exception",
    "_python_lambda",
    "localstack.utils.common.LOG"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.safe_requests": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "localstack.utils.common._RequestsSafe",
    "six.with_metaclass"
   ]
  },
  "type": "class"
 },
 "localstack.utils.common.save_file": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "isinstance",
    "localstack.utils.common.six",
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.short_uid": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "localstack.utils.common.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "localstack.utils.common.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "localstack.utils.common.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "localstack.utils.common.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "localstack.utils.common.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.utils.common.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "localstack.utils.common.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "localstack.utils.common.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "localstack.utils.common.timestamp": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "datetime.datetime.fromtimestamp",
    "datetime.datetime.utcnow",
    "float",
    "format",
    "isinstance",
    "localstack.utils.common.TIMESTAMP_FORMAT",
    "localstack.utils.common.six",
    "localstack.utils.common.time"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.to_bytes": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "isinstance",
    "localstack.config.DEFAULT_ENCODING",
    "localstack.utils.common.six"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.to_str": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "isinstance",
    "localstack.config.DEFAULT_ENCODING",
    "localstack.utils.common.six"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.truncate": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.unzip": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "Exception",
    "_unzip_file_entry",
    "localstack.utils.common.LOG",
    "localstack.utils.common.zipfile"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlparse"
  },
  "type": "import"
 },
 "localstack.utils.common.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "localstack.utils.common.wait_for_port_open": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "retry"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.wait_for_port_open.check": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.common.is_port_open"
   ]
  },
  "type": "function"
 },
 "localstack.utils.common.with_metaclass": {
  "data": {
   "shadows": "six.with_metaclass"
  },
  "type": "import"
 },
 "localstack.utils.common.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "localstack.utils.kinesis": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.kinesis.kclipy_helper": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.kinesis.kclipy_helper.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kclipy_helper.create_config_file": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.common.save_file",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kclipy_helper.get_dir_of_file": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "localstack.utils.kinesis.kclipy_helper.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kclipy_helper.get_kcl_app_command": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "localstack.utils.kinesis.kclipy_helper.get_dir_of_file",
    "localstack.utils.kinesis.kclipy_helper.get_kcl_classpath",
    "localstack.utils.kinesis.kclipy_helper.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kclipy_helper.get_kcl_classpath": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "localstack.utils.kinesis.kclipy_helper.get_dir_of_file",
    "localstack.utils.kinesis.kclipy_helper.get_kcl_jar_path",
    "localstack.utils.kinesis.kclipy_helper.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kclipy_helper.get_kcl_dir": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "amazon_kclpy.kcl.__file__",
    "localstack.utils.kinesis.kclipy_helper.get_dir_of_file"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kclipy_helper.get_kcl_jar_path": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "glob.glob",
    "localstack.utils.kinesis.kclipy_helper.get_kcl_dir",
    "localstack.utils.kinesis.kclipy_helper.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kclipy_helper.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kclipy_helper.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kclipy_helper.kcl": {
  "data": {
   "shadows": "amazon_kclpy.kcl"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kclipy_helper.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kclipy_helper.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kclipy_helper.save_file": {
  "data": {
   "shadows": "localstack.utils.common.save_file"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.utils.kinesis.kinesis_connector.logging",
    "localstack.utils.kinesis.kinesis_connector.os",
    "localstack.utils.kinesis.kinesis_connector.tempfile"
   ]
  },
  "type": "module"
 },
 "localstack.utils.kinesis.kinesis_connector.CHECKPOINT_FREQ_SECS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.CHECKPOINT_RETRIES": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.CHECKPOINT_SLEEP_SECS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.DEFAULT_DDB_LEASE_TABLE_SUFFIX": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.DEFAULT_KCL_LOG_LEVEL": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.EVENTS_FILE_PATTERN": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.EventFileReaderThread": {
  "data": {
   "shadows": "localstack.utils.kinesis.kinesis_util.EventFileReaderThread"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.HOSTNAME": {
  "data": {
   "shadows": "localstack.config.HOSTNAME"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.KclLogListener": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "localstack.utils.kinesis.kinesis_connector.KclLogListener.__init__": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KclLogListener.update": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KclStartedLogListener": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "localstack.utils.kinesis.kinesis_connector.KclLogListener"
   ]
  },
  "type": "class"
 },
 "localstack.utils.kinesis.kinesis_connector.KclStartedLogListener.__init__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "localstack.utils.kinesis.kinesis_connector.KclStartedLogListener",
    "six.moves.queue.Queue",
    "super"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KclStartedLogListener.update": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "localstack.utils.kinesis.kinesis_connector.re"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "amazon_kclpy.kcl.RecordProcessorBase"
   ]
  },
  "type": "class"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.checkpoint": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.common.retry",
    "localstack.utils.kinesis.kinesis_connector.CHECKPOINT_RETRIES",
    "localstack.utils.kinesis.kinesis_connector.CHECKPOINT_SLEEP_SECS",
    "localstack.utils.kinesis.kinesis_connector.LOGGER"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.checkpoint.do_checkpoint": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.initialize": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.log": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "localstack.utils.common.save_file"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.process_records": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "int",
    "localstack.utils.common.now",
    "localstack.utils.kinesis.kinesis_connector.CHECKPOINT_FREQ_SECS",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.run_processor": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "amazon_kclpy.kcl.KCLProcess",
    "localstack.utils.kinesis.kinesis_connector.KinesisProcessor",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.should_update_sequence": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessor.shutdown": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessorThread": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "localstack.utils.common.ShellCommandThread"
   ]
  },
  "type": "class"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessorThread.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.is_local_env",
    "localstack.utils.common.ShellCommandThread.__init__",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.kinesis.kclipy_helper.get_kcl_app_command",
    "localstack.utils.kinesis.kinesis_connector.MULTI_LANG_DAEMON_CLASS"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisProcessorThread.start_consumer": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "localstack.utils.kinesis.kinesis_connector.KinesisProcessorThread",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.KinesisStream": {
  "data": {
   "shadows": "localstack.utils.aws.aws_models.KinesisStream"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.LOCALSTACK_ROOT_FOLDER": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_ROOT_FOLDER"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.LOCALSTACK_VENV_FOLDER": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_VENV_FOLDER"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.LOGGER": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.LOG_FILE_PATTERN": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.LOG_LEVELS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.MULTI_LANG_DAEMON_CLASS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread"
   ]
  },
  "type": "class"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread.__init__",
    "localstack.utils.kinesis.kinesis_connector.DEFAULT_KCL_LOG_LEVEL",
    "localstack.utils.kinesis.kinesis_connector.OutputReaderThread",
    "localstack.utils.kinesis.kinesis_connector.logging",
    "localstack.utils.kinesis.kinesis_connector.threading"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread._tail": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "localstack.utils.common.to_str",
    "subprocess32.PIPE",
    "subprocess32.Popen"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread._tail_native": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread.get_log_level_names": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "classmethod",
    "localstack.utils.kinesis.kinesis_connector.LOG_LEVELS",
    "localstack.utils.kinesis.kinesis_connector.logging"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread.get_logger_for_level_in_log_line": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "getattr",
    "localstack.utils.kinesis.kinesis_connector.LOG_LEVELS",
    "localstack.utils.kinesis.kinesis_connector.logging",
    "localstack.utils.kinesis.kinesis_connector.re"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread.notify_subscribers": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.kinesis.kinesis_connector.LOGGER",
    "localstack.utils.kinesis.kinesis_connector.re"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread.running": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread.start_reading": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "len",
    "localstack.utils.kinesis.kinesis_connector.re",
    "logger_func"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.OutputReaderThread.stop": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.Queue": {
  "data": {
   "shadows": "six.moves.queue"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.ShellCommandThread": {
  "data": {
   "shadows": "localstack.utils.common.ShellCommandThread"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.TMP_FILES": {
  "data": {
   "shadows": "localstack.utils.common.TMP_FILES"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.TMP_THREADS": {
  "data": {
   "shadows": "localstack.utils.common.TMP_THREADS"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.USE_SSL": {
  "data": {
   "shadows": "localstack.config.USE_SSL"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.chmod_r": {
  "data": {
   "shadows": "localstack.utils.common.chmod_r"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.config": {
  "data": {
   "shadows": "localstack.config"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.generate_processor_script": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "localstack.constants.LOCALSTACK_ROOT_FOLDER",
    "localstack.constants.LOCALSTACK_VENV_FOLDER",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.common.chmod_r",
    "localstack.utils.common.save_file",
    "localstack.utils.common.short_uid",
    "localstack.utils.kinesis.kinesis_connector.os",
    "localstack.utils.kinesis.kinesis_connector.tempfile"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.get_stream_info": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "bool",
    "localstack.config.HOSTNAME",
    "localstack.config.PORT_KINESIS",
    "localstack.config.USE_SSL",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.get_region",
    "localstack.utils.aws.aws_stack.is_local_env",
    "localstack.utils.common.short_uid",
    "localstack.utils.kinesis.kinesis_connector.DEFAULT_DDB_LEASE_TABLE_SUFFIX",
    "localstack.utils.kinesis.kinesis_connector.os",
    "localstack.utils.kinesis.kinesis_connector.tempfile",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.kcl": {
  "data": {
   "shadows": "amazon_kclpy.kcl"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.kclipy_helper": {
  "data": {
   "shadows": "localstack.utils.kinesis.kclipy_helper"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.listen_to_kinesis": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.common.rm_rf",
    "localstack.utils.common.short_uid",
    "localstack.utils.kinesis.kinesis_connector.DEFAULT_KCL_LOG_LEVEL",
    "localstack.utils.kinesis.kinesis_connector.EVENTS_FILE_PATTERN",
    "localstack.utils.kinesis.kinesis_connector.KclStartedLogListener",
    "localstack.utils.kinesis.kinesis_connector.generate_processor_script",
    "localstack.utils.kinesis.kinesis_connector.start_kcl_client_process",
    "localstack.utils.kinesis.kinesis_connector.threading",
    "localstack.utils.kinesis.kinesis_util.EventFileReaderThread"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.now": {
  "data": {
   "shadows": "localstack.utils.common.now"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.retry": {
  "data": {
   "shadows": "localstack.utils.common.retry"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.rm_rf": {
  "data": {
   "shadows": "localstack.utils.common.rm_rf"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.run": {
  "data": {
   "shadows": "localstack.utils.common.run"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.save_file": {
  "data": {
   "shadows": "localstack.utils.common.save_file"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.short_uid": {
  "data": {
   "shadows": "localstack.utils.common.short_uid"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.start_kcl_client_process": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "len",
    "localstack.config.HOSTNAME",
    "localstack.config.PORT_DYNAMODB",
    "localstack.config.PORT_KINESIS",
    "localstack.config.USE_SSL",
    "localstack.utils.aws.aws_models.KinesisStream",
    "localstack.utils.aws.aws_stack.get_environment",
    "localstack.utils.aws.aws_stack.is_local_env",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.common.TMP_THREADS.append",
    "localstack.utils.common.run",
    "localstack.utils.common.short_uid",
    "localstack.utils.kinesis.kclipy_helper.create_config_file",
    "localstack.utils.kinesis.kinesis_connector.DEFAULT_KCL_LOG_LEVEL",
    "localstack.utils.kinesis.kinesis_connector.KinesisProcessorThread",
    "localstack.utils.kinesis.kinesis_connector.LOG_FILE_PATTERN",
    "localstack.utils.kinesis.kinesis_connector.OutputReaderThread",
    "localstack.utils.kinesis.kinesis_connector.get_stream_info",
    "localstack.utils.kinesis.kinesis_connector.os"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_connector.subprocess": {
  "data": {
   "shadows": "subprocess32"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_connector.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlparse"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_util": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.utils.kinesis.kinesis_util.logging"
   ]
  },
  "type": "module"
 },
 "localstack.utils.kinesis.kinesis_util.EventFileReaderThread": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread"
   ]
  },
  "type": "class"
 },
 "localstack.utils.kinesis.kinesis_util.EventFileReaderThread.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread.__init__"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_util.EventFileReaderThread.handle_connection": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Exception",
    "len",
    "localstack.utils.common.truncate",
    "localstack.utils.kinesis.kinesis_util.LOGGER",
    "localstack.utils.kinesis.kinesis_util.inspect",
    "localstack.utils.kinesis.kinesis_util.json",
    "localstack.utils.kinesis.kinesis_util.traceback"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_util.EventFileReaderThread.retrieve_loop": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.common.FuncThread",
    "localstack.utils.kinesis.kinesis_util.LOGGER",
    "localstack.utils.kinesis.kinesis_util.socket",
    "localstack.utils.kinesis.kinesis_util.traceback"
   ]
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_util.EventFileReaderThread.stop": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "localstack.utils.kinesis.kinesis_util.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_util.LOGGER": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "localstack.utils.kinesis.kinesis_util.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_util.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_util.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_util.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_util.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.utils.kinesis.kinesis_util.truncate": {
  "data": {
   "shadows": "localstack.utils.common.truncate"
  },
  "type": "import"
 },
 "localstack.utils.persistence": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.utils.persistence.logging"
   ]
  },
  "type": "module"
 },
 "localstack.utils.persistence.API_FILE_PATHS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.utils.persistence.API_FILE_PATTERN": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "localstack.utils.persistence.CURRENTLY_REPLAYING": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.utils.persistence.DATA_DIR": {
  "data": {
   "shadows": "localstack.config.DATA_DIR"
  },
  "type": "import"
 },
 "localstack.utils.persistence.LOGGER": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "localstack.utils.persistence.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.utils.persistence.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "localstack.utils.persistence.get_file_path": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "localstack.config.DATA_DIR",
    "localstack.utils.persistence.API_FILE_PATHS",
    "localstack.utils.persistence.API_FILE_PATTERN",
    "localstack.utils.persistence.os",
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.utils.persistence.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.persistence.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.persistence.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.utils.persistence.record": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "get_file_path",
    "isinstance",
    "localstack.utils.common.to_bytes",
    "localstack.utils.common.to_str",
    "localstack.utils.persistence.CURRENTLY_REPLAYING",
    "localstack.utils.persistence.LOGGER",
    "localstack.utils.persistence.base64",
    "localstack.utils.persistence.json",
    "localstack.utils.persistence.should_record",
    "localstack.utils.persistence.traceback",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "localstack.utils.persistence.replay": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "get_file_path",
    "localstack.utils.persistence.CURRENTLY_REPLAYING",
    "localstack.utils.persistence.LOGGER",
    "localstack.utils.persistence.json",
    "localstack.utils.persistence.replay_command",
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.utils.persistence.replay_command": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "function",
    "getattr",
    "localstack.utils.aws.aws_stack.get_local_service_url",
    "localstack.utils.persistence.base64",
    "localstack.utils.persistence.requests"
   ]
  },
  "type": "function"
 },
 "localstack.utils.persistence.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "localstack.utils.persistence.restore_persisted_data": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "localstack.utils.persistence.replay"
   ]
  },
  "type": "function"
 },
 "localstack.utils.persistence.should_record": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "localstack.utils.persistence.to_bytes": {
  "data": {
   "shadows": "localstack.utils.common.to_bytes"
  },
  "type": "import"
 },
 "localstack.utils.persistence.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.utils.persistence.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "localstack.utils.server": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.server.multiserver": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "localstack.utils.server.multiserver.logging",
    "localstack.utils.server.multiserver.main",
    "localstack.utils.server.multiserver.patch_moto_server"
   ]
  },
  "type": "module"
 },
 "localstack.utils.server.multiserver.API_PATH_SERVERS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "localstack.utils.server.multiserver.API_SERVERS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.utils.server.multiserver.CORS": {
  "data": {
   "shadows": "flask_cors.CORS"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.FuncThread": {
  "data": {
   "shadows": "localstack.utils.common.FuncThread"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.GenericProxy": {
  "data": {
   "shadows": "localstack.services.generic_proxy.GenericProxy"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.LOG": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "localstack.utils.server.multiserver.MULTI_SERVER_PORT": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "localstack.utils.server.multiserver.ProxyListener": {
  "data": {
   "shadows": "localstack.services.generic_proxy.ProxyListener"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.RUN_SERVER_IN_PROCESS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "localstack.utils.server.multiserver.Response": {
  "data": {
   "shadows": "requests.models.Response"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.ShellCommandThread": {
  "data": {
   "shadows": "localstack.utils.common.ShellCommandThread"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.TMP_THREADS": {
  "data": {
   "shadows": "localstack.utils.common.TMP_THREADS"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.constants": {
  "data": {
   "shadows": "localstack.constants"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.is_port_open": {
  "data": {
   "shadows": "localstack.utils.common.is_port_open"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.json_safe": {
  "data": {
   "shadows": "localstack.utils.common.json_safe"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.main": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "int",
    "len",
    "localstack.utils.bootstrap.setup_logging",
    "localstack.utils.server.multiserver.MULTI_SERVER_PORT",
    "localstack.utils.server.multiserver.start_server",
    "localstack.utils.server.multiserver.sys"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.multiserver.moto_server": {
  "data": {
   "shadows": "moto.server"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.patch_moto_server": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "create_backend_app_orig",
    "moto.server.create_backend_app"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.multiserver.patch_moto_server.create_backend_app": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "create_backend_app_orig",
    "flask_cors.CORS"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.multiserver.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.setup_logging": {
  "data": {
   "shadows": "localstack.utils.bootstrap.setup_logging"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.start_api_server": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.server.multiserver.API_PATH_SERVERS",
    "localstack.utils.server.multiserver.MULTI_SERVER_PORT",
    "localstack.utils.server.multiserver.requests",
    "start_server_process"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.multiserver.start_api_server_locally": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "localstack.utils.common.FuncThread",
    "localstack.utils.common.TMP_THREADS.append",
    "localstack.utils.server.multiserver.API_SERVERS"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.multiserver.start_api_server_locally.thread_func": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "localstack.constants.BIND_HOST",
    "moto.server.main",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.multiserver.start_server": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ConfigListener",
    "localstack.services.generic_proxy.GenericProxy",
    "localstack.utils.common.is_port_open",
    "localstack.utils.server.multiserver.LOG"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.multiserver.start_server.ConfigListener": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "localstack.services.generic_proxy.ProxyListener"
   ]
  },
  "type": "class"
 },
 "localstack.utils.server.multiserver.start_server.ConfigListener.forward_request": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.common.json_safe",
    "localstack.utils.common.to_str",
    "localstack.utils.server.multiserver.API_PATH_SERVERS",
    "localstack.utils.server.multiserver.API_SERVERS",
    "localstack.utils.server.multiserver.LOG",
    "localstack.utils.server.multiserver.json",
    "localstack.utils.server.multiserver.start_api_server_locally",
    "requests.models.Response",
    "str"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.multiserver.start_server_process": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "localstack.constants.LOCALSTACK_ROOT_FOLDER",
    "localstack.utils.common.ShellCommandThread",
    "localstack.utils.common.TMP_THREADS.append",
    "localstack.utils.common.wait_for_port_open",
    "localstack.utils.server.multiserver.API_SERVERS",
    "localstack.utils.server.multiserver.LOG",
    "localstack.utils.server.multiserver.MULTI_SERVER_PORT",
    "localstack.utils.server.multiserver.RUN_SERVER_IN_PROCESS",
    "localstack.utils.server.multiserver.start_server",
    "localstack.utils.server.multiserver.subprocess",
    "localstack.utils.server.multiserver.sys"
   ]
  },
  "type": "function"
 },
 "localstack.utils.server.multiserver.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.utils.server.multiserver.wait_for_port_open": {
  "data": {
   "shadows": "localstack.utils.common.wait_for_port_open"
  },
  "type": "import"
 },
 "localstack.utils.testutil": {
  "data": {},
  "type": "module"
 },
 "localstack.utils.testutil.ARCHIVE_DIR_PREFIX": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "localstack.utils.testutil.LAMBDA_DEFAULT_HANDLER": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_HANDLER"
  },
  "type": "import"
 },
 "localstack.utils.testutil.LAMBDA_DEFAULT_RUNTIME": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_RUNTIME"
  },
  "type": "import"
 },
 "localstack.utils.testutil.LAMBDA_DEFAULT_STARTING_POSITION": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_STARTING_POSITION"
  },
  "type": "import"
 },
 "localstack.utils.testutil.LAMBDA_DEFAULT_TIMEOUT": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_TIMEOUT"
  },
  "type": "import"
 },
 "localstack.utils.testutil.LAMBDA_TEST_ROLE": {
  "data": {
   "shadows": "localstack.constants.LAMBDA_TEST_ROLE"
  },
  "type": "import"
 },
 "localstack.utils.testutil.LOCALSTACK_ROOT_FOLDER": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_ROOT_FOLDER"
  },
  "type": "import"
 },
 "localstack.utils.testutil.LOCALSTACK_VENV_FOLDER": {
  "data": {
   "shadows": "localstack.constants.LOCALSTACK_VENV_FOLDER"
  },
  "type": "import"
 },
 "localstack.utils.testutil.TEST_AWS_ACCOUNT_ID": {
  "data": {
   "shadows": "localstack.constants.TEST_AWS_ACCOUNT_ID"
  },
  "type": "import"
 },
 "localstack.utils.testutil.TMP_FILES": {
  "data": {
   "shadows": "localstack.utils.common.TMP_FILES"
  },
  "type": "import"
 },
 "localstack.utils.testutil.assert_object": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "Exception",
    "find_object",
    "isinstance",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.assert_objects": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "assert_object",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.aws_stack": {
  "data": {
   "shadows": "localstack.utils.aws.aws_stack"
  },
  "type": "import"
 },
 "localstack.utils.testutil.create_lambda_archive": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception",
    "create_zip_file",
    "len",
    "localstack.constants.LOCALSTACK_ROOT_FOLDER",
    "localstack.constants.LOCALSTACK_VENV_FOLDER",
    "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_HANDLER",
    "localstack.services.awslambda.lambda_api.get_handler_file_from_name",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.common.mkdir",
    "localstack.utils.common.save_file",
    "localstack.utils.testutil.ARCHIVE_DIR_PREFIX",
    "localstack.utils.testutil.glob",
    "localstack.utils.testutil.importlib",
    "localstack.utils.testutil.os",
    "localstack.utils.testutil.shutil",
    "localstack.utils.testutil.tempfile",
    "range"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.create_lambda_function": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "localstack.constants.LAMBDA_TEST_ROLE",
    "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_HANDLER",
    "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_RUNTIME",
    "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_STARTING_POSITION",
    "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_TIMEOUT",
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.create_sqs_queue": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.create_zip_file": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len",
    "localstack.utils.common.TMP_FILES.append",
    "localstack.utils.testutil.ARCHIVE_DIR_PREFIX",
    "localstack.utils.testutil.os",
    "localstack.utils.testutil.shutil",
    "localstack.utils.testutil.tempfile",
    "localstack.utils.testutil.zipfile",
    "open"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.delete_lambda_function": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "localstack.utils.aws.aws_stack.connect_to_service"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.download_s3_object": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.common.to_str",
    "localstack.utils.testutil.tempfile"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.find_object": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "dict",
    "find_recursive",
    "isinstance",
    "list",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.find_recursive": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.get_handler_file_from_name": {
  "data": {
   "shadows": "localstack.services.awslambda.lambda_api.get_handler_file_from_name"
  },
  "type": "import"
 },
 "localstack.utils.testutil.get_sample_arn": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "localstack.constants.TEST_AWS_ACCOUNT_ID",
    "localstack.utils.aws.aws_stack.get_region"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "localstack.utils.testutil.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "localstack.utils.testutil.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "localstack.utils.testutil.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "localstack.utils.testutil.list_all_s3_objects": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "map_all_s3_objects"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.map_all_s3_objects": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "Exception",
    "localstack.utils.aws.aws_stack.get_s3_client",
    "localstack.utils.testutil.download_s3_object",
    "localstack.utils.testutil.json"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.mkdir": {
  "data": {
   "shadows": "localstack.utils.common.mkdir"
  },
  "type": "import"
 },
 "localstack.utils.testutil.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "localstack.utils.testutil.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "localstack.utils.testutil.save_file": {
  "data": {
   "shadows": "localstack.utils.common.save_file"
  },
  "type": "import"
 },
 "localstack.utils.testutil.send_describe_dynamodb_ttl_request": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "localstack.utils.testutil.json",
    "send_dynamodb_request"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.send_dynamodb_request": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "localstack.utils.testutil.os",
    "localstack.utils.testutil.requests"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.send_update_dynamodb_ttl_request": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "localstack.utils.testutil.json",
    "send_dynamodb_request"
   ]
  },
  "type": "function"
 },
 "localstack.utils.testutil.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "localstack.utils.testutil.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "localstack.utils.testutil.to_str": {
  "data": {
   "shadows": "localstack.utils.common.to_str"
  },
  "type": "import"
 },
 "localstack.utils.testutil.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 }
}