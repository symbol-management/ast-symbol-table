{
 "einsteinpy": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.__version__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "einsteinpy.bodies": {
  "data": {
   "symbols_in_volume": [
    "einsteinpy.bodies._Earth",
    "einsteinpy.bodies._Jupiter",
    "einsteinpy.bodies._Mars",
    "einsteinpy.bodies._Mercury",
    "einsteinpy.bodies._Moon",
    "einsteinpy.bodies._Neptune",
    "einsteinpy.bodies._Pluto",
    "einsteinpy.bodies._Saturn",
    "einsteinpy.bodies._Sun",
    "einsteinpy.bodies._Uranus",
    "einsteinpy.bodies._Venus"
   ]
  },
  "type": "module"
 },
 "einsteinpy.bodies.Body": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "einsteinpy.bodies.Body.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.units.C",
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.m",
    "astropy.units.quantity_input"
   ]
  },
  "type": "function"
 },
 "einsteinpy.bodies.Body.__repr__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "einsteinpy.bodies.Body.__str__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "einsteinpy.bodies.CartesianDifferential": {
  "data": {
   "shadows": "einsteinpy.coordinates.CartesianDifferential"
  },
  "type": "import"
 },
 "einsteinpy.bodies.Earth": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "einsteinpy.bodies.Jupiter": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "einsteinpy.bodies.Mars": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "einsteinpy.bodies.Mercury": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "einsteinpy.bodies.Moon": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "einsteinpy.bodies.Neptune": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "einsteinpy.bodies.Pluto": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "einsteinpy.bodies.Saturn": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "einsteinpy.bodies.Sun": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "einsteinpy.bodies.Uranus": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "einsteinpy.bodies.Venus": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "einsteinpy.bodies._Earth": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "einsteinpy.bodies.Body"
   ]
  },
  "type": "class"
 },
 "einsteinpy.bodies._Earth.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "einsteinpy.bodies.Sun",
    "einsteinpy.bodies._Earth",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.bodies._Jupiter": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "einsteinpy.bodies.Body"
   ]
  },
  "type": "class"
 },
 "einsteinpy.bodies._Jupiter.__init__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "einsteinpy.bodies.Sun",
    "einsteinpy.bodies._Jupiter",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.bodies._Mars": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "einsteinpy.bodies.Body"
   ]
  },
  "type": "class"
 },
 "einsteinpy.bodies._Mars.__init__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "einsteinpy.bodies.Sun",
    "einsteinpy.bodies._Mars",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.bodies._Mercury": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "einsteinpy.bodies.Body"
   ]
  },
  "type": "class"
 },
 "einsteinpy.bodies._Mercury.__init__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "einsteinpy.bodies.Sun",
    "einsteinpy.bodies._Mercury",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.bodies._Moon": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "einsteinpy.bodies.Body"
   ]
  },
  "type": "class"
 },
 "einsteinpy.bodies._Moon.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "einsteinpy.bodies.Earth",
    "einsteinpy.bodies._Moon",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.bodies._Neptune": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "einsteinpy.bodies.Body"
   ]
  },
  "type": "class"
 },
 "einsteinpy.bodies._Neptune.__init__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "einsteinpy.bodies.Sun",
    "einsteinpy.bodies._Neptune",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.bodies._Pluto": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "einsteinpy.bodies.Body"
   ]
  },
  "type": "class"
 },
 "einsteinpy.bodies._Pluto.__init__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "einsteinpy.bodies.Sun",
    "einsteinpy.bodies._Pluto",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.bodies._Saturn": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "einsteinpy.bodies.Body"
   ]
  },
  "type": "class"
 },
 "einsteinpy.bodies._Saturn.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "einsteinpy.bodies.Sun",
    "einsteinpy.bodies._Saturn",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.bodies._Sun": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "einsteinpy.bodies.Body"
   ]
  },
  "type": "class"
 },
 "einsteinpy.bodies._Sun.__init__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "einsteinpy.bodies._Sun",
    "einsteinpy.constant.R_sun",
    "einsteinpy.constant.Solar_Mass",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.bodies._Uranus": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "einsteinpy.bodies.Body"
   ]
  },
  "type": "class"
 },
 "einsteinpy.bodies._Uranus.__init__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "einsteinpy.bodies.Sun",
    "einsteinpy.bodies._Uranus",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.bodies._Venus": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "einsteinpy.bodies.Body"
   ]
  },
  "type": "class"
 },
 "einsteinpy.bodies._Venus.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "einsteinpy.bodies.Sun",
    "einsteinpy.bodies._Venus",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.bodies.constant": {
  "data": {
   "shadows": "einsteinpy.constant"
  },
  "type": "import"
 },
 "einsteinpy.bodies.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.constant": {
  "data": {
   "symbols_in_volume": [
    "astropy.constants.Constant",
    "astropy.constants.G",
    "astropy.constants.c",
    "astropy.constants.eps0",
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.s",
    "einsteinpy.constant.Cosmo_Const_base",
    "einsteinpy.constant.eps0",
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "einsteinpy.constant.Cosmo_Const": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "einsteinpy.constant.Cosmo_Const_base": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "einsteinpy.constant.G": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "einsteinpy.constant.R_sun": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "einsteinpy.constant.Solar_Mass": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "einsteinpy.constant.c": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "einsteinpy.constant.constants": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "einsteinpy.constant.coulombs_const": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "einsteinpy.constant.eps0": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "einsteinpy.constant.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.constant.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.coordinates": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.coordinates.conversion": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.coordinates.conversion.BoyerLindquistConversion": {
  "data": {
   "lineno": 86
  },
  "type": "class"
 },
 "einsteinpy.coordinates.conversion.BoyerLindquistConversion.__init__": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "einsteinpy.coordinates.conversion.BoyerLindquistConversion.convert_cartesian": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "einsteinpy.coordinates.utils.bl_to_cartesian_fast"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.conversion.BoyerLindquistConversion.convert_spherical": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "einsteinpy.coordinates.conversion.CartesianConversion"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.conversion.BoyerLindquistConversion.values": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "einsteinpy.coordinates.conversion.CartesianConversion": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "einsteinpy.coordinates.conversion.CartesianConversion.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "einsteinpy.coordinates.conversion.CartesianConversion.convert_bl": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "einsteinpy.coordinates.utils.cartesian_to_bl_fast"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.conversion.CartesianConversion.convert_spherical": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "einsteinpy.coordinates.utils.cartesian_to_spherical_fast"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.conversion.CartesianConversion.values": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "einsteinpy.coordinates.conversion.SphericalConversion": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "einsteinpy.coordinates.conversion.SphericalConversion.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "einsteinpy.coordinates.conversion.SphericalConversion.convert_bl": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "einsteinpy.coordinates.conversion.CartesianConversion"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.conversion.SphericalConversion.convert_cartesian": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "einsteinpy.coordinates.utils.spherical_to_cartesian_fast"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.conversion.SphericalConversion.values": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "einsteinpy.coordinates.conversion.bl_to_cartesian_fast": {
  "data": {
   "shadows": "einsteinpy.coordinates.utils.bl_to_cartesian_fast"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.conversion.cartesian_to_bl_fast": {
  "data": {
   "shadows": "einsteinpy.coordinates.utils.cartesian_to_bl_fast"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.conversion.cartesian_to_spherical_fast": {
  "data": {
   "shadows": "einsteinpy.coordinates.utils.cartesian_to_spherical_fast"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.conversion.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.conversion.spherical_to_cartesian_fast": {
  "data": {
   "shadows": "einsteinpy.coordinates.utils.spherical_to_cartesian_fast"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.core": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.coordinates.core.BoyerLindquist": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "einsteinpy.coordinates.conversion.BoyerLindquistConversion"
   ]
  },
  "type": "class"
 },
 "einsteinpy.coordinates.core.BoyerLindquist.__getitem__": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.BoyerLindquist.__init__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "astropy.units.km",
    "astropy.units.quantity_input",
    "astropy.units.rad",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.BoyerLindquist.__repr__": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.BoyerLindquist.__str__": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.BoyerLindquist.si_values": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.rad",
    "float",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.BoyerLindquist.to_cartesian": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "astropy.units.m",
    "einsteinpy.coordinates.core.Cartesian"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.BoyerLindquist.to_spherical": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.rad",
    "einsteinpy.coordinates.core.Spherical"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.BoyerLindquistConversion": {
  "data": {
   "shadows": "einsteinpy.coordinates.conversion.BoyerLindquistConversion"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.core.Cartesian": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "einsteinpy.coordinates.conversion.CartesianConversion"
   ]
  },
  "type": "class"
 },
 "einsteinpy.coordinates.core.Cartesian.__getitem__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.Cartesian.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.units.km",
    "astropy.units.quantity_input",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.Cartesian.__repr__": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.Cartesian.__str__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.Cartesian.dot": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.Cartesian.norm": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.Cartesian.si_values": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "astropy.units.m",
    "float",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.Cartesian.to_bl": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "BoyerLindquist",
    "astropy.units.km",
    "astropy.units.m",
    "astropy.units.quantity_input",
    "astropy.units.rad"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.Cartesian.to_spherical": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "Spherical",
    "astropy.units.m",
    "astropy.units.rad"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.CartesianConversion": {
  "data": {
   "shadows": "einsteinpy.coordinates.conversion.CartesianConversion"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.core.Spherical": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "einsteinpy.coordinates.conversion.SphericalConversion"
   ]
  },
  "type": "class"
 },
 "einsteinpy.coordinates.core.Spherical.__getitem__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.integer"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.Spherical.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "astropy.units.km",
    "astropy.units.quantity_input",
    "astropy.units.rad",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.Spherical.__repr__": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.Spherical.__str__": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.Spherical.si_values": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.rad",
    "float",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.Spherical.to_bl": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "BoyerLindquist",
    "astropy.units.km",
    "astropy.units.m",
    "astropy.units.quantity_input",
    "astropy.units.rad"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.Spherical.to_cartesian": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "astropy.units.m",
    "einsteinpy.coordinates.core.Cartesian"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.core.SphericalConversion": {
  "data": {
   "shadows": "einsteinpy.coordinates.conversion.SphericalConversion"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.core.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.utils": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.coordinates.utils.bl_to_cartesian": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "einsteinpy.ijit.jit",
    "numpy.cos",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.utils.bl_to_cartesian_fast": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "bl_to_cartesian",
    "bl_to_cartesian_novel"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.utils.bl_to_cartesian_novel": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "einsteinpy.ijit.jit",
    "numpy.cos",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.utils.cartesian_to_bl": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "einsteinpy.ijit.jit",
    "numpy.arccos",
    "numpy.arctan2",
    "numpy.sqrt",
    "numpy.square"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.utils.cartesian_to_bl_fast": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "cartesian_to_bl",
    "cartesian_to_bl_novel"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.utils.cartesian_to_bl_novel": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "einsteinpy.ijit.jit",
    "numpy.arccos",
    "numpy.arctan2",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.utils.cartesian_to_spherical": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "einsteinpy.ijit.jit",
    "numpy.arctan2",
    "numpy.hypot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.utils.cartesian_to_spherical_fast": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "cartesian_to_spherical",
    "cartesian_to_spherical_novel"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.utils.cartesian_to_spherical_novel": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "einsteinpy.ijit.jit",
    "numpy.arctan2",
    "numpy.hypot"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.utils.jit": {
  "data": {
   "shadows": "einsteinpy.ijit.jit"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.utils.spherical_to_cartesian": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "einsteinpy.ijit.jit",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.utils.spherical_to_cartesian_fast": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "spherical_to_cartesian",
    "spherical_to_cartesian_novel"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.utils.spherical_to_cartesian_novel": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "einsteinpy.ijit.jit",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.coordinates.velocity.BoyerLindquistConversion": {
  "data": {
   "shadows": "einsteinpy.coordinates.conversion.BoyerLindquistConversion"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.velocity.BoyerLindquistDifferential": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "einsteinpy.coordinates.conversion.BoyerLindquistConversion"
   ]
  },
  "type": "class"
 },
 "einsteinpy.coordinates.velocity.BoyerLindquistDifferential.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "astropy.units.km",
    "astropy.units.quantity_input",
    "astropy.units.rad",
    "astropy.units.s",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.BoyerLindquistDifferential.__repr__": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.BoyerLindquistDifferential.__str__": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.BoyerLindquistDifferential.cartesian_differential": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "einsteinpy.coordinates.velocity.CartesianDifferential"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.BoyerLindquistDifferential.si_values": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "float",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.BoyerLindquistDifferential.spherical_differential": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.coordinates.velocity.SphericalDifferential"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.BoyerLindquistDifferential.velocities": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.CartesianConversion": {
  "data": {
   "shadows": "einsteinpy.coordinates.conversion.CartesianConversion"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.velocity.CartesianDifferential": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "einsteinpy.coordinates.conversion.CartesianConversion"
   ]
  },
  "type": "class"
 },
 "einsteinpy.coordinates.velocity.CartesianDifferential.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.units.km",
    "astropy.units.quantity_input",
    "astropy.units.s",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.CartesianDifferential.__repr__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.CartesianDifferential.__str__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.CartesianDifferential.bl_differential": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "BoyerLindquistDifferential",
    "astropy.units.km",
    "astropy.units.m",
    "astropy.units.quantity_input",
    "astropy.units.rad",
    "astropy.units.s"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.CartesianDifferential.si_values": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "float",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.CartesianDifferential.spherical_differential": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "SphericalDifferential",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.CartesianDifferential.velocities": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.SphericalConversion": {
  "data": {
   "shadows": "einsteinpy.coordinates.conversion.SphericalConversion"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.velocity.SphericalDifferential": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "einsteinpy.coordinates.conversion.SphericalConversion"
   ]
  },
  "type": "class"
 },
 "einsteinpy.coordinates.velocity.SphericalDifferential.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "astropy.units.km",
    "astropy.units.quantity_input",
    "astropy.units.rad",
    "astropy.units.s",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.SphericalDifferential.__repr__": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.SphericalDifferential.__str__": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.SphericalDifferential.bl_differential": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "BoyerLindquistDifferential",
    "astropy.units.km",
    "astropy.units.m",
    "astropy.units.quantity_input",
    "astropy.units.rad",
    "astropy.units.s"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.SphericalDifferential.cartesian_differential": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.s",
    "einsteinpy.coordinates.velocity.CartesianDifferential"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.SphericalDifferential.si_values": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "float",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.SphericalDifferential.velocities": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "einsteinpy.coordinates.velocity.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.coordinates.velocity.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.examples": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.examples.Body": {
  "data": {
   "shadows": "einsteinpy.bodies.Body"
  },
  "type": "import"
 },
 "einsteinpy.examples.Geodesic": {
  "data": {
   "shadows": "einsteinpy.geodesic.Geodesic"
  },
  "type": "import"
 },
 "einsteinpy.examples.SphericalDifferential": {
  "data": {
   "shadows": "einsteinpy.coordinates.SphericalDifferential"
  },
  "type": "import"
 },
 "einsteinpy.examples.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.examples.perihelion": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.bodies.Body",
    "einsteinpy.coordinates.SphericalDifferential",
    "einsteinpy.geodesic.Geodesic",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "einsteinpy.examples.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.geodesic": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.geodesic.Geodesic": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "einsteinpy.geodesic.Geodesic.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "astropy.units.s",
    "einsteinpy.metric.Schwarzschild"
   ]
  },
  "type": "function"
 },
 "einsteinpy.geodesic.Geodesic.__repr__": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "einsteinpy.geodesic.Geodesic.__str__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "einsteinpy.geodesic.Geodesic.trajectory": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "einsteinpy.geodesic.Schwarzschild": {
  "data": {
   "shadows": "einsteinpy.metric.Schwarzschild"
  },
  "type": "import"
 },
 "einsteinpy.geodesic.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.hypersurface": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.hypersurface.schwarzschildembedding": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.hypersurface.schwarzschildembedding.SchwarzschildEmbedding": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "einsteinpy.hypersurface.schwarzschildembedding.SchwarzschildEmbedding.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.m.to"
   ]
  },
  "type": "function"
 },
 "einsteinpy.hypersurface.schwarzschildembedding.SchwarzschildEmbedding.get_values": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "einsteinpy.hypersurface.schwarzschildembedding.SchwarzschildEmbedding.get_values_surface": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.pi",
    "numpy.sin",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.hypersurface.schwarzschildembedding.SchwarzschildEmbedding.gradient": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.hypersurface.schwarzschildembedding.SchwarzschildEmbedding.radial_coord": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.hypersurface.schwarzschildembedding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.hypersurface.schwarzschildembedding.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "einsteinpy.hypersurface.schwarzschildembedding.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.hypersurface.schwarzschildembedding.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "einsteinpy.ijit": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "einsteinpy.ijit.ijit",
    "einsteinpy.ijit.numba",
    "einsteinpy.ijit.warnings"
   ]
  },
  "type": "module"
 },
 "einsteinpy.ijit.ijit": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "einsteinpy.ijit.inspect"
   ]
  },
  "type": "function"
 },
 "einsteinpy.ijit.ijit._jit": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "einsteinpy.ijit.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "einsteinpy.ijit.jit": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "einsteinpy.ijit.numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "einsteinpy.ijit.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "einsteinpy.integrators": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.integrators.runge_kutta": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.integrators.runge_kutta.RK45": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "scipy.integrate.RK45"
   ]
  },
  "type": "class"
 },
 "einsteinpy.integrators.runge_kutta.RK45.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "einsteinpy.integrators.runge_kutta.RK45",
    "float",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.integrators.runge_kutta.RK45.step": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "RuntimeError",
    "RuntimeWarning",
    "einsteinpy.integrators.runge_kutta.RK45",
    "einsteinpy.integrators.runge_kutta.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.integrators.runge_kutta.RK4naive": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "einsteinpy.integrators.runge_kutta.RK4naive.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "einsteinpy.integrators.runge_kutta.RK4naive.step": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "RuntimeWarning",
    "einsteinpy.integrators.runge_kutta.warnings"
   ]
  },
  "type": "function"
 },
 "einsteinpy.integrators.runge_kutta.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "einsteinpy.integrators.runge_kutta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.integrators.runge_kutta.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "einsteinpy.metric": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.metric.kerr": {
  "data": {
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value"
   ]
  },
  "type": "module"
 },
 "einsteinpy.metric.kerr.BoyerLindquistConversion": {
  "data": {
   "shadows": "einsteinpy.coordinates.BoyerLindquistConversion"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerr.Kerr": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "einsteinpy.metric.kerr.Kerr.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.quantity_input",
    "astropy.units.s",
    "einsteinpy.utils.kerr_utils.kerr_time_velocity",
    "einsteinpy.utils.schwarzschild_radius",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.kerr.Kerr.calculate_trajectory": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "RuntimeWarning",
    "einsteinpy.coordinates.BoyerLindquistConversion",
    "einsteinpy.integrators.RK45",
    "einsteinpy.metric.kerr.warnings",
    "einsteinpy.utils.kerr_utils.event_horizon",
    "list",
    "numpy.array",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.kerr.Kerr.calculate_trajectory_iterator": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "RuntimeWarning",
    "einsteinpy.coordinates.BoyerLindquistConversion",
    "einsteinpy.integrators.RK45",
    "einsteinpy.metric.kerr.warnings",
    "einsteinpy.utils.kerr_utils.event_horizon",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.kerr.Kerr.f_vec": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "einsteinpy.utils.kerr_utils.christoffels",
    "float",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.kerr.Kerr.from_coords": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.quantity_input",
    "astropy.units.s",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.kerr.RK45": {
  "data": {
   "shadows": "einsteinpy.integrators.RK45"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerr._G": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "einsteinpy.metric.kerr._c": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "einsteinpy.metric.kerr.constant": {
  "data": {
   "shadows": "einsteinpy.constant"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerr.kerr_utils": {
  "data": {
   "shadows": "einsteinpy.utils.kerr_utils"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerr.schwarzschild_radius": {
  "data": {
   "shadows": "einsteinpy.utils.schwarzschild_radius"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerr.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerr.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerrnewman": {
  "data": {
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.constant.coulombs_const.value"
   ]
  },
  "type": "module"
 },
 "einsteinpy.metric.kerrnewman.BoyerLindquistConversion": {
  "data": {
   "shadows": "einsteinpy.coordinates.BoyerLindquistConversion"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerrnewman.KerrNewman": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "einsteinpy.metric.kerrnewman.KerrNewman.__init__": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.units.C",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.quantity_input",
    "astropy.units.s",
    "einsteinpy.utils.kerrnewman_utils.kerrnewman_time_velocity",
    "einsteinpy.utils.schwarzschild_radius",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.kerrnewman.KerrNewman.calculate_trajectory": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "RuntimeWarning",
    "einsteinpy.coordinates.BoyerLindquistConversion",
    "einsteinpy.integrators.RK45",
    "einsteinpy.metric.kerrnewman.warnings",
    "einsteinpy.utils.kerrnewman_utils.event_horizon",
    "list",
    "numpy.array",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.kerrnewman.KerrNewman.calculate_trajectory_iterator": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "RuntimeWarning",
    "einsteinpy.coordinates.BoyerLindquistConversion",
    "einsteinpy.integrators.RK45",
    "einsteinpy.metric.kerrnewman.warnings",
    "einsteinpy.utils.kerrnewman_utils.event_horizon",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.kerrnewman.KerrNewman.f_vec": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "einsteinpy.utils.kerrnewman_utils.christoffels",
    "einsteinpy.utils.kerrnewman_utils.maxwell_tensor_contravariant",
    "einsteinpy.utils.kerrnewman_utils.metric",
    "float",
    "numpy.dot",
    "numpy.matmul",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.kerrnewman.KerrNewman.from_coords": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "astropy.units.C",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.quantity_input",
    "astropy.units.s",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.kerrnewman.RK45": {
  "data": {
   "shadows": "einsteinpy.integrators.RK45"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerrnewman._Cc": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "einsteinpy.metric.kerrnewman._G": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "einsteinpy.metric.kerrnewman._c": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "einsteinpy.metric.kerrnewman.constant": {
  "data": {
   "shadows": "einsteinpy.constant"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerrnewman.kerrnewman_utils": {
  "data": {
   "shadows": "einsteinpy.utils.kerrnewman_utils"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerrnewman.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerrnewman.schwarzschild_radius": {
  "data": {
   "shadows": "einsteinpy.utils.schwarzschild_radius"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerrnewman.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.metric.kerrnewman.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "einsteinpy.metric.schwarzschild": {
  "data": {
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value"
   ]
  },
  "type": "module"
 },
 "einsteinpy.metric.schwarzschild.RK45": {
  "data": {
   "shadows": "einsteinpy.integrators.RK45"
  },
  "type": "import"
 },
 "einsteinpy.metric.schwarzschild.Schwarzschild": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "einsteinpy.metric.schwarzschild.Schwarzschild.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.quantity_input",
    "astropy.units.s",
    "einsteinpy.utils.schwarzschild_radius",
    "einsteinpy.utils.schwarzschild_utils.time_velocity",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.schwarzschild.Schwarzschild.calculate_trajectory": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "RuntimeWarning",
    "einsteinpy.coordinates.SphericalConversion",
    "einsteinpy.integrators.RK45",
    "einsteinpy.metric.schwarzschild.warnings",
    "list",
    "numpy.array",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.schwarzschild.Schwarzschild.calculate_trajectory_iterator": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "RuntimeWarning",
    "einsteinpy.coordinates.SphericalConversion",
    "einsteinpy.integrators.RK45",
    "einsteinpy.metric.schwarzschild.warnings",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.schwarzschild.Schwarzschild.f_vec": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "einsteinpy.utils.schwarzschild_utils.christoffels",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.schwarzschild.Schwarzschild.from_coords": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.quantity_input",
    "astropy.units.s",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "einsteinpy.metric.schwarzschild.SphericalConversion": {
  "data": {
   "shadows": "einsteinpy.coordinates.SphericalConversion"
  },
  "type": "import"
 },
 "einsteinpy.metric.schwarzschild._G": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "einsteinpy.metric.schwarzschild._c": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "einsteinpy.metric.schwarzschild.constant": {
  "data": {
   "shadows": "einsteinpy.constant"
  },
  "type": "import"
 },
 "einsteinpy.metric.schwarzschild.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.metric.schwarzschild.schwarzschild_radius": {
  "data": {
   "shadows": "einsteinpy.utils.schwarzschild_radius"
  },
  "type": "import"
 },
 "einsteinpy.metric.schwarzschild.schwarzschild_utils": {
  "data": {
   "shadows": "einsteinpy.utils.schwarzschild_utils"
  },
  "type": "import"
 },
 "einsteinpy.metric.schwarzschild.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.metric.schwarzschild.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "einsteinpy.plotting": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.plotting.GeodesicPlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.geodesics.core.GeodesicPlotter"
  },
  "type": "import"
 },
 "einsteinpy.plotting.HypersurfacePlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.hypersurface.core.HypersurfacePlotter"
  },
  "type": "import"
 },
 "einsteinpy.plotting.InteractiveGeodesicPlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.geodesics.interactive.InteractiveGeodesicPlotter"
  },
  "type": "import"
 },
 "einsteinpy.plotting.ShadowPlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.rays.shadow.ShadowPlotter"
  },
  "type": "import"
 },
 "einsteinpy.plotting.StaticGeodesicPlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.geodesics.static.StaticGeodesicPlotter"
  },
  "type": "import"
 },
 "einsteinpy.plotting.fractal": {
  "data": {
   "shadows": "einsteinpy.plotting.fractal.fractal"
  },
  "type": "import"
 },
 "einsteinpy.plotting.fractal._fractal_img": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "einsteinpy.plotting.fractal._julia",
    "float",
    "numpy.exp",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.fractal._julia": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "abs",
    "einsteinpy.ijit.jit",
    "numpy.complex"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.fractal.fractal": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "dict",
    "einsteinpy.plotting.fractal._fractal_img",
    "len",
    "list",
    "numpy.linspace",
    "numpy.pi",
    "plotly.graph_objects.Figure",
    "plotly.graph_objects.Heatmap",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.fractal.go": {
  "data": {
   "shadows": "plotly.graph_objects"
  },
  "type": "import"
 },
 "einsteinpy.plotting.fractal.jit": {
  "data": {
   "shadows": "einsteinpy.ijit.jit"
  },
  "type": "import"
 },
 "einsteinpy.plotting.fractal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.plotting.geodesics.GeodesicPlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.geodesics.core.GeodesicPlotter"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.InteractiveGeodesicPlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.geodesics.interactive.InteractiveGeodesicPlotter"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.StaticGeodesicPlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.geodesics.static.StaticGeodesicPlotter"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.core": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.plotting.geodesics.core.GeodesicPlotter": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "einsteinpy.plotting.geodesics.core.in_ipynb"
   ]
  },
  "type": "class"
 },
 "einsteinpy.plotting.geodesics.core.InteractiveGeodesicPlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.geodesics.interactive.InteractiveGeodesicPlotter"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.core.StaticGeodesicPlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.geodesics.static.StaticGeodesicPlotter"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.core.in_ipynb": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "NameError",
    "einsteinpy.plotting.geodesics.interactive.InteractiveGeodesicPlotter",
    "einsteinpy.plotting.geodesics.static.StaticGeodesicPlotter",
    "get_ipython"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.core.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.interactive": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.plotting.geodesics.interactive.InteractiveGeodesicPlotter": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "einsteinpy.plotting.geodesics.interactive.InteractiveGeodesicPlotter.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dict",
    "plotly.graph_objects.Figure",
    "plotly.graph_objects.Layout"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.interactive.InteractiveGeodesicPlotter._draw_attractor": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "max",
    "min",
    "plotly.graph_objects.Scatter",
    "plotly.graph_objects.layout.Shape"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.interactive.InteractiveGeodesicPlotter._mindist": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.interactive.InteractiveGeodesicPlotter.plot": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "dict",
    "einsteinpy.plotting.geodesics.interactive.random",
    "numpy.array",
    "plotly.graph_objects.Scatter"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.interactive.InteractiveGeodesicPlotter.save": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "einsteinpy.plotting.geodesics.interactive.os",
    "plotly.offline.plot"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.interactive.InteractiveGeodesicPlotter.show": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.interactive.go": {
  "data": {
   "shadows": "plotly.graph_objects"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.interactive.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.interactive.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.interactive.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.interactive.saveplot": {
  "data": {
   "shadows": "plotly.offline.plot"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.static": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.plotting.geodesics.static.Circle": {
  "data": {
   "shadows": "matplotlib.patches.Circle"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.static.FuncAnimation": {
  "data": {
   "shadows": "matplotlib.animation.FuncAnimation"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.static.StaticGeodesicPlotter": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "einsteinpy.plotting.geodesics.static.StaticGeodesicPlotter.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.subplots"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.static.StaticGeodesicPlotter._draw_attractor": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "enumerate",
    "matplotlib.patches.Circle",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.static.StaticGeodesicPlotter._mindist": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.static.StaticGeodesicPlotter._set_scaling": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.static.StaticGeodesicPlotter.animate": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "einsteinpy.plotting.geodesics.static.random",
    "matplotlib.animation.FuncAnimation",
    "matplotlib.pyplot.xlim",
    "matplotlib.pyplot.ylim",
    "max",
    "min",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.static.StaticGeodesicPlotter.animate._update": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.static.StaticGeodesicPlotter.plot": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "einsteinpy.plotting.geodesics.static.random",
    "max",
    "min",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.static.StaticGeodesicPlotter.save": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "matplotlib.pyplot.savefig"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.static.StaticGeodesicPlotter.show": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "matplotlib.pyplot.show"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.geodesics.static.mplot3d": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.static.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.static.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "einsteinpy.plotting.geodesics.static.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "einsteinpy.plotting.hypersurface": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.plotting.hypersurface.HypersurfacePlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.hypersurface.core.HypersurfacePlotter"
  },
  "type": "import"
 },
 "einsteinpy.plotting.hypersurface.core": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.plotting.hypersurface.core.HypersurfacePlotter": {
  "data": {
   "lineno": 4
  },
  "type": "class"
 },
 "einsteinpy.plotting.hypersurface.core.HypersurfacePlotter.__init__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "einsteinpy.plotting.hypersurface.core.HypersurfacePlotter.plot": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.hypersurface.core.HypersurfacePlotter.show": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "matplotlib.pyplot.show"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.hypersurface.core.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "einsteinpy.plotting.rays": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.plotting.rays.shadow": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.plotting.rays.shadow.ShadowPlotter": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "einsteinpy.plotting.rays.shadow.ShadowPlotter.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "einsteinpy.plotting.rays.shadow.ShadowPlotter.plot": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.plot",
    "matplotlib.pyplot.title",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.ylabel",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.rays.shadow.ShadowPlotter.show": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "matplotlib.pyplot.cm.afmhot",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.pcolormesh",
    "matplotlib.pyplot.show",
    "matplotlib.pyplot.title",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "einsteinpy.plotting.rays.shadow.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.plotting.rays.shadow.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "einsteinpy.rays": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.rays.shadow": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.rays.shadow.Shadow": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "einsteinpy.rays.shadow.Shadow.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.quantity_input",
    "einsteinpy.rays.shadow.warnings",
    "list",
    "numpy.array",
    "numpy.asarray",
    "numpy.isreal",
    "numpy.real",
    "numpy.sqrt",
    "scipy.optimize.newton"
   ]
  },
  "type": "function"
 },
 "einsteinpy.rays.shadow.Shadow._compute_B": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "einsteinpy.rays.shadow.Shadow._intensity": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "scipy.integrate.fixed_quad"
   ]
  },
  "type": "function"
 },
 "einsteinpy.rays.shadow.Shadow._intensity_blue_sch": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "einsteinpy.rays.shadow.Shadow._intensity_from_event_horizon": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.linspace",
    "scipy.integrate.fixed_quad"
   ]
  },
  "type": "function"
 },
 "einsteinpy.rays.shadow.Shadow._intensity_red_sch": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "einsteinpy.rays.shadow.Shadow._root_equation": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "einsteinpy.rays.shadow.Shadow.smoothen": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "interpolation",
    "numpy.linspace",
    "numpy.max",
    "numpy.min",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "einsteinpy.rays.shadow.fixed_quad": {
  "data": {
   "shadows": "scipy.integrate.fixed_quad"
  },
  "type": "import"
 },
 "einsteinpy.rays.shadow.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "einsteinpy.rays.shadow.newton": {
  "data": {
   "shadows": "scipy.optimize.newton"
  },
  "type": "import"
 },
 "einsteinpy.rays.shadow.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.rays.shadow.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.rays.shadow.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "einsteinpy.symbolic": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.christoffel": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.christoffel.BaseRelativityTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor.BaseRelativityTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.christoffel.ChristoffelSymbols": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "einsteinpy.symbolic.tensor.BaseRelativityTensor"
   ]
  },
  "type": "class"
 },
 "einsteinpy.symbolic.christoffel.ChristoffelSymbols.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.christoffel.ChristoffelSymbols",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.christoffel.ChristoffelSymbols.change_config": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Exception",
    "einsteinpy.symbolic.christoffel.ChristoffelSymbols",
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.tensor._change_config"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.christoffel.ChristoffelSymbols.from_metric": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "einsteinpy.symbolic.christoffel.sympy",
    "int",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.christoffel.ChristoffelSymbols.lorentz_transform": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "einsteinpy.symbolic.christoffel.ChristoffelSymbols",
    "einsteinpy.symbolic.helpers._change_name",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.christoffel._change_config": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor._change_config"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.christoffel._change_name": {
  "data": {
   "shadows": "einsteinpy.symbolic.helpers._change_name"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.christoffel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.christoffel.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.constants": {
  "data": {
   "symbols_in_volume": [
    "einsteinpy.symbolic.constants.SymbolicConstant"
   ]
  },
  "type": "module"
 },
 "einsteinpy.symbolic.constants.Cosmo_Const": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "einsteinpy.symbolic.constants.G": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "einsteinpy.symbolic.constants.Symbol": {
  "data": {
   "shadows": "sympy.core.symbol.Symbol"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.constants.SymbolicConstant": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "sympy.core.symbol.Symbol"
   ]
  },
  "type": "class"
 },
 "einsteinpy.symbolic.constants.SymbolicConstant.__new__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "einsteinpy.symbolic.constants.SymbolicConstant",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.constants.SymbolicConstant.descriptive_name": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.constants.c": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "einsteinpy.symbolic.constants.eps_0": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "einsteinpy.symbolic.constants.get_constant": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "einsteinpy.symbolic.constants.Cosmo_Const",
    "einsteinpy.symbolic.constants.G",
    "einsteinpy.symbolic.constants.c",
    "einsteinpy.symbolic.constants.eps_0"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.einstein": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.einstein.BaseRelativityTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor.BaseRelativityTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.einstein.EinsteinTensor": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "einsteinpy.symbolic.tensor.BaseRelativityTensor"
   ]
  },
  "type": "class"
 },
 "einsteinpy.symbolic.einstein.EinsteinTensor.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.einstein.EinsteinTensor",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.einstein.EinsteinTensor.change_config": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception",
    "einsteinpy.symbolic.einstein.EinsteinTensor",
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.tensor._change_config"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.einstein.EinsteinTensor.from_metric": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "einsteinpy.symbolic.ricci.RicciScalar.from_riccitensor",
    "einsteinpy.symbolic.ricci.RicciTensor.from_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.einstein.EinsteinTensor.lorentz_transform": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "einsteinpy.symbolic.einstein.EinsteinTensor",
    "einsteinpy.symbolic.helpers._change_name",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.einstein.RicciScalar": {
  "data": {
   "shadows": "einsteinpy.symbolic.ricci.RicciScalar"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.einstein.RicciTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.ricci.RicciTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.einstein._change_config": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor._change_config"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.einstein._change_name": {
  "data": {
   "shadows": "einsteinpy.symbolic.helpers._change_name"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.einstein.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.helpers": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.helpers.ImmutableDenseNDimArray": {
  "data": {
   "shadows": "sympy.ImmutableDenseNDimArray"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.helpers.TransformationMatrix": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "sympy.ImmutableDenseNDimArray"
   ]
  },
  "type": "class"
 },
 "einsteinpy.symbolic.helpers.TransformationMatrix.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "einsteinpy.symbolic.helpers.TransformationMatrix.__new__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.helpers.TransformationMatrix",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.helpers.TransformationMatrix.from_new2old": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "einsteinpy.symbolic.helpers.sympy_to_np_array",
    "numpy.reciprocal",
    "sympy.derive_by_array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.helpers.TransformationMatrix.from_old2new": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.helpers.TransformationMatrix.inv": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "einsteinpy.symbolic.helpers.sympy_to_np_array",
    "numpy.reciprocal",
    "sympy.ImmutableDenseNDimArray"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.helpers._change_name": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.helpers._flatten_list": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.helpers.derive_by_array": {
  "data": {
   "shadows": "sympy.derive_by_array"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.helpers.raise_warning": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "einsteinpy.symbolic.helpers.warnings"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.helpers.simplify_sympy_array": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AttributeError",
    "IndexError",
    "einsteinpy.symbolic.helpers._flatten_list",
    "einsteinpy.symbolic.helpers.sympy",
    "sum"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.helpers.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.helpers.sympy_to_np_array": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.helpers.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.metric": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.metric.BaseRelativityTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor.BaseRelativityTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.metric.MetricTensor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "einsteinpy.symbolic.tensor.BaseRelativityTensor"
   ]
  },
  "type": "class"
 },
 "einsteinpy.symbolic.metric.MetricTensor.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.metric.MetricTensor",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.metric.MetricTensor.change_config": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.metric.MetricTensor",
    "einsteinpy.symbolic.metric.sympy"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.metric.MetricTensor.inv": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "einsteinpy.symbolic.metric.MetricTensor.lorentz_transform": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.metric.MetricTensor",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.metric.MetricTensor.lower_config": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "einsteinpy.symbolic.metric._change_name": {
  "data": {
   "shadows": "einsteinpy.symbolic.helpers._change_name"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.metric.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.predefined.barriola_vilenkin": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.predefined.barriola_vilenkin.BarriolaVilekin": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "einsteinpy.symbolic.constants.c",
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.diag",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.barriola_vilenkin.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.metric.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.barriola_vilenkin.constants": {
  "data": {
   "shadows": "einsteinpy.symbolic.constants"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.barriola_vilenkin.diag": {
  "data": {
   "shadows": "sympy.diag"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.barriola_vilenkin.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.barriola_vilenkin.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bertotti_kasner": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.predefined.bertotti_kasner.BertottiKasner": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "einsteinpy.symbolic.constants.c",
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.diag",
    "sympy.exp",
    "sympy.sin",
    "sympy.sqrt",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.bertotti_kasner.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.metric.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bertotti_kasner.constants": {
  "data": {
   "shadows": "einsteinpy.symbolic.constants"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bertotti_kasner.diag": {
  "data": {
   "shadows": "sympy.diag"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bertotti_kasner.exp": {
  "data": {
   "shadows": "sympy.exp"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bertotti_kasner.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bertotti_kasner.sqrt": {
  "data": {
   "shadows": "sympy.sqrt"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bertotti_kasner.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bessel_gravitational_wave": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.predefined.bessel_gravitational_wave.BesselGravitationalWave": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.besselj",
    "sympy.cos",
    "sympy.diag",
    "sympy.exp",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.bessel_gravitational_wave.Function": {
  "data": {
   "shadows": "sympy.Function"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bessel_gravitational_wave.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.metric.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bessel_gravitational_wave.Symbol": {
  "data": {
   "shadows": "sympy.Symbol"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bessel_gravitational_wave.besselj": {
  "data": {
   "shadows": "sympy.besselj"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bessel_gravitational_wave.constants": {
  "data": {
   "shadows": "einsteinpy.symbolic.constants"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bessel_gravitational_wave.cos": {
  "data": {
   "shadows": "sympy.cos"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bessel_gravitational_wave.diag": {
  "data": {
   "shadows": "sympy.diag"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bessel_gravitational_wave.exp": {
  "data": {
   "shadows": "sympy.exp"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bessel_gravitational_wave.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bessel_gravitational_wave.sqrt": {
  "data": {
   "shadows": "sympy.sqrt"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.bessel_gravitational_wave.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.cmetric": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.predefined.cmetric.CMetric": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.Function",
    "sympy.diag",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.cmetric.Function": {
  "data": {
   "shadows": "sympy.Function"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.cmetric.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.metric.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.cmetric.diag": {
  "data": {
   "shadows": "sympy.diag"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.cmetric.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.davidson": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.predefined.davidson.Davidson": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.Rational",
    "sympy.diag",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.davidson.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.metric.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.davidson.Rational": {
  "data": {
   "shadows": "sympy.Rational"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.davidson.diag": {
  "data": {
   "shadows": "sympy.diag"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.davidson.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.de_sitter": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.predefined.de_sitter.AntiDeSitter": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.cos",
    "sympy.diag",
    "sympy.sin",
    "sympy.sinh",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.de_sitter.AntiDeSitterStatic": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.cosh",
    "sympy.diag",
    "sympy.sin",
    "sympy.sinh",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.de_sitter.DeSitter": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.diag",
    "sympy.exp",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.de_sitter.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.metric.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.de_sitter.cos": {
  "data": {
   "shadows": "sympy.cos"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.de_sitter.cosh": {
  "data": {
   "shadows": "sympy.cosh"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.de_sitter.diag": {
  "data": {
   "shadows": "sympy.diag"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.de_sitter.exp": {
  "data": {
   "shadows": "sympy.exp"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.de_sitter.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.de_sitter.sinh": {
  "data": {
   "shadows": "sympy.sinh"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.de_sitter.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.ernst": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.predefined.ernst.Ernst": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.diag",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.ernst.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.metric.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.ernst.constants": {
  "data": {
   "shadows": "einsteinpy.symbolic.constants"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.ernst.diag": {
  "data": {
   "shadows": "sympy.diag"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.ernst.exp": {
  "data": {
   "shadows": "sympy.exp"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.ernst.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.ernst.sqrt": {
  "data": {
   "shadows": "sympy.sqrt"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.ernst.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.find": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.predefined.find.find": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "dir",
    "einsteinpy.symbolic.predefined.find.importlib"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.find.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.godel": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.predefined.godel.Godel": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.Rational",
    "sympy.diag",
    "sympy.exp",
    "sympy.sqrt",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.godel.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.metric.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.godel.Rational": {
  "data": {
   "shadows": "sympy.Rational"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.godel.diag": {
  "data": {
   "shadows": "sympy.diag"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.godel.exp": {
  "data": {
   "shadows": "sympy.exp"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.godel.sqrt": {
  "data": {
   "shadows": "sympy.sqrt"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.godel.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.janis_newman_winicour": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.predefined.janis_newman_winicour.JanisNewmanWinicour": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "einsteinpy.symbolic.constants.G",
    "einsteinpy.symbolic.constants.c",
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.diag",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.janis_newman_winicour.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.metric.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.janis_newman_winicour.constants": {
  "data": {
   "shadows": "einsteinpy.symbolic.constants"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.janis_newman_winicour.diag": {
  "data": {
   "shadows": "sympy.diag"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.janis_newman_winicour.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.janis_newman_winicour.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.minkowski": {
  "data": {
   "symbols_in_volume": [
    "einsteinpy.symbolic.predefined.minkowski.MinkowskiCartesian"
   ]
  },
  "type": "module"
 },
 "einsteinpy.symbolic.predefined.minkowski.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.metric.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.minkowski.Minkowski": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "einsteinpy.symbolic.predefined.minkowski.MinkowskiCartesian": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "einsteinpy.symbolic.constants.c",
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.diag",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.minkowski.MinkowskiPolar": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "einsteinpy.symbolic.constants.c",
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.diag",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.minkowski.constants": {
  "data": {
   "shadows": "einsteinpy.symbolic.constants"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.minkowski.diag": {
  "data": {
   "shadows": "sympy.diag"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.minkowski.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.minkowski.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.vacuum_solutions": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.predefined.vacuum_solutions.Kerr": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "einsteinpy.symbolic.constants.c",
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.cos",
    "sympy.diag",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.vacuum_solutions.KerrNewman": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "einsteinpy.symbolic.constants.G",
    "einsteinpy.symbolic.constants.c",
    "einsteinpy.symbolic.constants.eps_0",
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.cos",
    "sympy.diag",
    "sympy.pi",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.vacuum_solutions.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.metric.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.vacuum_solutions.ReissnerNordstorm": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "einsteinpy.symbolic.constants.G",
    "einsteinpy.symbolic.constants.c",
    "einsteinpy.symbolic.constants.eps_0",
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.diag",
    "sympy.pi",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.vacuum_solutions.Schwarzschild": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "einsteinpy.symbolic.constants.c",
    "einsteinpy.symbolic.metric.MetricTensor",
    "sympy.diag",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.predefined.vacuum_solutions.constants": {
  "data": {
   "shadows": "einsteinpy.symbolic.constants"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.vacuum_solutions.cos": {
  "data": {
   "shadows": "sympy.cos"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.vacuum_solutions.diag": {
  "data": {
   "shadows": "sympy.diag"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.vacuum_solutions.pi": {
  "data": {
   "shadows": "sympy.pi"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.vacuum_solutions.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.predefined.vacuum_solutions.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.ricci": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.ricci.BaseRelativityTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor.BaseRelativityTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.ricci.ChristoffelSymbols": {
  "data": {
   "shadows": "einsteinpy.symbolic.christoffel.ChristoffelSymbols"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.ricci.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.metric.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.ricci.RicciScalar": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "einsteinpy.symbolic.tensor.BaseRelativityTensor"
   ]
  },
  "type": "class"
 },
 "einsteinpy.symbolic.ricci.RicciScalar.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "einsteinpy.symbolic.ricci.RicciScalar",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.ricci.RicciScalar.expr": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.ricci.RicciScalar.from_christoffels": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "classmethod",
    "cls.from_riemann",
    "einsteinpy.symbolic.riemann.RiemannCurvatureTensor.from_christoffels"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.ricci.RicciScalar.from_metric": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "classmethod",
    "cls.from_christoffels",
    "einsteinpy.symbolic.christoffel.ChristoffelSymbols.from_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.ricci.RicciScalar.from_riccitensor": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "sympy.tensorcontraction"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.ricci.RicciScalar.from_riemann": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "classmethod",
    "cls.from_riccitensor",
    "einsteinpy.symbolic.ricci.RicciTensor"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.ricci.RicciTensor": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "einsteinpy.symbolic.tensor.BaseRelativityTensor"
   ]
  },
  "type": "class"
 },
 "einsteinpy.symbolic.ricci.RicciTensor.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.ricci.RicciTensor",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.ricci.RicciTensor.change_config": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "Exception",
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.ricci.RicciTensor",
    "einsteinpy.symbolic.tensor._change_config"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.ricci.RicciTensor.from_christoffels": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "classmethod",
    "cls.from_riemann",
    "einsteinpy.symbolic.riemann.RiemannCurvatureTensor.from_christoffels"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.ricci.RicciTensor.from_metric": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "classmethod",
    "cls.from_christoffels",
    "einsteinpy.symbolic.christoffel.ChristoffelSymbols.from_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.ricci.RicciTensor.from_riemann": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "einsteinpy.symbolic.ricci.sympy"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.ricci.RicciTensor.lorentz_transform": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.ricci.RicciTensor",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.ricci.RiemannCurvatureTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.riemann.RiemannCurvatureTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.ricci._change_config": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor._change_config"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.ricci._change_name": {
  "data": {
   "shadows": "einsteinpy.symbolic.helpers._change_name"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.ricci.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.ricci.tensorcontraction": {
  "data": {
   "shadows": "sympy.tensorcontraction"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.ricci.tensorproduct": {
  "data": {
   "shadows": "sympy.tensorproduct"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.riemann": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.riemann.BaseRelativityTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor.BaseRelativityTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.riemann.ChristoffelSymbols": {
  "data": {
   "shadows": "einsteinpy.symbolic.christoffel.ChristoffelSymbols"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.riemann.RiemannCurvatureTensor": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "einsteinpy.symbolic.tensor.BaseRelativityTensor"
   ]
  },
  "type": "class"
 },
 "einsteinpy.symbolic.riemann.RiemannCurvatureTensor.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.riemann.RiemannCurvatureTensor",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.riemann.RiemannCurvatureTensor.change_config": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "Exception",
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.riemann.RiemannCurvatureTensor",
    "einsteinpy.symbolic.tensor._change_config"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.riemann.RiemannCurvatureTensor.from_christoffels": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "einsteinpy.symbolic.riemann.sympy",
    "int",
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.riemann.RiemannCurvatureTensor.from_metric": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "classmethod",
    "cls.from_christoffels",
    "einsteinpy.symbolic.christoffel.ChristoffelSymbols.from_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.riemann.RiemannCurvatureTensor.lorentz_transform": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.riemann.RiemannCurvatureTensor",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.riemann._change_config": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor._change_config"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.riemann._change_name": {
  "data": {
   "shadows": "einsteinpy.symbolic.helpers._change_name"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.riemann.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.riemann.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.schouten": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.schouten.BaseRelativityTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor.BaseRelativityTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.schouten.RicciScalar": {
  "data": {
   "shadows": "einsteinpy.symbolic.ricci.RicciScalar"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.schouten.RicciTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.ricci.RicciTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.schouten.RiemannCurvatureTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.riemann.RiemannCurvatureTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.schouten.SchoutenTensor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "einsteinpy.symbolic.tensor.BaseRelativityTensor"
   ]
  },
  "type": "class"
 },
 "einsteinpy.symbolic.schouten.SchoutenTensor.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.schouten.SchoutenTensor",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.schouten.SchoutenTensor.change_config": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Exception",
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.schouten.SchoutenTensor",
    "einsteinpy.symbolic.tensor._change_config"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.schouten.SchoutenTensor.from_metric": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "einsteinpy.symbolic.ricci.RicciScalar.from_riccitensor",
    "einsteinpy.symbolic.ricci.RicciTensor.from_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.schouten.SchoutenTensor.lorentz_transform": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.schouten.SchoutenTensor",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.schouten._change_config": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor._change_config"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.schouten._change_name": {
  "data": {
   "shadows": "einsteinpy.symbolic.helpers._change_name"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.stress_energy_momentum": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.stress_energy_momentum.BaseRelativityTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor.BaseRelativityTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.stress_energy_momentum.Cosmo_Const": {
  "data": {
   "shadows": "einsteinpy.symbolic.constants.Cosmo_Const"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.stress_energy_momentum.EinsteinTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.einstein.EinsteinTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.stress_energy_momentum.G": {
  "data": {
   "shadows": "einsteinpy.symbolic.constants.G"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.stress_energy_momentum.StressEnergyMomentumTensor": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "einsteinpy.symbolic.tensor.BaseRelativityTensor"
   ]
  },
  "type": "class"
 },
 "einsteinpy.symbolic.stress_energy_momentum.StressEnergyMomentumTensor.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.stress_energy_momentum.StressEnergyMomentumTensor",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.stress_energy_momentum.StressEnergyMomentumTensor.change_config": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Exception",
    "einsteinpy.symbolic.einstein.EinsteinTensor",
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.tensor._change_config"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.stress_energy_momentum.StressEnergyMomentumTensor.from_metric": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "einsteinpy.symbolic.constants.Cosmo_Const",
    "einsteinpy.symbolic.constants.G",
    "einsteinpy.symbolic.constants.c",
    "einsteinpy.symbolic.einstein.EinsteinTensor.from_metric",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.stress_energy_momentum.StressEnergyMomentumTensor.lorentz_transform": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.stress_energy_momentum.StressEnergyMomentumTensor",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.stress_energy_momentum._change_config": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor._change_config"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.stress_energy_momentum._change_name": {
  "data": {
   "shadows": "einsteinpy.symbolic.helpers._change_name"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.stress_energy_momentum.c": {
  "data": {
   "shadows": "einsteinpy.symbolic.constants.c"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.stress_energy_momentum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.tensor": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.tensor.AppliedUndef": {
  "data": {
   "shadows": "sympy.core.function.AppliedUndef"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.tensor.BaseRelativityTensor": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "einsteinpy.symbolic.tensor.Tensor"
   ]
  },
  "type": "class"
 },
 "einsteinpy.symbolic.tensor.BaseRelativityTensor.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "einsteinpy.symbolic.tensor.BaseRelativityTensor",
    "isinstance",
    "len",
    "list",
    "set",
    "super",
    "sympy.core.function.AppliedUndef",
    "sympy.core.function.UndefinedFunction",
    "tuple"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.BaseRelativityTensor.lorentz_transform": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.tensor.BaseRelativityTensor",
    "einsteinpy.symbolic.tensor.sympy",
    "len",
    "list",
    "range",
    "sympy.simplify",
    "sympy.tensorcontraction",
    "sympy.tensorproduct"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.BaseRelativityTensor.parent_metric": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.BaseRelativityTensor.symbols": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.BaseRelativityTensor.tensor_lambdify": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "einsteinpy.symbolic.tensor.sympy",
    "len",
    "numpy",
    "tuple"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.Expr": {
  "data": {
   "shadows": "sympy.core.expr.Expr"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.tensor.Tensor": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "einsteinpy.symbolic.tensor.Tensor.__getitem__": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.Tensor.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "einsteinpy.symbolic.tensor._config_checker",
    "einsteinpy.symbolic.tensor.sympy",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "numpy.number",
    "sympy.core.expr.Expr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.Tensor.__repr__": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.Tensor.__str__": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.Tensor.config": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.Tensor.order": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.Tensor.simplify": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "einsteinpy.symbolic.helpers.simplify_sympy_array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.Tensor.subs": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "einsteinpy.symbolic.tensor.Tensor"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.Tensor.tensor": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.UndefinedFunction": {
  "data": {
   "shadows": "sympy.core.function.UndefinedFunction"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.tensor._change_config": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "chain_config_change",
    "einsteinpy.symbolic.tensor._config_checker",
    "len"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor._change_config.chain_config_change": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "einsteinpy.symbolic.tensor._difference_list",
    "einsteinpy.symbolic.tensor.sympy",
    "enumerate",
    "len",
    "list",
    "range",
    "sympy.simplify",
    "sympy.tensorcontraction",
    "sympy.tensorproduct"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor._change_name": {
  "data": {
   "shadows": "einsteinpy.symbolic.helpers._change_name"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.tensor._config_checker": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor._difference_list": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.tensor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.tensor.simplify": {
  "data": {
   "shadows": "sympy.simplify"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.tensor.simplify_sympy_array": {
  "data": {
   "shadows": "einsteinpy.symbolic.helpers.simplify_sympy_array"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.tensor.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.tensor.sympy_to_np_array": {
  "data": {
   "shadows": "einsteinpy.symbolic.helpers.sympy_to_np_array"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.tensor.tensorcontraction": {
  "data": {
   "shadows": "sympy.tensorcontraction"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.tensor.tensorproduct": {
  "data": {
   "shadows": "sympy.tensorproduct"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.vector": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.vector.BaseRelativityTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor.BaseRelativityTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.vector.GenericVector": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "einsteinpy.symbolic.tensor.BaseRelativityTensor"
   ]
  },
  "type": "class"
 },
 "einsteinpy.symbolic.vector.GenericVector.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.vector.GenericVector",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.vector.GenericVector.change_config": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Exception",
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.tensor._change_config",
    "einsteinpy.symbolic.vector.GenericVector"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.vector.GenericVector.lorentz_transform": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.vector.GenericVector",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.vector._change_config": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor._change_config"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.vector._change_name": {
  "data": {
   "shadows": "einsteinpy.symbolic.helpers._change_name"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.weyl": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.symbolic.weyl.BaseRelativityTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor.BaseRelativityTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.weyl.RicciScalar": {
  "data": {
   "shadows": "einsteinpy.symbolic.ricci.RicciScalar"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.weyl.RicciTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.ricci.RicciTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.weyl.RiemannCurvatureTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.riemann.RiemannCurvatureTensor"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.weyl.WeylTensor": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "einsteinpy.symbolic.tensor.BaseRelativityTensor"
   ]
  },
  "type": "class"
 },
 "einsteinpy.symbolic.weyl.WeylTensor.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.weyl.WeylTensor",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.weyl.WeylTensor.change_config": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "Exception",
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.tensor._change_config",
    "einsteinpy.symbolic.weyl.WeylTensor"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.weyl.WeylTensor.from_metric": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "einsteinpy.symbolic.ricci.RicciScalar.from_riccitensor",
    "einsteinpy.symbolic.ricci.RicciTensor.from_riemann",
    "einsteinpy.symbolic.riemann.RiemannCurvatureTensor.from_metric",
    "einsteinpy.symbolic.weyl.sympy",
    "int",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.weyl.WeylTensor.lorentz_transform": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.symbolic.weyl.WeylTensor",
    "super"
   ]
  },
  "type": "function"
 },
 "einsteinpy.symbolic.weyl._change_config": {
  "data": {
   "shadows": "einsteinpy.symbolic.tensor._change_config"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.weyl._change_name": {
  "data": {
   "shadows": "einsteinpy.symbolic.helpers._change_name"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.weyl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.symbolic.weyl.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.testing": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.testing.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "einsteinpy.testing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.testing.test": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "einsteinpy.testing.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_bodies": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_bodies.Body": {
  "data": {
   "shadows": "einsteinpy.bodies.Body"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.CartesianDifferential": {
  "data": {
   "shadows": "einsteinpy.coordinates.CartesianDifferential"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.Earth": {
  "data": {
   "shadows": "einsteinpy.bodies.Earth"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.Jupiter": {
  "data": {
   "shadows": "einsteinpy.bodies.Jupiter"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.Mars": {
  "data": {
   "shadows": "einsteinpy.bodies.Mars"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.Mercury": {
  "data": {
   "shadows": "einsteinpy.bodies.Mercury"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.Moon": {
  "data": {
   "shadows": "einsteinpy.bodies.Moon"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.Neptune": {
  "data": {
   "shadows": "einsteinpy.bodies.Neptune"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.Pluto": {
  "data": {
   "shadows": "einsteinpy.bodies.Pluto"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.Saturn": {
  "data": {
   "shadows": "einsteinpy.bodies.Saturn"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.SphericalDifferential": {
  "data": {
   "shadows": "einsteinpy.coordinates.SphericalDifferential"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.Sun": {
  "data": {
   "shadows": "einsteinpy.bodies.Sun"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.Uranus": {
  "data": {
   "shadows": "einsteinpy.bodies.Uranus"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.Venus": {
  "data": {
   "shadows": "einsteinpy.bodies.Venus"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_bodies.test_body_repr_return": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.m",
    "einsteinpy.bodies.Body"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_bodies.test_body_str_return": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.m",
    "einsteinpy.bodies.Body"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_bodies.test_differentials": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.bodies.Body",
    "einsteinpy.bodies.Sun",
    "einsteinpy.coordinates.CartesianDifferential",
    "einsteinpy.coordinates.SphericalDifferential",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_bodies.test_predefined_bodies_base_properties": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "einsteinpy.bodies.Earth",
    "einsteinpy.bodies.Jupiter",
    "einsteinpy.bodies.Mars",
    "einsteinpy.bodies.Mercury",
    "einsteinpy.bodies.Moon",
    "einsteinpy.bodies.Neptune",
    "einsteinpy.bodies.Pluto",
    "einsteinpy.bodies.Saturn",
    "einsteinpy.bodies.Sun",
    "einsteinpy.bodies.Uranus",
    "einsteinpy.bodies.Venus",
    "einsteinpy.tests.test_bodies.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_bodies.test_predefined_bodies_extra": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "astropy.units.C",
    "einsteinpy.bodies.Earth",
    "einsteinpy.bodies.Jupiter",
    "einsteinpy.bodies.Mars",
    "einsteinpy.bodies.Mercury",
    "einsteinpy.bodies.Moon",
    "einsteinpy.bodies.Neptune",
    "einsteinpy.bodies.Pluto",
    "einsteinpy.bodies.Saturn",
    "einsteinpy.bodies.Sun",
    "einsteinpy.bodies.Uranus",
    "einsteinpy.bodies.Venus",
    "einsteinpy.tests.test_bodies.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_bodies.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_constant": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_constant.Cosmo_Const": {
  "data": {
   "shadows": "einsteinpy.constant.Cosmo_Const"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_constant.Cosmo_Const_base": {
  "data": {
   "shadows": "einsteinpy.constant.Cosmo_Const_base"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_constant.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_constant.constants": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_constant.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_constant.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_constant.test_Cosmo_Const_has_correct_metadata": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "einsteinpy.constant.Cosmo_Const_base"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_constant.test_Cosmo_Const_returns_correct_value_units": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "astropy.units.core.CompositeUnit",
    "astropy.units.quantity.Quantity",
    "einsteinpy.constant.Cosmo_Const",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_constant.test_Cosmo_const_is_astropy_constant_with_unit_and_uncert": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "astropy.constants.Constant",
    "astropy.units.Unit",
    "einsteinpy.constant.Cosmo_Const_base",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_constant.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_conversions": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.BoyerLindquistConversion": {
  "data": {
   "shadows": "einsteinpy.coordinates.BoyerLindquistConversion"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.CartesianConversion": {
  "data": {
   "shadows": "einsteinpy.coordinates.CartesianConversion"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.SphericalConversion": {
  "data": {
   "shadows": "einsteinpy.coordinates.SphericalConversion"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.bl_coords": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "einsteinpy.coordinates.BoyerLindquistConversion",
    "einsteinpy.tests.test_coordinates.test_conversions.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.cartesian_coords": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "einsteinpy.coordinates.CartesianConversion",
    "einsteinpy.tests.test_coordinates.test_conversions.pytest",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.spherical_coords": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "einsteinpy.coordinates.SphericalConversion",
    "einsteinpy.tests.test_coordinates.test_conversions.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.strip_velocities": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "einsteinpy.coordinates.BoyerLindquistConversion",
    "einsteinpy.coordinates.CartesianConversion",
    "einsteinpy.coordinates.SphericalConversion",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.test_BoyerLindquistToCartesianDifferential": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_conversions.bl_coords",
    "einsteinpy.tests.test_coordinates.test_conversions.cartesian_coords",
    "einsteinpy.tests.test_coordinates.test_conversions.strip_velocities",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.test_BoyerLindquistToSphericalDifferential": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_conversions.bl_coords",
    "einsteinpy.tests.test_coordinates.test_conversions.spherical_coords",
    "einsteinpy.tests.test_coordinates.test_conversions.strip_velocities",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.test_CartesianToBoyerLindquistDifferential": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_conversions.bl_coords",
    "einsteinpy.tests.test_coordinates.test_conversions.cartesian_coords",
    "einsteinpy.tests.test_coordinates.test_conversions.strip_velocities",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.test_CartesianToSpherical": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_conversions.cartesian_coords",
    "einsteinpy.tests.test_coordinates.test_conversions.spherical_coords",
    "einsteinpy.tests.test_coordinates.test_conversions.strip_velocities",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.test_SphericalToBoyerLindquistDifferential": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_conversions.bl_coords",
    "einsteinpy.tests.test_coordinates.test_conversions.spherical_coords",
    "einsteinpy.tests.test_coordinates.test_conversions.strip_velocities",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.test_SphericalToCartesianDifferential": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_conversions.cartesian_coords",
    "einsteinpy.tests.test_coordinates.test_conversions.spherical_coords",
    "einsteinpy.tests.test_coordinates.test_conversions.strip_velocities",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.test_cycle_BLCartesianDifferential": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "einsteinpy.coordinates.CartesianConversion",
    "einsteinpy.tests.test_coordinates.test_conversions.bl_coords",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.test_cycle_BLSphericalDifferential": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "einsteinpy.coordinates.SphericalConversion",
    "einsteinpy.tests.test_coordinates.test_conversions.bl_coords",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_conversions.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.BoyerLindquist": {
  "data": {
   "shadows": "einsteinpy.coordinates.BoyerLindquist"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.Cartesian": {
  "data": {
   "shadows": "einsteinpy.coordinates.Cartesian"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.Spherical": {
  "data": {
   "shadows": "einsteinpy.coordinates.Spherical"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.boyerlindquist": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.units.cm",
    "astropy.units.km",
    "astropy.units.rad",
    "einsteinpy.coordinates.BoyerLindquist",
    "einsteinpy.tests.test_coordinates.test_coord_transform.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.cartesian": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "astropy.units.cm",
    "astropy.units.km",
    "astropy.units.m",
    "einsteinpy.coordinates.Cartesian",
    "einsteinpy.tests.test_coordinates.test_coord_transform.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.spherical": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.units.km",
    "astropy.units.rad",
    "einsteinpy.coordinates.Spherical",
    "einsteinpy.tests.test_coordinates.test_coord_transform.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.test_BoyerLindquistToCartesian": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_coord_transform.boyerlindquist",
    "einsteinpy.tests.test_coordinates.test_coord_transform.cartesian",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.test_BoyerLindquistToSpherical": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_coord_transform.boyerlindquist",
    "einsteinpy.tests.test_coordinates.test_coord_transform.spherical",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.test_CartesianToBoyerLindquist": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_coord_transform.boyerlindquist",
    "einsteinpy.tests.test_coordinates.test_coord_transform.cartesian",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.test_CartesianToSpherical": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_coord_transform.cartesian",
    "einsteinpy.tests.test_coordinates.test_coord_transform.spherical",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.test_SphericalToBoyerLindquist": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_coord_transform.boyerlindquist",
    "einsteinpy.tests.test_coordinates.test_coord_transform.spherical",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.test_SphericalToCartesian": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_coord_transform.cartesian",
    "einsteinpy.tests.test_coordinates.test_coord_transform.spherical",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.test_cartesian_dot": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "astropy.units.km",
    "astropy.units.km.si.value",
    "einsteinpy.coordinates.Cartesian",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.test_cartesian_norm": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "astropy.units.km",
    "astropy.units.km.si.value",
    "einsteinpy.coordinates.Cartesian",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.test_coordinate_subscripting": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_coord_transform.boyerlindquist",
    "einsteinpy.tests.test_coordinates.test_coord_transform.cartesian",
    "einsteinpy.tests.test_coordinates.test_coord_transform.spherical"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.test_cycle_BLSpherical": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "astropy.units.deg",
    "astropy.units.m",
    "astropy.units.rad",
    "einsteinpy.coordinates.BoyerLindquist",
    "einsteinpy.tests.test_coordinates.test_coord_transform.pytest",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.test_cycle_CartesianBL": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "astropy.units.cm",
    "astropy.units.km",
    "astropy.units.m",
    "einsteinpy.coordinates.Cartesian",
    "einsteinpy.tests.test_coordinates.test_coord_transform.pytest",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.test_print_core_objects": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_coord_transform.boyerlindquist",
    "einsteinpy.tests.test_coordinates.test_coord_transform.cartesian",
    "einsteinpy.tests.test_coordinates.test_coord_transform.spherical",
    "io.StringIO",
    "print",
    "str",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_coord_transform.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.bl_differential": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "astropy.units.km",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.coordinates.BoyerLindquistDifferential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.bl_differential2": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "astropy.units.deg",
    "astropy.units.km",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.coordinates.BoyerLindquistDifferential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.cartesian_differential": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "astropy.units.km",
    "astropy.units.s",
    "einsteinpy.coordinates.CartesianDifferential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.pytest",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.coordinates": {
  "data": {
   "shadows": "einsteinpy.coordinates"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.spherical_differential": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.units.km",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.coordinates.SphericalDifferential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.test_BoyerLindquistToCartesianDifferential": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_velocity_transform.bl_differential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.cartesian_differential",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.test_BoyerLindquistToSphericalDifferential": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_velocity_transform.bl_differential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.spherical_differential",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.test_CartesianToBoyerLindquistDifferential": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_velocity_transform.bl_differential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.cartesian_differential",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.test_CartesianToSphericalDifferential": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_velocity_transform.cartesian_differential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.spherical_differential",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.test_SphericalToBoyerLindquistDifferential": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_velocity_transform.bl_differential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.spherical_differential",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.test_SphericalToCartesianDifferential": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_velocity_transform.cartesian_differential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.spherical_differential",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.test_cycle_BLCartesianDifferential": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_velocity_transform.bl_differential2",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.test_cycle_BLSphericalDifferential": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_velocity_transform.bl_differential2",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.test_print_core_objects": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_velocity_transform.bl_differential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.cartesian_differential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.spherical_differential",
    "io.StringIO",
    "print",
    "str",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.test_velocities": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_velocity_transform.bl_differential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.cartesian_differential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.spherical_differential",
    "with_numpy_array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.test_velocities.with_numpy_array": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.test_velocities2": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "einsteinpy.tests.test_coordinates.test_velocity_transform.bl_differential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.cartesian_differential",
    "einsteinpy.tests.test_coordinates.test_velocity_transform.spherical_differential"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_coordinates.test_velocity_transform.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_examples": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_examples.Body": {
  "data": {
   "shadows": "einsteinpy.bodies.Body"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_examples.Geodesic": {
  "data": {
   "shadows": "einsteinpy.geodesic.Geodesic"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_examples.Schwarzschild": {
  "data": {
   "shadows": "einsteinpy.metric.Schwarzschild"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_examples.SphericalDifferential": {
  "data": {
   "shadows": "einsteinpy.coordinates.SphericalDifferential"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_examples.perihelion": {
  "data": {
   "shadows": "einsteinpy.examples.perihelion"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_examples.test_perihelion_works": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "einsteinpy.bodies.Body",
    "einsteinpy.examples.perihelion",
    "einsteinpy.geodesic.Geodesic",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_examples.test_perihelion_works_2": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "einsteinpy.coordinates.SphericalDifferential",
    "einsteinpy.examples.perihelion",
    "einsteinpy.metric.Schwarzschild",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_geodesics": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_geodesics.Body": {
  "data": {
   "shadows": "einsteinpy.bodies.Body"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_geodesics.Geodesic": {
  "data": {
   "shadows": "einsteinpy.geodesic.Geodesic"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_geodesics.SphericalDifferential": {
  "data": {
   "shadows": "einsteinpy.coordinates.SphericalDifferential"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_geodesics.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_geodesics.dummy_data": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.bodies.Body",
    "einsteinpy.coordinates.SphericalDifferential",
    "einsteinpy.tests.test_geodesics.pytest",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_geodesics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_geodesics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_geodesics.test_Geodesics_conserves_the_attractor": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "einsteinpy.geodesic.Geodesic",
    "einsteinpy.tests.test_geodesics.dummy_data"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_geodesics.test_Geodesics_has_trajectory": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "einsteinpy.geodesic.Geodesic",
    "einsteinpy.tests.test_geodesics.dummy_data",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_geodesics.test_Geodesics_repr_returns_members": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "einsteinpy.geodesic.Geodesic",
    "einsteinpy.tests.test_geodesics.dummy_data"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_geodesics.test_Geodesics_str_returns_members": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "einsteinpy.geodesic.Geodesic",
    "einsteinpy.tests.test_geodesics.dummy_data"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_geodesics.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_hypersurface.test_schwarzschildembedding": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_hypersurface.test_schwarzschildembedding.SchwarzschildEmbedding": {
  "data": {
   "shadows": "einsteinpy.hypersurface.SchwarzschildEmbedding"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_hypersurface.test_schwarzschildembedding.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_hypersurface.test_schwarzschildembedding.test_get_values": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.units.g",
    "einsteinpy.hypersurface.SchwarzschildEmbedding",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_hypersurface.test_schwarzschildembedding.test_get_values_surface": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "astropy.units.g",
    "einsteinpy.hypersurface.SchwarzschildEmbedding",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_hypersurface.test_schwarzschildembedding.test_gradient": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "astropy.units.kg",
    "einsteinpy.hypersurface.SchwarzschildEmbedding",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_hypersurface.test_schwarzschildembedding.test_radial_coord": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.units.kg",
    "einsteinpy.hypersurface.SchwarzschildEmbedding",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_hypersurface.test_schwarzschildembedding.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_ijit.test_ijit_without_numba": {
  "data": {
   "symbols_in_volume": [
    "importlib.reload"
   ]
  },
  "type": "module"
 },
 "einsteinpy.tests.test_ijit.test_ijit_without_numba.custom_jit": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "einsteinpy.tests.test_ijit.test_ijit_without_numba.einsteinpy.ijit": {
  "data": {
   "shadows": "einsteinpy.ijit"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_ijit.test_ijit_without_numba.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_ijit.test_ijit_without_numba.reload": {
  "data": {
   "shadows": "importlib.reload"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_ijit.test_ijit_without_numba.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_ijit.test_ijit_without_numba.test": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "einsteinpy.tests.test_ijit.test_ijit_without_numba.sys",
    "einsteinpy.tests.test_ijit.test_ijit_without_numba.types",
    "einsteinpy.tests.test_ijit.test_ijit_without_numba.warnings",
    "importlib.reload",
    "isinstance",
    "len",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_ijit.test_ijit_without_numba.test._simple_func": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "einsteinpy.tests.test_ijit.test_ijit_without_numba.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_ijit.test_ijit_without_numba.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_integrators.test_runge_kutta": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_integrators.test_runge_kutta.integrators": {
  "data": {
   "shadows": "einsteinpy.integrators"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_integrators.test_runge_kutta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_integrators.test_runge_kutta.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_integrators.test_runge_kutta.test_RK45_RuntimeWarning": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "RuntimeWarning",
    "einsteinpy.integrators.RK45",
    "einsteinpy.tests.test_integrators.test_runge_kutta.warnings",
    "issubclass",
    "len",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_integrators.test_runge_kutta.test_RK45_RuntimeWarning.fun": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "einsteinpy.tests.test_integrators.test_runge_kutta.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerr": {
  "data": {
   "symbols_in_volume": [
    "einsteinpy.constant.c.value"
   ]
  },
  "type": "module"
 },
 "einsteinpy.tests.test_metric.test_kerr.BoyerLindquistDifferential": {
  "data": {
   "shadows": "einsteinpy.coordinates.BoyerLindquistDifferential"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerr.CartesianDifferential": {
  "data": {
   "shadows": "einsteinpy.coordinates.CartesianDifferential"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerr.Kerr": {
  "data": {
   "shadows": "einsteinpy.metric.Kerr"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerr._c": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "einsteinpy.tests.test_metric.test_kerr.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerr.constant": {
  "data": {
   "shadows": "einsteinpy.constant"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerr.kerr_utils": {
  "data": {
   "shadows": "einsteinpy.utils.kerr_utils"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerr.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerr.schwarzschild_radius_dimensionless": {
  "data": {
   "shadows": "einsteinpy.utils.schwarzschild_radius_dimensionless"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerr.test_calculate_trajectory": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.units.g",
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.coordinates.BoyerLindquistDifferential",
    "einsteinpy.metric.Kerr.from_coords",
    "einsteinpy.tests.test_metric.test_kerr._c",
    "einsteinpy.tests.test_metric.test_kerr.pytest",
    "einsteinpy.utils.kerr_utils.metric",
    "einsteinpy.utils.schwarzschild_radius_dimensionless",
    "float",
    "list",
    "numpy.array",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_kerr.test_calculate_trajectory3": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "astropy.units.h",
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.m.to",
    "astropy.units.s",
    "astropy.units.s.to",
    "astropy.units.year.to",
    "einsteinpy.coordinates.CartesianDifferential",
    "einsteinpy.metric.Kerr.from_coords",
    "numpy.argmax",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_kerr.test_calculate_trajectory_iterator": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.coordinates.BoyerLindquistDifferential",
    "einsteinpy.metric.Kerr.from_coords",
    "einsteinpy.tests.test_metric.test_kerr._c",
    "einsteinpy.tests.test_metric.test_kerr.pytest",
    "list",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_kerr.test_calculate_trajectory_iterator_RuntimeWarning": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.coordinates.BoyerLindquistDifferential",
    "einsteinpy.metric.Kerr.from_coords",
    "einsteinpy.tests.test_metric.test_kerr.warnings",
    "len",
    "numpy.pi",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_kerr.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerr.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman": {
  "data": {
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.constant.coulombs_const.value"
   ]
  },
  "type": "module"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.BoyerLindquistDifferential": {
  "data": {
   "shadows": "einsteinpy.coordinates.BoyerLindquistDifferential"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.CartesianDifferential": {
  "data": {
   "shadows": "einsteinpy.coordinates.CartesianDifferential"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.KerrNewman": {
  "data": {
   "shadows": "einsteinpy.metric.KerrNewman"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman._G": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman._c": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman._cc": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.constant": {
  "data": {
   "shadows": "einsteinpy.constant"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.kerrnewman_utils": {
  "data": {
   "shadows": "einsteinpy.utils.kerrnewman_utils"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.schwarzschild_radius": {
  "data": {
   "shadows": "einsteinpy.utils.schwarzschild_radius"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.test_calculate_trajectory0": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.units.C",
    "astropy.units.h",
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.m",
    "astropy.units.m.to",
    "astropy.units.s",
    "astropy.units.s.to",
    "astropy.units.year.to",
    "einsteinpy.coordinates.CartesianDifferential",
    "einsteinpy.metric.KerrNewman.from_coords",
    "numpy.argmax",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.test_calculate_trajectory1": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.units.C",
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.coordinates.BoyerLindquistDifferential",
    "einsteinpy.metric.KerrNewman.from_coords",
    "einsteinpy.tests.test_metric.test_kerrnewman._G",
    "einsteinpy.tests.test_metric.test_kerrnewman._cc",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.test_calculate_trajectory_iterator_RuntimeWarning": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "astropy.units.C",
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.coordinates.BoyerLindquistDifferential",
    "einsteinpy.metric.KerrNewman.from_coords",
    "einsteinpy.tests.test_metric.test_kerrnewman.warnings",
    "len",
    "numpy.pi",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.test_compare_calculate_trajectory_iterator_bl": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.coordinates.BoyerLindquistDifferential",
    "einsteinpy.metric.KerrNewman.from_coords",
    "einsteinpy.tests.test_metric.test_kerrnewman.test_input",
    "list",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.test_compare_calculate_trajectory_iterator_cartesians": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.s",
    "einsteinpy.coordinates.CartesianDifferential",
    "einsteinpy.metric.KerrNewman.from_coords",
    "einsteinpy.tests.test_metric.test_kerrnewman.test_input",
    "list",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.test_input": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "astropy.units.C",
    "astropy.units.g",
    "astropy.units.m",
    "einsteinpy.tests.test_metric.test_kerrnewman.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_kerrnewman.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild": {
  "data": {
   "symbols_in_volume": [
    "einsteinpy.constant.c.value"
   ]
  },
  "type": "module"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.CartesianDifferential": {
  "data": {
   "shadows": "einsteinpy.coordinates.CartesianDifferential"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.Schwarzschild": {
  "data": {
   "shadows": "einsteinpy.metric.Schwarzschild"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.SphericalDifferential": {
  "data": {
   "shadows": "einsteinpy.coordinates.SphericalDifferential"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild._c": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.constant": {
  "data": {
   "shadows": "einsteinpy.constant"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.schwarzschild_radius": {
  "data": {
   "shadows": "einsteinpy.utils.schwarzschild_radius"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.schwarzschild_utils": {
  "data": {
   "shadows": "einsteinpy.utils.schwarzschild_utils"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.test_calculate_trajectory": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.units.deg",
    "astropy.units.g",
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.coordinates.SphericalDifferential",
    "einsteinpy.metric.Schwarzschild.from_coords",
    "einsteinpy.tests.test_metric.test_schwarzschild._c",
    "einsteinpy.tests.test_metric.test_schwarzschild.pytest",
    "einsteinpy.utils.schwarzschild_utils.metric",
    "float",
    "list",
    "numpy.array",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.test_calculate_trajectory2": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.m.to",
    "astropy.units.rad",
    "astropy.units.s",
    "astropy.units.s.to",
    "astropy.units.year.to",
    "einsteinpy.coordinates.SphericalDifferential",
    "einsteinpy.metric.Schwarzschild.from_coords",
    "numpy.argmax",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.test_calculate_trajectory3": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "astropy.units.h",
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.m.to",
    "astropy.units.s",
    "astropy.units.s.to",
    "astropy.units.year.to",
    "einsteinpy.coordinates.CartesianDifferential",
    "einsteinpy.metric.Schwarzschild.from_coords",
    "numpy.argmax",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.test_calculate_trajectory_iterator": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.coordinates.SphericalDifferential",
    "einsteinpy.metric.Schwarzschild.from_coords",
    "einsteinpy.tests.test_metric.test_schwarzschild._c",
    "einsteinpy.tests.test_metric.test_schwarzschild.pytest",
    "list",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.test_calculate_trajectory_iterator_RuntimeWarning": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.coordinates.SphericalDifferential",
    "einsteinpy.metric.Schwarzschild.from_coords",
    "einsteinpy.tests.test_metric.test_schwarzschild.warnings",
    "len",
    "numpy.pi",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.test_calculate_trajectory_iterator_RuntimeWarning2": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.coordinates.SphericalDifferential",
    "einsteinpy.metric.Schwarzschild.from_coords",
    "einsteinpy.tests.test_metric.test_schwarzschild.warnings",
    "len",
    "numpy.pi",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_metric.test_schwarzschild.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_fractal": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_plotting.test_fractal.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_fractal.fractal": {
  "data": {
   "shadows": "einsteinpy.plotting.fractal"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_fractal.go": {
  "data": {
   "shadows": "plotly.graph_objects"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_fractal.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_fractal.test_fractal_draws_figure": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "einsteinpy.plotting.fractal"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_fractal.test_fractal_shows_figure": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "einsteinpy.plotting.fractal",
    "io.StringIO",
    "plotly.graph_objects.Figure",
    "unittest.mock.patch",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.Body": {
  "data": {
   "shadows": "einsteinpy.bodies.Body"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.Figure": {
  "data": {
   "shadows": "plotly.graph_objects.Figure"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.Geodesic": {
  "data": {
   "shadows": "einsteinpy.geodesic.Geodesic"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.InteractiveGeodesicPlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.InteractiveGeodesicPlotter"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.SphericalDifferential": {
  "data": {
   "shadows": "einsteinpy.coordinates.SphericalDifferential"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.dummy_data": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.bodies.Body",
    "einsteinpy.coordinates.SphericalDifferential",
    "einsteinpy.geodesic.Geodesic",
    "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.pytest",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.test_interactive_plotter_has_figure": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "einsteinpy.plotting.InteractiveGeodesicPlotter",
    "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.dummy_data",
    "isinstance",
    "plotly.graph_objects.Figure"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.test_plot_calls_draw_attractor_AutoScale": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "einsteinpy.plotting.InteractiveGeodesicPlotter",
    "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.dummy_data"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.test_plot_calls_draw_attractor_Manualscale": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "einsteinpy.plotting.InteractiveGeodesicPlotter",
    "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.dummy_data"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.test_plot_draws_fig": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "einsteinpy.plotting.InteractiveGeodesicPlotter",
    "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.dummy_data"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.test_save_saves_plot": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "einsteinpy.plotting.InteractiveGeodesicPlotter",
    "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.dummy_data",
    "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.os",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_interactive.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.Axes": {
  "data": {
   "shadows": "matplotlib.axes.Axes"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.Body": {
  "data": {
   "shadows": "einsteinpy.bodies.Body"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.Geodesic": {
  "data": {
   "shadows": "einsteinpy.geodesic.Geodesic"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.SphericalDifferential": {
  "data": {
   "shadows": "einsteinpy.coordinates.SphericalDifferential"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.StaticGeodesicPlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.StaticGeodesicPlotter"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.dummy_data": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.rad",
    "astropy.units.s",
    "einsteinpy.bodies.Body",
    "einsteinpy.coordinates.SphericalDifferential",
    "einsteinpy.geodesic.Geodesic",
    "einsteinpy.tests.test_plotting.test_geodesics.test_static.pytest",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.test_animate_creates_ani": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "einsteinpy.plotting.StaticGeodesicPlotter",
    "einsteinpy.tests.test_plotting.test_geodesics.test_static.dummy_data"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.test_plot_calls_draw_attractor_AutoScale": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "einsteinpy.plotting.StaticGeodesicPlotter",
    "einsteinpy.tests.test_plotting.test_geodesics.test_static.dummy_data"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.test_plot_calls_draw_attractor_Manualscale": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "einsteinpy.plotting.StaticGeodesicPlotter",
    "einsteinpy.tests.test_plotting.test_geodesics.test_static.dummy_data"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.test_plot_calls_plt_show": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "einsteinpy.plotting.StaticGeodesicPlotter",
    "einsteinpy.tests.test_plotting.test_geodesics.test_static.dummy_data",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.test_plot_in_3d": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "einsteinpy.plotting.StaticGeodesicPlotter",
    "einsteinpy.tests.test_plotting.test_geodesics.test_static.dummy_data",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.test_plot_save_saves_plot": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "einsteinpy.plotting.StaticGeodesicPlotter",
    "einsteinpy.tests.test_plotting.test_geodesics.test_static.dummy_data",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.test_set_scaling": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "einsteinpy.plotting.StaticGeodesicPlotter",
    "einsteinpy.tests.test_plotting.test_geodesics.test_static.dummy_data"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.test_staticgeodesicplotter_has_axes": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "einsteinpy.plotting.StaticGeodesicPlotter",
    "einsteinpy.tests.test_plotting.test_geodesics.test_static.dummy_data",
    "isinstance",
    "matplotlib.axes.Axes"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_geodesics.test_static.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_hypersurface": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_plotting.test_hypersurface.HypersurfacePlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.HypersurfacePlotter"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_hypersurface.SchwarzschildEmbedding": {
  "data": {
   "shadows": "einsteinpy.hypersurface.SchwarzschildEmbedding"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_hypersurface.dummy_data": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "astropy.units.kg",
    "einsteinpy.hypersurface.SchwarzschildEmbedding",
    "einsteinpy.tests.test_plotting.test_hypersurface.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_hypersurface.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_hypersurface.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_hypersurface.test_plot_calls_plt_show": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "einsteinpy.plotting.HypersurfacePlotter",
    "einsteinpy.tests.test_plotting.test_hypersurface.dummy_data",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_hypersurface.test_plot_works_with_different_plot_type": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "einsteinpy.plotting.HypersurfacePlotter",
    "einsteinpy.tests.test_plotting.test_hypersurface.dummy_data",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_hypersurface.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_rays.test_shadow": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_plotting.test_rays.test_shadow.Shadow": {
  "data": {
   "shadows": "einsteinpy.rays.Shadow"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_rays.test_shadow.ShadowPlotter": {
  "data": {
   "shadows": "einsteinpy.plotting.ShadowPlotter"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_rays.test_shadow.dummy_data": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.km",
    "einsteinpy.rays.Shadow",
    "einsteinpy.tests.test_plotting.test_rays.test_shadow.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_rays.test_shadow.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_rays.test_shadow.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_rays.test_shadow.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_plotting.test_rays.test_shadow.test_plot_calls_plt_plot": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "einsteinpy.plotting.ShadowPlotter",
    "einsteinpy.tests.test_plotting.test_rays.test_shadow.dummy_data",
    "unittest.mock.call",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_rays.test_shadow.test_plotter_has_correct_attributes": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "einsteinpy.plotting.ShadowPlotter",
    "einsteinpy.rays.Shadow",
    "einsteinpy.tests.test_plotting.test_rays.test_shadow.dummy_data",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_plotting.test_rays.test_shadow.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.AntiDeSitter": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.AntiDeSitter"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.ChristoffelSymbols": {
  "data": {
   "shadows": "einsteinpy.symbolic.ChristoffelSymbols"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.cosh": {
  "data": {
   "shadows": "sympy.cosh"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.schwarzschild_metric": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_christoffel.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.sinh": {
  "data": {
   "shadows": "sympy.sinh"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.test_ChristoffelSymbols": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "einsteinpy.symbolic.ChristoffelSymbols.from_metric",
    "einsteinpy.tests.test_symbolic.test_christoffel.schwarzschild_metric",
    "einsteinpy.tests.test_symbolic.test_christoffel.sympy"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.test_TypeError": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "TypeError",
    "einsteinpy.symbolic.ChristoffelSymbols",
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.test_change_config": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "einsteinpy.symbolic.ChristoffelSymbols",
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_christoffel.sympy",
    "int",
    "numpy.identity",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.test_lorentz_transform": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "einsteinpy.symbolic.ChristoffelSymbols",
    "get_lorentz_matrix",
    "get_tensor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.test_lorentz_transform.get_lorentz_matrix": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "range",
    "sympy.cosh",
    "sympy.sinh",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.test_lorentz_transform.get_tensor": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "einsteinpy.symbolic.ChristoffelSymbols.from_metric",
    "einsteinpy.symbolic.predefined.AntiDeSitter"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.test_properties": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "Exception",
    "einsteinpy.symbolic.ChristoffelSymbols.from_metric",
    "einsteinpy.tests.test_symbolic.test_christoffel.schwarzschild_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_christoffel.test_wrong_number_of_indices_ValueError": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.ChristoffelSymbols",
    "einsteinpy.tests.test_symbolic.test_christoffel.sympy",
    "int",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_constants": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_symbolic.test_constants.constants": {
  "data": {
   "shadows": "einsteinpy.symbolic.constants"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_constants.get_constant": {
  "data": {
   "shadows": "einsteinpy.symbolic.get_constant"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_constants.test_SymbolicConstant_descriptive_name": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "einsteinpy.symbolic.constants.Cosmo_Const"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_constants.test_get_constant": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "einsteinpy.symbolic.constants.c",
    "einsteinpy.symbolic.get_constant"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_einstein": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.EinsteinTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.EinsteinTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.RicciScalar": {
  "data": {
   "shadows": "einsteinpy.symbolic.RicciScalar"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.anti_de_sitter_metric": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_einstein.sympy",
    "sympy.cos",
    "sympy.sin",
    "sympy.sinh"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.cos": {
  "data": {
   "shadows": "sympy.cos"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.cosh": {
  "data": {
   "shadows": "sympy.cosh"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.schwarzschild_metric": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_einstein.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.simplify": {
  "data": {
   "shadows": "sympy.simplify"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.simplify_sympy_array": {
  "data": {
   "shadows": "einsteinpy.symbolic.simplify_sympy_array"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.sinh": {
  "data": {
   "shadows": "sympy.sinh"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.tensorcontraction": {
  "data": {
   "shadows": "sympy.tensorcontraction"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.test_EinsteinTensor_ValueError_wrong_config_length": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.EinsteinTensor",
    "einsteinpy.tests.test_symbolic.test_einstein.sympy",
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.test_EinsteinTensor_symbols_parent_metric_wrong_change_config": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception",
    "einsteinpy.symbolic.EinsteinTensor.from_metric",
    "einsteinpy.tests.test_symbolic.test_einstein.anti_de_sitter_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.test_EinsteinTensor_trace_negetive_of_Ricci_Scalar_in_4D": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "einsteinpy.symbolic.EinsteinTensor.from_metric",
    "einsteinpy.symbolic.RicciScalar.from_metric",
    "einsteinpy.tests.test_symbolic.test_einstein.anti_de_sitter_metric",
    "einsteinpy.tests.test_symbolic.test_einstein.pytest",
    "einsteinpy.tests.test_symbolic.test_einstein.schwarzschild_metric",
    "sympy.simplify",
    "sympy.tensorcontraction"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.test_lorentz_transform": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "einsteinpy.symbolic.EinsteinTensor",
    "get_lorentz_matrix",
    "get_tensor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.test_lorentz_transform.get_lorentz_matrix": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "range",
    "sympy.cosh",
    "sympy.sinh",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_einstein.test_lorentz_transform.get_tensor": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "einsteinpy.symbolic.EinsteinTensor",
    "range",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_helpers": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.Array": {
  "data": {
   "shadows": "sympy.Array"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.ImmutableDenseNDimArray": {
  "data": {
   "shadows": "sympy.ImmutableDenseNDimArray"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.TransformationMatrix": {
  "data": {
   "shadows": "einsteinpy.symbolic.TransformationMatrix"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_helpers._change_name": {
  "data": {
   "shadows": "einsteinpy.symbolic.helpers._change_name"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.cart2sph_matrix": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "einsteinpy.symbolic.TransformationMatrix.from_new2old",
    "einsteinpy.tests.test_symbolic.test_helpers.pytest",
    "sympy.abc.p",
    "sympy.abc.q",
    "sympy.abc.x",
    "sympy.abc.y",
    "sympy.cos",
    "sympy.sin"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.cos": {
  "data": {
   "shadows": "sympy.cos"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.p": {
  "data": {
   "shadows": "sympy.abc.p"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.q": {
  "data": {
   "shadows": "sympy.abc.q"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.simplify_sympy_array": {
  "data": {
   "shadows": "einsteinpy.symbolic.simplify_sympy_array"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.test_TransformationMatrix_classmethod_new2old": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "einsteinpy.symbolic.simplify_sympy_array",
    "einsteinpy.tests.test_symbolic.test_helpers.cart2sph_matrix",
    "int",
    "numpy.zeros",
    "sympy.Array",
    "sympy.abc.p",
    "sympy.abc.q",
    "sympy.cos",
    "sympy.sin"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.test_TransformationMatrix_inv_function": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "einsteinpy.symbolic.simplify_sympy_array",
    "einsteinpy.tests.test_symbolic.test_helpers.cart2sph_matrix",
    "int",
    "numpy.zeros",
    "sympy.Array",
    "sympy.abc.p",
    "sympy.abc.q",
    "sympy.cos",
    "sympy.sin"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.test_TransformationMatrix_is_initializing": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "einsteinpy.symbolic.TransformationMatrix",
    "einsteinpy.tests.test_symbolic.test_helpers.pytest",
    "isinstance",
    "list",
    "sympy.ImmutableDenseNDimArray",
    "sympy.abc.p",
    "sympy.abc.q",
    "sympy.abc.x",
    "sympy.abc.y"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.test_TransformationMatrix_variables_are_not_None": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "einsteinpy.tests.test_symbolic.test_helpers.cart2sph_matrix"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.test_change_name": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "einsteinpy.symbolic.helpers._change_name",
    "einsteinpy.tests.test_symbolic.test_helpers.pytest"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.x": {
  "data": {
   "shadows": "sympy.abc.x"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_helpers.y": {
  "data": {
   "shadows": "sympy.abc.y"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_metric": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_symbolic.test_metric.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_metric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_metric.schwarzschild_metric": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_metric.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_metric.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_metric.test_MetricTensor": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "einsteinpy.tests.test_symbolic.test_metric.schwarzschild_metric",
    "einsteinpy.tests.test_symbolic.test_metric.sympy"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_metric.test_TypeError": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "TypeError",
    "einsteinpy.symbolic.MetricTensor",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_metric.test_change_config_ValueError": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.tests.test_symbolic.test_metric.schwarzschild_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_metric.test_check_ValueError_on_incorrect_config_length": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_metric.schwarzschild_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_metric.test_inv": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "einsteinpy.tests.test_symbolic.test_metric.schwarzschild_metric",
    "einsteinpy.tests.test_symbolic.test_metric.sympy",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_metric.test_properties": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "einsteinpy.tests.test_symbolic.test_metric.schwarzschild_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_metric.test_use_original_config_in_change_config": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "einsteinpy.tests.test_symbolic.test_metric.schwarzschild_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.AntiDeSitter": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.AntiDeSitter"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.AntiDeSitterStatic": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.AntiDeSitterStatic"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.Array": {
  "data": {
   "shadows": "sympy.Array"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.BarriolaVilekin": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.BarriolaVilekin"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.BertottiKasner": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.BertottiKasner"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.BesselGravitationalWave": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.BesselGravitationalWave"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.CMetric": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.CMetric"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.Davidson": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.Davidson"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.DeSitter": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.DeSitter"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.Ernst": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.Ernst"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.Godel": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.Godel"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.JanisNewmanWinicour": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.JanisNewmanWinicour"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.Kerr": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.Kerr"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.KerrNewman": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.KerrNewman"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.Minkowski": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.Minkowski"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.MinkowskiCartesian": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.MinkowskiCartesian"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.MinkowskiPolar": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.MinkowskiPolar"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.ReissnerNordstorm": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.ReissnerNordstorm"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.Schwarzschild": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.Schwarzschild"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.simplify_sympy_array": {
  "data": {
   "shadows": "einsteinpy.symbolic.simplify_sympy_array"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.test_Minkowski_equality": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "einsteinpy.symbolic.predefined.Minkowski",
    "einsteinpy.symbolic.predefined.MinkowskiCartesian",
    "einsteinpy.symbolic.simplify_sympy_array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.test_all_predefined_metrics": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.symbolic.predefined.AntiDeSitter",
    "einsteinpy.symbolic.predefined.AntiDeSitterStatic",
    "einsteinpy.symbolic.predefined.BarriolaVilekin",
    "einsteinpy.symbolic.predefined.BertottiKasner",
    "einsteinpy.symbolic.predefined.BesselGravitationalWave",
    "einsteinpy.symbolic.predefined.CMetric",
    "einsteinpy.symbolic.predefined.Davidson",
    "einsteinpy.symbolic.predefined.DeSitter",
    "einsteinpy.symbolic.predefined.Ernst",
    "einsteinpy.symbolic.predefined.Godel",
    "einsteinpy.symbolic.predefined.JanisNewmanWinicour",
    "einsteinpy.symbolic.predefined.Kerr",
    "einsteinpy.symbolic.predefined.KerrNewman",
    "einsteinpy.symbolic.predefined.Minkowski",
    "einsteinpy.symbolic.predefined.MinkowskiCartesian",
    "einsteinpy.symbolic.predefined.MinkowskiPolar",
    "einsteinpy.symbolic.predefined.ReissnerNordstorm",
    "einsteinpy.symbolic.predefined.Schwarzschild",
    "einsteinpy.tests.test_symbolic.test_predefined.test_all.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_all.test_check_two_metrics_are_equal": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "einsteinpy.symbolic.predefined.Kerr",
    "einsteinpy.symbolic.predefined.KerrNewman",
    "einsteinpy.symbolic.predefined.ReissnerNordstorm",
    "einsteinpy.symbolic.predefined.Schwarzschild",
    "einsteinpy.symbolic.simplify_sympy_array",
    "einsteinpy.tests.test_symbolic.test_predefined.test_all.pytest",
    "int",
    "numpy.zeros",
    "sympy.Array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_find": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_find.find": {
  "data": {
   "shadows": "einsteinpy.symbolic.predefined.find"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_find.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_find.test_find_correct": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "einsteinpy.symbolic.predefined.find",
    "set"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_predefined.test_find.test_find_incorrect": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "einsteinpy.symbolic.predefined.find"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_ricci": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.RicciScalar": {
  "data": {
   "shadows": "einsteinpy.symbolic.RicciScalar"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.RicciTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.RicciTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.RiemannCurvatureTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.RiemannCurvatureTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.anti_de_sitter_metric": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_ricci.sympy",
    "sympy.cos",
    "sympy.sin",
    "sympy.sinh"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.cos": {
  "data": {
   "shadows": "sympy.cos"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.sinh": {
  "data": {
   "shadows": "sympy.sinh"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.spherical_metric": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_ricci.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.test_RicciScalar_inbuilt_simplify_works": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "einsteinpy.symbolic.RicciScalar",
    "einsteinpy.tests.test_symbolic.test_ricci.sympy",
    "sum",
    "sympy.cos",
    "sympy.sin"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.test_RicciScalar_is_constant_for_ADS_spacetime": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "einsteinpy.symbolic.RicciScalar.from_metric",
    "einsteinpy.tests.test_symbolic.test_ricci.anti_de_sitter_metric",
    "einsteinpy.tests.test_symbolic.test_ricci.sympy"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.test_RicciScalar_raise_TypeError": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "TypeError",
    "einsteinpy.symbolic.RicciScalar",
    "einsteinpy.tests.test_symbolic.test_ricci.sympy"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.test_RicciTensor_from_riemann_with_arbritary_config": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Exception",
    "einsteinpy.symbolic.RicciTensor.from_riemann",
    "einsteinpy.symbolic.RiemannCurvatureTensor.from_metric",
    "einsteinpy.tests.test_symbolic.test_ricci.anti_de_sitter_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.test_RicciTensor_parent_metric_property_and_ValueError": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.RicciTensor",
    "einsteinpy.symbolic.RicciTensor.from_metric",
    "einsteinpy.tests.test_symbolic.test_ricci.anti_de_sitter_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.test_Ricci_is_zero_for_spherical_space": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "einsteinpy.symbolic.RicciTensor.from_metric",
    "einsteinpy.tests.test_symbolic.test_ricci.spherical_metric",
    "einsteinpy.tests.test_symbolic.test_ricci.sympy",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_ricci.test_TypeError": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "TypeError",
    "einsteinpy.symbolic.RicciTensor",
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_riemann": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_symbolic.test_riemann.ChristoffelSymbols": {
  "data": {
   "shadows": "einsteinpy.symbolic.ChristoffelSymbols"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_riemann.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_riemann.RiemannCurvatureTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.RiemannCurvatureTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_riemann.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_riemann.schwarzschild_metric": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_riemann.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_riemann.spherical_metric": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_riemann.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_riemann.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_riemann.test_Riemann_is_zero_for_spherical_space": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "einsteinpy.symbolic.RiemannCurvatureTensor.from_metric",
    "einsteinpy.tests.test_symbolic.test_riemann.spherical_metric",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_riemann.test_TypeError": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "TypeError",
    "einsteinpy.symbolic.RiemannCurvatureTensor",
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_riemann.test_circular_index_config_same": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "einsteinpy.symbolic.RiemannCurvatureTensor.from_metric",
    "einsteinpy.tests.test_symbolic.test_riemann.schwarzschild_metric",
    "einsteinpy.tests.test_symbolic.test_riemann.sympy",
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_riemann.test_no_exception_raised_passing_christoffel_with_unconventional_indices": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "einsteinpy.symbolic.ChristoffelSymbols.from_metric",
    "einsteinpy.symbolic.RiemannCurvatureTensor.from_christoffels",
    "einsteinpy.tests.test_symbolic.test_riemann.schwarzschild_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_schouten": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.RicciScalar": {
  "data": {
   "shadows": "einsteinpy.symbolic.RicciScalar"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.RicciTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.RicciTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.RiemannCurvatureTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.RiemannCurvatureTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.SchoutenTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.SchoutenTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.anti_de_sitter_metric": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_schouten.sympy",
    "sympy.cos",
    "sympy.sin",
    "sympy.sinh"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.cos": {
  "data": {
   "shadows": "sympy.cos"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.schwarzschild_metric": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_schouten.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.simplify_sympy_array": {
  "data": {
   "shadows": "einsteinpy.symbolic.simplify_sympy_array"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.sinh": {
  "data": {
   "shadows": "sympy.sinh"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.test_SchoutenTensor_config_change": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "einsteinpy.symbolic.SchoutenTensor.from_metric",
    "einsteinpy.symbolic.simplify_sympy_array",
    "einsteinpy.tests.test_symbolic.test_schouten.schwarzschild_metric",
    "einsteinpy.tests.test_symbolic.test_schouten.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.test_SchoutenTensor_parent_metric_property_and_ValueError": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.SchoutenTensor",
    "einsteinpy.symbolic.SchoutenTensor.from_metric",
    "einsteinpy.tests.test_symbolic.test_schouten.anti_de_sitter_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.test_SchoutenTensor_with_arbritary_config": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Exception",
    "einsteinpy.symbolic.SchoutenTensor.from_metric",
    "einsteinpy.tests.test_symbolic.test_schouten.schwarzschild_metric"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_schouten.test_Schouten_dim2": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.symbolic.SchoutenTensor.from_metric",
    "einsteinpy.tests.test_symbolic.test_schouten.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_stress_energy_momentum": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.StressEnergyMomentumTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.StressEnergyMomentumTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.cos": {
  "data": {
   "shadows": "sympy.cos"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.schwarzschild_metric": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.simplify_sympy_array": {
  "data": {
   "shadows": "einsteinpy.symbolic.simplify_sympy_array"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.sinh": {
  "data": {
   "shadows": "sympy.sinh"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.test_StressEnergyMomentumTensor_ValueError_wrong_config_length": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.StressEnergyMomentumTensor",
    "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.sympy",
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.test_StressEnergyMomentumTensor_change_config_no_parent_metric": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Exception",
    "einsteinpy.symbolic.StressEnergyMomentumTensor",
    "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.sympy",
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.test_StressEnergyMomentumTensor_cyclic_config_change": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "einsteinpy.symbolic.StressEnergyMomentumTensor.from_metric",
    "einsteinpy.symbolic.simplify_sympy_array",
    "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.schwarzschild_metric",
    "einsteinpy.tests.test_symbolic.test_stress_energy_momentum.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor": {
  "data": {
   "symbols_in_volume": [
    "einsteinpy.tests.test_symbolic.test_tensor.pytest"
   ]
  },
  "type": "module"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.Array": {
  "data": {
   "shadows": "sympy.Array"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.BaseRelativityTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.BaseRelativityTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.Function": {
  "data": {
   "shadows": "sympy.Function"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.Tensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.Tensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.arbitrary_tensor1": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "einsteinpy.symbolic.BaseRelativityTensor",
    "int",
    "numpy.zeros",
    "sympy.Function",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.cos": {
  "data": {
   "shadows": "sympy.cos"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.schwarzschild_metric": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "int",
    "numpy.zeros",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.schwarzschild_tensor": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "einsteinpy.symbolic.Tensor",
    "int",
    "numpy.zeros",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.simplify": {
  "data": {
   "shadows": "sympy.simplify"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.simplify_sympy_array": {
  "data": {
   "shadows": "einsteinpy.symbolic.simplify_sympy_array"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_BaseRelativilyTensor_TypeError": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "TypeError",
    "einsteinpy.symbolic.BaseRelativityTensor",
    "einsteinpy.tests.test_symbolic.test_tensor.arbitrary_tensor1",
    "einsteinpy.tests.test_symbolic.test_tensor.xfail"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_BaseRelativityTensor_automatic_calculation_of_free_variables": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "einsteinpy.symbolic.BaseRelativityTensor",
    "einsteinpy.tests.test_symbolic.test_tensor.arbitrary_tensor1",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_Tensor": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "einsteinpy.symbolic.Tensor",
    "isinstance",
    "sympy.Array",
    "sympy.abc.y",
    "sympy.abc.z",
    "sympy.cos",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_Tensor_getitem": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "einsteinpy.symbolic.Tensor",
    "int",
    "range",
    "sympy.abc.y",
    "sympy.abc.z",
    "sympy.cos",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_Tensor_repr": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "einsteinpy.symbolic.Tensor",
    "repr",
    "sympy.abc.y",
    "sympy.abc.z",
    "sympy.cos",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_Tensor_simplify": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "einsteinpy.symbolic.Tensor",
    "sympy.abc.y",
    "sympy.abc.z",
    "sympy.cos",
    "sympy.sin",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_Tensor_str": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "einsteinpy.symbolic.Tensor",
    "str",
    "sympy.abc.y",
    "sympy.abc.z",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_TypeError1": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "TypeError",
    "einsteinpy.symbolic.Tensor",
    "einsteinpy.tests.test_symbolic.test_tensor.xfail"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_TypeError2": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "TypeError",
    "einsteinpy.symbolic.Tensor",
    "einsteinpy.tests.test_symbolic.test_tensor.schwarzschild_tensor",
    "einsteinpy.tests.test_symbolic.test_tensor.xfail"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_TypeError3": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "TypeError",
    "einsteinpy.symbolic.Tensor",
    "einsteinpy.tests.test_symbolic.test_tensor.schwarzschild_tensor",
    "einsteinpy.tests.test_symbolic.test_tensor.xfail"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_ValueError1": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.Tensor",
    "einsteinpy.tests.test_symbolic.test_tensor.xfail",
    "sympy.abc.y",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_ValueError2": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.BaseRelativityTensor",
    "einsteinpy.tests.test_symbolic.test_tensor.xfail",
    "sympy.abc.y",
    "sympy.abc.z",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_check_properties": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "einsteinpy.tests.test_symbolic.test_tensor.schwarzschild_tensor"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_lambdify_on_schwarzschild_metric_without_args": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "einsteinpy.tests.test_symbolic.test_tensor.schwarzschild_metric",
    "f",
    "float",
    "numpy.array",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_lambdify_with_args": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "einsteinpy.symbolic.BaseRelativityTensor",
    "f",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "sympy.abc.y",
    "sympy.simplify",
    "sympy.symbols",
    "zip"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_simplify_sympy_array_works_for_all": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "Exception",
    "einsteinpy.symbolic.simplify_sympy_array",
    "einsteinpy.tests.test_symbolic.test_tensor.pytest",
    "einsteinpy.tests.test_symbolic.test_tensor.zero_expression",
    "sympy.Array"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_subs_multiple": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "einsteinpy.tests.test_symbolic.test_tensor.schwarzschild_tensor",
    "sympy.simplify",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_subs_single": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "einsteinpy.tests.test_symbolic.test_tensor.schwarzschild_tensor",
    "sympy.simplify",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.test_tensor_scalar": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "einsteinpy.symbolic.Tensor",
    "einsteinpy.tests.test_symbolic.test_tensor.pytest",
    "sympy.abc.y",
    "sympy.abc.z"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.xfail": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.y": {
  "data": {
   "shadows": "sympy.abc.y"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.z": {
  "data": {
   "shadows": "sympy.abc.z"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_tensor.zero_expression": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "sympy.abc.y",
    "sympy.abc.z",
    "sympy.cos",
    "sympy.sin"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_vector": {
  "data": {
   "symbols_in_volume": [
    "einsteinpy.tests.test_symbolic.test_vector.pytest"
   ]
  },
  "type": "module"
 },
 "einsteinpy.tests.test_symbolic.test_vector.GenericVector": {
  "data": {
   "shadows": "einsteinpy.symbolic.GenericVector"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_vector.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_vector.cos": {
  "data": {
   "shadows": "sympy.cos"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_vector.cosh": {
  "data": {
   "shadows": "sympy.cosh"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_vector.euclidean_space_metric": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "int",
    "numpy.zeros",
    "sympy.cos",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_vector.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_vector.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_vector.simplify": {
  "data": {
   "shadows": "sympy.simplify"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_vector.sinh": {
  "data": {
   "shadows": "sympy.sinh"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_vector.symbols": {
  "data": {
   "shadows": "sympy.symbols"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_vector.test_GenericVector_change_config_theoretical_test": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "einsteinpy.symbolic.GenericVector",
    "einsteinpy.tests.test_symbolic.test_vector.euclidean_space_metric",
    "sympy.cos",
    "sympy.simplify",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_vector.test_GenericVector_check_Metric": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "einsteinpy.symbolic.GenericVector",
    "einsteinpy.tests.test_symbolic.test_vector.xfail",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_vector.test_GenericVector_check_ValueErrors": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.GenericVector",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_vector.test_lorentz_transform": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "get_lorentz_matrix",
    "get_vector",
    "print",
    "sympy.cosh",
    "sympy.simplify",
    "sympy.sinh",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_vector.test_lorentz_transform.get_lorentz_matrix": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "range",
    "sympy.cosh",
    "sympy.sinh",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_vector.test_lorentz_transform.get_vector": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "einsteinpy.symbolic.GenericVector",
    "sympy.symbols"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_vector.xfail": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "einsteinpy.tests.test_symbolic.test_weyl": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.MetricTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.MetricTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.RicciScalar": {
  "data": {
   "shadows": "einsteinpy.symbolic.RicciScalar"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.RicciTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.RicciTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.RiemannCurvatureTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.RiemannCurvatureTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.WeylTensor": {
  "data": {
   "shadows": "einsteinpy.symbolic.WeylTensor"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.anti_de_sitter_metric": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_weyl.sympy",
    "sympy.cos",
    "sympy.sin",
    "sympy.sinh"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.cos": {
  "data": {
   "shadows": "sympy.cos"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.simplify_sympy_array": {
  "data": {
   "shadows": "einsteinpy.symbolic.simplify_sympy_array"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.sinh": {
  "data": {
   "shadows": "sympy.sinh"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.spherical_metric": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.tests.test_symbolic.test_weyl.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.test_weyl_TypeError": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "TypeError",
    "einsteinpy.symbolic.WeylTensor",
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.test_weyl_ValueError_wrong_config_length": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.WeylTensor",
    "einsteinpy.tests.test_symbolic.test_weyl.sympy",
    "int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.test_weyl_conformal_rescaling": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.symbolic.WeylTensor.from_metric",
    "einsteinpy.symbolic.simplify_sympy_array",
    "einsteinpy.tests.test_symbolic.test_weyl.anti_de_sitter_metric",
    "einsteinpy.tests.test_symbolic.test_weyl.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.test_weyl_contraction_1st_3rd_indices_zero": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "einsteinpy.symbolic.WeylTensor.from_metric",
    "einsteinpy.symbolic.simplify_sympy_array",
    "einsteinpy.tests.test_symbolic.test_weyl.anti_de_sitter_metric",
    "einsteinpy.tests.test_symbolic.test_weyl.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.test_weyl_dim2": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.symbolic.WeylTensor.from_metric",
    "einsteinpy.tests.test_symbolic.test_weyl.sympy",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_symbolic.test_weyl.test_weyl_dim3": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "einsteinpy.symbolic.MetricTensor",
    "einsteinpy.symbolic.WeylTensor.from_metric",
    "einsteinpy.tests.test_symbolic.test_weyl.sympy",
    "int",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.constant": {
  "data": {
   "shadows": "einsteinpy.constant"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.kerr_utils": {
  "data": {
   "shadows": "einsteinpy.utils.kerr_utils"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.schwarzschild_radius_dimensionless": {
  "data": {
   "shadows": "einsteinpy.utils.schwarzschild_radius_dimensionless"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.test_christoffels": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "einsteinpy.utils.kerr_utils.christoffels",
    "einsteinpy.utils.kerr_utils.dmetric_dx",
    "einsteinpy.utils.kerr_utils.metric_inv",
    "float",
    "int",
    "numpy.array",
    "numpy.multiply",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.test_event_horizon_for_nonrotating_case": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "einsteinpy.utils.kerr_utils.event_horizon",
    "einsteinpy.utils.schwarzschild_radius_dimensionless",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.test_nonzero_christoffels": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "einsteinpy.tests.test_utils.test_kerr_utils.collections",
    "einsteinpy.utils.kerr_utils.nonzero_christoffels",
    "einsteinpy.utils.kerr_utils.nonzero_christoffels_list"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.test_radius_ergosphere_for_nonrotating_case": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "einsteinpy.utils.kerr_utils.radius_ergosphere",
    "einsteinpy.utils.schwarzschild_radius_dimensionless",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.test_scaled_spin_factor": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "einsteinpy.utils.kerr_utils.scaled_spin_factor",
    "einsteinpy.utils.schwarzschild_radius_dimensionless",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.test_scaled_spin_factor_raises_error": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.tests.test_utils.test_kerr_utils.pytest",
    "einsteinpy.utils.kerr_utils.scaled_spin_factor"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.test_spin_factor": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "einsteinpy.constant.c.value",
    "einsteinpy.utils.kerr_utils.spin_factor",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerr_utils.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils": {
  "data": {
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.constant.coulombs_const.value"
   ]
  },
  "type": "module"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils._G": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils._c": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils._cc": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.constant": {
  "data": {
   "shadows": "einsteinpy.constant"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.kerr_utils": {
  "data": {
   "shadows": "einsteinpy.utils.kerr_utils"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.kerrnewman_utils": {
  "data": {
   "shadows": "einsteinpy.utils.kerrnewman_utils"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.schwarzschild_radius_dimensionless": {
  "data": {
   "shadows": "einsteinpy.utils.schwarzschild_radius_dimensionless"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_christoffels1": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_input",
    "einsteinpy.utils.kerr_utils.scaled_spin_factor",
    "einsteinpy.utils.kerrnewman_utils.christoffels",
    "einsteinpy.utils.kerrnewman_utils.dmetric_dx",
    "einsteinpy.utils.kerrnewman_utils.metric_inv",
    "float",
    "int",
    "numpy.array",
    "numpy.multiply",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_compare_kerr_kerrnewman_christoffels": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_input",
    "einsteinpy.utils.kerr_utils.christoffels",
    "einsteinpy.utils.kerr_utils.scaled_spin_factor",
    "einsteinpy.utils.kerrnewman_utils.christoffels",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_compare_kerr_kerrnewman_dmetric_dx": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_input",
    "einsteinpy.utils.kerr_utils.dmetric_dx",
    "einsteinpy.utils.kerr_utils.scaled_spin_factor",
    "einsteinpy.utils.kerrnewman_utils.dmetric_dx",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_compare_kerr_kerrnewman_metric_inv": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_input",
    "einsteinpy.utils.kerr_utils.metric_inv",
    "einsteinpy.utils.kerr_utils.scaled_spin_factor",
    "einsteinpy.utils.kerrnewman_utils.metric_inv",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_compare_kerr_kerrnewman_time_velocity": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "astropy.units.C",
    "astropy.units.kg",
    "einsteinpy.utils.kerr_utils.kerr_time_velocity",
    "einsteinpy.utils.kerr_utils.scaled_spin_factor",
    "einsteinpy.utils.kerrnewman_utils.kerrnewman_time_velocity",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_electric_magnetic_potential_from_em_potential_vector": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "einsteinpy.constant.coulombs_const.value",
    "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_input",
    "einsteinpy.utils.kerrnewman_utils.em_potential",
    "float",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_event_horizon_for_nonrotating_uncharged_case": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "einsteinpy.utils.kerr_utils.event_horizon",
    "einsteinpy.utils.kerrnewman_utils.event_horizon",
    "einsteinpy.utils.schwarzschild_radius_dimensionless",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_input": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "einsteinpy.tests.test_utils.test_kerrnewman_utils._G",
    "einsteinpy.tests.test_utils.test_kerrnewman_utils._c",
    "einsteinpy.tests.test_utils.test_kerrnewman_utils._cc",
    "einsteinpy.tests.test_utils.test_kerrnewman_utils.pytest",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_maxwell_tensor_contravariant_for_natural_units": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "einsteinpy.utils.kerrnewman_utils.maxwell_tensor_contravariant",
    "int",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_maxwell_tensor_covariant_for_natural_units": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "einsteinpy.utils.kerrnewman_utils.maxwell_tensor_covariant",
    "int",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.test_radius_ergosphere_for_nonrotating_uncharged_case": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "einsteinpy.utils.kerr_utils.radius_ergosphere",
    "einsteinpy.utils.kerrnewman_utils.radius_ergosphere",
    "einsteinpy.utils.schwarzschild_radius_dimensionless",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_kerrnewman_utils.utils": {
  "data": {
   "shadows": "einsteinpy.utils"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_schwarzschild_utils": {
  "data": {
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value"
   ]
  },
  "type": "module"
 },
 "einsteinpy.tests.test_utils.test_schwarzschild_utils._G": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "einsteinpy.tests.test_utils.test_schwarzschild_utils._c": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "einsteinpy.tests.test_utils.test_schwarzschild_utils.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_schwarzschild_utils.constant": {
  "data": {
   "shadows": "einsteinpy.constant"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_schwarzschild_utils.kerr_utils": {
  "data": {
   "shadows": "einsteinpy.utils.kerr_utils"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_schwarzschild_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_schwarzschild_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_schwarzschild_utils.schwarzschild_utils": {
  "data": {
   "shadows": "einsteinpy.utils.schwarzschild_utils"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_schwarzschild_utils.test_compare_kerr_and_schwarzschild_metric": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "einsteinpy.utils.kerr_utils.metric",
    "einsteinpy.utils.schwarzschild_utils.metric",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "einsteinpy.tests.test_utils.test_schwarzschild_utils.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.tests.test_utils.test_schwarzschild_utils.utils": {
  "data": {
   "shadows": "einsteinpy.utils"
  },
  "type": "import"
 },
 "einsteinpy.units": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.units.G": {
  "data": {
   "shadows": "einsteinpy.constant.G"
  },
  "type": "import"
 },
 "einsteinpy.units.astro_dist": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "astropy.units.def_unit",
    "astropy.units.m",
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value"
   ]
  },
  "type": "function"
 },
 "einsteinpy.units.astro_sec": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "astropy.units.def_unit",
    "astropy.units.s",
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value"
   ]
  },
  "type": "function"
 },
 "einsteinpy.units.c": {
  "data": {
   "shadows": "einsteinpy.constant.c"
  },
  "type": "import"
 },
 "einsteinpy.units.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.utils": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.utils.kerr_utils": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.utils.kerr_utils.BoyerLindquist": {
  "data": {
   "shadows": "einsteinpy.coordinates.BoyerLindquist"
  },
  "type": "import"
 },
 "einsteinpy.utils.kerr_utils.Spherical": {
  "data": {
   "shadows": "einsteinpy.coordinates.Spherical"
  },
  "type": "import"
 },
 "einsteinpy.utils.kerr_utils.christoffels": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.utils.kerr_utils.dmetric_dx",
    "einsteinpy.utils.kerr_utils.metric_inv",
    "einsteinpy.utils.kerr_utils.nonzero_christoffels_list",
    "float",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerr_utils.constant": {
  "data": {
   "shadows": "einsteinpy.constant"
  },
  "type": "import"
 },
 "einsteinpy.utils.kerr_utils.delta": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.utils.schwarzschild_radius_dimensionless"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerr_utils.dmetric_dx": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "due_to_r",
    "due_to_theta",
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.utils.kerr_utils.delta",
    "einsteinpy.utils.kerr_utils.sigma",
    "einsteinpy.utils.schwarzschild_radius_dimensionless",
    "float",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerr_utils.dmetric_dx.due_to_r": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerr_utils.dmetric_dx.due_to_theta": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerr_utils.event_horizon": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.rad",
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.coordinates.BoyerLindquist",
    "einsteinpy.utils.schwarzschild_radius_dimensionless",
    "float",
    "numpy.array",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerr_utils.kerr_time_velocity": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.one",
    "astropy.units.quantity_input",
    "einsteinpy.utils.kerr_utils.metric",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerr_utils.metric": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.utils.kerr_utils.delta",
    "einsteinpy.utils.kerr_utils.sigma",
    "einsteinpy.utils.schwarzschild_radius_dimensionless",
    "float",
    "numpy.sin",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerr_utils.metric_inv": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.utils.kerr_utils.metric",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerr_utils.nonzero_christoffels": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "bool",
    "int",
    "list",
    "numpy.array",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerr_utils.nonzero_christoffels_list": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "einsteinpy.utils.kerr_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.utils.kerr_utils.radius_ergosphere": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.rad",
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.coordinates.BoyerLindquist",
    "einsteinpy.utils.schwarzschild_radius_dimensionless",
    "float",
    "numpy.array",
    "numpy.cos",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerr_utils.scaled_spin_factor": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.utils.schwarzschild_radius_dimensionless"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerr_utils.schwarzschild_radius_dimensionless": {
  "data": {
   "shadows": "einsteinpy.utils.schwarzschild_radius_dimensionless"
  },
  "type": "import"
 },
 "einsteinpy.utils.kerr_utils.sigma": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.cos"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerr_utils.spin_factor": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "einsteinpy.utils.kerr_utils.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.utils.kerr_utils.utils": {
  "data": {
   "shadows": "einsteinpy.utils"
  },
  "type": "import"
 },
 "einsteinpy.utils.kerrnewman_utils": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.utils.kerrnewman_utils.BoyerLindquist": {
  "data": {
   "shadows": "einsteinpy.coordinates.BoyerLindquist"
  },
  "type": "import"
 },
 "einsteinpy.utils.kerrnewman_utils.Spherical": {
  "data": {
   "shadows": "einsteinpy.coordinates.Spherical"
  },
  "type": "import"
 },
 "einsteinpy.utils.kerrnewman_utils.charge_length_scale": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.constant.coulombs_const.value",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.christoffels": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.constant.coulombs_const.value",
    "einsteinpy.utils.kerrnewman_utils.dmetric_dx",
    "einsteinpy.utils.kerrnewman_utils.metric_inv",
    "einsteinpy.utils.kerrnewman_utils.nonzero_christoffels_list",
    "float",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.constant": {
  "data": {
   "shadows": "einsteinpy.constant"
  },
  "type": "import"
 },
 "einsteinpy.utils.kerrnewman_utils.delta": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.constant.coulombs_const.value",
    "einsteinpy.utils.kerrnewman_utils.charge_length_scale",
    "einsteinpy.utils.schwarzschild_radius_dimensionless"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.dmetric_dx": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "due_to_r",
    "due_to_theta",
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.constant.coulombs_const.value",
    "einsteinpy.utils.kerrnewman_utils.delta",
    "einsteinpy.utils.kerrnewman_utils.rho",
    "einsteinpy.utils.schwarzschild_radius_dimensionless",
    "float",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.dmetric_dx.due_to_r": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.dmetric_dx.due_to_theta": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.em_potential": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.constant.coulombs_const.value",
    "einsteinpy.utils.kerrnewman_utils.charge_length_scale",
    "einsteinpy.utils.kerrnewman_utils.rho",
    "float",
    "numpy.sin",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.event_horizon": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.rad",
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.constant.coulombs_const.value",
    "einsteinpy.coordinates.BoyerLindquist",
    "einsteinpy.utils.schwarzschild_radius_dimensionless",
    "float",
    "numpy.array",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.kerrnewman_time_velocity": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "astropy.units.C",
    "astropy.units.kg",
    "astropy.units.one",
    "astropy.units.quantity_input",
    "einsteinpy.utils.kerrnewman_utils.metric",
    "einsteinpy.utils.schwarzschild_radius",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.maxwell_tensor_contravariant": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.constant.coulombs_const.value",
    "einsteinpy.utils.kerrnewman_utils.maxwell_tensor_covariant",
    "einsteinpy.utils.kerrnewman_utils.metric_inv",
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.maxwell_tensor_covariant": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.constant.coulombs_const.value",
    "einsteinpy.utils.kerrnewman_utils.charge_length_scale",
    "einsteinpy.utils.kerrnewman_utils.rho",
    "float",
    "numpy.cos",
    "numpy.sin",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.metric": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.constant.coulombs_const.value",
    "einsteinpy.utils.kerrnewman_utils.delta",
    "einsteinpy.utils.kerrnewman_utils.rho",
    "float",
    "numpy.sin",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.metric_inv": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.constant.coulombs_const.value",
    "einsteinpy.utils.kerrnewman_utils.metric",
    "numpy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.nonzero_christoffels_list": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "einsteinpy.utils.kerrnewman_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.utils.kerrnewman_utils.radius_ergosphere": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "astropy.units.m",
    "astropy.units.rad",
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.constant.coulombs_const.value",
    "einsteinpy.coordinates.BoyerLindquist",
    "einsteinpy.utils.schwarzschild_radius_dimensionless",
    "float",
    "numpy.array",
    "numpy.cos",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.rho": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.kerrnewman_utils.schwarzschild_radius_dimensionless": {
  "data": {
   "shadows": "einsteinpy.utils.schwarzschild_radius_dimensionless"
  },
  "type": "import"
 },
 "einsteinpy.utils.kerrnewman_utils.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.utils.kerrnewman_utils.utils": {
  "data": {
   "shadows": "einsteinpy.utils"
  },
  "type": "import"
 },
 "einsteinpy.utils.scalar_factor": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.utils.scalar_factor.constant": {
  "data": {
   "shadows": "einsteinpy.constant"
  },
  "type": "import"
 },
 "einsteinpy.utils.scalar_factor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.utils.scalar_factor.scalar_factor": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.quantity_input",
    "astropy.units.s",
    "einsteinpy.constant.Cosmo_Const",
    "numpy.e"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.scalar_factor.scalar_factor_derivative": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.quantity_input",
    "astropy.units.s",
    "einsteinpy.constant.Cosmo_Const",
    "numpy.e"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.scalar_factor.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "einsteinpy.utils.schwarzschild_utils": {
  "data": {},
  "type": "module"
 },
 "einsteinpy.utils.schwarzschild_utils.christoffels": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.utils.schwarzschild_utils.schwarzschild_radius_dimensionless",
    "float",
    "numpy.cos",
    "numpy.sin",
    "numpy.tan",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.schwarzschild_utils.constant": {
  "data": {
   "shadows": "einsteinpy.constant"
  },
  "type": "import"
 },
 "einsteinpy.utils.schwarzschild_utils.metric": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value",
    "einsteinpy.utils.schwarzschild_utils.schwarzschild_radius_dimensionless",
    "float",
    "numpy.sin",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.schwarzschild_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "einsteinpy.utils.schwarzschild_utils.schwarzschild_radius": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.m",
    "astropy.units.quantity.Quantity",
    "astropy.units.s",
    "einsteinpy.constant.G",
    "einsteinpy.constant.G.unit",
    "einsteinpy.constant.c",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.schwarzschild_utils.schwarzschild_radius_dimensionless": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "einsteinpy.constant.G.value",
    "einsteinpy.constant.c.value"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.schwarzschild_utils.time_velocity": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "astropy.units.kg",
    "astropy.units.one",
    "astropy.units.quantity_input",
    "einsteinpy.constant.c.value",
    "einsteinpy.utils.schwarzschild_utils.schwarzschild_radius",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "einsteinpy.utils.schwarzschild_utils.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 }
}