{
 "authlib": {
  "data": {},
  "type": "module"
 },
 "authlib.__author__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "authlib.__homepage__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "authlib.__license__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "authlib.__version__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "authlib.client": {
  "data": {},
  "type": "module"
 },
 "authlib.client.assertion_session": {
  "data": {},
  "type": "module"
 },
 "authlib.client.assertion_session.AssertionSession": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "requests.Session"
   ]
  },
  "type": "class"
 },
 "authlib.client.assertion_session.AssertionSession.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "OAuth2Auth",
    "authlib.client.assertion_session.AssertionSession",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.client.assertion_session.AssertionSession.auto_refresh_token": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "authlib.client.assertion_session.AssertionSession.refresh_token": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "generate_assertion"
   ]
  },
  "type": "function"
 },
 "authlib.client.assertion_session.AssertionSession.request": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "authlib.client.assertion_session.AssertionSession",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.client.assertion_session.AssertionSession.token": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "authlib.client.assertion_session.Session": {
  "data": {
   "shadows": "requests.Session"
  },
  "type": "import"
 },
 "authlib.client.client": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "authlib.client.client.logging"
   ]
  },
  "type": "module"
 },
 "authlib.client.client.OAUTH_CLIENT_PARAMS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "authlib.client.client.OAuthClient": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.client.client.OAuthClient.__init__": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "authlib.client.client.OAuthClient._fetch_server_metadata": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "authlib.client.client.OAuthClient._get_session": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "OAuth1Session",
    "OAuth2Session"
   ]
  },
  "type": "function"
 },
 "authlib.client.client.OAuthClient.add_code_challenge": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "create_s256_code_challenge",
    "generate_token",
    "save_code_verifier"
   ]
  },
  "type": "function"
 },
 "authlib.client.client.OAuthClient.delete": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "authlib.client.client.OAuthClient.fetch_access_token": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "MissingRequestTokenError"
   ]
  },
  "type": "function"
 },
 "authlib.client.client.OAuthClient.generate_authorize_redirect": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "RuntimeError",
    "save_request_token"
   ]
  },
  "type": "function"
 },
 "authlib.client.client.OAuthClient.get": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "authlib.client.client.OAuthClient.patch": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "authlib.client.client.OAuthClient.post": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "authlib.client.client.OAuthClient.put": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "authlib.client.client.OAuthClient.request": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "MissingTokenError"
   ]
  },
  "type": "function"
 },
 "authlib.client.client.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "authlib.client.client.log": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "authlib.client.client.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "authlib.client.errors": {
  "data": {
   "symbols_in_volume": [
    "authlib.common.errors.AuthlibBaseError"
   ]
  },
  "type": "module"
 },
 "authlib.client.errors.AuthlibBaseError": {
  "data": {
   "shadows": "authlib.common.errors.AuthlibBaseError"
  },
  "type": "import"
 },
 "authlib.client.errors.FetchTokenDeniedError": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "authlib.client.errors.OAuthError"
   ]
  },
  "type": "class"
 },
 "authlib.client.errors.MismatchingStateError": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "authlib.client.errors.OAuthError"
   ]
  },
  "type": "class"
 },
 "authlib.client.errors.MissingRequestTokenError": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "authlib.client.errors.OAuthError"
   ]
  },
  "type": "class"
 },
 "authlib.client.errors.MissingTokenError": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "authlib.client.errors.OAuthError"
   ]
  },
  "type": "class"
 },
 "authlib.client.errors.MissingVerifierError": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "authlib.client.errors.OAuthError"
   ]
  },
  "type": "class"
 },
 "authlib.client.errors.OAuthError": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "authlib.client.errors.OAuthException": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "authlib.client.errors.OAuthException.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "authlib.client.errors.OAuthException.__str__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "requests.compat.is_py3"
   ]
  },
  "type": "function"
 },
 "authlib.client.errors.OAuthException.__unicode__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "authlib.client.errors.TokenExpiredError": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "authlib.client.errors.OAuthError"
   ]
  },
  "type": "class"
 },
 "authlib.client.errors.UnsupportedTokenTypeError": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "authlib.client.errors.OAuthError"
   ]
  },
  "type": "class"
 },
 "authlib.client.errors.is_py3": {
  "data": {
   "shadows": "requests.compat.is_py3"
  },
  "type": "import"
 },
 "authlib.client.oauth1_auth": {
  "data": {},
  "type": "module"
 },
 "authlib.client.oauth1_auth.AuthBase": {
  "data": {
   "shadows": "requests.auth.AuthBase"
  },
  "type": "import"
 },
 "authlib.client.oauth1_auth.CONTENT_TYPE_FORM_URLENCODED": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "authlib.client.oauth1_auth.OAuth1Auth": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "requests.auth.AuthBase"
   ]
  },
  "type": "class"
 },
 "authlib.client.oauth1_auth.OAuth1Auth.__call__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "authlib.client.oauth1_auth.CONTENT_TYPE_FORM_URLENCODED",
    "extract_params",
    "requests.utils.to_native_string",
    "to_native"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth1_auth.OAuth1Auth.sign_request": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "authlib.client.oauth1_auth.to_native_string": {
  "data": {
   "shadows": "requests.utils.to_native_string"
  },
  "type": "import"
 },
 "authlib.client.oauth1_session": {
  "data": {},
  "type": "module"
 },
 "authlib.client.oauth1_session.OAuth1Session": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "requests.Session"
   ]
  },
  "type": "class"
 },
 "authlib.client.oauth1_session.OAuth1Session.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "OAuth1Auth",
    "ValueError",
    "authlib.client.oauth1_session.OAuth1Session",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth1_session.OAuth1Session._fetch_token": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "FetchTokenDeniedError",
    "TypeError",
    "ValueError",
    "authlib.client.oauth1_session.json",
    "dict",
    "url_decode"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth1_session.OAuth1Session.authorization_url": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "deprecate"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth1_session.OAuth1Session.create_authorization_url": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "add_params_to_uri"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth1_session.OAuth1Session.fetch_access_token": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "MissingVerifierError"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth1_session.OAuth1Session.fetch_request_token": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth1_session.OAuth1Session.parse_authorization_response": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "dict",
    "url_decode"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth1_session.OAuth1Session.rebuild_auth": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "authlib.client.oauth1_session.OAuth1Session.redirect_uri": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "authlib.client.oauth1_session.OAuth1Session.token": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "MissingTokenError"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth1_session.Session": {
  "data": {
   "shadows": "requests.Session"
  },
  "type": "import"
 },
 "authlib.client.oauth1_session.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "authlib.client.oauth2_auth": {
  "data": {},
  "type": "module"
 },
 "authlib.client.oauth2_auth.AuthBase": {
  "data": {
   "shadows": "requests.auth.AuthBase"
  },
  "type": "import"
 },
 "authlib.client.oauth2_auth.HTTPBasicAuth": {
  "data": {
   "shadows": "requests.auth.HTTPBasicAuth"
  },
  "type": "import"
 },
 "authlib.client.oauth2_auth.OAuth2Auth": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "requests.auth.AuthBase"
   ]
  },
  "type": "class"
 },
 "authlib.client.oauth2_auth.OAuth2Auth.__call__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "MissingTokenError",
    "UnsupportedTokenTypeError",
    "hook",
    "sign"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_auth.OAuth2Auth.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_auth.OAuth2Auth.register_sign_method": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_auth.OAuth2ClientAuth": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "requests.auth.HTTPBasicAuth"
   ]
  },
  "type": "class"
 },
 "authlib.client.oauth2_auth.OAuth2ClientAuth.__call__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "authlib.client.oauth2_auth.OAuth2ClientAuth",
    "func",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_auth.OAuth2ClientAuth.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "authlib.client.oauth2_auth.OAuth2ClientAuth",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_auth.OAuth2ClientAuth.register": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "authlib.client.oauth2_auth._auth_client_secret_post": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "add_params_to_qs"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_auth._auth_none": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "add_params_to_qs"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_session": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "authlib.client.oauth2_session.logging"
   ]
  },
  "type": "module"
 },
 "authlib.client.oauth2_session.DEFAULT_HEADERS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "authlib.client.oauth2_session.OAuth2Session": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "requests.Session"
   ]
  },
  "type": "class"
 },
 "authlib.client.oauth2_session.OAuth2Session.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "OAuth2Auth",
    "OAuth2ClientAuth",
    "authlib.client.oauth2_session.OAuth2Session",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_session.OAuth2Session._parse_and_validate_token": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "OAuthError"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_session.OAuth2Session._prepare_authorization_code_body": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "parse_authorization_code_response",
    "prepare_token_request"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_session.OAuth2Session.authorization_url": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "deprecate"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_session.OAuth2Session.create_authorization_url": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "generate_token",
    "prepare_grant_uri"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_session.OAuth2Session.fetch_access_token": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "authlib.client.oauth2_session.DEFAULT_HEADERS",
    "dict",
    "hook",
    "prepare_token_request",
    "url_decode"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_session.OAuth2Session.fetch_token": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "authlib.client.oauth2_session.OAuth2Session.refresh_token": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "authlib.client.oauth2_session.DEFAULT_HEADERS",
    "callable",
    "dict",
    "hook",
    "prepare_token_request",
    "url_decode"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_session.OAuth2Session.register_client_auth_method": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "authlib.client.oauth2_session.OAuth2Session.register_compliance_hook": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ValueError",
    "hook"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_session.OAuth2Session.request": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "TokenExpiredError",
    "authlib.client.oauth2_session.OAuth2Session",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_session.OAuth2Session.revoke_token": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "dict",
    "hook",
    "prepare_revoke_token_request",
    "url_decode"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_session.OAuth2Session.token": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "authlib.client.oauth2_session.OAuth2Session.token_from_fragment": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "parse_implicit_response"
   ]
  },
  "type": "function"
 },
 "authlib.client.oauth2_session.Session": {
  "data": {
   "shadows": "requests.Session"
  },
  "type": "import"
 },
 "authlib.client.oauth2_session.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "authlib.client.oauth2_session.log": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "authlib.client.oauth2_session.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "authlib.common": {
  "data": {},
  "type": "module"
 },
 "authlib.common.encoding": {
  "data": {
   "symbols_in_volume": [
    "authlib.common.encoding.is_py2",
    "authlib.common.encoding.sys",
    "bytes",
    "str"
   ]
  },
  "type": "module"
 },
 "authlib.common.encoding.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "authlib.common.encoding.base64_to_int": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "authlib.common.encoding.struct",
    "authlib.common.encoding.to_bytes",
    "authlib.common.encoding.urlsafe_b64decode",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "authlib.common.encoding.byte_type": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "authlib.common.encoding.int_to_base64": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "authlib.common.encoding.struct",
    "authlib.common.encoding.to_unicode",
    "authlib.common.encoding.urlsafe_b64encode",
    "divmod",
    "hasattr",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "authlib.common.encoding.is_py2": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "authlib.common.encoding.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "authlib.common.encoding.json_b64encode": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "authlib.common.encoding.json",
    "authlib.common.encoding.to_bytes",
    "authlib.common.encoding.urlsafe_b64encode",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.common.encoding.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "authlib.common.encoding.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "authlib.common.encoding.text_types": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "authlib.common.encoding.to_bytes": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "authlib.common.encoding.byte_type",
    "authlib.common.encoding.unicode_type",
    "float",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "authlib.common.encoding.to_native": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "authlib.common.encoding.is_py2",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "authlib.common.encoding.to_unicode": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "authlib.common.encoding.byte_type",
    "authlib.common.encoding.unicode_type",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.common.encoding.unicode_type": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "authlib.common.encoding.urlsafe_b64decode": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "authlib.common.encoding.base64",
    "len"
   ]
  },
  "type": "function"
 },
 "authlib.common.encoding.urlsafe_b64encode": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "authlib.common.encoding.base64"
   ]
  },
  "type": "function"
 },
 "authlib.common.errors": {
  "data": {},
  "type": "module"
 },
 "authlib.common.errors.AuthlibBaseError": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "authlib.common.errors.AuthlibBaseError.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "authlib.common.errors.AuthlibBaseError",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.common.errors.AuthlibBaseError.__repr__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "authlib.common.errors.AuthlibHTTPError": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "authlib.common.errors.AuthlibBaseError"
   ]
  },
  "type": "class"
 },
 "authlib.common.errors.AuthlibHTTPError.__call__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "authlib.common.errors.AuthlibHTTPError.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "authlib.common.errors.AuthlibHTTPError",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.common.errors.AuthlibHTTPError.get_body": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "authlib.common.errors.AuthlibHTTPError.get_error_description": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "authlib.common.errors.AuthlibHTTPError.get_error_uri": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "authlib.common.errors.AuthlibHTTPError.get_headers": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "authlib.common.errors.AuthlibHTTPError.gettext": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "authlib.common.security": {
  "data": {
   "symbols_in_volume": [
    "authlib.common.security.string"
   ]
  },
  "type": "module"
 },
 "authlib.common.security.UNICODE_ASCII_CHARACTER_SET": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "authlib.common.security.generate_token": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "authlib.common.security.UNICODE_ASCII_CHARACTER_SET",
    "authlib.common.security.random",
    "range"
   ]
  },
  "type": "function"
 },
 "authlib.common.security.is_secure_transport": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "authlib.common.security.os"
   ]
  },
  "type": "function"
 },
 "authlib.common.security.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "authlib.common.security.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "authlib.common.security.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "authlib.common.urls": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "authlib.common.urls.always_safe",
    "authlib.common.urls.re",
    "set"
   ]
  },
  "type": "module"
 },
 "authlib.common.urls.INVALID_HEX_PATTERN": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "authlib.common.urls._quote": {
  "data": {
   "shadows": "urllib.parse.quote"
  },
  "type": "import"
 },
 "authlib.common.urls._unquote": {
  "data": {
   "shadows": "urllib.parse.unquote"
  },
  "type": "import"
 },
 "authlib.common.urls._urlencode": {
  "data": {
   "shadows": "urllib.parse.urlencode"
  },
  "type": "import"
 },
 "authlib.common.urls.add_params_to_qs": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "authlib.common.urls.url_encode",
    "dict",
    "isinstance",
    "urllib.parse.parse_qsl"
   ]
  },
  "type": "function"
 },
 "authlib.common.urls.add_params_to_uri": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "authlib.common.urls.add_params_to_qs",
    "urllib.parse.urlparse",
    "urllib.parse.urlunparse"
   ]
  },
  "type": "function"
 },
 "authlib.common.urls.always_safe": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "authlib.common.urls.extract_params": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "authlib.common.urls.url_decode",
    "dict",
    "isinstance",
    "list",
    "to_unicode",
    "tuple"
   ]
  },
  "type": "function"
 },
 "authlib.common.urls.is_valid_url": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "authlib.common.urls.parse_http_list": {
  "data": {
   "shadows": "urllib.request.parse_http_list"
  },
  "type": "import"
 },
 "authlib.common.urls.parse_keqv_list": {
  "data": {
   "shadows": "urllib.request.parse_keqv_list"
  },
  "type": "import"
 },
 "authlib.common.urls.quote": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "to_bytes",
    "to_unicode",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "authlib.common.urls.quote_url": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "authlib.common.urls.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "authlib.common.urls.unquote": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "to_unicode",
    "urllib.parse.unquote"
   ]
  },
  "type": "function"
 },
 "authlib.common.urls.url_decode": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "authlib.common.urls.INVALID_HEX_PATTERN",
    "authlib.common.urls.urlencoded",
    "set",
    "to_unicode",
    "urllib.parse.parse_qsl"
   ]
  },
  "type": "function"
 },
 "authlib.common.urls.url_encode": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "to_bytes",
    "to_unicode",
    "urllib.parse.urlencode"
   ]
  },
  "type": "function"
 },
 "authlib.common.urls.urlencoded": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "authlib.common.urls.urlparse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "authlib.consts": {
  "data": {
   "symbols_in_volume": [
    "authlib.consts.homepage",
    "authlib.consts.name",
    "authlib.consts.version"
   ]
  },
  "type": "module"
 },
 "authlib.consts.author": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "authlib.consts.default_user_agent": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "authlib.consts.homepage": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "authlib.consts.name": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "authlib.consts.version": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "authlib.deprecate": {
  "data": {
   "symbols_in_volume": [
    "authlib.deprecate.AuthlibDeprecationWarning",
    "authlib.deprecate.warnings"
   ]
  },
  "type": "module"
 },
 "authlib.deprecate.AuthlibDeprecationWarning": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "class"
 },
 "authlib.deprecate.deprecate": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "authlib.deprecate.AuthlibDeprecationWarning",
    "authlib.deprecate.warnings"
   ]
  },
  "type": "function"
 },
 "authlib.deprecate.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "authlib.django": {
  "data": {},
  "type": "module"
 },
 "authlib.django.client": {
  "data": {},
  "type": "module"
 },
 "authlib.django.client.oauth": {
  "data": {
   "symbols_in_volume": [
    "django.dispatch.Signal"
   ]
  },
  "type": "module"
 },
 "authlib.django.client.oauth.HttpResponseRedirect": {
  "data": {
   "shadows": "django.http.HttpResponseRedirect"
  },
  "type": "import"
 },
 "authlib.django.client.oauth.MismatchingStateError": {
  "data": {
   "shadows": "authlib.client.errors.MismatchingStateError"
  },
  "type": "import"
 },
 "authlib.django.client.oauth.OAUTH_CLIENT_PARAMS": {
  "data": {
   "shadows": "authlib.client.client.OAUTH_CLIENT_PARAMS"
  },
  "type": "import"
 },
 "authlib.django.client.oauth.OAuth": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.django.client.oauth.OAuth.__getattr__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "AttributeError",
    "object.__getattribute__"
   ]
  },
  "type": "function"
 },
 "authlib.django.client.oauth.OAuth.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "authlib.django.client.oauth.OAuth.register": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "authlib.django.client.oauth._config_client",
    "authlib.django.client.oauth._get_conf",
    "authlib.django.client.oauth.functools",
    "client_cls"
   ]
  },
  "type": "function"
 },
 "authlib.django.client.oauth.OAuthClient": {
  "data": {
   "shadows": "authlib.client.client.OAuthClient"
  },
  "type": "import"
 },
 "authlib.django.client.oauth.RemoteApp": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "authlib.client.client.OAuthClient"
   ]
  },
  "type": "class"
 },
 "authlib.django.client.oauth.RemoteApp.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "authlib.django.client.oauth.RemoteApp",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.django.client.oauth.RemoteApp._send_token_update": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "authlib.django.client.oauth.token_update"
   ]
  },
  "type": "function"
 },
 "authlib.django.client.oauth.RemoteApp.authorize_access_token": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "authlib.django.client.oauth._callback_tpl",
    "authlib.django.client.oauth._generate_oauth2_access_token_params",
    "authlib.django.client.oauth._req_token_tpl"
   ]
  },
  "type": "function"
 },
 "authlib.django.client.oauth.RemoteApp.authorize_redirect": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "django.http.HttpResponseRedirect"
   ]
  },
  "type": "function"
 },
 "authlib.django.client.oauth.RemoteApp.authorize_redirect._save_code_verifier": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "authlib.django.client.oauth._code_verifier_tpl"
   ]
  },
  "type": "function"
 },
 "authlib.django.client.oauth.RemoteApp.authorize_redirect.save_request_token": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "authlib.django.client.oauth._req_token_tpl"
   ]
  },
  "type": "function"
 },
 "authlib.django.client.oauth.RemoteApp.save_authorize_state": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "authlib.django.client.oauth._callback_tpl",
    "authlib.django.client.oauth._state_tpl"
   ]
  },
  "type": "function"
 },
 "authlib.django.client.oauth.Signal": {
  "data": {
   "shadows": "django.dispatch.Signal"
  },
  "type": "import"
 },
 "authlib.django.client.oauth.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "authlib.django.client.oauth._callback_tpl": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "authlib.django.client.oauth._code_verifier_tpl": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "authlib.django.client.oauth._config_client": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "authlib.client.client.OAUTH_CLIENT_PARAMS",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.django.client.oauth._generate_oauth2_access_token_params": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "authlib.client.errors.MismatchingStateError",
    "authlib.django.client.oauth._code_verifier_tpl",
    "authlib.django.client.oauth._state_tpl"
   ]
  },
  "type": "function"
 },
 "authlib.django.client.oauth._get_conf": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "django.conf.settings",
    "getattr"
   ]
  },
  "type": "function"
 },
 "authlib.django.client.oauth._req_token_tpl": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "authlib.django.client.oauth._state_tpl": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "authlib.django.client.oauth.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "authlib.django.client.oauth.settings": {
  "data": {
   "shadows": "django.conf.settings"
  },
  "type": "import"
 },
 "authlib.django.client.oauth.token_update": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "authlib.django.helpers": {
  "data": {},
  "type": "module"
 },
 "authlib.django.helpers.DictMixin": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "authlib.django.helpers.WSGIHeaderDict": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "collections.MutableMapping"
   ]
  },
  "type": "class"
 },
 "authlib.django.helpers.WSGIHeaderDict.__contains__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "authlib.django.helpers.WSGIHeaderDict.__delitem__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "authlib.django.helpers.WSGIHeaderDict.__getitem__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "authlib.django.helpers._unicode_value"
   ]
  },
  "type": "function"
 },
 "authlib.django.helpers.WSGIHeaderDict.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "authlib.django.helpers.WSGIHeaderDict.__iter__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "authlib.django.helpers._unify_key"
   ]
  },
  "type": "function"
 },
 "authlib.django.helpers.WSGIHeaderDict.__len__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "authlib.django.helpers.WSGIHeaderDict.__setitem__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "authlib.django.helpers.WSGIHeaderDict._ekey": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "authlib.django.helpers.WSGIHeaderDict.keys": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "authlib.django.helpers._unicode_value": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "authlib.common.encoding.to_unicode"
   ]
  },
  "type": "function"
 },
 "authlib.django.helpers._unify_key": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "authlib.django.helpers.create_oauth_request": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "authlib.django.helpers.parse_request_headers",
    "isinstance",
    "request_cls"
   ]
  },
  "type": "function"
 },
 "authlib.django.helpers.parse_request_headers": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "authlib.django.helpers.WSGIHeaderDict"
   ]
  },
  "type": "function"
 },
 "authlib.django.helpers.to_unicode": {
  "data": {
   "shadows": "authlib.common.encoding.to_unicode"
  },
  "type": "import"
 },
 "authlib.django.oauth1": {
  "data": {},
  "type": "module"
 },
 "authlib.django.oauth1.authorization_server": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "authlib.django.oauth1.authorization_server.logging"
   ]
  },
  "type": "module"
 },
 "authlib.django.oauth1.authorization_server.BaseServer": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.AuthorizationServer"
   ]
  },
  "type": "class"
 },
 "authlib.django.oauth1.authorization_server.BaseServer.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "django.conf.settings",
    "getattr"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.authorization_server.BaseServer.__init__.token_generator": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "authlib.common.security.generate_token"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.authorization_server.BaseServer.check_authorization_request": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "authlib.django.oauth1.authorization_server.BaseServer.create_oauth1_request": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.OAuth1Request",
    "create_oauth_request"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.authorization_server.BaseServer.create_token_credential": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "authlib.django.oauth1.authorization_server.BaseServer.exists_nonce": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "exists_nonce_in_cache"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.authorization_server.BaseServer.get_client_by_id": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "authlib.django.oauth1.authorization_server.BaseServer.handle_response": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "authlib.common.urls.url_encode",
    "django.http.HttpResponse"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.authorization_server.CacheAuthorizationServer": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "authlib.django.oauth1.authorization_server.BaseServer"
   ]
  },
  "type": "class"
 },
 "authlib.django.oauth1.authorization_server.CacheAuthorizationServer.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "authlib.django.oauth1.authorization_server.CacheAuthorizationServer",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.authorization_server.CacheAuthorizationServer.create_authorization_verifier": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "authlib.common.security.generate_token",
    "django.core.cache.cache.set"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.authorization_server.CacheAuthorizationServer.create_temporary_credential": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.TemporaryCredential",
    "django.core.cache.cache.set"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.authorization_server.CacheAuthorizationServer.delete_temporary_credential": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "django.core.cache.cache.delete"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.authorization_server.CacheAuthorizationServer.get_temporary_credential": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.TemporaryCredential",
    "django.core.cache.cache.get"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.authorization_server.HttpResponse": {
  "data": {
   "shadows": "django.http.HttpResponse"
  },
  "type": "import"
 },
 "authlib.django.oauth1.authorization_server.OAuth1Request": {
  "data": {
   "shadows": "authlib.specs.rfc5849.OAuth1Request"
  },
  "type": "import"
 },
 "authlib.django.oauth1.authorization_server.TemporaryCredential": {
  "data": {
   "shadows": "authlib.specs.rfc5849.TemporaryCredential"
  },
  "type": "import"
 },
 "authlib.django.oauth1.authorization_server._AuthorizationServer": {
  "data": {
   "shadows": "authlib.specs.rfc5849.AuthorizationServer"
  },
  "type": "import"
 },
 "authlib.django.oauth1.authorization_server.cache": {
  "data": {
   "shadows": "django.core.cache.cache"
  },
  "type": "import"
 },
 "authlib.django.oauth1.authorization_server.generate_token": {
  "data": {
   "shadows": "authlib.common.security.generate_token"
  },
  "type": "import"
 },
 "authlib.django.oauth1.authorization_server.log": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "authlib.django.oauth1.authorization_server.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "authlib.django.oauth1.authorization_server.settings": {
  "data": {
   "shadows": "django.conf.settings"
  },
  "type": "import"
 },
 "authlib.django.oauth1.authorization_server.url_encode": {
  "data": {
   "shadows": "authlib.common.urls.url_encode"
  },
  "type": "import"
 },
 "authlib.django.oauth1.nonce": {
  "data": {},
  "type": "module"
 },
 "authlib.django.oauth1.nonce.cache": {
  "data": {
   "shadows": "django.core.cache.cache"
  },
  "type": "import"
 },
 "authlib.django.oauth1.nonce.exists_nonce_in_cache": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "bool",
    "django.core.cache.cache.get",
    "django.core.cache.cache.set"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.resource_protector": {
  "data": {},
  "type": "module"
 },
 "authlib.django.oauth1.resource_protector.JsonResponse": {
  "data": {
   "shadows": "django.http.JsonResponse"
  },
  "type": "import"
 },
 "authlib.django.oauth1.resource_protector.OAuth1Error": {
  "data": {
   "shadows": "authlib.specs.rfc5849.OAuth1Error"
  },
  "type": "import"
 },
 "authlib.django.oauth1.resource_protector.ResourceProtector": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.ResourceProtector"
   ]
  },
  "type": "class"
 },
 "authlib.django.oauth1.resource_protector.ResourceProtector.__call__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "authlib.django.oauth1.resource_protector.ResourceProtector.__call__.wrapper": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "authlib.django.oauth1.resource_protector.ResourceProtector.__call__.wrapper.decorated": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "authlib.django.oauth1.resource_protector.functools",
    "authlib.specs.rfc5849.OAuth1Error",
    "dict",
    "django.http.JsonResponse",
    "f"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.resource_protector.ResourceProtector.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "django.conf.settings",
    "getattr",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.resource_protector.ResourceProtector.acquire_credential": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "parse_request_headers"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.resource_protector.ResourceProtector.exists_nonce": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "exists_nonce_in_cache"
   ]
  },
  "type": "function"
 },
 "authlib.django.oauth1.resource_protector.ResourceProtector.get_client_by_id": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "authlib.django.oauth1.resource_protector.ResourceProtector.get_token_credential": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "authlib.django.oauth1.resource_protector._ResourceProtector": {
  "data": {
   "shadows": "authlib.specs.rfc5849.ResourceProtector"
  },
  "type": "import"
 },
 "authlib.django.oauth1.resource_protector.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "authlib.django.oauth1.resource_protector.settings": {
  "data": {
   "shadows": "django.conf.settings"
  },
  "type": "import"
 },
 "authlib.flask": {
  "data": {},
  "type": "module"
 },
 "authlib.flask.client": {
  "data": {},
  "type": "module"
 },
 "authlib.flask.client.oauth": {
  "data": {},
  "type": "module"
 },
 "authlib.flask.client.oauth.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "authlib.flask.client.oauth.MismatchingStateError": {
  "data": {
   "shadows": "authlib.client.errors.MismatchingStateError"
  },
  "type": "import"
 },
 "authlib.flask.client.oauth.OAUTH_CLIENT_PARAMS": {
  "data": {
   "shadows": "authlib.client.client.OAUTH_CLIENT_PARAMS"
  },
  "type": "import"
 },
 "authlib.flask.client.oauth.OAuth": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.flask.client.oauth.OAuth.__getattr__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "AttributeError",
    "object.__getattribute__"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.OAuth.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.OAuth._generate_client_kwargs": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "authlib.flask.client.oauth.functools"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.OAuth._generate_oauth1_client_kwargs": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.OAuth._generate_oauth1_client_kwargs.fetch_request_token": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "authlib.flask.client.oauth._req_token_tpl",
    "flask.session.pop"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.OAuth._generate_oauth1_client_kwargs.save_request_token": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "authlib.flask.client.oauth._req_token_tpl",
    "authlib.flask.client.oauth.uuid",
    "flask.session"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.OAuth._generate_oauth2_client_kwargs": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "authlib.flask.client.oauth.functools"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.OAuth._update_config_kwargs": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "authlib.client.client.OAUTH_CLIENT_PARAMS",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.OAuth.create_client": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "RuntimeError",
    "client_cls"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.OAuth.init_app": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.OAuth.register": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.OAuthClient": {
  "data": {
   "shadows": "authlib.client.client.OAuthClient"
  },
  "type": "import"
 },
 "authlib.flask.client.oauth.RemoteApp": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "authlib.client.client.OAuthClient"
   ]
  },
  "type": "class"
 },
 "authlib.flask.client.oauth.RemoteApp.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "authlib.flask.client.oauth.RemoteApp",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.RemoteApp.authorize_access_token": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "authlib.flask.client.oauth._callback_tpl",
    "authlib.flask.client.oauth._generate_oauth2_access_token_params",
    "flask.request.args.to_dict",
    "flask.session.pop"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.RemoteApp.authorize_redirect": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "flask.redirect"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.RemoteApp.authorize_redirect._save_code_verifier": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "authlib.flask.client.oauth._code_verifier_tpl",
    "flask.session"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.RemoteApp.request": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "authlib.flask.client.oauth.RemoteApp",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.RemoteApp.save_authorize_state": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "authlib.flask.client.oauth._callback_tpl",
    "authlib.flask.client.oauth._state_tpl",
    "flask.session"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.RemoteApp.token": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "flask._app_ctx_stack.top",
    "setattr"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "authlib.flask.client.oauth._app_ctx_stack": {
  "data": {
   "shadows": "flask._app_ctx_stack"
  },
  "type": "import"
 },
 "authlib.flask.client.oauth._callback_tpl": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "authlib.flask.client.oauth._code_verifier_tpl": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "authlib.flask.client.oauth._generate_oauth2_access_token_params": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "authlib.client.errors.MismatchingStateError",
    "authlib.flask.client.oauth._code_verifier_tpl",
    "authlib.flask.client.oauth._state_tpl",
    "flask.request.args",
    "flask.request.args.get",
    "flask.request.form",
    "flask.request.form.get",
    "flask.request.method",
    "flask.session.pop"
   ]
  },
  "type": "function"
 },
 "authlib.flask.client.oauth._req_token_tpl": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "authlib.flask.client.oauth._state_tpl": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "authlib.flask.client.oauth.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "authlib.flask.client.oauth.redirect": {
  "data": {
   "shadows": "flask.redirect"
  },
  "type": "import"
 },
 "authlib.flask.client.oauth.request": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "authlib.flask.client.oauth.session": {
  "data": {
   "shadows": "flask.session"
  },
  "type": "import"
 },
 "authlib.flask.client.oauth.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "authlib.flask.error": {
  "data": {},
  "type": "module"
 },
 "authlib.flask.error.HTTPException": {
  "data": {
   "shadows": "werkzeug.exceptions.HTTPException"
  },
  "type": "import"
 },
 "authlib.flask.error._HTTPException": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "werkzeug.exceptions.HTTPException"
   ]
  },
  "type": "class"
 },
 "authlib.flask.error._HTTPException.__init__": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "authlib.flask.error._HTTPException",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.flask.error._HTTPException.get_body": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "authlib.flask.error._HTTPException.get_headers": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "authlib.flask.error.raise_http_exception": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "authlib.flask.error._HTTPException"
   ]
  },
  "type": "function"
 },
 "authlib.flask.helpers": {
  "data": {},
  "type": "module"
 },
 "authlib.flask.helpers.create_oauth_request": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "authlib.common.encoding.to_unicode",
    "flask.request",
    "flask.request.base_url",
    "flask.request.form.to_dict",
    "flask.request.headers",
    "flask.request.method",
    "flask.request.query_string",
    "isinstance",
    "request_cls"
   ]
  },
  "type": "function"
 },
 "authlib.flask.helpers.flask_req": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "authlib.flask.helpers.to_unicode": {
  "data": {
   "shadows": "authlib.common.encoding.to_unicode"
  },
  "type": "import"
 },
 "authlib.flask.oauth1": {
  "data": {},
  "type": "module"
 },
 "authlib.flask.oauth1.authorization_server": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "authlib.flask.oauth1.authorization_server.logging"
   ]
  },
  "type": "module"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.AuthorizationServer"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.check_authorization_request": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.create_authorization_response": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "authlib.deprecate.deprecate",
    "authlib.specs.rfc5849.AuthorizationServer",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.create_authorization_verifier": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "RuntimeError",
    "authlib.common.security.generate_token",
    "callable",
    "func"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.create_oauth1_request": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.OAuth1Request",
    "create_oauth_request"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.create_temporary_credential": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "RuntimeError",
    "callable",
    "func"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.create_temporary_credential_response": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "authlib.deprecate.deprecate"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.create_temporary_credentials_response": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.AuthorizationServer",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.create_token_credential": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "RuntimeError",
    "callable",
    "func"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.create_token_generator": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "werkzeug.utils.import_string"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.create_token_generator.create_token": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "secret_generator",
    "token_generator"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.create_token_generator.secret_generator": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "authlib.common.security.generate_token"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.create_token_generator.token_generator": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "authlib.common.security.generate_token"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.create_token_response": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.AuthorizationServer",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.delete_temporary_credential": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "RuntimeError",
    "callable",
    "func"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.exists_nonce": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "RuntimeError",
    "callable",
    "func"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.get_client_by_id": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.get_temporary_credential": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "RuntimeError",
    "callable",
    "func"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.handle_response": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "authlib.common.urls.url_encode",
    "flask.Response"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.init_app": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.AuthorizationServer.register_hook": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.authorization_server.OAuth1Request": {
  "data": {
   "shadows": "authlib.specs.rfc5849.OAuth1Request"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.authorization_server.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.authorization_server._AuthorizationServer": {
  "data": {
   "shadows": "authlib.specs.rfc5849.AuthorizationServer"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.authorization_server.deprecate": {
  "data": {
   "shadows": "authlib.deprecate.deprecate"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.authorization_server.generate_token": {
  "data": {
   "shadows": "authlib.common.security.generate_token"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.authorization_server.import_string": {
  "data": {
   "shadows": "werkzeug.utils.import_string"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.authorization_server.log": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "authlib.flask.oauth1.authorization_server.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.authorization_server.url_encode": {
  "data": {
   "shadows": "authlib.common.urls.url_encode"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.cache": {
  "data": {},
  "type": "module"
 },
 "authlib.flask.oauth1.cache.TemporaryCredential": {
  "data": {
   "shadows": "authlib.specs.rfc5849.TemporaryCredential"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.cache.create_exists_nonce_func": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "authlib.flask.oauth1.cache.create_exists_nonce_func.exists_nonce": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "authlib.flask.oauth1.cache.register_nonce_hooks": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "authlib.flask.oauth1.cache.create_exists_nonce_func"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.cache.register_temporary_credential_hooks": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "authlib.flask.oauth1.cache.register_temporary_credential_hooks.create_authorization_verifier": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "authlib.flask.oauth1.cache.register_temporary_credential_hooks.create_temporary_credential": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.TemporaryCredential"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.cache.register_temporary_credential_hooks.delete_temporary_credential": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "authlib.flask.oauth1.cache.register_temporary_credential_hooks.get_temporary_credential": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.TemporaryCredential"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.resource_protector": {
  "data": {
   "symbols_in_volume": [
    "authlib.flask.oauth1.resource_protector._get_current_credential",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "authlib.flask.oauth1.resource_protector.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.resource_protector.OAuth1Error": {
  "data": {
   "shadows": "authlib.specs.rfc5849.OAuth1Error"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.resource_protector.ResourceProtector": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.ResourceProtector"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth1.resource_protector.ResourceProtector.__call__": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "authlib.flask.oauth1.resource_protector.ResourceProtector.__call__.wrapper": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "authlib.flask.oauth1.resource_protector.ResourceProtector.__call__.wrapper.decorated": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "authlib.flask.oauth1.resource_protector._JSON_HEADERS",
    "authlib.flask.oauth1.resource_protector.functools",
    "authlib.specs.rfc5849.OAuth1Error",
    "dict",
    "f",
    "flask.Response",
    "flask.json.dumps"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.resource_protector.ResourceProtector.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "authlib.flask.oauth1.resource_protector.ResourceProtector.acquire_credential": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "flask._app_ctx_stack.top",
    "flask.request.form.to_dict",
    "flask.request.headers",
    "flask.request.method",
    "flask.request.url"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.resource_protector.ResourceProtector.exists_nonce": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "RuntimeError",
    "flask.request.client_id",
    "flask.request.timestamp",
    "flask.request.token"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.resource_protector.ResourceProtector.get_client_by_id": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "authlib.flask.oauth1.resource_protector.ResourceProtector.get_token_credential": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "flask.request.client_id",
    "flask.request.token"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.resource_protector.ResourceProtector.init_app": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.resource_protector.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.resource_protector._JSON_HEADERS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "authlib.flask.oauth1.resource_protector._ResourceProtector": {
  "data": {
   "shadows": "authlib.specs.rfc5849.ResourceProtector"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.resource_protector._app_ctx_stack": {
  "data": {
   "shadows": "flask._app_ctx_stack"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.resource_protector._get_current_credential": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "flask._app_ctx_stack.top",
    "getattr"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.resource_protector._req": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.resource_protector.current_credential": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "authlib.flask.oauth1.resource_protector.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.resource_protector.json": {
  "data": {
   "shadows": "flask.json"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.sqla": {
  "data": {},
  "type": "module"
 },
 "authlib.flask.oauth1.sqla.ClientMixin": {
  "data": {
   "shadows": "authlib.specs.rfc5849.ClientMixin"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.sqla.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.sqla.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.sqla.OAuth1ClientMixin": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.ClientMixin",
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth1.sqla.OAuth1ClientMixin.get_client_secret": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.OAuth1ClientMixin.get_default_redirect_uri": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.OAuth1ClientMixin.get_rsa_public_key": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.OAuth1TemporaryCredentialMixin": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.TemporaryCredentialMixin",
    "sqlalchemy.Column",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth1.sqla.OAuth1TemporaryCredentialMixin.check_verifier": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.OAuth1TemporaryCredentialMixin.get_client_id": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.OAuth1TemporaryCredentialMixin.get_oauth_token": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.OAuth1TemporaryCredentialMixin.get_oauth_token_secret": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.OAuth1TemporaryCredentialMixin.get_redirect_uri": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.OAuth1TemporaryCredentialMixin.get_user_id": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.OAuth1TemporaryCredentialMixin.set_user_id": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.OAuth1TimestampNonceMixin": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "object",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.UniqueConstraint"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth1.sqla.OAuth1TokenCredentialMixin": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.TokenCredentialMixin",
    "sqlalchemy.Column",
    "sqlalchemy.String"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth1.sqla.OAuth1TokenCredentialMixin.get_oauth_token": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.OAuth1TokenCredentialMixin.get_oauth_token_secret": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.OAuth1TokenCredentialMixin.set_user_id": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.sqla.TemporaryCredentialMixin": {
  "data": {
   "shadows": "authlib.specs.rfc5849.TemporaryCredentialMixin"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.sqla.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.sqla.TokenCredentialMixin": {
  "data": {
   "shadows": "authlib.specs.rfc5849.TokenCredentialMixin"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.sqla.UniqueConstraint": {
  "data": {
   "shadows": "sqlalchemy.UniqueConstraint"
  },
  "type": "import"
 },
 "authlib.flask.oauth1.sqla.create_exists_nonce_func": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.create_exists_nonce_func.exists_nonce": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "model_class",
    "model_class.nonce"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.create_query_client_func": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.create_query_client_func.query_client": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.create_query_token_func": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.create_query_token_func.query_token": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.register_authorization_hooks": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "authlib.flask.oauth1.sqla.register_nonce_hooks",
    "authlib.flask.oauth1.sqla.register_temporary_credential_hooks",
    "authlib.flask.oauth1.sqla.register_token_credential_hooks"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.register_nonce_hooks": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "authlib.flask.oauth1.sqla.create_exists_nonce_func",
    "model_class"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.register_temporary_credential_hooks": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.register_temporary_credential_hooks.create_authorization_verifier": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.register_temporary_credential_hooks.create_temporary_credential": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "model_class"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.register_temporary_credential_hooks.delete_temporary_credential": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "model_class"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.register_temporary_credential_hooks.get_temporary_credential": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "model_class"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.register_token_credential_hooks": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "authlib.flask.oauth1.sqla.register_token_credential_hooks.create_token_credential": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "model_class"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2": {
  "data": {},
  "type": "module"
 },
 "authlib.flask.oauth2.authorization_server": {
  "data": {},
  "type": "module"
 },
 "authlib.flask.oauth2.authorization_server.AuthorizationServer": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.AuthorizationServer"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth2.authorization_server.AuthorizationServer.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.AuthorizationServer",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.authorization_server.AuthorizationServer.create_bearer_token_generator": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "authlib.specs.rfc6750.BearerToken",
    "callable",
    "isinstance",
    "str",
    "werkzeug.utils.import_string"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.authorization_server.AuthorizationServer.create_bearer_token_generator.access_token_generator": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "authlib.common.security.generate_token"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.authorization_server.AuthorizationServer.create_bearer_token_generator.refresh_token_generator": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "authlib.common.security.generate_token"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.authorization_server.AuthorizationServer.create_oauth2_request": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.OAuth2Request",
    "create_oauth_request"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.authorization_server.AuthorizationServer.create_token_expires_in_generator": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "authlib.deprecate.deprecate",
    "authlib.flask.oauth2.authorization_server.GRANT_TYPES_EXPIRES"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.authorization_server.AuthorizationServer.create_token_expires_in_generator.expires_in": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "authlib.specs.rfc6750.BearerToken.DEFAULT_EXPIRES_IN"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.authorization_server.AuthorizationServer.get_error_uris": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.authorization_server.AuthorizationServer.handle_response": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "dict",
    "flask.Response",
    "flask.json.dumps",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.authorization_server.AuthorizationServer.init_app": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.ClientAuthentication"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.authorization_server.AuthorizationServer.init_jwt_config": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "RuntimeError",
    "authlib.common.encoding.to_unicode",
    "flask.json.load",
    "open"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.authorization_server.AuthorizationServer.send_signal": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "authlib.flask.oauth2.authorization_server.AuthorizationServer.validate_consent_request": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.authorization_server.BearerToken": {
  "data": {
   "shadows": "authlib.specs.rfc6750.BearerToken"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.authorization_server.ClientAuthentication": {
  "data": {
   "shadows": "authlib.specs.rfc6749.ClientAuthentication"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.authorization_server.GRANT_TYPES_EXPIRES": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "authlib.flask.oauth2.authorization_server.OAuth2Request": {
  "data": {
   "shadows": "authlib.specs.rfc6749.OAuth2Request"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.authorization_server.Response": {
  "data": {
   "shadows": "flask.Response"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.authorization_server._AuthorizationServer": {
  "data": {
   "shadows": "authlib.specs.rfc6749.AuthorizationServer"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.authorization_server.deprecate": {
  "data": {
   "shadows": "authlib.deprecate.deprecate"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.authorization_server.generate_token": {
  "data": {
   "shadows": "authlib.common.security.generate_token"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.authorization_server.import_string": {
  "data": {
   "shadows": "werkzeug.utils.import_string"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.authorization_server.json": {
  "data": {
   "shadows": "flask.json"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.authorization_server.to_unicode": {
  "data": {
   "shadows": "authlib.common.encoding.to_unicode"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.cache": {
  "data": {},
  "type": "module"
 },
 "authlib.flask.oauth2.cache.AuthorizationCode": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth2.cache.AuthorizationCode.__getattr__": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.cache.AuthorizationCode.get_redirect_uri": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "authlib.flask.oauth2.cache.AuthorizationCode.get_scope": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "authlib.flask.oauth2.cache.AuthorizationCodeGrant": {
  "data": {
   "shadows": "authlib.specs.rfc6749.grants.AuthorizationCodeGrant"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.cache.create_authorization_code_grant": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "authlib.flask.oauth2.cache.create_authorization_code_grant.CodeGrant": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.grants.AuthorizationCodeGrant"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth2.cache.create_authorization_code_grant.CodeGrant.authenticate_user": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "authenticate_user"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.cache.create_authorization_code_grant.CodeGrant.create_authorization_code": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "authlib.common.security.generate_token",
    "dict"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.cache.create_authorization_code_grant.CodeGrant.delete_authorization_code": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "authlib.flask.oauth2.cache.create_authorization_code_grant.CodeGrant.parse_authorization_code": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "authlib.flask.oauth2.cache.AuthorizationCode"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.cache.generate_token": {
  "data": {
   "shadows": "authlib.common.security.generate_token"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.cache.register_cache_authorization_code": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "authenticate_user",
    "authlib.flask.oauth2.cache.create_authorization_code_grant"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.resource_protector": {
  "data": {
   "symbols_in_volume": [
    "authlib.flask.oauth2.resource_protector._get_current_token",
    "werkzeug.local.LocalProxy"
   ]
  },
  "type": "module"
 },
 "authlib.flask.oauth2.resource_protector.LocalProxy": {
  "data": {
   "shadows": "werkzeug.local.LocalProxy"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.resource_protector.MissingAuthorizationError": {
  "data": {
   "shadows": "authlib.specs.rfc6749.MissingAuthorizationError"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.resource_protector.OAuth2Error": {
  "data": {
   "shadows": "authlib.specs.rfc6749.OAuth2Error"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.resource_protector.ResourceProtector": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.ResourceProtector"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth2.resource_protector.ResourceProtector.__call__": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "authlib.flask.oauth2.resource_protector.ResourceProtector.__call__.wrapper": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "authlib.flask.oauth2.resource_protector.ResourceProtector.__call__.wrapper.decorated": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "authlib.flask.oauth2.resource_protector.functools",
    "authlib.specs.rfc6749.MissingAuthorizationError",
    "authlib.specs.rfc6749.OAuth2Error",
    "f"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.resource_protector.ResourceProtector.acquire": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.OAuth2Error",
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.resource_protector.ResourceProtector.acquire_token": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.TokenRequest",
    "callable",
    "flask._app_ctx_stack.top",
    "flask.request",
    "flask.request.data",
    "flask.request.full_path",
    "flask.request.headers",
    "flask.request.method"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.resource_protector.ResourceProtector.raise_error_response": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dict",
    "flask.json.dumps",
    "raise_http_exception"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.resource_protector.TokenRequest": {
  "data": {
   "shadows": "authlib.specs.rfc6749.TokenRequest"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.resource_protector._ResourceProtector": {
  "data": {
   "shadows": "authlib.specs.rfc6749.ResourceProtector"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.resource_protector._app_ctx_stack": {
  "data": {
   "shadows": "flask._app_ctx_stack"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.resource_protector._get_current_token": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "flask._app_ctx_stack.top",
    "getattr"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.resource_protector._req": {
  "data": {
   "shadows": "flask.request"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.resource_protector.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.resource_protector.current_token": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "authlib.flask.oauth2.resource_protector.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.resource_protector.json": {
  "data": {
   "shadows": "flask.json"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.signals": {
  "data": {
   "symbols_in_volume": [
    "authlib.flask.oauth2.signals._signal",
    "flask.signals.Namespace"
   ]
  },
  "type": "module"
 },
 "authlib.flask.oauth2.signals.Namespace": {
  "data": {
   "shadows": "flask.signals.Namespace"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.signals._signal": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "authlib.flask.oauth2.signals.client_authenticated": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "authlib.flask.oauth2.signals.token_authenticated": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "authlib.flask.oauth2.signals.token_revoked": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "authlib.flask.oauth2.sqla": {
  "data": {},
  "type": "module"
 },
 "authlib.flask.oauth2.sqla.AuthorizationCodeMixin": {
  "data": {
   "shadows": "authlib.specs.rfc6749.AuthorizationCodeMixin"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.sqla.BearerTokenValidator": {
  "data": {
   "shadows": "authlib.specs.rfc6750.BearerTokenValidator"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.sqla.Boolean": {
  "data": {
   "shadows": "sqlalchemy.Boolean"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.sqla.ClientMixin": {
  "data": {
   "shadows": "authlib.specs.rfc6749.ClientMixin"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.sqla.Column": {
  "data": {
   "shadows": "sqlalchemy.Column"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.sqla.Integer": {
  "data": {
   "shadows": "sqlalchemy.Integer"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.sqla.OAuth2AuthorizationCodeMixin": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "authlib.flask.oauth2.sqla.time",
    "authlib.specs.oidc.AuthorizationCodeMixin",
    "int",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth2.sqla.OAuth2AuthorizationCodeMixin.get_auth_time": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2AuthorizationCodeMixin.get_redirect_uri": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2AuthorizationCodeMixin.get_scope": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2AuthorizationCodeMixin.is_expired": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "authlib.flask.oauth2.sqla.time"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "authlib.flask.oauth2.sqla.time",
    "authlib.specs.rfc6749.ClientMixin",
    "int",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.__repr__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.check_client_secret": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.check_grant_type": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.check_redirect_uri": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.check_requested_scopes": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.check_response_type": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.check_token_endpoint_auth_method": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.client_info": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "dict",
    "property"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.client_metadata": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "authlib.flask.oauth2.sqla.json",
    "hasattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.contacts": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "authlib.flask.oauth2.sqla.json"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.get_default_redirect_uri": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.grant_types": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.has_client_secret": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.jwks": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "authlib.flask.oauth2.sqla.json"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.redirect_uris": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2ClientMixin.response_types": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2TokenMixin": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "authlib.flask.oauth2.sqla.time",
    "authlib.specs.rfc6749.TokenMixin",
    "int",
    "sqlalchemy.Boolean",
    "sqlalchemy.Column",
    "sqlalchemy.Integer",
    "sqlalchemy.String",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth2.sqla.OAuth2TokenMixin.get_expires_at": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2TokenMixin.get_expires_in": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OAuth2TokenMixin.get_scope": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OIDCAuthorizationCodeMixin": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "authlib.flask.oauth2.sqla.OAuth2AuthorizationCodeMixin",
    "authlib.specs.oidc.AuthorizationCodeMixin",
    "sqlalchemy.Column",
    "sqlalchemy.Text"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth2.sqla.OIDCAuthorizationCodeMixin.get_nonce": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.OIDCCodeMixin": {
  "data": {
   "shadows": "authlib.specs.oidc.AuthorizationCodeMixin"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.sqla.RevocationEndpoint": {
  "data": {
   "shadows": "authlib.specs.rfc7009.RevocationEndpoint"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.sqla.String": {
  "data": {
   "shadows": "sqlalchemy.String"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.sqla.Text": {
  "data": {
   "shadows": "sqlalchemy.Text"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.sqla.TokenMixin": {
  "data": {
   "shadows": "authlib.specs.rfc6749.TokenMixin"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.sqla.create_bearer_token_validator": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.create_bearer_token_validator._BearerTokenValidator": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "authlib.specs.rfc6750.BearerTokenValidator"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth2.sqla.create_bearer_token_validator._BearerTokenValidator.authenticate_token": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "token_model"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.create_bearer_token_validator._BearerTokenValidator.request_invalid": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.create_bearer_token_validator._BearerTokenValidator.token_revoked": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.create_query_client_func": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.create_query_client_func.query_client": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.create_query_token_func": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.create_query_token_func.query_token": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "token_model"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.create_revocation_endpoint": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "authlib.flask.oauth2.sqla.create_query_token_func",
    "token_model"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.create_revocation_endpoint._RevocationEndpoint": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "authlib.specs.rfc7009.RevocationEndpoint"
   ]
  },
  "type": "class"
 },
 "authlib.flask.oauth2.sqla.create_revocation_endpoint._RevocationEndpoint.query_token": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "query_token"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.create_revocation_endpoint._RevocationEndpoint.revoke_token": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.create_save_token_func": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.create_save_token_func.save_token": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "token_model"
   ]
  },
  "type": "function"
 },
 "authlib.flask.oauth2.sqla.hybrid_property": {
  "data": {
   "shadows": "sqlalchemy.ext.hybrid.hybrid_property"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.sqla.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "authlib.flask.oauth2.sqla.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "authlib.specs": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.oidc": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.oidc.errors": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.oidc.errors.AccountSelectionRequiredError": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.oidc.errors.ConsentRequiredError": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.oidc.errors.InteractionRequiredError": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.oidc.errors.InvalidRequestObjectError": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.oidc.errors.InvalidRequestURIError": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.oidc.errors.LoginRequiredError": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.oidc.errors.OAuth2Error": {
  "data": {
   "shadows": "authlib.specs.rfc6749.OAuth2Error"
  },
  "type": "import"
 },
 "authlib.specs.oidc.errors.RegistrationNotSupportedError": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.oidc.errors.RequestNotSupportedError": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.oidc.errors.RequestURINotSupportedError": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.oidc.grants": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.oidc.grants.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "authlib.specs.oidc.grants.code": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "authlib.specs.oidc.grants.code.logging"
   ]
  },
  "type": "module"
 },
 "authlib.specs.oidc.grants.code.AuthorizationCodeGrant": {
  "data": {
   "shadows": "authlib.specs.rfc6749.grants.AuthorizationCodeGrant"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.code.OpenIDCode": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.oidc.grants.code.OpenIDCode.__call__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "is_openid_scope"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.code.OpenIDCode.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.code.OpenIDCode.process_token": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "generate_id_token",
    "is_openid_scope"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.code.OpenIDCode.validate_openid_authorization_request": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "validate_nonce"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.code.OpenIDCodeGrant": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.grants.AuthorizationCodeGrant"
   ]
  },
  "type": "class"
 },
 "authlib.specs.oidc.grants.code.OpenIDCodeGrant.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "authlib.specs.oidc.grants.code.OpenIDCode",
    "authlib.specs.oidc.grants.code.OpenIDCodeGrant",
    "extension",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.code.OpenIDCodeGrant.exists_nonce": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.code.log": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "authlib.specs.oidc.grants.code.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.hybrid": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "authlib.specs.oidc.grants.hybrid.logging"
   ]
  },
  "type": "module"
 },
 "authlib.specs.oidc.grants.hybrid.AccessDeniedError": {
  "data": {
   "shadows": "authlib.specs.rfc6749.AccessDeniedError"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.hybrid.AuthorizationCodeGrant": {
  "data": {
   "shadows": "authlib.specs.rfc6749.grants.AuthorizationCodeGrant"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.hybrid.InvalidScopeError": {
  "data": {
   "shadows": "authlib.specs.rfc6749.InvalidScopeError"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.hybrid.OpenIDHybridGrant": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.grants.AuthorizationCodeGrant"
   ]
  },
  "type": "class"
 },
 "authlib.specs.oidc.grants.hybrid.OpenIDHybridGrant.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "OpenIDCode",
    "authlib.specs.oidc.grants.hybrid.OpenIDHybridGrant",
    "extension",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.hybrid.OpenIDHybridGrant._create_granted_params": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "authlib.specs.oidc.grants.hybrid.log"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.hybrid.OpenIDHybridGrant._process_implicit_token": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "generate_id_token"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.hybrid.OpenIDHybridGrant.check_authorization_endpoint": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.hybrid.OpenIDHybridGrant.create_authorization_response": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.AccessDeniedError",
    "create_response_mode_response"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.hybrid.OpenIDHybridGrant.exists_nonce": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.hybrid.OpenIDHybridGrant.validate_authorization_request": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "authlib.specs.oidc.grants.hybrid.OpenIDHybridGrant",
    "authlib.specs.rfc6749.InvalidScopeError",
    "is_openid_scope",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.hybrid.log": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "authlib.specs.oidc.grants.hybrid.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.implicit": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "authlib.specs.oidc.grants.implicit.logging"
   ]
  },
  "type": "module"
 },
 "authlib.specs.oidc.grants.implicit.AccessDeniedError": {
  "data": {
   "shadows": "authlib.specs.rfc6749.AccessDeniedError"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.implicit.ImplicitGrant": {
  "data": {
   "shadows": "authlib.specs.rfc6749.grants.ImplicitGrant"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.implicit.InvalidScopeError": {
  "data": {
   "shadows": "authlib.specs.rfc6749.InvalidScopeError"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.implicit.OpenIDImplicitGrant": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.grants.ImplicitGrant"
   ]
  },
  "type": "class"
 },
 "authlib.specs.oidc.grants.implicit.OpenIDImplicitGrant._process_implicit_token": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "generate_id_token"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.implicit.OpenIDImplicitGrant.check_authorization_endpoint": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.implicit.OpenIDImplicitGrant.create_authorization_response": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "authlib.specs.oidc.grants.implicit.log",
    "authlib.specs.rfc6749.AccessDeniedError",
    "create_response_mode_response"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.implicit.OpenIDImplicitGrant.exists_nonce": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.implicit.OpenIDImplicitGrant.validate_authorization_request": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "authlib.specs.oidc.grants.implicit.OpenIDImplicitGrant",
    "authlib.specs.rfc6749.InvalidScopeError",
    "is_openid_scope",
    "super",
    "validate_nonce"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.implicit.OpenIDImplicitGrant.validate_consent_request": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "validate_request_prompt"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.implicit.log": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "authlib.specs.oidc.grants.implicit.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.util": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.oidc.grants.util.InvalidRequestError": {
  "data": {
   "shadows": "authlib.specs.rfc6749.InvalidRequestError"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.util.JWT": {
  "data": {
   "shadows": "authlib.specs.rfc7519.JWT"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.util._generate_id_token_payload": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "authlib.common.encoding.to_native",
    "authlib.specs.oidc.grants.util.time",
    "create_half_hash",
    "int"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.util._generate_user_info": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.util._guess_prompt_value": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "AccountSelectionRequiredError",
    "ConsentRequiredError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.util._jwt_encode": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "authlib.common.encoding.to_native",
    "authlib.specs.oidc.grants.util.random",
    "authlib.specs.rfc7519.JWT",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.util.add_params_to_uri": {
  "data": {
   "shadows": "authlib.common.urls.add_params_to_uri"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.util.create_response_mode_response": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "authlib.common.urls.add_params_to_uri",
    "authlib.common.urls.quote_url",
    "authlib.specs.rfc6749.InvalidRequestError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.util.generate_id_token": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "authlib.specs.oidc.grants.util._generate_id_token_payload",
    "authlib.specs.oidc.grants.util._generate_user_info",
    "authlib.specs.oidc.grants.util._jwt_encode",
    "authlib.specs.rfc6749.util.scope_to_list"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.util.is_openid_scope": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.util.scope_to_list"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.util.quote_url": {
  "data": {
   "shadows": "authlib.common.urls.quote_url"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.util.scope_to_list": {
  "data": {
   "shadows": "authlib.specs.rfc6749.util.scope_to_list"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.util.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.util.to_native": {
  "data": {
   "shadows": "authlib.common.encoding.to_native"
  },
  "type": "import"
 },
 "authlib.specs.oidc.grants.util.validate_nonce": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.InvalidRequestError",
    "exists_nonce"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.grants.util.validate_request_prompt": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "LoginRequiredError",
    "authlib.specs.oidc.grants.util._guess_prompt_value",
    "authlib.specs.rfc6749.InvalidRequestError",
    "len"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.models": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.oidc.models.AuthorizationCodeMixin": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.AuthorizationCodeMixin"
   ]
  },
  "type": "class"
 },
 "authlib.specs.oidc.models.AuthorizationCodeMixin.get_auth_time": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.models.AuthorizationCodeMixin.get_nonce": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.models._AuthorizationCodeMixin": {
  "data": {
   "shadows": "authlib.specs.rfc6749.AuthorizationCodeMixin"
  },
  "type": "import"
 },
 "authlib.specs.oidc.util": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.oidc.util.create_half_hash": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes",
    "authlib.common.encoding.urlsafe_b64encode",
    "authlib.specs.oidc.util.hashlib",
    "getattr",
    "hash_alg",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "authlib.specs.oidc.util.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "authlib.specs.oidc.util.to_bytes": {
  "data": {
   "shadows": "authlib.common.encoding.to_bytes"
  },
  "type": "import"
 },
 "authlib.specs.oidc.util.urlsafe_b64encode": {
  "data": {
   "shadows": "authlib.common.encoding.urlsafe_b64encode"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc5849.authorization_server": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer._get_client": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer.create_authorization_response": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "AccessDeniedError",
    "authlib.common.urls.add_params_to_uri"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer.create_authorization_verifier": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer.create_oauth1_request": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer.create_temporary_credential": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer.create_temporary_credentials_response": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer.create_token_credential": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer.create_token_response": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer.delete_temporary_credential": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer.get_temporary_credential": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer.handle_error_response": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer.handle_response": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer.validate_authorization_request": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "InvalidTokenError",
    "MissingRequiredParameterError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer.validate_temporary_credentials_request": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "InvalidClientError",
    "InvalidRequestError",
    "MethodNotAllowedError",
    "MissingRequiredParameterError",
    "authlib.common.urls.is_valid_url"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.AuthorizationServer.validate_token_request": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "InvalidClientError",
    "InvalidRequestError",
    "InvalidTokenError",
    "MissingRequiredParameterError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.authorization_server.add_params_to_uri": {
  "data": {
   "shadows": "authlib.common.urls.add_params_to_uri"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.authorization_server.is_valid_url": {
  "data": {
   "shadows": "authlib.common.urls.is_valid_url"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.base_server": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc5849.base_server.BaseServer": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.base_server.BaseServer.exists_nonce": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.base_server.BaseServer.get_client_by_id": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.base_server.BaseServer.register_signature_method": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.base_server.BaseServer.validate_oauth_signature": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "InvalidSignatureError",
    "MissingRequiredParameterError",
    "UnsupportedSignatureMethodError",
    "verify"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.base_server.BaseServer.validate_timestamp_and_nonce": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "InvalidNonceError",
    "InvalidRequestError",
    "MissingRequiredParameterError",
    "TypeError",
    "ValueError",
    "authlib.specs.rfc5849.base_server.time",
    "int"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.base_server.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.client": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc5849.client.CONTENT_TYPE_FORM_URLENCODED": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "authlib.specs.rfc5849.client.CONTENT_TYPE_MULTI_PART": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "authlib.specs.rfc5849.client.Client": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.client.Client.__init__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.client.Client._render": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "authlib.common.urls.extract_params",
    "authlib.specs.rfc5849.client.CONTENT_TYPE_FORM_URLENCODED",
    "prepare_form_encoded_body",
    "prepare_headers",
    "prepare_request_uri_query"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.client.Client.get_oauth_params": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes",
    "authlib.common.encoding.to_native",
    "authlib.specs.rfc5849.client.CONTENT_TYPE_FORM_URLENCODED",
    "authlib.specs.rfc5849.client.base64",
    "authlib.specs.rfc5849.client.hashlib"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.client.Client.get_oauth_signature": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "OAuth1Request",
    "ValueError",
    "sign"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.client.Client.register_signature_method": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.client.Client.sign": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.client.generate_nonce",
    "authlib.specs.rfc5849.client.generate_timestamp",
    "str"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.client.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.client.extract_params": {
  "data": {
   "shadows": "authlib.common.urls.extract_params"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.client.generate_nonce": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "authlib.common.security.generate_token"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.client.generate_timestamp": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.client.time",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.client.generate_token": {
  "data": {
   "shadows": "authlib.common.security.generate_token"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.client.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.client.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.client.to_bytes": {
  "data": {
   "shadows": "authlib.common.encoding.to_bytes"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.client.to_native": {
  "data": {
   "shadows": "authlib.common.encoding.to_native"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.errors": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc5849.errors.AccessDeniedError": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.errors.OAuth1Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.errors.AccessDeniedError.get_error_description": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.errors.AuthlibHTTPError": {
  "data": {
   "shadows": "authlib.common.errors.AuthlibHTTPError"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.errors.DuplicatedOAuthProtocolParameterError": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.errors.OAuth1Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.errors.InsecureTransportError": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.errors.OAuth1Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.errors.InsecureTransportError.check": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "authlib.common.security.is_secure_transport",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.errors.InsecureTransportError.get_error_description": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.errors.InvalidClientError": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.errors.OAuth1Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.errors.InvalidNonceError": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.errors.OAuth1Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.errors.InvalidRequestError": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.errors.OAuth1Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.errors.InvalidSignatureError": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.errors.OAuth1Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.errors.InvalidTokenError": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.errors.OAuth1Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.errors.InvalidTokenError.get_error_description": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.errors.MethodNotAllowedError": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.errors.OAuth1Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.errors.MissingRequiredParameterError": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.errors.OAuth1Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.errors.MissingRequiredParameterError.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.errors.MissingRequiredParameterError",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.errors.MissingRequiredParameterError.get_error_description": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.errors.OAuth1Error": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "authlib.common.errors.AuthlibHTTPError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.errors.OAuth1Error.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.errors.OAuth1Error",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.errors.OAuth1Error.get_headers": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.errors.UnsupportedParameterError": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.errors.OAuth1Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.errors.UnsupportedSignatureMethodError": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.errors.OAuth1Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.errors.is_secure_transport": {
  "data": {
   "shadows": "authlib.common.security.is_secure_transport"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.models": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc5849.models.ClientMixin": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.models.ClientMixin.get_client_secret": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.models.ClientMixin.get_default_redirect_uri": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.models.ClientMixin.get_rsa_public_key": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.models.TemporaryCredential": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.models.TemporaryCredentialMixin",
    "dict"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.models.TemporaryCredential.check_verifier": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.models.TemporaryCredential.get_client_id": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.models.TemporaryCredential.get_oauth_token": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.models.TemporaryCredential.get_oauth_token_secret": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.models.TemporaryCredential.get_redirect_uri": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.models.TemporaryCredential.get_user_id": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.models.TemporaryCredentialMixin": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.models.TokenCredentialMixin"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.models.TemporaryCredentialMixin.check_verifier": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.models.TemporaryCredentialMixin.get_client_id": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.models.TemporaryCredentialMixin.get_redirect_uri": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.models.TokenCredentialMixin": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.models.TokenCredentialMixin.get_oauth_token": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.models.TokenCredentialMixin.get_oauth_token_secret": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.parameters": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc5849.parameters._append_params": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.parameters.extract_params": {
  "data": {
   "shadows": "authlib.common.urls.extract_params"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.parameters.prepare_form_encoded_body": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "authlib.common.urls.url_encode",
    "authlib.specs.rfc5849.parameters._append_params"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.parameters.prepare_headers": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "escape"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.parameters.prepare_request_uri_query": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "authlib.common.urls.extract_params",
    "authlib.common.urls.url_encode",
    "authlib.common.urls.urlparse.urlparse",
    "authlib.common.urls.urlparse.urlunparse",
    "authlib.specs.rfc5849.parameters._append_params"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.parameters.url_encode": {
  "data": {
   "shadows": "authlib.common.urls.url_encode"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.parameters.urlparse": {
  "data": {
   "shadows": "authlib.common.urls.urlparse"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.resource_protector": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc5849.resource_protector.ResourceProtector": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.resource_protector.ResourceProtector.get_token_credential": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.resource_protector.ResourceProtector.validate_request": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "InvalidClientError",
    "InvalidTokenError",
    "MissingRequiredParameterError",
    "OAuth1Request"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.rsa": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc5849.rsa.InvalidSignature": {
  "data": {
   "shadows": "cryptography.exceptions.InvalidSignature"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.rsa.default_backend": {
  "data": {
   "shadows": "cryptography.hazmat.backends.default_backend"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.rsa.hashes": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.hashes"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.rsa.load_pem_private_key": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.serialization.load_pem_private_key"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.rsa.load_pem_public_key": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.serialization.load_pem_public_key"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.rsa.padding": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.padding"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.rsa.sign_sha1": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes",
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15",
    "cryptography.hazmat.primitives.hashes.SHA1",
    "cryptography.hazmat.primitives.serialization.load_pem_private_key"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.rsa.to_bytes": {
  "data": {
   "shadows": "authlib.common.encoding.to_bytes"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.rsa.verify_sha1": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes",
    "cryptography.exceptions.InvalidSignature",
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15",
    "cryptography.hazmat.primitives.hashes.SHA1",
    "cryptography.hazmat.primitives.serialization.load_pem_public_key"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.signature": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc5849.signature.SIGNATURE_HMAC_SHA1": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "authlib.specs.rfc5849.signature.SIGNATURE_PLAINTEXT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "authlib.specs.rfc5849.signature.SIGNATURE_RSA_SHA1": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "authlib.specs.rfc5849.signature.SIGNATURE_TYPE_BODY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "authlib.specs.rfc5849.signature.SIGNATURE_TYPE_HEADER": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "authlib.specs.rfc5849.signature.SIGNATURE_TYPE_QUERY": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "authlib.specs.rfc5849.signature.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.signature.construct_base_string": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.signature.normalize_base_string_uri",
    "authlib.specs.rfc5849.signature.normalize_parameters",
    "escape",
    "unescape"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.signature.generate_signature_base_string": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.signature.construct_base_string"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.signature.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.signature.hmac": {
  "data": {
   "shadows": "hmac"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.signature.hmac_sha1_signature": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes",
    "authlib.common.encoding.to_unicode",
    "authlib.specs.rfc5849.signature.binascii",
    "authlib.specs.rfc5849.signature.hashlib",
    "authlib.specs.rfc5849.signature.hmac",
    "escape"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.signature.normalize_base_string_uri": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "authlib.common.encoding.to_unicode",
    "authlib.common.urls.urlparse.urlparse",
    "authlib.common.urls.urlparse.urlunparse"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.signature.normalize_parameters": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "escape"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.signature.plaintext_signature": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "escape"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.signature.rsa_sha1_signature": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes",
    "authlib.common.encoding.to_unicode",
    "authlib.specs.rfc5849.signature.binascii",
    "sign_sha1"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.signature.sign_hmac_sha1": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.signature.generate_signature_base_string",
    "authlib.specs.rfc5849.signature.hmac_sha1_signature"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.signature.sign_plaintext": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.signature.plaintext_signature"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.signature.sign_rsa_sha1": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.signature.generate_signature_base_string",
    "authlib.specs.rfc5849.signature.rsa_sha1_signature"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.signature.to_bytes": {
  "data": {
   "shadows": "authlib.common.encoding.to_bytes"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.signature.to_unicode": {
  "data": {
   "shadows": "authlib.common.encoding.to_unicode"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.signature.urlparse": {
  "data": {
   "shadows": "authlib.common.urls.urlparse"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.signature.verify_hmac_sha1": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.signature.generate_signature_base_string",
    "authlib.specs.rfc5849.signature.hmac",
    "authlib.specs.rfc5849.signature.hmac_sha1_signature"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.signature.verify_plaintext": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "authlib.specs.rfc5849.signature.hmac",
    "authlib.specs.rfc5849.signature.plaintext_signature"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.signature.verify_rsa_sha1": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes",
    "authlib.specs.rfc5849.signature.binascii",
    "authlib.specs.rfc5849.signature.generate_signature_base_string",
    "verify_sha1"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.util": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc5849.util.escape": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "authlib.common.urls.quote"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.util.quote": {
  "data": {
   "shadows": "authlib.common.urls.quote"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.util.unescape": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "authlib.common.urls.unquote"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.util.unquote": {
  "data": {
   "shadows": "authlib.common.urls.unquote"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.wrapper": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc5849.wrapper.OAuth1Request": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc5849.wrapper.OAuth1Request.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "authlib.common.urls.extract_params",
    "authlib.common.urls.url_decode",
    "authlib.common.urls.urlparse.urlparse",
    "authlib.specs.rfc5849.wrapper._parse_authorization_header",
    "authlib.specs.rfc5849.wrapper._parse_oauth_params"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.wrapper.OAuth1Request.client_id": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.wrapper.OAuth1Request.client_secret": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.wrapper.OAuth1Request.redirect_uri": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.wrapper.OAuth1Request.rsa_public_key": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.wrapper.OAuth1Request.signature": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.wrapper.OAuth1Request.signature_method": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.wrapper.OAuth1Request.timestamp": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.wrapper.OAuth1Request.token": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.wrapper.OAuth1Request.token_secret": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.wrapper._filter_oauth": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.wrapper._parse_authorization_header": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "authlib.common.urls.parse_http_list",
    "authlib.common.urls.parse_keqv_list",
    "dict",
    "len",
    "unescape"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.wrapper._parse_oauth_params": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "DuplicatedOAuthProtocolParameterError",
    "authlib.specs.rfc5849.wrapper._filter_oauth",
    "dict",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc5849.wrapper.extract_params": {
  "data": {
   "shadows": "authlib.common.urls.extract_params"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.wrapper.parse_http_list": {
  "data": {
   "shadows": "authlib.common.urls.parse_http_list"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.wrapper.parse_keqv_list": {
  "data": {
   "shadows": "authlib.common.urls.parse_keqv_list"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.wrapper.url_decode": {
  "data": {
   "shadows": "authlib.common.urls.url_decode"
  },
  "type": "import"
 },
 "authlib.specs.rfc5849.wrapper.urlparse": {
  "data": {
   "shadows": "authlib.common.urls.urlparse"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6749.errors": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6749.errors.AccessDeniedError": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.AccessDeniedError.get_error_description": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.errors.AuthlibHTTPError": {
  "data": {
   "shadows": "authlib.common.errors.AuthlibHTTPError"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.errors.InsecureTransportError": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.InsecureTransportError.check": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "authlib.common.security.is_secure_transport",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.errors.InsecureTransportError.get_error_description": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.errors.InvalidClientError": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.InvalidClientError.get_headers": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.InvalidClientError",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.errors.InvalidGrantError": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.InvalidRequestError": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.InvalidScopeError": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.InvalidScopeError.get_error_description": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.errors.MismatchingStateException": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.MissingAuthorizationError": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.MissingAuthorizationError.get_error_description": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.errors.MissingCodeException": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.MissingTokenException": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.MissingTokenTypeException": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.OAuth2Error": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "authlib.common.errors.AuthlibHTTPError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.OAuth2Error.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.errors.OAuth2Error.get_body": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.errors.UnauthorizedClientError": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.UnsupportedGrantTypeError": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.UnsupportedTokenTypeError": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.errors.OAuth2Error"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.errors.__all__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "authlib.specs.rfc6749.errors.is_secure_transport": {
  "data": {
   "shadows": "authlib.common.security.is_secure_transport"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.grants": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6749.grants.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "authlib.specs.rfc6749.grants.authorization_code": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "authlib.specs.rfc6749.grants.authorization_code.logging"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc6749.grants.authorization_code.AuthorizationCodeGrant": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.grants.authorization_code.AuthorizationCodeGrant.authenticate_user": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.authorization_code.AuthorizationCodeGrant.create_authorization_code": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.authorization_code.AuthorizationCodeGrant.create_authorization_response": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "AccessDeniedError",
    "authlib.common.urls.add_params_to_uri"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.authorization_code.AuthorizationCodeGrant.create_token_response": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "InvalidRequestError",
    "authlib.specs.rfc6749.grants.authorization_code.log"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.authorization_code.AuthorizationCodeGrant.delete_authorization_code": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.authorization_code.AuthorizationCodeGrant.parse_authorization_code": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.authorization_code.AuthorizationCodeGrant.validate_authorization_request": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "InvalidClientError",
    "UnauthorizedClientError",
    "authlib.specs.rfc6749.grants.authorization_code.log"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.authorization_code.AuthorizationCodeGrant.validate_token_request": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "InvalidRequestError",
    "UnauthorizedClientError",
    "authlib.specs.rfc6749.grants.authorization_code.log",
    "hook"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.authorization_code.add_params_to_uri": {
  "data": {
   "shadows": "authlib.common.urls.add_params_to_uri"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.grants.authorization_code.log": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "authlib.specs.rfc6749.grants.authorization_code.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.grants.base": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6749.grants.base.BaseGrant": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.grants.base.BaseGrant.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.base.BaseGrant.authenticate_token_endpoint_client": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.base.BaseGrant.check_token_endpoint": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.base.BaseGrant.client": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.base.BaseGrant.execute_hook": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "hook"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.base.BaseGrant.generate_token": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.base.BaseGrant.register_hook": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.base.BaseGrant.validate_requested_scope": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "InvalidScopeError",
    "scope_to_list",
    "set"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.base.RedirectAuthGrant": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.grants.base.BaseGrant"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.grants.base.RedirectAuthGrant.check_authorization_endpoint": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.base.RedirectAuthGrant.validate_authorization_redirect_uri": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "InvalidRequestError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.base.RedirectAuthGrant.validate_authorization_request": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.base.RedirectAuthGrant.validate_consent_request": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.client_credentials": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "authlib.specs.rfc6749.grants.client_credentials.logging"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc6749.grants.client_credentials.ClientCredentialsGrant": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.grants.client_credentials.ClientCredentialsGrant.create_token_response": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.grants.client_credentials.log"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.client_credentials.ClientCredentialsGrant.validate_token_request": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "UnauthorizedClientError",
    "authlib.specs.rfc6749.grants.client_credentials.log"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.client_credentials.log": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "authlib.specs.rfc6749.grants.client_credentials.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.grants.implicit": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "authlib.specs.rfc6749.grants.implicit.logging"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc6749.grants.implicit.ImplicitGrant": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.grants.implicit.ImplicitGrant.create_authorization_response": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "AccessDeniedError",
    "authlib.common.urls.add_params_to_uri",
    "authlib.specs.rfc6749.grants.implicit.log"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.implicit.ImplicitGrant.validate_authorization_request": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "UnauthorizedClientError",
    "authlib.specs.rfc6749.grants.implicit.log"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.implicit.add_params_to_uri": {
  "data": {
   "shadows": "authlib.common.urls.add_params_to_uri"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.grants.implicit.log": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "authlib.specs.rfc6749.grants.implicit.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.grants.refresh_token": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "authlib.specs.rfc6749.grants.refresh_token.logging"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc6749.grants.refresh_token.RefreshTokenGrant": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.grants.refresh_token.RefreshTokenGrant._validate_request_client": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "UnauthorizedClientError",
    "authlib.specs.rfc6749.grants.refresh_token.log"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.refresh_token.RefreshTokenGrant._validate_request_token": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "InvalidRequestError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.refresh_token.RefreshTokenGrant._validate_token_scope": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "InvalidScopeError",
    "scope_to_list",
    "set"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.refresh_token.RefreshTokenGrant.authenticate_refresh_token": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.refresh_token.RefreshTokenGrant.authenticate_user": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.refresh_token.RefreshTokenGrant.create_token_response": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "InvalidRequestError",
    "authlib.specs.rfc6749.grants.refresh_token.log"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.refresh_token.RefreshTokenGrant.validate_token_request": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.refresh_token.log": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "authlib.specs.rfc6749.grants.refresh_token.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.grants.resource_owner_password_credentials": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "authlib.specs.rfc6749.grants.resource_owner_password_credentials.logging"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc6749.grants.resource_owner_password_credentials.ResourceOwnerPasswordCredentialsGrant": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.grants.resource_owner_password_credentials.ResourceOwnerPasswordCredentialsGrant.authenticate_user": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.resource_owner_password_credentials.ResourceOwnerPasswordCredentialsGrant.create_token_response": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.grants.resource_owner_password_credentials.log"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.resource_owner_password_credentials.ResourceOwnerPasswordCredentialsGrant.validate_token_request": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "InvalidGrantError",
    "InvalidRequestError",
    "UnauthorizedClientError",
    "authlib.specs.rfc6749.grants.resource_owner_password_credentials.log"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.grants.resource_owner_password_credentials.log": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "authlib.specs.rfc6749.grants.resource_owner_password_credentials.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.models": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6749.models.AuthorizationCodeMixin": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.models.AuthorizationCodeMixin.get_redirect_uri": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.models.AuthorizationCodeMixin.get_scope": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.models.ClientMixin": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.models.ClientMixin.check_client_secret": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.models.ClientMixin.check_client_type": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.models.ClientMixin.check_grant_type": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.models.ClientMixin.check_redirect_uri": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.models.ClientMixin.check_requested_scopes": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.models.ClientMixin.check_response_type": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.models.ClientMixin.check_token_endpoint_auth_method": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.models.ClientMixin.get_default_redirect_uri": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.models.ClientMixin.has_client_secret": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.models.TokenMixin": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.models.TokenMixin.get_expires_at": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.models.TokenMixin.get_expires_in": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.models.TokenMixin.get_scope": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.parameters": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6749.parameters.add_params_to_qs": {
  "data": {
   "shadows": "authlib.common.urls.add_params_to_qs"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.parameters.add_params_to_uri": {
  "data": {
   "shadows": "authlib.common.urls.add_params_to_uri"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.parameters.parse_authorization_code_response": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "MismatchingStateException",
    "MissingCodeException",
    "authlib.common.urls.urlparse.parse_qsl",
    "authlib.common.urls.urlparse.urlparse",
    "dict"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.parameters.parse_implicit_response": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "MismatchingStateException",
    "MissingTokenException",
    "MissingTokenTypeException",
    "authlib.common.urls.urlparse.parse_qsl",
    "authlib.common.urls.urlparse.urlparse",
    "dict"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.parameters.prepare_grant_uri": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "authlib.common.encoding.to_unicode",
    "authlib.common.urls.add_params_to_uri",
    "list_to_scope"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.parameters.prepare_token_request": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "MissingCodeException",
    "authlib.common.encoding.to_unicode",
    "authlib.common.urls.add_params_to_qs",
    "list_to_scope"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.parameters.to_unicode": {
  "data": {
   "shadows": "authlib.common.encoding.to_unicode"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.parameters.urlparse": {
  "data": {
   "shadows": "authlib.common.urls.urlparse"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.resource_protector": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6749.resource_protector.ResourceProtector": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.resource_protector.ResourceProtector.register_token_validator": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.resource_protector.ResourceProtector.validate_request": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "MissingAuthorizationError",
    "UnsupportedTokenTypeError",
    "len",
    "validator"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.token_endpoint": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6749.token_endpoint.TokenEndpoint": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.token_endpoint.TokenEndpoint.__call__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.token_endpoint.TokenEndpoint.__init__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.token_endpoint.TokenEndpoint.authenticate_endpoint_client": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.token_endpoint.TokenEndpoint.create_endpoint_response": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.token_endpoint.TokenEndpoint.validate_endpoint_request": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.util": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6749.util.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.util.extract_basic_authorization": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "TypeError",
    "authlib.common.encoding.to_unicode",
    "authlib.specs.rfc6749.util.base64"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.util.list_to_scope": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "authlib.common.encoding.to_unicode",
    "isinstance",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.util.scope_to_list": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "authlib.common.encoding.to_unicode",
    "isinstance",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.util.to_unicode": {
  "data": {
   "shadows": "authlib.common.encoding.to_unicode"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.wrappers": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6749.wrappers.OAuth2Request": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.wrappers.OAuth2Request.__getattr__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "AttributeError",
    "object.__getattribute__"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.wrappers.OAuth2Request.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "authlib.common.urls.extract_params",
    "authlib.common.urls.url_decode",
    "authlib.common.urls.urlparse.urlparse",
    "dict"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.wrappers.OAuth2Token": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.wrappers.OAuth2Token.__init__": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.wrappers.OAuth2Token",
    "authlib.specs.rfc6749.wrappers.time",
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.wrappers.OAuth2Token.from_dict": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.wrappers.OAuth2Token.is_expired": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.wrappers.time"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.wrappers.TokenRequest": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6749.wrappers.TokenRequest.__init__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "authlib.specs.rfc6749.wrappers.extract_params": {
  "data": {
   "shadows": "authlib.common.urls.extract_params"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.wrappers.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.wrappers.url_decode": {
  "data": {
   "shadows": "authlib.common.urls.url_decode"
  },
  "type": "import"
 },
 "authlib.specs.rfc6749.wrappers.urlparse": {
  "data": {
   "shadows": "authlib.common.urls.urlparse"
  },
  "type": "import"
 },
 "authlib.specs.rfc6750": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6750.errors": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6750.errors.InsufficientScopeError": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "authlib.specs.rfc6750.errors.InsufficientScopeError.get_error_description": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.errors.InvalidTokenError": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "authlib.specs.rfc6750.errors.InvalidTokenError.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "authlib.specs.rfc6750.errors.InvalidTokenError",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.errors.InvalidTokenError.get_error_description": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.errors.InvalidTokenError.get_headers": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "authlib.specs.rfc6750.errors.InvalidTokenError",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.errors.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "authlib.specs.rfc6750.parameters": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6750.parameters.add_bearer_token": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "authlib.specs.rfc6750.parameters.add_to_body",
    "authlib.specs.rfc6750.parameters.add_to_headers",
    "authlib.specs.rfc6750.parameters.add_to_uri"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.parameters.add_params_to_qs": {
  "data": {
   "shadows": "authlib.common.urls.add_params_to_qs"
  },
  "type": "import"
 },
 "authlib.specs.rfc6750.parameters.add_params_to_uri": {
  "data": {
   "shadows": "authlib.common.urls.add_params_to_uri"
  },
  "type": "import"
 },
 "authlib.specs.rfc6750.parameters.add_to_body": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "authlib.common.urls.add_params_to_qs"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.parameters.add_to_headers": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.parameters.add_to_uri": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "authlib.common.urls.add_params_to_uri"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.validator": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6750.validator.BearerTokenValidator": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6750.validator.BearerTokenValidator.__call__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "InsufficientScopeError",
    "InvalidRequestError",
    "InvalidTokenError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.validator.BearerTokenValidator.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.validator.BearerTokenValidator.authenticate_token": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.validator.BearerTokenValidator.request_invalid": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.validator.BearerTokenValidator.scope_insufficient": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "operator",
    "scope_to_list",
    "set"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.validator.BearerTokenValidator.token_expired": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "authlib.specs.rfc6750.validator.time"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.validator.BearerTokenValidator.token_revoked": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.validator.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "authlib.specs.rfc6750.wrappers": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc6750.wrappers.BearerToken": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc6750.wrappers.BearerToken.__call__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "authlib.specs.rfc6750.wrappers._gen_token"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.wrappers.BearerToken.__init__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.wrappers.BearerToken._get_expires_in": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "callable",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.wrappers._gen_token": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "authlib.deprecate.deprecate",
    "authlib.specs.rfc6750.wrappers.inspect",
    "func",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc6750.wrappers.deprecate": {
  "data": {
   "shadows": "authlib.deprecate.deprecate"
  },
  "type": "import"
 },
 "authlib.specs.rfc6750.wrappers.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "authlib.specs.rfc7009": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7009.parameters": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7009.parameters.add_params_to_qs": {
  "data": {
   "shadows": "authlib.common.urls.add_params_to_qs"
  },
  "type": "import"
 },
 "authlib.specs.rfc7009.parameters.prepare_revoke_token_request": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "authlib.common.urls.add_params_to_qs"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7009.revocation": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7009.revocation.InvalidRequestError": {
  "data": {
   "shadows": "authlib.specs.rfc6749.InvalidRequestError"
  },
  "type": "import"
 },
 "authlib.specs.rfc7009.revocation.OAuth2Error": {
  "data": {
   "shadows": "authlib.specs.rfc6749.OAuth2Error"
  },
  "type": "import"
 },
 "authlib.specs.rfc7009.revocation.RevocationEndpoint": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.TokenEndpoint"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7009.revocation.RevocationEndpoint.create_endpoint_response": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.OAuth2Error",
    "dict"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7009.revocation.RevocationEndpoint.query_token": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7009.revocation.RevocationEndpoint.revoke_token": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7009.revocation.RevocationEndpoint.validate_endpoint_request": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.InvalidRequestError",
    "authlib.specs.rfc6749.UnsupportedTokenTypeError",
    "dict"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7009.revocation.TokenEndpoint": {
  "data": {
   "shadows": "authlib.specs.rfc6749.TokenEndpoint"
  },
  "type": "import"
 },
 "authlib.specs.rfc7009.revocation.UnsupportedTokenTypeError": {
  "data": {
   "shadows": "authlib.specs.rfc6749.UnsupportedTokenTypeError"
  },
  "type": "import"
 },
 "authlib.specs.rfc7515": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7515.errors": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7515.errors.AuthlibBaseError": {
  "data": {
   "shadows": "authlib.common.errors.AuthlibBaseError"
  },
  "type": "import"
 },
 "authlib.specs.rfc7515.errors.BadSignatureError": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.errors.JWSError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7515.errors.BadSignatureError.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.errors.BadSignatureError",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7515.errors.DecodeError": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.errors.JWSError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7515.errors.InvalidHeaderParameterName": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.errors.JWSError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7515.errors.InvalidHeaderParameterName.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.errors.InvalidHeaderParameterName",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7515.errors.JWSError": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "authlib.common.errors.AuthlibBaseError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7515.errors.MissingAlgorithmError": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.errors.JWSError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7515.errors.UnsupportedAlgorithmError": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.errors.JWSError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7515.errors.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "authlib.specs.rfc7515.models": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7515.models.JWSAlgorithm": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7515.models.JWSAlgorithm.prepare_private_key": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7515.models.JWSAlgorithm.prepare_public_key": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7515.models.JWSAlgorithm.sign": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7515.models.JWSAlgorithm.verify": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7515.models.JWSHeader": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7515.models.JWSHeader.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.models.JWSHeader",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7515.models.JWSHeader.from_dict": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7515.models.JWSObject": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7515.models.JWSObject.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.models.JWSObject",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7515.models.JWSObject.headers": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7515.util": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7515.util.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "authlib.specs.rfc7515.util.extract_header": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "authlib.specs.rfc7515.util.extract_segment",
    "authlib.specs.rfc7515.util.json",
    "dict",
    "error_cls",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7515.util.extract_segment": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "authlib.common.encoding.urlsafe_b64decode",
    "authlib.specs.rfc7515.util.binascii",
    "error_cls"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7515.util.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "authlib.specs.rfc7515.util.prepare_algorithm_key": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "callable",
    "key"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7515.util.urlsafe_b64decode": {
  "data": {
   "shadows": "authlib.common.encoding.urlsafe_b64decode"
  },
  "type": "import"
 },
 "authlib.specs.rfc7516": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7516.errors": {
  "data": {
   "symbols_in_volume": [
    "authlib.specs.rfc7515.errors.JWSError"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc7516.errors.BadSignatureError": {
  "data": {
   "shadows": "authlib.specs.rfc7515.errors.BadSignatureError"
  },
  "type": "import"
 },
 "authlib.specs.rfc7516.errors.DecodeError": {
  "data": {
   "shadows": "authlib.specs.rfc7515.errors.DecodeError"
  },
  "type": "import"
 },
 "authlib.specs.rfc7516.errors.InvalidHeaderParameterName": {
  "data": {
   "shadows": "authlib.specs.rfc7515.errors.InvalidHeaderParameterName"
  },
  "type": "import"
 },
 "authlib.specs.rfc7516.errors.JWEError": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "authlib.specs.rfc7516.errors.JWSError": {
  "data": {
   "shadows": "authlib.specs.rfc7515.errors.JWSError"
  },
  "type": "import"
 },
 "authlib.specs.rfc7516.errors.MissingAlgorithmError": {
  "data": {
   "shadows": "authlib.specs.rfc7515.errors.MissingAlgorithmError"
  },
  "type": "import"
 },
 "authlib.specs.rfc7516.errors.MissingEncryptionAlgorithmError": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "authlib.specs.rfc7516.errors.JWEError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7516.errors.UnsupportedAlgorithmError": {
  "data": {
   "shadows": "authlib.specs.rfc7515.errors.UnsupportedAlgorithmError"
  },
  "type": "import"
 },
 "authlib.specs.rfc7516.errors.UnsupportedCompressionAlgorithmError": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "authlib.specs.rfc7516.errors.JWEError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7516.errors.UnsupportedEncryptionAlgorithmError": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "authlib.specs.rfc7516.errors.JWEError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7516.errors.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "authlib.specs.rfc7516.jwe": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7516.jwe.JWE": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "frozenset",
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7516.jwe.JWE.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.jwe.JWE._prepare_alg_enc_key": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.util.prepare_algorithm_key"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.jwe.JWE._validate_header": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "InvalidHeaderParameterName",
    "MissingAlgorithmError",
    "MissingEncryptionAlgorithmError",
    "UnsupportedAlgorithmError",
    "UnsupportedCompressionAlgorithmError",
    "UnsupportedEncryptionAlgorithmError",
    "zip"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.jwe.JWE._zip_compress": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.jwe.JWE._zip_decompress": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.jwe.JWE.deserialize_compact": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "DecodeError",
    "ValueError",
    "authlib.common.encoding.to_bytes",
    "authlib.specs.rfc7515.util.extract_header",
    "authlib.specs.rfc7515.util.extract_segment",
    "decode"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.jwe.JWE.register_algorithm": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.jwe.JWE.serialize_compact": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "authlib.common.encoding.json_b64encode",
    "authlib.common.encoding.to_bytes",
    "authlib.common.encoding.urlsafe_b64encode"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.jwe.extract_header": {
  "data": {
   "shadows": "authlib.specs.rfc7515.util.extract_header"
  },
  "type": "import"
 },
 "authlib.specs.rfc7516.jwe.extract_segment": {
  "data": {
   "shadows": "authlib.specs.rfc7515.util.extract_segment"
  },
  "type": "import"
 },
 "authlib.specs.rfc7516.jwe.json_b64encode": {
  "data": {
   "shadows": "authlib.common.encoding.json_b64encode"
  },
  "type": "import"
 },
 "authlib.specs.rfc7516.jwe.prepare_algorithm_key": {
  "data": {
   "shadows": "authlib.specs.rfc7515.util.prepare_algorithm_key"
  },
  "type": "import"
 },
 "authlib.specs.rfc7516.jwe.to_bytes": {
  "data": {
   "shadows": "authlib.common.encoding.to_bytes"
  },
  "type": "import"
 },
 "authlib.specs.rfc7516.jwe.urlsafe_b64encode": {
  "data": {
   "shadows": "authlib.common.encoding.urlsafe_b64encode"
  },
  "type": "import"
 },
 "authlib.specs.rfc7516.models": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7516.models.JWEAlgorithm": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7516.models.JWEAlgorithm.__init__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.models.JWEAlgorithm.prepare_private_key": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.models.JWEAlgorithm.prepare_public_key": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.models.JWEAlgorithm.unwrap": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.models.JWEAlgorithm.wrap": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.models.JWEEncAlgorithm": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7516.models.JWEEncAlgorithm.check_iv": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.models.JWEEncAlgorithm.decrypt": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.models.JWEEncAlgorithm.encrypt": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.models.JWEEncAlgorithm.generate_cek": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "authlib.specs.rfc7516.models.os"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.models.JWEEncAlgorithm.generate_iv": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "authlib.specs.rfc7516.models.os"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.models.JWEZipAlgorithm": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7516.models.JWEZipAlgorithm.compress": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.models.JWEZipAlgorithm.decompress": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7516.models.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "authlib.specs.rfc7517": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7517.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "authlib.specs.rfc7517._backends": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc7517._backends.EC_TYPES": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "authlib.specs.rfc7517._backends.RSA_TYPES": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "authlib.specs.rfc7517._backends._cryptography": {
  "data": {
   "symbols_in_volume": [
    "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey",
    "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey",
    "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey",
    "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc7517._backends._cryptography.EC_TYPES": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "authlib.specs.rfc7517._backends._cryptography.EllipticCurvePrivateKey": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"
  },
  "type": "import"
 },
 "authlib.specs.rfc7517._backends._cryptography.EllipticCurvePublicKey": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
  },
  "type": "import"
 },
 "authlib.specs.rfc7517._backends._cryptography.RSAPrivateKey": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey"
  },
  "type": "import"
 },
 "authlib.specs.rfc7517._backends._cryptography.RSAPublicKey": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
  },
  "type": "import"
 },
 "authlib.specs.rfc7517._backends._cryptography.RSA_TYPES": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "authlib.specs.rfc7517.jwk": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7517.jwk.JWK": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7517.jwk.JWK.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "authlib.specs.rfc7517.jwk.JWK._load_jwk_set": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7517.jwk.JWK._load_obj": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "authlib.specs.rfc7517.jwk.JWK.dumps": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "authlib.specs.rfc7517.jwk._add_other_params",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7517.jwk.JWK.loads": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7517.jwk.JWKAlgorithm": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7517.jwk.JWKAlgorithm.dumps": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7517.jwk.JWKAlgorithm.loads": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7517.jwk.JWKAlgorithm.prepare_key": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7517.jwk._add_other_params": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "authlib.specs.rfc7518": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7518.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "authlib.specs.rfc7518._backends": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc7518._backends.JWE_ALG_ALGORITHMS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "authlib.specs.rfc7518._backends.JWE_ENC_ALGORITHMS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "authlib.specs.rfc7518._backends.JWK_ALGORITHMS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "authlib.specs.rfc7518._backends.JWS_ALGORITHMS": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography": {
  "data": {
   "symbols_in_volume": [
    "authlib.specs.rfc7518._backends._jwe_alg_cryptography.AESAlgorithm",
    "authlib.specs.rfc7518._backends._jwe_alg_cryptography.RSAAlgorithm",
    "cryptography.hazmat.primitives.asymmetric.padding.MGF1",
    "cryptography.hazmat.primitives.asymmetric.padding.OAEP",
    "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15",
    "cryptography.hazmat.primitives.hashes.SHA1",
    "cryptography.hazmat.primitives.hashes.SHA256"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.AESAlgorithm": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "authlib.specs.rfc7516.JWEAlgorithm"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.AESAlgorithm.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "authlib.specs.rfc7518._backends._jwe_alg_cryptography.AESAlgorithm",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.AESAlgorithm._check_key": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.AESAlgorithm.prepare_private_key": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.AESAlgorithm.prepare_public_key": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.AESAlgorithm.unwrap": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.primitives.keywrap.aes_key_unwrap"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.AESAlgorithm.wrap": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.primitives.keywrap.aes_key_wrap"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.JWEAlgorithm": {
  "data": {
   "shadows": "authlib.specs.rfc7516.JWEAlgorithm"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.JWE_ALG_ALGORITHMS": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.RSAAlgorithm": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "authlib.specs.rfc7516.JWEAlgorithm"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.RSAAlgorithm.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "authlib.specs.rfc7518._backends._jwe_alg_cryptography.RSAAlgorithm",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.RSAAlgorithm.unwrap": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.RSAAlgorithm.wrap": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.aes_key_unwrap": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.keywrap.aes_key_unwrap"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.aes_key_wrap": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.keywrap.aes_key_wrap"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.default_backend": {
  "data": {
   "shadows": "cryptography.hazmat.backends.default_backend"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.hashes": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.hashes"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.padding": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.padding"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_alg_cryptography.to_bytes": {
  "data": {
   "shadows": "authlib.common.encoding.to_bytes"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography": {
  "data": {
   "symbols_in_volume": [
    "authlib.specs.rfc7518._backends._jwe_enc_cryptography.CBCHS2EncAlgorithm",
    "authlib.specs.rfc7518._backends._jwe_enc_cryptography.GCMEncAlgorithm"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.AES": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.ciphers.algorithms.AES"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.CBC": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.ciphers.modes.CBC"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.CBCHS2EncAlgorithm": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "authlib.specs.rfc7516.JWEEncAlgorithm"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.CBCHS2EncAlgorithm.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "authlib.specs.rfc7518._backends._jwe_enc_cryptography.hashlib",
    "getattr"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.CBCHS2EncAlgorithm._hmac": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "authlib.specs.rfc7518._backends._jwe_enc_cryptography.hmac",
    "encode_int",
    "len"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.CBCHS2EncAlgorithm.decrypt": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "authlib.specs.rfc7518._backends._jwe_enc_cryptography.hmac",
    "cryptography.exceptions.InvalidTag",
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.primitives.ciphers.Cipher",
    "cryptography.hazmat.primitives.ciphers.algorithms.AES",
    "cryptography.hazmat.primitives.ciphers.algorithms.AES.block_size",
    "cryptography.hazmat.primitives.ciphers.modes.CBC",
    "cryptography.hazmat.primitives.padding.PKCS7"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.CBCHS2EncAlgorithm.encrypt": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.primitives.ciphers.Cipher",
    "cryptography.hazmat.primitives.ciphers.algorithms.AES",
    "cryptography.hazmat.primitives.ciphers.algorithms.AES.block_size",
    "cryptography.hazmat.primitives.ciphers.modes.CBC",
    "cryptography.hazmat.primitives.padding.PKCS7"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.Cipher": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.ciphers.Cipher"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.GCM": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.ciphers.modes.GCM"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.GCMEncAlgorithm": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "authlib.specs.rfc7516.JWEEncAlgorithm"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.GCMEncAlgorithm.__init__": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.GCMEncAlgorithm.decrypt": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.primitives.ciphers.Cipher",
    "cryptography.hazmat.primitives.ciphers.algorithms.AES",
    "cryptography.hazmat.primitives.ciphers.modes.GCM"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.GCMEncAlgorithm.encrypt": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.primitives.ciphers.Cipher",
    "cryptography.hazmat.primitives.ciphers.algorithms.AES",
    "cryptography.hazmat.primitives.ciphers.modes.GCM"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.InvalidTag": {
  "data": {
   "shadows": "cryptography.exceptions.InvalidTag"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.JWEEncAlgorithm": {
  "data": {
   "shadows": "authlib.specs.rfc7516.JWEEncAlgorithm"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.JWE_ENC_ALGORITHMS": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.PKCS7": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.padding.PKCS7"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.default_backend": {
  "data": {
   "shadows": "cryptography.hazmat.backends.default_backend"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jwe_enc_cryptography.hmac": {
  "data": {
   "shadows": "hmac"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography": {
  "data": {
   "symbols_in_volume": [
    "authlib.specs.rfc7518._backends._jws_cryptography.ECAlgorithm",
    "authlib.specs.rfc7518._backends._jws_cryptography.RSAAlgorithm",
    "authlib.specs.rfc7518._backends._jws_cryptography.RSAPSSAlgorithm"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.ECAlgorithm": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.JWSAlgorithm",
    "cryptography.hazmat.primitives.hashes.SHA256",
    "cryptography.hazmat.primitives.hashes.SHA384",
    "cryptography.hazmat.primitives.hashes.SHA512"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.ECAlgorithm.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.ECAlgorithm.sign": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "cryptography.hazmat.primitives.asymmetric.ec.ECDSA",
    "cryptography.hazmat.primitives.asymmetric.utils.decode_dss_signature",
    "encode_int"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.ECAlgorithm.verify": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "cryptography.exceptions.InvalidSignature",
    "cryptography.hazmat.primitives.asymmetric.ec.ECDSA",
    "cryptography.hazmat.primitives.asymmetric.utils.encode_dss_signature",
    "decode_int",
    "len"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.ECDSA": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.ec.ECDSA"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.InvalidSignature": {
  "data": {
   "shadows": "cryptography.exceptions.InvalidSignature"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.JWSAlgorithm": {
  "data": {
   "shadows": "authlib.specs.rfc7515.JWSAlgorithm"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.JWS_ALGORITHMS": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.RSAAlgorithm": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.JWSAlgorithm",
    "cryptography.hazmat.primitives.hashes.SHA256",
    "cryptography.hazmat.primitives.hashes.SHA384",
    "cryptography.hazmat.primitives.hashes.SHA512"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.RSAAlgorithm.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15",
    "getattr"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.RSAAlgorithm.sign": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.RSAAlgorithm.verify": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "cryptography.exceptions.InvalidSignature"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.RSAPSSAlgorithm": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.JWSAlgorithm",
    "cryptography.hazmat.primitives.hashes.SHA256",
    "cryptography.hazmat.primitives.hashes.SHA384",
    "cryptography.hazmat.primitives.hashes.SHA512"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.RSAPSSAlgorithm.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.RSAPSSAlgorithm.sign": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "cryptography.hazmat.primitives.asymmetric.padding.MGF1",
    "cryptography.hazmat.primitives.asymmetric.padding.PSS"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.RSAPSSAlgorithm.verify": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "cryptography.exceptions.InvalidSignature",
    "cryptography.hazmat.primitives.asymmetric.padding.MGF1",
    "cryptography.hazmat.primitives.asymmetric.padding.PSS"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.decode_dss_signature": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.utils.decode_dss_signature"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.encode_dss_signature": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.utils.encode_dss_signature"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.hashes": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.hashes"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._jws_cryptography.padding": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.padding"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._key_cryptography": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.ECKey": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.ECKey.prepare_private_key": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes",
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey",
    "cryptography.hazmat.primitives.serialization.load_pem_private_key",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.ECKey.prepare_public_key": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey",
    "cryptography.hazmat.primitives.serialization.load_pem_public_key",
    "cryptography.hazmat.primitives.serialization.load_ssh_public_key",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.EllipticCurvePrivateKey": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.EllipticCurvePublicKey": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.RSAKey": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.RSAKey.prepare_private_key": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes",
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey",
    "cryptography.hazmat.primitives.serialization.load_pem_private_key",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.RSAKey.prepare_public_key": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes",
    "cryptography.hazmat.backends.default_backend",
    "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey",
    "cryptography.hazmat.primitives.serialization.load_pem_public_key",
    "cryptography.hazmat.primitives.serialization.load_ssh_public_key",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.RSAPrivateKey": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.RSAPublicKey": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.default_backend": {
  "data": {
   "shadows": "cryptography.hazmat.backends.default_backend"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.load_pem_private_key": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.serialization.load_pem_private_key"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.load_pem_public_key": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.serialization.load_pem_public_key"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.load_ssh_public_key": {
  "data": {
   "shadows": "cryptography.hazmat.primitives.serialization.load_ssh_public_key"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518._backends._key_cryptography.to_bytes": {
  "data": {
   "shadows": "authlib.common.encoding.to_bytes"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518.jwe_algorithms": {
  "data": {
   "symbols_in_volume": [
    "authlib.specs.rfc7518.jwe_algorithms.DeflateZipAlgorithm",
    "authlib.specs.rfc7518.jwe_algorithms.JWE_ZIP_ALGORITHMS"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc7518.jwe_algorithms.DeflateZipAlgorithm": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "authlib.specs.rfc7518.jwe_algorithms.DeflateZipAlgorithm.compress": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "authlib.specs.rfc7518.jwe_algorithms.zlib"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.jwe_algorithms.DeflateZipAlgorithm.decompress": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "authlib.specs.rfc7518.jwe_algorithms.zlib"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.jwe_algorithms.JWE_ALGORITHMS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "authlib.specs.rfc7518.jwe_algorithms.JWE_ZIP_ALGORITHMS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "authlib.specs.rfc7518.jwe_algorithms.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "authlib.specs.rfc7518.jwe_algorithms.zlib": {
  "data": {
   "shadows": "zlib"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518.jwk_algorithms": {
  "data": {
   "symbols_in_volume": [
    "authlib.specs.rfc7518.jwk_algorithms.OCTAlgorithm"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc7518.jwk_algorithms.JWKAlgorithm": {
  "data": {
   "shadows": "authlib.specs.rfc7517.JWKAlgorithm"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518.jwk_algorithms.JWK_ALGORITHMS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "authlib.specs.rfc7518.jwk_algorithms.OCTAlgorithm": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "authlib.specs.rfc7517.JWKAlgorithm"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7518.jwk_algorithms.OCTAlgorithm.dumps": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "authlib.common.encoding.to_unicode",
    "authlib.common.encoding.urlsafe_b64encode"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.jwk_algorithms.OCTAlgorithm.loads": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes",
    "authlib.common.encoding.urlsafe_b64decode"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.jwk_algorithms.OCTAlgorithm.prepare_key": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.jwk_algorithms._ALGORITHMS": {
  "data": {
   "shadows": "JWK_ALGORITHMS"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518.jwk_algorithms.to_bytes": {
  "data": {
   "shadows": "authlib.common.encoding.to_bytes"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518.jwk_algorithms.to_unicode": {
  "data": {
   "shadows": "authlib.common.encoding.to_unicode"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518.jwk_algorithms.urlsafe_b64decode": {
  "data": {
   "shadows": "authlib.common.encoding.urlsafe_b64decode"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518.jwk_algorithms.urlsafe_b64encode": {
  "data": {
   "shadows": "authlib.common.encoding.urlsafe_b64encode"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518.jws_algorithms": {
  "data": {
   "symbols_in_volume": [
    "authlib.specs.rfc7518.jws_algorithms.HMACAlgorithm",
    "authlib.specs.rfc7518.jws_algorithms.NoneAlgorithm"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc7518.jws_algorithms.HMACAlgorithm": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.JWSAlgorithm",
    "authlib.specs.rfc7518.jws_algorithms.hashlib"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7518.jws_algorithms.HMACAlgorithm.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.jws_algorithms.HMACAlgorithm.prepare_private_key": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.jws_algorithms.HMACAlgorithm.prepare_public_key": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.jws_algorithms.HMACAlgorithm.sign": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "authlib.specs.rfc7518.jws_algorithms.hmac"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.jws_algorithms.HMACAlgorithm.verify": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "authlib.specs.rfc7518.jws_algorithms.hmac"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.jws_algorithms.JWSAlgorithm": {
  "data": {
   "shadows": "authlib.specs.rfc7515.JWSAlgorithm"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518.jws_algorithms.JWS_ALGORITHMS": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "authlib.specs.rfc7518.jws_algorithms.NoneAlgorithm": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "authlib.specs.rfc7515.JWSAlgorithm"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7518.jws_algorithms.NoneAlgorithm.prepare_private_key": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.jws_algorithms.NoneAlgorithm.prepare_public_key": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.jws_algorithms.NoneAlgorithm.sign": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.jws_algorithms.NoneAlgorithm.verify": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.jws_algorithms._ALGORITHMS": {
  "data": {
   "shadows": "JWS_ALGORITHMS"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518.jws_algorithms.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518.jws_algorithms.hmac": {
  "data": {
   "shadows": "hmac"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518.jws_algorithms.to_bytes": {
  "data": {
   "shadows": "authlib.common.encoding.to_bytes"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518.util": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7518.util.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "authlib.specs.rfc7518.util.decode_int": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "authlib.specs.rfc7518.util.binascii",
    "int"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7518.util.encode_int": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "authlib.specs.rfc7518.util.binascii"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519": {
  "data": {
   "symbols_in_volume": [
    "JWT"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc7519.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "authlib.specs.rfc7519.claims": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7519.claims.JWTClaims": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7519.claims.JWTClaims.__getattr__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "AttributeError",
    "object.__getattribute__"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.claims.JWTClaims.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "authlib.specs.rfc7519.claims.JWTClaims",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.claims.JWTClaims._validate_claim_value": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "InvalidClaimError",
    "validate"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.claims.JWTClaims._validate_essential_claims": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "MissingClaimError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.claims.JWTClaims.validate": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "authlib.specs.rfc7519.claims.time",
    "int"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.claims.JWTClaims.validate_aud": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "InvalidClaimError",
    "any",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.claims.JWTClaims.validate_exp": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ExpiredTokenError",
    "InvalidClaimError",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.claims.JWTClaims.validate_iat": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "InvalidClaimError",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.claims.JWTClaims.validate_iss": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.claims.JWTClaims.validate_jti": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.claims.JWTClaims.validate_nbf": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "InvalidClaimError",
    "InvalidTokenError",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.claims.JWTClaims.validate_sub": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.claims.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.errors": {
  "data": {
   "symbols_in_volume": [
    "authlib.specs.rfc7515.errors.JWSError"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc7519.errors.DecodeError": {
  "data": {
   "shadows": "authlib.specs.rfc7515.errors.DecodeError"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.errors.ExpiredTokenError": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "authlib.specs.rfc7519.errors.JWTError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7519.errors.InsecureClaimError": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "authlib.specs.rfc7519.errors.JWTError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7519.errors.InsecureClaimError.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "authlib.specs.rfc7519.errors.InsecureClaimError",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.errors.InvalidClaimError": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "authlib.specs.rfc7519.errors.JWTError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7519.errors.InvalidClaimError.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "authlib.specs.rfc7519.errors.InvalidClaimError",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.errors.InvalidTokenError": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "authlib.specs.rfc7519.errors.JWTError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7519.errors.JWSError": {
  "data": {
   "shadows": "authlib.specs.rfc7515.errors.JWSError"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.errors.JWTError": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "authlib.specs.rfc7519.errors.MissingClaimError": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "authlib.specs.rfc7519.errors.JWTError"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7519.errors.MissingClaimError.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "authlib.specs.rfc7519.errors.MissingClaimError",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.errors.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "authlib.specs.rfc7519.jwt": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "authlib.specs.rfc7519.jwt.JWE": {
  "data": {
   "shadows": "authlib.specs.rfc7516.JWE"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.jwt.JWE_ALGORITHMS": {
  "data": {
   "shadows": "authlib.specs.rfc7518.JWE_ALGORITHMS"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.jwt.JWS": {
  "data": {
   "shadows": "authlib.specs.rfc7515.JWS"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.jwt.JWS_ALGORITHMS": {
  "data": {
   "shadows": "authlib.specs.rfc7518.JWS_ALGORITHMS"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.jwt.JWT": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "authlib.specs.rfc7519.jwt.re",
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7519.jwt.JWT.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "authlib.common.encoding.text_types",
    "authlib.specs.rfc7515.JWS",
    "authlib.specs.rfc7516.JWE",
    "authlib.specs.rfc7518.JWE_ALGORITHMS",
    "authlib.specs.rfc7518.JWS_ALGORITHMS",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.jwt.JWT.check_sensitive_data": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "InsecureClaimError",
    "authlib.common.encoding.text_types",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.jwt.JWT.decode": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "DecodeError",
    "authlib.common.encoding.to_bytes",
    "claims_cls",
    "create_key_func"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.jwt.JWT.encode": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes",
    "authlib.specs.rfc7519.jwt.calendar",
    "authlib.specs.rfc7519.jwt.datetime",
    "authlib.specs.rfc7519.jwt.json",
    "isinstance",
    "load_key"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.jwt.JWT.register_algorithm": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "authlib.common.encoding.text_types",
    "authlib.specs.rfc7519.jwt._AVAILABLE_ALGORITHMS",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.jwt._AVAILABLE_ALGORITHMS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "authlib.specs.rfc7519.jwt.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.jwt.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.jwt.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.jwt.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.jwt.text_types": {
  "data": {
   "shadows": "authlib.common.encoding.text_types"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.jwt.to_bytes": {
  "data": {
   "shadows": "authlib.common.encoding.to_bytes"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.util": {
  "data": {
   "symbols_in_volume": [
    "authlib.specs.rfc7517.JWK",
    "authlib.specs.rfc7518.JWK_ALGORITHMS"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc7519.util.JWK": {
  "data": {
   "shadows": "authlib.specs.rfc7517.JWK"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.util.JWK_ALGORITHMS": {
  "data": {
   "shadows": "authlib.specs.rfc7518.JWK_ALGORITHMS"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.util._load_jwk": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "authlib.common.encoding.text_types",
    "authlib.specs.rfc7519.util.json",
    "authlib.specs.rfc7519.util.jwk",
    "dict",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.util.create_key_func": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.util.create_key_func.key_func": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "authlib.specs.rfc7519.util.load_key",
    "key"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.util.decode_payload": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "DecodeError",
    "ValueError",
    "authlib.common.encoding.to_unicode",
    "authlib.specs.rfc7519.util.json",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.util.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.util.jwk": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "authlib.specs.rfc7519.util.load_key": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "authlib.specs.rfc7519.util._load_jwk",
    "callable",
    "key"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7519.util.text_types": {
  "data": {
   "shadows": "authlib.common.encoding.text_types"
  },
  "type": "import"
 },
 "authlib.specs.rfc7519.util.to_unicode": {
  "data": {
   "shadows": "authlib.common.encoding.to_unicode"
  },
  "type": "import"
 },
 "authlib.specs.rfc7523": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7523.assertion": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7523.assertion.sign_jwt_bearer_assertion": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ValueError",
    "authlib.specs.rfc7523.assertion.time",
    "int"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7523.assertion.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "authlib.specs.rfc7523.auth": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7523.auth.add_params_to_qs": {
  "data": {
   "shadows": "authlib.common.urls.add_params_to_qs"
  },
  "type": "import"
 },
 "authlib.specs.rfc7523.auth.register_session_client_auth_method": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7523.auth.register_session_client_auth_method._auth": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "authlib.common.urls.add_params_to_qs",
    "func"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7523.grant": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "authlib.specs.rfc7523.grant.logging"
   ]
  },
  "type": "module"
 },
 "authlib.specs.rfc7523.grant.JWTBearerGrant": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "authlib.specs.rfc7523.grant.JWT_BEARER_GRANT_TYPE"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7523.grant.JWTBearerGrant.authenticate_client": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7523.grant.JWTBearerGrant.authenticate_user": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7523.grant.JWTBearerGrant.create_claims_options": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "authlib.specs.rfc7523.grant.JWTBearerGrant.create_token_response": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "authlib.specs.rfc7523.grant.log"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7523.grant.JWTBearerGrant.process_assertion_claims": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "InvalidGrantError",
    "authlib.specs.rfc7523.grant.log"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7523.grant.JWTBearerGrant.resolve_public_key": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7523.grant.JWTBearerGrant.sign": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sign_jwt_bearer_assertion",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7523.grant.JWTBearerGrant.validate_token_request": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "InvalidRequestError",
    "UnauthorizedClientError",
    "authlib.specs.rfc7523.grant.log"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7523.grant.JWT_BEARER_GRANT_TYPE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "authlib.specs.rfc7523.grant.log": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "authlib.specs.rfc7523.grant.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "authlib.specs.rfc7636": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7636.challenge": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7636.challenge.CodeChallenge": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "authlib.specs.rfc7636.challenge.compare_plain_code_challenge",
    "authlib.specs.rfc7636.challenge.compare_s256_code_challenge",
    "object"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7636.challenge.CodeChallenge.__call__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "authlib.specs.rfc7636.challenge.CodeChallenge.__init__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "authlib.specs.rfc7636.challenge.CodeChallenge.get_authorization_code_challenge": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "authlib.specs.rfc7636.challenge.CodeChallenge.get_authorization_code_challenge_method": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "authlib.specs.rfc7636.challenge.CodeChallenge.validate_code_challenge": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "InvalidRequestError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7636.challenge.CodeChallenge.validate_code_verifier": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "InvalidGrantError",
    "InvalidRequestError",
    "RuntimeError",
    "func"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7636.challenge.compare_plain_code_challenge": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "authlib.specs.rfc7636.challenge.compare_s256_code_challenge": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "authlib.specs.rfc7636.challenge.create_s256_code_challenge"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7636.challenge.create_s256_code_challenge": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "authlib.common.encoding.to_bytes",
    "authlib.common.encoding.to_unicode",
    "authlib.common.encoding.urlsafe_b64encode",
    "authlib.specs.rfc7636.challenge.hashlib"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7636.challenge.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "authlib.specs.rfc7636.challenge.to_bytes": {
  "data": {
   "shadows": "authlib.common.encoding.to_bytes"
  },
  "type": "import"
 },
 "authlib.specs.rfc7636.challenge.to_unicode": {
  "data": {
   "shadows": "authlib.common.encoding.to_unicode"
  },
  "type": "import"
 },
 "authlib.specs.rfc7636.challenge.urlsafe_b64encode": {
  "data": {
   "shadows": "authlib.common.encoding.urlsafe_b64encode"
  },
  "type": "import"
 },
 "authlib.specs.rfc7636.grant": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7636.grant.AuthorizationCodeGrant": {
  "data": {
   "lineno": 6
  },
  "type": "class"
 },
 "authlib.specs.rfc7636.grant.AuthorizationCodeGrant.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "CodeChallenge",
    "authlib.deprecate.deprecate",
    "authlib.specs.rfc7636.grant.AuthorizationCodeGrant",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7636.grant.AuthorizationCodeGrant.get_authorization_code_challenge": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "authlib.specs.rfc7636.grant.AuthorizationCodeGrant.get_authorization_code_challenge_method": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "authlib.specs.rfc7636.grant.AuthorizationCodeGrant.validate_authorization_request": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "authlib.specs.rfc7636.grant.AuthorizationCodeGrant",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7636.grant.AuthorizationCodeGrant.validate_token_request": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "authlib.specs.rfc7636.grant.AuthorizationCodeGrant",
    "super"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7636.grant._CodeGrant": {
  "data": {
   "shadows": "AuthorizationCodeGrant"
  },
  "type": "import"
 },
 "authlib.specs.rfc7636.grant.deprecate": {
  "data": {
   "shadows": "authlib.deprecate.deprecate"
  },
  "type": "import"
 },
 "authlib.specs.rfc7662": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7662.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "authlib.specs.rfc7662.introspection": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc7662.introspection.IntrospectionEndpoint": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.TokenEndpoint"
   ]
  },
  "type": "class"
 },
 "authlib.specs.rfc7662.introspection.IntrospectionEndpoint.create_endpoint_response": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.OAuth2Error",
    "dict"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7662.introspection.IntrospectionEndpoint.create_introspection_payload": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "authlib.specs.rfc7662.introspection.time"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7662.introspection.IntrospectionEndpoint.introspect_token": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7662.introspection.IntrospectionEndpoint.query_token": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7662.introspection.IntrospectionEndpoint.validate_endpoint_request": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "authlib.specs.rfc6749.InvalidRequestError",
    "authlib.specs.rfc6749.UnsupportedTokenTypeError",
    "dict"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc7662.introspection.InvalidRequestError": {
  "data": {
   "shadows": "authlib.specs.rfc6749.InvalidRequestError"
  },
  "type": "import"
 },
 "authlib.specs.rfc7662.introspection.OAuth2Error": {
  "data": {
   "shadows": "authlib.specs.rfc6749.OAuth2Error"
  },
  "type": "import"
 },
 "authlib.specs.rfc7662.introspection.TokenEndpoint": {
  "data": {
   "shadows": "authlib.specs.rfc6749.TokenEndpoint"
  },
  "type": "import"
 },
 "authlib.specs.rfc7662.introspection.UnsupportedTokenTypeError": {
  "data": {
   "shadows": "authlib.specs.rfc6749.UnsupportedTokenTypeError"
  },
  "type": "import"
 },
 "authlib.specs.rfc7662.introspection.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "authlib.specs.rfc8414": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc8414.well_known": {
  "data": {},
  "type": "module"
 },
 "authlib.specs.rfc8414.well_known.WELL_KNOWN_URL": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "authlib.specs.rfc8414.well_known.get_well_known_url": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "authlib.common.urls.urlparse.urlparse",
    "authlib.specs.rfc8414.well_known.WELL_KNOWN_URL"
   ]
  },
  "type": "function"
 },
 "authlib.specs.rfc8414.well_known.urlparse": {
  "data": {
   "shadows": "authlib.common.urls.urlparse"
  },
  "type": "import"
 }
}