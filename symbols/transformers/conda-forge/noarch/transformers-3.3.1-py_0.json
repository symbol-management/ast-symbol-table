{
 "transformers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.activations": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.__version__",
   "torch.nn.functional.gelu",
   "torch.nn.functional.relu",
   "torch.tanh"
  ],
  "type": "module"
 },
 "transformers.activations._gelu_python": {
  "lineno": 16,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.erf"
  ],
  "type": "function"
 },
 "transformers.activations.gelu_fast": {
  "lineno": 39,
  "symbols_in_volume": [
   "torch.tanh"
  ],
  "type": "function"
 },
 "transformers.activations.gelu_new": {
  "lineno": 26,
  "symbols_in_volume": [
   "math.pi",
   "math.sqrt",
   "torch.pow",
   "torch.tanh"
  ],
  "type": "function"
 },
 "transformers.activations.get_activation": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.activations.mish": {
  "lineno": 65,
  "symbols_in_volume": [
   "torch.nn.functional.softplus",
   "torch.tanh"
  ],
  "type": "function"
 },
 "transformers.activations.swish": {
  "lineno": 12,
  "symbols_in_volume": [
   "torch.sigmoid"
  ],
  "type": "function"
 },
 "transformers.activations_tf": {
  "lineno": null,
  "symbols_in_volume": [
   "tensorflow.keras.activations.relu",
   "tensorflow.keras.activations.swish",
   "tensorflow.keras.activations.tanh",
   "tensorflow.keras.layers.Activation"
  ],
  "type": "module"
 },
 "transformers.activations_tf.gelu": {
  "lineno": 6,
  "symbols_in_volume": [
   "tensorflow.convert_to_tensor",
   "tensorflow.math.erf",
   "tensorflow.math.sqrt"
  ],
  "type": "function"
 },
 "transformers.activations_tf.gelu_fast": {
  "lineno": 42,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.convert_to_tensor",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "transformers.activations_tf.gelu_new": {
  "lineno": 19,
  "symbols_in_volume": [
   "math.pi",
   "tensorflow.cast",
   "tensorflow.convert_to_tensor",
   "tensorflow.pow",
   "tensorflow.sqrt",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "transformers.activations_tf.get_tf_activation": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.activations_tf.mish": {
  "lineno": 36,
  "symbols_in_volume": [
   "tensorflow.convert_to_tensor",
   "tensorflow.math.softplus",
   "tensorflow.tanh"
  ],
  "type": "function"
 },
 "transformers.benchmark": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.benchmark.benchmark": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._inference_memory": {
  "lineno": 65,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._inference_speed": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._measure_memory": {
  "lineno": 224,
  "symbols_in_volume": [
   "py3nvml.py3nvml.nvmlDeviceGetHandleByIndex",
   "py3nvml.py3nvml.nvmlDeviceGetMemoryInfo",
   "py3nvml.py3nvml.nvmlInit",
   "py3nvml.py3nvml.nvmlShutdown",
   "typing.Callable"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._measure_speed": {
  "lineno": 196,
  "symbols_in_volume": [
   "timeit.repeat",
   "torch_xla.debug.metrics.metrics_report"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._prepare_inference_func": {
  "lineno": 81,
  "symbols_in_volume": [
   "torch.jit.trace",
   "torch.long",
   "torch.no_grad",
   "torch.randint",
   "typing.Callable"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._prepare_inference_func.encoder_decoder_forward": {
  "lineno": 125,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._prepare_inference_func.encoder_forward": {
  "lineno": 130,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._prepare_train_func": {
  "lineno": 138,
  "symbols_in_volume": [
   "torch.long",
   "torch.randint",
   "typing.Callable"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._prepare_train_func.compute_loss_and_backprob_encoder": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._prepare_train_func.compute_loss_and_backprob_encoder_decoder": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._train_memory": {
  "lineno": 75,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._train_speed": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark.framework_version": {
  "lineno": 57,
  "symbols_in_volume": [
   "torch.__version__"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments": {
  "lineno": 35,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field"
  ],
  "type": "class"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments.__init__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments._setup_devices": {
  "lineno": 77,
  "symbols_in_volume": [
   "torch.cuda.device_count",
   "torch.cuda.is_available",
   "torch.device",
   "torch_xla.core.xla_model.xla_device",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments.device": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments.device_idx": {
  "lineno": 96,
  "symbols_in_volume": [
   "torch.cuda.current_device"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments.is_gpu": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments.is_tpu": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments.n_gpu": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments": {
  "lineno": 32,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field"
  ],
  "type": "class"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments.__init__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments._setup_strategy": {
  "lineno": 91,
  "symbols_in_volume": [
   "tensorflow.config.experimental.set_visible_devices",
   "tensorflow.config.experimental_connect_to_cluster",
   "tensorflow.distribute.OneDeviceStrategy",
   "tensorflow.distribute.experimental.TPUStrategy",
   "tensorflow.tpu.experimental.initialize_tpu_system",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments._setup_tpu": {
  "lineno": 78,
  "symbols_in_volume": [
   "tensorflow.distribute.cluster_resolver.TPUClusterResolver",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments.gpu_list": {
  "lineno": 121,
  "symbols_in_volume": [
   "tensorflow.config.list_physical_devices"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments.is_gpu": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments.is_tpu": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments.n_gpu": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments.strategy": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.benchmark.benchmark_args_utils.BenchmarkArguments": {
  "lineno": 33,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field",
   "time.time",
   "typing.List"
  ],
  "type": "class"
 },
 "transformers.benchmark.benchmark_args_utils.BenchmarkArguments.do_multi_processing": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_utils.BenchmarkArguments.model_names": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_utils.BenchmarkArguments.to_json_string": {
  "lineno": 126,
  "symbols_in_volume": [
   "dataclasses.asdict",
   "json.dumps"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_utils.list_field": {
  "lineno": 29,
  "symbols_in_volume": [
   "dataclasses.field"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._inference_memory": {
  "lineno": 103,
  "symbols_in_volume": [
   "tensorflow.config.experimental.set_memory_growth",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._inference_speed": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._measure_memory": {
  "lineno": 232,
  "symbols_in_volume": [
   "py3nvml.py3nvml.nvmlDeviceGetHandleByIndex",
   "py3nvml.py3nvml.nvmlDeviceGetMemoryInfo",
   "py3nvml.py3nvml.nvmlInit",
   "py3nvml.py3nvml.nvmlShutdown",
   "tensorflow.python.framework.errors_impl.ResourceExhaustedError",
   "typing.Callable"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._measure_speed": {
  "lineno": 213,
  "symbols_in_volume": [
   "tensorflow.python.framework.errors_impl.ResourceExhaustedError",
   "timeit.repeat"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._prepare_inference_func": {
  "lineno": 125,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._prepare_inference_func.encoder_decoder_forward": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._prepare_inference_func.encoder_forward": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._prepare_train_func": {
  "lineno": 165,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._prepare_train_func.encoder_decoder_train": {
  "lineno": 197,
  "symbols_in_volume": [
   "tensorflow.gradients"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._prepare_train_func.encoder_train": {
  "lineno": 203,
  "symbols_in_volume": [
   "tensorflow.gradients"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._train_memory": {
  "lineno": 114,
  "symbols_in_volume": [
   "tensorflow.config.experimental.set_memory_growth",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._train_speed": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark.framework_version": {
  "lineno": 86,
  "symbols_in_volume": [
   "tensorflow.__version__"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.random_input_ids": {
  "lineno": 74,
  "symbols_in_volume": [
   "random.Random",
   "tensorflow.constant",
   "tensorflow.int32"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.run_with_tf_optimizations": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.run_with_tf_optimizations.run_func": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.run_with_tf_optimizations.run_func.run_in_eager_mode": {
  "lineno": 54,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.run_with_tf_optimizations.run_func.run_in_graph_mode": {
  "lineno": 58,
  "symbols_in_volume": [
   "functools.wraps",
   "tensorflow.function"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "platform.system",
   "typing.List"
  ],
  "type": "module"
 },
 "transformers.benchmark.benchmark_utils.Benchmark": {
  "lineno": 568,
  "symbols_in_volume": [
   "abc.ABC",
   "transformers.PretrainedConfig"
  ],
  "type": "class"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.__init__": {
  "lineno": 578,
  "symbols_in_volume": [
   "os.getenv",
   "transformers.AutoConfig.from_pretrained",
   "transformers.PretrainedConfig"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark._inference_memory": {
  "lineno": 624,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark._inference_speed": {
  "lineno": 616,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark._train_memory": {
  "lineno": 630,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark._train_speed": {
  "lineno": 620,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.environment_info": {
  "lineno": 747,
  "symbols_in_volume": [
   "datetime.datetime.date",
   "datetime.datetime.now",
   "datetime.datetime.time",
   "platform.architecture",
   "platform.processor",
   "platform.python_version",
   "platform.system",
   "psutil.virtual_memory",
   "py3nvml.py3nvml.nvmlDeviceGetHandleByIndex",
   "py3nvml.py3nvml.nvmlDeviceGetMemoryInfo",
   "py3nvml.py3nvml.nvmlDeviceGetName",
   "py3nvml.py3nvml.nvmlDeviceGetPerformanceState",
   "py3nvml.py3nvml.nvmlDeviceGetPowerManagementLimit",
   "py3nvml.py3nvml.nvmlInit",
   "py3nvml.py3nvml.nvmlShutdown",
   "transformers.__version__"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.framework_version": {
  "lineno": 611,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.inference_memory": {
  "lineno": 642,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.inference_speed": {
  "lineno": 636,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.print_fn": {
  "lineno": 596,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.print_fn.print_and_log": {
  "lineno": 601,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.print_memory_trace_statistics": {
  "lineno": 828,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.print_results": {
  "lineno": 806,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.run": {
  "lineno": 648,
  "symbols_in_volume": [
   "copy.deepcopy",
   "csv.writer"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.save_to_csv": {
  "lineno": 852,
  "symbols_in_volume": [
   "csv.DictWriter"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.train_memory": {
  "lineno": 645,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.train_speed": {
  "lineno": 639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Frame": {
  "lineno": 108,
  "symbols_in_volume": [
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "transformers.benchmark.benchmark_utils.Memory": {
  "lineno": 137,
  "symbols_in_volume": [
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "transformers.benchmark.benchmark_utils.Memory.__repr__": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.MemoryState": {
  "lineno": 149,
  "symbols_in_volume": [
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "transformers.benchmark.benchmark_utils.MemorySummary": {
  "lineno": 163,
  "symbols_in_volume": [
   "typing.List",
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "transformers.benchmark.benchmark_utils.UsedMemoryState": {
  "lineno": 125,
  "symbols_in_volume": [
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "transformers.benchmark.benchmark_utils.bytes_to_mega_bytes": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.is_memory_tracing_enabled": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.measure_peak_memory_cpu": {
  "lineno": 183,
  "symbols_in_volume": [
   "multiprocessing.Pipe",
   "os.getpid",
   "os.kill",
   "psutil.Process",
   "signal.SIGKILL",
   "typing.Callable"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.measure_peak_memory_cpu.MemoryMeasureProcess": {
  "lineno": 234,
  "symbols_in_volume": [
   "multiprocessing.Process"
  ],
  "type": "class"
 },
 "transformers.benchmark.benchmark_utils.measure_peak_memory_cpu.MemoryMeasureProcess.__init__": {
  "lineno": 241,
  "symbols_in_volume": [
   "multiprocessing.connection.Connection"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.measure_peak_memory_cpu.MemoryMeasureProcess.run": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.measure_peak_memory_cpu.get_cpu_memory": {
  "lineno": 206,
  "symbols_in_volume": [
   "psutil.AccessDenied",
   "psutil.Process"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.separate_process_wrapper_fn": {
  "lineno": 64,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.separate_process_wrapper_fn.multi_process_func": {
  "lineno": 77,
  "symbols_in_volume": [
   "multiprocessing.Process",
   "multiprocessing.Queue"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.separate_process_wrapper_fn.multi_process_func.wrapper_func": {
  "lineno": 80,
  "symbols_in_volume": [
   "multiprocessing.Queue"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.start_memory_tracing": {
  "lineno": 306,
  "symbols_in_volume": [
   "os.getpid",
   "psutil.Process",
   "py3nvml.py3nvml.NVMLError",
   "py3nvml.py3nvml.nvmlDeviceGetCount",
   "py3nvml.py3nvml.nvmlInit",
   "py3nvml.py3nvml.nvmlShutdown",
   "sys.settrace",
   "typing.Iterable",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.start_memory_tracing.traceit": {
  "lineno": 373,
  "symbols_in_volume": [
   "linecache.getline",
   "py3nvml.py3nvml.nvmlDeviceGetHandleByIndex",
   "py3nvml.py3nvml.nvmlDeviceGetMemoryInfo",
   "py3nvml.py3nvml.nvmlInit",
   "py3nvml.py3nvml.nvmlShutdown",
   "tensorflow.python.eager.context.context",
   "torch.cuda.empty_cache"
  ],
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.stop_memory_tracing": {
  "lineno": 456,
  "symbols_in_volume": [
   "collections.defaultdict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.commands": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.commands.BaseTransformersCLICommand": {
  "lineno": 5,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "transformers.commands.BaseTransformersCLICommand.register_subcommand": {
  "lineno": 6,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "transformers.commands.BaseTransformersCLICommand.run": {
  "lineno": 11,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "transformers.commands.convert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.commands.convert.ConvertCommand": {
  "lineno": 24,
  "symbols_in_volume": [
   "transformers.commands.BaseTransformersCLICommand"
  ],
  "type": "class"
 },
 "transformers.commands.convert.ConvertCommand.__init__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.commands.convert.ConvertCommand.register_subcommand": {
  "lineno": 25,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "transformers.commands.convert.ConvertCommand.run": {
  "lineno": 71,
  "symbols_in_volume": [
   "transformers.convert_albert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch",
   "transformers.convert_bert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch",
   "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch",
   "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.convert_gpt2_checkpoint_to_pytorch",
   "transformers.convert_lxmert_original_pytorch_checkpoint_to_pytorch.convert_lxmert_checkpoint_to_pytorch",
   "transformers.convert_openai_original_tf_checkpoint_to_pytorch.convert_openai_checkpoint_to_pytorch",
   "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.convert_transfo_xl_checkpoint_to_pytorch",
   "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.convert_xlm_checkpoint_to_pytorch",
   "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.convert_xlnet_checkpoint_to_pytorch"
  ],
  "type": "function"
 },
 "transformers.commands.convert.convert_command_factory": {
  "lineno": 8,
  "symbols_in_volume": [
   "argparse.Namespace"
  ],
  "type": "function"
 },
 "transformers.commands.download": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.commands.download.DownloadCommand": {
  "lineno": 10,
  "symbols_in_volume": [
   "transformers.commands.BaseTransformersCLICommand"
  ],
  "type": "class"
 },
 "transformers.commands.download.DownloadCommand.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.commands.download.DownloadCommand.register_subcommand": {
  "lineno": 11,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "transformers.commands.download.DownloadCommand.run": {
  "lineno": 28,
  "symbols_in_volume": [
   "transformers.AutoModel.from_pretrained",
   "transformers.AutoTokenizer.from_pretrained"
  ],
  "type": "function"
 },
 "transformers.commands.download.download_command_factory": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.commands.env": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.commands.env.EnvironmentCommand": {
  "lineno": 13,
  "symbols_in_volume": [
   "transformers.commands.BaseTransformersCLICommand"
  ],
  "type": "class"
 },
 "transformers.commands.env.EnvironmentCommand.format_dict": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.commands.env.EnvironmentCommand.register_subcommand": {
  "lineno": 14,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "transformers.commands.env.EnvironmentCommand.run": {
  "lineno": 19,
  "symbols_in_volume": [
   "platform.platform",
   "platform.python_version",
   "tensorflow.__version__",
   "tensorflow.config.list_physical_devices",
   "tensorflow.test.is_gpu_available",
   "torch.__version__",
   "torch.cuda.is_available",
   "transformers.__version__",
   "transformers.is_tf_available",
   "transformers.is_torch_available"
  ],
  "type": "function"
 },
 "transformers.commands.env.info_command_factory": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.commands.run": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.commands.run.RunCommand": {
  "lineno": 45,
  "symbols_in_volume": [
   "transformers.commands.BaseTransformersCLICommand"
  ],
  "type": "class"
 },
 "transformers.commands.run.RunCommand.__init__": {
  "lineno": 46,
  "symbols_in_volume": [
   "transformers.pipelines.Pipeline",
   "transformers.pipelines.PipelineDataFormat"
  ],
  "type": "function"
 },
 "transformers.commands.run.RunCommand.register_subcommand": {
  "lineno": 50,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.pipelines.PipelineDataFormat.SUPPORTED_FORMATS",
   "transformers.pipelines.SUPPORTED_TASKS.keys"
  ],
  "type": "function"
 },
 "transformers.commands.run.RunCommand.run": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.commands.run.run_command_factory": {
  "lineno": 26,
  "symbols_in_volume": [
   "transformers.pipelines.PipelineDataFormat.from_str",
   "transformers.pipelines.pipeline"
  ],
  "type": "function"
 },
 "transformers.commands.run.try_infer_format_from_ext": {
  "lineno": 12,
  "symbols_in_volume": [
   "transformers.pipelines.PipelineDataFormat.SUPPORTED_FORMATS"
  ],
  "type": "function"
 },
 "transformers.commands.serving": {
  "lineno": null,
  "symbols_in_volume": [
   "pydantic.BaseModel"
  ],
  "type": "module"
 },
 "transformers.commands.serving.Body": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.commands.serving.ServeCommand": {
  "lineno": 79,
  "symbols_in_volume": [
   "fastapi.Body",
   "fastapi.HTTPException",
   "transformers.commands.BaseTransformersCLICommand"
  ],
  "type": "class"
 },
 "transformers.commands.serving.ServeCommand.__init__": {
  "lineno": 107,
  "symbols_in_volume": [
   "fastapi.FastAPI",
   "fastapi.routing.APIRoute",
   "starlette.responses.JSONResponse",
   "transformers.Pipeline",
   "transformers.pipelines.pipeline"
  ],
  "type": "function"
 },
 "transformers.commands.serving.ServeCommand.detokenize": {
  "lineno": 181,
  "symbols_in_volume": [
   "fastapi.Body",
   "fastapi.HTTPException",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.commands.serving.ServeCommand.model_info": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.commands.serving.ServeCommand.register_subcommand": {
  "lineno": 80,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.pipelines.SUPPORTED_TASKS.keys"
  ],
  "type": "function"
 },
 "transformers.commands.serving.ServeCommand.run": {
  "lineno": 157,
  "symbols_in_volume": [
   "uvicorn.run"
  ],
  "type": "function"
 },
 "transformers.commands.serving.ServeCommand.tokenize": {
  "lineno": 163,
  "symbols_in_volume": [
   "fastapi.Body",
   "fastapi.HTTPException"
  ],
  "type": "function"
 },
 "transformers.commands.serving.ServeDeTokenizeResult": {
  "lineno": 63,
  "symbols_in_volume": [
   "pydantic.BaseModel"
  ],
  "type": "class"
 },
 "transformers.commands.serving.ServeForwardResult": {
  "lineno": 71,
  "symbols_in_volume": [
   "pydantic.BaseModel",
   "typing.Any"
  ],
  "type": "class"
 },
 "transformers.commands.serving.ServeModelInfoResult": {
  "lineno": 46,
  "symbols_in_volume": [
   "pydantic.BaseModel"
  ],
  "type": "class"
 },
 "transformers.commands.serving.ServeTokenizeResult": {
  "lineno": 54,
  "symbols_in_volume": [
   "pydantic.BaseModel",
   "typing.List",
   "typing.Optional"
  ],
  "type": "class"
 },
 "transformers.commands.serving.serve_command_factory": {
  "lineno": 31,
  "symbols_in_volume": [
   "argparse.Namespace",
   "transformers.pipelines.pipeline"
  ],
  "type": "function"
 },
 "transformers.commands.train": {
  "lineno": null,
  "symbols_in_volume": [
   "transformers.is_tf_available",
   "transformers.is_torch_available"
  ],
  "type": "module"
 },
 "transformers.commands.train.TrainCommand": {
  "lineno": 27,
  "symbols_in_volume": [
   "transformers.commands.BaseTransformersCLICommand"
  ],
  "type": "class"
 },
 "transformers.commands.train.TrainCommand.__init__": {
  "lineno": 79,
  "symbols_in_volume": [
   "argparse.Namespace",
   "os.makedirs",
   "transformers.SingleSentenceClassificationProcessor.create_from_csv",
   "transformers.TextClassificationPipeline.from_pretrained",
   "transformers.is_tf_available"
  ],
  "type": "function"
 },
 "transformers.commands.train.TrainCommand.register_subcommand": {
  "lineno": 28,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "transformers.commands.train.TrainCommand.run": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.commands.train.TrainCommand.run_tf": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.commands.train.TrainCommand.run_torch": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.commands.train.train_command_factory": {
  "lineno": 19,
  "symbols_in_volume": [
   "argparse.Namespace"
  ],
  "type": "function"
 },
 "transformers.commands.transformers_cli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.commands.transformers_cli.main": {
  "lineno": 12,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.commands.convert.ConvertCommand.register_subcommand",
   "transformers.commands.download.DownloadCommand.register_subcommand",
   "transformers.commands.env.EnvironmentCommand.register_subcommand",
   "transformers.commands.run.RunCommand.register_subcommand",
   "transformers.commands.serving.ServeCommand.register_subcommand",
   "transformers.commands.user.UserCommands.register_subcommand"
  ],
  "type": "function"
 },
 "transformers.commands.user": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.commands.user.ANSI": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.commands.user.ANSI.bold": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.commands.user.ANSI.red": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.commands.user.BaseUserCommand": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.commands.user.BaseUserCommand.__init__": {
  "lineno": 66,
  "symbols_in_volume": [
   "transformers.hf_api.HfApi"
  ],
  "type": "function"
 },
 "transformers.commands.user.DeleteObjCommand": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.commands.user.DeleteObjCommand.run": {
  "lineno": 161,
  "symbols_in_volume": [
   "requests.exceptions.HTTPError",
   "transformers.hf_api.HfFolder.get_token"
  ],
  "type": "function"
 },
 "transformers.commands.user.ListObjsCommand": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.commands.user.ListObjsCommand.run": {
  "lineno": 142,
  "symbols_in_volume": [
   "requests.exceptions.HTTPError",
   "transformers.hf_api.HfFolder.get_token"
  ],
  "type": "function"
 },
 "transformers.commands.user.ListObjsCommand.tabulate": {
  "lineno": 127,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.commands.user.LoginCommand": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.commands.user.LoginCommand.run": {
  "lineno": 72,
  "symbols_in_volume": [
   "getpass.getpass",
   "requests.exceptions.HTTPError",
   "transformers.hf_api.HfFolder.path_token",
   "transformers.hf_api.HfFolder.save_token"
  ],
  "type": "function"
 },
 "transformers.commands.user.LogoutCommand": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.commands.user.LogoutCommand.run": {
  "lineno": 116,
  "symbols_in_volume": [
   "transformers.hf_api.HfFolder.delete_token",
   "transformers.hf_api.HfFolder.get_token"
  ],
  "type": "function"
 },
 "transformers.commands.user.UploadCommand": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.commands.user.UploadCommand.run": {
  "lineno": 187,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.basename",
   "os.path.isdir",
   "os.path.isfile",
   "os.sep",
   "requests.exceptions.HTTPError",
   "sys.platform",
   "transformers.hf_api.HfFolder.get_token"
  ],
  "type": "function"
 },
 "transformers.commands.user.UploadCommand.walk_dir": {
  "lineno": 176,
  "symbols_in_volume": [
   "os.DirEntry",
   "os.getcwd",
   "os.path.join",
   "os.scandir",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.commands.user.UserCommands": {
  "lineno": 15,
  "symbols_in_volume": [
   "transformers.commands.BaseTransformersCLICommand"
  ],
  "type": "class"
 },
 "transformers.commands.user.UserCommands.register_subcommand": {
  "lineno": 16,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "function"
 },
 "transformers.commands.user.WhoamiCommand": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.commands.user.WhoamiCommand.run": {
  "lineno": 99,
  "symbols_in_volume": [
   "requests.exceptions.HTTPError",
   "transformers.hf_api.HfFolder.get_token"
  ],
  "type": "function"
 },
 "transformers.configuration_albert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_albert.AlbertConfig": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_albert.AlbertConfig.__init__": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_auto": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "module"
 },
 "transformers.configuration_auto.AutoConfig": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_auto.AutoConfig.__init__": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_auto.AutoConfig.for_model": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_auto.AutoConfig.from_pretrained": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_auto._list_model_options": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_auto.replace_list_option_in_docstrings": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_auto.replace_list_option_in_docstrings.docstring_decorator": {
  "lineno": 188,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "transformers.configuration_bart": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_bart.BartConfig": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_bart.BartConfig.__init__": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_bart.BartConfig.hidden_size": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_bart.BartConfig.is_valid_mbart": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_bart.BartConfig.num_attention_heads": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_bert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_bert.BertConfig": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_bert.BertConfig.__init__": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_bert_generation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_bert_generation.BertGenerationConfig": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_bert_generation.BertGenerationConfig.__init__": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_camembert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_camembert.CamembertConfig": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_ctrl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_ctrl.CTRLConfig": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_ctrl.CTRLConfig.__init__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_ctrl.CTRLConfig.hidden_size": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_ctrl.CTRLConfig.max_position_embeddings": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_ctrl.CTRLConfig.num_attention_heads": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_ctrl.CTRLConfig.num_hidden_layers": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_distilbert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_distilbert.DistilBertConfig": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_distilbert.DistilBertConfig.__init__": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_distilbert.DistilBertConfig.hidden_size": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_distilbert.DistilBertConfig.num_attention_heads": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_distilbert.DistilBertConfig.num_hidden_layers": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_dpr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_dpr.DPRConfig": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_dpr.DPRConfig.__init__": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_electra": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_electra.ElectraConfig": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_electra.ElectraConfig.__init__": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_encoder_decoder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_encoder_decoder.EncoderDecoderConfig": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_encoder_decoder.EncoderDecoderConfig.__init__": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_encoder_decoder.EncoderDecoderConfig.from_encoder_decoder_configs": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_encoder_decoder.EncoderDecoderConfig.to_dict": {
  "lineno": 106,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "transformers.configuration_flaubert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_flaubert.FlaubertConfig": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_flaubert.FlaubertConfig.__init__": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_fsmt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_fsmt.DecoderConfig": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_fsmt.DecoderConfig.__init__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_fsmt.FSMTConfig": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_fsmt.FSMTConfig.__init__": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_fsmt.FSMTConfig.hidden_size": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_fsmt.FSMTConfig.num_attention_heads": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_fsmt.FSMTConfig.to_dict": {
  "lineno": 210,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "transformers.configuration_funnel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_funnel.FunnelConfig": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_funnel.FunnelConfig.__init__": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_funnel.FunnelConfig.hidden_size": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_funnel.FunnelConfig.num_attention_heads": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_funnel.FunnelConfig.num_blocks": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_funnel.FunnelConfig.num_hidden_layers": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_gpt2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_gpt2.GPT2Config": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_gpt2.GPT2Config.__init__": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_gpt2.GPT2Config.hidden_size": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_gpt2.GPT2Config.max_position_embeddings": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_gpt2.GPT2Config.num_attention_heads": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_gpt2.GPT2Config.num_hidden_layers": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_layoutlm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_layoutlm.LayoutLMConfig": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_layoutlm.LayoutLMConfig.__init__": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_longformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_longformer.LongformerConfig": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_longformer.LongformerConfig.__init__": {
  "lineno": 69,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.configuration_lxmert": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "transformers.configuration_lxmert.LxmertConfig": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_lxmert.LxmertConfig.__init__": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_marian": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_marian.MarianConfig": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_mbart": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_mbart.MBartConfig": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_mmbt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_mmbt.MMBTConfig": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_mmbt.MMBTConfig.__init__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_mobilebert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_mobilebert.MobileBertConfig": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_mobilebert.MobileBertConfig.__init__": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_openai": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_openai.OpenAIGPTConfig": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.__init__": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.hidden_size": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.max_position_embeddings": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.num_attention_heads": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.num_hidden_layers": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_pegasus": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_pegasus.PegasusConfig": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_rag": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_rag.RagConfig": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_rag.RagConfig.__init__": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_rag.RagConfig.from_question_encoder_generator_configs": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_rag.RagConfig.to_dict": {
  "lineno": 169,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "transformers.configuration_reformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_reformer.ReformerConfig": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_reformer.ReformerConfig.__init__": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_retribert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_retribert.RetriBertConfig": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_retribert.RetriBertConfig.__init__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_roberta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_roberta.RobertaConfig": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_roberta.RobertaConfig.__init__": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_t5": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_t5.T5Config": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_t5.T5Config.__init__": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_t5.T5Config.hidden_size": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_t5.T5Config.max_position_embeddings": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_t5.T5Config.num_attention_heads": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_t5.T5Config.num_hidden_layers": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_transfo_xl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.__init__": {
  "lineno": 113,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.hidden_size": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.max_position_embeddings": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.n_token": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.num_attention_heads": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.num_hidden_layers": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_utils.PretrainedConfig": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_utils.PretrainedConfig.__eq__": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.__init__": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.__repr__": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig._dict_from_json_file": {
  "lineno": 439,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.from_dict": {
  "lineno": 385,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.from_json_file": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.from_pretrained": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.get_config_dict": {
  "lineno": 318,
  "symbols_in_volume": [
   "json.JSONDecodeError",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join",
   "typing.Any",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.num_labels": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.save_pretrained": {
  "lineno": 237,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.to_dict": {
  "lineno": 474,
  "symbols_in_volume": [
   "copy.deepcopy",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.to_diff_dict": {
  "lineno": 451,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.to_json_file": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.to_json_string": {
  "lineno": 486,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.update": {
  "lineno": 518,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.use_return_dict": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_xlm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_xlm.XLMConfig": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_xlm.XLMConfig.__init__": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_xlm.XLMConfig.hidden_size": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_xlm.XLMConfig.n_words": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_xlm.XLMConfig.num_attention_heads": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_xlm.XLMConfig.num_hidden_layers": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_xlm_roberta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_xlm_roberta.XLMRobertaConfig": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_xlnet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.configuration_xlnet.XLNetConfig": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.configuration_xlnet.XLNetConfig.__init__": {
  "lineno": 137,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.hidden_size": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.max_position_embeddings": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.n_token": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.num_attention_heads": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.num_hidden_layers": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_albert_original_tf_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_albert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.save",
   "transformers.AlbertConfig.from_json_file",
   "transformers.AlbertForPreTraining",
   "transformers.load_tf_weights_in_albert"
  ],
  "type": "function"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "fairseq.__version__",
   "packaging.version.parse",
   "transformers.BartForSequenceClassification",
   "transformers.BartModel",
   "transformers.utils.logging.get_logger",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.convert_bart_checkpoint": {
  "lineno": 81,
  "symbols_in_volume": [
   "os.path.exists",
   "pathlib.Path",
   "torch.eq",
   "torch.hub.load",
   "torch.no_grad",
   "transformers.BartConfig.from_pretrained",
   "transformers.BartForConditionalGeneration",
   "transformers.BartForSequenceClassification",
   "transformers.BartModel",
   "transformers.BartTokenizer.from_pretrained",
   "transformers.modeling_bart._make_linear_from_emb"
  ],
  "type": "function"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.load_xsum_checkpoint": {
  "lineno": 73,
  "symbols_in_volume": [
   "torch.hub.load",
   "torch.load"
  ],
  "type": "function"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.remove_ignore_keys_": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.rename_key": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.utils.logging.get_logger",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.convert_tf2_checkpoint_to_pytorch": {
  "lineno": 193,
  "symbols_in_volume": [
   "torch.save",
   "transformers.BertConfig.from_json_file",
   "transformers.BertModel"
  ],
  "type": "function"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.load_tf2_weights_in_bert": {
  "lineno": 25,
  "symbols_in_volume": [
   "os.path.abspath",
   "re.match",
   "tensorflow.train.list_variables",
   "tensorflow.train.load_variable",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.save",
   "transformers.BertConfig.from_json_file",
   "transformers.BertForPreTraining",
   "transformers.load_tf_weights_in_bert"
  ],
  "type": "function"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.convert_pytorch_checkpoint_to_tf": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.allclose",
   "os.makedirs",
   "os.path.isdir",
   "os.path.join",
   "tensorflow.Session",
   "tensorflow.keras.backend.set_value",
   "tensorflow.reset_default_graph",
   "tensorflow.train.Saver",
   "tensorflow.trainable_variables",
   "transformers.BertModel"
  ],
  "type": "function"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.convert_pytorch_checkpoint_to_tf.create_tf_var": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.ndarray",
   "tensorflow.Session",
   "tensorflow.dtypes.as_dtype",
   "tensorflow.get_variable",
   "tensorflow.variables_initializer",
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.convert_pytorch_checkpoint_to_tf.to_tf_var_name": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.main": {
  "lineno": 92,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "torch.load",
   "transformers.BertModel.from_pretrained"
  ],
  "type": "function"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "os.path.join"
  ],
  "type": "module"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.convert_dialogpt_checkpoint": {
  "lineno": 15,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.join",
   "torch.load",
   "torch.save",
   "transformers.file_utils.WEIGHTS_NAME"
  ],
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "collections.namedtuple",
   "pathlib.Path"
  ],
  "type": "module"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRContextEncoderState": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRContextEncoderState.load_dpr_model": {
  "lineno": 42,
  "symbols_in_volume": [
   "transformers.BertConfig.get_config_dict",
   "transformers.DPRConfig",
   "transformers.DPRContextEncoder"
  ],
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRQuestionEncoderState": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRQuestionEncoderState.load_dpr_model": {
  "lineno": 59,
  "symbols_in_volume": [
   "transformers.BertConfig.get_config_dict",
   "transformers.DPRConfig",
   "transformers.DPRQuestionEncoder"
  ],
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRReaderState": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRReaderState.load_dpr_model": {
  "lineno": 76,
  "symbols_in_volume": [
   "transformers.BertConfig.get_config_dict",
   "transformers.DPRConfig",
   "transformers.DPRReader"
  ],
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRState": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRState.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRState.from_type": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRState.load_dpr_model": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.convert": {
  "lineno": 89,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.load_states_from_checkpoint": {
  "lineno": 16,
  "symbols_in_volume": [
   "torch.load",
   "torch.serialization.default_restore_location"
  ],
  "type": "function"
 },
 "transformers.convert_electra_original_tf_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_electra_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.save",
   "transformers.ElectraConfig.from_json_file",
   "transformers.ElectraForMaskedLM",
   "transformers.ElectraForPreTraining",
   "transformers.load_tf_weights_in_electra"
  ],
  "type": "function"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.logging.set_verbosity_warning"
  ],
  "type": "module"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.convert_fsmt_checkpoint_to_pytorch": {
  "lineno": 91,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "fairseq.data.dictionary.Dictionary.load",
   "fairseq.hub_utils.from_pretrained",
   "fairseq.model_parallel.models.transformer.ModelParallelTransformerModel",
   "json.dumps",
   "os.makedirs",
   "os.path.basename",
   "os.path.dirname",
   "os.path.exists",
   "os.path.join",
   "re.M",
   "re.sub",
   "torch.save",
   "transformers.WEIGHTS_NAME",
   "transformers.configuration_fsmt.FSMTConfig.from_pretrained",
   "transformers.modeling_fsmt.FSMTForConditionalGeneration",
   "transformers.tokenization_fsmt.VOCAB_FILES_NAMES",
   "transformers.tokenization_utils_base.TOKENIZER_CONFIG_FILE"
  ],
  "type": "function"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.rewrite_dict_keys": {
  "lineno": 79,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "transformers.convert_funnel_original_tf_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "logging.INFO",
   "logging.basicConfig"
  ],
  "type": "module"
 },
 "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.save",
   "transformers.FunnelConfig.from_json_file",
   "transformers.FunnelForPreTraining",
   "transformers.load_tf_weights_in_funnel"
  ],
  "type": "function"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.convert_gpt2_checkpoint_to_pytorch": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.save",
   "transformers.CONFIG_NAME",
   "transformers.GPT2Config",
   "transformers.GPT2Config.from_json_file",
   "transformers.GPT2Model",
   "transformers.WEIGHTS_NAME",
   "transformers.load_tf_weights_in_gpt2"
  ],
  "type": "function"
 },
 "transformers.convert_graph_to_onnx": {
  "lineno": null,
  "symbols_in_volume": [
   "onnxruntime.quantization.quantize",
   "packaging.version.parse",
   "pathlib.Path"
  ],
  "type": "module"
 },
 "transformers.convert_graph_to_onnx.OnnxConverterArgumentParser": {
  "lineno": 32,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "class"
 },
 "transformers.convert_graph_to_onnx.OnnxConverterArgumentParser.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.check_onnxruntime_requirements": {
  "lineno": 90,
  "symbols_in_volume": [
   "onnxruntime.__version__",
   "packaging.version.Version",
   "packaging.version.parse"
  ],
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.convert": {
  "lineno": 309,
  "symbols_in_volume": [
   "os.listdir",
   "os.makedirs",
   "pathlib.Path",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.convert_pytorch": {
  "lineno": 235,
  "symbols_in_volume": [
   "pathlib.Path",
   "torch.__version__",
   "torch.no_grad",
   "torch.onnx.export",
   "transformers.is_torch_available",
   "transformers.pipelines.Pipeline"
  ],
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.convert_tensorflow": {
  "lineno": 273,
  "symbols_in_volume": [
   "keras2onnx.__version__",
   "keras2onnx.convert_keras",
   "keras2onnx.save_model",
   "pathlib.Path",
   "tensorflow.version.VERSION",
   "transformers.is_tf_available",
   "transformers.pipelines.Pipeline"
  ],
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.ensure_valid_input": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.generate_identified_filename": {
  "lineno": 78,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.infer_shapes": {
  "lineno": 145,
  "symbols_in_volume": [
   "transformers.file_utils.ModelOutput",
   "transformers.pipelines.Pipeline",
   "transformers.tokenization_utils.BatchEncoding",
   "typing.Dict",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.infer_shapes.build_shape_dict": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.load_graph_from_args": {
  "lineno": 207,
  "symbols_in_volume": [
   "transformers.is_tf_available",
   "transformers.is_torch_available",
   "transformers.pipelines.Pipeline",
   "transformers.pipelines.pipeline",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.optimize": {
  "lineno": 350,
  "symbols_in_volume": [
   "onnxruntime.InferenceSession",
   "onnxruntime.SessionOptions",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.quantize": {
  "lineno": 374,
  "symbols_in_volume": [
   "onnx.load",
   "onnx.save_model",
   "onnxruntime.quantization.QuantizationMode.IntegerOps",
   "onnxruntime.quantization.quantize",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.verify": {
  "lineno": 410,
  "symbols_in_volume": [
   "onnxruntime.InferenceSession",
   "onnxruntime.SessionOptions",
   "onnxruntime.capi.onnxruntime_pybind11_state.RuntimeException",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "module"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.LightningModel": {
  "lineno": 26,
  "symbols_in_volume": [
   "pytorch_lightning.LightningModule"
  ],
  "type": "class"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.LightningModel.__init__": {
  "lineno": 27,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.LightningModel.forward": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.convert_longformer_qa_checkpoint_to_pytorch": {
  "lineno": 38,
  "symbols_in_volume": [
   "torch.device",
   "torch.load",
   "transformers.modeling_longformer.LongformerForQuestionAnswering.from_pretrained",
   "transformers.modeling_longformer.LongformerModel.from_pretrained"
  ],
  "type": "function"
 },
 "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "logging.INFO",
   "logging.basicConfig"
  ],
  "type": "module"
 },
 "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.save",
   "transformers.LxmertConfig.from_json_file",
   "transformers.LxmertForPreTraining",
   "transformers.load_tf_weights_in_lxmert"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "pathlib.Path"
  ],
  "type": "module"
 },
 "transformers.convert_marian_to_pytorch.OpusState": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.convert_marian_to_pytorch.OpusState.__init__": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy.load",
   "transformers.MarianConfig"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.OpusState._check_layer_entries": {
  "lineno": 617,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.OpusState.extra_keys": {
  "lineno": 628,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.OpusState.load_marian_model": {
  "lineno": 645,
  "symbols_in_volume": [
   "torch.FloatTensor",
   "torch.nn.Parameter",
   "torch.tensor",
   "transformers.MarianMTModel"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.OpusState.sub_keys": {
  "lineno": 642,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch._cast_yaml_str": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch._parse_readme": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch._process_benchmark_table_row": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.add_emb_entries": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.add_special_tokens_to_vocab": {
  "lineno": 487,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.add_to_vocab_": {
  "lineno": 472,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.cast_marian_config": {
  "lineno": 163,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.check_equal": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.check_if_models_are_dominated": {
  "lineno": 39,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.check_if_models_are_dominated.get_old_bleu": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.check_marian_cfg_assumptions": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.convert": {
  "lineno": 695,
  "symbols_in_volume": [
   "pathlib.Path",
   "transformers.MarianTokenizer.from_pretrained"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.convert_all_sentencepiece_models": {
  "lineno": 400,
  "symbols_in_volume": [
   "os.path.exists",
   "pathlib.Path",
   "tqdm.tqdm"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.convert_encoder_layer": {
  "lineno": 111,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.convert_hf_name_to_opus_name": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.convert_opus_name_to_hf_name": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.convert_whole_dir": {
  "lineno": 435,
  "symbols_in_volume": [
   "pathlib.Path",
   "tqdm.tqdm"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.download_and_unzip": {
  "lineno": 684,
  "symbols_in_volume": [
   "os.remove",
   "wget.download"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.expand_group_to_two_letter_codes": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.fetch_test_set": {
  "lineno": 420,
  "symbols_in_volume": [
   "os.remove",
   "pathlib.Path",
   "wget.download"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.find_model_file": {
  "lineno": 178,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.find_pretrained_model": {
  "lineno": 129,
  "symbols_in_volume": [
   "transformers.hf_api.HfApi",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.find_vocab_file": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.get_clean_model_id_mapping": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.get_released_df": {
  "lineno": 76,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.read_csv",
   "pandas.to_datetime"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.get_system_metadata": {
  "lineno": 239,
  "symbols_in_volume": [
   "git.Repo",
   "socket.gethostname",
   "time.strftime"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.get_tags": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.get_two_letter_code": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.lmap": {
  "lineno": 416,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.load_config_from_state_dict": {
  "lineno": 170,
  "symbols_in_volume": [
   "yaml.BaseLoader",
   "yaml.load"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.load_layers_": {
  "lineno": 122,
  "symbols_in_volume": [
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.load_yaml": {
  "lineno": 716,
  "symbols_in_volume": [
   "yaml.BaseLoader",
   "yaml.load"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.make_registry": {
  "lineno": 368,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.make_tatoeba_registry": {
  "lineno": 385,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.process_last_benchmark_table": {
  "lineno": 32,
  "symbols_in_volume": [
   "pathlib.Path",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.remove_prefix": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.remove_suffix": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.resolve_lang_code": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.save_json": {
  "lineno": 723,
  "symbols_in_volume": [
   "json.dump",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.save_tokenizer": {
  "lineno": 496,
  "symbols_in_volume": [
   "pathlib.Path",
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.save_tokenizer_config": {
  "lineno": 466,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.unzip": {
  "lineno": 728,
  "symbols_in_volume": [
   "zipfile.ZipFile"
  ],
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.write_model_card": {
  "lineno": 261,
  "symbols_in_volume": [
   "pandas.Series",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "transformers.convert_mbart_original_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser"
  ],
  "type": "module"
 },
 "transformers.convert_mbart_original_checkpoint_to_pytorch.convert_fairseq_mbart_checkpoint_from_disk": {
  "lineno": 10,
  "symbols_in_volume": [
   "torch.load",
   "transformers.BartForConditionalGeneration",
   "transformers.MBartConfig.from_pretrained"
  ],
  "type": "function"
 },
 "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "lineno": 12,
  "symbols_in_volume": [
   "torch.save",
   "transformers.MobileBertConfig.from_json_file",
   "transformers.MobileBertForPreTraining",
   "transformers.load_tf_weights_in_mobilebert"
  ],
  "type": "function"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.convert_openai_checkpoint_to_pytorch": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.save",
   "transformers.CONFIG_NAME",
   "transformers.OpenAIGPTConfig",
   "transformers.OpenAIGPTConfig.from_json_file",
   "transformers.OpenAIGPTModel",
   "transformers.WEIGHTS_NAME",
   "transformers.load_tf_weights_in_openai_gpt"
  ],
  "type": "function"
 },
 "transformers.convert_pegasus_tf_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "os.path.join",
   "pathlib.Path"
  ],
  "type": "module"
 },
 "transformers.convert_pegasus_tf_to_pytorch.convert_pegasus": {
  "lineno": 60,
  "symbols_in_volume": [
   "torch.tensor",
   "torch.zeros_like",
   "transformers.PegasusConfig",
   "transformers.PegasusForConditionalGeneration",
   "transformers.configuration_pegasus.DEFAULTS.copy"
  ],
  "type": "function"
 },
 "transformers.convert_pegasus_tf_to_pytorch.convert_pegasus_ckpt_to_pytorch": {
  "lineno": 104,
  "symbols_in_volume": [
   "pathlib.Path",
   "torch.save",
   "transformers.PegasusTokenizer.from_pretrained",
   "transformers.configuration_pegasus.task_specific_params"
  ],
  "type": "function"
 },
 "transformers.convert_pegasus_tf_to_pytorch.get_tf_weights_as_numpy": {
  "lineno": 91,
  "symbols_in_volume": [
   "tensorflow.train.list_variables",
   "tensorflow.train.load_variable",
   "tqdm.tqdm",
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.convert_pegasus_tf_to_pytorch.rename_state_dict_key": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.ALBERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.AlbertConfig",
   "transformers.AlbertForPreTraining",
   "transformers.BERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.BertConfig",
   "transformers.BertForPreTraining",
   "transformers.BertForQuestionAnswering",
   "transformers.BertForSequenceClassification",
   "transformers.CAMEMBERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.CTRLConfig",
   "transformers.CTRLLMHeadModel",
   "transformers.CTRL_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.CamembertConfig",
   "transformers.CamembertForMaskedLM",
   "transformers.DISTILBERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.DistilBertConfig",
   "transformers.DistilBertForMaskedLM",
   "transformers.DistilBertForQuestionAnswering",
   "transformers.ELECTRA_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.ElectraConfig",
   "transformers.ElectraForPreTraining",
   "transformers.FLAUBERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.FlaubertConfig",
   "transformers.FlaubertWithLMHeadModel",
   "transformers.GPT2Config",
   "transformers.GPT2LMHeadModel",
   "transformers.GPT2_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.LXMERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.LxmertConfig",
   "transformers.LxmertForPreTraining",
   "transformers.LxmertVisualFeatureEncoder",
   "transformers.OPENAI_GPT_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.OpenAIGPTConfig",
   "transformers.OpenAIGPTLMHeadModel",
   "transformers.ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.RobertaConfig",
   "transformers.RobertaForMaskedLM",
   "transformers.RobertaForSequenceClassification",
   "transformers.T5Config",
   "transformers.T5ForConditionalGeneration",
   "transformers.T5_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.TFAlbertForPreTraining",
   "transformers.TFBertForPreTraining",
   "transformers.TFBertForQuestionAnswering",
   "transformers.TFBertForSequenceClassification",
   "transformers.TFCTRLLMHeadModel",
   "transformers.TFCamembertForMaskedLM",
   "transformers.TFDistilBertForMaskedLM",
   "transformers.TFDistilBertForQuestionAnswering",
   "transformers.TFElectraForPreTraining",
   "transformers.TFFlaubertWithLMHeadModel",
   "transformers.TFGPT2LMHeadModel",
   "transformers.TFLxmertForPreTraining",
   "transformers.TFLxmertVisualFeatureEncoder",
   "transformers.TFOpenAIGPTLMHeadModel",
   "transformers.TFRobertaForMaskedLM",
   "transformers.TFRobertaForSequenceClassification",
   "transformers.TFT5ForConditionalGeneration",
   "transformers.TFTransfoXLLMHeadModel",
   "transformers.TFXLMRobertaForMaskedLM",
   "transformers.TFXLMWithLMHeadModel",
   "transformers.TFXLNetLMHeadModel",
   "transformers.TRANSFO_XL_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.TransfoXLConfig",
   "transformers.TransfoXLLMHeadModel",
   "transformers.XLMConfig",
   "transformers.XLMRobertaConfig",
   "transformers.XLMRobertaForMaskedLM",
   "transformers.XLMWithLMHeadModel",
   "transformers.XLM_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.XLM_ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.XLNET_PRETRAINED_CONFIG_ARCHIVE_MAP",
   "transformers.XLNetConfig",
   "transformers.XLNetLMHeadModel",
   "transformers.is_torch_available",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.convert_all_pt_checkpoints_to_tf": {
  "lineno": 297,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.path.join",
   "os.remove",
   "transformers.cached_path"
  ],
  "type": "function"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.convert_pt_checkpoint_to_tf": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.amax",
   "torch.load",
   "torch.no_grad",
   "transformers.WEIGHTS_NAME",
   "transformers.cached_path",
   "transformers.file_utils.hf_bucket_url",
   "transformers.load_pytorch_checkpoint_in_tf2_model"
  ],
  "type": "function"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.convert_trax_checkpoint_to_pytorch": {
  "lineno": 185,
  "symbols_in_volume": [
   "pickle.load",
   "torch.save",
   "transformers.ReformerConfig.from_json_file",
   "transformers.ReformerModelWithLMHead"
  ],
  "type": "function"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_block_weights_in_torch": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.asarray",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_layer_weights_in_torch_local": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.asarray",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_layer_weights_in_torch_lsh": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.asarray",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_model_weights_in_torch": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.asarray",
   "torch.nn.Parameter",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_param": {
  "lineno": 31,
  "symbols_in_volume": [
   "torch.nn.Parameter"
  ],
  "type": "function"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "fairseq.__version__",
   "packaging.version.parse",
   "transformers.utils.logging.get_logger",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.convert_roberta_checkpoint_to_pytorch": {
  "lineno": 42,
  "symbols_in_volume": [
   "fairseq.models.roberta.RobertaModel.from_pretrained",
   "fairseq.modules.TransformerSentenceEncoderLayer",
   "pathlib.Path",
   "torch.Size",
   "torch.Tensor",
   "torch.abs",
   "torch.allclose",
   "torch.max",
   "torch.zeros_like",
   "transformers.modeling_bert.BertIntermediate",
   "transformers.modeling_bert.BertLayer",
   "transformers.modeling_bert.BertOutput",
   "transformers.modeling_bert.BertSelfAttention",
   "transformers.modeling_bert.BertSelfOutput",
   "transformers.modeling_roberta.RobertaConfig",
   "transformers.modeling_roberta.RobertaForMaskedLM",
   "transformers.modeling_roberta.RobertaForSequenceClassification"
  ],
  "type": "function"
 },
 "transformers.convert_t5_original_tf_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_t5_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "lineno": 29,
  "symbols_in_volume": [
   "torch.save",
   "transformers.T5Config.from_json_file",
   "transformers.T5Model",
   "transformers.load_tf_weights_in_t5"
  ],
  "type": "function"
 },
 "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "lineno": 33,
  "symbols_in_volume": [
   "transformers.BertConfig.from_pretrained",
   "transformers.BertGenerationConfig",
   "transformers.BertGenerationDecoder",
   "transformers.BertGenerationEncoder",
   "transformers.load_tf_weights_in_bert_generation"
  ],
  "type": "function"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "sys.modules",
   "transformers.tokenization_transfo_xl",
   "transformers.tokenization_transfo_xl.Corpus",
   "transformers.tokenization_transfo_xl.TransfoXLCorpus",
   "transformers.tokenization_transfo_xl.TransfoXLTokenizer",
   "transformers.tokenization_transfo_xl.Vocab",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.convert_transfo_xl_checkpoint_to_pytorch": {
  "lineno": 47,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.join",
   "pickle.load",
   "torch.save",
   "transformers.CONFIG_NAME",
   "transformers.TransfoXLConfig",
   "transformers.TransfoXLConfig.from_json_file",
   "transformers.TransfoXLLMHeadModel",
   "transformers.WEIGHTS_NAME",
   "transformers.load_tf_weights_in_transfo_xl",
   "transformers.tokenization_transfo_xl.CORPUS_NAME",
   "transformers.tokenization_transfo_xl.VOCAB_FILES_NAMES"
  ],
  "type": "function"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.convert_xlm_checkpoint_to_pytorch": {
  "lineno": 32,
  "symbols_in_volume": [
   "json.dumps",
   "numpy.ndarray",
   "torch.FloatTensor",
   "torch.load",
   "torch.save",
   "transformers.CONFIG_NAME",
   "transformers.WEIGHTS_NAME",
   "transformers.tokenization_xlm.VOCAB_FILES_NAMES"
  ],
  "type": "function"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch": {
  "lineno": null,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "transformers.utils.logging.set_verbosity_info"
  ],
  "type": "module"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.convert_xlnet_checkpoint_to_pytorch": {
  "lineno": 51,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.join",
   "torch.save",
   "transformers.CONFIG_NAME",
   "transformers.WEIGHTS_NAME",
   "transformers.XLNetConfig.from_json_file",
   "transformers.XLNetForQuestionAnswering",
   "transformers.XLNetForSequenceClassification",
   "transformers.XLNetLMHeadModel",
   "transformers.load_tf_weights_in_xlnet"
  ],
  "type": "function"
 },
 "transformers.data": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.data.data_collator": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Callable",
   "typing.Dict",
   "typing.List",
   "typing.NewType"
  ],
  "type": "module"
 },
 "transformers.data.data_collator.DataCollatorForLanguageModeling": {
  "lineno": 119,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "transformers.data.data_collator.DataCollatorForLanguageModeling.__call__": {
  "lineno": 131,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForLanguageModeling._tensorize_batch": {
  "lineno": 146,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.long",
   "torch.nn.utils.rnn.pad_sequence",
   "torch.stack",
   "torch.tensor",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForLanguageModeling.mask_tokens": {
  "lineno": 164,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.bernoulli",
   "torch.bool",
   "torch.full",
   "torch.long",
   "torch.randint",
   "torch.tensor",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForNextSentencePrediction": {
  "lineno": 401,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "transformers.data.data_collator.DataCollatorForNextSentencePrediction.__call__": {
  "lineno": 416,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.tensor",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForNextSentencePrediction._tensorize_batch": {
  "lineno": 456,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.utils.rnn.pad_sequence",
   "torch.stack",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForNextSentencePrediction.create_features_from_example": {
  "lineno": 469,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForNextSentencePrediction.mask_tokens": {
  "lineno": 498,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.bernoulli",
   "torch.bool",
   "torch.full",
   "torch.long",
   "torch.randint",
   "torch.tensor",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForPermutationLanguageModeling": {
  "lineno": 269,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "transformers.data.data_collator.DataCollatorForPermutationLanguageModeling.__call__": {
  "lineno": 281,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForPermutationLanguageModeling._tensorize_batch": {
  "lineno": 290,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.utils.rnn.pad_sequence",
   "torch.stack",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForPermutationLanguageModeling.mask_tokens": {
  "lineno": 308,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.arange",
   "torch.bool",
   "torch.eye",
   "torch.flatten",
   "torch.float32",
   "torch.full",
   "torch.randint",
   "torch.randperm",
   "torch.tensor",
   "torch.zeros",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForSOP": {
  "lineno": 200,
  "symbols_in_volume": [
   "dataclasses.dataclass"
  ],
  "type": "class"
 },
 "transformers.data.data_collator.DataCollatorForSOP.__call__": {
  "lineno": 208,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.utils.rnn.pad_sequence",
   "torch.stack",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForSOP.mask_tokens": {
  "lineno": 228,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.bernoulli",
   "torch.bool",
   "torch.full",
   "torch.long",
   "torch.randint",
   "torch.tensor",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorWithPadding": {
  "lineno": 70,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "class"
 },
 "transformers.data.data_collator.DataCollatorWithPadding.__call__": {
  "lineno": 102,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.data.data_collator.default_data_collator": {
  "lineno": 21,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.float",
   "torch.long",
   "torch.stack",
   "torch.tensor",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.data.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.data.datasets.glue": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.data.datasets.glue.GlueDataTrainingArguments": {
  "lineno": 24,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field"
  ],
  "type": "class"
 },
 "transformers.data.datasets.glue.GlueDataTrainingArguments.__post_init__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.datasets.glue.GlueDataset": {
  "lineno": 59,
  "symbols_in_volume": [
   "torch.utils.data.dataset.Dataset",
   "typing.List"
  ],
  "type": "class"
 },
 "transformers.data.datasets.glue.GlueDataset.__getitem__": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.datasets.glue.GlueDataset.__init__": {
  "lineno": 69,
  "symbols_in_volume": [
   "filelock.FileLock",
   "os.path.exists",
   "os.path.join",
   "time.time",
   "torch.load",
   "torch.save",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.data.datasets.glue.GlueDataset.__len__": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.datasets.glue.GlueDataset.get_labels": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.datasets.glue.Split": {
  "lineno": 53,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "transformers.data.datasets.language_modeling": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.data.datasets.language_modeling.LineByLineTextDataset": {
  "lineno": 91,
  "symbols_in_volume": [
   "torch.utils.data.dataset.Dataset"
  ],
  "type": "class"
 },
 "transformers.data.datasets.language_modeling.LineByLineTextDataset.__getitem__": {
  "lineno": 113,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.long",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineTextDataset.__init__": {
  "lineno": 97,
  "symbols_in_volume": [
   "os.path.isfile"
  ],
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset": {
  "lineno": 117,
  "symbols_in_volume": [
   "torch.utils.data.dataset.Dataset"
  ],
  "type": "class"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__getitem__": {
  "lineno": 254,
  "symbols_in_volume": [
   "torch.tensor",
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__init__": {
  "lineno": 122,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document": {
  "lineno": 155,
  "symbols_in_volume": [
   "random.randint",
   "random.random",
   "torch.long",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document.truncate_seq_pair": {
  "lineno": 216,
  "symbols_in_volume": [
   "random.random"
  ],
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.TextDataset": {
  "lineno": 19,
  "symbols_in_volume": [
   "torch.utils.data.dataset.Dataset"
  ],
  "type": "class"
 },
 "transformers.data.datasets.language_modeling.TextDataset.__getitem__": {
  "lineno": 87,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.long",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.TextDataset.__init__": {
  "lineno": 25,
  "symbols_in_volume": [
   "filelock.FileLock",
   "os.path.exists",
   "os.path.isfile",
   "os.path.join",
   "os.path.split",
   "pickle.HIGHEST_PROTOCOL",
   "pickle.dump",
   "pickle.load",
   "time.time",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.TextDataset.__len__": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction": {
  "lineno": 258,
  "symbols_in_volume": [
   "torch.utils.data.dataset.Dataset"
  ],
  "type": "class"
 },
 "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__getitem__": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__init__": {
  "lineno": 264,
  "symbols_in_volume": [
   "filelock.FileLock",
   "os.path.exists",
   "os.path.isfile",
   "os.path.join",
   "os.path.split",
   "pickle.HIGHEST_PROTOCOL",
   "pickle.dump",
   "pickle.load",
   "time.time"
  ],
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.create_examples_from_document": {
  "lineno": 347,
  "symbols_in_volume": [
   "random.randint",
   "random.random",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.data.datasets.squad": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.data.datasets.squad.Split": {
  "lineno": 82,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "transformers.data.datasets.squad.SquadDataTrainingArguments": {
  "lineno": 24,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field"
  ],
  "type": "class"
 },
 "transformers.data.datasets.squad.SquadDataset": {
  "lineno": 87,
  "symbols_in_volume": [
   "torch.utils.data.dataset.Dataset",
   "typing.List"
  ],
  "type": "class"
 },
 "transformers.data.datasets.squad.SquadDataset.__getitem__": {
  "lineno": 180,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.float",
   "torch.int64",
   "torch.long",
   "torch.ones",
   "torch.tensor",
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.data.datasets.squad.SquadDataset.__init__": {
  "lineno": 98,
  "symbols_in_volume": [
   "filelock.FileLock",
   "os.path.exists",
   "os.path.join",
   "time.time",
   "torch.load",
   "torch.save",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.data.datasets.squad.SquadDataset.__len__": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.data.metrics.acc_and_f1": {
  "lineno": 36,
  "symbols_in_volume": [
   "sklearn.metrics.f1_score"
  ],
  "type": "function"
 },
 "transformers.data.metrics.glue_compute_metrics": {
  "lineno": 54,
  "symbols_in_volume": [
   "sklearn.metrics.matthews_corrcoef"
  ],
  "type": "function"
 },
 "transformers.data.metrics.is_sklearn_available": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.pearson_and_spearman": {
  "lineno": 45,
  "symbols_in_volume": [
   "scipy.stats.pearsonr",
   "scipy.stats.spearmanr"
  ],
  "type": "function"
 },
 "transformers.data.metrics.simple_accuracy": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.data.metrics.squad_metrics._compute_softmax": {
  "lineno": 349,
  "symbols_in_volume": [
   "math.exp"
  ],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics._get_best_indexes": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.apply_no_ans_threshold": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.compute_exact": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.compute_f1": {
  "lineno": 55,
  "symbols_in_volume": [
   "collections.Counter"
  ],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.compute_predictions_log_probs": {
  "lineno": 577,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "collections.defaultdict",
   "collections.namedtuple",
   "json.dumps"
  ],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.compute_predictions_logits": {
  "lineno": 372,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "collections.defaultdict",
   "collections.namedtuple",
   "json.dumps"
  ],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.find_all_best_thresh": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.find_all_best_thresh_v2": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.find_best_thresh": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.find_best_thresh_v2": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.get_final_text": {
  "lineno": 243,
  "symbols_in_volume": [
   "transformers.tokenization_bert.BasicTokenizer"
  ],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.get_final_text._strip_spaces": {
  "lineno": 271,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.get_raw_scores": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.get_tokens": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.make_eval_dict": {
  "lineno": 108,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.merge_eval": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.normalize_answer": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.normalize_answer.lower": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.normalize_answer.remove_articles": {
  "lineno": 28,
  "symbols_in_volume": [
   "re.UNICODE",
   "re.compile",
   "re.sub"
  ],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.normalize_answer.remove_punc": {
  "lineno": 35,
  "symbols_in_volume": [
   "string.punctuation"
  ],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.normalize_answer.white_space_fix": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.squad_evaluate": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.metrics.xnli_compute_metrics": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.data.processors.glue": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.data.processors.glue.ColaProcessor": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.glue.ColaProcessor._create_examples": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor.get_dev_examples": {
  "lineno": 275,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor.get_labels": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor.get_test_examples": {
  "lineno": 279,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor.get_train_examples": {
  "lineno": 271,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.MnliMismatchedProcessor": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples": {
  "lineno": 250,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples": {
  "lineno": 254,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.glue.MnliProcessor._create_examples": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor.get_dev_examples": {
  "lineno": 221,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor.get_labels": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor.get_test_examples": {
  "lineno": 225,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor.get_train_examples": {
  "lineno": 217,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.glue.MrpcProcessor._create_examples": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor.get_dev_examples": {
  "lineno": 179,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor.get_labels": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor.get_test_examples": {
  "lineno": 183,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor.get_train_examples": {
  "lineno": 174,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.OutputMode": {
  "lineno": 157,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "transformers.data.processors.glue.QnliProcessor": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.glue.QnliProcessor._create_examples": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor.get_dev_examples": {
  "lineno": 450,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor.get_labels": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor.get_test_examples": {
  "lineno": 454,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor.get_train_examples": {
  "lineno": 446,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.glue.QqpProcessor._create_examples": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor.get_dev_examples": {
  "lineno": 402,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor.get_labels": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor.get_test_examples": {
  "lineno": 406,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor.get_train_examples": {
  "lineno": 398,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.glue.RteProcessor._create_examples": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor.get_dev_examples": {
  "lineno": 492,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor.get_labels": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor.get_test_examples": {
  "lineno": 496,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor.get_train_examples": {
  "lineno": 488,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.glue.Sst2Processor._create_examples": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor.get_dev_examples": {
  "lineno": 318,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor.get_labels": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor.get_test_examples": {
  "lineno": 322,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor.get_train_examples": {
  "lineno": 314,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.glue.StsbProcessor._create_examples": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor.get_dev_examples": {
  "lineno": 360,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor.get_labels": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor.get_test_examples": {
  "lineno": 364,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor.get_train_examples": {
  "lineno": 356,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.glue.WnliProcessor._create_examples": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor.get_dev_examples": {
  "lineno": 534,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor.get_labels": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor.get_test_examples": {
  "lineno": 538,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor.get_train_examples": {
  "lineno": 530,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue._glue_convert_examples_to_features": {
  "lineno": 102,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue._glue_convert_examples_to_features.label_from_example": {
  "lineno": 124,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue._tf_glue_convert_examples_to_features": {
  "lineno": 71,
  "symbols_in_volume": [
   "tensorflow.TensorShape",
   "tensorflow.data.Dataset",
   "tensorflow.data.Dataset.from_generator",
   "tensorflow.float32",
   "tensorflow.int32",
   "tensorflow.int64",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue._tf_glue_convert_examples_to_features.gen": {
  "lineno": 87,
  "symbols_in_volume": [
   "dataclasses.asdict"
  ],
  "type": "function"
 },
 "transformers.data.processors.glue.glue_convert_examples_to_features": {
  "lineno": 35,
  "symbols_in_volume": [
   "tensorflow.data.Dataset",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.data.processors.squad": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.data.processors.squad.SquadExample": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.squad.SquadExample.__init__": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.squad.SquadFeatures": {
  "lineno": 735,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.squad.SquadFeatures.__init__": {
  "lineno": 760,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.squad.SquadProcessor": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.squad.SquadProcessor._create_examples": {
  "lineno": 625,
  "symbols_in_volume": [
   "tqdm.tqdm"
  ],
  "type": "function"
 },
 "transformers.data.processors.squad.SquadProcessor._get_example_from_tensor_dict": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.squad.SquadProcessor.get_dev_examples": {
  "lineno": 604,
  "symbols_in_volume": [
   "json.load",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.squad.SquadProcessor.get_examples_from_dataset": {
  "lineno": 551,
  "symbols_in_volume": [
   "tqdm.tqdm"
  ],
  "type": "function"
 },
 "transformers.data.processors.squad.SquadProcessor.get_train_examples": {
  "lineno": 582,
  "symbols_in_volume": [
   "json.load",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.squad.SquadResult": {
  "lineno": 797,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.squad.SquadResult.__init__": {
  "lineno": 807,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.squad.SquadV1Processor": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.squad.SquadV2Processor": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.squad._check_is_max_context": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.squad._improve_answer_span": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.squad._is_whitespace": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.squad._new_check_is_max_context": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.squad.squad_convert_example_to_features": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.ones_like",
   "numpy.where"
  ],
  "type": "function"
 },
 "transformers.data.processors.squad.squad_convert_example_to_features_init": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.squad.squad_convert_examples_to_features": {
  "lineno": 294,
  "symbols_in_volume": [
   "functools.partial",
   "multiprocessing.Pool",
   "multiprocessing.cpu_count",
   "tensorflow.TensorShape",
   "tensorflow.data.Dataset.from_generator",
   "tensorflow.int32",
   "tensorflow.int64",
   "tensorflow.string",
   "torch.arange",
   "torch.float",
   "torch.long",
   "torch.tensor",
   "torch.utils.data.TensorDataset",
   "tqdm.tqdm"
  ],
  "type": "function"
 },
 "transformers.data.processors.squad.squad_convert_examples_to_features.gen": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.data.processors.utils.DataProcessor": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.utils.DataProcessor._read_tsv": {
  "lineno": 117,
  "symbols_in_volume": [
   "csv.reader"
  ],
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.get_dev_examples": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.get_example_from_tensor_dict": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.get_labels": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.get_test_examples": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.get_train_examples": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.tfds_map": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.utils.InputExample": {
  "lineno": 30,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.Optional"
  ],
  "type": "class"
 },
 "transformers.data.processors.utils.InputExample.to_json_string": {
  "lineno": 50,
  "symbols_in_volume": [
   "dataclasses.asdict",
   "json.dumps"
  ],
  "type": "function"
 },
 "transformers.data.processors.utils.InputFeatures": {
  "lineno": 55,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "class"
 },
 "transformers.data.processors.utils.InputFeatures.to_json_string": {
  "lineno": 77,
  "symbols_in_volume": [
   "dataclasses.asdict",
   "json.dumps"
  ],
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.__getitem__": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.__init__": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.__len__": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.add_examples": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.add_examples_from_csv": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.create_from_csv": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.create_from_examples": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.get_features": {
  "lineno": 231,
  "symbols_in_volume": [
   "tensorflow.TensorShape",
   "tensorflow.data.Dataset.from_generator",
   "tensorflow.int32",
   "tensorflow.int64",
   "torch.float",
   "torch.long",
   "torch.tensor",
   "torch.utils.data.TensorDataset"
  ],
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.get_features.gen": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.xnli": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.data.processors.xnli.XnliProcessor": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.data.processors.xnli.XnliProcessor.__init__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.xnli.XnliProcessor.get_labels": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.data.processors.xnli.XnliProcessor.get_test_examples": {
  "lineno": 54,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.processors.xnli.XnliProcessor.get_train_examples": {
  "lineno": 36,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.data.test_generation_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "transformers.is_torch_available"
  ],
  "type": "module"
 },
 "transformers.data.test_generation_utils.GenerationUtilsTest": {
  "lineno": 17,
  "symbols_in_volume": [
   "transformers.testing_utils.require_torch",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "transformers.data.test_generation_utils.GenerationUtilsTest.config": {
  "lineno": 19,
  "symbols_in_volume": [
   "transformers.MarianConfig.from_pretrained",
   "transformers.file_utils.cached_property"
  ],
  "type": "function"
 },
 "transformers.data.test_generation_utils.GenerationUtilsTest.model": {
  "lineno": 24,
  "symbols_in_volume": [
   "transformers.MarianMTModel",
   "transformers.file_utils.cached_property"
  ],
  "type": "function"
 },
 "transformers.data.test_generation_utils.GenerationUtilsTest.test_postprocess_next_token_scores": {
  "lineno": 28,
  "symbols_in_volume": [
   "torch.arange",
   "torch.rand"
  ],
  "type": "function"
 },
 "transformers.data.test_generation_utils.GenerationUtilsTest.test_postprocess_next_token_scores_large_bad_words_list": {
  "lineno": 61,
  "symbols_in_volume": [
   "random.randint",
   "random.sample",
   "timeout_decorator.timeout",
   "torch.arange",
   "torch.rand"
  ],
  "type": "function"
 },
 "transformers.file_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "datasets",
   "datasets.__version__",
   "faiss.__version__",
   "os.environ.get",
   "os.getenv",
   "os.path.expanduser",
   "os.path.join",
   "tensorflow",
   "tensorflow.__version__",
   "torch.__version__",
   "torch.hub._get_torch_home"
  ],
  "type": "module"
 },
 "transformers.file_utils.ModelOutput": {
  "lineno": 978,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "class"
 },
 "transformers.file_utils.ModelOutput.__delitem__": {
  "lineno": 1029,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.__getitem__": {
  "lineno": 1041,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.__post_init__": {
  "lineno": 989,
  "symbols_in_volume": [
   "dataclasses.fields"
  ],
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.__setattr__": {
  "lineno": 1048,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.__setitem__": {
  "lineno": 1054,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.pop": {
  "lineno": 1035,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.setdefault": {
  "lineno": 1032,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.to_tuple": {
  "lineno": 1060,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.update": {
  "lineno": 1038,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils._convert_output_args_doc": {
  "lineno": 257,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "transformers.file_utils._get_indent": {
  "lineno": 251,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "transformers.file_utils._prepare_output_docstrings": {
  "lineno": 283,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "transformers.file_utils.add_code_sample_docstrings": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.add_code_sample_docstrings.docstring_decorator": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.add_end_docstrings": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.add_end_docstrings.docstring_decorator": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.add_start_docstrings": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.add_start_docstrings.docstring_decorator": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.add_start_docstrings_to_callable": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.add_start_docstrings_to_callable.docstring_decorator": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.cached_path": {
  "lineno": 677,
  "symbols_in_volume": [
   "filelock.FileLock",
   "os.listdir",
   "os.makedirs",
   "os.path.exists",
   "os.path.isdir",
   "os.path.join",
   "os.path.split",
   "pathlib.Path",
   "shutil.rmtree",
   "tarfile.is_tarfile",
   "tarfile.open",
   "typing.Dict",
   "typing.Optional",
   "typing.Union",
   "urllib.parse.urlparse",
   "zipfile.ZipFile",
   "zipfile.is_zipfile"
  ],
  "type": "function"
 },
 "transformers.file_utils.cached_property": {
  "lineno": 916,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.file_utils.cached_property.__get__": {
  "lineno": 925,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.filename_to_url": {
  "lineno": 651,
  "symbols_in_volume": [
   "json.load",
   "os.path.exists",
   "os.path.join",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "transformers.file_utils.get_from_cache": {
  "lineno": 802,
  "symbols_in_volume": [
   "filelock.FileLock",
   "fnmatch.filter",
   "functools.partial",
   "json.dump",
   "os.listdir",
   "os.makedirs",
   "os.path.exists",
   "os.path.join",
   "os.replace",
   "os.stat",
   "pathlib.Path",
   "requests.exceptions.Timeout",
   "requests.head",
   "tempfile.NamedTemporaryFile",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.file_utils.get_from_cache._resumable_file_manager": {
  "lineno": 883,
  "symbols_in_volume": [
   "contextlib.contextmanager"
  ],
  "type": "function"
 },
 "transformers.file_utils.hf_bucket_url": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.http_get": {
  "lineno": 769,
  "symbols_in_volume": [
   "requests.get",
   "sys.version.split",
   "tensorflow.__version__",
   "torch.__version__",
   "tqdm.auto.tqdm",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.file_utils.is_apex_available": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.is_datasets_available": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.is_faiss_available": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.is_psutil_available": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.is_py3nvml_available": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.is_remote_url": {
  "lineno": 592,
  "symbols_in_volume": [
   "urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "transformers.file_utils.is_tensor": {
  "lineno": 963,
  "symbols_in_volume": [
   "numpy.ndarray",
   "tensorflow.Tensor",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "transformers.file_utils.is_tf_available": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.is_torch_available": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.is_torch_tpu_available": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.replace_return_docstrings": {
  "lineno": 572,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.replace_return_docstrings.docstring_decorator": {
  "lineno": 573,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "transformers.file_utils.tf_required": {
  "lineno": 951,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.tf_required.wrapper": {
  "lineno": 953,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "transformers.file_utils.torch_required": {
  "lineno": 939,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.file_utils.torch_required.wrapper": {
  "lineno": 941,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "transformers.file_utils.url_to_filename": {
  "lineno": 627,
  "symbols_in_volume": [
   "hashlib.sha256"
  ],
  "type": "function"
 },
 "transformers.generation_tf_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.generation_tf_utils.BeamHypotheses": {
  "lineno": 1052,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.generation_tf_utils.BeamHypotheses.__init__": {
  "lineno": 1053,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_tf_utils.BeamHypotheses.__len__": {
  "lineno": 1064,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_tf_utils.BeamHypotheses.add": {
  "lineno": 1070,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_tf_utils.BeamHypotheses.is_done": {
  "lineno": 1084,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_tf_utils.TFGenerationMixin": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.generation_tf_utils.TFGenerationMixin._generate_beam_search": {
  "lineno": 571,
  "symbols_in_volume": [
   "tensorflow.argsort",
   "tensorflow.bool",
   "tensorflow.broadcast_to",
   "tensorflow.concat",
   "tensorflow.convert_to_tensor",
   "tensorflow.expand_dims",
   "tensorflow.float32",
   "tensorflow.gather",
   "tensorflow.identity",
   "tensorflow.int32",
   "tensorflow.math.multiply",
   "tensorflow.math.top_k",
   "tensorflow.nn.log_softmax",
   "tensorflow.ones",
   "tensorflow.range",
   "tensorflow.reduce_all",
   "tensorflow.reduce_max",
   "tensorflow.reduce_min",
   "tensorflow.reshape",
   "tensorflow.stack",
   "tensorflow.where",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "transformers.generation_tf_utils.TFGenerationMixin._generate_no_beam_search": {
  "lineno": 410,
  "symbols_in_volume": [
   "tensorflow.bool",
   "tensorflow.broadcast_to",
   "tensorflow.cast",
   "tensorflow.concat",
   "tensorflow.convert_to_tensor",
   "tensorflow.expand_dims",
   "tensorflow.int32",
   "tensorflow.math.argmax",
   "tensorflow.math.multiply",
   "tensorflow.math.reduce_max",
   "tensorflow.math.reduce_min",
   "tensorflow.ones",
   "tensorflow.ones_like",
   "tensorflow.random.categorical",
   "tensorflow.range",
   "tensorflow.squeeze",
   "tensorflow.transpose",
   "tensorflow.where"
  ],
  "type": "function"
 },
 "transformers.generation_tf_utils.TFGenerationMixin._reorder_cache": {
  "lineno": 889,
  "symbols_in_volume": [
   "tensorflow.gather"
  ],
  "type": "function"
 },
 "transformers.generation_tf_utils.TFGenerationMixin._use_cache": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_tf_utils.TFGenerationMixin.generate": {
  "lineno": 47,
  "symbols_in_volume": [
   "tensorflow.broadcast_to",
   "tensorflow.cast",
   "tensorflow.expand_dims",
   "tensorflow.fill",
   "tensorflow.gather",
   "tensorflow.int32",
   "tensorflow.math.not_equal",
   "tensorflow.ones",
   "tensorflow.ones_like",
   "tensorflow.range",
   "tensorflow.repeat",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.generation_tf_utils.TFGenerationMixin.prepare_inputs_for_generation": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_tf_utils._create_next_token_logits_penalties": {
  "lineno": 894,
  "symbols_in_volume": [
   "numpy.ones",
   "numpy.put",
   "numpy.unique",
   "numpy.zeros",
   "tensorflow.convert_to_tensor",
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "transformers.generation_tf_utils.calc_banned_bad_words_ids": {
  "lineno": 931,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_tf_utils.calc_banned_bad_words_ids._tokens_match": {
  "lineno": 934,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_tf_utils.calc_banned_ngram_tokens": {
  "lineno": 908,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_tf_utils.calc_banned_ngram_tokens._get_generated_ngrams": {
  "lineno": 921,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_tf_utils.sample_without_replacement": {
  "lineno": 1034,
  "symbols_in_volume": [
   "tensorflow.math.log",
   "tensorflow.nn.top_k",
   "tensorflow.random.uniform"
  ],
  "type": "function"
 },
 "transformers.generation_tf_utils.scatter_values_on_batch_indices": {
  "lineno": 1018,
  "symbols_in_volume": [
   "tensorflow.broadcast_to",
   "tensorflow.concat",
   "tensorflow.expand_dims",
   "tensorflow.range",
   "tensorflow.reshape",
   "tensorflow.scatter_nd",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.generation_tf_utils.set_tensor_by_indices_to_value": {
  "lineno": 1028,
  "symbols_in_volume": [
   "tensorflow.where",
   "tensorflow.zeros_like"
  ],
  "type": "function"
 },
 "transformers.generation_tf_utils.shape_list": {
  "lineno": 1045,
  "symbols_in_volume": [
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "transformers.generation_tf_utils.tf_top_k_top_p_filtering": {
  "lineno": 967,
  "symbols_in_volume": [
   "tensorflow.argsort",
   "tensorflow.concat",
   "tensorflow.gather",
   "tensorflow.math.cumsum",
   "tensorflow.math.top_k",
   "tensorflow.nn.softmax",
   "tensorflow.roll",
   "tensorflow.zeros_like"
  ],
  "type": "function"
 },
 "transformers.generation_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.generation_utils.BeamHypotheses": {
  "lineno": 993,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.generation_utils.BeamHypotheses.__init__": {
  "lineno": 994,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_utils.BeamHypotheses.__len__": {
  "lineno": 1005,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_utils.BeamHypotheses.add": {
  "lineno": 1011,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_utils.BeamHypotheses.is_done": {
  "lineno": 1025,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.generation_utils.GenerationMixin._generate_beam_search": {
  "lineno": 605,
  "symbols_in_volume": [
   "torch.all",
   "torch.cat",
   "torch.float",
   "torch.gather",
   "torch.multinomial",
   "torch.nn.functional.log_softmax",
   "torch.nn.functional.softmax",
   "torch.sort",
   "torch.topk",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin._generate_no_beam_search": {
  "lineno": 505,
  "symbols_in_volume": [
   "torch.argmax",
   "torch.cat",
   "torch.multinomial",
   "torch.nn.functional.softmax"
  ],
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin._reorder_cache": {
  "lineno": 864,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin.adjust_logits_during_generation": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin.enforce_repetition_penalty_": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin.generate": {
  "lineno": 110,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.arange",
   "torch.full",
   "torch.long",
   "torch.no_grad",
   "typing.Iterable",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin.postprocess_next_token_scores": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin.prepare_inputs_for_generation": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_utils.calc_banned_bad_words_ids": {
  "lineno": 892,
  "symbols_in_volume": [
   "typing.Iterable"
  ],
  "type": "function"
 },
 "transformers.generation_utils.calc_banned_bad_words_ids._tokens_match": {
  "lineno": 895,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_utils.calc_banned_ngram_tokens": {
  "lineno": 869,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "transformers.generation_utils.calc_banned_ngram_tokens._get_generated_ngrams": {
  "lineno": 882,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.generation_utils.set_scores_to_inf_for_banned_tokens": {
  "lineno": 928,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.Tensor",
   "torch.ones",
   "torch.sparse.LongTensor",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.generation_utils.top_k_top_p_filtering": {
  "lineno": 952,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cumsum",
   "torch.nn.functional.softmax",
   "torch.sort",
   "torch.topk"
  ],
  "type": "function"
 },
 "transformers.hf_api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.hf_api.HfApi": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.hf_api.HfApi.__init__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.hf_api.HfApi.delete_obj": {
  "lineno": 184,
  "symbols_in_volume": [
   "requests.delete",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.hf_api.HfApi.list_objs": {
  "lineno": 173,
  "symbols_in_volume": [
   "requests.get",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.hf_api.HfApi.login": {
  "lineno": 103,
  "symbols_in_volume": [
   "requests.post"
  ],
  "type": "function"
 },
 "transformers.hf_api.HfApi.logout": {
  "lineno": 129,
  "symbols_in_volume": [
   "requests.post"
  ],
  "type": "function"
 },
 "transformers.hf_api.HfApi.model_list": {
  "lineno": 196,
  "symbols_in_volume": [
   "requests.get",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.hf_api.HfApi.presign": {
  "lineno": 137,
  "symbols_in_volume": [
   "requests.post",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.hf_api.HfApi.presign_and_upload": {
  "lineno": 151,
  "symbols_in_volume": [
   "requests.put",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.hf_api.HfApi.whoami": {
  "lineno": 119,
  "symbols_in_volume": [
   "requests.get",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.hf_api.HfFolder": {
  "lineno": 231,
  "symbols_in_volume": [
   "os.path.expanduser"
  ],
  "type": "class"
 },
 "transformers.hf_api.HfFolder.delete_token": {
  "lineno": 254,
  "symbols_in_volume": [
   "os.remove"
  ],
  "type": "function"
 },
 "transformers.hf_api.HfFolder.get_token": {
  "lineno": 243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.hf_api.HfFolder.save_token": {
  "lineno": 234,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.dirname"
  ],
  "type": "function"
 },
 "transformers.hf_api.ModelInfo": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.hf_api.ModelInfo.__init__": {
  "lineno": 77,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.hf_api.PresignedUrl": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.hf_api.PresignedUrl.__init__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.hf_api.S3Obj": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.hf_api.S3Obj.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.hf_api.S3Object": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.hf_api.S3Object.__init__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.hf_api.TqdmProgressFileReader": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.hf_api.TqdmProgressFileReader.__init__": {
  "lineno": 216,
  "symbols_in_volume": [
   "io.BufferedReader",
   "os.fstat",
   "tqdm.tqdm"
  ],
  "type": "function"
 },
 "transformers.hf_api.TqdmProgressFileReader._read": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.hf_api.TqdmProgressFileReader.close": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.hf_argparser": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.Any",
   "typing.NewType"
  ],
  "type": "module"
 },
 "transformers.hf_argparser.HfArgumentParser": {
  "lineno": 14,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "typing.Iterable"
  ],
  "type": "class"
 },
 "transformers.hf_argparser.HfArgumentParser.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "dataclasses.is_dataclass",
   "typing.Iterable",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.hf_argparser.HfArgumentParser._add_dataclass_arguments": {
  "lineno": 42,
  "symbols_in_volume": [
   "dataclasses.MISSING",
   "dataclasses.fields",
   "enum.Enum",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.hf_argparser.HfArgumentParser.parse_args_into_dataclasses": {
  "lineno": 90,
  "symbols_in_volume": [
   "dataclasses.fields",
   "pathlib.Path",
   "sys.argv",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.hf_argparser.HfArgumentParser.parse_dict": {
  "lineno": 169,
  "symbols_in_volume": [
   "dataclasses.fields",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.hf_argparser.HfArgumentParser.parse_json_file": {
  "lineno": 155,
  "symbols_in_volume": [
   "dataclasses.fields",
   "json.loads",
   "pathlib.Path",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.integrations": {
  "lineno": null,
  "symbols_in_volume": [
   "os.getenv",
   "wandb.api.api_key",
   "wandb.ensure_configured",
   "wandb.termwarn"
  ],
  "type": "module"
 },
 "transformers.integrations.default_hp_search_backend": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.integrations.is_comet_available": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.integrations.is_optuna_available": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.integrations.is_ray_available": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.integrations.is_tensorboard_available": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.integrations.is_wandb_available": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.integrations.run_hp_search_optuna": {
  "lineno": 90,
  "symbols_in_volume": [
   "optuna.create_study"
  ],
  "type": "function"
 },
 "transformers.integrations.run_hp_search_optuna._objective": {
  "lineno": 91,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.integrations.run_hp_search_ray": {
  "lineno": 113,
  "symbols_in_volume": [
   "math.ceil",
   "ray.tune.CLIReporter",
   "ray.tune.run",
   "ray.tune.schedulers.ASHAScheduler",
   "ray.tune.schedulers.HyperBandForBOHB",
   "ray.tune.schedulers.MedianStoppingRule",
   "ray.tune.schedulers.PopulationBasedTraining"
  ],
  "type": "function"
 },
 "transformers.integrations.run_hp_search_ray._objective": {
  "lineno": 114,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.join",
   "ray.tune.report"
  ],
  "type": "function"
 },
 "transformers.modelcard": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modelcard.ModelCard": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modelcard.ModelCard.__eq__": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modelcard.ModelCard.__init__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modelcard.ModelCard.__repr__": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modelcard.ModelCard.from_dict": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modelcard.ModelCard.from_json_file": {
  "lineno": 189,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "transformers.modelcard.ModelCard.from_pretrained": {
  "lineno": 86,
  "symbols_in_volume": [
   "json.JSONDecodeError",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.modelcard.ModelCard.save_pretrained": {
  "lineno": 75,
  "symbols_in_volume": [
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.modelcard.ModelCard.to_dict": {
  "lineno": 203,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "transformers.modelcard.ModelCard.to_json_file": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modelcard.ModelCard.to_json_string": {
  "lineno": 208,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "transformers.modeling_albert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_albert.AlbertAttention": {
  "lineno": 245,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertAttention.__init__": {
  "lineno": 246,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertAttention.forward": {
  "lineno": 293,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.einsum",
   "torch.matmul",
   "torch.nn.Softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertAttention.prune_heads": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertAttention.transpose_for_scores": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertEmbeddings": {
  "lineno": 200,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertEmbeddings.__init__": {
  "lineno": 205,
  "symbols_in_volume": [
   "torch.arange",
   "torch.nn.Dropout",
   "torch.nn.Embedding",
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertEmbeddings.forward": {
  "lineno": 220,
  "symbols_in_volume": [
   "torch.long",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForMaskedLM": {
  "lineno": 861,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertForMaskedLM.__init__": {
  "lineno": 869,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForMaskedLM.forward": {
  "lineno": 883,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForMaskedLM.get_input_embeddings": {
  "lineno": 880,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForMaskedLM.get_output_embeddings": {
  "lineno": 877,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForMultipleChoice": {
  "lineno": 1225,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertForMultipleChoice.__init__": {
  "lineno": 1231,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForMultipleChoice.forward": {
  "lineno": 1240,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForPreTraining": {
  "lineno": 708,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertForPreTraining.__init__": {
  "lineno": 714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForPreTraining.forward": {
  "lineno": 729,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForPreTraining.get_input_embeddings": {
  "lineno": 726,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForPreTraining.get_output_embeddings": {
  "lineno": 723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForPreTrainingOutput": {
  "lineno": 477,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertForQuestionAnswering": {
  "lineno": 1125,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertForQuestionAnswering.__init__": {
  "lineno": 1134,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForQuestionAnswering.forward": {
  "lineno": 1143,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForSequenceClassification": {
  "lineno": 954,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertForSequenceClassification.__init__": {
  "lineno": 960,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForSequenceClassification.forward": {
  "lineno": 970,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.MSELoss"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForTokenClassification": {
  "lineno": 1038,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertForTokenClassification.__init__": {
  "lineno": 1047,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForTokenClassification.forward": {
  "lineno": 1057,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertLayer": {
  "lineno": 338,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertLayer.__init__": {
  "lineno": 339,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertLayer.ff_chunk": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertLayer.forward": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertLayerGroup": {
  "lineno": 374,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertLayerGroup.__init__": {
  "lineno": 375,
  "symbols_in_volume": [
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertLayerGroup.forward": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertMLMHead": {
  "lineno": 824,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertMLMHead.__init__": {
  "lineno": 825,
  "symbols_in_volume": [
   "torch.nn.LayerNorm",
   "torch.nn.Linear",
   "torch.nn.Parameter",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertMLMHead.forward": {
  "lineno": 837,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertModel": {
  "lineno": 580,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertModel.__init__": {
  "lineno": 590,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertModel._prune_heads": {
  "lineno": 617,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertModel._resize_token_embeddings": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertModel.forward": {
  "lineno": 635,
  "symbols_in_volume": [
   "torch.long",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertModel.get_input_embeddings": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertModel.set_input_embeddings": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertPreTrainedModel": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertPreTrainedModel._init_weights": {
  "lineno": 464,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertSOPHead": {
  "lineno": 848,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertSOPHead.__init__": {
  "lineno": 849,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertSOPHead.forward": {
  "lineno": 855,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertTransformer": {
  "lineno": 404,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_albert.AlbertTransformer.__init__": {
  "lineno": 405,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_albert.AlbertTransformer.forward": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_albert.load_tf_weights_in_albert": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.transpose",
   "os.path.abspath",
   "re.fullmatch",
   "re.split",
   "tensorflow.train.list_variables",
   "tensorflow.train.load_variable",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "transformers.modeling_auto": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "module"
 },
 "transformers.modeling_auto.AutoModel": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_auto.AutoModel.__init__": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModel.from_config": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModel.from_pretrained": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForCausalLM": {
  "lineno": 805,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForCausalLM.__init__": {
  "lineno": 815,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForCausalLM.from_config": {
  "lineno": 822,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForCausalLM.from_pretrained": {
  "lineno": 856,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForMaskedLM": {
  "lineno": 899,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForMaskedLM.__init__": {
  "lineno": 909,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForMaskedLM.from_config": {
  "lineno": 916,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForMaskedLM.from_pretrained": {
  "lineno": 950,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForMultipleChoice": {
  "lineno": 1387,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForMultipleChoice.__init__": {
  "lineno": 1397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForMultipleChoice.from_config": {
  "lineno": 1404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForMultipleChoice.from_pretrained": {
  "lineno": 1441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForPreTraining": {
  "lineno": 599,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForPreTraining.__init__": {
  "lineno": 609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForPreTraining.from_config": {
  "lineno": 616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForPreTraining.from_pretrained": {
  "lineno": 650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForQuestionAnswering": {
  "lineno": 1189,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForQuestionAnswering.__init__": {
  "lineno": 1199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForQuestionAnswering.from_config": {
  "lineno": 1206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForQuestionAnswering.from_pretrained": {
  "lineno": 1242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForSeq2SeqLM": {
  "lineno": 993,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForSeq2SeqLM.__init__": {
  "lineno": 1003,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_config": {
  "lineno": 1010,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_pretrained": {
  "lineno": 1046,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForSequenceClassification": {
  "lineno": 1091,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForSequenceClassification.__init__": {
  "lineno": 1101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForSequenceClassification.from_config": {
  "lineno": 1108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForSequenceClassification.from_pretrained": {
  "lineno": 1144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForTokenClassification": {
  "lineno": 1288,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForTokenClassification.__init__": {
  "lineno": 1298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForTokenClassification.from_config": {
  "lineno": 1305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForTokenClassification.from_pretrained": {
  "lineno": 1341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelWithLMHead": {
  "lineno": 693,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelWithLMHead.__init__": {
  "lineno": 710,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelWithLMHead.from_config": {
  "lineno": 717,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelWithLMHead.from_pretrained": {
  "lineno": 756,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_bart": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_bart.Attention": {
  "lineno": 620,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bart.Attention.__init__": {
  "lineno": 623,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.Attention._shape": {
  "lineno": 646,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.Attention._use_saved_state": {
  "lineno": 740,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.Attention.forward": {
  "lineno": 649,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.bmm",
   "torch.nn.functional.dropout",
   "torch.nn.functional.softmax",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartClassificationHead": {
  "lineno": 772,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bart.BartClassificationHead.__init__": {
  "lineno": 777,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartClassificationHead.forward": {
  "lineno": 789,
  "symbols_in_volume": [
   "torch.tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartDecoder": {
  "lineno": 465,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bart.BartDecoder.__init__": {
  "lineno": 474,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.nn.Embedding",
   "torch.nn.Identity",
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartDecoder.forward": {
  "lineno": 499,
  "symbols_in_volume": [
   "random.uniform",
   "torch.nn.functional.dropout",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartEncoder": {
  "lineno": 275,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bart.BartEncoder.__init__": {
  "lineno": 284,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.nn.Identity",
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartEncoder.forward": {
  "lineno": 312,
  "symbols_in_volume": [
   "random.uniform",
   "torch.nn.functional.dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration": {
  "lineno": 969,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bart.BartForConditionalGeneration.__init__": {
  "lineno": 976,
  "symbols_in_volume": [
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration._force_token_ids_generation": {
  "lineno": 1121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration._reorder_cache": {
  "lineno": 1125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration._resize_final_logits_bias": {
  "lineno": 989,
  "symbols_in_volume": [
   "torch.cat",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration.adjust_logits_during_generation": {
  "lineno": 1114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration.forward": {
  "lineno": 997,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.functional.linear",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration.get_encoder": {
  "lineno": 1136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration.get_output_embeddings": {
  "lineno": 1139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration.prepare_inputs_for_generation": {
  "lineno": 1102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration.resize_token_embeddings": {
  "lineno": 982,
  "symbols_in_volume": [
   "torch.nn.Embedding"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartForQuestionAnswering": {
  "lineno": 1229,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bart.BartForQuestionAnswering.__init__": {
  "lineno": 1235,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartForQuestionAnswering.forward": {
  "lineno": 1246,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartForSequenceClassification": {
  "lineno": 1143,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bart.BartForSequenceClassification.__init__": {
  "lineno": 1148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.BartForSequenceClassification.forward": {
  "lineno": 1160,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.unique"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartModel": {
  "lineno": 846,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bart.BartModel.__init__": {
  "lineno": 851,
  "symbols_in_volume": [
   "torch.nn.Embedding"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartModel.forward": {
  "lineno": 862,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.BartModel.get_input_embeddings": {
  "lineno": 957,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.BartModel.get_output_embeddings": {
  "lineno": 965,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.BartModel.set_input_embeddings": {
  "lineno": 960,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.DecoderLayer": {
  "lineno": 373,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bart.DecoderLayer.__init__": {
  "lineno": 374,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.DecoderLayer.forward": {
  "lineno": 400,
  "symbols_in_volume": [
   "torch.nn.functional.dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.EncoderLayer": {
  "lineno": 225,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bart.EncoderLayer.__init__": {
  "lineno": 226,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.EncoderLayer.forward": {
  "lineno": 239,
  "symbols_in_volume": [
   "torch.nn.functional.dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.LayerNorm": {
  "lineno": 825,
  "symbols_in_volume": [
   "apex.normalization.FusedLayerNorm",
   "torch.cuda.is_available",
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.LearnedPositionalEmbedding": {
  "lineno": 798,
  "symbols_in_volume": [
   "torch.nn.Embedding"
  ],
  "type": "class"
 },
 "transformers.modeling_bart.LearnedPositionalEmbedding.__init__": {
  "lineno": 806,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.LearnedPositionalEmbedding.forward": {
  "lineno": 814,
  "symbols_in_volume": [
   "torch.arange",
   "torch.long"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.PretrainedBartModel": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bart.PretrainedBartModel._init_weights": {
  "lineno": 168,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.PretrainedBartModel.dummy_inputs": {
  "lineno": 181,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.SinusoidalPositionalEmbedding": {
  "lineno": 1337,
  "symbols_in_volume": [
   "torch.nn.Embedding"
  ],
  "type": "class"
 },
 "transformers.modeling_bart.SinusoidalPositionalEmbedding.__init__": {
  "lineno": 1340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.SinusoidalPositionalEmbedding._init_weight": {
  "lineno": 1346,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cos",
   "numpy.power",
   "numpy.sin",
   "torch.FloatTensor",
   "torch.nn.Parameter"
  ],
  "type": "function"
 },
 "transformers.modeling_bart.SinusoidalPositionalEmbedding.forward": {
  "lineno": 1361,
  "symbols_in_volume": [
   "torch.arange",
   "torch.long",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "transformers.modeling_bart._check_shapes": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart._get_shape": {
  "lineno": 842,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart._make_linear_from_emb": {
  "lineno": 192,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bart._prepare_bart_decoder_inputs": {
  "lineno": 139,
  "symbols_in_volume": [
   "torch.arange",
   "torch.float32",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_bart._reorder_buffer": {
  "lineno": 613,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.fill_with_neg_inf": {
  "lineno": 836,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.invert_mask": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.make_padding_mask": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bart.shift_tokens_right": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_bert.BertAttention": {
  "lineno": 299,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertAttention.__init__": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertAttention.forward": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertAttention.prune_heads": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertEmbeddings": {
  "lineno": 165,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertEmbeddings.__init__": {
  "lineno": 168,
  "symbols_in_volume": [
   "torch.arange",
   "torch.nn.Dropout",
   "torch.nn.Embedding",
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertEmbeddings.forward": {
  "lineno": 182,
  "symbols_in_volume": [
   "torch.long",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertEncoder": {
  "lineno": 434,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertEncoder.__init__": {
  "lineno": 435,
  "symbols_in_volume": [
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertEncoder.forward": {
  "lineno": 440,
  "symbols_in_volume": [
   "torch.utils.checkpoint.checkpoint"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertEncoder.forward.create_custom_forward": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertEncoder.forward.create_custom_forward.custom_forward": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertForMaskedLM": {
  "lineno": 1087,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bert.BertForMaskedLM.__init__": {
  "lineno": 1093,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertForMaskedLM.forward": {
  "lineno": 1110,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertForMaskedLM.get_output_embeddings": {
  "lineno": 1107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertForMaskedLM.prepare_inputs_for_generation": {
  "lineno": 1186,
  "symbols_in_volume": [
   "torch.cat",
   "torch.full",
   "torch.long"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertForMultipleChoice": {
  "lineno": 1374,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bert.BertForMultipleChoice.__init__": {
  "lineno": 1380,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertForMultipleChoice.forward": {
  "lineno": 1389,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertForNextSentencePrediction": {
  "lineno": 1201,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bert.BertForNextSentencePrediction.__init__": {
  "lineno": 1206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertForNextSentencePrediction.forward": {
  "lineno": 1214,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertForPreTraining": {
  "lineno": 857,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bert.BertForPreTraining.__init__": {
  "lineno": 863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertForPreTraining.forward": {
  "lineno": 874,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertForPreTraining.get_output_embeddings": {
  "lineno": 871,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertForPreTrainingOutput": {
  "lineno": 605,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertForQuestionAnswering": {
  "lineno": 1552,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bert.BertForQuestionAnswering.__init__": {
  "lineno": 1561,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertForQuestionAnswering.forward": {
  "lineno": 1570,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertForSequenceClassification": {
  "lineno": 1290,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bert.BertForSequenceClassification.__init__": {
  "lineno": 1296,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertForSequenceClassification.forward": {
  "lineno": 1306,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.MSELoss"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertForTokenClassification": {
  "lineno": 1463,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bert.BertForTokenClassification.__init__": {
  "lineno": 1472,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertForTokenClassification.forward": {
  "lineno": 1482,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.tensor",
   "torch.where"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertIntermediate": {
  "lineno": 346,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertIntermediate.__init__": {
  "lineno": 347,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertIntermediate.forward": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertLMHeadModel": {
  "lineno": 966,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bert.BertLMHeadModel.__init__": {
  "lineno": 974,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertLMHeadModel.forward": {
  "lineno": 988,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertLMHeadModel.get_output_embeddings": {
  "lineno": 985,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertLMHeadModel.prepare_inputs_for_generation": {
  "lineno": 1077,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertLMPredictionHead": {
  "lineno": 530,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertLMPredictionHead.__init__": {
  "lineno": 531,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Parameter",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertLMPredictionHead.forward": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertLayer": {
  "lineno": 375,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertLayer.__init__": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertLayer.feed_forward_chunk": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertLayer.forward": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertModel": {
  "lineno": 708,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bert.BertModel.__init__": {
  "lineno": 728,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertModel._prune_heads": {
  "lineno": 745,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertModel.forward": {
  "lineno": 753,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.long",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertModel.get_input_embeddings": {
  "lineno": 739,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertModel.set_input_embeddings": {
  "lineno": 742,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertOnlyMLMHead": {
  "lineno": 550,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertOnlyMLMHead.__init__": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertOnlyMLMHead.forward": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertOnlyNSPHead": {
  "lineno": 560,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertOnlyNSPHead.__init__": {
  "lineno": 561,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertOnlyNSPHead.forward": {
  "lineno": 565,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertOutput": {
  "lineno": 361,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertOutput.__init__": {
  "lineno": 362,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertOutput.forward": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertPooler": {
  "lineno": 498,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertPooler.__init__": {
  "lineno": 499,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertPooler.forward": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertPreTrainedModel": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bert.BertPreTrainedModel._init_weights": {
  "lineno": 592,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertPreTrainingHeads": {
  "lineno": 570,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertPreTrainingHeads.__init__": {
  "lineno": 571,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertPreTrainingHeads.forward": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertPredictionHeadTransform": {
  "lineno": 513,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertPredictionHeadTransform.__init__": {
  "lineno": 514,
  "symbols_in_volume": [
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertPredictionHeadTransform.forward": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfAttention": {
  "lineno": 207,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertSelfAttention.__init__": {
  "lineno": 208,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfAttention.forward": {
  "lineno": 231,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.matmul",
   "torch.nn.Softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfAttention.transpose_for_scores": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfOutput": {
  "lineno": 285,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert.BertSelfOutput.__init__": {
  "lineno": 286,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfOutput.forward": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert.load_tf_weights_in_bert": {
  "lineno": 91,
  "symbols_in_volume": [
   "numpy.transpose",
   "os.path.abspath",
   "re.fullmatch",
   "re.split",
   "tensorflow.train.list_variables",
   "tensorflow.train.load_variable",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "transformers.modeling_bert_generation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_bert_generation.BertGenerationDecoder": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bert_generation.BertGenerationDecoder.__init__": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationDecoder.forward": {
  "lineno": 427,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationDecoder.get_output_embeddings": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationDecoder.prepare_inputs_for_generation": {
  "lineno": 514,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationEmbeddings": {
  "lineno": 132,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert_generation.BertGenerationEmbeddings.__init__": {
  "lineno": 135,
  "symbols_in_volume": [
   "torch.arange",
   "torch.nn.Dropout",
   "torch.nn.Embedding",
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationEmbeddings.forward": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationEncoder": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bert_generation.BertGenerationEncoder.__init__": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationEncoder._prune_heads": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationEncoder.forward": {
  "lineno": 298,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.ones"
  ],
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationEncoder.get_input_embeddings": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationEncoder.set_input_embeddings": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationOnlyLMHead": {
  "lineno": 394,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_bert_generation.BertGenerationOnlyLMHead.__init__": {
  "lineno": 395,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Parameter",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationOnlyLMHead.forward": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationPreTrainedModel": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_bert_generation.BertGenerationPreTrainedModel._init_weights": {
  "lineno": 177,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_bert_generation.load_tf_weights_in_bert_generation": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float32",
   "numpy.transpose",
   "tensorflow.compat.v1.Session",
   "tensorflow.compat.v1.disable_eager_execution",
   "tensorflow.compat.v1.global_variables_initializer",
   "tensorflow_hub.Module",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "transformers.modeling_camembert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_camembert.CamembertForCausalLM": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_camembert.CamembertForMaskedLM": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_camembert.CamembertForMultipleChoice": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_camembert.CamembertForQuestionAnswering": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_camembert.CamembertForSequenceClassification": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_camembert.CamembertForTokenClassification": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_camembert.CamembertModel": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_ctrl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_ctrl.CTRLLMHeadModel": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_ctrl.CTRLLMHeadModel.__init__": {
  "lineno": 506,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLLMHeadModel.forward": {
  "lineno": 523,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLLMHeadModel.get_output_embeddings": {
  "lineno": 513,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLLMHeadModel.prepare_inputs_for_generation": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLModel": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_ctrl.CTRLModel.__init__": {
  "lineno": 322,
  "symbols_in_volume": [
   "torch.float",
   "torch.nn.Dropout",
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLModel._prune_heads": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLModel.forward": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.sqrt",
   "torch.arange",
   "torch.long",
   "torch.ones",
   "torch.triu",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLModel.get_input_embeddings": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLModel.set_input_embeddings": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLPreTrainedModel": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_ctrl.CTRLPreTrainedModel._init_weights": {
  "lineno": 222,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_ctrl.EncoderLayer": {
  "lineno": 173,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_ctrl.EncoderLayer.__init__": {
  "lineno": 174,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_ctrl.EncoderLayer.forward": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_ctrl.MultiHeadAttention": {
  "lineno": 90,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_ctrl.MultiHeadAttention.__init__": {
  "lineno": 91,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_ctrl.MultiHeadAttention.forward": {
  "lineno": 126,
  "symbols_in_volume": [
   "torch.cat",
   "torch.stack"
  ],
  "type": "function"
 },
 "transformers.modeling_ctrl.MultiHeadAttention.prune_heads": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_ctrl.MultiHeadAttention.split_into_heads": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_ctrl.angle_defn": {
  "lineno": 44,
  "symbols_in_volume": [
   "torch.pow"
  ],
  "type": "function"
 },
 "transformers.modeling_ctrl.point_wise_feed_forward_network": {
  "lineno": 169,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.ReLU",
   "torch.nn.Sequential"
  ],
  "type": "function"
 },
 "transformers.modeling_ctrl.positional_encoding": {
  "lineno": 49,
  "symbols_in_volume": [
   "torch.arange",
   "torch.cat",
   "torch.cos",
   "torch.sin"
  ],
  "type": "function"
 },
 "transformers.modeling_ctrl.scaled_dot_product_attention": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.sqrt",
   "torch.matmul",
   "torch.softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_distilbert.DistilBertForMaskedLM": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertForMaskedLM.__init__": {
  "lineno": 514,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForMaskedLM.forward": {
  "lineno": 529,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForMaskedLM.get_output_embeddings": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForMultipleChoice": {
  "lineno": 854,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertForMultipleChoice.__init__": {
  "lineno": 860,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForMultipleChoice.forward": {
  "lineno": 870,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForQuestionAnswering": {
  "lineno": 678,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertForQuestionAnswering.__init__": {
  "lineno": 684,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForQuestionAnswering.forward": {
  "lineno": 694,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForSequenceClassification": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertForSequenceClassification.__init__": {
  "lineno": 603,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForSequenceClassification.forward": {
  "lineno": 614,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.MSELoss",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForTokenClassification": {
  "lineno": 772,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertForTokenClassification.__init__": {
  "lineno": 778,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForTokenClassification.forward": {
  "lineno": 788,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.tensor",
   "torch.where"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertModel": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertModel.__init__": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertModel._prune_heads": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertModel.forward": {
  "lineno": 456,
  "symbols_in_volume": [
   "torch.ones"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertModel.get_input_embeddings": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertModel.set_input_embeddings": {
  "lineno": 445,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertPreTrainedModel": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertPreTrainedModel._init_weights": {
  "lineno": 359,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.Embeddings": {
  "lineno": 83,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_distilbert.Embeddings.__init__": {
  "lineno": 84,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Embedding",
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.Embeddings.forward": {
  "lineno": 96,
  "symbols_in_volume": [
   "torch.arange",
   "torch.long"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.FFN": {
  "lineno": 212,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_distilbert.FFN.__init__": {
  "lineno": 213,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear",
   "torch.nn.ReLU"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.FFN.ff_chunk": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_distilbert.FFN.forward": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention": {
  "lineno": 121,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.__init__": {
  "lineno": 122,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.forward": {
  "lineno": 153,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.matmul",
   "torch.nn.Softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.forward.shape": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.forward.unshape": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.prune_heads": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_distilbert.Transformer": {
  "lineno": 288,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_distilbert.Transformer.__init__": {
  "lineno": 289,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.Transformer.forward": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_distilbert.TransformerBlock": {
  "lineno": 236,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_distilbert.TransformerBlock.__init__": {
  "lineno": 237,
  "symbols_in_volume": [
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_distilbert.TransformerBlock.forward": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_distilbert.create_sinusoidal_embeddings": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cos",
   "numpy.power",
   "numpy.sin",
   "torch.FloatTensor"
  ],
  "type": "function"
 },
 "transformers.modeling_dpr": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_dpr.DPRContextEncoder": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_dpr.DPRContextEncoder.__init__": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_dpr.DPRContextEncoder.forward": {
  "lineno": 435,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.long",
   "torch.ones",
   "torch.zeros",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.modeling_dpr.DPRContextEncoderOutput": {
  "lineno": 52,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_dpr.DPREncoder": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_dpr.DPREncoder.__init__": {
  "lineno": 147,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_dpr.DPREncoder.embeddings_size": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_dpr.DPREncoder.forward": {
  "lineno": 156,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.modeling_dpr.DPREncoder.init_weights": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_dpr.DPRPretrainedContextEncoder": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_dpr.DPRPretrainedContextEncoder.init_weights": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_dpr.DPRPretrainedQuestionEncoder": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_dpr.DPRPretrainedQuestionEncoder.init_weights": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_dpr.DPRPretrainedReader": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_dpr.DPRPretrainedReader.init_weights": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_dpr.DPRQuestionEncoder": {
  "lineno": 502,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_dpr.DPRQuestionEncoder.__init__": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_dpr.DPRQuestionEncoder.forward": {
  "lineno": 513,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.long",
   "torch.ones",
   "torch.zeros",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.modeling_dpr.DPRQuestionEncoderOutput": {
  "lineno": 81,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_dpr.DPRReader": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_dpr.DPRReader.__init__": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_dpr.DPRReader.forward": {
  "lineno": 590,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.ones",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.modeling_dpr.DPRReaderOutput": {
  "lineno": 110,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_dpr.DPRSpanPredictor": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_dpr.DPRSpanPredictor.__init__": {
  "lineno": 206,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_dpr.DPRSpanPredictor.forward": {
  "lineno": 213,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.modeling_dpr.DPRSpanPredictor.init_weights": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_electra.ElectraAttention": {
  "lineno": 291,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraAttention.__init__": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraAttention.forward": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraAttention.prune_heads": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraClassificationHead": {
  "lineno": 759,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraClassificationHead.__init__": {
  "lineno": 762,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraClassificationHead.forward": {
  "lineno": 768,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraDiscriminatorPredictions": {
  "lineno": 494,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraDiscriminatorPredictions.__init__": {
  "lineno": 497,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraDiscriminatorPredictions.forward": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraEmbeddings": {
  "lineno": 153,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraEmbeddings.__init__": {
  "lineno": 156,
  "symbols_in_volume": [
   "torch.arange",
   "torch.nn.Dropout",
   "torch.nn.Embedding",
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraEmbeddings.forward": {
  "lineno": 171,
  "symbols_in_volume": [
   "torch.long",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraEncoder": {
  "lineno": 430,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraEncoder.__init__": {
  "lineno": 431,
  "symbols_in_volume": [
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraEncoder.forward": {
  "lineno": 436,
  "symbols_in_volume": [
   "torch.utils.checkpoint.checkpoint"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraEncoder.forward.create_custom_forward": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraEncoder.forward.create_custom_forward.custom_forward": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForMaskedLM": {
  "lineno": 950,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraForMaskedLM.__init__": {
  "lineno": 959,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForMaskedLM.forward": {
  "lineno": 971,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForMaskedLM.get_output_embeddings": {
  "lineno": 968,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForMultipleChoice": {
  "lineno": 1230,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraForMultipleChoice.__init__": {
  "lineno": 1236,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForMultipleChoice.forward": {
  "lineno": 1245,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForPreTraining": {
  "lineno": 858,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraForPreTraining.__init__": {
  "lineno": 867,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForPreTraining.forward": {
  "lineno": 874,
  "symbols_in_volume": [
   "torch.nn.BCEWithLogitsLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForPreTrainingOutput": {
  "lineno": 553,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraForQuestionAnswering": {
  "lineno": 1127,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraForQuestionAnswering.__init__": {
  "lineno": 1137,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForQuestionAnswering.forward": {
  "lineno": 1146,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForSequenceClassification": {
  "lineno": 778,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraForSequenceClassification.__init__": {
  "lineno": 784,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForSequenceClassification.forward": {
  "lineno": 792,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.MSELoss"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForTokenClassification": {
  "lineno": 1044,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraForTokenClassification.__init__": {
  "lineno": 1052,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForTokenClassification.forward": {
  "lineno": 1060,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraGeneratorPredictions": {
  "lineno": 512,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraGeneratorPredictions.__init__": {
  "lineno": 515,
  "symbols_in_volume": [
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraGeneratorPredictions.forward": {
  "lineno": 521,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraIntermediate": {
  "lineno": 339,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraIntermediate.__init__": {
  "lineno": 340,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraIntermediate.forward": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraLayer": {
  "lineno": 370,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraLayer.__init__": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraLayer.feed_forward_chunk": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraLayer.forward": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraModel": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraModel.__init__": {
  "lineno": 671,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraModel._prune_heads": {
  "lineno": 688,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraModel.forward": {
  "lineno": 696,
  "symbols_in_volume": [
   "torch.long",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraModel.get_input_embeddings": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraModel.set_input_embeddings": {
  "lineno": 685,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraOutput": {
  "lineno": 355,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraOutput.__init__": {
  "lineno": 356,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraOutput.forward": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraPreTrainedModel": {
  "lineno": 529,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraPreTrainedModel._init_weights": {
  "lineno": 540,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraSelfAttention": {
  "lineno": 197,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraSelfAttention.__init__": {
  "lineno": 198,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraSelfAttention.forward": {
  "lineno": 221,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.matmul",
   "torch.nn.Softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraSelfAttention.transpose_for_scores": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraSelfOutput": {
  "lineno": 276,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_electra.ElectraSelfOutput.__init__": {
  "lineno": 277,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_electra.ElectraSelfOutput.forward": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_electra.load_tf_weights_in_electra": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.transpose",
   "os.path.abspath",
   "re.fullmatch",
   "re.split",
   "tensorflow.train.list_variables",
   "tensorflow.train.load_variable",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "transformers.modeling_encoder_decoder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.__init__": {
  "lineno": 127,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel._reorder_cache": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.forward": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.from_encoder_decoder_pretrained": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.get_decoder": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.get_encoder": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.get_input_embeddings": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.get_output_embeddings": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.prepare_inputs_for_generation": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.tie_weights": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_flaubert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_flaubert.FlaubertForMultipleChoice": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_flaubert.FlaubertForMultipleChoice.__init__": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_flaubert.FlaubertForQuestionAnswering": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_flaubert.FlaubertForQuestionAnswering.__init__": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_flaubert.FlaubertForQuestionAnsweringSimple": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_flaubert.FlaubertForQuestionAnsweringSimple.__init__": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_flaubert.FlaubertForSequenceClassification": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_flaubert.FlaubertForSequenceClassification.__init__": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_flaubert.FlaubertForTokenClassification": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_flaubert.FlaubertForTokenClassification.__init__": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_flaubert.FlaubertModel": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_flaubert.FlaubertModel.__init__": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_flaubert.FlaubertModel.forward": {
  "lineno": 144,
  "symbols_in_volume": [
   "random.uniform",
   "torch.arange",
   "torch.long",
   "torch.nn.functional.dropout",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_flaubert.FlaubertWithLMHeadModel": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_flaubert.FlaubertWithLMHeadModel.__init__": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt": {
  "lineno": null,
  "symbols_in_volume": [
   "apex.normalization.FusedLayerNorm",
   "torch.cuda.is_available",
   "torch.nn.LayerNorm"
  ],
  "type": "module"
 },
 "transformers.modeling_fsmt.Attention": {
  "lineno": 722,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_fsmt.Attention.__init__": {
  "lineno": 725,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.Attention._shape": {
  "lineno": 748,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.Attention._use_saved_state": {
  "lineno": 842,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.Attention.forward": {
  "lineno": 751,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.bmm",
   "torch.nn.functional.dropout",
   "torch.nn.functional.softmax",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.DecoderLayer": {
  "lineno": 489,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_fsmt.DecoderLayer.__init__": {
  "lineno": 490,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.DecoderLayer.forward": {
  "lineno": 515,
  "symbols_in_volume": [
   "torch.nn.functional.dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.EncoderLayer": {
  "lineno": 364,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_fsmt.EncoderLayer.__init__": {
  "lineno": 365,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.EncoderLayer.forward": {
  "lineno": 377,
  "symbols_in_volume": [
   "torch.nn.functional.dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTDecoder": {
  "lineno": 571,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_fsmt.FSMTDecoder.__init__": {
  "lineno": 580,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.nn.Embedding",
   "torch.nn.Linear",
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTDecoder.forward": {
  "lineno": 602,
  "symbols_in_volume": [
   "random.uniform",
   "torch.nn.functional.dropout",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTEncoder": {
  "lineno": 407,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_fsmt.FSMTEncoder.__init__": {
  "lineno": 416,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTEncoder.forward": {
  "lineno": 431,
  "symbols_in_volume": [
   "random.uniform",
   "torch.nn.functional.dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration": {
  "lineno": 1009,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration.__init__": {
  "lineno": 1023,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration._force_token_ids_generation": {
  "lineno": 1126,
  "symbols_in_volume": [
   "torch.long",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration._reorder_cache": {
  "lineno": 1138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration.adjust_logits_during_generation": {
  "lineno": 1121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration.forward": {
  "lineno": 1041,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration.get_encoder": {
  "lineno": 1149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration.get_output_embeddings": {
  "lineno": 1152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration.prepare_inputs_for_generation": {
  "lineno": 1109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration.resize_token_embeddings": {
  "lineno": 1028,
  "symbols_in_volume": [
   "torch.nn.Embedding"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTModel": {
  "lineno": 884,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_fsmt.FSMTModel.__init__": {
  "lineno": 889,
  "symbols_in_volume": [
   "torch.nn.Embedding"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTModel.forward": {
  "lineno": 901,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Tuple",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTModel.get_input_embeddings": {
  "lineno": 996,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTModel.get_output_embeddings": {
  "lineno": 1002,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTModel.set_input_embeddings": {
  "lineno": 999,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTModel.set_output_embeddings": {
  "lineno": 1005,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.PretrainedFSMTModel": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_fsmt.PretrainedFSMTModel._init_weights": {
  "lineno": 307,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.PretrainedFSMTModel.dummy_inputs": {
  "lineno": 320,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.SinusoidalPositionalEmbedding": {
  "lineno": 1156,
  "symbols_in_volume": [
   "torch.nn.Embedding"
  ],
  "type": "class"
 },
 "transformers.modeling_fsmt.SinusoidalPositionalEmbedding.__init__": {
  "lineno": 1168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.SinusoidalPositionalEmbedding.forward": {
  "lineno": 1215,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.SinusoidalPositionalEmbedding.get_embedding": {
  "lineno": 1183,
  "symbols_in_volume": [
   "math.log",
   "torch.arange",
   "torch.cat",
   "torch.cos",
   "torch.exp",
   "torch.float",
   "torch.sin",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.SinusoidalPositionalEmbedding.make_positions": {
  "lineno": 1202,
  "symbols_in_volume": [
   "torch.cumsum"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt.SinusoidalPositionalEmbedding.make_weight": {
  "lineno": 1171,
  "symbols_in_volume": [
   "torch.nn.Parameter"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt._check_shapes": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt._get_shape": {
  "lineno": 880,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt._make_linear_from_emb": {
  "lineno": 331,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt._prepare_fsmt_decoder_inputs": {
  "lineno": 282,
  "symbols_in_volume": [
   "torch.float32",
   "torch.triu",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_fsmt._reorder_buffer": {
  "lineno": 715,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.fill_with_neg_inf": {
  "lineno": 874,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.invert_mask": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.make_padding_mask": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_fsmt.shift_tokens_right": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure": {
  "lineno": 174,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.__init__": {
  "lineno": 181,
  "symbols_in_volume": [
   "torch.nn.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.get_position_embeds": {
  "lineno": 213,
  "symbols_in_volume": [
   "torch.arange",
   "torch.cat",
   "torch.cos",
   "torch.gather",
   "torch.sin"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.init_attention_inputs": {
  "lineno": 190,
  "symbols_in_volume": [
   "torch.nn.functional.pad"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.pool_tensor": {
  "lineno": 349,
  "symbols_in_volume": [
   "torch.cat",
   "torch.nn.functional.avg_pool2d",
   "torch.nn.functional.max_pool2d"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.post_attention_pooling": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.pre_attention_pooling": {
  "lineno": 385,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.relative_pos": {
  "lineno": 306,
  "symbols_in_volume": [
   "torch.arange",
   "torch.long"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.stride_pool": {
  "lineno": 320,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.stride_pool_pos": {
  "lineno": 291,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.token_type_ids_to_mat": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelBaseModel": {
  "lineno": 886,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelBaseModel.__init__": {
  "lineno": 892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelBaseModel.forward": {
  "lineno": 906,
  "symbols_in_volume": [
   "torch.long",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelBaseModel.get_input_embeddings": {
  "lineno": 900,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelBaseModel.set_input_embeddings": {
  "lineno": 903,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelClassificationHead": {
  "lineno": 782,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelClassificationHead.__init__": {
  "lineno": 783,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelClassificationHead.forward": {
  "lineno": 789,
  "symbols_in_volume": [
   "torch.tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelDecoder": {
  "lineno": 685,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelDecoder.__init__": {
  "lineno": 686,
  "symbols_in_volume": [
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelDecoder.forward": {
  "lineno": 692,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelDiscriminatorPredictions": {
  "lineno": 734,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelDiscriminatorPredictions.__init__": {
  "lineno": 737,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelDiscriminatorPredictions.forward": {
  "lineno": 743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelEmbeddings": {
  "lineno": 159,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelEmbeddings.__init__": {
  "lineno": 160,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Embedding",
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelEmbeddings.forward": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelEncoder": {
  "lineno": 603,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelEncoder.__init__": {
  "lineno": 604,
  "symbols_in_volume": [
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelEncoder.forward": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForMaskedLM": {
  "lineno": 1153,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelForMaskedLM.__init__": {
  "lineno": 1155,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForMaskedLM.forward": {
  "lineno": 1166,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForMaskedLM.get_output_embeddings": {
  "lineno": 1163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForMultipleChoice": {
  "lineno": 1300,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelForMultipleChoice.__init__": {
  "lineno": 1306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForMultipleChoice.forward": {
  "lineno": 1313,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForPreTraining": {
  "lineno": 1073,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelForPreTraining.__init__": {
  "lineno": 1074,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForPreTraining.forward": {
  "lineno": 1081,
  "symbols_in_volume": [
   "torch.nn.BCEWithLogitsLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForPreTrainingOutput": {
  "lineno": 796,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelForQuestionAnswering": {
  "lineno": 1462,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelForQuestionAnswering.__init__": {
  "lineno": 1468,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForQuestionAnswering.forward": {
  "lineno": 1477,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForSequenceClassification": {
  "lineno": 1223,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelForSequenceClassification.__init__": {
  "lineno": 1229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForSequenceClassification.forward": {
  "lineno": 1237,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.MSELoss"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForTokenClassification": {
  "lineno": 1381,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelForTokenClassification.__init__": {
  "lineno": 1387,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForTokenClassification.forward": {
  "lineno": 1397,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.tensor",
   "torch.where"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelLayer": {
  "lineno": 591,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelLayer.__init__": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelLayer.forward": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelModel": {
  "lineno": 963,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelModel.__init__": {
  "lineno": 968,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelModel.forward": {
  "lineno": 983,
  "symbols_in_volume": [
   "torch.long",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelModel.get_input_embeddings": {
  "lineno": 977,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelModel.set_input_embeddings": {
  "lineno": 980,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelPositionwiseFFN": {
  "lineno": 572,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelPositionwiseFFN.__init__": {
  "lineno": 573,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelPositionwiseFFN.forward": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelPreTrainedModel": {
  "lineno": 750,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelPreTrainedModel._init_weights": {
  "lineno": 759,
  "symbols_in_volume": [
   "numpy.sqrt",
   "torch.nn.init.constant_",
   "torch.nn.init.normal_",
   "torch.nn.init.uniform_"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelRelMultiheadAttention": {
  "lineno": 435,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelRelMultiheadAttention.__init__": {
  "lineno": 436,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear",
   "torch.nn.Parameter",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelRelMultiheadAttention.forward": {
  "lineno": 525,
  "symbols_in_volume": [
   "torch.einsum",
   "torch.softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelRelMultiheadAttention.relative_positional_attention": {
  "lineno": 459,
  "symbols_in_volume": [
   "torch.einsum"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelRelMultiheadAttention.relative_token_type_attention": {
  "lineno": 501,
  "symbols_in_volume": [
   "torch.einsum",
   "torch.split",
   "torch.where"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel._relative_shift_gather": {
  "lineno": 419,
  "symbols_in_volume": [
   "torch.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.load_tf_weights_in_funnel": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.transpose",
   "os.path.abspath",
   "re.fullmatch",
   "re.search",
   "tensorflow.train.list_variables",
   "tensorflow.train.load_variable",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "transformers.modeling_funnel.upsample": {
  "lineno": 666,
  "symbols_in_volume": [
   "torch.cat",
   "torch.nn.functional.pad",
   "torch.repeat_interleave"
  ],
  "type": "function"
 },
 "transformers.modeling_gpt2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_gpt2.Attention": {
  "lineno": 119,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_gpt2.Attention.__init__": {
  "lineno": 120,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.ones",
   "torch.tensor",
   "torch.tril",
   "torch.uint8"
  ],
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention._attn": {
  "lineno": 161,
  "symbols_in_volume": [
   "torch.matmul",
   "torch.nn.Softmax",
   "torch.where"
  ],
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention.forward": {
  "lineno": 201,
  "symbols_in_volume": [
   "torch.cat",
   "torch.stack"
  ],
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention.merge_heads": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention.prune_heads": {
  "lineno": 144,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention.split_heads": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_gpt2.Block": {
  "lineno": 261,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_gpt2.Block.__init__": {
  "lineno": 262,
  "symbols_in_volume": [
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_gpt2.Block.forward": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModel": {
  "lineno": 793,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModel.__init__": {
  "lineno": 802,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModel.forward": {
  "lineno": 825,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModel.get_output_embeddings": {
  "lineno": 811,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModel.prepare_inputs_for_generation": {
  "lineno": 814,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModelOutput": {
  "lineno": 349,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2LMHeadModel": {
  "lineno": 681,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2LMHeadModel.__init__": {
  "lineno": 689,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2LMHeadModel.forward": {
  "lineno": 710,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2LMHeadModel.get_output_embeddings": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2LMHeadModel.prepare_inputs_for_generation": {
  "lineno": 699,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2Model.__init__": {
  "lineno": 481,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model._prune_heads": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model.forward": {
  "lineno": 505,
  "symbols_in_volume": [
   "torch.arange",
   "torch.long",
   "torch.ones",
   "torch.utils.checkpoint.checkpoint",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model.forward.create_custom_forward": {
  "lineno": 628,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model.forward.create_custom_forward.custom_forward": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model.get_input_embeddings": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model.set_input_embeddings": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2PreTrainedModel": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2PreTrainedModel.__init__": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2PreTrainedModel._init_weights": {
  "lineno": 336,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_gpt2.MLP": {
  "lineno": 246,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_gpt2.MLP.__init__": {
  "lineno": 247,
  "symbols_in_volume": [
   "torch.nn.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_gpt2.MLP.forward": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_gpt2.load_tf_weights_in_gpt2": {
  "lineno": 62,
  "symbols_in_volume": [
   "os.path.abspath",
   "re.fullmatch",
   "re.split",
   "tensorflow.train.list_variables",
   "tensorflow.train.load_variable",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.nn.LayerNorm"
  ],
  "type": "module"
 },
 "transformers.modeling_layoutlm.LayoutLMAttention": {
  "lineno": 216,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMAttention.__init__": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMAttention.forward": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMAttention.prune_heads": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMEmbeddings": {
  "lineno": 51,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMEmbeddings.__init__": {
  "lineno": 54,
  "symbols_in_volume": [
   "torch.arange",
   "torch.nn.Dropout",
   "torch.nn.Embedding"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMEmbeddings.forward": {
  "lineno": 69,
  "symbols_in_volume": [
   "torch.long",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMEncoder": {
  "lineno": 355,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMEncoder.__init__": {
  "lineno": 356,
  "symbols_in_volume": [
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMEncoder.forward": {
  "lineno": 361,
  "symbols_in_volume": [
   "torch.utils.checkpoint.checkpoint"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMEncoder.forward.create_custom_forward": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMEncoder.forward.create_custom_forward.custom_forward": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMForMaskedLM": {
  "lineno": 721,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMForMaskedLM.__init__": {
  "lineno": 727,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMForMaskedLM.forward": {
  "lineno": 741,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMForMaskedLM.get_input_embeddings": {
  "lineno": 735,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMForMaskedLM.get_output_embeddings": {
  "lineno": 738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMForTokenClassification": {
  "lineno": 805,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMForTokenClassification.__init__": {
  "lineno": 815,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMForTokenClassification.forward": {
  "lineno": 827,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMForTokenClassification.get_input_embeddings": {
  "lineno": 824,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMIntermediate": {
  "lineno": 264,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMIntermediate.__init__": {
  "lineno": 265,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMIntermediate.forward": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMLMPredictionHead": {
  "lineno": 454,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMLMPredictionHead.__init__": {
  "lineno": 455,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Parameter",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMLMPredictionHead.forward": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMLayer": {
  "lineno": 295,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMLayer.__init__": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMLayer.feed_forward_chunk": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMLayer.forward": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMModel": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMModel.__init__": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMModel._prune_heads": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMModel.forward": {
  "lineno": 605,
  "symbols_in_volume": [
   "torch.long",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMModel.get_input_embeddings": {
  "lineno": 591,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMModel.set_input_embeddings": {
  "lineno": 594,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMOnlyMLMHead": {
  "lineno": 475,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMOnlyMLMHead.__init__": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMOnlyMLMHead.forward": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMOutput": {
  "lineno": 280,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMOutput.__init__": {
  "lineno": 281,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMOutput.forward": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMPooler": {
  "lineno": 420,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMPooler.__init__": {
  "lineno": 421,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMPooler.forward": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMPreTrainedModel": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMPreTrainedModel._init_weights": {
  "lineno": 494,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMPredictionHeadTransform": {
  "lineno": 436,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMPredictionHeadTransform.__init__": {
  "lineno": 437,
  "symbols_in_volume": [
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMPredictionHeadTransform.forward": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMSelfAttention": {
  "lineno": 122,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMSelfAttention.__init__": {
  "lineno": 123,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMSelfAttention.forward": {
  "lineno": 146,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.matmul",
   "torch.nn.Softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMSelfAttention.transpose_for_scores": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMSelfOutput": {
  "lineno": 201,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMSelfOutput.__init__": {
  "lineno": 202,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMSelfOutput.forward": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_longformer.LongformerAttention": {
  "lineno": 762,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerAttention.__init__": {
  "lineno": 763,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerAttention.forward": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerAttention.prune_heads": {
  "lineno": 769,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerClassificationHead": {
  "lineno": 1478,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerClassificationHead.__init__": {
  "lineno": 1481,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerClassificationHead.forward": {
  "lineno": 1487,
  "symbols_in_volume": [
   "torch.tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerEmbeddings": {
  "lineno": 117,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerEmbeddings.__init__": {
  "lineno": 123,
  "symbols_in_volume": [
   "torch.arange",
   "torch.nn.Dropout",
   "torch.nn.Embedding",
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerEmbeddings.create_position_ids_from_inputs_embeds": {
  "lineno": 175,
  "symbols_in_volume": [
   "torch.arange",
   "torch.long"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerEmbeddings.forward": {
  "lineno": 143,
  "symbols_in_volume": [
   "torch.long",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerEncoder": {
  "lineno": 869,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerEncoder.__init__": {
  "lineno": 870,
  "symbols_in_volume": [
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerEncoder.forward": {
  "lineno": 875,
  "symbols_in_volume": [
   "torch.utils.checkpoint.checkpoint"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerEncoder.forward.create_custom_forward": {
  "lineno": 891,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerEncoder.forward.create_custom_forward.custom_forward": {
  "lineno": 892,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForMaskedLM": {
  "lineno": 1288,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerForMaskedLM.__init__": {
  "lineno": 1293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForMaskedLM.forward": {
  "lineno": 1304,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForMaskedLM.get_output_embeddings": {
  "lineno": 1301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForMultipleChoice": {
  "lineno": 1717,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerForMultipleChoice.__init__": {
  "lineno": 1723,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForMultipleChoice.forward": {
  "lineno": 1732,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.stack"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForQuestionAnswering": {
  "lineno": 1497,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerForQuestionAnswering.__init__": {
  "lineno": 1506,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForQuestionAnswering.forward": {
  "lineno": 1515,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForSequenceClassification": {
  "lineno": 1389,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerForSequenceClassification.__init__": {
  "lineno": 1398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForSequenceClassification.forward": {
  "lineno": 1407,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.MSELoss",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForTokenClassification": {
  "lineno": 1628,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerForTokenClassification.__init__": {
  "lineno": 1637,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForTokenClassification.forward": {
  "lineno": 1647,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.tensor",
   "torch.where"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerIntermediate": {
  "lineno": 804,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerIntermediate.__init__": {
  "lineno": 805,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerIntermediate.forward": {
  "lineno": 813,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerLMHead": {
  "lineno": 941,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerLMHead.__init__": {
  "lineno": 944,
  "symbols_in_volume": [
   "torch.nn.LayerNorm",
   "torch.nn.Linear",
   "torch.nn.Parameter",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerLMHead.forward": {
  "lineno": 955,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerLayer": {
  "lineno": 834,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerLayer.__init__": {
  "lineno": 835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerLayer.ff_chunk": {
  "lineno": 863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerLayer.forward": {
  "lineno": 843,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerModel": {
  "lineno": 1063,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerModel.__init__": {
  "lineno": 1084,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerModel._merge_to_attention_mask": {
  "lineno": 1165,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerModel._pad_to_window_size": {
  "lineno": 1118,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat",
   "torch.long",
   "torch.nn.functional.pad"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerModel._prune_heads": {
  "lineno": 1110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerModel.forward": {
  "lineno": 1177,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.long",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerModel.get_input_embeddings": {
  "lineno": 1104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerModel.set_input_embeddings": {
  "lineno": 1107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerOutput": {
  "lineno": 820,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerOutput.__init__": {
  "lineno": 821,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerOutput.forward": {
  "lineno": 827,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerPooler": {
  "lineno": 925,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerPooler.__init__": {
  "lineno": 926,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerPooler.forward": {
  "lineno": 931,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerPreTrainedModel": {
  "lineno": 966,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerPreTrainedModel._init_weights": {
  "lineno": 976,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention": {
  "lineno": 191,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerSelfAttention.__init__": {
  "lineno": 192,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._chunk": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._compute_attn_output_with_global_indices": {
  "lineno": 627,
  "symbols_in_volume": [
   "torch.matmul"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._compute_global_attn_output_from_hidden": {
  "lineno": 663,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.bmm",
   "torch.float32",
   "torch.nn.functional.dropout",
   "torch.nn.functional.softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._concat_with_global_key_attn_probs": {
  "lineno": 600,
  "symbols_in_volume": [
   "torch.einsum"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._get_global_attn_indices": {
  "lineno": 571,
  "symbols_in_volume": [
   "torch.arange"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._mask_invalid_locations": {
  "lineno": 456,
  "symbols_in_volume": [
   "torch.Tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._pad_and_diagonalize": {
  "lineno": 405,
  "symbols_in_volume": [
   "torch.nn.functional.pad"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._pad_and_transpose_last_two_dims": {
  "lineno": 394,
  "symbols_in_volume": [
   "torch.nn.functional.pad"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._sliding_chunks_matmul_attn_probs_value": {
  "lineno": 532,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.einsum",
   "torch.nn.functional.pad"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._sliding_chunks_query_key_matmul": {
  "lineno": 468,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.einsum"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention.forward": {
  "lineno": 225,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.cat",
   "torch.float32",
   "torch.masked_fill",
   "torch.nn.functional.dropout",
   "torch.nn.functional.softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfOutput": {
  "lineno": 748,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerSelfOutput.__init__": {
  "lineno": 749,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfOutput.forward": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer._compute_global_attention_mask": {
  "lineno": 81,
  "symbols_in_volume": [
   "torch.arange",
   "torch.uint8"
  ],
  "type": "function"
 },
 "transformers.modeling_longformer._get_question_end_index": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_longformer.create_position_ids_from_input_ids": {
  "lineno": 103,
  "symbols_in_volume": [
   "torch.cumsum"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "transformers.modeling_lxmert.GeLU": {
  "lineno": 50,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.GeLU.__init__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.GeLU.forward": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertAttention": {
  "lineno": 318,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertAttention.__init__": {
  "lineno": 319,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertAttention.forward": {
  "lineno": 347,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.matmul",
   "torch.nn.Softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertAttention.transpose_for_scores": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertAttentionOutput": {
  "lineno": 379,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertAttentionOutput.__init__": {
  "lineno": 380,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertAttentionOutput.forward": {
  "lineno": 386,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertCrossAttentionLayer": {
  "lineno": 393,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertCrossAttentionLayer.__init__": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertCrossAttentionLayer.forward": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertEmbeddings": {
  "lineno": 278,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertEmbeddings.__init__": {
  "lineno": 281,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Embedding",
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertEmbeddings.forward": {
  "lineno": 292,
  "symbols_in_volume": [
   "torch.arange",
   "torch.long",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertEncoder": {
  "lineno": 590,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertEncoder.__init__": {
  "lineno": 591,
  "symbols_in_volume": [
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertEncoder.forward": {
  "lineno": 609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining": {
  "lineno": 1021,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining.__init__": {
  "lineno": 1026,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.SmoothL1Loss"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining._get_resized_qa_labels": {
  "lineno": 1127,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining._resize_qa_labels": {
  "lineno": 1107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining._set_qa_logit_layer": {
  "lineno": 1124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining.forward": {
  "lineno": 1155,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining.get_qa_logit_layer": {
  "lineno": 1113,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining.resize_num_qa_labels": {
  "lineno": 1080,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTrainingOutput": {
  "lineno": 149,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering": {
  "lineno": 1280,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering.__init__": {
  "lineno": 1285,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering._get_resized_qa_labels": {
  "lineno": 1351,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering._resize_qa_labels": {
  "lineno": 1330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering._set_qa_logit_layer": {
  "lineno": 1348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering.forward": {
  "lineno": 1379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering.get_qa_logit_layer": {
  "lineno": 1336,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering.resize_num_qa_labels": {
  "lineno": 1303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnsweringOutput": {
  "lineno": 107,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertIntermediate": {
  "lineno": 429,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertIntermediate.__init__": {
  "lineno": 430,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertIntermediate.forward": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertLMPredictionHead": {
  "lineno": 701,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertLMPredictionHead.__init__": {
  "lineno": 702,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Parameter",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertLMPredictionHead.forward": {
  "lineno": 716,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertLayer": {
  "lineno": 455,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertLayer.__init__": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertLayer.forward": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertModel": {
  "lineno": 885,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertModel.__init__": {
  "lineno": 890,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertModel.forward": {
  "lineno": 903,
  "symbols_in_volume": [
   "torch.long",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertModel.get_input_embeddings": {
  "lineno": 897,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertModel.set_input_embeddings": {
  "lineno": 900,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertModelOutput": {
  "lineno": 58,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertOutput": {
  "lineno": 441,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertOutput.__init__": {
  "lineno": 442,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertOutput.forward": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertPooler": {
  "lineno": 672,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertPooler.__init__": {
  "lineno": 673,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertPooler.forward": {
  "lineno": 678,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertPreTrainedModel": {
  "lineno": 780,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertPreTrainedModel._init_weights": {
  "lineno": 789,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertPreTrainingHeads": {
  "lineno": 768,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertPreTrainingHeads.__init__": {
  "lineno": 769,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertPreTrainingHeads.forward": {
  "lineno": 774,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertPredictionHeadTransform": {
  "lineno": 687,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertPredictionHeadTransform.__init__": {
  "lineno": 688,
  "symbols_in_volume": [
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertPredictionHeadTransform.forward": {
  "lineno": 694,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertSelfAttentionLayer": {
  "lineno": 408,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertSelfAttentionLayer.__init__": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertSelfAttentionLayer.forward": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertVisualAnswerHead": {
  "lineno": 722,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertVisualAnswerHead.__init__": {
  "lineno": 723,
  "symbols_in_volume": [
   "torch.nn.LayerNorm",
   "torch.nn.Linear",
   "torch.nn.Sequential"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertVisualAnswerHead.forward": {
  "lineno": 733,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertVisualFeatureEncoder": {
  "lineno": 563,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertVisualFeatureEncoder.__init__": {
  "lineno": 564,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertVisualFeatureEncoder.forward": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertVisualObjHead": {
  "lineno": 737,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertVisualObjHead.__init__": {
  "lineno": 738,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.ModuleDict"
  ],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertVisualObjHead.forward": {
  "lineno": 760,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertXLayer": {
  "lineno": 471,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertXLayer.__init__": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertXLayer.cross_att": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertXLayer.forward": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertXLayer.output_fc": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertXLayer.self_att": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_lxmert.load_tf_weights_in_lxmert": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.transpose",
   "os.path.abspath",
   "re.fullmatch",
   "re.split",
   "tensorflow.train.list_variables",
   "tensorflow.train.load_variable",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "transformers.modeling_marian": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_marian.MarianMTModel": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_marian.MarianMTModel.adjust_logits_during_generation": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mbart": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_mbart.MBartForConditionalGeneration": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_mmbt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_mmbt.MMBTForClassification": {
  "lineno": 311,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mmbt.MMBTForClassification.__init__": {
  "lineno": 348,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mmbt.MMBTForClassification.forward": {
  "lineno": 356,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.MSELoss"
  ],
  "type": "function"
 },
 "transformers.modeling_mmbt.MMBTModel": {
  "lineno": 183,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mmbt.MMBTModel.__init__": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mmbt.MMBTModel.forward": {
  "lineno": 194,
  "symbols_in_volume": [
   "torch.cat",
   "torch.long",
   "torch.ones"
  ],
  "type": "function"
 },
 "transformers.modeling_mmbt.MMBTModel.get_input_embeddings": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mmbt.MMBTModel.set_input_embeddings": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mmbt.ModalEmbeddings": {
  "lineno": 34,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mmbt.ModalEmbeddings.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mmbt.ModalEmbeddings.forward": {
  "lineno": 48,
  "symbols_in_volume": [
   "torch.arange",
   "torch.cat",
   "torch.long",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.nn.LayerNorm"
  ],
  "type": "module"
 },
 "transformers.modeling_mobilebert.Bottleneck": {
  "lineno": 422,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.Bottleneck.__init__": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.Bottleneck.forward": {
  "lineno": 431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.BottleneckLayer": {
  "lineno": 410,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.BottleneckLayer.__init__": {
  "lineno": 411,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.BottleneckLayer.forward": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.FFNLayer": {
  "lineno": 470,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.FFNLayer.__init__": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.FFNLayer.forward": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.FFNOutput": {
  "lineno": 458,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.FFNOutput.__init__": {
  "lineno": 459,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.FFNOutput.forward": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertAttention": {
  "lineno": 305,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertAttention.__init__": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertAttention.forward": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertAttention.prune_heads": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertEmbeddings": {
  "lineno": 160,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertEmbeddings.__init__": {
  "lineno": 163,
  "symbols_in_volume": [
   "torch.arange",
   "torch.nn.Dropout",
   "torch.nn.Embedding",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertEmbeddings.forward": {
  "lineno": 183,
  "symbols_in_volume": [
   "torch.cat",
   "torch.long",
   "torch.nn.functional.pad",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertEncoder": {
  "lineno": 547,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertEncoder.__init__": {
  "lineno": 548,
  "symbols_in_volume": [
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertEncoder.forward": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForMaskedLM": {
  "lineno": 1055,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForMaskedLM.__init__": {
  "lineno": 1060,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForMaskedLM.forward": {
  "lineno": 1093,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForMaskedLM.get_output_embeddings": {
  "lineno": 1068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForMaskedLM.tie_weights": {
  "lineno": 1071,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForMultipleChoice": {
  "lineno": 1446,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForMultipleChoice.__init__": {
  "lineno": 1452,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForMultipleChoice.forward": {
  "lineno": 1461,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForNextSentencePrediction": {
  "lineno": 1177,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForNextSentencePrediction.__init__": {
  "lineno": 1182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForNextSentencePrediction.forward": {
  "lineno": 1190,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForPreTraining": {
  "lineno": 935,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForPreTraining.__init__": {
  "lineno": 941,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForPreTraining.forward": {
  "lineno": 973,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForPreTraining.get_output_embeddings": {
  "lineno": 948,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForPreTraining.tie_weights": {
  "lineno": 951,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForPreTrainingOutput": {
  "lineno": 694,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForQuestionAnswering": {
  "lineno": 1346,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForQuestionAnswering.__init__": {
  "lineno": 1355,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForQuestionAnswering.forward": {
  "lineno": 1364,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForSequenceClassification": {
  "lineno": 1265,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForSequenceClassification.__init__": {
  "lineno": 1271,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForSequenceClassification.forward": {
  "lineno": 1280,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.MSELoss"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForTokenClassification": {
  "lineno": 1535,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForTokenClassification.__init__": {
  "lineno": 1544,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForTokenClassification.forward": {
  "lineno": 1554,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.tensor",
   "torch.where"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertIntermediate": {
  "lineno": 359,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertIntermediate.__init__": {
  "lineno": 360,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertIntermediate.forward": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertLMPredictionHead": {
  "lineno": 629,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertLMPredictionHead.__init__": {
  "lineno": 630,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Parameter",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertLMPredictionHead.forward": {
  "lineno": 641,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertLayer": {
  "lineno": 482,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertLayer.__init__": {
  "lineno": 483,
  "symbols_in_volume": [
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertLayer.forward": {
  "lineno": 496,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertModel": {
  "lineno": 808,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertModel.__init__": {
  "lineno": 817,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertModel._prune_heads": {
  "lineno": 833,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertModel.forward": {
  "lineno": 841,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.long",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertModel.get_input_embeddings": {
  "lineno": 827,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertModel.set_input_embeddings": {
  "lineno": 830,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertOnlyMLMHead": {
  "lineno": 648,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertOnlyMLMHead.__init__": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertOnlyMLMHead.forward": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertOnlyNSPHead": {
  "lineno": 1167,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertOnlyNSPHead.__init__": {
  "lineno": 1168,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertOnlyNSPHead.forward": {
  "lineno": 1172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertOutput": {
  "lineno": 388,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertOutput.__init__": {
  "lineno": 389,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertOutput.forward": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertPooler": {
  "lineno": 593,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertPooler.__init__": {
  "lineno": 594,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertPooler.forward": {
  "lineno": 600,
  "symbols_in_volume": [
   "torch.tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertPreTrainedModel": {
  "lineno": 670,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertPreTrainedModel._init_weights": {
  "lineno": 681,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertPreTrainingHeads": {
  "lineno": 658,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertPreTrainingHeads.__init__": {
  "lineno": 659,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertPreTrainingHeads.forward": {
  "lineno": 664,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertPredictionHeadTransform": {
  "lineno": 612,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertPredictionHeadTransform.__init__": {
  "lineno": 613,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertPredictionHeadTransform.forward": {
  "lineno": 622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertSelfAttention": {
  "lineno": 228,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertSelfAttention.__init__": {
  "lineno": 229,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertSelfAttention.forward": {
  "lineno": 247,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.matmul",
   "torch.nn.Softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertSelfAttention.transpose_for_scores": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertSelfOutput": {
  "lineno": 288,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertSelfOutput.__init__": {
  "lineno": 289,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertSelfOutput.forward": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.NoNorm": {
  "lineno": 147,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.NoNorm.__init__": {
  "lineno": 148,
  "symbols_in_volume": [
   "torch.nn.Parameter",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.NoNorm.forward": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.OutputBottleneck": {
  "lineno": 374,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_mobilebert.OutputBottleneck.__init__": {
  "lineno": 375,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.OutputBottleneck.forward": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_mobilebert.load_tf_weights_in_mobilebert": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.transpose",
   "os.path.abspath",
   "re.fullmatch",
   "re.split",
   "tensorflow.train.list_variables",
   "tensorflow.train.load_variable",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "transformers.modeling_mobilebert.mish": {
  "lineno": 143,
  "symbols_in_volume": [
   "torch.nn.functional.softplus",
   "torch.tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_openai": {
  "lineno": null,
  "symbols_in_volume": [
   "torch.nn.ReLU"
  ],
  "type": "module"
 },
 "transformers.modeling_openai.Attention": {
  "lineno": 145,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_openai.Attention.__init__": {
  "lineno": 146,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.ones",
   "torch.tril"
  ],
  "type": "function"
 },
 "transformers.modeling_openai.Attention._attn": {
  "lineno": 177,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.matmul",
   "torch.nn.Softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_openai.Attention.forward": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_openai.Attention.merge_heads": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_openai.Attention.prune_heads": {
  "lineno": 162,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "transformers.modeling_openai.Attention.split_heads": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_openai.Block": {
  "lineno": 248,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_openai.Block.__init__": {
  "lineno": 249,
  "symbols_in_volume": [
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_openai.Block.forward": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_openai.MLP": {
  "lineno": 233,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_openai.MLP.__init__": {
  "lineno": 234,
  "symbols_in_volume": [
   "torch.nn.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_openai.MLP.forward": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTDoubleHeadsModel": {
  "lineno": 609,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTDoubleHeadsModel.__init__": {
  "lineno": 618,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTDoubleHeadsModel.forward": {
  "lineno": 631,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTDoubleHeadsModel.get_output_embeddings": {
  "lineno": 628,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTDoubleHeadsModelOutput": {
  "lineno": 297,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTLMHeadModel": {
  "lineno": 528,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTLMHeadModel.__init__": {
  "lineno": 534,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTLMHeadModel.forward": {
  "lineno": 544,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTLMHeadModel.get_output_embeddings": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTModel": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTModel.__init__": {
  "lineno": 406,
  "symbols_in_volume": [
   "torch.arange",
   "torch.nn.Dropout",
   "torch.nn.Embedding",
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTModel._prune_heads": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTModel.forward": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTModel.get_input_embeddings": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTModel.set_input_embeddings": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTPreTrainedModel": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTPreTrainedModel._init_weights": {
  "lineno": 284,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_openai.load_tf_weights_in_openai_gpt": {
  "lineno": 61,
  "symbols_in_volume": [
   "json.load",
   "numpy.concatenate",
   "numpy.cumsum",
   "numpy.load",
   "numpy.prod",
   "numpy.split",
   "os.path.dirname",
   "re.fullmatch",
   "re.split",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "transformers.modeling_outputs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_outputs.BaseModelOutput": {
  "lineno": 9,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_outputs.BaseModelOutputWithPast": {
  "lineno": 67,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_outputs.BaseModelOutputWithPooling": {
  "lineno": 35,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_outputs.CausalLMOutput": {
  "lineno": 155,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_outputs.CausalLMOutputWithPast": {
  "lineno": 184,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_outputs.MaskedLMOutput": {
  "lineno": 220,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_outputs.MultipleChoiceModelOutput": {
  "lineno": 411,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_outputs.NextSentencePredictorOutput": {
  "lineno": 301,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_outputs.QuestionAnsweringModelOutput": {
  "lineno": 471,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_outputs.Seq2SeqLMOutput": {
  "lineno": 249,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_outputs.Seq2SeqModelOutput": {
  "lineno": 103,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_outputs.Seq2SeqQuestionAnsweringModelOutput": {
  "lineno": 503,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_outputs.Seq2SeqSequenceClassifierOutput": {
  "lineno": 359,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_outputs.SequenceClassifierOutput": {
  "lineno": 330,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_outputs.TokenClassifierOutput": {
  "lineno": 442,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_pegasus": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_pegasus.PegasusForConditionalGeneration": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_rag": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_rag.RagModel": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_rag.RagModel.__init__": {
  "lineno": 466,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_rag.RagModel.forward": {
  "lineno": 507,
  "symbols_in_volume": [
   "torch.bmm",
   "torch.float32"
  ],
  "type": "function"
 },
 "transformers.modeling_rag.RagPreTrainedModel": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_rag.RagPreTrainedModel.from_pretrained_question_encoder_generator": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration": {
  "lineno": 657,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.__init__": {
  "lineno": 663,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration._cat_and_pad": {
  "lineno": 966,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.forward": {
  "lineno": 685,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.generate": {
  "lineno": 814,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.float32",
   "torch.no_grad",
   "torch.stack",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.generator": {
  "lineno": 806,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.get_nll": {
  "lineno": 912,
  "symbols_in_volume": [
   "torch.cat",
   "torch.nn.functional.log_softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.get_nll._mask_pads": {
  "lineno": 922,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.question_encoder": {
  "lineno": 810,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.retriever": {
  "lineno": 802,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.set_retriever": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration": {
  "lineno": 978,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_rag.RagTokenForGeneration.__init__": {
  "lineno": 984,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration._reorder_cache": {
  "lineno": 1036,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration._reorder_cache._reorder_buffer": {
  "lineno": 1046,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration._reorder_cache._reorder_stacked": {
  "lineno": 1040,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.adjust_logits_during_generation": {
  "lineno": 1007,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.forward": {
  "lineno": 1069,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.generate": {
  "lineno": 1189,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.bmm",
   "torch.float32",
   "torch.full",
   "torch.long",
   "torch.no_grad",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.generate.extend_enc_output": {
  "lineno": 1350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.generator": {
  "lineno": 1028,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.get_input_embeddings": {
  "lineno": 1423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.get_nll": {
  "lineno": 1438,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.get_nll._mask_pads": {
  "lineno": 1444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.get_output_embeddings": {
  "lineno": 1426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.marginalize": {
  "lineno": 1060,
  "symbols_in_volume": [
   "torch.log_softmax",
   "torch.logsumexp",
   "torch.nn.functional.log_softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.prepare_inputs_for_generation": {
  "lineno": 1010,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.question_encoder": {
  "lineno": 1032,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.retriever": {
  "lineno": 1024,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.set_retriever": {
  "lineno": 1004,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.shift_tokens_right": {
  "lineno": 1429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_rag.RetrievAugLMMarginOutput": {
  "lineno": 36,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "torch.LongTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_rag.RetrievAugLMOutput": {
  "lineno": 125,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "torch.LongTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "transformers.modeling_reformer.AxialPositionEmbeddings": {
  "lineno": 115,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.AxialPositionEmbeddings.__init__": {
  "lineno": 120,
  "symbols_in_volume": [
   "torch.float32",
   "torch.nn.Parameter",
   "torch.nn.ParameterList",
   "torch.ones"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.AxialPositionEmbeddings.forward": {
  "lineno": 145,
  "symbols_in_volume": [
   "functools.reduce",
   "operator.mul",
   "torch.cat",
   "torch.index_select",
   "torch.nn.functional.dropout2d",
   "torch.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ChunkReformerFeedForward": {
  "lineno": 1391,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.ChunkReformerFeedForward.__init__": {
  "lineno": 1392,
  "symbols_in_volume": [
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ChunkReformerFeedForward.forward": {
  "lineno": 1401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ChunkReformerFeedForward.forward_chunk": {
  "lineno": 1409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.EfficientAttentionMixin": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_reformer.EfficientAttentionMixin._look_adjacent": {
  "lineno": 274,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.EfficientAttentionMixin._merge_hidden_size_dims": {
  "lineno": 305,
  "symbols_in_volume": [
   "torch.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.EfficientAttentionMixin._split_hidden_size_dim": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.EfficientAttentionMixin._split_seq_length_dim_to": {
  "lineno": 312,
  "symbols_in_volume": [
   "torch.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention": {
  "lineno": 327,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.LSHSelfAttention.__init__": {
  "lineno": 328,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._attend": {
  "lineno": 723,
  "symbols_in_volume": [
   "torch.arange",
   "torch.exp",
   "torch.float16",
   "torch.logsumexp",
   "torch.long",
   "torch.matmul",
   "torch.ne",
   "torch.nn.functional.dropout",
   "torch.ones_like",
   "torch.where"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._compute_attn_mask": {
  "lineno": 835,
  "symbols_in_volume": [
   "torch.gather",
   "torch.ge",
   "torch.uint8"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._expand_to_indices_in_relevant_chunk": {
  "lineno": 939,
  "symbols_in_volume": [
   "torch.arange",
   "torch.long"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._gather_by_expansion": {
  "lineno": 977,
  "symbols_in_volume": [
   "torch.gather"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._get_relevant_hid_states_and_buckets": {
  "lineno": 863,
  "symbols_in_volume": [
   "functools.reduce",
   "operator.mul",
   "torch.arange",
   "torch.cat",
   "torch.long"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._get_sorted_bucket_idx_and_undo_sorted_bucket_idx": {
  "lineno": 684,
  "symbols_in_volume": [
   "torch.arange",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._hash_vectors": {
  "lineno": 609,
  "symbols_in_volume": [
   "torch.arange",
   "torch.argmax",
   "torch.cat",
   "torch.einsum",
   "torch.long",
   "torch.manual_seed",
   "torch.randn",
   "torch.tensor",
   "torch.uint8",
   "torch.where"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._len_and_dim_norm": {
  "lineno": 959,
  "symbols_in_volume": [
   "torch.rsqrt",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._len_norm": {
  "lineno": 969,
  "symbols_in_volume": [
   "torch.mean",
   "torch.rsqrt"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._query_per_attn_head": {
  "lineno": 593,
  "symbols_in_volume": [
   "torch.einsum"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._set_num_buckets": {
  "lineno": 703,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._value_per_attn_head": {
  "lineno": 601,
  "symbols_in_volume": [
   "torch.einsum"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention.forward": {
  "lineno": 358,
  "symbols_in_volume": [
   "torch.arange",
   "torch.cat",
   "torch.exp",
   "torch.logsumexp",
   "torch.sum"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LocalSelfAttention": {
  "lineno": 1021,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.LocalSelfAttention.__init__": {
  "lineno": 1022,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LocalSelfAttention._compute_attn_mask": {
  "lineno": 1220,
  "symbols_in_volume": [
   "torch.ge",
   "torch.uint8"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.LocalSelfAttention._retrieve_relevant_hidden_states": {
  "lineno": 1246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.LocalSelfAttention.forward": {
  "lineno": 1047,
  "symbols_in_volume": [
   "torch.arange",
   "torch.cat",
   "torch.exp",
   "torch.float16",
   "torch.logsumexp",
   "torch.matmul",
   "torch.nn.functional.dropout",
   "torch.sqrt",
   "torch.tensor",
   "torch.where"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.PositionEmbeddings": {
  "lineno": 209,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.PositionEmbeddings.__init__": {
  "lineno": 212,
  "symbols_in_volume": [
   "torch.nn.Embedding"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.PositionEmbeddings.forward": {
  "lineno": 217,
  "symbols_in_volume": [
   "torch.nn.functional.dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerAttention": {
  "lineno": 1266,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerAttention.__init__": {
  "lineno": 1267,
  "symbols_in_volume": [
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerAttention.forward": {
  "lineno": 1292,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerClassificationHead": {
  "lineno": 2469,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerClassificationHead.__init__": {
  "lineno": 2472,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerClassificationHead.forward": {
  "lineno": 2478,
  "symbols_in_volume": [
   "torch.tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerEmbeddings": {
  "lineno": 223,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerEmbeddings.__init__": {
  "lineno": 226,
  "symbols_in_volume": [
   "torch.nn.Embedding"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerEmbeddings.forward": {
  "lineno": 236,
  "symbols_in_volume": [
   "torch.arange",
   "torch.long",
   "torch.nn.functional.dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerEncoder": {
  "lineno": 1695,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerEncoder.__init__": {
  "lineno": 1696,
  "symbols_in_volume": [
   "torch.nn.LayerNorm",
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerEncoder.forward": {
  "lineno": 1705,
  "symbols_in_volume": [
   "torch.cat",
   "torch.nn.functional.dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerFeedForwardDense": {
  "lineno": 1359,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerFeedForwardDense.__init__": {
  "lineno": 1360,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerFeedForwardDense.forward": {
  "lineno": 1371,
  "symbols_in_volume": [
   "torch.nn.functional.dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerFeedForwardOutput": {
  "lineno": 1378,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerFeedForwardOutput.__init__": {
  "lineno": 1379,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerFeedForwardOutput.forward": {
  "lineno": 1385,
  "symbols_in_volume": [
   "torch.nn.functional.dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerForMaskedLM": {
  "lineno": 2310,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerForMaskedLM.__init__": {
  "lineno": 2312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerForMaskedLM.forward": {
  "lineno": 2325,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerForMaskedLM.get_output_embeddings": {
  "lineno": 2322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerForQuestionAnswering": {
  "lineno": 2488,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerForQuestionAnswering.__init__": {
  "lineno": 2495,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerForQuestionAnswering.forward": {
  "lineno": 2505,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerForSequenceClassification": {
  "lineno": 2386,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerForSequenceClassification.__init__": {
  "lineno": 2392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerForSequenceClassification.forward": {
  "lineno": 2403,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.MSELoss"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerLayer": {
  "lineno": 1415,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerLayer.__init__": {
  "lineno": 1416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerLayer._init_attention_seed": {
  "lineno": 1426,
  "symbols_in_volume": [
   "sys.maxsize",
   "torch.cuda",
   "torch.cuda.current_device",
   "torch.cuda.default_generators",
   "torch.cuda.default_generators.seed",
   "torch.manual_seed",
   "torch.seed"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerLayer._init_feed_forward_seed": {
  "lineno": 1447,
  "symbols_in_volume": [
   "sys.maxsize",
   "torch.cuda",
   "torch.cuda.current_device",
   "torch.cuda.default_generators",
   "torch.cuda.default_generators.seed",
   "torch.manual_seed",
   "torch.seed"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerLayer.backward_pass": {
  "lineno": 1517,
  "symbols_in_volume": [
   "torch.enable_grad",
   "torch.manual_seed",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerLayer.forward": {
  "lineno": 1467,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModel": {
  "lineno": 1975,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerModel.__init__": {
  "lineno": 1980,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModel._pad_to_mult_of_chunk_length": {
  "lineno": 2133,
  "symbols_in_volume": [
   "torch.arange",
   "torch.cat",
   "torch.full",
   "torch.long",
   "torch.ones",
   "torch.uint8",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModel._prune_heads": {
  "lineno": 1998,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModel.forward": {
  "lineno": 2006,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModel.get_input_embeddings": {
  "lineno": 1992,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModel.set_input_embeddings": {
  "lineno": 1995,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModelOutput": {
  "lineno": 1814,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "torch.LongTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerModelWithLMHead": {
  "lineno": 2190,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerModelWithLMHead.__init__": {
  "lineno": 2192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModelWithLMHead._reorder_cache": {
  "lineno": 2295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModelWithLMHead.forward": {
  "lineno": 2210,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModelWithLMHead.get_output_embeddings": {
  "lineno": 2207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModelWithLMHead.prepare_inputs_for_generation": {
  "lineno": 2279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModelWithLMHeadOutput": {
  "lineno": 1852,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "torch.LongTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerOnlyLMHead": {
  "lineno": 1756,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerOnlyLMHead.__init__": {
  "lineno": 1757,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Parameter",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerOnlyLMHead.forward": {
  "lineno": 1769,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerOnlyLMHead.forward_chunk": {
  "lineno": 1772,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerPreTrainedModel": {
  "lineno": 1777,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerPreTrainedModel._init_weights": {
  "lineno": 1795,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear",
   "torch.nn.init.normal_"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerPreTrainedModel.dummy_inputs": {
  "lineno": 1785,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerSelfOutput": {
  "lineno": 1252,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerSelfOutput.__init__": {
  "lineno": 1253,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerSelfOutput.forward": {
  "lineno": 1260,
  "symbols_in_volume": [
   "torch.nn.functional.dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReverseSort": {
  "lineno": 986,
  "symbols_in_volume": [
   "torch.autograd.function.Function"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer.ReverseSort.backward": {
  "lineno": 1007,
  "symbols_in_volume": [
   "torch.gather"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer.ReverseSort.forward": {
  "lineno": 995,
  "symbols_in_volume": [
   "torch.gather",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer._ReversibleFunction": {
  "lineno": 1581,
  "symbols_in_volume": [
   "torch.autograd.function.Function"
  ],
  "type": "class"
 },
 "transformers.modeling_reformer._ReversibleFunction.backward": {
  "lineno": 1648,
  "symbols_in_volume": [
   "torch.cat",
   "torch.chunk"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer._ReversibleFunction.forward": {
  "lineno": 1590,
  "symbols_in_volume": [
   "torch.cat",
   "torch.chunk"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer._get_least_common_mult_chunk_len": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.lcm"
  ],
  "type": "function"
 },
 "transformers.modeling_reformer._get_min_chunk_len": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_reformer._stable_argsort": {
  "lineno": 72,
  "symbols_in_volume": [
   "torch.arange",
   "torch.argsort"
  ],
  "type": "function"
 },
 "transformers.modeling_retribert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_retribert.RetriBertModel": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_retribert.RetriBertModel.__init__": {
  "lineno": 84,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_retribert.RetriBertModel.embed_answers": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_retribert.RetriBertModel.embed_questions": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_retribert.RetriBertModel.embed_sentences_checkpointed": {
  "lineno": 98,
  "symbols_in_volume": [
   "math.ceil",
   "torch.Tensor",
   "torch.cat",
   "torch.long",
   "torch.utils.checkpoint.checkpoint",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_retribert.RetriBertModel.embed_sentences_checkpointed.partial_encode": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_retribert.RetriBertModel.forward": {
  "lineno": 170,
  "symbols_in_volume": [
   "torch.arange",
   "torch.mm"
  ],
  "type": "function"
 },
 "transformers.modeling_retribert.RetriBertPreTrainedModel": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_retribert.RetriBertPreTrainedModel._init_weights": {
  "lineno": 51,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_roberta.RobertaAttention": {
  "lineno": 237,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaAttention.__init__": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaAttention.forward": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaAttention.prune_heads": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaClassificationHead": {
  "lineno": 1204,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaClassificationHead.__init__": {
  "lineno": 1207,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaClassificationHead.forward": {
  "lineno": 1213,
  "symbols_in_volume": [
   "torch.tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEmbeddings": {
  "lineno": 68,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaEmbeddings.__init__": {
  "lineno": 74,
  "symbols_in_volume": [
   "torch.arange",
   "torch.nn.Dropout",
   "torch.nn.Embedding",
   "torch.nn.LayerNorm"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEmbeddings.create_position_ids_from_inputs_embeds": {
  "lineno": 126,
  "symbols_in_volume": [
   "torch.arange",
   "torch.long"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEmbeddings.forward": {
  "lineno": 94,
  "symbols_in_volume": [
   "torch.long",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEncoder": {
  "lineno": 376,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaEncoder.__init__": {
  "lineno": 377,
  "symbols_in_volume": [
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEncoder.forward": {
  "lineno": 382,
  "symbols_in_volume": [
   "torch.utils.checkpoint.checkpoint"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEncoder.forward.create_custom_forward": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEncoder.forward.create_custom_forward.custom_forward": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForCausalLM": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForCausalLM.__init__": {
  "lineno": 708,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForCausalLM.forward": {
  "lineno": 722,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForCausalLM.get_output_embeddings": {
  "lineno": 719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForCausalLM.prepare_inputs_for_generation": {
  "lineno": 812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMaskedLM": {
  "lineno": 822,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForMaskedLM.__init__": {
  "lineno": 827,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMaskedLM.forward": {
  "lineno": 844,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMaskedLM.get_output_embeddings": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMultipleChoice": {
  "lineno": 1025,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForMultipleChoice.__init__": {
  "lineno": 1033,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMultipleChoice.forward": {
  "lineno": 1042,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForQuestionAnswering": {
  "lineno": 1223,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForQuestionAnswering.__init__": {
  "lineno": 1232,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForQuestionAnswering.forward": {
  "lineno": 1241,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForSequenceClassification": {
  "lineno": 943,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForSequenceClassification.__init__": {
  "lineno": 951,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForSequenceClassification.forward": {
  "lineno": 960,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.MSELoss"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForTokenClassification": {
  "lineno": 1115,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForTokenClassification.__init__": {
  "lineno": 1124,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForTokenClassification.forward": {
  "lineno": 1134,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.tensor",
   "torch.where"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaIntermediate": {
  "lineno": 285,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaIntermediate.__init__": {
  "lineno": 286,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaIntermediate.forward": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaLMHead": {
  "lineno": 918,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaLMHead.__init__": {
  "lineno": 921,
  "symbols_in_volume": [
   "torch.nn.LayerNorm",
   "torch.nn.Linear",
   "torch.nn.Parameter",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaLMHead.forward": {
  "lineno": 932,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaLayer": {
  "lineno": 316,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaLayer.__init__": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaLayer.feed_forward_chunk": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaLayer.forward": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaModel": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaModel.__init__": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaModel._prune_heads": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaModel.forward": {
  "lineno": 598,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.long",
   "torch.ones",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaModel.get_input_embeddings": {
  "lineno": 584,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaModel.set_input_embeddings": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaOutput": {
  "lineno": 301,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaOutput.__init__": {
  "lineno": 302,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaOutput.forward": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaPooler": {
  "lineno": 441,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaPooler.__init__": {
  "lineno": 442,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaPooler.forward": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaPreTrainedModel": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaPreTrainedModel._init_weights": {
  "lineno": 465,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaSelfAttention": {
  "lineno": 143,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaSelfAttention.__init__": {
  "lineno": 144,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaSelfAttention.forward": {
  "lineno": 167,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.matmul",
   "torch.nn.Softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaSelfAttention.transpose_for_scores": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaSelfOutput": {
  "lineno": 222,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaSelfOutput.__init__": {
  "lineno": 223,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaSelfOutput.forward": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_roberta.create_position_ids_from_input_ids": {
  "lineno": 1323,
  "symbols_in_volume": [
   "torch.cumsum"
  ],
  "type": "function"
 },
 "transformers.modeling_t5": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_t5.T5Attention": {
  "lineno": 204,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_t5.T5Attention.__init__": {
  "lineno": 205,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5Attention._relative_position_bucket": {
  "lineno": 241,
  "symbols_in_volume": [
   "math.log",
   "torch.abs",
   "torch.full_like",
   "torch.log",
   "torch.long",
   "torch.max",
   "torch.min",
   "torch.where",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5Attention.compute_bias": {
  "lineno": 289,
  "symbols_in_volume": [
   "torch.arange",
   "torch.long"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5Attention.forward": {
  "lineno": 304,
  "symbols_in_volume": [
   "torch.cat",
   "torch.matmul",
   "torch.nn.functional.dropout",
   "torch.nn.functional.softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5Attention.forward.shape": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5Attention.forward.unshape": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5Attention.prune_heads": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5Block": {
  "lineno": 481,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_t5.T5Block.__init__": {
  "lineno": 482,
  "symbols_in_volume": [
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5Block.forward": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5DenseReluDense": {
  "lineno": 175,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_t5.T5DenseReluDense.__init__": {
  "lineno": 176,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5DenseReluDense.forward": {
  "lineno": 182,
  "symbols_in_volume": [
   "torch.nn.functional.relu"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration": {
  "lineno": 1063,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.__init__": {
  "lineno": 1067,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.nn.Embedding",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration._reorder_cache": {
  "lineno": 1261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.forward": {
  "lineno": 1105,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.get_decoder": {
  "lineno": 1102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.get_encoder": {
  "lineno": 1099,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.get_input_embeddings": {
  "lineno": 1088,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.get_output_embeddings": {
  "lineno": 1096,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.prepare_inputs_for_generation": {
  "lineno": 1252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.set_input_embeddings": {
  "lineno": 1091,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerCrossAttention": {
  "lineno": 444,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_t5.T5LayerCrossAttention.__init__": {
  "lineno": 445,
  "symbols_in_volume": [
   "torch.nn.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerCrossAttention.forward": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerFF": {
  "lineno": 190,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_t5.T5LayerFF.__init__": {
  "lineno": 191,
  "symbols_in_volume": [
   "torch.nn.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerFF.forward": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerNorm": {
  "lineno": 156,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_t5.T5LayerNorm.__init__": {
  "lineno": 157,
  "symbols_in_volume": [
   "torch.nn.Parameter",
   "torch.ones"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerNorm.forward": {
  "lineno": 165,
  "symbols_in_volume": [
   "torch.float16",
   "torch.float32",
   "torch.sqrt"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerSelfAttention": {
  "lineno": 411,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_t5.T5LayerSelfAttention.__init__": {
  "lineno": 412,
  "symbols_in_volume": [
   "torch.nn.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerSelfAttention.forward": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5Model": {
  "lineno": 905,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_t5.T5Model.__init__": {
  "lineno": 910,
  "symbols_in_volume": [
   "copy.deepcopy",
   "torch.nn.Embedding"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5Model._prune_heads": {
  "lineno": 941,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5Model.forward": {
  "lineno": 949,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5Model.get_decoder": {
  "lineno": 938,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5Model.get_encoder": {
  "lineno": 935,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5Model.get_input_embeddings": {
  "lineno": 927,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5Model.set_input_embeddings": {
  "lineno": 930,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5PreTrainedModel": {
  "lineno": 570,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_t5.T5PreTrainedModel._init_weights": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5PreTrainedModel._shift_right": {
  "lineno": 622,
  "symbols_in_volume": [
   "torch.all"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5PreTrainedModel.dummy_inputs": {
  "lineno": 579,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5Stack": {
  "lineno": 644,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_t5.T5Stack.__init__": {
  "lineno": 645,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5Stack.forward": {
  "lineno": 668,
  "symbols_in_volume": [
   "torch.long",
   "torch.ones"
  ],
  "type": "function"
 },
 "transformers.modeling_t5.T5Stack.get_input_embeddings": {
  "lineno": 659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5Stack.get_output_embeddings": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.T5Stack.set_input_embeddings": {
  "lineno": 665,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_t5.load_tf_weights_in_t5": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.transpose",
   "os.path.abspath",
   "re.fullmatch",
   "re.split",
   "tensorflow.train.list_variables",
   "tensorflow.train.load_variable",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_albert.TFAlbertAttention": {
  "lineno": 199,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertAttention.__init__": {
  "lineno": 202,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertAttention.call": {
  "lineno": 237,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.float32",
   "tensorflow.math.sqrt",
   "tensorflow.matmul",
   "tensorflow.nn.softmax",
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertAttention.prune_heads": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertAttention.transpose_for_scores": {
  "lineno": 229,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertEmbeddings": {
  "lineno": 76,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertEmbeddings.__init__": {
  "lineno": 79,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.Embedding",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertEmbeddings._embedding": {
  "lineno": 144,
  "symbols_in_volume": [
   "tensorflow.fill",
   "tensorflow.gather",
   "tensorflow.int32",
   "tensorflow.newaxis",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertEmbeddings._linear": {
  "lineno": 169,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertEmbeddings.build": {
  "lineno": 102,
  "symbols_in_volume": [
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertEmbeddings.call": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForMaskedLM": {
  "lineno": 827,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertForMaskedLM.__init__": {
  "lineno": 832,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForMaskedLM.call": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForMaskedLM.get_output_embeddings": {
  "lineno": 838,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForMultipleChoice": {
  "lineno": 1175,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertForMultipleChoice.__init__": {
  "lineno": 1181,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForMultipleChoice.call": {
  "lineno": 1199,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForMultipleChoice.dummy_inputs": {
  "lineno": 1190,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForPreTraining": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertForPreTraining.__init__": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForPreTraining.call": {
  "lineno": 772,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForPreTraining.get_output_embeddings": {
  "lineno": 769,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForPreTrainingOutput": {
  "lineno": 613,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertForQuestionAnswering": {
  "lineno": 1076,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertForQuestionAnswering.__init__": {
  "lineno": 1085,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForQuestionAnswering.call": {
  "lineno": 1094,
  "symbols_in_volume": [
   "tensorflow.split",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForSequenceClassification": {
  "lineno": 907,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertForSequenceClassification.__init__": {
  "lineno": 913,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForSequenceClassification.call": {
  "lineno": 923,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForTokenClassification": {
  "lineno": 991,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertForTokenClassification.__init__": {
  "lineno": 1000,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForTokenClassification.call": {
  "lineno": 1010,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertLayer": {
  "lineno": 290,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertLayer.__init__": {
  "lineno": 291,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertLayer.call": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertLayerGroup": {
  "lineno": 328,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertLayerGroup.__init__": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertLayerGroup.call": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMLMHead": {
  "lineno": 431,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertMLMHead.__init__": {
  "lineno": 432,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMLMHead.build": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMLMHead.call": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMainLayer": {
  "lineno": 465,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertMainLayer.__init__": {
  "lineno": 469,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMainLayer._prune_heads": {
  "lineno": 495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMainLayer._resize_token_embeddings": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMainLayer.call": {
  "lineno": 502,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.fill",
   "tensorflow.float32",
   "tensorflow.newaxis"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMainLayer.get_input_embeddings": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMainLayer.set_input_embeddings": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertModel": {
  "lineno": 734,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertModel.__init__": {
  "lineno": 739,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertModel.call": {
  "lineno": 743,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertPreTrainedModel": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertSOPHead": {
  "lineno": 810,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertSOPHead.__init__": {
  "lineno": 811,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertSOPHead.call": {
  "lineno": 821,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertSelfOutput": {
  "lineno": 183,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertSelfOutput.__init__": {
  "lineno": 184,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertSelfOutput.call": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertTransformer": {
  "lineno": 363,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertTransformer.__init__": {
  "lineno": 364,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertTransformer.call": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "module"
 },
 "transformers.modeling_tf_auto.TFAutoModel": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModel.__init__": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModel.from_config": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModel.from_pretrained": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForCausalLM": {
  "lineno": 715,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForCausalLM.__init__": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_config": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_pretrained": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMaskedLM": {
  "lineno": 809,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.__init__": {
  "lineno": 819,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_config": {
  "lineno": 826,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_pretrained": {
  "lineno": 860,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice": {
  "lineno": 1293,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.__init__": {
  "lineno": 1303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_config": {
  "lineno": 1310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_pretrained": {
  "lineno": 1346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForPreTraining": {
  "lineno": 508,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForPreTraining.__init__": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_config": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_pretrained": {
  "lineno": 559,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering": {
  "lineno": 1099,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.__init__": {
  "lineno": 1109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_config": {
  "lineno": 1116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_pretrained": {
  "lineno": 1151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM": {
  "lineno": 903,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.__init__": {
  "lineno": 913,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_config": {
  "lineno": 920,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_pretrained": {
  "lineno": 956,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification": {
  "lineno": 1001,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.__init__": {
  "lineno": 1011,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_config": {
  "lineno": 1018,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_pretrained": {
  "lineno": 1054,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForTokenClassification": {
  "lineno": 1196,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.__init__": {
  "lineno": 1206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_config": {
  "lineno": 1213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_pretrained": {
  "lineno": 1248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelWithLMHead": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelWithLMHead.__init__": {
  "lineno": 619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_config": {
  "lineno": 626,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_pretrained": {
  "lineno": 665,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_bert.TFBertAttention": {
  "lineno": 293,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertAttention.__init__": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertAttention.call": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertAttention.prune_heads": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings": {
  "lineno": 91,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings.__init__": {
  "lineno": 94,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.Embedding",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings._embedding": {
  "lineno": 161,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.fill",
   "tensorflow.gather",
   "tensorflow.int32",
   "tensorflow.newaxis",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings._linear": {
  "lineno": 189,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings.build": {
  "lineno": 118,
  "symbols_in_volume": [
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings.call": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEncoder": {
  "lineno": 371,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertEncoder.__init__": {
  "lineno": 372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEncoder.call": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMaskedLM": {
  "lineno": 854,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForMaskedLM.__init__": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMaskedLM.call": {
  "lineno": 874,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMaskedLM.get_output_embeddings": {
  "lineno": 871,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMultipleChoice": {
  "lineno": 1156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForMultipleChoice.__init__": {
  "lineno": 1162,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMultipleChoice.call": {
  "lineno": 1180,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMultipleChoice.dummy_inputs": {
  "lineno": 1171,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForNextSentencePrediction": {
  "lineno": 1025,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForNextSentencePrediction.__init__": {
  "lineno": 1030,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForNextSentencePrediction.call": {
  "lineno": 1036,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForPreTraining": {
  "lineno": 802,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForPreTraining.__init__": {
  "lineno": 808,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForPreTraining.call": {
  "lineno": 818,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForPreTraining.get_output_embeddings": {
  "lineno": 815,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForPreTrainingOutput": {
  "lineno": 658,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForQuestionAnswering": {
  "lineno": 1365,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForQuestionAnswering.__init__": {
  "lineno": 1374,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForQuestionAnswering.call": {
  "lineno": 1383,
  "symbols_in_volume": [
   "tensorflow.split",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForSequenceClassification": {
  "lineno": 1073,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForSequenceClassification.__init__": {
  "lineno": 1079,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForSequenceClassification.call": {
  "lineno": 1089,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForTokenClassification": {
  "lineno": 1282,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForTokenClassification.__init__": {
  "lineno": 1291,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForTokenClassification.call": {
  "lineno": 1301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertIntermediate": {
  "lineno": 313,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertIntermediate.__init__": {
  "lineno": 314,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertIntermediate.call": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMHeadModel": {
  "lineno": 940,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertLMHeadModel.__init__": {
  "lineno": 944,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMHeadModel.call": {
  "lineno": 956,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMHeadModel.get_output_embeddings": {
  "lineno": 953,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMPredictionHead": {
  "lineno": 457,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertLMPredictionHead.__init__": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMPredictionHead.build": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMPredictionHead.call": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLayer": {
  "lineno": 351,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertLayer.__init__": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLayer.call": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMLMHead": {
  "lineno": 481,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertMLMHead.__init__": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMLMHead.call": {
  "lineno": 487,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer": {
  "lineno": 507,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer.__init__": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer._prune_heads": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer.call": {
  "lineno": 537,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.fill",
   "tensorflow.newaxis"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer.get_input_embeddings": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer.set_input_embeddings": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertModel": {
  "lineno": 779,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertModel.__init__": {
  "lineno": 784,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertModel.call": {
  "lineno": 789,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertNSPHead": {
  "lineno": 493,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertNSPHead.__init__": {
  "lineno": 494,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertNSPHead.call": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertOutput": {
  "lineno": 333,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertOutput.__init__": {
  "lineno": 334,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertOutput.call": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertPooler": {
  "lineno": 414,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertPooler.__init__": {
  "lineno": 415,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertPooler.call": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertPreTrainedModel": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertPredictionHeadTransform": {
  "lineno": 434,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertPredictionHeadTransform.__init__": {
  "lineno": 435,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertPredictionHeadTransform.call": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfAttention": {
  "lineno": 204,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertSelfAttention.__init__": {
  "lineno": 205,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfAttention.call": {
  "lineno": 234,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.math.sqrt",
   "tensorflow.matmul",
   "tensorflow.nn.softmax",
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfAttention.transpose_for_scores": {
  "lineno": 229,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfOutput": {
  "lineno": 275,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertSelfOutput.__init__": {
  "lineno": 276,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfOutput.call": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_camembert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_camembert.TFCamembertForMaskedLM": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_camembert.TFCamembertForMultipleChoice": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_camembert.TFCamembertForQuestionAnswering": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_camembert.TFCamembertForSequenceClassification": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_camembert.TFCamembertForTokenClassification": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_camembert.TFCamembertModel": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_ctrl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHead": {
  "lineno": 563,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHead.__init__": {
  "lineno": 564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHead.build": {
  "lineno": 572,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHead.call": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHeadModel": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHeadModel.__init__": {
  "lineno": 588,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHeadModel.call": {
  "lineno": 604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHeadModel.get_output_embeddings": {
  "lineno": 594,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHeadModel.prepare_inputs_for_generation": {
  "lineno": 597,
  "symbols_in_volume": [
   "tensorflow.expand_dims"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer": {
  "lineno": 202,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer.__init__": {
  "lineno": 206,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer._prune_heads": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer._resize_token_embeddings": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer.call": {
  "lineno": 253,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.float32",
   "tensorflow.gather",
   "tensorflow.int32",
   "tensorflow.linalg.band_part",
   "tensorflow.math.sqrt",
   "tensorflow.newaxis",
   "tensorflow.ones",
   "tensorflow.range",
   "tensorflow.reshape",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer.get_input_embeddings": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer.set_input_embeddings": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLModel": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFCTRLModel.__init__": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLModel.call": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLPreTrainedModel": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFEncoderLayer": {
  "lineno": 156,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFEncoderLayer.__init__": {
  "lineno": 157,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFEncoderLayer.call": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFMultiHeadAttention": {
  "lineno": 89,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFMultiHeadAttention.__init__": {
  "lineno": 90,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFMultiHeadAttention.call": {
  "lineno": 108,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.reshape",
   "tensorflow.stack",
   "tensorflow.transpose",
   "tensorflow.unstack"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFMultiHeadAttention.split_into_heads": {
  "lineno": 104,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFPointWiseFeedForwardLayer": {
  "lineno": 142,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFPointWiseFeedForwardLayer.__init__": {
  "lineno": 143,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFPointWiseFeedForwardLayer.call": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.angle_defn": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.power"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.positional_encoding": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.concatenate",
   "numpy.cos",
   "numpy.newaxis",
   "numpy.sin",
   "tensorflow.cast",
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.scaled_dot_product_attention": {
  "lineno": 64,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.float32",
   "tensorflow.math.sqrt",
   "tensorflow.matmul",
   "tensorflow.nn.softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMaskedLM": {
  "lineno": 621,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMaskedLM.__init__": {
  "lineno": 626,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMaskedLM.call": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMaskedLM.get_output_embeddings": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMultipleChoice": {
  "lineno": 871,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMultipleChoice.__init__": {
  "lineno": 877,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMultipleChoice.call": {
  "lineno": 901,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMultipleChoice.dummy_inputs": {
  "lineno": 892,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForQuestionAnswering": {
  "lineno": 995,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForQuestionAnswering.__init__": {
  "lineno": 1001,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForQuestionAnswering.call": {
  "lineno": 1011,
  "symbols_in_volume": [
   "tensorflow.split",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForSequenceClassification": {
  "lineno": 706,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForSequenceClassification.__init__": {
  "lineno": 712,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForSequenceClassification.call": {
  "lineno": 728,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForTokenClassification": {
  "lineno": 793,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForTokenClassification.__init__": {
  "lineno": 799,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForTokenClassification.call": {
  "lineno": 809,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertLMHead": {
  "lineno": 602,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertLMHead.__init__": {
  "lineno": 603,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertLMHead.build": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertLMHead.call": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer": {
  "lineno": 394,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer.__init__": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer._prune_heads": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer.call": {
  "lineno": 418,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.float32",
   "tensorflow.ones"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer.get_input_embeddings": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer.set_input_embeddings": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertModel": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertModel.__init__": {
  "lineno": 586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertModel.call": {
  "lineno": 590,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertPreTrainedModel": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings": {
  "lineno": 69,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings.__init__": {
  "lineno": 70,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.Embedding",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings._embedding": {
  "lineno": 120,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.gather",
   "tensorflow.int32",
   "tensorflow.newaxis",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings._linear": {
  "lineno": 153,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings.build": {
  "lineno": 88,
  "symbols_in_volume": [
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings.call": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFFFN": {
  "lineno": 259,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFFFN.__init__": {
  "lineno": 260,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFFFN.call": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention": {
  "lineno": 169,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.__init__": {
  "lineno": 170,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.call": {
  "lineno": 198,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.float32",
   "tensorflow.int32",
   "tensorflow.math.divide",
   "tensorflow.math.rsqrt",
   "tensorflow.matmul",
   "tensorflow.multiply",
   "tensorflow.nn.softmax",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.call.shape": {
  "lineno": 222,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.call.unshape": {
  "lineno": 226,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.prune_heads": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFTransformer": {
  "lineno": 336,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFTransformer.__init__": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFTransformer.call": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFTransformerBlock": {
  "lineno": 282,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFTransformerBlock.__init__": {
  "lineno": 283,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFTransformerBlock.call": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_electra.TFElectraAttention": {
  "lineno": 148,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraAttention.__init__": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraAttention.call": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraAttention.prune_heads": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraClassificationHead": {
  "lineno": 909,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraClassificationHead.__init__": {
  "lineno": 912,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraClassificationHead.call": {
  "lineno": 923,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraDiscriminatorPredictions": {
  "lineno": 409,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraDiscriminatorPredictions.__init__": {
  "lineno": 410,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraDiscriminatorPredictions.call": {
  "lineno": 417,
  "symbols_in_volume": [
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraEmbeddings": {
  "lineno": 294,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraEmbeddings.__init__": {
  "lineno": 297,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.Embedding",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraEmbeddings._embedding": {
  "lineno": 366,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.fill",
   "tensorflow.gather",
   "tensorflow.int32",
   "tensorflow.newaxis",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraEmbeddings._linear": {
  "lineno": 394,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraEmbeddings.build": {
  "lineno": 321,
  "symbols_in_volume": [
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraEmbeddings.call": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraEncoder": {
  "lineno": 230,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraEncoder.__init__": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraEncoder.call": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForMaskedLM": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraForMaskedLM.__init__": {
  "lineno": 824,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForMaskedLM.call": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForMaskedLM.get_output_embeddings": {
  "lineno": 838,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForMultipleChoice": {
  "lineno": 1012,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraForMultipleChoice.__init__": {
  "lineno": 1018,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForMultipleChoice.call": {
  "lineno": 1038,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForMultipleChoice.dummy_inputs": {
  "lineno": 1029,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForPreTraining": {
  "lineno": 727,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraForPreTraining.__init__": {
  "lineno": 736,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForPreTraining.call": {
  "lineno": 742,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForPreTrainingOutput": {
  "lineno": 589,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraForQuestionAnswering": {
  "lineno": 1222,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraForQuestionAnswering.__init__": {
  "lineno": 1228,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForQuestionAnswering.call": {
  "lineno": 1237,
  "symbols_in_volume": [
   "tensorflow.split",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForSequenceClassification": {
  "lineno": 934,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraForSequenceClassification.__init__": {
  "lineno": 940,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForSequenceClassification.call": {
  "lineno": 946,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForTokenClassification": {
  "lineno": 1140,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraForTokenClassification.__init__": {
  "lineno": 1147,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForTokenClassification.call": {
  "lineno": 1156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraGeneratorPredictions": {
  "lineno": 425,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraGeneratorPredictions.__init__": {
  "lineno": 426,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraGeneratorPredictions.call": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraIntermediate": {
  "lineno": 169,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraIntermediate.__init__": {
  "lineno": 170,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraIntermediate.call": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraLayer": {
  "lineno": 209,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraLayer.__init__": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraLayer.call": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer": {
  "lineno": 449,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer.__init__": {
  "lineno": 453,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer._prune_heads": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer._resize_token_embeddings": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer.call": {
  "lineno": 510,
  "symbols_in_volume": [
   "tensorflow.fill"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer.get_extended_attention_mask": {
  "lineno": 481,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.fill",
   "tensorflow.newaxis"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer.get_head_mask": {
  "lineno": 502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer.get_input_embeddings": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer.set_input_embeddings": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMaskedLMHead": {
  "lineno": 797,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraMaskedLMHead.__init__": {
  "lineno": 798,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMaskedLMHead.build": {
  "lineno": 804,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMaskedLMHead.call": {
  "lineno": 809,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraModel": {
  "lineno": 700,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraModel.__init__": {
  "lineno": 709,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraModel.call": {
  "lineno": 714,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraOutput": {
  "lineno": 190,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraOutput.__init__": {
  "lineno": 191,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraOutput.call": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraPooler": {
  "lineno": 274,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraPooler.__init__": {
  "lineno": 275,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraPooler.call": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraPreTrainedModel": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraSelfAttention": {
  "lineno": 57,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraSelfAttention.__init__": {
  "lineno": 58,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraSelfAttention.call": {
  "lineno": 87,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.math.sqrt",
   "tensorflow.matmul",
   "tensorflow.nn.softmax",
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraSelfAttention.transpose_for_scores": {
  "lineno": 82,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraSelfOutput": {
  "lineno": 129,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraSelfOutput.__init__": {
  "lineno": 130,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraSelfOutput.call": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForMultipleChoice": {
  "lineno": 782,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForMultipleChoice.__init__": {
  "lineno": 788,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForQuestionAnsweringSimple": {
  "lineno": 758,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForQuestionAnsweringSimple.__init__": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForSequenceClassification": {
  "lineno": 745,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForSequenceClassification.__init__": {
  "lineno": 753,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForTokenClassification": {
  "lineno": 771,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForTokenClassification.__init__": {
  "lineno": 777,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMainLayer": {
  "lineno": 345,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMainLayer.__init__": {
  "lineno": 349,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.Embedding",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMainLayer.call": {
  "lineno": 413,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.convert_to_tensor",
   "tensorflow.debugging.assert_equal",
   "tensorflow.expand_dims",
   "tensorflow.int32",
   "tensorflow.less",
   "tensorflow.newaxis",
   "tensorflow.not_equal",
   "tensorflow.random.uniform",
   "tensorflow.range",
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMainLayer.get_input_embeddings": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertModel": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertModel.__init__": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertModel.call": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMultiHeadAttention": {
  "lineno": 233,
  "symbols_in_volume": [
   "itertools.count",
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMultiHeadAttention.__init__": {
  "lineno": 236,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMultiHeadAttention.call": {
  "lineno": 254,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.concat",
   "tensorflow.float32",
   "tensorflow.int32",
   "tensorflow.math.divide",
   "tensorflow.math.rsqrt",
   "tensorflow.matmul",
   "tensorflow.multiply",
   "tensorflow.nn.softmax",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMultiHeadAttention.call.shape": {
  "lineno": 272,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMultiHeadAttention.call.unshape": {
  "lineno": 276,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMultiHeadAttention.prune_heads": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertPreTrainedModel": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertPreTrainedModel.dummy_inputs": {
  "lineno": 199,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertPredLayer": {
  "lineno": 631,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertPredLayer.__init__": {
  "lineno": 636,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertPredLayer.build": {
  "lineno": 655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertPredLayer.call": {
  "lineno": 661,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertTransformerFFN": {
  "lineno": 327,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertTransformerFFN.__init__": {
  "lineno": 328,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "transformers.activations_tf.get_tf_activation"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertTransformerFFN.call": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertWithLMHeadModel": {
  "lineno": 694,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertWithLMHeadModel.__init__": {
  "lineno": 700,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertWithLMHeadModel.call": {
  "lineno": 722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertWithLMHeadModel.get_output_embeddings": {
  "lineno": 705,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertWithLMHeadModel.prepare_inputs_for_generation": {
  "lineno": 708,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.int32",
   "tensorflow.ones",
   "tensorflow.ones_like"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertWithLMHeadModelOutput": {
  "lineno": 668,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.get_masks": {
  "lineno": 160,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.debugging.assert_equal",
   "tensorflow.float32",
   "tensorflow.less_equal",
   "tensorflow.math.less",
   "tensorflow.newaxis",
   "tensorflow.range",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.__init__": {
  "lineno": 161,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.get_position_embeds": {
  "lineno": 199,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.cos",
   "tensorflow.einsum",
   "tensorflow.float32",
   "tensorflow.gather",
   "tensorflow.range",
   "tensorflow.sin"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.init_attention_inputs": {
  "lineno": 176,
  "symbols_in_volume": [
   "tensorflow.ones",
   "tensorflow.pad"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.pool_tensor": {
  "lineno": 335,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.nn.avg_pool1d",
   "tensorflow.nn.max_pool1d",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.post_attention_pooling": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.pre_attention_pooling": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.relative_pos": {
  "lineno": 294,
  "symbols_in_volume": [
   "tensorflow.int64",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.stride_pool": {
  "lineno": 308,
  "symbols_in_volume": [
   "tensorflow.concat"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.stride_pool_pos": {
  "lineno": 279,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.token_type_ids_to_mat": {
  "lineno": 191,
  "symbols_in_volume": [
   "tensorflow.constant",
   "tensorflow.equal",
   "tensorflow.expand_dims",
   "tensorflow.logical_or"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseLayer": {
  "lineno": 751,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseLayer.__init__": {
  "lineno": 757,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseLayer._prune_heads": {
  "lineno": 773,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseLayer.call": {
  "lineno": 776,
  "symbols_in_volume": [
   "tensorflow.fill"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseLayer.get_input_embeddings": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseLayer.set_input_embeddings": {
  "lineno": 769,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseModel": {
  "lineno": 1130,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseModel.__init__": {
  "lineno": 1136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseModel.call": {
  "lineno": 1140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelClassificationHead": {
  "lineno": 995,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelClassificationHead.__init__": {
  "lineno": 996,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelClassificationHead.call": {
  "lineno": 1005,
  "symbols_in_volume": [
   "tensorflow.keras.activations.tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelDecoder": {
  "lineno": 696,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelDecoder.__init__": {
  "lineno": 697,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelDecoder.call": {
  "lineno": 705,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelDiscriminatorPredictions": {
  "lineno": 962,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelDiscriminatorPredictions.__init__": {
  "lineno": 965,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelDiscriminatorPredictions.call": {
  "lineno": 972,
  "symbols_in_volume": [
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelEmbeddings": {
  "lineno": 76,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelEmbeddings.__init__": {
  "lineno": 79,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelEmbeddings._embedding": {
  "lineno": 128,
  "symbols_in_volume": [
   "tensorflow.gather"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelEmbeddings._linear": {
  "lineno": 139,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelEmbeddings.build": {
  "lineno": 88,
  "symbols_in_volume": [
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelEmbeddings.call": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelEncoder": {
  "lineno": 610,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelEncoder.__init__": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelEncoder.call": {
  "lineno": 622,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForMaskedLM": {
  "lineno": 1235,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelForMaskedLM.__init__": {
  "lineno": 1237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForMaskedLM.call": {
  "lineno": 1243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForMultipleChoice": {
  "lineno": 1381,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelForMultipleChoice.__init__": {
  "lineno": 1387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForMultipleChoice.call": {
  "lineno": 1402,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForMultipleChoice.dummy_inputs": {
  "lineno": 1393,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForPreTraining": {
  "lineno": 1171,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelForPreTraining.__init__": {
  "lineno": 1177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForPreTraining.call": {
  "lineno": 1183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForPreTrainingOutput": {
  "lineno": 1021,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelForQuestionAnswering": {
  "lineno": 1575,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelForQuestionAnswering.__init__": {
  "lineno": 1581,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForQuestionAnswering.call": {
  "lineno": 1590,
  "symbols_in_volume": [
   "tensorflow.split",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForSequenceClassification": {
  "lineno": 1305,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelForSequenceClassification.__init__": {
  "lineno": 1311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForSequenceClassification.call": {
  "lineno": 1318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForTokenClassification": {
  "lineno": 1497,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelForTokenClassification.__init__": {
  "lineno": 1503,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForTokenClassification.call": {
  "lineno": 1513,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelLayer": {
  "lineno": 596,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelLayer.__init__": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelLayer.call": {
  "lineno": 602,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMainLayer": {
  "lineno": 842,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelMainLayer.__init__": {
  "lineno": 848,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMainLayer._prune_heads": {
  "lineno": 866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMainLayer.call": {
  "lineno": 869,
  "symbols_in_volume": [
   "tensorflow.fill"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMainLayer.get_input_embeddings": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMainLayer.set_input_embeddings": {
  "lineno": 862,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMaskedLMHead": {
  "lineno": 979,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelMaskedLMHead.__init__": {
  "lineno": 980,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMaskedLMHead.build": {
  "lineno": 985,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMaskedLMHead.call": {
  "lineno": 989,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelModel": {
  "lineno": 1151,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelModel.__init__": {
  "lineno": 1156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelModel.call": {
  "lineno": 1160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelPositionwiseFFN": {
  "lineno": 576,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelPositionwiseFFN.__init__": {
  "lineno": 577,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelPositionwiseFFN.call": {
  "lineno": 587,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelPreTrainedModel": {
  "lineno": 1012,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelRelMultiheadAttention": {
  "lineno": 413,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelRelMultiheadAttention.__init__": {
  "lineno": 414,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelRelMultiheadAttention.build": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelRelMultiheadAttention.call": {
  "lineno": 526,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.einsum",
   "tensorflow.float32",
   "tensorflow.nn.softmax",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelRelMultiheadAttention.relative_positional_attention": {
  "lineno": 459,
  "symbols_in_volume": [
   "tensorflow.einsum"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelRelMultiheadAttention.relative_token_type_attention": {
  "lineno": 501,
  "symbols_in_volume": [
   "tensorflow.broadcast_to",
   "tensorflow.einsum",
   "tensorflow.split",
   "tensorflow.where"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel._relative_shift_gather": {
  "lineno": 397,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_funnel.upsample": {
  "lineno": 677,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.pad",
   "tensorflow.repeat"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_gpt2.TFAttention": {
  "lineno": 63,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFAttention.__init__": {
  "lineno": 64,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention._attn": {
  "lineno": 95,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.float32",
   "tensorflow.math.sqrt",
   "tensorflow.matmul",
   "tensorflow.nn.softmax",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.call": {
  "lineno": 136,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.split",
   "tensorflow.stack",
   "tensorflow.unstack"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.causal_attention_mask": {
  "lineno": 85,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.merge_heads": {
  "lineno": 124,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.prune_heads": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.split_heads": {
  "lineno": 130,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFBlock": {
  "lineno": 180,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFBlock.__init__": {
  "lineno": 181,
  "symbols_in_volume": [
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFBlock.call": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModel": {
  "lineno": 668,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModel.__init__": {
  "lineno": 677,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModel.call": {
  "lineno": 688,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModel.get_output_embeddings": {
  "lineno": 685,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModelOutput": {
  "lineno": 415,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFGPT2LMHeadModel": {
  "lineno": 573,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFGPT2LMHeadModel.__init__": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2LMHeadModel.call": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2LMHeadModel.get_output_embeddings": {
  "lineno": 583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2LMHeadModel.prepare_inputs_for_generation": {
  "lineno": 586,
  "symbols_in_volume": [
   "tensorflow.expand_dims"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer": {
  "lineno": 206,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer.__init__": {
  "lineno": 210,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.Embedding",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer._prune_heads": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer.call": {
  "lineno": 247,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.float32",
   "tensorflow.int32",
   "tensorflow.newaxis",
   "tensorflow.range",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer.get_input_embeddings": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer.set_input_embeddings": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2Model": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFGPT2Model.__init__": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2Model.call": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2PreTrainedModel": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFMLP": {
  "lineno": 164,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFMLP.__init__": {
  "lineno": 165,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFMLP.call": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_longformer.TFLongformerAttention": {
  "lineno": 1101,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerAttention.__init__": {
  "lineno": 1102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerAttention.call": {
  "lineno": 1111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerAttention.prune_heads": {
  "lineno": 1108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings": {
  "lineno": 122,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings.__init__": {
  "lineno": 127,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.Embedding",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings._embedding": {
  "lineno": 218,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.fill",
   "tensorflow.gather",
   "tensorflow.int32",
   "tensorflow.newaxis",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings._linear": {
  "lineno": 253,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings.build": {
  "lineno": 152,
  "symbols_in_volume": [
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings.call": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings.create_position_ids_from_input_ids": {
  "lineno": 165,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.int32",
   "tensorflow.math.cumsum",
   "tensorflow.math.not_equal"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings.create_position_ids_from_inputs_embeds": {
  "lineno": 177,
  "symbols_in_volume": [
   "tensorflow.int32",
   "tensorflow.newaxis",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEncoder": {
  "lineno": 1161,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerEncoder.__init__": {
  "lineno": 1162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEncoder.call": {
  "lineno": 1171,
  "symbols_in_volume": [
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerForMaskedLM": {
  "lineno": 1616,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerForMaskedLM.__init__": {
  "lineno": 1624,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerForMaskedLM.call": {
  "lineno": 1633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerForMaskedLM.get_output_embeddings": {
  "lineno": 1630,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerForQuestionAnswering": {
  "lineno": 1700,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerForQuestionAnswering.__init__": {
  "lineno": 1709,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerForQuestionAnswering.call": {
  "lineno": 1720,
  "symbols_in_volume": [
   "tensorflow.split",
   "tensorflow.squeeze",
   "tensorflow.where"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerIntermediate": {
  "lineno": 269,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerIntermediate.__init__": {
  "lineno": 270,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "transformers.activations_tf.get_tf_activation"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerIntermediate.call": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerLMHead": {
  "lineno": 88,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerLMHead.__init__": {
  "lineno": 91,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.LayerNormalization",
   "transformers.activations_tf.get_tf_activation"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerLMHead.build": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerLMHead.call": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerLayer": {
  "lineno": 1131,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerLayer.__init__": {
  "lineno": 1132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerLayer.call": {
  "lineno": 1139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer": {
  "lineno": 1224,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer.__init__": {
  "lineno": 1228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer._merge_to_attention_mask": {
  "lineno": 1450,
  "symbols_in_volume": [
   "tensorflow.Tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer._pad_to_window_size": {
  "lineno": 1394,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.constant",
   "tensorflow.fill",
   "tensorflow.pad"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer._prune_heads": {
  "lineno": 1259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer.call": {
  "lineno": 1266,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.dtypes.float32",
   "tensorflow.fill",
   "tensorflow.math.abs",
   "tensorflow.math.greater",
   "tensorflow.math.less",
   "tensorflow.math.reduce_any",
   "tensorflow.newaxis"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer.get_input_embeddings": {
  "lineno": 1252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer.set_input_embeddings": {
  "lineno": 1255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerModel": {
  "lineno": 1582,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerModel.__init__": {
  "lineno": 1604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerModel.call": {
  "lineno": 1609,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerOutput": {
  "lineno": 290,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerOutput.__init__": {
  "lineno": 291,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerOutput.call": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerPooler": {
  "lineno": 309,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerPooler.__init__": {
  "lineno": 310,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerPooler.call": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerPreTrainedModel": {
  "lineno": 1465,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerPreTrainedModel.dummy_inputs": {
  "lineno": 1473,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention": {
  "lineno": 348,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention.__init__": {
  "lineno": 349,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._chunk": {
  "lineno": 836,
  "symbols_in_volume": [
   "tensorflow.debugging.assert_equal",
   "tensorflow.reshape",
   "tensorflow.signal.frame"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._compute_attn_output_with_global_indices": {
  "lineno": 946,
  "symbols_in_volume": [
   "tensorflow.einsum",
   "tensorflow.gather_nd",
   "tensorflow.scatter_nd"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._compute_global_attn_output_from_hidden": {
  "lineno": 987,
  "symbols_in_volume": [
   "tensorflow.broadcast_to",
   "tensorflow.constant",
   "tensorflow.debugging.assert_equal",
   "tensorflow.dtypes.float32",
   "tensorflow.gather_nd",
   "tensorflow.math.sqrt",
   "tensorflow.matmul",
   "tensorflow.nn.softmax",
   "tensorflow.ones",
   "tensorflow.reshape",
   "tensorflow.scatter_nd",
   "tensorflow.tensor_scatter_nd_update",
   "tensorflow.transpose",
   "tensorflow.where"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._concat_with_global_key_attn_probs": {
  "lineno": 893,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.einsum",
   "tensorflow.gather_nd",
   "tensorflow.ones",
   "tensorflow.scatter_nd",
   "tensorflow.tensor_scatter_nd_update",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._get_global_attn_indices": {
  "lineno": 863,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.dtypes.int32",
   "tensorflow.expand_dims",
   "tensorflow.math.logical_not",
   "tensorflow.range",
   "tensorflow.reduce_max",
   "tensorflow.reduce_sum",
   "tensorflow.where"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._get_global_attn_probs": {
  "lineno": 567,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.zeros_like"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._mask_invalid_locations": {
  "lineno": 688,
  "symbols_in_volume": [
   "tensorflow.broadcast_to",
   "tensorflow.constant",
   "tensorflow.dtypes.float32",
   "tensorflow.linalg.band_part",
   "tensorflow.math.greater",
   "tensorflow.ones",
   "tensorflow.ones_like",
   "tensorflow.pad",
   "tensorflow.reverse",
   "tensorflow.where"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._pad_and_diagonalize": {
  "lineno": 802,
  "symbols_in_volume": [
   "tensorflow.constant",
   "tensorflow.pad",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._pad_and_transpose_last_two_dims": {
  "lineno": 791,
  "symbols_in_volume": [
   "tensorflow.pad",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._sliding_chunks_matmul_attn_probs_value": {
  "lineno": 718,
  "symbols_in_volume": [
   "tensorflow.constant",
   "tensorflow.debugging.assert_equal",
   "tensorflow.dtypes.int32",
   "tensorflow.einsum",
   "tensorflow.pad",
   "tensorflow.reshape",
   "tensorflow.signal.frame",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._sliding_chunks_query_key_matmul": {
  "lineno": 579,
  "symbols_in_volume": [
   "tensorflow.broadcast_to",
   "tensorflow.concat",
   "tensorflow.constant",
   "tensorflow.debugging.assert_equal",
   "tensorflow.dtypes.int32",
   "tensorflow.einsum",
   "tensorflow.range",
   "tensorflow.reshape",
   "tensorflow.roll",
   "tensorflow.transpose",
   "tensorflow.where",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention.call": {
  "lineno": 407,
  "symbols_in_volume": [
   "tensorflow.broadcast_to",
   "tensorflow.cond",
   "tensorflow.constant",
   "tensorflow.debugging.assert_equal",
   "tensorflow.dtypes.float32",
   "tensorflow.float32",
   "tensorflow.math.sqrt",
   "tensorflow.nn.softmax",
   "tensorflow.ones",
   "tensorflow.reshape",
   "tensorflow.where"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention.reshape_and_transpose": {
  "lineno": 1091,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfOutput": {
  "lineno": 330,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfOutput.__init__": {
  "lineno": 331,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfOutput.call": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_longformer._compute_global_attention_mask": {
  "lineno": 56,
  "symbols_in_volume": [
   "tensorflow.broadcast_to",
   "tensorflow.cast",
   "tensorflow.dtypes.int32",
   "tensorflow.range",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "transformers.modeling_tf_lxmert.TFLxmertAttention": {
  "lineno": 287,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertAttention.__init__": {
  "lineno": 288,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertAttention.call": {
  "lineno": 323,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.float32",
   "tensorflow.math.sqrt",
   "tensorflow.matmul",
   "tensorflow.nn.softmax",
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertAttention.transpose_for_scores": {
  "lineno": 319,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertAttentionOutput": {
  "lineno": 399,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertAttentionOutput.__init__": {
  "lineno": 400,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertAttentionOutput.call": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertCrossAttentionLayer": {
  "lineno": 432,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertCrossAttentionLayer.__init__": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertCrossAttentionLayer.call": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEmbeddings": {
  "lineno": 186,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEmbeddings.__init__": {
  "lineno": 189,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.Embedding",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEmbeddings._embedding": {
  "lineno": 247,
  "symbols_in_volume": [
   "tensorflow.fill",
   "tensorflow.gather",
   "tensorflow.int32",
   "tensorflow.newaxis",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEmbeddings._linear": {
  "lineno": 271,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEmbeddings.build": {
  "lineno": 213,
  "symbols_in_volume": [
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEmbeddings.call": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEncoder": {
  "lineno": 575,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEncoder.__init__": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEncoder.call": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertForPreTraining": {
  "lineno": 1130,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertForPreTraining.__init__": {
  "lineno": 1132,
  "symbols_in_volume": [
   "tensorflow.keras.losses.Huber",
   "tensorflow.keras.losses.SparseCategoricalCrossentropy"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertForPreTraining.call": {
  "lineno": 1223,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.constant",
   "tensorflow.reduce_mean",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertForPreTraining.dummy_inputs": {
  "lineno": 1183,
  "symbols_in_volume": [
   "tensorflow.constant",
   "tensorflow.ones",
   "tensorflow.random.uniform"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertForPreTrainingOutput": {
  "lineno": 99,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertIntermediate": {
  "lineno": 361,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertIntermediate.__init__": {
  "lineno": 362,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertIntermediate.call": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertLMPredictionHead": {
  "lineno": 1021,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertLMPredictionHead.__init__": {
  "lineno": 1022,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertLMPredictionHead.build": {
  "lineno": 1031,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertLMPredictionHead.call": {
  "lineno": 1035,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertLayer": {
  "lineno": 454,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertLayer.__init__": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertLayer.call": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMLMHead": {
  "lineno": 1042,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMLMHead.__init__": {
  "lineno": 1043,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMLMHead.call": {
  "lineno": 1048,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer": {
  "lineno": 664,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer.__init__": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer._prune_heads": {
  "lineno": 711,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer._resize_token_embeddings": {
  "lineno": 708,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer.call": {
  "lineno": 714,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.fill",
   "tensorflow.float32",
   "tensorflow.newaxis"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer.dummy_inputs": {
  "lineno": 668,
  "symbols_in_volume": [
   "tensorflow.constant",
   "tensorflow.random.uniform"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer.get_input_embeddings": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer.set_input_embeddings": {
  "lineno": 704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertModel": {
  "lineno": 961,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertModel.__init__": {
  "lineno": 966,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertModel.call": {
  "lineno": 970,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertModelOutput": {
  "lineno": 50,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertOutput": {
  "lineno": 380,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertOutput.__init__": {
  "lineno": 381,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertOutput.call": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPooler": {
  "lineno": 982,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPooler.__init__": {
  "lineno": 983,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPooler.call": {
  "lineno": 992,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPreTrainedModel": {
  "lineno": 848,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPreTrainedModel.dummy_inputs": {
  "lineno": 856,
  "symbols_in_volume": [
   "tensorflow.Tensor",
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPreTrainingHeads": {
  "lineno": 1053,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPreTrainingHeads.__init__": {
  "lineno": 1054,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPreTrainingHeads.call": {
  "lineno": 1064,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPredictionHeadTransform": {
  "lineno": 1000,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPredictionHeadTransform.__init__": {
  "lineno": 1001,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPredictionHeadTransform.call": {
  "lineno": 1014,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertSelfAttentionLayer": {
  "lineno": 417,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertSelfAttentionLayer.__init__": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertSelfAttentionLayer.call": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualAnswerHead": {
  "lineno": 1070,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualAnswerHead.__init__": {
  "lineno": 1071,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualAnswerHead.call": {
  "lineno": 1087,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualFeatureEncoder": {
  "lineno": 149,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualFeatureEncoder.__init__": {
  "lineno": 150,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualFeatureEncoder.call": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualObjHead": {
  "lineno": 1096,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualObjHead.__init__": {
  "lineno": 1097,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualObjHead.call": {
  "lineno": 1122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertXLayer": {
  "lineno": 470,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertXLayer.__init__": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertXLayer.call": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertXLayer.cross_att": {
  "lineno": 485,
  "symbols_in_volume": [
   "tensorflow.identity"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertXLayer.output_fc": {
  "lineno": 532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertXLayer.self_att": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_mobilebert.TFBottleneck": {
  "lineno": 429,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFBottleneck.__init__": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFBottleneck.call": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFBottleneckLayer": {
  "lineno": 415,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFBottleneckLayer.__init__": {
  "lineno": 416,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFBottleneckLayer.call": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFFFNLayer": {
  "lineno": 479,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFFFNLayer.__init__": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFFFNLayer.call": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFFFNOutput": {
  "lineno": 465,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFFFNOutput.__init__": {
  "lineno": 466,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFFFNOutput.call": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFLayerNorm": {
  "lineno": 88,
  "symbols_in_volume": [
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFLayerNorm.__init__": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertAttention": {
  "lineno": 344,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertAttention.__init__": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertAttention.call": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertAttention.prune_heads": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEmbeddings": {
  "lineno": 109,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEmbeddings.__init__": {
  "lineno": 112,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.Embedding"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEmbeddings._embedding": {
  "lineno": 184,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.fill",
   "tensorflow.gather",
   "tensorflow.int32",
   "tensorflow.newaxis",
   "tensorflow.pad",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEmbeddings._linear": {
  "lineno": 231,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEmbeddings.build": {
  "lineno": 142,
  "symbols_in_volume": [
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEmbeddings.call": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEncoder": {
  "lineno": 553,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEncoder.__init__": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEncoder.call": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMaskedLM": {
  "lineno": 1020,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMaskedLM.__init__": {
  "lineno": 1025,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMaskedLM.call": {
  "lineno": 1034,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMaskedLM.get_output_embeddings": {
  "lineno": 1031,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMultipleChoice": {
  "lineno": 1340,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMultipleChoice.__init__": {
  "lineno": 1346,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMultipleChoice.call": {
  "lineno": 1364,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMultipleChoice.dummy_inputs": {
  "lineno": 1355,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForNextSentencePrediction": {
  "lineno": 1109,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForNextSentencePrediction.__init__": {
  "lineno": 1114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForNextSentencePrediction.call": {
  "lineno": 1120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForPreTraining": {
  "lineno": 968,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForPreTraining.__init__": {
  "lineno": 974,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForPreTraining.call": {
  "lineno": 983,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForPreTraining.get_output_embeddings": {
  "lineno": 980,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForPreTrainingOutput": {
  "lineno": 825,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForQuestionAnswering": {
  "lineno": 1241,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForQuestionAnswering.__init__": {
  "lineno": 1250,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForQuestionAnswering.call": {
  "lineno": 1259,
  "symbols_in_volume": [
   "tensorflow.split",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForSequenceClassification": {
  "lineno": 1157,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForSequenceClassification.__init__": {
  "lineno": 1163,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForSequenceClassification.call": {
  "lineno": 1173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForTokenClassification": {
  "lineno": 1466,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForTokenClassification.__init__": {
  "lineno": 1475,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForTokenClassification.call": {
  "lineno": 1485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertIntermediate": {
  "lineno": 70,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertIntermediate.__init__": {
  "lineno": 71,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertIntermediate.call": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertLMPredictionHead": {
  "lineno": 638,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertLMPredictionHead.__init__": {
  "lineno": 639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertLMPredictionHead.build": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertLMPredictionHead.call": {
  "lineno": 661,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.matmul",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertLayer": {
  "lineno": 491,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertLayer.__init__": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertLayer.call": {
  "lineno": 507,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMLMHead": {
  "lineno": 668,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMLMHead.__init__": {
  "lineno": 669,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMLMHead.call": {
  "lineno": 673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer": {
  "lineno": 678,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer.__init__": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer._prune_heads": {
  "lineno": 699,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer._resize_token_embeddings": {
  "lineno": 696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer.call": {
  "lineno": 706,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.fill",
   "tensorflow.float32",
   "tensorflow.newaxis"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer.get_input_embeddings": {
  "lineno": 693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertModel": {
  "lineno": 947,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertModel.__init__": {
  "lineno": 952,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertModel.call": {
  "lineno": 956,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertOnlyNSPHead": {
  "lineno": 1099,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertOnlyNSPHead.__init__": {
  "lineno": 1100,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertOnlyNSPHead.call": {
  "lineno": 1104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertOutput": {
  "lineno": 389,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertOutput.__init__": {
  "lineno": 390,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertOutput.call": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertPooler": {
  "lineno": 596,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertPooler.__init__": {
  "lineno": 597,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertPooler.call": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertPreTrainedModel": {
  "lineno": 816,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertPredictionHeadTransform": {
  "lineno": 619,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertPredictionHeadTransform.__init__": {
  "lineno": 620,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertPredictionHeadTransform.call": {
  "lineno": 631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertSelfAttention": {
  "lineno": 247,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertSelfAttention.__init__": {
  "lineno": 248,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertSelfAttention.call": {
  "lineno": 278,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.float32",
   "tensorflow.math.sqrt",
   "tensorflow.matmul",
   "tensorflow.nn.softmax",
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertSelfAttention.transpose_for_scores": {
  "lineno": 274,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertSelfOutput": {
  "lineno": 323,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertSelfOutput.__init__": {
  "lineno": 324,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertSelfOutput.call": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFNoNorm": {
  "lineno": 93,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFNoNorm.__init__": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFNoNorm.build": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFNoNorm.call": {
  "lineno": 102,
  "symbols_in_volume": [
   "tensorflow.Tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFOutputBottleneck": {
  "lineno": 373,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFOutputBottleneck.__init__": {
  "lineno": 374,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFOutputBottleneck.call": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_openai": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_openai.TFAttention": {
  "lineno": 59,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFAttention.__init__": {
  "lineno": 60,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention._attn": {
  "lineno": 93,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.float32",
   "tensorflow.math.sqrt",
   "tensorflow.matmul",
   "tensorflow.nn.softmax",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.call": {
  "lineno": 134,
  "symbols_in_volume": [
   "tensorflow.split"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.causal_attention_mask": {
  "lineno": 83,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.merge_heads": {
  "lineno": 122,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.prune_heads": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.split_heads": {
  "lineno": 128,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFBlock": {
  "lineno": 168,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFBlock.__init__": {
  "lineno": 169,
  "symbols_in_volume": [
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFBlock.call": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFMLP": {
  "lineno": 152,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFMLP.__init__": {
  "lineno": 153,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFMLP.call": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModel": {
  "lineno": 591,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModel.__init__": {
  "lineno": 600,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModel.call": {
  "lineno": 611,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModel.get_output_embeddings": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModelOutput": {
  "lineno": 367,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTLMHeadModel": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTLMHeadModel.__init__": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTLMHeadModel.call": {
  "lineno": 522,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTLMHeadModel.get_output_embeddings": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer": {
  "lineno": 189,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer.__init__": {
  "lineno": 193,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.Embedding"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer._prune_heads": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer.call": {
  "lineno": 227,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.float32",
   "tensorflow.int32",
   "tensorflow.newaxis",
   "tensorflow.range",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer.get_input_embeddings": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer.set_input_embeddings": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTModel": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTModel.__init__": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTModel.call": {
  "lineno": 497,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTPreTrainedModel": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_outputs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_outputs.TFBaseModelOutput": {
  "lineno": 9,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFBaseModelOutputWithPast": {
  "lineno": 71,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFBaseModelOutputWithPooling": {
  "lineno": 35,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFCausalLMOutput": {
  "lineno": 159,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFCausalLMOutputWithPast": {
  "lineno": 188,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFMaskedLMOutput": {
  "lineno": 224,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFMultipleChoiceModelOutput": {
  "lineno": 412,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFNextSentencePredictorOutput": {
  "lineno": 305,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFQuestionAnsweringModelOutput": {
  "lineno": 472,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFSeq2SeqLMOutput": {
  "lineno": 253,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFSeq2SeqModelOutput": {
  "lineno": 107,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFSeq2SeqQuestionAnsweringModelOutput": {
  "lineno": 504,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFSeq2SeqSequenceClassifierOutput": {
  "lineno": 360,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFSequenceClassifierOutput": {
  "lineno": 331,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFTokenClassifierOutput": {
  "lineno": 443,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_pytorch_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_pytorch_utils.convert_tf_weight_name_to_pt_weight_name": {
  "lineno": 30,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_pytorch_utils.load_pytorch_checkpoint_in_tf2_model": {
  "lineno": 74,
  "symbols_in_volume": [
   "os.path.abspath",
   "torch.load"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_pytorch_utils.load_pytorch_model_in_tf2_model": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_pytorch_utils.load_pytorch_weights_in_tf2_model": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.expand_dims",
   "numpy.squeeze",
   "numpy.transpose",
   "re.search",
   "tensorflow.python.keras.backend.batch_set_value"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_pytorch_utils.load_tf2_checkpoint_in_pytorch_model": {
  "lineno": 237,
  "symbols_in_volume": [
   "transformers"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_pytorch_utils.load_tf2_model_in_pytorch_model": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_pytorch_utils.load_tf2_weights_in_pytorch_model": {
  "lineno": 279,
  "symbols_in_volume": [
   "numpy.expand_dims",
   "numpy.squeeze",
   "numpy.transpose",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_roberta.TFRobertaAttention": {
  "lineno": 326,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaAttention.__init__": {
  "lineno": 327,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaAttention.call": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaAttention.prune_heads": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaClassificationHead": {
  "lineno": 834,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaClassificationHead.__init__": {
  "lineno": 837,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaClassificationHead.call": {
  "lineno": 850,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings": {
  "lineno": 67,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings.__init__": {
  "lineno": 72,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.Embedding",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings._embedding": {
  "lineno": 163,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.fill",
   "tensorflow.gather",
   "tensorflow.int32",
   "tensorflow.newaxis",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings._linear": {
  "lineno": 198,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings.build": {
  "lineno": 97,
  "symbols_in_volume": [
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings.call": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings.create_position_ids_from_input_ids": {
  "lineno": 110,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.int32",
   "tensorflow.math.cumsum",
   "tensorflow.math.not_equal"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings.create_position_ids_from_inputs_embeds": {
  "lineno": 122,
  "symbols_in_volume": [
   "tensorflow.int32",
   "tensorflow.newaxis",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEncoder": {
  "lineno": 408,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaEncoder.__init__": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEncoder.call": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMaskedLM": {
  "lineno": 752,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMaskedLM.__init__": {
  "lineno": 757,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMaskedLM.call": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMaskedLM.get_output_embeddings": {
  "lineno": 763,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMultipleChoice": {
  "lineno": 941,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMultipleChoice.__init__": {
  "lineno": 947,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMultipleChoice.call": {
  "lineno": 965,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMultipleChoice.dummy_inputs": {
  "lineno": 956,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForQuestionAnswering": {
  "lineno": 1147,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaForQuestionAnswering.__init__": {
  "lineno": 1155,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForQuestionAnswering.call": {
  "lineno": 1164,
  "symbols_in_volume": [
   "tensorflow.split",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForSequenceClassification": {
  "lineno": 859,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaForSequenceClassification.__init__": {
  "lineno": 868,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForSequenceClassification.call": {
  "lineno": 875,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForTokenClassification": {
  "lineno": 1062,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaForTokenClassification.__init__": {
  "lineno": 1071,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForTokenClassification.call": {
  "lineno": 1081,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaIntermediate": {
  "lineno": 347,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaIntermediate.__init__": {
  "lineno": 348,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaIntermediate.call": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaLMHead": {
  "lineno": 719,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaLMHead.__init__": {
  "lineno": 722,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaLMHead.build": {
  "lineno": 736,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaLMHead.call": {
  "lineno": 741,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaLayer": {
  "lineno": 387,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaLayer.__init__": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaLayer.call": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer": {
  "lineno": 451,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer.__init__": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer._prune_heads": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer.call": {
  "lineno": 486,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.fill",
   "tensorflow.newaxis"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer.get_input_embeddings": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer.set_input_embeddings": {
  "lineno": 473,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaModel": {
  "lineno": 698,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaModel.__init__": {
  "lineno": 703,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaModel.call": {
  "lineno": 707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaOutput": {
  "lineno": 368,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaOutput.__init__": {
  "lineno": 369,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaOutput.call": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaPooler": {
  "lineno": 214,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaPooler.__init__": {
  "lineno": 215,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaPooler.call": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaPreTrainedModel": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaSelfAttention": {
  "lineno": 235,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaSelfAttention.__init__": {
  "lineno": 236,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaSelfAttention.call": {
  "lineno": 265,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.math.sqrt",
   "tensorflow.matmul",
   "tensorflow.nn.softmax",
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaSelfAttention.transpose_for_scores": {
  "lineno": 260,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaSelfOutput": {
  "lineno": 307,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaSelfOutput.__init__": {
  "lineno": 308,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaSelfOutput.call": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_t5.TFT5Attention": {
  "lineno": 117,
  "symbols_in_volume": [
   "itertools.count",
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5Attention.__init__": {
  "lineno": 120,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.Embedding"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Attention._relative_position_bucket": {
  "lineno": 152,
  "symbols_in_volume": [
   "math.log",
   "tensorflow.dtypes.cast",
   "tensorflow.float32",
   "tensorflow.int32",
   "tensorflow.math.abs",
   "tensorflow.math.less",
   "tensorflow.math.log",
   "tensorflow.math.maximum",
   "tensorflow.math.minimum",
   "tensorflow.where"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Attention.call": {
  "lineno": 212,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.einsum",
   "tensorflow.matmul",
   "tensorflow.nn.softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Attention.call.shape": {
  "lineno": 250,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Attention.call.unshape": {
  "lineno": 254,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Attention.compute_bias": {
  "lineno": 198,
  "symbols_in_volume": [
   "tensorflow.expand_dims",
   "tensorflow.range",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Attention.prune_heads": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Block": {
  "lineno": 401,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5Block.__init__": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Block.call": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5DenseReluDense": {
  "lineno": 87,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5DenseReluDense.__init__": {
  "lineno": 88,
  "symbols_in_volume": [
   "tensorflow.keras.activations.relu",
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5DenseReluDense.call": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration": {
  "lineno": 1181,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.__init__": {
  "lineno": 1183,
  "symbols_in_volume": [
   "copy.deepcopy",
   "tensorflow.compat.v1.variable_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration._reorder_cache": {
  "lineno": 1434,
  "symbols_in_volume": [
   "tensorflow.gather"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.call": {
  "lineno": 1224,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.get_decoder": {
  "lineno": 1221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.get_encoder": {
  "lineno": 1218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.get_input_embeddings": {
  "lineno": 1203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.get_output_embeddings": {
  "lineno": 1206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.prepare_inputs_for_generation": {
  "lineno": 1416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.set_input_embeddings": {
  "lineno": 1209,
  "symbols_in_volume": [
   "tensorflow.compat.v1.variable_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerCrossAttention": {
  "lineno": 358,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5LayerCrossAttention.__init__": {
  "lineno": 359,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerCrossAttention.call": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerFF": {
  "lineno": 103,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5LayerFF.__init__": {
  "lineno": 104,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerFF.call": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerNorm": {
  "lineno": 68,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5LayerNorm.__init__": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerNorm.build": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerNorm.call": {
  "lineno": 81,
  "symbols_in_volume": [
   "tensorflow.math.reduce_mean",
   "tensorflow.math.rsqrt",
   "tensorflow.math.square"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerSelfAttention": {
  "lineno": 319,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5LayerSelfAttention.__init__": {
  "lineno": 320,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerSelfAttention.call": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer": {
  "lineno": 539,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer.__init__": {
  "lineno": 543,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer._prune_heads": {
  "lineno": 578,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer._resize_token_embeddings": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer.call": {
  "lineno": 581,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.fill",
   "tensorflow.float32",
   "tensorflow.less_equal",
   "tensorflow.range",
   "tensorflow.reshape",
   "tensorflow.tile",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer.get_input_embeddings": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer.get_output_embeddings": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer.set_embed_tokens": {
  "lineno": 572,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Model": {
  "lineno": 969,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5Model.__init__": {
  "lineno": 974,
  "symbols_in_volume": [
   "copy.deepcopy",
   "tensorflow.compat.v1.variable_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Model.call": {
  "lineno": 1014,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Model.get_decoder": {
  "lineno": 1011,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Model.get_encoder": {
  "lineno": 1008,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Model.get_input_embeddings": {
  "lineno": 992,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Model.get_output_embeddings": {
  "lineno": 995,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Model.set_input_embeddings": {
  "lineno": 998,
  "symbols_in_volume": [
   "tensorflow.compat.v1.variable_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5PreTrainedModel": {
  "lineno": 800,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5PreTrainedModel._shift_right": {
  "lineno": 819,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.concat",
   "tensorflow.control_dependencies",
   "tensorflow.debugging.assert_greater_equal",
   "tensorflow.fill",
   "tensorflow.identity",
   "tensorflow.int32",
   "tensorflow.roll",
   "tensorflow.where"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5PreTrainedModel.dummy_inputs": {
  "lineno": 808,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5._NoLayerEmbedTokens": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_t5._NoLayerEmbedTokens.__call__": {
  "lineno": 525,
  "symbols_in_volume": [
   "tensorflow.compat.v1.variable_scope",
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_t5._NoLayerEmbedTokens.__init__": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_t5._NoLayerEmbedTokens.call": {
  "lineno": 516,
  "symbols_in_volume": [
   "tensorflow.compat.v1.variable_scope",
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding": {
  "lineno": 304,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding.__init__": {
  "lineno": 305,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Embedding"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding.build": {
  "lineno": 337,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding.call": {
  "lineno": 350,
  "symbols_in_volume": [
   "tensorflow.boolean_mask",
   "tensorflow.cast",
   "tensorflow.einsum",
   "tensorflow.int64",
   "tensorflow.reshape",
   "tensorflow.scatter_nd",
   "tensorflow.where",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionalEmbedding": {
  "lineno": 43,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionalEmbedding.__init__": {
  "lineno": 44,
  "symbols_in_volume": [
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionalEmbedding.call": {
  "lineno": 49,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.cos",
   "tensorflow.einsum",
   "tensorflow.sin",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionwiseFF": {
  "lineno": 59,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionwiseFF.__init__": {
  "lineno": 60,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization",
   "tensorflow.nn.relu"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionwiseFF.call": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableDecoderLayer": {
  "lineno": 252,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableDecoderLayer.__init__": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableDecoderLayer.call": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn": {
  "lineno": 102,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn.__init__": {
  "lineno": 103,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn._rel_shift": {
  "lineno": 163,
  "symbols_in_volume": [
   "tensorflow.pad",
   "tensorflow.reshape",
   "tensorflow.slice"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn.build": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn.call": {
  "lineno": 173,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.einsum",
   "tensorflow.nn.softmax",
   "tensorflow.reshape",
   "tensorflow.split"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel": {
  "lineno": 835,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.__init__": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.call": {
  "lineno": 872,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.get_output_embeddings": {
  "lineno": 853,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.init_mems": {
  "lineno": 869,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.prepare_inputs_for_generation": {
  "lineno": 946,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.reset_length": {
  "lineno": 859,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.reset_memory_length": {
  "lineno": 866,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModelOutput": {
  "lineno": 689,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMHead": {
  "lineno": 816,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMHead.__init__": {
  "lineno": 817,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMHead.build": {
  "lineno": 825,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMHead.call": {
  "lineno": 829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer": {
  "lineno": 376,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.__init__": {
  "lineno": 380,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer._prune_heads": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer._resize_token_embeddings": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer._update_mems": {
  "lineno": 480,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.stop_gradient"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.backward_compatible": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.build": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.call": {
  "lineno": 500,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.linalg.band_part",
   "tensorflow.minimum",
   "tensorflow.ones",
   "tensorflow.range",
   "tensorflow.transpose",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.get_input_embeddings": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.init_mems": {
  "lineno": 469,
  "symbols_in_volume": [
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.reset_memory_length": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.set_input_embeddings": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLModel": {
  "lineno": 795,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLModel.__init__": {
  "lineno": 800,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLModel.call": {
  "lineno": 804,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLModelOutput": {
  "lineno": 658,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLPreTrainedModel": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl_utilities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask": {
  "lineno": 25,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask.__init__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask._gather_logprob": {
  "lineno": 116,
  "symbols_in_volume": [
   "tensorflow.gather_nd",
   "tensorflow.range",
   "tensorflow.stack"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask._logit": {
  "lineno": 109,
  "symbols_in_volume": [
   "tensorflow.einsum"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask.build": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask.call": {
  "lineno": 123,
  "symbols_in_volume": [
   "tensorflow.boolean_mask",
   "tensorflow.cast",
   "tensorflow.concat",
   "tensorflow.float32",
   "tensorflow.int64",
   "tensorflow.nn.log_softmax",
   "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
   "tensorflow.reduce_mean",
   "tensorflow.scatter_nd",
   "tensorflow.where",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_utils.TFCausalLanguageModelingLoss": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFCausalLanguageModelingLoss.compute_loss": {
  "lineno": 135,
  "symbols_in_volume": [
   "tensorflow.boolean_mask",
   "tensorflow.keras.losses.Reduction.NONE",
   "tensorflow.keras.losses.SparseCategoricalCrossentropy",
   "tensorflow.not_equal",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFConv1D": {
  "lineno": 673,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFConv1D.__init__": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFConv1D.build": {
  "lineno": 696,
  "symbols_in_volume": [
   "tensorflow.zeros_initializer"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFConv1D.call": {
  "lineno": 702,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFMaskedLanguageModelingLoss": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFModelUtilsMixin": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFModelUtilsMixin.num_parameters": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.prod"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFMultipleChoiceLoss": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel": {
  "lineno": 219,
  "symbols_in_volume": [
   "tensorflow.keras.Model"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.__init__": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel._get_resized_embeddings": {
  "lineno": 341,
  "symbols_in_volume": [
   "tensorflow.Variable",
   "tensorflow.float32"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel._get_word_embeddings": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel._resize_token_embeddings": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.dummy_inputs": {
  "lineno": 239,
  "symbols_in_volume": [
   "tensorflow.Tensor",
   "tensorflow.constant",
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.from_pretrained": {
  "lineno": 419,
  "symbols_in_volume": [
   "h5py.File",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join",
   "re.search",
   "tensorflow.python.keras.saving.hdf5_format.load_attributes_from_hdf5_group"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.get_input_embeddings": {
  "lineno": 262,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.get_output_embeddings": {
  "lineno": 289,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.prune_heads": {
  "lineno": 385,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.resize_token_embeddings": {
  "lineno": 298,
  "symbols_in_volume": [
   "tensorflow.Variable"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.save_pretrained": {
  "lineno": 397,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.set_input_embeddings": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFQuestionAnsweringLoss": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFQuestionAnsweringLoss.compute_loss": {
  "lineno": 152,
  "symbols_in_volume": [
   "tensorflow.keras.losses.Reduction.NONE",
   "tensorflow.keras.losses.SparseCategoricalCrossentropy"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSequenceClassificationLoss": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFSequenceClassificationLoss.compute_loss": {
  "lineno": 194,
  "symbols_in_volume": [
   "tensorflow.keras.losses.MeanSquaredError",
   "tensorflow.keras.losses.Reduction.NONE",
   "tensorflow.keras.losses.SparseCategoricalCrossentropy"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSequenceSummary": {
  "lineno": 812,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFSequenceSummary.__init__": {
  "lineno": 844,
  "symbols_in_volume": [
   "tensorflow.keras.activations.tanh",
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSequenceSummary.call": {
  "lineno": 876,
  "symbols_in_volume": [
   "tensorflow.fill",
   "tensorflow.gather",
   "tensorflow.newaxis",
   "tensorflow.reduce_mean",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSharedEmbeddings": {
  "lineno": 713,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFSharedEmbeddings.__init__": {
  "lineno": 732,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSharedEmbeddings._embedding": {
  "lineno": 791,
  "symbols_in_volume": [
   "tensorflow.gather"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSharedEmbeddings._linear": {
  "lineno": 795,
  "symbols_in_volume": [
   "tensorflow.matmul",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSharedEmbeddings.build": {
  "lineno": 738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSharedEmbeddings.call": {
  "lineno": 758,
  "symbols_in_volume": [
   "tensorflow.Tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSharedEmbeddings.get_config": {
  "lineno": 748,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFTokenClassificationLoss": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFTokenClassificationLoss.compute_loss": {
  "lineno": 172,
  "symbols_in_volume": [
   "tensorflow.boolean_mask",
   "tensorflow.keras.losses.Reduction.NONE",
   "tensorflow.keras.losses.SparseCategoricalCrossentropy",
   "tensorflow.math.reduce_any",
   "tensorflow.reshape",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.cast_bool_to_primitive": {
  "lineno": 956,
  "symbols_in_volume": [
   "tensorflow.Tensor",
   "tensorflow.is_tensor",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.get_initializer": {
  "lineno": 943,
  "symbols_in_volume": [
   "tensorflow.initializers.TruncatedNormal",
   "tensorflow.keras.initializers.TruncatedNormal"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.keras_serializable": {
  "lineno": 60,
  "symbols_in_volume": [
   "tensorflow.keras.utils",
   "tensorflow.keras.utils.register_keras_serializable"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.keras_serializable.get_config": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_utils.keras_serializable.wrapped_init": {
  "lineno": 87,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_utils.shape_list": {
  "lineno": 928,
  "symbols_in_volume": [
   "tensorflow.Tensor",
   "tensorflow.shape",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_xlm.TFXLMForMultipleChoice": {
  "lineno": 884,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMForMultipleChoice.__init__": {
  "lineno": 890,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForMultipleChoice.call": {
  "lineno": 911,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForMultipleChoice.dummy_inputs": {
  "lineno": 899,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForQuestionAnsweringSimple": {
  "lineno": 1123,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMForQuestionAnsweringSimple.__init__": {
  "lineno": 1129,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForQuestionAnsweringSimple.call": {
  "lineno": 1136,
  "symbols_in_volume": [
   "tensorflow.split",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForSequenceClassification": {
  "lineno": 799,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMForSequenceClassification.__init__": {
  "lineno": 805,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForSequenceClassification.call": {
  "lineno": 812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForTokenClassification": {
  "lineno": 1035,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMForTokenClassification.__init__": {
  "lineno": 1041,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForTokenClassification.call": {
  "lineno": 1051,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer": {
  "lineno": 227,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer.__init__": {
  "lineno": 231,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.Embedding",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer._prune_heads": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer._resize_token_embeddings": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer.call": {
  "lineno": 345,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.convert_to_tensor",
   "tensorflow.debugging.assert_equal",
   "tensorflow.expand_dims",
   "tensorflow.int32",
   "tensorflow.newaxis",
   "tensorflow.not_equal",
   "tensorflow.range",
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer.get_input_embeddings": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer.set_input_embeddings": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMModel": {
  "lineno": 690,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMModel.__init__": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMModel.call": {
  "lineno": 699,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMultiHeadAttention": {
  "lineno": 116,
  "symbols_in_volume": [
   "itertools.count",
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMMultiHeadAttention.__init__": {
  "lineno": 119,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMultiHeadAttention.call": {
  "lineno": 137,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.concat",
   "tensorflow.float32",
   "tensorflow.int32",
   "tensorflow.math.divide",
   "tensorflow.math.rsqrt",
   "tensorflow.matmul",
   "tensorflow.multiply",
   "tensorflow.nn.softmax",
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMultiHeadAttention.call.shape": {
  "lineno": 155,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMultiHeadAttention.call.unshape": {
  "lineno": 159,
  "symbols_in_volume": [
   "tensorflow.reshape",
   "tensorflow.transpose"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMultiHeadAttention.prune_heads": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMPreTrainedModel": {
  "lineno": 532,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMPreTrainedModel.dummy_inputs": {
  "lineno": 540,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMPredLayer": {
  "lineno": 711,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMPredLayer.__init__": {
  "lineno": 716,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMPredLayer.build": {
  "lineno": 735,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMPredLayer.call": {
  "lineno": 741,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMTransformerFFN": {
  "lineno": 209,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMTransformerFFN.__init__": {
  "lineno": 210,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMTransformerFFN.call": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModel": {
  "lineno": 748,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModel.__init__": {
  "lineno": 754,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModel.call": {
  "lineno": 776,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModel.get_output_embeddings": {
  "lineno": 759,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModel.prepare_inputs_for_generation": {
  "lineno": 762,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.int32",
   "tensorflow.ones",
   "tensorflow.ones_like"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModelOutput": {
  "lineno": 553,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlm.create_sinusoidal_embeddings": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cos",
   "numpy.power",
   "numpy.sin",
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm.get_masks": {
  "lineno": 85,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.debugging.assert_equal",
   "tensorflow.float32",
   "tensorflow.less_equal",
   "tensorflow.math.less",
   "tensorflow.newaxis",
   "tensorflow.range",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlm_roberta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_xlm_roberta.TFXLMRobertaForMaskedLM": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlm_roberta.TFXLMRobertaForMultipleChoice": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlm_roberta.TFXLMRobertaForQuestionAnswering": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlm_roberta.TFXLMRobertaForSequenceClassification": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlm_roberta.TFXLMRobertaForTokenClassification": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlm_roberta.TFXLMRobertaModel": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_tf_xlnet.TFXLNetFeedForward": {
  "lineno": 327,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetFeedForward.__init__": {
  "lineno": 328,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense",
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetFeedForward.call": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForMultipleChoice": {
  "lineno": 1389,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForMultipleChoice.__init__": {
  "lineno": 1395,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForMultipleChoice.call": {
  "lineno": 1415,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForMultipleChoice.dummy_inputs": {
  "lineno": 1406,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForMultipleChoiceOutput": {
  "lineno": 937,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForQuestionAnsweringSimple": {
  "lineno": 1620,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForQuestionAnsweringSimple.__init__": {
  "lineno": 1626,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForQuestionAnsweringSimple.call": {
  "lineno": 1633,
  "symbols_in_volume": [
   "tensorflow.split",
   "tensorflow.squeeze"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForQuestionAnsweringSimpleOutput": {
  "lineno": 973,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForSequenceClassification": {
  "lineno": 1296,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForSequenceClassification.__init__": {
  "lineno": 1302,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForSequenceClassification.call": {
  "lineno": 1314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForSequenceClassificationOutput": {
  "lineno": 869,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForTokenClassification": {
  "lineno": 1533,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForTokenClassification.__init__": {
  "lineno": 1539,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dense"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForTokenClassification.call": {
  "lineno": 1548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForTokenClassificationOutput": {
  "lineno": 903,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHead": {
  "lineno": 398,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHead.__init__": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHead.build": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHead.call": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModel": {
  "lineno": 1145,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModel.__init__": {
  "lineno": 1151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModel.call": {
  "lineno": 1199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModel.get_output_embeddings": {
  "lineno": 1156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModel.prepare_inputs_for_generation": {
  "lineno": 1159,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.float32",
   "tensorflow.int32",
   "tensorflow.ones",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModelOutput": {
  "lineno": 832,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLayer": {
  "lineno": 354,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLayer.__init__": {
  "lineno": 355,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLayer.call": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer": {
  "lineno": 416,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.__init__": {
  "lineno": 420,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer._prune_heads": {
  "lineno": 459,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer._resize_token_embeddings": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.build": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.cache_mem": {
  "lineno": 491,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.stop_gradient"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.call": {
  "lineno": 561,
  "symbols_in_volume": [
   "tensorflow.bfloat16",
   "tensorflow.cast",
   "tensorflow.concat",
   "tensorflow.equal",
   "tensorflow.eye",
   "tensorflow.float32",
   "tensorflow.int32",
   "tensorflow.logical_not",
   "tensorflow.one_hot",
   "tensorflow.tile",
   "tensorflow.transpose",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.create_mask": {
  "lineno": 462,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.float32",
   "tensorflow.matrix_band_part",
   "tensorflow.ones",
   "tensorflow.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.get_input_embeddings": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.positional_embedding": {
  "lineno": 503,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.cos",
   "tensorflow.einsum",
   "tensorflow.sin",
   "tensorflow.tile"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.relative_positional_encoding": {
  "lineno": 514,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.clip_by_value",
   "tensorflow.concat",
   "tensorflow.float32",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.set_input_embeddings": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetModel": {
  "lineno": 1124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetModel.__init__": {
  "lineno": 1129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetModel.call": {
  "lineno": 1133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetModelOutput": {
  "lineno": 798,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "tensorflow.Tensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetPreTrainedModel": {
  "lineno": 789,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention": {
  "lineno": 64,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Layer"
  ],
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.__init__": {
  "lineno": 65,
  "symbols_in_volume": [
   "tensorflow.keras.layers.Dropout",
   "tensorflow.keras.layers.LayerNormalization"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.build": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.call": {
  "lineno": 187,
  "symbols_in_volume": [
   "tensorflow.concat",
   "tensorflow.einsum"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.post_attention": {
  "lineno": 174,
  "symbols_in_volume": [
   "tensorflow.einsum"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.prune_heads": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.rel_attn_core": {
  "lineno": 130,
  "symbols_in_volume": [
   "tensorflow.einsum",
   "tensorflow.float16",
   "tensorflow.nn.softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.rel_shift": {
  "lineno": 118,
  "symbols_in_volume": [
   "tensorflow.reshape"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_transfo_xl.AdaptiveEmbedding": {
  "lineno": 398,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_transfo_xl.AdaptiveEmbedding.__init__": {
  "lineno": 399,
  "symbols_in_volume": [
   "torch.FloatTensor",
   "torch.nn.Embedding",
   "torch.nn.ModuleList",
   "torch.nn.Parameter",
   "torch.nn.ParameterList"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.AdaptiveEmbedding.forward": {
  "lineno": 426,
  "symbols_in_volume": [
   "torch.nn.functional.linear",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.PositionalEmbedding": {
  "lineno": 172,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_transfo_xl.PositionalEmbedding.__init__": {
  "lineno": 173,
  "symbols_in_volume": [
   "torch.arange"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.PositionalEmbedding.forward": {
  "lineno": 181,
  "symbols_in_volume": [
   "torch.cat",
   "torch.ger"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.PositionwiseFF": {
  "lineno": 191,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_transfo_xl.PositionwiseFF.__init__": {
  "lineno": 192,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear",
   "torch.nn.ReLU",
   "torch.nn.Sequential"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.PositionwiseFF.forward": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableDecoderLayer": {
  "lineno": 370,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableDecoderLayer.__init__": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableDecoderLayer.forward": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn": {
  "lineno": 228,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn.__init__": {
  "lineno": 229,
  "symbols_in_volume": [
   "torch.FloatTensor",
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear",
   "torch.nn.Parameter"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn._rel_shift": {
  "lineno": 269,
  "symbols_in_volume": [
   "torch.cat",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn.forward": {
  "lineno": 281,
  "symbols_in_volume": [
   "torch.cat",
   "torch.chunk",
   "torch.einsum",
   "torch.float16",
   "torch.nn.functional.softmax",
   "torch.sum"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel": {
  "lineno": 960,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.__init__": {
  "lineno": 966,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel._resize_cutoffs": {
  "lineno": 1097,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.forward": {
  "lineno": 1015,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.get_output_embeddings": {
  "lineno": 1078,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.init_mems": {
  "lineno": 1012,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.prepare_inputs_for_generation": {
  "lineno": 1085,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.reset_length": {
  "lineno": 1002,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.reset_memory_length": {
  "lineno": 1009,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.tie_weights": {
  "lineno": 981,
  "symbols_in_volume": [
   "torch.nn.Parameter"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModelOutput": {
  "lineno": 627,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModelOutput.logits": {
  "lineno": 660,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel": {
  "lineno": 722,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.__init__": {
  "lineno": 727,
  "symbols_in_volume": [
   "torch.FloatTensor",
   "torch.nn.Dropout",
   "torch.nn.ModuleList",
   "torch.nn.Parameter"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel._prune_heads": {
  "lineno": 793,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel._update_mems": {
  "lineno": 809,
  "symbols_in_volume": [
   "torch.cat",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.backward_compatible": {
  "lineno": 787,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.forward": {
  "lineno": 829,
  "symbols_in_volume": [
   "torch.arange",
   "torch.tril",
   "torch.triu",
   "torch.uint8"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.get_input_embeddings": {
  "lineno": 781,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.init_mems": {
  "lineno": 797,
  "symbols_in_volume": [
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.reset_memory_length": {
  "lineno": 790,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.set_input_embeddings": {
  "lineno": 784,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModelOutput": {
  "lineno": 596,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._get_embedding_shapes": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._get_new_num_tokens_layer": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._init_bias": {
  "lineno": 473,
  "symbols_in_volume": [
   "torch.nn.init.constant_"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._init_weight": {
  "lineno": 467,
  "symbols_in_volume": [
   "torch.nn.init.normal_",
   "torch.nn.init.uniform_"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._init_weights": {
  "lineno": 476,
  "symbols_in_volume": [
   "torch.nn.init.normal_"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._resize_cutoffs": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._resize_token_embeddings": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel.resize_token_embeddings": {
  "lineno": 516,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.build_tf_to_pytorch_map": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_transfo_xl.load_tf_weights_in_transfo_xl": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.transpose",
   "tensorflow.train.list_variables",
   "tensorflow.train.load_variable",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax": {
  "lineno": 30,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax.__init__": {
  "lineno": 31,
  "symbols_in_volume": [
   "torch.FloatTensor",
   "torch.nn.Linear",
   "torch.nn.ModuleList",
   "torch.nn.Parameter",
   "torch.nn.ParameterList",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax._compute_logit": {
  "lineno": 72,
  "symbols_in_volume": [
   "torch.nn.functional.linear"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax.forward": {
  "lineno": 86,
  "symbols_in_volume": [
   "torch.cat",
   "torch.nn.functional.log_softmax",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax.log_prob": {
  "lineno": 193,
  "symbols_in_volume": [
   "torch.cat",
   "torch.nn.functional.log_softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_utils.Conv1D": {
  "lineno": 1073,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_utils.Conv1D.__init__": {
  "lineno": 1084,
  "symbols_in_volume": [
   "torch.empty",
   "torch.nn.Parameter",
   "torch.nn.init.normal_",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.Conv1D.forward": {
  "lineno": 1092,
  "symbols_in_volume": [
   "torch.addmm"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.Identity": {
  "lineno": 53,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_utils.Identity.__init__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_utils.Identity.forward": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_utils.ModuleUtilsMixin._convert_head_mask_to_5d": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin._hook_rss_memory_post_forward": {
  "lineno": 106,
  "symbols_in_volume": [
   "os.getpid",
   "psutil.Process"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin._hook_rss_memory_pre_forward": {
  "lineno": 94,
  "symbols_in_volume": [
   "os.getpid",
   "psutil.Process"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.add_memory_hooks": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.device": {
  "lineno": 142,
  "symbols_in_volume": [
   "torch.device"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.device.find_tensor_attributes": {
  "lineno": 153,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.is_tensor",
   "torch.nn.Module",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.dtype": {
  "lineno": 161,
  "symbols_in_volume": [
   "torch.dtype"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.dtype.find_tensor_attributes": {
  "lineno": 171,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.is_tensor",
   "torch.nn.Module",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.estimate_tokens": {
  "lineno": 322,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Dict",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.floating_point_ops": {
  "lineno": 341,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.get_extended_attention_mask": {
  "lineno": 213,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.arange",
   "torch.device",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.get_head_mask": {
  "lineno": 261,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.invert_attention_mask": {
  "lineno": 179,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.float16",
   "torch.float32"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.num_parameters": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.num_parameters.parameter_filter": {
  "lineno": 314,
  "symbols_in_volume": [
   "torch.nn.Embedding"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.reset_memory_hooks_state": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_utils.PoolerAnswerClass": {
  "lineno": 1204,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_utils.PoolerAnswerClass.__init__": {
  "lineno": 1213,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.Tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PoolerAnswerClass.forward": {
  "lineno": 1219,
  "symbols_in_volume": [
   "torch.FloatTensor",
   "torch.LongTensor",
   "torch.cat",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PoolerEndLogits": {
  "lineno": 1137,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_utils.PoolerEndLogits.__init__": {
  "lineno": 1147,
  "symbols_in_volume": [
   "torch.nn.LayerNorm",
   "torch.nn.Linear",
   "torch.nn.Tanh"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PoolerEndLogits.forward": {
  "lineno": 1154,
  "symbols_in_volume": [
   "torch.FloatTensor",
   "torch.LongTensor",
   "torch.cat",
   "torch.float16",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PoolerStartLogits": {
  "lineno": 1099,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_utils.PoolerStartLogits.__init__": {
  "lineno": 1108,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PoolerStartLogits.forward": {
  "lineno": 1112,
  "symbols_in_volume": [
   "torch.FloatTensor",
   "torch.float16",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel": {
  "lineno": 368,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_utils.PreTrainedModel.__init__": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel._get_resized_embeddings": {
  "lineno": 604,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel._resize_token_embeddings": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel._tie_encoder_decoder_weights": {
  "lineno": 480,
  "symbols_in_volume": [
   "torch.nn.Module",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel._tie_encoder_decoder_weights.tie_encoder_to_decoder_recursively": {
  "lineno": 485,
  "symbols_in_volume": [
   "torch.nn.Module",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel._tie_or_clone_weights": {
  "lineno": 548,
  "symbols_in_volume": [
   "torch.nn.Parameter",
   "torch.nn.functional.pad"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.base_model": {
  "lineno": 424,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.dummy_inputs": {
  "lineno": 404,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.tensor",
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.from_pretrained": {
  "lineno": 719,
  "symbols_in_volume": [
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join",
   "re.search",
   "torch.load",
   "torch_xla.core.xla_model.send_cpu_data_to_device",
   "torch_xla.core.xla_model.xla_device"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.from_pretrained.load": {
  "lineno": 978,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.get_input_embeddings": {
  "lineno": 431,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.get_output_embeddings": {
  "lineno": 457,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.init_weights": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.prune_heads": {
  "lineno": 659,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.resize_token_embeddings": {
  "lineno": 568,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.save_pretrained": {
  "lineno": 676,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.isfile",
   "os.path.join",
   "torch.save",
   "torch_xla.core.xla_model.is_master_ordinal",
   "torch_xla.core.xla_model.save"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.set_input_embeddings": {
  "lineno": 444,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.tie_weights": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_utils.SQuADHead": {
  "lineno": 1296,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_utils.SQuADHead.__init__": {
  "lineno": 1306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_utils.SQuADHead.forward": {
  "lineno": 1315,
  "symbols_in_volume": [
   "torch.FloatTensor",
   "torch.LongTensor",
   "torch.einsum",
   "torch.gather",
   "torch.nn.BCEWithLogitsLoss",
   "torch.nn.CrossEntropyLoss",
   "torch.nn.functional.softmax",
   "torch.topk",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.SequenceSummary": {
  "lineno": 1413,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_utils.SequenceSummary.__init__": {
  "lineno": 1441,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Identity",
   "torch.nn.Linear",
   "typing.Callable"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.SequenceSummary.forward": {
  "lineno": 1470,
  "symbols_in_volume": [
   "torch.FloatTensor",
   "torch.LongTensor",
   "torch.full_like",
   "torch.long",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.SquadHeadOutput": {
  "lineno": 1267,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "torch.LongTensor",
   "typing.Optional"
  ],
  "type": "class"
 },
 "transformers.modeling_utils.apply_chunking_to_forward": {
  "lineno": 1607,
  "symbols_in_volume": [
   "inspect.signature",
   "torch.Tensor",
   "torch.cat",
   "typing.Callable"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.find_pruneable_heads_and_indices": {
  "lineno": 63,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.arange",
   "torch.ones",
   "typing.List",
   "typing.Set",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.prune_conv1d_layer": {
  "lineno": 1549,
  "symbols_in_volume": [
   "torch.LongTensor"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.prune_layer": {
  "lineno": 1582,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.nn.Linear",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.modeling_utils.prune_linear_layer": {
  "lineno": 1515,
  "symbols_in_volume": [
   "torch.LongTensor",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_xlm.MultiHeadAttention": {
  "lineno": 112,
  "symbols_in_volume": [
   "itertools.count",
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_xlm.MultiHeadAttention.__init__": {
  "lineno": 116,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.MultiHeadAttention.forward": {
  "lineno": 145,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.cat",
   "torch.matmul",
   "torch.nn.functional.dropout",
   "torch.nn.functional.softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.MultiHeadAttention.forward.shape": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlm.MultiHeadAttention.forward.unshape": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlm.MultiHeadAttention.prune_heads": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlm.TransformerFFN": {
  "lineno": 209,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_xlm.TransformerFFN.__init__": {
  "lineno": 210,
  "symbols_in_volume": [
   "torch.nn.Linear",
   "torch.nn.functional.relu"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.TransformerFFN.ff_chunk": {
  "lineno": 222,
  "symbols_in_volume": [
   "torch.nn.functional.dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.TransformerFFN.forward": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForMultipleChoice": {
  "lineno": 1160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForMultipleChoice.__init__": {
  "lineno": 1166,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForMultipleChoice.forward": {
  "lineno": 1175,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForQuestionAnswering": {
  "lineno": 954,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForQuestionAnswering.__init__": {
  "lineno": 960,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForQuestionAnswering.forward": {
  "lineno": 968,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForQuestionAnsweringOutput": {
  "lineno": 267,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "torch.LongTensor",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForQuestionAnsweringSimple": {
  "lineno": 852,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForQuestionAnsweringSimple.__init__": {
  "lineno": 858,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForQuestionAnsweringSimple.forward": {
  "lineno": 866,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForSequenceClassification": {
  "lineno": 765,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForSequenceClassification.__init__": {
  "lineno": 771,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForSequenceClassification.forward": {
  "lineno": 780,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.MSELoss"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForTokenClassification": {
  "lineno": 1068,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForTokenClassification.__init__": {
  "lineno": 1074,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForTokenClassification.forward": {
  "lineno": 1084,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.tensor",
   "torch.where"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMModel": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlm.XLMModel.__init__": {
  "lineno": 405,
  "symbols_in_volume": [
   "torch.arange",
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.ModuleList"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMModel._prune_heads": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMModel.forward": {
  "lineno": 488,
  "symbols_in_volume": [
   "torch.nn.functional.dropout",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMModel.get_input_embeddings": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMModel.set_input_embeddings": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMPreTrainedModel": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlm.XLMPreTrainedModel.__init__": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMPreTrainedModel._init_weights": {
  "lineno": 252,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear",
   "torch.nn.init.constant_",
   "torch.nn.init.normal_"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMPreTrainedModel.dummy_inputs": {
  "lineno": 242,
  "symbols_in_volume": [
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMPredLayer": {
  "lineno": 632,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_xlm.XLMPredLayer.__init__": {
  "lineno": 637,
  "symbols_in_volume": [
   "torch.nn.AdaptiveLogSoftmaxWithLoss",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMPredLayer.forward": {
  "lineno": 655,
  "symbols_in_volume": [
   "torch.nn.functional.cross_entropy"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMWithLMHeadModel": {
  "lineno": 674,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlm.XLMWithLMHeadModel.__init__": {
  "lineno": 680,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMWithLMHeadModel.forward": {
  "lineno": 703,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMWithLMHeadModel.get_output_embeddings": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlm.XLMWithLMHeadModel.prepare_inputs_for_generation": {
  "lineno": 690,
  "symbols_in_volume": [
   "torch.cat",
   "torch.full",
   "torch.full_like",
   "torch.long"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.create_sinusoidal_embeddings": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cos",
   "numpy.power",
   "numpy.sin",
   "torch.FloatTensor"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm.get_masks": {
  "lineno": 87,
  "symbols_in_volume": [
   "torch.arange",
   "torch.long"
  ],
  "type": "function"
 },
 "transformers.modeling_xlm_roberta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_xlm_roberta.XLMRobertaForCausalLM": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlm_roberta.XLMRobertaForMaskedLM": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlm_roberta.XLMRobertaForMultipleChoice": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlm_roberta.XLMRobertaForQuestionAnswering": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlm_roberta.XLMRobertaForSequenceClassification": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlm_roberta.XLMRobertaForTokenClassification": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlm_roberta.XLMRobertaModel": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlnet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.modeling_xlnet.XLNetFeedForward": {
  "lineno": 470,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetFeedForward.__init__": {
  "lineno": 471,
  "symbols_in_volume": [
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetFeedForward.forward": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForMultipleChoice": {
  "lineno": 1637,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForMultipleChoice.__init__": {
  "lineno": 1643,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForMultipleChoice.forward": {
  "lineno": 1652,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForMultipleChoiceOutput": {
  "lineno": 719,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnswering": {
  "lineno": 1843,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnswering.__init__": {
  "lineno": 1849,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnswering.forward": {
  "lineno": 1861,
  "symbols_in_volume": [
   "torch.einsum",
   "torch.gather",
   "torch.nn.BCEWithLogitsLoss",
   "torch.nn.CrossEntropyLoss",
   "torch.nn.functional.softmax",
   "torch.topk"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnsweringOutput": {
  "lineno": 792,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "torch.LongTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnsweringSimple": {
  "lineno": 1736,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnsweringSimple.__init__": {
  "lineno": 1742,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnsweringSimple.forward": {
  "lineno": 1751,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnsweringSimpleOutput": {
  "lineno": 755,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForSequenceClassification": {
  "lineno": 1449,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForSequenceClassification.__init__": {
  "lineno": 1455,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForSequenceClassification.forward": {
  "lineno": 1465,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.nn.MSELoss"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForSequenceClassificationOutput": {
  "lineno": 651,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForTokenClassification": {
  "lineno": 1542,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForTokenClassification.__init__": {
  "lineno": 1548,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForTokenClassification.forward": {
  "lineno": 1557,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss",
   "torch.tensor",
   "torch.where"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForTokenClassificationOutput": {
  "lineno": 685,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModel": {
  "lineno": 1281,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModel.__init__": {
  "lineno": 1287,
  "symbols_in_volume": [
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModel.forward": {
  "lineno": 1342,
  "symbols_in_volume": [
   "torch.nn.CrossEntropyLoss"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModel.get_output_embeddings": {
  "lineno": 1297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModel.prepare_inputs_for_generation": {
  "lineno": 1300,
  "symbols_in_volume": [
   "torch.cat",
   "torch.float",
   "torch.long",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModelOutput": {
  "lineno": 614,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetLayer": {
  "lineno": 493,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetLayer.__init__": {
  "lineno": 494,
  "symbols_in_volume": [
   "torch.nn.Dropout"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLayer.ff_chunk": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLayer.forward": {
  "lineno": 502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel": {
  "lineno": 931,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetModel.__init__": {
  "lineno": 936,
  "symbols_in_volume": [
   "torch.FloatTensor",
   "torch.nn.Dropout",
   "torch.nn.Embedding",
   "torch.nn.ModuleList",
   "torch.nn.Parameter"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel._prune_heads": {
  "lineno": 961,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.cache_mem": {
  "lineno": 994,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.create_mask": {
  "lineno": 964,
  "symbols_in_volume": [
   "torch.cat",
   "torch.ones",
   "torch.tril",
   "torch.triu",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.forward": {
  "lineno": 1065,
  "symbols_in_volume": [
   "torch.cat",
   "torch.eye",
   "torch.long",
   "torch.nn.functional.one_hot",
   "torch.zeros"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.get_input_embeddings": {
  "lineno": 955,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.positional_embedding": {
  "lineno": 1015,
  "symbols_in_volume": [
   "torch.cat",
   "torch.cos",
   "torch.einsum",
   "torch.sin"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.relative_positional_encoding": {
  "lineno": 1026,
  "symbols_in_volume": [
   "torch.arange",
   "torch.cat",
   "torch.float",
   "torch.pow"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.set_input_embeddings": {
  "lineno": 958,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModelOutput": {
  "lineno": 580,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "torch.FloatTensor",
   "typing.List",
   "typing.Optional",
   "typing.Tuple"
  ],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetPreTrainedModel": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetPreTrainedModel._init_weights": {
  "lineno": 552,
  "symbols_in_volume": [
   "torch.nn.Embedding",
   "torch.nn.LayerNorm",
   "torch.nn.Linear"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention": {
  "lineno": 210,
  "symbols_in_volume": [
   "torch.nn.Module"
  ],
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.__init__": {
  "lineno": 211,
  "symbols_in_volume": [
   "torch.FloatTensor",
   "torch.nn.Dropout",
   "torch.nn.LayerNorm",
   "torch.nn.Parameter"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.forward": {
  "lineno": 334,
  "symbols_in_volume": [
   "torch.cat",
   "torch.einsum"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.post_attention": {
  "lineno": 322,
  "symbols_in_volume": [
   "torch.einsum"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.prune_heads": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.rel_attn_core": {
  "lineno": 270,
  "symbols_in_volume": [
   "torch.einsum",
   "torch.float16",
   "torch.nn.functional.softmax"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.rel_shift": {
  "lineno": 242,
  "symbols_in_volume": [
   "torch.arange",
   "torch.index_select",
   "torch.long"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.rel_shift_bnij": {
  "lineno": 255,
  "symbols_in_volume": [
   "torch.arange",
   "torch.index_select",
   "torch.long"
  ],
  "type": "function"
 },
 "transformers.modeling_xlnet.build_tf_xlnet_to_pytorch_map": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.modeling_xlnet.load_tf_weights_in_xlnet": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.transpose",
   "tensorflow.train.list_variables",
   "tensorflow.train.load_variable",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "transformers.optimization": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.optimization.Adafactor": {
  "lineno": 321,
  "symbols_in_volume": [
   "torch.optim.Optimizer"
  ],
  "type": "class"
 },
 "transformers.optimization.Adafactor.__init__": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.optimization.Adafactor._approx_sq_grad": {
  "lineno": 436,
  "symbols_in_volume": [
   "torch.mm"
  ],
  "type": "function"
 },
 "transformers.optimization.Adafactor._get_lr": {
  "lineno": 415,
  "symbols_in_volume": [
   "math.sqrt"
  ],
  "type": "function"
 },
 "transformers.optimization.Adafactor._get_options": {
  "lineno": 426,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.optimization.Adafactor._rms": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.optimization.Adafactor.step": {
  "lineno": 442,
  "symbols_in_volume": [
   "math.pow",
   "torch.bfloat16",
   "torch.float16",
   "torch.zeros",
   "torch.zeros_like"
  ],
  "type": "function"
 },
 "transformers.optimization.AdamW": {
  "lineno": 219,
  "symbols_in_volume": [
   "torch.optim.Optimizer"
  ],
  "type": "class"
 },
 "transformers.optimization.AdamW.__init__": {
  "lineno": 239,
  "symbols_in_volume": [
   "torch.nn.parameter.Parameter",
   "typing.Iterable",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.optimization.AdamW.step": {
  "lineno": 259,
  "symbols_in_volume": [
   "math.sqrt",
   "torch.zeros_like",
   "typing.Callable"
  ],
  "type": "function"
 },
 "transformers.optimization.get_constant_schedule": {
  "lineno": 30,
  "symbols_in_volume": [
   "torch.optim.Optimizer",
   "torch.optim.lr_scheduler.LambdaLR"
  ],
  "type": "function"
 },
 "transformers.optimization.get_constant_schedule_with_warmup": {
  "lineno": 46,
  "symbols_in_volume": [
   "torch.optim.Optimizer",
   "torch.optim.lr_scheduler.LambdaLR"
  ],
  "type": "function"
 },
 "transformers.optimization.get_constant_schedule_with_warmup.lr_lambda": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.optimization.get_cosine_schedule_with_warmup": {
  "lineno": 100,
  "symbols_in_volume": [
   "torch.optim.Optimizer",
   "torch.optim.lr_scheduler.LambdaLR"
  ],
  "type": "function"
 },
 "transformers.optimization.get_cosine_schedule_with_warmup.lr_lambda": {
  "lineno": 125,
  "symbols_in_volume": [
   "math.cos",
   "math.pi"
  ],
  "type": "function"
 },
 "transformers.optimization.get_cosine_with_hard_restarts_schedule_with_warmup": {
  "lineno": 134,
  "symbols_in_volume": [
   "torch.optim.Optimizer",
   "torch.optim.lr_scheduler.LambdaLR"
  ],
  "type": "function"
 },
 "transformers.optimization.get_cosine_with_hard_restarts_schedule_with_warmup.lr_lambda": {
  "lineno": 158,
  "symbols_in_volume": [
   "math.cos",
   "math.pi"
  ],
  "type": "function"
 },
 "transformers.optimization.get_linear_schedule_with_warmup": {
  "lineno": 71,
  "symbols_in_volume": [
   "torch.optim.lr_scheduler.LambdaLR"
  ],
  "type": "function"
 },
 "transformers.optimization.get_linear_schedule_with_warmup.lr_lambda": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.optimization.get_polynomial_decay_schedule_with_warmup": {
  "lineno": 169,
  "symbols_in_volume": [
   "torch.optim.lr_scheduler.LambdaLR"
  ],
  "type": "function"
 },
 "transformers.optimization.get_polynomial_decay_schedule_with_warmup.lr_lambda": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.optimization_tf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.optimization_tf.AdamWeightDecay": {
  "lineno": 148,
  "symbols_in_volume": [
   "tensorflow.keras.optimizers.Adam"
  ],
  "type": "class"
 },
 "transformers.optimization_tf.AdamWeightDecay.__init__": {
  "lineno": 187,
  "symbols_in_volume": [
   "tensorflow.keras.optimizers.schedules.LearningRateSchedule",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay._decay_weights_op": {
  "lineno": 217,
  "symbols_in_volume": [
   "tensorflow.no_op"
  ],
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay._do_use_weight_decay": {
  "lineno": 260,
  "symbols_in_volume": [
   "re.search"
  ],
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay._get_lr": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay._prepare_local": {
  "lineno": 211,
  "symbols_in_volume": [
   "tensorflow.constant"
  ],
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay._resource_apply_dense": {
  "lineno": 243,
  "symbols_in_volume": [
   "tensorflow.control_dependencies"
  ],
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay._resource_apply_sparse": {
  "lineno": 249,
  "symbols_in_volume": [
   "tensorflow.control_dependencies"
  ],
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay.apply_gradients": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay.from_config": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay.get_config": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.optimization_tf.GradientAccumulator": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.optimization_tf.GradientAccumulator.__call__": {
  "lineno": 315,
  "symbols_in_volume": [
   "tensorflow.Variable",
   "tensorflow.VariableAggregation.ONLY_FIRST_REPLICA",
   "tensorflow.VariableSynchronization.ON_READ",
   "tensorflow.zeros_like"
  ],
  "type": "function"
 },
 "transformers.optimization_tf.GradientAccumulator.__init__": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.optimization_tf.GradientAccumulator.gradients": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.optimization_tf.GradientAccumulator.reset": {
  "lineno": 341,
  "symbols_in_volume": [
   "tensorflow.zeros_like"
  ],
  "type": "function"
 },
 "transformers.optimization_tf.GradientAccumulator.step": {
  "lineno": 295,
  "symbols_in_volume": [
   "tensorflow.Variable",
   "tensorflow.VariableAggregation.ONLY_FIRST_REPLICA",
   "tensorflow.VariableSynchronization.ON_READ",
   "tensorflow.constant",
   "tensorflow.int64"
  ],
  "type": "function"
 },
 "transformers.optimization_tf.WarmUp": {
  "lineno": 24,
  "symbols_in_volume": [
   "tensorflow.keras.optimizers.schedules.LearningRateSchedule"
  ],
  "type": "class"
 },
 "transformers.optimization_tf.WarmUp.__call__": {
  "lineno": 57,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.cond",
   "tensorflow.float32",
   "tensorflow.math.pow",
   "tensorflow.name_scope"
  ],
  "type": "function"
 },
 "transformers.optimization_tf.WarmUp.__init__": {
  "lineno": 42,
  "symbols_in_volume": [
   "typing.Callable"
  ],
  "type": "function"
 },
 "transformers.optimization_tf.WarmUp.get_config": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.optimization_tf.create_optimizer": {
  "lineno": 82,
  "symbols_in_volume": [
   "tensorflow.keras.optimizers.Adam",
   "tensorflow.keras.optimizers.schedules.PolynomialDecay",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.pipelines": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.TYPE_CHECKING"
  ],
  "type": "module"
 },
 "transformers.pipelines.ArgumentHandler": {
  "lineno": 130,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "transformers.pipelines.ArgumentHandler.__call__": {
  "lineno": 135,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "transformers.pipelines.Conversation": {
  "lineno": 2187,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.Conversation.__init__": {
  "lineno": 2218,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "uuid.UUID",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "transformers.pipelines.Conversation.__repr__": {
  "lineno": 2281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.Conversation.add_user_input": {
  "lineno": 2227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.Conversation.append_response": {
  "lineno": 2262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.Conversation.mark_processed": {
  "lineno": 2253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.Conversation.set_history": {
  "lineno": 2271,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.pipelines.ConversationalPipeline": {
  "lineno": 2302,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.ConversationalPipeline.__call__": {
  "lineno": 2345,
  "symbols_in_volume": [
   "tensorflow.shape",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.pipelines.ConversationalPipeline.__init__": {
  "lineno": 2336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.ConversationalPipeline._clean_padding_history": {
  "lineno": 2443,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.pipelines.ConversationalPipeline._concat_inputs_history": {
  "lineno": 2473,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.pipelines.ConversationalPipeline._parse_and_tokenize": {
  "lineno": 2432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.CsvPipelineDataFormat": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.CsvPipelineDataFormat.__init__": {
  "lineno": 317,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.pipelines.CsvPipelineDataFormat.__iter__": {
  "lineno": 326,
  "symbols_in_volume": [
   "csv.DictReader"
  ],
  "type": "function"
 },
 "transformers.pipelines.CsvPipelineDataFormat.save": {
  "lineno": 335,
  "symbols_in_volume": [
   "csv.DictWriter",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.pipelines.DefaultArgumentHandler": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.DefaultArgumentHandler.__call__": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.DefaultArgumentHandler.handle_args": {
  "lineno": 154,
  "symbols_in_volume": [
   "itertools.chain",
   "itertools.chain.from_iterable",
   "typing.Any",
   "typing.Iterable",
   "typing.List",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "transformers.pipelines.DefaultArgumentHandler.handle_kwargs": {
  "lineno": 145,
  "symbols_in_volume": [
   "itertools.chain",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.pipelines.FeatureExtractionPipeline": {
  "lineno": 669,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.FeatureExtractionPipeline.__call__": {
  "lineno": 727,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.FeatureExtractionPipeline.__init__": {
  "lineno": 706,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.pipelines.FillMaskPipeline": {
  "lineno": 1127,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.FillMaskPipeline.__call__": {
  "lineno": 1192,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.where",
   "tensorflow.argsort",
   "tensorflow.gather_nd",
   "tensorflow.math.top_k",
   "tensorflow.nn.softmax",
   "tensorflow.reshape",
   "tensorflow.reverse",
   "tensorflow.where",
   "torch.nonzero"
  ],
  "type": "function"
 },
 "transformers.pipelines.FillMaskPipeline.__init__": {
  "lineno": 1151,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.pipelines.FillMaskPipeline.ensure_exactly_one_mask_token": {
  "lineno": 1177,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.prod"
  ],
  "type": "function"
 },
 "transformers.pipelines.JsonPipelineDataFormat": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.JsonPipelineDataFormat.__init__": {
  "lineno": 362,
  "symbols_in_volume": [
   "json.load",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.pipelines.JsonPipelineDataFormat.__iter__": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.JsonPipelineDataFormat.save": {
  "lineno": 381,
  "symbols_in_volume": [
   "json.dump"
  ],
  "type": "function"
 },
 "transformers.pipelines.PipedPipelineDataFormat": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.PipedPipelineDataFormat.__iter__": {
  "lineno": 407,
  "symbols_in_volume": [
   "sys.stdin"
  ],
  "type": "function"
 },
 "transformers.pipelines.PipedPipelineDataFormat.save": {
  "lineno": 423,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.PipedPipelineDataFormat.save_binary": {
  "lineno": 432,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.pipelines.Pipeline": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.Pipeline.__call__": {
  "lineno": 639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.Pipeline.__init__": {
  "lineno": 507,
  "symbols_in_volume": [
   "torch.device",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.pipelines.Pipeline._forward": {
  "lineno": 643,
  "symbols_in_volume": [
   "torch.no_grad"
  ],
  "type": "function"
 },
 "transformers.pipelines.Pipeline._parse_and_tokenize": {
  "lineno": 624,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.Pipeline.check_model_type": {
  "lineno": 607,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.pipelines.Pipeline.device_placement": {
  "lineno": 570,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "tensorflow.device",
   "torch.cuda.set_device"
  ],
  "type": "function"
 },
 "transformers.pipelines.Pipeline.ensure_tensor_on_device": {
  "lineno": 595,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.Pipeline.predict": {
  "lineno": 564,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.Pipeline.save_pretrained": {
  "lineno": 540,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "transformers.pipelines.Pipeline.transform": {
  "lineno": 558,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.PipelineDataFormat": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.PipelineDataFormat.__init__": {
  "lineno": 212,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.exists",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.pipelines.PipelineDataFormat.__iter__": {
  "lineno": 235,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "transformers.pipelines.PipelineDataFormat.from_str": {
  "lineno": 268,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.pipelines.PipelineDataFormat.save": {
  "lineno": 239,
  "symbols_in_volume": [
   "abc.abstractmethod",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.pipelines.PipelineDataFormat.save_binary": {
  "lineno": 250,
  "symbols_in_volume": [
   "os.path.extsep.join",
   "os.path.splitext",
   "pickle.dump",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.pipelines.PipelineException": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.PipelineException.__init__": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.QuestionAnsweringArgumentHandler": {
  "lineno": 1495,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.QuestionAnsweringArgumentHandler.__call__": {
  "lineno": 1504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.QuestionAnsweringPipeline": {
  "lineno": 1557,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.QuestionAnsweringPipeline.__call__": {
  "lineno": 1622,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.exp",
   "numpy.log",
   "numpy.sum",
   "numpy.where",
   "tensorflow.constant",
   "torch.no_grad",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.pipelines.QuestionAnsweringPipeline.__init__": {
  "lineno": 1573,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.pipelines.QuestionAnsweringPipeline.create_sample": {
  "lineno": 1598,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.pipelines.QuestionAnsweringPipeline.decode": {
  "lineno": 1760,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.argpartition",
   "numpy.argsort",
   "numpy.expand_dims",
   "numpy.matmul",
   "numpy.ndarray",
   "numpy.tril",
   "numpy.triu",
   "numpy.unravel_index",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.pipelines.QuestionAnsweringPipeline.span_to_answer": {
  "lineno": 1801,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.pipelines.SummarizationPipeline": {
  "lineno": 1846,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.SummarizationPipeline.__call__": {
  "lineno": 1878,
  "symbols_in_volume": [
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "transformers.pipelines.SummarizationPipeline.__init__": {
  "lineno": 1870,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.Text2TextGenerationPipeline": {
  "lineno": 2090,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.Text2TextGenerationPipeline.__call__": {
  "lineno": 2117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.Text2TextGenerationPipeline.__init__": {
  "lineno": 2108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.TextClassificationPipeline": {
  "lineno": 930,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.TextClassificationPipeline.__call__": {
  "lineno": 962,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "transformers.pipelines.TextClassificationPipeline.__init__": {
  "lineno": 951,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.TextGenerationPipeline": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.TextGenerationPipeline.__call__": {
  "lineno": 811,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.TextGenerationPipeline.__init__": {
  "lineno": 784,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.TextGenerationPipeline._parse_and_tokenize": {
  "lineno": 791,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.TokenClassificationPipeline": {
  "lineno": 1295,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.TokenClassificationPipeline.__call__": {
  "lineno": 1354,
  "symbols_in_volume": [
   "numpy.exp",
   "torch.no_grad"
  ],
  "type": "function"
 },
 "transformers.pipelines.TokenClassificationPipeline.__init__": {
  "lineno": 1320,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.pipelines.TokenClassificationPipeline.group_entities": {
  "lineno": 1449,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.pipelines.TokenClassificationPipeline.group_sub_entities": {
  "lineno": 1430,
  "symbols_in_volume": [
   "numpy.mean",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.pipelines.TranslationPipeline": {
  "lineno": 1980,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.TranslationPipeline.__call__": {
  "lineno": 2004,
  "symbols_in_volume": [
   "tensorflow.shape"
  ],
  "type": "function"
 },
 "transformers.pipelines.TranslationPipeline.__init__": {
  "lineno": 1997,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.ZeroShotClassificationArgumentHandler": {
  "lineno": 992,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.ZeroShotClassificationArgumentHandler.__call__": {
  "lineno": 1003,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.ZeroShotClassificationArgumentHandler._parse_labels": {
  "lineno": 998,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.ZeroShotClassificationPipeline": {
  "lineno": 1025,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.pipelines.ZeroShotClassificationPipeline.__call__": {
  "lineno": 1062,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "transformers.pipelines.ZeroShotClassificationPipeline.__init__": {
  "lineno": 1044,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.ZeroShotClassificationPipeline._parse_and_tokenize": {
  "lineno": 1047,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines._ScikitCompat": {
  "lineno": 442,
  "symbols_in_volume": [
   "abc.ABC"
  ],
  "type": "class"
 },
 "transformers.pipelines._ScikitCompat.predict": {
  "lineno": 451,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "transformers.pipelines._ScikitCompat.transform": {
  "lineno": 447,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "transformers.pipelines.get_framework": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.pipelines.pipeline": {
  "lineno": 2600,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.retrieval_rag.HFIndex": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.retrieval_rag.HFIndex.__init__": {
  "lineno": 201,
  "symbols_in_volume": [
   "datasets.load_dataset",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.HFIndex.get_doc_dicts": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.HFIndex.get_top_docs": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.vstack",
   "numpy.zeros",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.HFIndex.init_index": {
  "lineno": 228,
  "symbols_in_volume": [
   "datasets.load_dataset"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.HFIndex.is_initialized": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.retrieval_rag.Index": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.retrieval_rag.Index.get_doc_dicts": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.Index.get_top_docs": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.Index.init_index": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.retrieval_rag.Index.is_initialized": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.retrieval_rag.LegacyIndex.__init__": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex._deserialize_index": {
  "lineno": 140,
  "symbols_in_volume": [
   "faiss.read_index",
   "pickle.load"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex._load_passages": {
  "lineno": 133,
  "symbols_in_volume": [
   "pickle.load"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex._resolve_path": {
  "lineno": 112,
  "symbols_in_volume": [
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex.get_doc_dicts": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex.get_top_docs": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.hstack",
   "numpy.ndarray",
   "numpy.zeros",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex.init_index": {
  "lineno": 154,
  "symbols_in_volume": [
   "faiss.IndexHNSWFlat"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex.is_initialized": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.retrieval_rag.RagRetriever.__call__": {
  "lineno": 428,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever.__init__": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever._chunk_tensor": {
  "lineno": 382,
  "symbols_in_volume": [
   "typing.Iterable",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever._main_retrieve": {
  "lineno": 385,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "time.time",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever.from_pretrained": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever.init_retrieval": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever.postprocess_docs": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever.postprocess_docs.cat_input_and_doc": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever.retrieve": {
  "lineno": 404,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.List",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever.save_pretrained": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.testing_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.testing_utils.CaptureLogger": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.testing_utils.CaptureLogger.__enter__": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.testing_utils.CaptureLogger.__exit__": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.testing_utils.CaptureLogger.__init__": {
  "lineno": 334,
  "symbols_in_volume": [
   "io.StringIO",
   "logging.StreamHandler"
  ],
  "type": "function"
 },
 "transformers.testing_utils.CaptureLogger.__repr__": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.testing_utils.CaptureStd": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.testing_utils.CaptureStd.__enter__": {
  "lineno": 263,
  "symbols_in_volume": [
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "transformers.testing_utils.CaptureStd.__exit__": {
  "lineno": 274,
  "symbols_in_volume": [
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "transformers.testing_utils.CaptureStd.__init__": {
  "lineno": 248,
  "symbols_in_volume": [
   "io.StringIO"
  ],
  "type": "function"
 },
 "transformers.testing_utils.CaptureStd.__repr__": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.testing_utils.CaptureStderr": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.testing_utils.CaptureStderr.__init__": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.testing_utils.CaptureStdout": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.testing_utils.CaptureStdout.__init__": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus": {
  "lineno": 352,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "transformers.testing_utils.TestCasePlus.get_auto_remove_tmp_dir": {
  "lineno": 394,
  "symbols_in_volume": [
   "pathlib.Path",
   "shutil.rmtree",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.setUp": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.tearDown": {
  "lineno": 434,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "transformers.testing_utils.apply_print_resets": {
  "lineno": 210,
  "symbols_in_volume": [
   "re.M",
   "re.sub"
  ],
  "type": "function"
 },
 "transformers.testing_utils.assert_screenout": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.testing_utils.custom_tokenizers": {
  "lineno": 70,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "transformers.testing_utils.get_tests_dir": {
  "lineno": 187,
  "symbols_in_volume": [
   "inspect.stack",
   "os.path.abspath",
   "os.path.dirname"
  ],
  "type": "function"
 },
 "transformers.testing_utils.mockenv": {
  "lineno": 441,
  "symbols_in_volume": [
   "os.environ",
   "unittest.mock.patch.dict"
  ],
  "type": "function"
 },
 "transformers.testing_utils.parse_flag_from_env": {
  "lineno": 22,
  "symbols_in_volume": [
   "distutils.util.strtobool",
   "os.environ"
  ],
  "type": "function"
 },
 "transformers.testing_utils.parse_int_from_env": {
  "lineno": 38,
  "symbols_in_volume": [
   "os.environ"
  ],
  "type": "function"
 },
 "transformers.testing_utils.require_datasets": {
  "lineno": 170,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "transformers.testing_utils.require_faiss": {
  "lineno": 179,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "transformers.testing_utils.require_multigpu": {
  "lineno": 110,
  "symbols_in_volume": [
   "torch.cuda.device_count",
   "unittest.skip"
  ],
  "type": "function"
 },
 "transformers.testing_utils.require_non_multigpu": {
  "lineno": 130,
  "symbols_in_volume": [
   "torch.cuda.device_count",
   "unittest.skip"
  ],
  "type": "function"
 },
 "transformers.testing_utils.require_tf": {
  "lineno": 97,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "transformers.testing_utils.require_torch": {
  "lineno": 84,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "transformers.testing_utils.require_torch_and_cuda": {
  "lineno": 162,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "transformers.testing_utils.require_torch_tpu": {
  "lineno": 145,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "transformers.testing_utils.slow": {
  "lineno": 56,
  "symbols_in_volume": [
   "unittest.skip"
  ],
  "type": "function"
 },
 "transformers.tokenization_albert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_albert.AlbertTokenizer": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_albert.AlbertTokenizer.__getstate__": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.__init__": {
  "lineno": 114,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.__setstate__": {
  "lineno": 171,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer._convert_id_to_token": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer._convert_token_to_id": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer._tokenize": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.build_inputs_with_special_tokens": {
  "lineno": 235,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.convert_tokens_to_string": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.create_token_type_ids_from_sequences": {
  "lineno": 292,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.get_special_tokens_mask": {
  "lineno": 261,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.get_vocab": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.preprocess_text": {
  "lineno": 184,
  "symbols_in_volume": [
   "unicodedata.combining",
   "unicodedata.normalize"
  ],
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.save_vocabulary": {
  "lineno": 323,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isdir",
   "os.path.join",
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.vocab_size": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_auto": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "module"
 },
 "transformers.tokenization_auto.AutoTokenizer": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_auto.AutoTokenizer.__init__": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_auto.AutoTokenizer.from_pretrained": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bart": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_bart.BartTokenizer": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_bart.BartTokenizer.prepare_seq2seq_batch": {
  "lineno": 48,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_bart.BartTokenizerFast": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_bart.BartTokenizerFast.prepare_seq2seq_batch": {
  "lineno": 158,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_bert.BasicTokenizer": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_bert.BasicTokenizer.__init__": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._clean_text": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._is_chinese_char": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._run_split_on_punc": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._run_strip_accents": {
  "lineno": 423,
  "symbols_in_volume": [
   "unicodedata.category",
   "unicodedata.normalize"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._tokenize_chinese_chars": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer.tokenize": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_bert.BertTokenizer.__init__": {
  "lineno": 168,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer._convert_id_to_token": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer._convert_token_to_id": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer._tokenize": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.build_inputs_with_special_tokens": {
  "lineno": 243,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.convert_tokens_to_string": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.create_token_type_ids_from_sequences": {
  "lineno": 300,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.get_special_tokens_mask": {
  "lineno": 269,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.get_vocab": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.save_vocabulary": {
  "lineno": 330,
  "symbols_in_volume": [
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.vocab_size": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizerFast": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_bert.BertTokenizerFast.__init__": {
  "lineno": 614,
  "symbols_in_volume": [
   "tokenizers.BertWordPieceTokenizer"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizerFast.build_inputs_with_special_tokens": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizerFast.create_token_type_ids_from_sequences": {
  "lineno": 678,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert.WordpieceTokenizer": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_bert.WordpieceTokenizer.__init__": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.WordpieceTokenizer.tokenize": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert.load_vocab": {
  "lineno": 100,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert.whitespace_tokenize": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert_generation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer": {
  "lineno": 35,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "class"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer.__getstate__": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer.__init__": {
  "lineno": 60,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer.__setstate__": {
  "lineno": 109,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer._convert_id_to_token": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer._convert_token_to_id": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer._tokenize": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer.convert_tokens_to_string": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer.get_vocab": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer.save_vocabulary": {
  "lineno": 144,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isdir",
   "os.path.join",
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer.vocab_size": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert_japanese": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_bert_japanese.BertJapaneseTokenizer": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_bert_japanese.BertJapaneseTokenizer.__init__": {
  "lineno": 79,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert_japanese.BertJapaneseTokenizer._tokenize": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert_japanese.CharacterTokenizer": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_bert_japanese.CharacterTokenizer.__init__": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bert_japanese.CharacterTokenizer.tokenize": {
  "lineno": 293,
  "symbols_in_volume": [
   "unicodedata.normalize"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert_japanese.MecabTokenizer": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_bert_japanese.MecabTokenizer.__init__": {
  "lineno": 170,
  "symbols_in_volume": [
   "fugashi.GenericTagger",
   "ipadic.DICDIR",
   "os.path.isdir",
   "os.path.join",
   "typing.Optional",
   "unidic.DICDIR",
   "unidic_lite.DICDIR"
  ],
  "type": "function"
 },
 "transformers.tokenization_bert_japanese.MecabTokenizer.tokenize": {
  "lineno": 256,
  "symbols_in_volume": [
   "unicodedata.normalize"
  ],
  "type": "function"
 },
 "transformers.tokenization_bertweet": {
  "lineno": null,
  "symbols_in_volume": [
   "regex.I",
   "regex.UNICODE",
   "regex.VERBOSE",
   "regex.compile"
  ],
  "type": "module"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.__init__": {
  "lineno": 117,
  "symbols_in_volume": [
   "emoji.demojize"
  ],
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer._convert_id_to_token": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer._convert_token_to_id": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer._tokenize": {
  "lineno": 310,
  "symbols_in_volume": [
   "re.findall"
  ],
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.add_from_file": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.bpe": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.build_inputs_with_special_tokens": {
  "lineno": 177,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.convert_tokens_to_string": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.create_token_type_ids_from_sequences": {
  "lineno": 235,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.get_special_tokens_mask": {
  "lineno": 204,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.get_vocab": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.normalizeToken": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.normalizeTweet": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.save_vocabulary": {
  "lineno": 387,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isdir",
   "os.path.join",
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.vocab_size": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet.TweetTokenizer": {
  "lineno": 695,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_bertweet.TweetTokenizer.__init__": {
  "lineno": 713,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet.TweetTokenizer.tokenize": {
  "lineno": 718,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet._replace_html_entities": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet._replace_html_entities._convert_entity": {
  "lineno": 660,
  "symbols_in_volume": [
   "html.entities.name2codepoint.get"
  ],
  "type": "function"
 },
 "transformers.tokenization_bertweet._str_to_unicode": {
  "lineno": 624,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet.casual_tokenize": {
  "lineno": 773,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet.get_pairs": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_bertweet.reduce_lengthening": {
  "lineno": 748,
  "symbols_in_volume": [
   "regex.compile"
  ],
  "type": "function"
 },
 "transformers.tokenization_bertweet.remove_handles": {
  "lineno": 757,
  "symbols_in_volume": [
   "regex.compile"
  ],
  "type": "function"
 },
 "transformers.tokenization_camembert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_camembert.CamembertTokenizer": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.__getstate__": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.__init__": {
  "lineno": 107,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.__setstate__": {
  "lineno": 249,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer._convert_id_to_token": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer._convert_token_to_id": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer._tokenize": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.build_inputs_with_special_tokens": {
  "lineno": 142,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.convert_tokens_to_string": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.create_token_type_ids_from_sequences": {
  "lineno": 199,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.get_special_tokens_mask": {
  "lineno": 169,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.save_vocabulary": {
  "lineno": 267,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isdir",
   "os.path.join",
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.vocab_size": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_ctrl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.__init__": {
  "lineno": 139,
  "symbols_in_volume": [
   "json.load"
  ],
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer._convert_id_to_token": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer._convert_token_to_id": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer._tokenize": {
  "lineno": 202,
  "symbols_in_volume": [
   "regex.findall"
  ],
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.bpe": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.convert_tokens_to_string": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.get_vocab": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.save_vocabulary": {
  "lineno": 225,
  "symbols_in_volume": [
   "json.dumps",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.vocab_size": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_ctrl.get_pairs": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_distilbert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_distilbert.DistilBertTokenizer": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_distilbert.DistilBertTokenizerFast": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_dpr": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "transformers.tokenization_dpr.CustomDPRReaderTokenizerMixin": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_dpr.CustomDPRReaderTokenizerMixin.__call__": {
  "lineno": 215,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_dpr.CustomDPRReaderTokenizerMixin._get_best_spans": {
  "lineno": 344,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_dpr.CustomDPRReaderTokenizerMixin.decode_best_spans": {
  "lineno": 271,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_dpr.DPRContextEncoderTokenizer": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_dpr.DPRContextEncoderTokenizerFast": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_dpr.DPRQuestionEncoderTokenizer": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_dpr.DPRQuestionEncoderTokenizerFast": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_dpr.DPRReaderTokenizer": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_dpr.DPRReaderTokenizerFast": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_electra": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_electra.ElectraTokenizer": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_electra.ElectraTokenizerFast": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_flaubert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_flaubert.FlaubertTokenizer": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_flaubert.FlaubertTokenizer.__init__": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_flaubert.FlaubertTokenizer._tokenize": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_flaubert.FlaubertTokenizer.preprocess_text": {
  "lineno": 103,
  "symbols_in_volume": [
   "unicodedata.normalize"
  ],
  "type": "function"
 },
 "transformers.tokenization_flaubert.convert_to_unicode": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_flaubert.convert_to_unicode.six_ensure_text": {
  "lineno": 68,
  "symbols_in_volume": [
   "six.binary_type",
   "six.text_type"
  ],
  "type": "function"
 },
 "transformers.tokenization_fsmt": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.__init__": {
  "lineno": 171,
  "symbols_in_volume": [
   "json.load"
  ],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer._convert_id_to_token": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer._convert_token_to_id": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer._tokenize": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.bpe": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.build_inputs_with_special_tokens": {
  "lineno": 365,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.convert_tokens_to_string": {
  "lineno": 355,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.create_token_type_ids_from_sequences": {
  "lineno": 428,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.get_special_tokens_mask": {
  "lineno": 392,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.get_src_vocab": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.get_tgt_vocab": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.get_vocab": {
  "lineno": 222,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.moses_detokenize": {
  "lineno": 244,
  "symbols_in_volume": [
   "sacremoses.MosesDetokenizer"
  ],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.moses_pipeline": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.moses_punct_norm": {
  "lineno": 230,
  "symbols_in_volume": [
   "sacremoses.MosesPunctNormalizer"
  ],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.moses_tokenize": {
  "lineno": 236,
  "symbols_in_volume": [
   "sacremoses.MosesTokenizer"
  ],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.prepare_seq2seq_batch": {
  "lineno": 462,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.save_vocabulary": {
  "lineno": 496,
  "symbols_in_volume": [
   "json.dumps",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.src_vocab_size": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.tgt_vocab_size": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.vocab_size": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_fsmt.get_pairs": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_fsmt.remove_non_printing_char": {
  "lineno": 101,
  "symbols_in_volume": [
   "unicodedata.category"
  ],
  "type": "function"
 },
 "transformers.tokenization_fsmt.replace_unicode_punct": {
  "lineno": 58,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "transformers.tokenization_funnel": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_funnel.FunnelTokenizer": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_funnel.FunnelTokenizer.__init__": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_funnel.FunnelTokenizer.create_token_type_ids_from_sequences": {
  "lineno": 109,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_funnel.FunnelTokenizerFast": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_funnel.FunnelTokenizerFast.__init__": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_funnel.FunnelTokenizerFast._convert_encoding": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_funnel.FunnelTokenizerFast.create_token_type_ids_from_sequences": {
  "lineno": 191,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_gpt2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.__init__": {
  "lineno": 155,
  "symbols_in_volume": [
   "json.load",
   "regex.compile"
  ],
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer._convert_id_to_token": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer._convert_token_to_id": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer._tokenize": {
  "lineno": 236,
  "symbols_in_volume": [
   "regex.findall"
  ],
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.bpe": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.convert_tokens_to_string": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.get_vocab": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.prepare_for_tokenization": {
  "lineno": 295,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.save_vocabulary": {
  "lineno": 260,
  "symbols_in_volume": [
   "json.dumps",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.vocab_size": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2TokenizerFast": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_gpt2.GPT2TokenizerFast.__init__": {
  "lineno": 364,
  "symbols_in_volume": [
   "tokenizers.ByteLevelBPETokenizer"
  ],
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2TokenizerFast._batch_encode_plus": {
  "lineno": 389,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2TokenizerFast._encode_plus": {
  "lineno": 405,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_gpt2.bytes_to_unicode": {
  "lineno": 65,
  "symbols_in_volume": [
   "functools.lru_cache"
  ],
  "type": "function"
 },
 "transformers.tokenization_gpt2.get_pairs": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_layoutlm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_layoutlm.LayoutLMTokenizer": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_layoutlm.LayoutLMTokenizerFast": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_longformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_longformer.LongformerTokenizer": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_longformer.LongformerTokenizerFast": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_lxmert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_lxmert.LxmertTokenizer": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_lxmert.LxmertTokenizerFast": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_marian": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_marian.MarianTokenizer": {
  "lineno": 24,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "class"
 },
 "transformers.tokenization_marian.MarianTokenizer.__getstate__": {
  "lineno": 185,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.__init__": {
  "lineno": 44,
  "symbols_in_volume": [
   "pathlib.Path"
  ],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.__setstate__": {
  "lineno": 190,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer._convert_id_to_token": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer._convert_token_to_id": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer._setup_normalizer": {
  "lineno": 86,
  "symbols_in_volume": [
   "sacremoses.MosesPunctNormalizer",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer._special_token_mask": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer._tokenize": {
  "lineno": 108,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.build_inputs_with_special_tokens": {
  "lineno": 121,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.convert_tokens_to_string": {
  "lineno": 117,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.get_special_tokens_mask": {
  "lineno": 205,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.get_vocab": {
  "lineno": 180,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.normalize": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.num_special_tokens_to_add": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.prepare_seq2seq_batch": {
  "lineno": 128,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.remove_language_code": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.save_vocabulary": {
  "lineno": 167,
  "symbols_in_volume": [
   "pathlib.Path",
   "shutil.copyfile",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.vocab_size": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_marian.load_json": {
  "lineno": 228,
  "symbols_in_volume": [
   "json.load",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_marian.load_spm": {
  "lineno": 217,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_marian.save_json": {
  "lineno": 223,
  "symbols_in_volume": [
   "json.dump"
  ],
  "type": "function"
 },
 "transformers.tokenization_mbart": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_mbart.MBartTokenizer": {
  "lineno": 59,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "class"
 },
 "transformers.tokenization_mbart.MBartTokenizer.__init__": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_mbart.MBartTokenizer.build_inputs_with_special_tokens": {
  "lineno": 133,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_mbart.MBartTokenizer.get_special_tokens_mask": {
  "lineno": 101,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_mbart.MBartTokenizer.prepare_seq2seq_batch": {
  "lineno": 159,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_mbart.MBartTokenizer.set_src_lang_special_tokens": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_mbart.MBartTokenizer.set_tgt_lang_special_tokens": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_mobilebert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_mobilebert.MobileBertTokenizer": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_mobilebert.MobileBertTokenizerFast": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_openai": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.__init__": {
  "lineno": 102,
  "symbols_in_volume": [
   "ftfy.fix_text",
   "json.load",
   "spacy.lang.en.English"
  ],
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer._convert_id_to_token": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer._convert_token_to_id": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer._tokenize": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.bpe": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.convert_tokens_to_string": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.get_vocab": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.save_vocabulary": {
  "lineno": 205,
  "symbols_in_volume": [
   "json.dumps",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.vocab_size": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizerFast": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizerFast.__init__": {
  "lineno": 268,
  "symbols_in_volume": [
   "tokenizers.CharBPETokenizer"
  ],
  "type": "function"
 },
 "transformers.tokenization_openai.get_pairs": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_openai.text_standardize": {
  "lineno": 60,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "transformers.tokenization_pegasus": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer.__init__": {
  "lineno": 26,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer._convert_id_to_token": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer._convert_token_to_id": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer._special_token_mask": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer.build_inputs_with_special_tokens": {
  "lineno": 86,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer.get_special_tokens_mask": {
  "lineno": 75,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer.get_vocab": {
  "lineno": 60,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer.num_special_tokens_to_add": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer.prepare_seq2seq_batch": {
  "lineno": 106,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer.vocab_size": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_phobert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_phobert.PhobertTokenizer": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.__init__": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer._convert_id_to_token": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer._convert_token_to_id": {
  "lineno": 302,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer._tokenize": {
  "lineno": 292,
  "symbols_in_volume": [
   "re.findall"
  ],
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.add_from_file": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.bpe": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.build_inputs_with_special_tokens": {
  "lineno": 159,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.convert_tokens_to_string": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.create_token_type_ids_from_sequences": {
  "lineno": 217,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.get_special_tokens_mask": {
  "lineno": 186,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.get_vocab": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.save_vocabulary": {
  "lineno": 315,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isdir",
   "os.path.join",
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.vocab_size": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_phobert.get_pairs": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_rag": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_rag.RagTokenizer": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_rag.RagTokenizer.__call__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_rag.RagTokenizer.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_rag.RagTokenizer.batch_decode": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_rag.RagTokenizer.from_pretrained": {
  "lineno": 42,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.tokenization_rag.RagTokenizer.prepare_seq2seq_batch": {
  "lineno": 64,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_rag.RagTokenizer.save_pretrained": {
  "lineno": 33,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.tokenization_reformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_reformer.ReformerTokenizer": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_reformer.ReformerTokenizer.__getstate__": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer.__init__": {
  "lineno": 86,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer.__setstate__": {
  "lineno": 131,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer._convert_id_to_token": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer._convert_token_to_id": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer._tokenize": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer.convert_tokens_to_string": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer.get_vocab": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer.save_vocabulary": {
  "lineno": 167,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isdir",
   "os.path.join",
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer.vocab_size": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_retribert": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_retribert.RetriBertTokenizer": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_retribert.RetriBertTokenizerFast": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_roberta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_roberta.RobertaTokenizer": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_roberta.RobertaTokenizer.__init__": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_roberta.RobertaTokenizer.build_inputs_with_special_tokens": {
  "lineno": 177,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_roberta.RobertaTokenizer.create_token_type_ids_from_sequences": {
  "lineno": 233,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_roberta.RobertaTokenizer.get_special_tokens_mask": {
  "lineno": 203,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_roberta.RobertaTokenizer.prepare_for_tokenization": {
  "lineno": 256,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_roberta.RobertaTokenizerFast": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_roberta.RobertaTokenizerFast.__init__": {
  "lineno": 348,
  "symbols_in_volume": [
   "tokenizers.processors.RobertaProcessing"
  ],
  "type": "function"
 },
 "transformers.tokenization_roberta.RobertaTokenizerFast.build_inputs_with_special_tokens": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_roberta.RobertaTokenizerFast.create_token_type_ids_from_sequences": {
  "lineno": 400,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_t5": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_t5.T5Tokenizer": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_t5.T5Tokenizer.__getstate__": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.__init__": {
  "lineno": 102,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.__setstate__": {
  "lineno": 223,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer._add_eos_if_not_present": {
  "lineno": 181,
  "symbols_in_volume": [
   "typing.List",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer._convert_id_to_token": {
  "lineno": 252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer._convert_token_to_id": {
  "lineno": 244,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer._tokenize": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.build_inputs_with_special_tokens": {
  "lineno": 191,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.convert_tokens_to_string": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.get_special_tokens_mask": {
  "lineno": 151,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.get_vocab": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.prepare_seq2seq_batch": {
  "lineno": 286,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.save_vocabulary": {
  "lineno": 265,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isdir",
   "os.path.join",
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.vocab_size": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_transfo_xl.LMMultiFileIterator": {
  "lineno": 764,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.LMMultiFileIterator.__init__": {
  "lineno": 765,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMMultiFileIterator.__iter__": {
  "lineno": 785,
  "symbols_in_volume": [
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream": {
  "lineno": 777,
  "symbols_in_volume": [
   "numpy.random.shuffle"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator": {
  "lineno": 628,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.__init__": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.__iter__": {
  "lineno": 683,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.get_batch": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter": {
  "lineno": 671,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.random.random"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator.__init__": {
  "lineno": 688,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator.__iter__": {
  "lineno": 756,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream": {
  "lineno": 701,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.permutation"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator": {
  "lineno": 709,
  "symbols_in_volume": [
   "torch.LongTensor"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus": {
  "lineno": 796,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus.__init__": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus.build_corpus": {
  "lineno": 848,
  "symbols_in_volume": [
   "glob.glob",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained": {
  "lineno": 797,
  "symbols_in_volume": [
   "os.path.join",
   "torch.load",
   "torch.long",
   "torch.tensor"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus.get_iterator": {
  "lineno": 882,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.__init__": {
  "lineno": 160,
  "symbols_in_volume": [
   "collections.Counter",
   "re.compile",
   "sacremoses.MosesDetokenizer",
   "sacremoses.MosesPunctNormalizer",
   "sacremoses.MosesTokenizer",
   "torch.load"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer._build_from_file": {
  "lineno": 253,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer._compile_space_around_punctuation_pattern": {
  "lineno": 221,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_id_to_token": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_token_to_id": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer._tokenize": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_special": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_symbol": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.build_vocab": {
  "lineno": 292,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_to_tensor": {
  "lineno": 439,
  "symbols_in_volume": [
   "torch.LongTensor"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string": {
  "lineno": 431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_file": {
  "lineno": 226,
  "symbols_in_volume": [
   "os.path.exists"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_sents": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_file": {
  "lineno": 312,
  "symbols_in_volume": [
   "os.path.exists",
   "torch.cat"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_sents": {
  "lineno": 329,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.get_vocab": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline": {
  "lineno": 389,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_punct_norm": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.move_added_token": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.save_vocabulary": {
  "lineno": 268,
  "symbols_in_volume": [
   "os.path.isdir",
   "os.path.join",
   "torch.save"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.vocab_size": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizerFast": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizerFast.__init__": {
  "lineno": 578,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizerFast.save_pretrained": {
  "lineno": 619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl._TransfoXLDelimiterLookupTokenizer": {
  "lineno": 469,
  "symbols_in_volume": [
   "tokenizers.implementations.BaseTokenizer"
  ],
  "type": "class"
 },
 "transformers.tokenization_transfo_xl._TransfoXLDelimiterLookupTokenizer.__init__": {
  "lineno": 470,
  "symbols_in_volume": [
   "tokenizers.Tokenizer",
   "tokenizers.models.WordLevel",
   "tokenizers.normalizers.Lowercase",
   "tokenizers.normalizers.Sequence",
   "tokenizers.normalizers.Strip",
   "tokenizers.normalizers.unicode_normalizer_from_str",
   "tokenizers.pre_tokenizers.CharDelimiterSplit",
   "tokenizers.pre_tokenizers.WhitespaceSplit",
   "tokenizers.processors.BertProcessing",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.detokenize_numbers": {
  "lineno": 100,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.get_lm_corpus": {
  "lineno": 899,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pickle.load",
   "torch.load",
   "torch.save"
  ],
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.tokenize_numbers": {
  "lineno": 79,
  "symbols_in_volume": [
   "re.sub",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.__init__": {
  "lineno": 115,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.__len__": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._add_tokens": {
  "lineno": 162,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._batch_encode_plus": {
  "lineno": 486,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._batch_encode_plus.get_input_ids": {
  "lineno": 513,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._batch_prepare_for_model": {
  "lineno": 578,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._convert_id_to_token": {
  "lineno": 725,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._convert_token_to_id": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._convert_token_to_id_with_added_voc": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._encode_plus": {
  "lineno": 403,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._encode_plus.get_input_ids": {
  "lineno": 424,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._tokenize": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.convert_ids_to_tokens": {
  "lineno": 693,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.convert_tokens_to_ids": {
  "lineno": 370,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.convert_tokens_to_string": {
  "lineno": 728,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.decode": {
  "lineno": 742,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.get_added_vocab": {
  "lineno": 147,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.get_special_tokens_mask": {
  "lineno": 665,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.get_vocab": {
  "lineno": 135,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.is_fast": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.num_special_tokens_to_add": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.prepare_for_tokenization": {
  "lineno": 643,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.prepare_seq2seq_batch": {
  "lineno": 806,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.save_vocabulary": {
  "lineno": 789,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.tokenize": {
  "lineno": 238,
  "symbols_in_volume": [
   "re.escape",
   "re.sub",
   "typing.List",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.tokenize.split_on_token": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.tokenize.split_on_tokens": {
  "lineno": 330,
  "symbols_in_volume": [
   "itertools.chain.from_iterable"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.vocab_size": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils._is_control": {
  "lineno": 61,
  "symbols_in_volume": [
   "unicodedata.category"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils._is_end_of_word": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils._is_punctuation": {
  "lineno": 73,
  "symbols_in_volume": [
   "unicodedata.category"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils._is_start_of_word": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils._is_whitespace": {
  "lineno": 49,
  "symbols_in_volume": [
   "unicodedata.category"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.List",
   "typing.Tuple"
  ],
  "type": "module"
 },
 "transformers.tokenization_utils_base.BatchEncoding": {
  "lineno": 148,
  "symbols_in_volume": [
   "collections.UserDict"
  ],
  "type": "class"
 },
 "transformers.tokenization_utils_base.BatchEncoding.__getattr__": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.__getitem__": {
  "lineno": 196,
  "symbols_in_volume": [
   "tokenizers.Encoding",
   "typing.Any",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.__getstate__": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.__init__": {
  "lineno": 172,
  "symbols_in_volume": [
   "tokenizers.Encoding",
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Sequence",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.__setstate__": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.char_to_token": {
  "lineno": 401,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.char_to_word": {
  "lineno": 478,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.convert_to_tensors": {
  "lineno": 515,
  "symbols_in_volume": [
   "numpy.asarray",
   "tensorflow.constant",
   "torch.tensor",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.encodings": {
  "lineno": 242,
  "symbols_in_volume": [
   "tokenizers.Encoding",
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.is_fast": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.items": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.keys": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.to": {
  "lineno": 578,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.token_to_chars": {
  "lineno": 364,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.token_to_word": {
  "lineno": 281,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.tokens": {
  "lineno": 250,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.values": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.word_to_chars": {
  "lineno": 437,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.word_to_tokens": {
  "lineno": 320,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.words": {
  "lineno": 265,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.CharSpan": {
  "lineno": 122,
  "symbols_in_volume": [
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "transformers.tokenization_utils_base.ExplicitEnum": {
  "lineno": 75,
  "symbols_in_volume": [
   "enum.Enum"
  ],
  "type": "class"
 },
 "transformers.tokenization_utils_base.ExplicitEnum._missing_": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PaddingStrategy": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase": {
  "lineno": 1282,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Optional"
  ],
  "type": "class"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.__call__": {
  "lineno": 1859,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.__init__": {
  "lineno": 1297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase._batch_encode_plus": {
  "lineno": 2147,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase._encode_plus": {
  "lineno": 2053,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase._from_pretrained": {
  "lineno": 1430,
  "symbols_in_volume": [
   "json.load",
   "os.path.exists",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join",
   "tokenizers.AddedToken"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase._get_padding_truncation_strategies": {
  "lineno": 1741,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase._pad": {
  "lineno": 2606,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.batch_decode": {
  "lineno": 2677,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.batch_encode_plus": {
  "lineno": 2076,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.build_inputs_with_special_tokens": {
  "lineno": 2357,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.clean_up_tokenization": {
  "lineno": 2754,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.create_token_type_ids_from_sequences": {
  "lineno": 2337,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.decode": {
  "lineno": 2701,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.encode": {
  "lineno": 1686,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.encode_plus": {
  "lineno": 1983,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.from_pretrained": {
  "lineno": 1366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.get_special_tokens_mask": {
  "lineno": 2723,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.max_len": {
  "lineno": 1316,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.max_len_sentences_pair": {
  "lineno": 1354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.max_len_single_sentence": {
  "lineno": 1342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.num_special_tokens_to_add": {
  "lineno": 1738,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.pad": {
  "lineno": 2176,
  "symbols_in_volume": [
   "numpy.ndarray",
   "tensorflow.Tensor",
   "torch.Tensor",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.pad.to_py_obj": {
  "lineno": 2280,
  "symbols_in_volume": [
   "numpy.ndarray",
   "tensorflow.Tensor",
   "torch.Tensor"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.prepare_for_model": {
  "lineno": 2377,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.save_pretrained": {
  "lineno": 1624,
  "symbols_in_volume": [
   "copy.deepcopy",
   "json.dumps",
   "os.makedirs",
   "os.path.isfile",
   "os.path.join",
   "tokenizers.AddedToken",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.truncate_sequences": {
  "lineno": 2507,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin": {
  "lineno": 594,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.__init__": {
  "lineno": 633,
  "symbols_in_volume": [
   "tokenizers.AddedToken"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.add_special_tokens": {
  "lineno": 673,
  "symbols_in_volume": [
   "tokenizers.AddedToken",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.add_tokens": {
  "lineno": 740,
  "symbols_in_volume": [
   "tokenizers.AddedToken",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.additional_special_tokens": {
  "lineno": 893,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.additional_special_tokens_ids": {
  "lineno": 976,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.all_special_ids": {
  "lineno": 1042,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.all_special_tokens": {
  "lineno": 1016,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.all_special_tokens_extended": {
  "lineno": 1026,
  "symbols_in_volume": [
   "collections.OrderedDict.fromkeys",
   "tokenizers.AddedToken",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.bos_token": {
  "lineno": 865,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.bos_token_id": {
  "lineno": 897,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.cls_token": {
  "lineno": 885,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.cls_token_id": {
  "lineno": 954,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.eos_token": {
  "lineno": 869,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.eos_token_id": {
  "lineno": 907,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.mask_token": {
  "lineno": 889,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.mask_token_id": {
  "lineno": 966,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.pad_token": {
  "lineno": 881,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.pad_token_id": {
  "lineno": 937,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.pad_token_type_id": {
  "lineno": 947,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.sanitize_special_tokens": {
  "lineno": 661,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.sep_token": {
  "lineno": 877,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.sep_token_id": {
  "lineno": 927,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.special_tokens_map": {
  "lineno": 984,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.special_tokens_map_extended": {
  "lineno": 999,
  "symbols_in_volume": [
   "tokenizers.AddedToken",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.unk_token": {
  "lineno": 873,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.unk_token_id": {
  "lineno": 917,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_base.TensorType": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_utils_base.TokenSpan": {
  "lineno": 135,
  "symbols_in_volume": [
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "transformers.tokenization_utils_base.TruncationStrategy": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_utils_fast": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.__init__": {
  "lineno": 67,
  "symbols_in_volume": [
   "tokenizers.implementations.BaseTokenizer"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.__len__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast._add_tokens": {
  "lineno": 208,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast._batch_encode_plus": {
  "lineno": 322,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast._convert_encoding": {
  "lineno": 132,
  "symbols_in_volume": [
   "collections.defaultdict",
   "tokenizers.Encoding",
   "typing.Any",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast._convert_id_to_token": {
  "lineno": 205,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast._convert_token_to_id_with_added_voc": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast._encode_plus": {
  "lineno": 427,
  "symbols_in_volume": [
   "typing.Optional",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.backend_tokenizer": {
  "lineno": 118,
  "symbols_in_volume": [
   "tokenizers.implementations.BaseTokenizer"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.convert_ids_to_tokens": {
  "lineno": 232,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.convert_tokens_to_ids": {
  "lineno": 177,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.decode": {
  "lineno": 489,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.decoder": {
  "lineno": 125,
  "symbols_in_volume": [
   "tokenizers.decoders.Decoder"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.get_added_vocab": {
  "lineno": 100,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.get_vocab": {
  "lineno": 88,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.is_fast": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.num_special_tokens_to_add": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.save_vocabulary": {
  "lineno": 517,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isdir",
   "os.path.split",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.set_truncation_and_padding": {
  "lineno": 275,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.tokenize": {
  "lineno": 258,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.vocab_size": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_xlm.XLMTokenizer": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_xlm.XLMTokenizer.__init__": {
  "lineno": 589,
  "symbols_in_volume": [
   "json.load"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer._convert_id_to_token": {
  "lineno": 838,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer._convert_token_to_id": {
  "lineno": 834,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer._tokenize": {
  "lineno": 744,
  "symbols_in_volume": [
   "jieba",
   "jieba.cut",
   "pythainlp.tokenize.word_tokenize",
   "sys.modules",
   "sys.modules.word_tokenize"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.bpe": {
  "lineno": 700,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.build_inputs_with_special_tokens": {
  "lineno": 847,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.convert_tokens_to_string": {
  "lineno": 842,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.create_token_type_ids_from_sequences": {
  "lineno": 911,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.get_special_tokens_mask": {
  "lineno": 875,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.get_vocab": {
  "lineno": 697,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.ja_tokenize": {
  "lineno": 673,
  "symbols_in_volume": [
   "Mykytea.Mykytea",
   "os.path.expanduser"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.moses_pipeline": {
  "lineno": 667,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.moses_punct_norm": {
  "lineno": 651,
  "symbols_in_volume": [
   "sacremoses.MosesPunctNormalizer"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.moses_tokenize": {
  "lineno": 659,
  "symbols_in_volume": [
   "sacremoses.MosesTokenizer"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.save_vocabulary": {
  "lineno": 941,
  "symbols_in_volume": [
   "json.dumps",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.vocab_size": {
  "lineno": 693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm.get_pairs": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm.lowercase_and_remove_accent": {
  "lineno": 443,
  "symbols_in_volume": [
   "unicodedata.category",
   "unicodedata.normalize"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm.remove_non_printing_char": {
  "lineno": 503,
  "symbols_in_volume": [
   "unicodedata.category"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm.replace_unicode_punct": {
  "lineno": 460,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm.romanian_preprocessing": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.__getstate__": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.__init__": {
  "lineno": 106,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.__setstate__": {
  "lineno": 162,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer._convert_id_to_token": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer._convert_token_to_id": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer._tokenize": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.build_inputs_with_special_tokens": {
  "lineno": 175,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.convert_tokens_to_string": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.create_token_type_ids_from_sequences": {
  "lineno": 233,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.get_special_tokens_mask": {
  "lineno": 202,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.get_vocab": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.save_vocabulary": {
  "lineno": 290,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isdir",
   "os.path.join",
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.vocab_size": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlnet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.__getstate__": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.__init__": {
  "lineno": 113,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.__setstate__": {
  "lineno": 174,
  "symbols_in_volume": [
   "sentencepiece.SentencePieceProcessor"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer._convert_id_to_token": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer._convert_token_to_id": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer._tokenize": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.build_inputs_with_special_tokens": {
  "lineno": 239,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.convert_tokens_to_string": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.create_token_type_ids_from_sequences": {
  "lineno": 296,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.get_special_tokens_mask": {
  "lineno": 265,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.get_vocab": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.preprocess_text": {
  "lineno": 187,
  "symbols_in_volume": [
   "unicodedata.combining",
   "unicodedata.normalize"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.save_vocabulary": {
  "lineno": 327,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.isdir",
   "os.path.join",
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.vocab_size": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.trainer": {
  "lineno": null,
  "symbols_in_volume": [
   "packaging.version.parse",
   "torch.__version__"
  ],
  "type": "module"
 },
 "transformers.trainer.SequentialDistributedSampler": {
  "lineno": 128,
  "symbols_in_volume": [
   "torch.utils.data.sampler.Sampler"
  ],
  "type": "class"
 },
 "transformers.trainer.SequentialDistributedSampler.__init__": {
  "lineno": 140,
  "symbols_in_volume": [
   "math.ceil",
   "torch.distributed.get_rank",
   "torch.distributed.get_world_size",
   "torch.distributed.is_available"
  ],
  "type": "function"
 },
 "transformers.trainer.SequentialDistributedSampler.__iter__": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.trainer.SequentialDistributedSampler.__len__": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.trainer.Trainer": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.trainer.Trainer.__init__": {
  "lineno": 223,
  "symbols_in_volume": [
   "datasets.Dataset",
   "os.makedirs",
   "tensorboardX.SummaryWriter",
   "torch.cuda.amp.GradScaler",
   "torch.optim.Optimizer",
   "torch.optim.lr_scheduler.LambdaLR",
   "torch.utils.data.dataset.Dataset",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer._actual_model": {
  "lineno": 1533,
  "symbols_in_volume": [
   "torch.nn.DataParallel",
   "torch.nn.modules.Module",
   "torch.nn.parallel.DistributedDataParallel",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer._get_eval_sampler": {
  "lineno": 369,
  "symbols_in_volume": [
   "torch.utils.data.IterableDataset",
   "torch.utils.data.dataset.Dataset",
   "torch.utils.data.sampler.Sampler",
   "torch.utils.data.sampler.SequentialSampler",
   "torch_xla.core.xla_model.get_ordinal",
   "torch_xla.core.xla_model.xrt_world_size",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer._get_train_sampler": {
  "lineno": 335,
  "symbols_in_volume": [
   "torch.utils.data.IterableDataset",
   "torch.utils.data.distributed.DistributedSampler",
   "torch.utils.data.sampler.RandomSampler",
   "torch.utils.data.sampler.Sampler",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer._hp_search_setup": {
  "lineno": 563,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer._prepare_inputs": {
  "lineno": 1067,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer._remove_unused_columns": {
  "lineno": 319,
  "symbols_in_volume": [
   "inspect.signature",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer._report_to_hp_search": {
  "lineno": 581,
  "symbols_in_volume": [
   "optuna.TrialPruned",
   "ray.tune.report",
   "typing.Any",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer._rotate_checkpoints": {
  "lineno": 1278,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer._save": {
  "lineno": 1223,
  "symbols_in_volume": [
   "json.dump",
   "os.makedirs",
   "os.path.join",
   "torch.save",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer._save_tpu": {
  "lineno": 1200,
  "symbols_in_volume": [
   "json.dump",
   "os.makedirs",
   "os.path.join",
   "torch.save",
   "torch_xla.core.xla_model.is_master_ordinal",
   "torch_xla.core.xla_model.rendezvous",
   "torch_xla.core.xla_model.save",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer._save_training": {
  "lineno": 869,
  "symbols_in_volume": [
   "numpy.greater",
   "numpy.less",
   "os.path.join",
   "ray.tune.get_trial_id",
   "torch.save",
   "torch_xla.core.xla_model.rendezvous",
   "torch_xla.core.xla_model.save",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer._setup_loggers": {
  "lineno": 544,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer._sorted_checkpoints": {
  "lineno": 1254,
  "symbols_in_volume": [
   "os.path.getmtime",
   "pathlib.Path",
   "re.match",
   "typing.List"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer._tune_save_checkpoint": {
  "lineno": 596,
  "symbols_in_volume": [
   "os.path.join",
   "ray.tune.checkpoint_dir",
   "torch.save"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.compute_loss": {
  "lineno": 1131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.trainer.Trainer.create_optimizer_and_scheduler": {
  "lineno": 436,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.trainer.Trainer.evaluate": {
  "lineno": 1293,
  "symbols_in_volume": [
   "torch.utils.data.dataset.Dataset",
   "torch_xla.core.xla_model.master_print",
   "torch_xla.debug.metrics.metrics_report",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.floating_point_ops": {
  "lineno": 1509,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Dict",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.get_eval_dataloader": {
  "lineno": 379,
  "symbols_in_volume": [
   "datasets.Dataset",
   "torch.utils.data.dataloader.DataLoader",
   "torch.utils.data.dataset.Dataset",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.get_test_dataloader": {
  "lineno": 409,
  "symbols_in_volume": [
   "datasets.Dataset",
   "torch.utils.data.dataloader.DataLoader",
   "torch.utils.data.dataset.Dataset"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.get_train_dataloader": {
  "lineno": 347,
  "symbols_in_volume": [
   "torch.utils.data.dataloader.DataLoader"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.hyperparameter_search": {
  "lineno": 923,
  "symbols_in_volume": [
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.is_local_master": {
  "lineno": 1144,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.is_local_process_zero": {
  "lineno": 1156,
  "symbols_in_volume": [
   "torch_xla.core.xla_model.is_master_ordinal"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.is_world_master": {
  "lineno": 1166,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.is_world_process_zero": {
  "lineno": 1178,
  "symbols_in_volume": [
   "torch.distributed.get_rank",
   "torch_xla.core.xla_model.is_master_ordinal"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.log": {
  "lineno": 1002,
  "symbols_in_volume": [
   "comet_ml.config.get_global_experiment",
   "tqdm.auto.tqdm",
   "typing.Dict",
   "typing.Optional",
   "wandb.log",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.num_examples": {
  "lineno": 538,
  "symbols_in_volume": [
   "torch.utils.data.dataloader.DataLoader"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.predict": {
  "lineno": 1322,
  "symbols_in_volume": [
   "torch.utils.data.dataset.Dataset"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.prediction_loop": {
  "lineno": 1347,
  "symbols_in_volume": [
   "numpy.mean",
   "torch.Tensor",
   "torch.cat",
   "torch.nn.DataParallel",
   "torch.tensor",
   "torch.utils.data.dataloader.DataLoader",
   "torch_xla.core.xla_model.mesh_reduce",
   "torch_xla.distributed.parallel_loader.ParallelLoader",
   "tqdm.auto.tqdm",
   "typing.List",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.prediction_step": {
  "lineno": 1454,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.nn.Module",
   "torch.no_grad",
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.save_model": {
  "lineno": 1188,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.setup_comet": {
  "lineno": 507,
  "symbols_in_volume": [
   "comet_ml.Experiment",
   "comet_ml.OfflineExperiment",
   "os.getenv"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.setup_wandb": {
  "lineno": 466,
  "symbols_in_volume": [
   "os.getenv",
   "wandb.init",
   "wandb.watch",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.store_flos": {
  "lineno": 1244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.trainer.Trainer.train": {
  "lineno": 607,
  "symbols_in_volume": [
   "apex.amp.initialize",
   "apex.amp.master_params",
   "numpy.ceil",
   "os.path.isfile",
   "os.path.join",
   "os.path.sep",
   "packaging.version.parse",
   "torch.__version__",
   "torch.distributed.get_world_size",
   "torch.load",
   "torch.nn.DataParallel",
   "torch.nn.parallel.DistributedDataParallel",
   "torch.nn.utils.clip_grad_norm_",
   "torch.tensor",
   "torch.utils.data.dataloader.DataLoader",
   "torch.utils.data.distributed.DistributedSampler",
   "torch_xla.core.xla_model.master_print",
   "torch_xla.core.xla_model.optimizer_step",
   "torch_xla.core.xla_model.xrt_world_size",
   "torch_xla.debug.metrics.metrics_report",
   "torch_xla.distributed.parallel_loader.ParallelLoader",
   "tqdm.auto.tqdm",
   "tqdm.auto.trange",
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Union",
   "warnings.catch_warnings"
  ],
  "type": "function"
 },
 "transformers.trainer.Trainer.training_step": {
  "lineno": 1081,
  "symbols_in_volume": [
   "apex.amp.scale_loss",
   "torch.Tensor",
   "torch.cuda.amp.autocast",
   "torch.nn.Module",
   "typing.Any",
   "typing.Dict",
   "typing.Union",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.trainer.get_tpu_sampler": {
  "lineno": 176,
  "symbols_in_volume": [
   "torch.utils.data.dataset.Dataset",
   "torch.utils.data.distributed.DistributedSampler",
   "torch.utils.data.sampler.RandomSampler",
   "torch_xla.core.xla_model.get_ordinal",
   "torch_xla.core.xla_model.xrt_world_size"
  ],
  "type": "function"
 },
 "transformers.trainer.reissue_pt_warnings": {
  "lineno": 105,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.trainer.torch_distributed_zero_first": {
  "lineno": 113,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "torch.distributed.barrier"
  ],
  "type": "function"
 },
 "transformers.trainer_tf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.trainer_tf.TFTrainer": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.trainer_tf.TFTrainer.__init__": {
  "lineno": 68,
  "symbols_in_volume": [
   "os.environ.get",
   "packaging.version.parse",
   "tensorflow.__version__",
   "tensorflow.data.Dataset",
   "tensorflow.keras.optimizers.Optimizer",
   "tensorflow.keras.optimizers.schedules.LearningRateSchedule",
   "tensorflow.summary.SummaryWriter",
   "tensorflow.summary.create_file_writer",
   "typing.Callable",
   "typing.Dict",
   "typing.Optional",
   "typing.Tuple",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer._compute_nb_instances": {
  "lineno": 691,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.concat",
   "tensorflow.int32",
   "tensorflow.python.distribute.values.PerReplica",
   "tensorflow.reduce_sum"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer._get_step_inputs": {
  "lineno": 702,
  "symbols_in_volume": [
   "tensorflow.python.distribute.values.PerReplica"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.apply_gradients": {
  "lineno": 648,
  "symbols_in_volume": [
   "tensorflow.clip_by_value",
   "tensorflow.concat",
   "tensorflow.range"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.create_optimizer_and_scheduler": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.distributed_prediction_steps": {
  "lineno": 460,
  "symbols_in_volume": [
   "tensorflow.function"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.distributed_training_steps": {
  "lineno": 682,
  "symbols_in_volume": [
   "tensorflow.function"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.evaluate": {
  "lineno": 417,
  "symbols_in_volume": [
   "tensorflow.data.Dataset",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.get_eval_tfdataset": {
  "lineno": 151,
  "symbols_in_volume": [
   "math.ceil",
   "math.floor",
   "tensorflow.data.Dataset",
   "tensorflow.data.experimental.AUTOTUNE",
   "tensorflow.data.experimental.cardinality",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.get_test_tfdataset": {
  "lineno": 184,
  "symbols_in_volume": [
   "math.ceil",
   "math.floor",
   "tensorflow.data.Dataset",
   "tensorflow.data.experimental.AUTOTUNE",
   "tensorflow.data.experimental.cardinality"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.get_train_tfdataset": {
  "lineno": 127,
  "symbols_in_volume": [
   "tensorflow.data.Dataset",
   "tensorflow.data.experimental.AUTOTUNE",
   "tensorflow.data.experimental.cardinality"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.log": {
  "lineno": 379,
  "symbols_in_volume": [
   "comet_ml.config.get_global_experiment",
   "tensorflow.summary.scalar",
   "typing.Dict",
   "wandb.log",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.predict": {
  "lineno": 751,
  "symbols_in_volume": [
   "tensorflow.data.Dataset"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.prediction_loop": {
  "lineno": 286,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.ndarray",
   "tensorflow.data.Dataset",
   "tensorflow.keras.metrics.Sum",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.prediction_step": {
  "lineno": 445,
  "symbols_in_volume": [
   "tensorflow.Tensor",
   "tensorflow.cast"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.run_model": {
  "lineno": 715,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.save_model": {
  "lineno": 778,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.setup_comet": {
  "lineno": 256,
  "symbols_in_volume": [
   "comet_ml.Experiment",
   "comet_ml.OfflineExperiment",
   "os.getenv"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.setup_wandb": {
  "lineno": 232,
  "symbols_in_volume": [
   "os.getenv",
   "wandb.init",
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.train": {
  "lineno": 470,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "math.ceil",
   "math.floor",
   "os.path.join",
   "tensorflow.keras.metrics.Sum",
   "tensorflow.summary.experimental.set_step",
   "tensorflow.summary.text",
   "tensorflow.summary.trace_export",
   "tensorflow.summary.trace_on",
   "tensorflow.train.Checkpoint",
   "tensorflow.train.CheckpointManager"
  ],
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.training_step": {
  "lineno": 627,
  "symbols_in_volume": [
   "tensorflow.cast",
   "tensorflow.gradients",
   "tensorflow.zeros_like"
  ],
  "type": "function"
 },
 "transformers.trainer_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.trainer_utils.BestRun": {
  "lineno": 72,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "transformers.trainer_utils.EvalPrediction": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.NamedTuple",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "class"
 },
 "transformers.trainer_utils.EvaluationStrategy": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.trainer_utils.HPSearchBackend": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "transformers.trainer_utils.PredictionOutput": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.ndarray",
   "typing.Dict",
   "typing.NamedTuple",
   "typing.Optional",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "class"
 },
 "transformers.trainer_utils.TrainOutput": {
  "lineno": 58,
  "symbols_in_volume": [
   "typing.NamedTuple"
  ],
  "type": "class"
 },
 "transformers.trainer_utils.TrainerState": {
  "lineno": 221,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "typing.Optional"
  ],
  "type": "class"
 },
 "transformers.trainer_utils.TrainerState.load_from_json": {
  "lineno": 236,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "transformers.trainer_utils.TrainerState.save_to_json": {
  "lineno": 230,
  "symbols_in_volume": [
   "dataclasses.asdict",
   "json.dumps"
  ],
  "type": "function"
 },
 "transformers.trainer_utils.default_compute_objective": {
  "lineno": 91,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.trainer_utils.default_hp_space_optuna": {
  "lineno": 107,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.trainer_utils.default_hp_space_ray": {
  "lineno": 119,
  "symbols_in_volume": [
   "ray.tune.choice",
   "ray.tune.loguniform",
   "ray.tune.uniform",
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.trainer_utils.distributed_broadcast_scalars": {
  "lineno": 201,
  "symbols_in_volume": [
   "torch.Tensor",
   "torch.cat",
   "torch.distributed.all_gather",
   "torch.distributed.get_world_size",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "transformers.trainer_utils.distributed_concat": {
  "lineno": 182,
  "symbols_in_volume": [
   "torch.cat",
   "torch.distributed.all_gather",
   "torch.distributed.get_world_size",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.trainer_utils.nested_concat": {
  "lineno": 144,
  "symbols_in_volume": [
   "torch.cat"
  ],
  "type": "function"
 },
 "transformers.trainer_utils.nested_detach": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.trainer_utils.nested_numpify": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.trainer_utils.nested_xla_mesh_reduce": {
  "lineno": 171,
  "symbols_in_volume": [
   "torch.cat",
   "torch_xla.core.xla_model.mesh_reduce"
  ],
  "type": "function"
 },
 "transformers.trainer_utils.set_seed": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.random.seed",
   "random.seed",
   "tensorflow.random.set_seed",
   "torch.cuda.manual_seed_all",
   "torch.manual_seed"
  ],
  "type": "function"
 },
 "transformers.training_args": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.training_args.TrainingArguments": {
  "lineno": 35,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field",
   "typing.List",
   "typing.Optional"
  ],
  "type": "class"
 },
 "transformers.training_args.TrainingArguments.__post_init__": {
  "lineno": 323,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.training_args.TrainingArguments._setup_devices": {
  "lineno": 371,
  "symbols_in_volume": [
   "torch.cuda.device_count",
   "torch.cuda.is_available",
   "torch.cuda.set_device",
   "torch.device",
   "torch.distributed.init_process_group",
   "torch_xla.core.xla_model.xla_device",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.training_args.TrainingArguments.device": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.training_args.TrainingArguments.eval_batch_size": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.training_args.TrainingArguments.n_gpu": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.training_args.TrainingArguments.to_dict": {
  "lineno": 422,
  "symbols_in_volume": [
   "dataclasses.asdict",
   "enum.Enum"
  ],
  "type": "function"
 },
 "transformers.training_args.TrainingArguments.to_json_string": {
  "lineno": 432,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "transformers.training_args.TrainingArguments.to_sanitized_dict": {
  "lineno": 438,
  "symbols_in_volume": [
   "torch.Tensor",
   "typing.Any",
   "typing.Dict"
  ],
  "type": "function"
 },
 "transformers.training_args.TrainingArguments.train_batch_size": {
  "lineno": 345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.training_args.default_logdir": {
  "lineno": 24,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "os.path.join",
   "socket.gethostname"
  ],
  "type": "function"
 },
 "transformers.training_args_tf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.training_args_tf.TFTrainingArguments": {
  "lineno": 16,
  "symbols_in_volume": [
   "dataclasses.dataclass",
   "dataclasses.field"
  ],
  "type": "class"
 },
 "transformers.training_args_tf.TFTrainingArguments._setup_strategy": {
  "lineno": 117,
  "symbols_in_volume": [
   "tensorflow.config.experimental_connect_to_cluster",
   "tensorflow.config.list_physical_devices",
   "tensorflow.config.optimizer.set_jit",
   "tensorflow.distribute.MirroredStrategy",
   "tensorflow.distribute.OneDeviceStrategy",
   "tensorflow.distribute.cluster_resolver.TPUClusterResolver",
   "tensorflow.distribute.experimental.TPUStrategy",
   "tensorflow.keras.mixed_precision.experimental.Policy",
   "tensorflow.keras.mixed_precision.experimental.set_policy",
   "tensorflow.tpu.experimental.initialize_tpu_system",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "transformers.training_args_tf.TFTrainingArguments.eval_batch_size": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.training_args_tf.TFTrainingArguments.n_gpu": {
  "lineno": 208,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "transformers.training_args_tf.TFTrainingArguments.n_replicas": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.training_args_tf.TFTrainingArguments.strategy": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.training_args_tf.TFTrainingArguments.train_batch_size": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "transformers.utils.logging": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.CRITICAL",
   "logging.DEBUG",
   "logging.ERROR",
   "logging.Handler",
   "logging.INFO",
   "logging.WARNING",
   "threading.Lock",
   "typing.Optional"
  ],
  "type": "module"
 },
 "transformers.utils.logging._configure_library_root_logger": {
  "lineno": 72,
  "symbols_in_volume": [
   "logging.StreamHandler"
  ],
  "type": "function"
 },
 "transformers.utils.logging._get_default_logging_level": {
  "lineno": 45,
  "symbols_in_volume": [
   "logging.getLogger",
   "os.getenv"
  ],
  "type": "function"
 },
 "transformers.utils.logging._get_library_name": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.utils.logging._get_library_root_logger": {
  "lineno": 67,
  "symbols_in_volume": [
   "logging.Logger",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "transformers.utils.logging._reset_library_root_logger": {
  "lineno": 89,
  "symbols_in_volume": [
   "logging.NOTSET"
  ],
  "type": "function"
 },
 "transformers.utils.logging.disable_default_handler": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.utils.logging.disable_propagation": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.utils.logging.enable_default_handler": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.utils.logging.enable_explicit_format": {
  "lineno": 215,
  "symbols_in_volume": [
   "logging.Formatter"
  ],
  "type": "function"
 },
 "transformers.utils.logging.enable_propagation": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.utils.logging.get_logger": {
  "lineno": 103,
  "symbols_in_volume": [
   "logging.Logger",
   "logging.getLogger",
   "typing.Optional"
  ],
  "type": "function"
 },
 "transformers.utils.logging.get_verbosity": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.utils.logging.reset_format": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.utils.logging.set_verbosity": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "transformers.utils.logging.set_verbosity_debug": {
  "lineno": 168,
  "symbols_in_volume": [
   "logging.DEBUG"
  ],
  "type": "function"
 },
 "transformers.utils.logging.set_verbosity_error": {
  "lineno": 173,
  "symbols_in_volume": [
   "logging.ERROR"
  ],
  "type": "function"
 },
 "transformers.utils.logging.set_verbosity_info": {
  "lineno": 158,
  "symbols_in_volume": [
   "logging.INFO"
  ],
  "type": "function"
 },
 "transformers.utils.logging.set_verbosity_warning": {
  "lineno": 163,
  "symbols_in_volume": [
   "logging.WARNING"
  ],
  "type": "function"
 }
}