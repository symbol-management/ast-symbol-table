{
 "transformers": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_sklearn_available",
    "is_tf_available",
    "is_torch_available",
    "transformers.logger",
    "transformers.logging"
   ]
  },
  "type": "module"
 },
 "transformers.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.__main__.main"
   ]
  },
  "type": "module"
 },
 "transformers.__main__.main": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "ImportError",
    "convert_gpt2_checkpoint_to_pytorch",
    "convert_openai_checkpoint_to_pytorch",
    "convert_tf_checkpoint_to_pytorch",
    "convert_transfo_xl_checkpoint_to_pytorch",
    "convert_xlm_checkpoint_to_pytorch",
    "convert_xlnet_checkpoint_to_pytorch",
    "len",
    "print",
    "transformers.__main__.sys"
   ]
  },
  "type": "function"
 },
 "transformers.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "transformers.absl.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "transformers.configuration_auto": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.configuration_auto.logging"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_auto.AutoConfig": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_auto.AutoConfig.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_auto.AutoConfig.from_pretrained": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_auto.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.configuration_auto.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.configuration_auto.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.configuration_auto.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.configuration_auto.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.configuration_auto.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.configuration_bert": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.configuration_bert.logging"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_bert.BERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.configuration_bert.BertConfig": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "transformers.configuration_bert.BERT_PRETRAINED_CONFIG_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_bert.BertConfig.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "io.open",
    "isinstance",
    "str",
    "super",
    "transformers.configuration_bert.BertConfig",
    "transformers.configuration_bert.json",
    "transformers.configuration_bert.sys"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_bert.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.configuration_bert.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.configuration_bert.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.configuration_bert.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.configuration_bert.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.configuration_bert.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.configuration_bert.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.configuration_bert.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.configuration_bert.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.configuration_ctrl": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.configuration_ctrl.logging"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_ctrl.CTRLConfig": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "transformers.configuration_ctrl.CTRL_PRETRAINED_CONFIG_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_ctrl.CTRLConfig.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "io.open",
    "isinstance",
    "str",
    "super",
    "transformers.configuration_ctrl.CTRLConfig",
    "transformers.configuration_ctrl.json",
    "transformers.configuration_ctrl.sys"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_ctrl.CTRLConfig.hidden_size": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_ctrl.CTRLConfig.max_position_embeddings": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_ctrl.CTRLConfig.num_attention_heads": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_ctrl.CTRLConfig.num_hidden_layers": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_ctrl.CTRL_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.configuration_ctrl.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.configuration_ctrl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.configuration_ctrl.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.configuration_ctrl.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.configuration_ctrl.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.configuration_ctrl.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.configuration_ctrl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.configuration_ctrl.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.configuration_ctrl.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.configuration_distilbert": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.configuration_distilbert.logging"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_distilbert.DISTILBERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.configuration_distilbert.DistilBertConfig": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "transformers.configuration_distilbert.DISTILBERT_PRETRAINED_CONFIG_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_distilbert.DistilBertConfig.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "io.open",
    "isinstance",
    "str",
    "super",
    "transformers.configuration_distilbert.DistilBertConfig",
    "transformers.configuration_distilbert.json",
    "transformers.configuration_distilbert.sys"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_distilbert.DistilBertConfig.hidden_size": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_distilbert.DistilBertConfig.num_attention_heads": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_distilbert.DistilBertConfig.num_hidden_layers": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_distilbert.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.configuration_distilbert.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.configuration_distilbert.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.configuration_distilbert.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.configuration_distilbert.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.configuration_distilbert.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.configuration_distilbert.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.configuration_distilbert.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.configuration_distilbert.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.configuration_gpt2": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.configuration_gpt2.logging"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_gpt2.GPT2Config": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "transformers.configuration_gpt2.GPT2_PRETRAINED_CONFIG_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_gpt2.GPT2Config.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "io.open",
    "isinstance",
    "str",
    "super",
    "transformers.configuration_gpt2.GPT2Config",
    "transformers.configuration_gpt2.json",
    "transformers.configuration_gpt2.sys"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_gpt2.GPT2Config.hidden_size": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_gpt2.GPT2Config.max_position_embeddings": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_gpt2.GPT2Config.num_attention_heads": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_gpt2.GPT2Config.num_hidden_layers": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_gpt2.GPT2_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.configuration_gpt2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.configuration_gpt2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.configuration_gpt2.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.configuration_gpt2.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.configuration_gpt2.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.configuration_gpt2.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.configuration_gpt2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.configuration_gpt2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.configuration_gpt2.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.configuration_openai": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.configuration_openai.logging"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_openai.OPENAI_GPT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.configuration_openai.OpenAIGPTConfig": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "transformers.configuration_openai.OPENAI_GPT_PRETRAINED_CONFIG_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "io.open",
    "isinstance",
    "str",
    "super",
    "transformers.configuration_openai.OpenAIGPTConfig",
    "transformers.configuration_openai.json",
    "transformers.configuration_openai.sys"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.hidden_size": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.max_position_embeddings": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.num_attention_heads": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.num_hidden_layers": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_openai.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.configuration_openai.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.configuration_openai.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.configuration_openai.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.configuration_openai.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.configuration_openai.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.configuration_openai.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.configuration_openai.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.configuration_openai.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.configuration_roberta": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.configuration_roberta.logging"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_roberta.ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.configuration_roberta.RobertaConfig": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "transformers.configuration_roberta.ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_roberta.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.configuration_roberta.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.configuration_roberta.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.configuration_roberta.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.configuration_roberta.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.configuration_roberta.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.configuration_transfo_xl": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.configuration_transfo_xl.logging"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_transfo_xl.TRANSFO_XL_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "transformers.configuration_transfo_xl.TRANSFO_XL_PRETRAINED_CONFIG_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "io.open",
    "isinstance",
    "len",
    "str",
    "super",
    "transformers.configuration_transfo_xl.TransfoXLConfig",
    "transformers.configuration_transfo_xl.json",
    "transformers.configuration_transfo_xl.sys"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.hidden_size": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.max_position_embeddings": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.num_attention_heads": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.num_hidden_layers": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.vocab_size": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "transformers.configuration_transfo_xl.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.configuration_transfo_xl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.configuration_transfo_xl.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.configuration_transfo_xl.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.configuration_transfo_xl.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.configuration_transfo_xl.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.configuration_transfo_xl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.configuration_transfo_xl.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.configuration_transfo_xl.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.configuration_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.configuration_utils.logging"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_utils.PretrainedConfig": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_utils.PretrainedConfig.__eq__": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.__repr__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.from_dict": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "setattr"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.from_json_file": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "classmethod",
    "cls.from_dict",
    "io.open",
    "transformers.configuration_utils.json"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.from_pretrained": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "EnvironmentError",
    "cached_path",
    "classmethod",
    "dict",
    "hasattr",
    "int",
    "setattr",
    "str",
    "transformers.configuration_utils.logger",
    "transformers.configuration_utils.os"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.save_pretrained": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "transformers.configuration_utils.logger",
    "transformers.configuration_utils.os"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.to_dict": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "transformers.configuration_utils.copy"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.to_json_file": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "io.open"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.to_json_string": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "transformers.configuration_utils.json"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.configuration_utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.configuration_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.configuration_utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.configuration_utils.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.configuration_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.configuration_utils.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.configuration_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.configuration_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.configuration_utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.configuration_xlm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.configuration_xlm.logging"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_xlm.XLMConfig": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "transformers.configuration_xlm.XLM_PRETRAINED_CONFIG_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_xlm.XLMConfig.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "io.open",
    "isinstance",
    "str",
    "super",
    "transformers.configuration_xlm.XLMConfig",
    "transformers.configuration_xlm.json",
    "transformers.configuration_xlm.sys"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlm.XLMConfig.hidden_size": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlm.XLMConfig.num_attention_heads": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlm.XLMConfig.num_hidden_layers": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlm.XLMConfig.vocab_size": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "transformers.configuration_xlm.XLM_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.configuration_xlm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.configuration_xlm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.configuration_xlm.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.configuration_xlm.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.configuration_xlm.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.configuration_xlm.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.configuration_xlm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.configuration_xlm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.configuration_xlm.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.configuration_xlnet": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.configuration_xlnet.logging"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_xlnet.XLNET_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.configuration_xlnet.XLNetConfig": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "transformers.configuration_xlnet.XLNET_PRETRAINED_CONFIG_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_xlnet.XLNetConfig.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "io.open",
    "isinstance",
    "setattr",
    "str",
    "super",
    "transformers.configuration_xlnet.XLNetConfig",
    "transformers.configuration_xlnet.json",
    "transformers.configuration_xlnet.sys"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.hidden_size": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.max_position_embeddings": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.num_attention_heads": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.num_hidden_layers": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.vocab_size": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "transformers.configuration_xlnet.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.configuration_xlnet.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.configuration_xlnet.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.configuration_xlnet.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.configuration_xlnet.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.configuration_xlnet.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.configuration_xlnet.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.configuration_xlnet.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.configuration_xlnet.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_bert_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_bert_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_bert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch",
    "transformers.convert_bert_original_tf_checkpoint_to_pytorch.logging",
    "transformers.convert_bert_original_tf_checkpoint_to_pytorch.parser"
   ]
  },
  "type": "module"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.BertConfig": {
  "data": {
   "shadows": "transformers.BertConfig"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.BertForPreTraining": {
  "data": {
   "shadows": "transformers.BertForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "print",
    "str",
    "transformers.BertConfig.from_json_file",
    "transformers.BertForPreTraining",
    "transformers.convert_bert_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_bert"
   ]
  },
  "type": "function"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.load_tf_weights_in_bert": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_bert"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.convert_bert_pytorch_checkpoint_to_original_tf.main"
   ]
  },
  "type": "module"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.BertModel": {
  "data": {
   "shadows": "transformers.BertModel"
  },
  "type": "import"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.convert_pytorch_checkpoint_to_tf": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "any",
    "create_tf_var",
    "numpy.allclose",
    "print",
    "str",
    "tensorflow.Session",
    "tensorflow.keras.backend.set_value",
    "tensorflow.reset_default_graph",
    "tensorflow.train.Saver",
    "tensorflow.trainable_variables",
    "to_tf_var_name",
    "transformers.BertModel",
    "transformers.convert_bert_pytorch_checkpoint_to_original_tf.os"
   ]
  },
  "type": "function"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.convert_pytorch_checkpoint_to_tf.create_tf_var": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "numpy.ndarray",
    "str",
    "tensorflow.Session",
    "tensorflow.dtypes.as_dtype",
    "tensorflow.get_variable",
    "tensorflow.variables_initializer",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.convert_pytorch_checkpoint_to_tf.to_tf_var_name": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "iter",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.main": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "str",
    "transformers.BertModel.from_pretrained",
    "transformers.convert_bert_pytorch_checkpoint_to_original_tf.argparse",
    "transformers.convert_bert_pytorch_checkpoint_to_original_tf.convert_pytorch_checkpoint_to_tf",
    "transformers.convert_bert_pytorch_checkpoint_to_original_tf.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.convert_gpt2_checkpoint_to_pytorch",
    "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.logging",
    "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.parser"
   ]
  },
  "type": "module"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.CONFIG_NAME": {
  "data": {
   "shadows": "transformers.CONFIG_NAME"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.GPT2Config": {
  "data": {
   "shadows": "transformers.GPT2Config"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.GPT2Model": {
  "data": {
   "shadows": "transformers.GPT2Model"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.WEIGHTS_NAME": {
  "data": {
   "shadows": "transformers.WEIGHTS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.convert_gpt2_checkpoint_to_pytorch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "io.open",
    "print",
    "transformers.CONFIG_NAME",
    "transformers.GPT2Config",
    "transformers.GPT2Config.from_json_file",
    "transformers.GPT2Model",
    "transformers.WEIGHTS_NAME",
    "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_gpt2"
   ]
  },
  "type": "function"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.load_tf_weights_in_gpt2": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_gpt2"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_openai_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_openai_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_openai_original_tf_checkpoint_to_pytorch.convert_openai_checkpoint_to_pytorch",
    "transformers.convert_openai_original_tf_checkpoint_to_pytorch.logging",
    "transformers.convert_openai_original_tf_checkpoint_to_pytorch.parser"
   ]
  },
  "type": "module"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.CONFIG_NAME": {
  "data": {
   "shadows": "transformers.CONFIG_NAME"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.OpenAIGPTConfig": {
  "data": {
   "shadows": "transformers.OpenAIGPTConfig"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.OpenAIGPTModel": {
  "data": {
   "shadows": "transformers.OpenAIGPTModel"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.WEIGHTS_NAME": {
  "data": {
   "shadows": "transformers.WEIGHTS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.convert_openai_checkpoint_to_pytorch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "io.open",
    "print",
    "transformers.CONFIG_NAME",
    "transformers.OpenAIGPTConfig",
    "transformers.OpenAIGPTConfig.from_json_file",
    "transformers.OpenAIGPTModel",
    "transformers.WEIGHTS_NAME",
    "transformers.convert_openai_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_openai_gpt"
   ]
  },
  "type": "function"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.load_tf_weights_in_openai_gpt": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_openai_gpt"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "list",
    "str",
    "transformers.BERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.BERT_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.BertConfig",
    "transformers.BertForPreTraining",
    "transformers.BertForQuestionAnswering",
    "transformers.BertForSequenceClassification",
    "transformers.CTRLConfig",
    "transformers.CTRLLMHeadModel",
    "transformers.CTRL_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.CTRL_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.DISTILBERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.DISTILBERT_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.DistilBertConfig",
    "transformers.DistilBertForMaskedLM",
    "transformers.DistilBertForQuestionAnswering",
    "transformers.GPT2Config",
    "transformers.GPT2LMHeadModel",
    "transformers.GPT2_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.GPT2_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.OPENAI_GPT_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.OPENAI_GPT_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.OpenAIGPTConfig",
    "transformers.OpenAIGPTLMHeadModel",
    "transformers.ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.ROBERTA_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.RobertaConfig",
    "transformers.RobertaForMaskedLM",
    "transformers.RobertaForSequenceClassification",
    "transformers.TFBertForPreTraining",
    "transformers.TFBertForQuestionAnswering",
    "transformers.TFBertForSequenceClassification",
    "transformers.TFCTRLLMHeadModel",
    "transformers.TFDistilBertForMaskedLM",
    "transformers.TFDistilBertForQuestionAnswering",
    "transformers.TFGPT2LMHeadModel",
    "transformers.TFOpenAIGPTLMHeadModel",
    "transformers.TFRobertaForMaskedLM",
    "transformers.TFRobertaForSequenceClassification",
    "transformers.TFTransfoXLLMHeadModel",
    "transformers.TFXLMWithLMHeadModel",
    "transformers.TFXLNetLMHeadModel",
    "transformers.TRANSFO_XL_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.TRANSFO_XL_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.TransfoXLConfig",
    "transformers.TransfoXLLMHeadModel",
    "transformers.XLMConfig",
    "transformers.XLMWithLMHeadModel",
    "transformers.XLM_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.XLM_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.XLNET_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.XLNET_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.XLNetConfig",
    "transformers.XLNetLMHeadModel",
    "transformers.convert_pytorch_checkpoint_to_tf2.MODEL_CLASSES",
    "transformers.convert_pytorch_checkpoint_to_tf2.argparse",
    "transformers.convert_pytorch_checkpoint_to_tf2.args",
    "transformers.convert_pytorch_checkpoint_to_tf2.convert_all_pt_checkpoints_to_tf",
    "transformers.convert_pytorch_checkpoint_to_tf2.logging",
    "transformers.convert_pytorch_checkpoint_to_tf2.parser",
    "transformers.is_torch_available"
   ]
  },
  "type": "module"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.BERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.BERT_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.BERT_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.BERT_PRETRAINED_MODEL_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.BertConfig": {
  "data": {
   "shadows": "transformers.BertConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.BertForPreTraining": {
  "data": {
   "shadows": "transformers.BertForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.BertForQuestionAnswering": {
  "data": {
   "shadows": "transformers.BertForQuestionAnswering"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.BertForSequenceClassification": {
  "data": {
   "shadows": "transformers.BertForSequenceClassification"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.CTRLConfig": {
  "data": {
   "shadows": "transformers.CTRLConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.CTRLLMHeadModel": {
  "data": {
   "shadows": "transformers.CTRLLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.CTRL_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.CTRL_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.CTRL_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.CTRL_PRETRAINED_MODEL_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.DISTILBERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.DISTILBERT_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.DISTILBERT_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.DISTILBERT_PRETRAINED_MODEL_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.DistilBertConfig": {
  "data": {
   "shadows": "transformers.DistilBertConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.DistilBertForMaskedLM": {
  "data": {
   "shadows": "transformers.DistilBertForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.DistilBertForQuestionAnswering": {
  "data": {
   "shadows": "transformers.DistilBertForQuestionAnswering"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.GPT2Config": {
  "data": {
   "shadows": "transformers.GPT2Config"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.GPT2LMHeadModel": {
  "data": {
   "shadows": "transformers.GPT2LMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.GPT2_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.GPT2_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.GPT2_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.GPT2_PRETRAINED_MODEL_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.MODEL_CLASSES": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.OPENAI_GPT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.OPENAI_GPT_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.OPENAI_GPT_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.OPENAI_GPT_PRETRAINED_MODEL_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.OpenAIGPTConfig": {
  "data": {
   "shadows": "transformers.OpenAIGPTConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.OpenAIGPTLMHeadModel": {
  "data": {
   "shadows": "transformers.OpenAIGPTLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.ROBERTA_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.ROBERTA_PRETRAINED_MODEL_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.RobertaConfig": {
  "data": {
   "shadows": "transformers.RobertaConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.RobertaForMaskedLM": {
  "data": {
   "shadows": "transformers.RobertaForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.RobertaForSequenceClassification": {
  "data": {
   "shadows": "transformers.RobertaForSequenceClassification"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFBertForPreTraining": {
  "data": {
   "shadows": "transformers.TFBertForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFBertForQuestionAnswering": {
  "data": {
   "shadows": "transformers.TFBertForQuestionAnswering"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFBertForSequenceClassification": {
  "data": {
   "shadows": "transformers.TFBertForSequenceClassification"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFCTRLLMHeadModel": {
  "data": {
   "shadows": "transformers.TFCTRLLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFDistilBertForMaskedLM": {
  "data": {
   "shadows": "transformers.TFDistilBertForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFDistilBertForQuestionAnswering": {
  "data": {
   "shadows": "transformers.TFDistilBertForQuestionAnswering"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFGPT2LMHeadModel": {
  "data": {
   "shadows": "transformers.TFGPT2LMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFOpenAIGPTLMHeadModel": {
  "data": {
   "shadows": "transformers.TFOpenAIGPTLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFRobertaForMaskedLM": {
  "data": {
   "shadows": "transformers.TFRobertaForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFRobertaForSequenceClassification": {
  "data": {
   "shadows": "transformers.TFRobertaForSequenceClassification"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFTransfoXLLMHeadModel": {
  "data": {
   "shadows": "transformers.TFTransfoXLLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFXLMWithLMHeadModel": {
  "data": {
   "shadows": "transformers.TFXLMWithLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFXLNetLMHeadModel": {
  "data": {
   "shadows": "transformers.TFXLNetLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TRANSFO_XL_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.TRANSFO_XL_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TRANSFO_XL_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.TRANSFO_XL_PRETRAINED_MODEL_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TransfoXLConfig": {
  "data": {
   "shadows": "transformers.TransfoXLConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TransfoXLLMHeadModel": {
  "data": {
   "shadows": "transformers.TransfoXLLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLMConfig": {
  "data": {
   "shadows": "transformers.XLMConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLMWithLMHeadModel": {
  "data": {
   "shadows": "transformers.XLMWithLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLM_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.XLM_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLM_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.XLM_PRETRAINED_MODEL_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLNET_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.XLNET_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLNET_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.XLNET_PRETRAINED_MODEL_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLNetConfig": {
  "data": {
   "shadows": "transformers.XLNetConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLNetLMHeadModel": {
  "data": {
   "shadows": "transformers.XLNetLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.args": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.cached_path": {
  "data": {
   "shadows": "transformers.cached_path"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.convert_all_pt_checkpoints_to_tf": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "list",
    "model_class",
    "print",
    "transformers.cached_path",
    "transformers.convert_pytorch_checkpoint_to_tf2.MODEL_CLASSES",
    "transformers.convert_pytorch_checkpoint_to_tf2.convert_pt_checkpoint_to_tf",
    "transformers.convert_pytorch_checkpoint_to_tf2.os",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.convert_pt_checkpoint_to_tf": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "model_class",
    "numpy.abs",
    "numpy.amax",
    "print",
    "pt_model",
    "str",
    "tensorflow.constant",
    "tf_model",
    "tf_model.save_weights",
    "transformers.cached_path",
    "transformers.convert_pytorch_checkpoint_to_tf2.MODEL_CLASSES",
    "transformers.convert_pytorch_checkpoint_to_tf2.torch",
    "transformers.load_pytorch_checkpoint_in_tf2_model"
   ]
  },
  "type": "function"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.is_torch_available": {
  "data": {
   "shadows": "transformers.is_torch_available"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.load_pytorch_checkpoint_in_tf2_model": {
  "data": {
   "shadows": "transformers.load_pytorch_checkpoint_in_tf2_model"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.parser": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.argparse",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.args",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.convert_roberta_checkpoint_to_pytorch",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.logging",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.parser"
   ]
  },
  "type": "module"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.BertConfig": {
  "data": {
   "shadows": "transformers.BertConfig"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.BertEncoder": {
  "data": {
   "shadows": "transformers.BertEncoder"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.BertIntermediate": {
  "data": {
   "shadows": "transformers.BertIntermediate"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.BertLayer": {
  "data": {
   "shadows": "transformers.BertLayer"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.BertModel": {
  "data": {
   "shadows": "transformers.BertModel"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.BertOutput": {
  "data": {
   "shadows": "transformers.BertOutput"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.BertSelfAttention": {
  "data": {
   "shadows": "transformers.BertSelfAttention"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.BertSelfOutput": {
  "data": {
   "shadows": "transformers.BertSelfOutput"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.FairseqRobertaModel": {
  "data": {
   "shadows": "fairseq.models.roberta.RobertaModel"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.RobertaEmbeddings": {
  "data": {
   "shadows": "transformers.RobertaEmbeddings"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.RobertaForMaskedLM": {
  "data": {
   "shadows": "transformers.RobertaForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.RobertaForSequenceClassification": {
  "data": {
   "shadows": "transformers.RobertaForSequenceClassification"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.RobertaModel": {
  "data": {
   "shadows": "transformers.RobertaModel"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.SAMPLE_TEXT": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.TransformerSentenceEncoderLayer": {
  "data": {
   "shadows": "fairseq.modules.TransformerSentenceEncoderLayer"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 174
  },
  "type": "constant"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.convert_roberta_checkpoint_to_pytorch": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception",
    "fairseq.models.roberta.RobertaModel.from_pretrained",
    "fairseq.modules.TransformerSentenceEncoderLayer",
    "model",
    "model.save_pretrained",
    "print",
    "range",
    "transformers.BertConfig",
    "transformers.BertIntermediate",
    "transformers.BertLayer",
    "transformers.BertOutput",
    "transformers.BertSelfAttention",
    "transformers.BertSelfOutput",
    "transformers.RobertaForMaskedLM",
    "transformers.RobertaForSequenceClassification",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.SAMPLE_TEXT",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.convert_transfo_xl_checkpoint_to_pytorch",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.logging",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.parser",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.sys",
    "transformers.tokenization_transfo_xl",
    "transformers.tokenization_transfo_xl.Corpus",
    "transformers.tokenization_transfo_xl.TransfoXLCorpus",
    "transformers.tokenization_transfo_xl.TransfoXLTokenizer",
    "transformers.tokenization_transfo_xl.Vocab"
   ]
  },
  "type": "module"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.CONFIG_NAME": {
  "data": {
   "shadows": "transformers.CONFIG_NAME"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.CORPUS_NAME": {
  "data": {
   "shadows": "transformers.tokenization_transfo_xl.CORPUS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.TransfoXLConfig": {
  "data": {
   "shadows": "transformers.TransfoXLConfig"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.TransfoXLLMHeadModel": {
  "data": {
   "shadows": "transformers.TransfoXLLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.VOCAB_FILES_NAMES": {
  "data": {
   "shadows": "transformers.tokenization_transfo_xl.VOCAB_FILES_NAMES"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.WEIGHTS_NAME": {
  "data": {
   "shadows": "transformers.WEIGHTS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.convert_transfo_xl_checkpoint_to_pytorch": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "cPickle.load",
    "io.open",
    "print",
    "str",
    "transformers.CONFIG_NAME",
    "transformers.TransfoXLConfig",
    "transformers.TransfoXLConfig.from_json_file",
    "transformers.TransfoXLLMHeadModel",
    "transformers.WEIGHTS_NAME",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.os",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_transfo_xl",
    "transformers.tokenization_transfo_xl.CORPUS_NAME",
    "transformers.tokenization_transfo_xl.VOCAB_FILES_NAMES"
   ]
  },
  "type": "function"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.data_utils": {
  "data": {
   "shadows": "transformers.tokenization_transfo_xl"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.load_tf_weights_in_transfo_xl": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_transfo_xl"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.argparse",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.args",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.convert_xlm_checkpoint_to_pytorch",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.logging",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.parser"
   ]
  },
  "type": "module"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.CONFIG_NAME": {
  "data": {
   "shadows": "transformers.CONFIG_NAME"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.VOCAB_FILES_NAMES": {
  "data": {
   "shadows": "transformers.tokenization_xlm.VOCAB_FILES_NAMES"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.WEIGHTS_NAME": {
  "data": {
   "shadows": "transformers.WEIGHTS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.convert_xlm_checkpoint_to_pytorch": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dict",
    "io.open",
    "isinstance",
    "print",
    "transformers.CONFIG_NAME",
    "transformers.WEIGHTS_NAME",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.json",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.numpy",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.torch",
    "transformers.tokenization_xlm.VOCAB_FILES_NAMES"
   ]
  },
  "type": "function"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print",
    "str",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.convert_xlnet_checkpoint_to_pytorch",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.logging",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.parser"
   ]
  },
  "type": "module"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.CONFIG_NAME": {
  "data": {
   "shadows": "transformers.CONFIG_NAME"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.GLUE_TASKS_NUM_LABELS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.WEIGHTS_NAME": {
  "data": {
   "shadows": "transformers.WEIGHTS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.XLNetConfig": {
  "data": {
   "shadows": "transformers.XLNetConfig"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.XLNetForQuestionAnswering": {
  "data": {
   "shadows": "transformers.XLNetForQuestionAnswering"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.XLNetForSequenceClassification": {
  "data": {
   "shadows": "transformers.XLNetForSequenceClassification"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.XLNetLMHeadModel": {
  "data": {
   "shadows": "transformers.XLNetLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.convert_xlnet_checkpoint_to_pytorch": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "open",
    "print",
    "str",
    "transformers.CONFIG_NAME",
    "transformers.WEIGHTS_NAME",
    "transformers.XLNetConfig.from_json_file",
    "transformers.XLNetForQuestionAnswering",
    "transformers.XLNetForSequenceClassification",
    "transformers.XLNetLMHeadModel",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.GLUE_TASKS_NUM_LABELS",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.os",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_xlnet"
   ]
  },
  "type": "function"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.load_tf_weights_in_xlnet": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_xlnet"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.data": {
  "data": {
   "symbols_in_volume": [
    "is_sklearn_available"
   ]
  },
  "type": "module"
 },
 "transformers.data.metrics": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "__name__",
    "transformers.data.metrics._has_sklearn",
    "transformers.data.metrics.logger",
    "transformers.data.metrics.logging"
   ]
  },
  "type": "module"
 },
 "transformers.data.metrics._has_sklearn": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.data.metrics.acc_and_f1": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "sklearn.metrics.f1_score",
    "transformers.data.metrics.simple_accuracy"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "transformers.data.metrics.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "transformers.data.metrics.glue_compute_metrics": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "sklearn.metrics.matthews_corrcoef",
    "transformers.data.metrics.acc_and_f1",
    "transformers.data.metrics.pearson_and_spearman",
    "transformers.data.metrics.simple_accuracy"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.is_sklearn_available": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "transformers.data.metrics._has_sklearn"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.data.metrics.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.data.metrics.matthews_corrcoef": {
  "data": {
   "shadows": "sklearn.metrics.matthews_corrcoef"
  },
  "type": "import"
 },
 "transformers.data.metrics.pearson_and_spearman": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "scipy.stats.pearsonr",
    "scipy.stats.spearmanr"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.pearsonr": {
  "data": {
   "shadows": "scipy.stats.pearsonr"
  },
  "type": "import"
 },
 "transformers.data.metrics.simple_accuracy": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "transformers.data.metrics.spearmanr": {
  "data": {
   "shadows": "scipy.stats.spearmanr"
  },
  "type": "import"
 },
 "transformers.data.metrics.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.data.processors": {
  "data": {},
  "type": "module"
 },
 "transformers.data.processors.glue": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_tf_available",
    "transformers.data.processors.glue.ColaProcessor",
    "transformers.data.processors.glue.MnliMismatchedProcessor",
    "transformers.data.processors.glue.MnliProcessor",
    "transformers.data.processors.glue.MrpcProcessor",
    "transformers.data.processors.glue.QnliProcessor",
    "transformers.data.processors.glue.QqpProcessor",
    "transformers.data.processors.glue.RteProcessor",
    "transformers.data.processors.glue.Sst2Processor",
    "transformers.data.processors.glue.StsbProcessor",
    "transformers.data.processors.glue.WnliProcessor",
    "transformers.data.processors.glue.logging"
   ]
  },
  "type": "module"
 },
 "transformers.data.processors.glue.ColaProcessor": {
  "data": {
   "lineno": 243
  },
  "type": "class"
 },
 "transformers.data.processors.glue.ColaProcessor._create_examples": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor.get_dev_examples": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor.get_labels": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor.get_train_examples": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliMismatchedProcessor": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "transformers.data.processors.glue.MnliProcessor"
   ]
  },
  "type": "class"
 },
 "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor": {
  "data": {
   "lineno": 193
  },
  "type": "class"
 },
 "transformers.data.processors.glue.MnliProcessor._create_examples": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor.get_dev_examples": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor.get_labels": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor.get_train_examples": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor": {
  "data": {
   "lineno": 153
  },
  "type": "class"
 },
 "transformers.data.processors.glue.MrpcProcessor._create_examples": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor.get_dev_examples": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor.get_labels": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor.get_train_examples": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "transformers.data.processors.glue.logger",
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor": {
  "data": {
   "lineno": 398
  },
  "type": "class"
 },
 "transformers.data.processors.glue.QnliProcessor._create_examples": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor.get_dev_examples": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor.get_labels": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor.get_train_examples": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor": {
  "data": {
   "lineno": 356
  },
  "type": "class"
 },
 "transformers.data.processors.glue.QqpProcessor._create_examples": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "IndexError",
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor.get_dev_examples": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor.get_labels": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor.get_train_examples": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor": {
  "data": {
   "lineno": 438
  },
  "type": "class"
 },
 "transformers.data.processors.glue.RteProcessor._create_examples": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor.get_dev_examples": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor.get_labels": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor.get_train_examples": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor": {
  "data": {
   "lineno": 279
  },
  "type": "class"
 },
 "transformers.data.processors.glue.Sst2Processor._create_examples": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor.get_dev_examples": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor.get_labels": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor.get_train_examples": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor": {
  "data": {
   "lineno": 317
  },
  "type": "class"
 },
 "transformers.data.processors.glue.StsbProcessor._create_examples": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor.get_dev_examples": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor.get_labels": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor.get_train_examples": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor": {
  "data": {
   "lineno": 477
  },
  "type": "class"
 },
 "transformers.data.processors.glue.WnliProcessor._create_examples": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor.get_dev_examples": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor.get_labels": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor.get_train_examples": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.glue_convert_examples_to_features": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "InputFeatures",
    "KeyError",
    "enumerate",
    "float",
    "is_tf_available",
    "isinstance",
    "len",
    "str",
    "tensorflow.TensorShape",
    "tensorflow.data.Dataset",
    "tensorflow.data.Dataset.from_generator",
    "tensorflow.int32",
    "tensorflow.int64",
    "transformers.data.processors.glue.logger"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.glue_convert_examples_to_features.gen": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "transformers.data.processors.glue.glue_output_modes": {
  "data": {
   "lineno": 540
  },
  "type": "constant"
 },
 "transformers.data.processors.glue.glue_processors": {
  "data": {
   "lineno": 527
  },
  "type": "constant"
 },
 "transformers.data.processors.glue.glue_tasks_num_labels": {
  "data": {
   "lineno": 515
  },
  "type": "constant"
 },
 "transformers.data.processors.glue.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.data.processors.glue.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.data.processors.glue.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.data.processors.glue.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.data.processors.utils": {
  "data": {},
  "type": "module"
 },
 "transformers.data.processors.utils.DataProcessor": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.data.processors.utils.DataProcessor._read_tsv": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "classmethod",
    "list",
    "open",
    "transformers.data.processors.utils.csv",
    "transformers.data.processors.utils.sys",
    "unicode"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.get_dev_examples": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.get_labels": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.get_train_examples": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.InputExample": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.data.processors.utils.InputExample.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "transformers.data.processors.utils.InputExample.__repr__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.InputExample.to_dict": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "transformers.data.processors.utils.copy"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.InputExample.to_json_string": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "transformers.data.processors.utils.json"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.InputFeatures": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.data.processors.utils.InputFeatures.__init__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "transformers.data.processors.utils.InputFeatures.__repr__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.InputFeatures.to_dict": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "transformers.data.processors.utils.copy"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.InputFeatures.to_json_string": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "transformers.data.processors.utils.json"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.data.processors.utils.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "transformers.data.processors.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.data.processors.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.file_utils": {
  "data": {
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "ImportError",
    "__name__",
    "hasattr",
    "int",
    "pathlib.Path",
    "tensorflow",
    "tensorflow.__version__",
    "torch.hub._get_torch_home",
    "transformers.file_utils.PYTORCH_PRETRAINED_BERT_CACHE",
    "transformers.file_utils.default_cache_path",
    "transformers.file_utils.logger",
    "transformers.file_utils.logging",
    "transformers.file_utils.os",
    "transformers.file_utils.six",
    "transformers.file_utils.torch",
    "transformers.file_utils.torch_cache_home"
   ]
  },
  "type": "module"
 },
 "transformers.file_utils.CONFIG_NAME": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "transformers.file_utils.ClientError": {
  "data": {
   "shadows": "botocore.exceptions.ClientError"
  },
  "type": "import"
 },
 "transformers.file_utils.Config": {
  "data": {
   "shadows": "botocore.config.Config"
  },
  "type": "import"
 },
 "transformers.file_utils.PYTORCH_PRETRAINED_BERT_CACHE": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "transformers.file_utils.PYTORCH_TRANSFORMERS_CACHE": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "transformers.file_utils.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "transformers.file_utils.TF2_WEIGHTS_NAME": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "transformers.file_utils.TF_WEIGHTS_NAME": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "transformers.file_utils.TRANSFORMERS_CACHE": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "transformers.file_utils.WEIGHTS_NAME": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "transformers.file_utils._get_torch_home": {
  "data": {
   "shadows": "torch.hub._get_torch_home"
  },
  "type": "import"
 },
 "transformers.file_utils._tf_available": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.file_utils._torch_available": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.file_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.file_utils.add_end_docstrings": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "transformers.file_utils.add_end_docstrings.docstring_decorator": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "transformers.file_utils.add_start_docstrings": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "transformers.file_utils.add_start_docstrings.docstring_decorator": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "transformers.file_utils.boto3": {
  "data": {
   "shadows": "boto3"
  },
  "type": "import"
 },
 "transformers.file_utils.cached_path": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "EnvironmentError",
    "ValueError",
    "isinstance",
    "pathlib.Path",
    "str",
    "transformers.file_utils.TRANSFORMERS_CACHE",
    "transformers.file_utils.get_from_cache",
    "transformers.file_utils.os",
    "transformers.file_utils.sys",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.default_cache_path": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.file_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.file_utils.filename_to_url": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "EnvironmentError",
    "io.open",
    "isinstance",
    "pathlib.Path",
    "str",
    "transformers.file_utils.TRANSFORMERS_CACHE",
    "transformers.file_utils.json",
    "transformers.file_utils.os",
    "transformers.file_utils.sys"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "transformers.file_utils.get_from_cache": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "EnvironmentError",
    "filter",
    "io.open",
    "isinstance",
    "list",
    "pathlib.Path",
    "str",
    "transformers.file_utils.TRANSFORMERS_CACHE",
    "transformers.file_utils.fnmatch",
    "transformers.file_utils.http_get",
    "transformers.file_utils.json",
    "transformers.file_utils.logger",
    "transformers.file_utils.os",
    "transformers.file_utils.requests",
    "transformers.file_utils.s3_etag",
    "transformers.file_utils.s3_get",
    "transformers.file_utils.shutil",
    "transformers.file_utils.sys",
    "transformers.file_utils.tempfile",
    "transformers.file_utils.url_to_filename",
    "unicode"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.http_get": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "int",
    "len",
    "tqdm.tqdm",
    "transformers.file_utils.requests"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_tf_available": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "transformers.file_utils._tf_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_torch_available": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "transformers.file_utils._torch_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.file_utils.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.file_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.file_utils.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.file_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.file_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.file_utils.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "transformers.file_utils.s3_etag": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "botocore.config.Config",
    "transformers.file_utils.boto3",
    "transformers.file_utils.s3_request",
    "transformers.file_utils.split_s3_path"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.s3_get": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "botocore.config.Config",
    "transformers.file_utils.boto3",
    "transformers.file_utils.s3_request",
    "transformers.file_utils.split_s3_path"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.s3_request": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "transformers.file_utils.s3_request.wrapper": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "EnvironmentError",
    "botocore.exceptions.ClientError",
    "func",
    "functools.wraps",
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.sha256": {
  "data": {
   "shadows": "hashlib.sha256"
  },
  "type": "import"
 },
 "transformers.file_utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "transformers.file_utils.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "transformers.file_utils.split_s3_path": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "ValueError",
    "urlparse.urlparse"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.file_utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "transformers.file_utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.file_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.file_utils.torch_cache_home": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.file_utils.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "transformers.file_utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.file_utils.url_to_filename": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "hashlib.sha256"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.urlparse": {
  "data": {
   "shadows": "urlparse.urlparse"
  },
  "type": "import"
 },
 "transformers.file_utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "transformers.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "transformers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_auto": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_auto.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_auto.AutoModel": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModel.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModel.from_pretrained": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForQuestionAnswering": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForQuestionAnswering.__init__": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForSequenceClassification": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForSequenceClassification.__init__": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelWithLMHead": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelWithLMHead.__init__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelWithLMHead.from_pretrained": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_auto.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_auto.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.modeling_auto.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_auto.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_auto.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_bert": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_bert.gelu",
    "transformers.modeling_bert.gelu_new",
    "transformers.modeling_bert.logging",
    "transformers.modeling_bert.swish",
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_bert.ACT2FN": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "transformers.modeling_bert.BERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 492
  },
  "type": "constant"
 },
 "transformers.modeling_bert.BERT_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.modeling_bert.BERT_START_DOCSTRING": {
  "data": {
   "lineno": 471
  },
  "type": "constant"
 },
 "transformers.modeling_bert.BertAttention": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertAttention.__init__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "set",
    "super",
    "transformers.modeling_bert.BertAttention",
    "transformers.modeling_bert.BertSelfAttention",
    "transformers.modeling_bert.BertSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertAttention.forward": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertAttention.prune_heads": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "len",
    "prune_linear_layer",
    "set",
    "sum",
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertEmbeddings": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertEmbeddings.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "transformers.modeling_bert.BertEmbeddings",
    "transformers.modeling_bert.BertLayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertEmbeddings.forward": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertEncoder": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertEncoder.__init__": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_bert.BertEncoder",
    "transformers.modeling_bert.BertLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertEncoder.forward": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "enumerate",
    "layer_module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForMaskedLM": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForMaskedLM.__init__": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bert.BertForMaskedLM",
    "transformers.modeling_bert.BertModel",
    "transformers.modeling_bert.BertOnlyMLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForMaskedLM.forward": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForMaskedLM.tie_weights": {
  "data": {
   "lineno": 756
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForMultipleChoice": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForMultipleChoice.__init__": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertForMultipleChoice",
    "transformers.modeling_bert.BertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForMultipleChoice.forward": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForNextSentencePrediction": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForNextSentencePrediction.__init__": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bert.BertForNextSentencePrediction",
    "transformers.modeling_bert.BertModel",
    "transformers.modeling_bert.BertOnlyNSPHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForNextSentencePrediction.forward": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForPreTraining": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForPreTraining.__init__": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bert.BertForPreTraining",
    "transformers.modeling_bert.BertModel",
    "transformers.modeling_bert.BertPreTrainingHeads"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForPreTraining.forward": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForPreTraining.tie_weights": {
  "data": {
   "lineno": 684
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForQuestionAnswering": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertForQuestionAnswering",
    "transformers.modeling_bert.BertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForQuestionAnswering.forward": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForSequenceClassification": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForSequenceClassification.__init__": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertForSequenceClassification",
    "transformers.modeling_bert.BertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForSequenceClassification.forward": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForTokenClassification": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForTokenClassification.__init__": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertForTokenClassification",
    "transformers.modeling_bert.BertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForTokenClassification.forward": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertIntermediate": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertIntermediate.__init__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_bert.ACT2FN",
    "transformers.modeling_bert.BertIntermediate",
    "transformers.modeling_bert.sys"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertIntermediate.forward": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertLMPredictionHead": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertLMPredictionHead.__init__": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "transformers.modeling_bert.BertLMPredictionHead",
    "transformers.modeling_bert.BertPredictionHeadTransform",
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertLMPredictionHead.forward": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertLayer": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertLayer.__init__": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bert.BertAttention",
    "transformers.modeling_bert.BertIntermediate",
    "transformers.modeling_bert.BertLayer",
    "transformers.modeling_bert.BertOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertLayer.forward": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertLayerNorm": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "transformers.modeling_bert.BertModel": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertModel.__init__": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bert.BertEmbeddings",
    "transformers.modeling_bert.BertEncoder",
    "transformers.modeling_bert.BertModel",
    "transformers.modeling_bert.BertPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertModel._prune_heads": {
  "data": {
   "lineno": 580
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertModel._resize_token_embeddings": {
  "data": {
   "lineno": 574
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertModel.forward": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "next",
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertOnlyMLMHead": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertOnlyMLMHead.__init__": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bert.BertLMPredictionHead",
    "transformers.modeling_bert.BertOnlyMLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertOnlyMLMHead.forward": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertOnlyNSPHead": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertOnlyNSPHead.__init__": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertOnlyNSPHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertOnlyNSPHead.forward": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertOutput": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertOutput.__init__": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertLayerNorm",
    "transformers.modeling_bert.BertOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertOutput.forward": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertPooler": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertPooler.__init__": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Tanh",
    "transformers.modeling_bert.BertPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertPooler.forward": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertPreTrainedModel": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "transformers.modeling_bert.BERT_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.modeling_bert.load_tf_weights_in_bert"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertPreTrainedModel._init_weights": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertLayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertPreTrainingHeads": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertPreTrainingHeads.__init__": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertLMPredictionHead",
    "transformers.modeling_bert.BertPreTrainingHeads"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertPreTrainingHeads.forward": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertPredictionHeadTransform": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertPredictionHeadTransform.__init__": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_bert.ACT2FN",
    "transformers.modeling_bert.BertLayerNorm",
    "transformers.modeling_bert.BertPredictionHeadTransform",
    "transformers.modeling_bert.sys"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertPredictionHeadTransform.forward": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfAttention": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertSelfAttention.__init__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertSelfAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfAttention.forward": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "torch.nn.Softmax",
    "transformers.modeling_bert.math",
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfAttention.transpose_for_scores": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfOutput": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertSelfOutput.__init__": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertLayerNorm",
    "transformers.modeling_bert.BertSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfOutput.forward": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "transformers.modeling_bert.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_bert.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_bert.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_bert.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_bert.gelu": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "transformers.modeling_bert.math",
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.gelu_new": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "transformers.modeling_bert.math",
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_bert.load_tf_weights_in_bert": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "ImportError",
    "any",
    "getattr",
    "int",
    "len",
    "numpy.transpose",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.modeling_bert.logger",
    "transformers.modeling_bert.os",
    "transformers.modeling_bert.re",
    "transformers.modeling_bert.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.modeling_bert.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_bert.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_bert.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_bert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_bert.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_bert.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_bert.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_bert.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_bert.swish": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_bert.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_bert.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_bert.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_ctrl.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_ctrl.CTRLLMHeadModel": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_ctrl.CTRLPreTrainedModel",
    "transformers.modeling_ctrl.CTRL_INPUTS_DOCSTRING",
    "transformers.modeling_ctrl.CTRL_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_ctrl.CTRLLMHeadModel.__init__": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_ctrl.CTRLLMHeadModel",
    "transformers.modeling_ctrl.CTRLModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLLMHeadModel.forward": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLLMHeadModel.tie_weights": {
  "data": {
   "lineno": 454
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLModel": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_ctrl.CTRLPreTrainedModel",
    "transformers.modeling_ctrl.CTRL_INPUTS_DOCSTRING",
    "transformers.modeling_ctrl.CTRL_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_ctrl.CTRLModel.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.ModuleList",
    "transformers.modeling_ctrl.CTRLModel",
    "transformers.modeling_ctrl.EncoderLayer",
    "transformers.modeling_ctrl.positional_encoding",
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLModel._prune_heads": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLModel._resize_token_embeddings": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLModel.forward": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "enumerate",
    "h",
    "len",
    "next",
    "numpy.sqrt",
    "transformers.modeling_ctrl.torch",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLPreTrainedModel": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "transformers.modeling_ctrl.CTRL_PRETRAINED_MODEL_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_ctrl.CTRLPreTrainedModel._init_weights": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRL_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "transformers.modeling_ctrl.CTRL_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.modeling_ctrl.CTRL_START_DOCSTRING": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "transformers.modeling_ctrl.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.EncoderLayer": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_ctrl.EncoderLayer.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_ctrl.EncoderLayer",
    "transformers.modeling_ctrl.MultiHeadAttention",
    "transformers.modeling_ctrl.point_wise_feed_forward_network",
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.EncoderLayer.forward": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.MultiHeadAttention": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_ctrl.MultiHeadAttention.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "int",
    "super",
    "transformers.modeling_ctrl.MultiHeadAttention",
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.MultiHeadAttention.forward": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "transformers.modeling_ctrl.scaled_dot_product_attention",
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.MultiHeadAttention.split_into_heads": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.angle_defn": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.modeling_ctrl.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.point_wise_feed_forward_network": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.positional_encoding": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "transformers.modeling_ctrl.angle_defn",
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.scaled_dot_product_attention": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.sqrt",
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_distilbert.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_distilbert.DISTILBERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 378
  },
  "type": "constant"
 },
 "transformers.modeling_distilbert.DISTILBERT_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.modeling_distilbert.DISTILBERT_START_DOCSTRING": {
  "data": {
   "lineno": 355
  },
  "type": "constant"
 },
 "transformers.modeling_distilbert.DistilBertForMaskedLM": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_distilbert.DistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertForMaskedLM.__init__": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "super",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "transformers.modeling_distilbert.DistilBertForMaskedLM",
    "transformers.modeling_distilbert.DistilBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForMaskedLM.forward": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "transformers.modeling_distilbert.gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForMaskedLM.tie_weights": {
  "data": {
   "lineno": 518
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForQuestionAnswering": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_distilbert.DistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_distilbert.DistilBertForQuestionAnswering",
    "transformers.modeling_distilbert.DistilBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForQuestionAnswering.forward": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForSequenceClassification": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_distilbert.DistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_distilbert.DistilBertForSequenceClassification",
    "transformers.modeling_distilbert.DistilBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForSequenceClassification.forward": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "torch.nn.ReLU"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertModel": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_distilbert.DistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertModel.__init__": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_distilbert.DistilBertModel",
    "transformers.modeling_distilbert.Embeddings",
    "transformers.modeling_distilbert.Transformer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertModel._prune_heads": {
  "data": {
   "lineno": 433
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertModel._resize_token_embeddings": {
  "data": {
   "lineno": 427
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertModel.forward": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "next",
    "transformers.modeling_distilbert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertPreTrainedModel": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "transformers.modeling_distilbert.DISTILBERT_PRETRAINED_MODEL_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertPreTrainedModel.__init__": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_distilbert.DistilBertPreTrainedModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertPreTrainedModel._init_weights": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.Embeddings": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.Embeddings.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "transformers.modeling_distilbert.Embeddings",
    "transformers.modeling_distilbert.create_sinusoidal_embeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.Embeddings.forward": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "transformers.modeling_distilbert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.FFN": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.FFN.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "torch.nn.ReLU",
    "transformers.modeling_distilbert.FFN",
    "transformers.modeling_distilbert.gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.FFN.forward": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "set",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_distilbert.MultiHeadSelfAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.forward": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "float",
    "shape",
    "torch.nn.Softmax",
    "transformers.modeling_distilbert.math",
    "transformers.modeling_distilbert.torch",
    "unshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.forward.shape": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.forward.unshape": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.prune_heads": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "len",
    "prune_linear_layer",
    "set",
    "sum",
    "transformers.modeling_distilbert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.Transformer": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.Transformer.__init__": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_distilbert.Transformer",
    "transformers.modeling_distilbert.TransformerBlock",
    "transformers.modeling_distilbert.copy"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.Transformer.forward": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "enumerate",
    "layer_module",
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.TransformerBlock": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.TransformerBlock.__init__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "transformers.modeling_distilbert.FFN",
    "transformers.modeling_distilbert.MultiHeadSelfAttention",
    "transformers.modeling_distilbert.TransformerBlock"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.TransformerBlock.forward": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.create_sinusoidal_embeddings": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.power",
    "numpy.sin",
    "range",
    "transformers.modeling_distilbert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.gelu": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "transformers.modeling_distilbert.math",
    "transformers.modeling_distilbert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.modeling_distilbert.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_gpt2.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_gpt2.Attention": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.Attention.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Conv1D",
    "set",
    "super",
    "torch.nn.Dropout",
    "transformers.modeling_gpt2.Attention",
    "transformers.modeling_gpt2.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention._attn": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "torch.nn.Softmax",
    "transformers.modeling_gpt2.math",
    "transformers.modeling_gpt2.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention.forward": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "transformers.modeling_gpt2.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention.merge_heads": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention.prune_heads": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "len",
    "prune_conv1d_layer",
    "set",
    "sum",
    "transformers.modeling_gpt2.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention.split_heads": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Block": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.Block.__init__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "super",
    "torch.nn.LayerNorm",
    "transformers.modeling_gpt2.Attention",
    "transformers.modeling_gpt2.Block",
    "transformers.modeling_gpt2.MLP"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Block.forward": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModel": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_gpt2.GPT2PreTrainedModel",
    "transformers.modeling_gpt2.GPT2_INPUTS_DOCSTRING",
    "transformers.modeling_gpt2.GPT2_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModel.__init__": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "SequenceSummary",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_gpt2.GPT2DoubleHeadsModel",
    "transformers.modeling_gpt2.GPT2Model"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModel.forward": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModel.tie_weights": {
  "data": {
   "lineno": 627
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2LMHeadModel": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_gpt2.GPT2PreTrainedModel",
    "transformers.modeling_gpt2.GPT2_INPUTS_DOCSTRING",
    "transformers.modeling_gpt2.GPT2_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2LMHeadModel.__init__": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_gpt2.GPT2LMHeadModel",
    "transformers.modeling_gpt2.GPT2Model"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2LMHeadModel.forward": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2LMHeadModel.tie_weights": {
  "data": {
   "lineno": 519
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_gpt2.GPT2PreTrainedModel",
    "transformers.modeling_gpt2.GPT2_INPUTS_DOCSTRING",
    "transformers.modeling_gpt2.GPT2_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2Model.__init__": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.ModuleList",
    "transformers.modeling_gpt2.Block",
    "transformers.modeling_gpt2.GPT2Model"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model._prune_heads": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model._resize_token_embeddings": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model.forward": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "block",
    "enumerate",
    "len",
    "next",
    "transformers.modeling_gpt2.torch",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2PreTrainedModel": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "transformers.modeling_gpt2.GPT2_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.modeling_gpt2.load_tf_weights_in_gpt2"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2PreTrainedModel.__init__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_gpt2.GPT2PreTrainedModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2PreTrainedModel._init_weights": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "Conv1D",
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 289
  },
  "type": "constant"
 },
 "transformers.modeling_gpt2.GPT2_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.modeling_gpt2.GPT2_START_DOCSTRING": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "transformers.modeling_gpt2.MLP": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.MLP.__init__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "Conv1D",
    "super",
    "torch.nn.Dropout",
    "transformers.modeling_gpt2.MLP",
    "transformers.modeling_gpt2.gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.MLP.forward": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.gelu": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "transformers.modeling_gpt2.math",
    "transformers.modeling_gpt2.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.load_tf_weights_in_gpt2": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "AssertionError",
    "ImportError",
    "getattr",
    "int",
    "len",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.modeling_gpt2.logger",
    "transformers.modeling_gpt2.os",
    "transformers.modeling_gpt2.re",
    "transformers.modeling_gpt2.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.modeling_gpt2.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_openai": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "torch.nn.ReLU",
    "transformers.modeling_openai.gelu",
    "transformers.modeling_openai.logging",
    "transformers.modeling_openai.swish"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_openai.ACT_FNS": {
  "data": {
   "lineno": 125
  },
  "type": "constant"
 },
 "transformers.modeling_openai.Attention": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.Attention.__init__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "Conv1D",
    "set",
    "super",
    "torch.nn.Dropout",
    "transformers.modeling_openai.Attention",
    "transformers.modeling_openai.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.Attention._attn": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "torch.nn.Softmax",
    "transformers.modeling_openai.math",
    "transformers.modeling_openai.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.Attention.forward": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "transformers.modeling_openai.Attention.merge_heads": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "transformers.modeling_openai.Attention.prune_heads": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "len",
    "prune_conv1d_layer",
    "set",
    "sum",
    "transformers.modeling_openai.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.Attention.split_heads": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "transformers.modeling_openai.Block": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.Block.__init__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "super",
    "torch.nn.LayerNorm",
    "transformers.modeling_openai.Attention",
    "transformers.modeling_openai.Block",
    "transformers.modeling_openai.MLP"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.Block.forward": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "transformers.modeling_openai.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_openai.MLP": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.MLP.__init__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "Conv1D",
    "super",
    "torch.nn.Dropout",
    "transformers.modeling_openai.ACT_FNS",
    "transformers.modeling_openai.MLP"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.MLP.forward": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "transformers.modeling_openai.OPENAI_GPT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 302
  },
  "type": "constant"
 },
 "transformers.modeling_openai.OPENAI_GPT_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.modeling_openai.OPENAI_GPT_START_DOCSTRING": {
  "data": {
   "lineno": 281
  },
  "type": "constant"
 },
 "transformers.modeling_openai.OpenAIGPTDoubleHeadsModel": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_openai.OPENAI_GPT_INPUTS_DOCSTRING",
    "transformers.modeling_openai.OPENAI_GPT_START_DOCSTRING",
    "transformers.modeling_openai.OpenAIGPTPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTDoubleHeadsModel.__init__": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "SequenceSummary",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_openai.OpenAIGPTDoubleHeadsModel",
    "transformers.modeling_openai.OpenAIGPTModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTDoubleHeadsModel.forward": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTDoubleHeadsModel.tie_weights": {
  "data": {
   "lineno": 588
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTLMHeadModel": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_openai.OPENAI_GPT_INPUTS_DOCSTRING",
    "transformers.modeling_openai.OPENAI_GPT_START_DOCSTRING",
    "transformers.modeling_openai.OpenAIGPTPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTLMHeadModel.__init__": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_openai.OpenAIGPTLMHeadModel",
    "transformers.modeling_openai.OpenAIGPTModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTLMHeadModel.forward": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTLMHeadModel.tie_weights": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTModel": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_openai.OPENAI_GPT_INPUTS_DOCSTRING",
    "transformers.modeling_openai.OPENAI_GPT_START_DOCSTRING",
    "transformers.modeling_openai.OpenAIGPTPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTModel.__init__": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.ModuleList",
    "transformers.modeling_openai.Block",
    "transformers.modeling_openai.OpenAIGPTModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTModel._prune_heads": {
  "data": {
   "lineno": 367
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTModel._resize_token_embeddings": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTModel.forward": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "block",
    "enumerate",
    "next",
    "transformers.modeling_openai.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTPreTrainedModel": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "transformers.modeling_openai.OPENAI_GPT_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.modeling_openai.load_tf_weights_in_openai_gpt"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTPreTrainedModel._init_weights": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "Conv1D",
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "transformers.modeling_openai.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_openai.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.modeling_openai.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_openai.gelu": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "transformers.modeling_openai.math",
    "transformers.modeling_openai.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_openai.load_tf_weights_in_openai_gpt": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "AssertionError",
    "getattr",
    "int",
    "io.open",
    "len",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.load",
    "numpy.prod",
    "numpy.split",
    "range",
    "transformers.modeling_openai.json",
    "transformers.modeling_openai.logger",
    "transformers.modeling_openai.os",
    "transformers.modeling_openai.re",
    "transformers.modeling_openai.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.modeling_openai.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_openai.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_openai.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_openai.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_openai.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_openai.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_openai.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_openai.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_openai.swish": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "transformers.modeling_openai.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_openai.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_openai.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_roberta": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_roberta.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_roberta.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_roberta.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_roberta.ROBERTA_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "transformers.modeling_roberta.ROBERTA_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.modeling_roberta.ROBERTA_START_DOCSTRING": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "transformers.modeling_roberta.RobertaClassificationHead": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaClassificationHead.__init__": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_roberta.RobertaClassificationHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaClassificationHead.forward": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "transformers.modeling_roberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEmbeddings": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaEmbeddings.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "super",
    "torch.nn.Embedding",
    "transformers.modeling_roberta.RobertaEmbeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEmbeddings.forward": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_roberta.RobertaEmbeddings",
    "transformers.modeling_roberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMaskedLM": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_roberta.ROBERTA_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.modeling_roberta.ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForMaskedLM.__init__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_roberta.RobertaForMaskedLM",
    "transformers.modeling_roberta.RobertaLMHead",
    "transformers.modeling_roberta.RobertaModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMaskedLM.forward": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMaskedLM.tie_weights": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMultipleChoice": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_roberta.ROBERTA_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.modeling_roberta.ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForMultipleChoice.__init__": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_roberta.RobertaForMultipleChoice",
    "transformers.modeling_roberta.RobertaModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMultipleChoice.forward": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForSequenceClassification": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_roberta.ROBERTA_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.modeling_roberta.ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForSequenceClassification.__init__": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_roberta.RobertaClassificationHead",
    "transformers.modeling_roberta.RobertaForSequenceClassification",
    "transformers.modeling_roberta.RobertaModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForSequenceClassification.forward": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaLMHead": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaLMHead.__init__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "BertLayerNorm",
    "super",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "transformers.modeling_roberta.RobertaLMHead",
    "transformers.modeling_roberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaLMHead.forward": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaModel": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_roberta.ROBERTA_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.modeling_roberta.ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaModel.__init__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_roberta.RobertaEmbeddings",
    "transformers.modeling_roberta.RobertaModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaModel.forward": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_roberta.RobertaModel",
    "transformers.modeling_roberta.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_roberta.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_roberta.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.modeling_roberta.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_roberta.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_roberta.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_roberta.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_roberta.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_tf_auto": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_tf_auto.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_auto.TFAutoModel": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModel.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModel.from_pretrained": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.__init__": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.__init__": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelWithLMHead": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelWithLMHead.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_pretrained": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_tf_auto.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_tf_auto.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.modeling_tf_auto.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_tf_auto.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_tf_auto.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.keras.activations.relu",
    "tensorflow.keras.layers.Activation",
    "transformers.modeling_tf_bert.gelu",
    "transformers.modeling_tf_bert.gelu_new",
    "transformers.modeling_tf_bert.logging",
    "transformers.modeling_tf_bert.swish"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_bert.ACT2FN": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 579
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bert.BERT_START_DOCSTRING": {
  "data": {
   "lineno": 542
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bert.TFBertAttention": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertAttention.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertAttention",
    "transformers.modeling_tf_bert.TFBertSelfAttention",
    "transformers.modeling_tf_bert.TFBertSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertAttention.call": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertAttention.prune_heads": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_bert.TFBertEmbeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings._embedding": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "tensorflow.fill",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings._linear": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "tensorflow.matmul",
    "tensorflow.reshape",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings.build": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.name_scope",
    "transformers.modeling_tf_bert.TFBertEmbeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings.call": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEncoder": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertEncoder.__init__": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "range",
    "super",
    "transformers.modeling_tf_bert.TFBertEncoder",
    "transformers.modeling_tf_bert.TFBertLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEncoder.call": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "enumerate",
    "layer_module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMaskedLM": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForMaskedLM.__init__": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertForMaskedLM",
    "transformers.modeling_tf_bert.TFBertMLMHead",
    "transformers.modeling_tf_bert.TFBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMaskedLM.call": {
  "data": {
   "lineno": 746
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMultipleChoice": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForMultipleChoice.__init__": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_bert.TFBertForMultipleChoice",
    "transformers.modeling_tf_bert.TFBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMultipleChoice.call": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "list",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForNextSentencePrediction": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForNextSentencePrediction.__init__": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertForNextSentencePrediction",
    "transformers.modeling_tf_bert.TFBertMainLayer",
    "transformers.modeling_tf_bert.TFBertNSPHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForNextSentencePrediction.call": {
  "data": {
   "lineno": 790
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForPreTraining": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForPreTraining.__init__": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertForPreTraining",
    "transformers.modeling_tf_bert.TFBertMLMHead",
    "transformers.modeling_tf_bert.TFBertMainLayer",
    "transformers.modeling_tf_bert.TFBertNSPHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForPreTraining.call": {
  "data": {
   "lineno": 701
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForQuestionAnswering": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_bert.TFBertForQuestionAnswering",
    "transformers.modeling_tf_bert.TFBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForQuestionAnswering.call": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "tensorflow.split",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForSequenceClassification": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_bert.TFBertForSequenceClassification",
    "transformers.modeling_tf_bert.TFBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForSequenceClassification.call": {
  "data": {
   "lineno": 839
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForTokenClassification": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForTokenClassification.__init__": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_bert.TFBertForTokenClassification",
    "transformers.modeling_tf_bert.TFBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForTokenClassification.call": {
  "data": {
   "lineno": 970
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertIntermediate": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertIntermediate.__init__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "get_initializer",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_bert.ACT2FN",
    "transformers.modeling_tf_bert.TFBertIntermediate",
    "transformers.modeling_tf_bert.sys"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertIntermediate.call": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMPredictionHead": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertLMPredictionHead.__init__": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertLMPredictionHead",
    "transformers.modeling_tf_bert.TFBertPredictionHeadTransform"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMPredictionHead.build": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertLMPredictionHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMPredictionHead.call": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLayer": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertLayer.__init__": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertAttention",
    "transformers.modeling_tf_bert.TFBertIntermediate",
    "transformers.modeling_tf_bert.TFBertLayer",
    "transformers.modeling_tf_bert.TFBertOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLayer.call": {
  "data": {
   "lineno": 328
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMLMHead": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertMLMHead.__init__": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertLMPredictionHead",
    "transformers.modeling_tf_bert.TFBertMLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMLMHead.call": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer.__init__": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertEmbeddings",
    "transformers.modeling_tf_bert.TFBertEncoder",
    "transformers.modeling_tf_bert.TFBertMainLayer",
    "transformers.modeling_tf_bert.TFBertPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer._prune_heads": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer.call": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "isinstance",
    "len",
    "list",
    "tensorflow.cast",
    "tensorflow.fill",
    "tensorflow.float32",
    "tensorflow.newaxis",
    "tensorflow.shape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertModel": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertModel.__init__": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertMainLayer",
    "transformers.modeling_tf_bert.TFBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertModel.call": {
  "data": {
   "lineno": 659
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertNSPHead": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertNSPHead.__init__": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_bert.TFBertNSPHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertNSPHead.call": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertOutput": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertOutput.__init__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_bert.TFBertOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertOutput.call": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertPooler": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertPooler.__init__": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_bert.TFBertPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertPooler.call": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertPreTrainedModel": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "transformers.modeling_tf_bert.TF_BERT_PRETRAINED_MODEL_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertPredictionHeadTransform": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertPredictionHeadTransform.__init__": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "get_initializer",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_bert.ACT2FN",
    "transformers.modeling_tf_bert.TFBertPredictionHeadTransform",
    "transformers.modeling_tf_bert.sys"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertPredictionHeadTransform.call": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfAttention": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertSelfAttention.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "get_initializer",
    "int",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_bert.TFBertSelfAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfAttention.call": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.math.sqrt",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "tensorflow.shape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfAttention.transpose_for_scores": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfOutput": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertSelfOutput.__init__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_bert.TFBertSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfOutput.call": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TF_BERT_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bert.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert.gelu": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tensorflow.math.erf",
    "tensorflow.math.sqrt"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.gelu_new": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sqrt",
    "tensorflow.pow",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bert.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert.swish": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.sigmoid"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_tf_ctrl": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_tf_ctrl.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_ctrl.CTRL_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 350
  },
  "type": "constant"
 },
 "transformers.modeling_tf_ctrl.CTRL_START_DOCSTRING": {
  "data": {
   "lineno": 329
  },
  "type": "constant"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHead": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHead.__init__": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_ctrl.TFCTRLLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHead.build": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_ctrl.TFCTRLLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHead.call": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHeadModel": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_ctrl.CTRL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_ctrl.CTRL_START_DOCSTRING",
    "transformers.modeling_tf_ctrl.TFCTRLPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHeadModel.__init__": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_ctrl.TFCTRLLMHead",
    "transformers.modeling_tf_ctrl.TFCTRLLMHeadModel",
    "transformers.modeling_tf_ctrl.TFCTRLMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHeadModel.call": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer.__init__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "TFSharedEmbeddings",
    "range",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_ctrl.TFCTRLMainLayer",
    "transformers.modeling_tf_ctrl.TFEncoderLayer",
    "transformers.modeling_tf_ctrl.positional_encoding"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer._prune_heads": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer.call": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "enumerate",
    "h",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.linalg.band_part",
    "tensorflow.math.sqrt",
    "tensorflow.newaxis",
    "tensorflow.ones",
    "tensorflow.range",
    "tensorflow.reshape",
    "tensorflow.tile",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLModel": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_ctrl.CTRL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_ctrl.CTRL_START_DOCSTRING",
    "transformers.modeling_tf_ctrl.TFCTRLPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFCTRLModel.__init__": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_ctrl.TFCTRLMainLayer",
    "transformers.modeling_tf_ctrl.TFCTRLModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLModel.call": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLPreTrainedModel": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "transformers.modeling_tf_ctrl.TF_CTRL_PRETRAINED_MODEL_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFEncoderLayer": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFEncoderLayer.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_ctrl.TFEncoderLayer",
    "transformers.modeling_tf_ctrl.TFMultiHeadAttention",
    "transformers.modeling_tf_ctrl.point_wise_feed_forward_network"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFEncoderLayer.call": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFMultiHeadAttention": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFMultiHeadAttention.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "int",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_ctrl.TFMultiHeadAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFMultiHeadAttention.call": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.reshape",
    "tensorflow.stack",
    "tensorflow.transpose",
    "tensorflow.unstack",
    "transformers.modeling_tf_ctrl.scaled_dot_product_attention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFMultiHeadAttention.split_into_heads": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TF_CTRL_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.modeling_tf_ctrl.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_tf_ctrl.angle_defn": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_tf_ctrl.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.modeling_tf_ctrl.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_tf_ctrl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_ctrl.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_tf_ctrl.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_tf_ctrl.point_wise_feed_forward_network": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "tensorflow.keras.Sequential",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.positional_encoding": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.newaxis",
    "numpy.sin",
    "tensorflow.cast",
    "tensorflow.float32",
    "transformers.modeling_tf_ctrl.angle_defn"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_tf_ctrl.scaled_dot_product_attention": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.math.sqrt",
    "tensorflow.matmul",
    "tensorflow.nn.softmax"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_tf_ctrl.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_ctrl.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_tf_distilbert": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_tf_distilbert.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_distilbert.DISTILBERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 496
  },
  "type": "constant"
 },
 "transformers.modeling_tf_distilbert.DISTILBERT_START_DOCSTRING": {
  "data": {
   "lineno": 451
  },
  "type": "constant"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMaskedLM": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_tf_distilbert.TFDistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMaskedLM.__init__": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Activation",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_distilbert.TFDistilBertForMaskedLM",
    "transformers.modeling_tf_distilbert.TFDistilBertLMHead",
    "transformers.modeling_tf_distilbert.TFDistilBertMainLayer",
    "transformers.modeling_tf_distilbert.gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMaskedLM.call": {
  "data": {
   "lineno": 612
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForQuestionAnswering": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_tf_distilbert.TFDistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_distilbert.TFDistilBertForQuestionAnswering",
    "transformers.modeling_tf_distilbert.TFDistilBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForQuestionAnswering.call": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "tensorflow.split",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForSequenceClassification": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_tf_distilbert.TFDistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_distilbert.TFDistilBertForSequenceClassification",
    "transformers.modeling_tf_distilbert.TFDistilBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForSequenceClassification.call": {
  "data": {
   "lineno": 667
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertLMHead": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertLMHead.__init__": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_distilbert.TFDistilBertLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertLMHead.build": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_distilbert.TFDistilBertLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertLMHead.call": {
  "data": {
   "lineno": 565
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer.__init__": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_distilbert.TFDistilBertMainLayer",
    "transformers.modeling_tf_distilbert.TFEmbeddings",
    "transformers.modeling_tf_distilbert.TFTransformer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer._prune_heads": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer.call": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.ones",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertModel": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_tf_distilbert.TFDistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertModel.__init__": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_distilbert.TFDistilBertMainLayer",
    "transformers.modeling_tf_distilbert.TFDistilBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertModel.call": {
  "data": {
   "lineno": 544
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertPreTrainedModel": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "transformers.modeling_tf_distilbert.TF_DISTILBERT_PRETRAINED_MODEL_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFSharedEmbeddings",
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_distilbert.TFEmbeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings._embedding": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range",
    "tensorflow.shape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings._linear": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "tensorflow.matmul",
    "tensorflow.reshape",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings.build": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.name_scope",
    "transformers.modeling_tf_distilbert.TFEmbeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings.call": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFFFN": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFFFN.__init__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.activations.relu",
    "tensorflow.keras.layers.Activation",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_distilbert.TFFFN",
    "transformers.modeling_tf_distilbert.gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFFFN.call": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.__init__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "get_initializer",
    "set",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.call": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "shape",
    "shape_list",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "transformers.modeling_tf_distilbert.math",
    "unshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.call.shape": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.call.unshape": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.prune_heads": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFTransformer": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFTransformer.__init__": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "range",
    "super",
    "transformers.modeling_tf_distilbert.TFTransformer",
    "transformers.modeling_tf_distilbert.TFTransformerBlock"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFTransformer.call": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "enumerate",
    "layer_module",
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFTransformerBlock": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFTransformerBlock.__init__": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_distilbert.TFFFN",
    "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention",
    "transformers.modeling_tf_distilbert.TFTransformerBlock"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFTransformerBlock.call": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TF_DISTILBERT_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.modeling_tf_distilbert.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_tf_distilbert.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_distilbert.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_tf_distilbert.gelu": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "tensorflow.math.erf",
    "tensorflow.math.sqrt"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.gelu_new": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sqrt",
    "tensorflow.pow",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "transformers.modeling_tf_distilbert.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_tf_distilbert.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.modeling_tf_distilbert.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_tf_distilbert.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_tf_distilbert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_distilbert.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_tf_distilbert.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_tf_distilbert.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_tf_distilbert.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_distilbert.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_tf_gpt2.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_gpt2.GPT2_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 384
  },
  "type": "constant"
 },
 "transformers.modeling_tf_gpt2.GPT2_START_DOCSTRING": {
  "data": {
   "lineno": 347
  },
  "type": "constant"
 },
 "transformers.modeling_tf_gpt2.TFAttention": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFAttention.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "TFConv1D",
    "set",
    "super",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_gpt2.TFAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention._attn": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.math.sqrt",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.call": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.split",
    "tensorflow.stack",
    "tensorflow.unstack"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.causal_attention_mask": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.cast",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.merge_heads": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.prune_heads": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.split_heads": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFBlock": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFBlock.__init__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_gpt2.TFAttention",
    "transformers.modeling_tf_gpt2.TFBlock",
    "transformers.modeling_tf_gpt2.TFMLP"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFBlock.call": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModel": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_gpt2.GPT2_INPUTS_DOCSTRING",
    "transformers.modeling_tf_gpt2.GPT2_START_DOCSTRING",
    "transformers.modeling_tf_gpt2.TFGPT2PreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModel.__init__": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "TFSequenceSummary",
    "super",
    "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModel",
    "transformers.modeling_tf_gpt2.TFGPT2MainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModel.call": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.reshape",
    "tensorflow.squeeze",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2LMHeadModel": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_gpt2.GPT2_INPUTS_DOCSTRING",
    "transformers.modeling_tf_gpt2.GPT2_START_DOCSTRING",
    "transformers.modeling_tf_gpt2.TFGPT2PreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFGPT2LMHeadModel.__init__": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_gpt2.TFGPT2LMHeadModel",
    "transformers.modeling_tf_gpt2.TFGPT2MainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2LMHeadModel.call": {
  "data": {
   "lineno": 489
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer.__init__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "TFSharedEmbeddings",
    "get_initializer",
    "range",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_gpt2.TFBlock",
    "transformers.modeling_tf_gpt2.TFGPT2MainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer._prune_heads": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer.call": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "NotImplementedError",
    "block",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range",
    "tensorflow.reshape",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2Model": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_gpt2.GPT2_INPUTS_DOCSTRING",
    "transformers.modeling_tf_gpt2.GPT2_START_DOCSTRING",
    "transformers.modeling_tf_gpt2.TFGPT2PreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFGPT2Model.__init__": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_gpt2.TFGPT2MainLayer",
    "transformers.modeling_tf_gpt2.TFGPT2Model"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2Model.call": {
  "data": {
   "lineno": 448
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2PreTrainedModel": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "transformers.modeling_tf_gpt2.TF_GPT2_PRETRAINED_MODEL_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFMLP": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFMLP.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "TFConv1D",
    "super",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_gpt2.TFMLP",
    "transformers.modeling_tf_gpt2.gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFMLP.call": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TF_GPT2_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.modeling_tf_gpt2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.gelu": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sqrt",
    "tensorflow.pow",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.modeling_tf_gpt2.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.keras.activations.relu",
    "tensorflow.keras.layers.Activation",
    "transformers.modeling_tf_openai.gelu",
    "transformers.modeling_tf_openai.logging",
    "transformers.modeling_tf_openai.swish"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_openai.ACT_FNS": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "transformers.modeling_tf_openai.OPENAI_GPT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 369
  },
  "type": "constant"
 },
 "transformers.modeling_tf_openai.OPENAI_GPT_START_DOCSTRING": {
  "data": {
   "lineno": 332
  },
  "type": "constant"
 },
 "transformers.modeling_tf_openai.TFAttention": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFAttention.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "TFConv1D",
    "set",
    "super",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_openai.TFAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention._attn": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.math.sqrt",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.call": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "tensorflow.split"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.causal_attention_mask": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.cast",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.merge_heads": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.prune_heads": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.split_heads": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFBlock": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFBlock.__init__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_openai.TFAttention",
    "transformers.modeling_tf_openai.TFBlock",
    "transformers.modeling_tf_openai.TFMLP"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFBlock.call": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFMLP": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFMLP.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "TFConv1D",
    "super",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_openai.TFMLP",
    "transformers.modeling_tf_openai.gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFMLP.call": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModel": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_openai.OPENAI_GPT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_openai.OPENAI_GPT_START_DOCSTRING",
    "transformers.modeling_tf_openai.TFOpenAIGPTPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModel.__init__": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "TFSequenceSummary",
    "super",
    "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModel",
    "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModel.call": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.reshape",
    "tensorflow.squeeze",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTLMHeadModel": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_openai.OPENAI_GPT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_openai.OPENAI_GPT_START_DOCSTRING",
    "transformers.modeling_tf_openai.TFOpenAIGPTPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTLMHeadModel.__init__": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_openai.TFOpenAIGPTLMHeadModel",
    "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTLMHeadModel.call": {
  "data": {
   "lineno": 461
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "TFSharedEmbeddings",
    "get_initializer",
    "range",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "transformers.modeling_tf_openai.TFBlock",
    "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer._prune_heads": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer.call": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "NotImplementedError",
    "block",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range",
    "tensorflow.reshape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTModel": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_openai.OPENAI_GPT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_openai.OPENAI_GPT_START_DOCSTRING",
    "transformers.modeling_tf_openai.TFOpenAIGPTPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTModel.__init__": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer",
    "transformers.modeling_tf_openai.TFOpenAIGPTModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTModel.call": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTPreTrainedModel": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "transformers.modeling_tf_openai.TF_OPENAI_GPT_PRETRAINED_MODEL_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TF_OPENAI_GPT_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.modeling_tf_openai.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai.gelu": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sqrt",
    "tensorflow.pow",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.modeling_tf_openai.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai.swish": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.math.sigmoid"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_tf_roberta": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_tf_roberta.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_roberta.ROBERTA_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "transformers.modeling_tf_roberta.ROBERTA_START_DOCSTRING": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "transformers.modeling_tf_roberta.TFRobertaClassificationHead": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaClassificationHead.__init__": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_roberta.TFRobertaClassificationHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaClassificationHead.call": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_roberta.TFRobertaEmbeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings._embedding": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "super",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range",
    "tensorflow.shape",
    "transformers.modeling_tf_roberta.TFRobertaEmbeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMaskedLM": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_tf_roberta.TFRobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMaskedLM.__init__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_roberta.TFRobertaForMaskedLM",
    "transformers.modeling_tf_roberta.TFRobertaLMHead",
    "transformers.modeling_tf_roberta.TFRobertaMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMaskedLM.call": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForSequenceClassification": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_tf_roberta.TFRobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaForSequenceClassification.__init__": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_roberta.TFRobertaClassificationHead",
    "transformers.modeling_tf_roberta.TFRobertaForSequenceClassification",
    "transformers.modeling_tf_roberta.TFRobertaMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForSequenceClassification.call": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaLMHead": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaLMHead.__init__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Activation",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_roberta.TFRobertaLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaLMHead.build": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_roberta.TFRobertaLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaLMHead.call": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_roberta.TFRobertaEmbeddings",
    "transformers.modeling_tf_roberta.TFRobertaMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer.call": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "super",
    "tensorflow.not_equal",
    "tensorflow.print",
    "tensorflow.reduce_sum",
    "transformers.modeling_tf_roberta.TFRobertaMainLayer",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaModel": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_tf_roberta.TFRobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaModel.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_roberta.TFRobertaMainLayer",
    "transformers.modeling_tf_roberta.TFRobertaModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaModel.call": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaPreTrainedModel": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "transformers.modeling_tf_roberta.TF_ROBERTA_PRETRAINED_MODEL_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TF_ROBERTA_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.modeling_tf_roberta.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_tf_roberta.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_tf_roberta.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.modeling_tf_roberta.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_tf_roberta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_roberta.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_tf_roberta.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_roberta.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_tf_transfo_xl.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding.__init__": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "NotImplementedError",
    "get_initializer",
    "len",
    "range",
    "super",
    "tensorflow.keras.layers.Embedding",
    "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding.build": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "get_initializer",
    "len",
    "range",
    "super",
    "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding.call": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "range",
    "shape_list",
    "tensorflow.boolean_mask",
    "tensorflow.cast",
    "tensorflow.einsum",
    "tensorflow.int64",
    "tensorflow.reshape",
    "tensorflow.scatter_nd",
    "tensorflow.shape",
    "tensorflow.where",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionalEmbedding": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionalEmbedding.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "super",
    "tensorflow.range",
    "transformers.modeling_tf_transfo_xl.TFPositionalEmbedding"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionalEmbedding.call": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.cos",
    "tensorflow.einsum",
    "tensorflow.sin",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionwiseFF": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionwiseFF.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization",
    "tensorflow.nn.relu",
    "transformers.modeling_tf_transfo_xl.TFPositionwiseFF"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionwiseFF.call": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableDecoderLayer": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableDecoderLayer.__init__": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_transfo_xl.TFPositionwiseFF",
    "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableDecoderLayer",
    "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableDecoderLayer.call": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn._rel_shift": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.pad",
    "tensorflow.reshape",
    "tensorflow.slice"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn.build": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn.call": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.concat",
    "tensorflow.einsum",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "tensorflow.split"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_transfo_xl.TFTransfoXLPreTrainedModel",
    "transformers.modeling_tf_transfo_xl.TRANSFO_XL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_transfo_xl.TRANSFO_XL_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.__init__": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFAdaptiveSoftmaxMask",
    "super",
    "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel",
    "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.call": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.init_mems": {
  "data": {
   "lineno": 719
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.reset_length": {
  "data": {
   "lineno": 716
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.__init__": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "NotImplementedError",
    "range",
    "super",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding",
    "transformers.modeling_tf_transfo_xl.TFPositionalEmbedding",
    "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableDecoderLayer",
    "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer._prune_heads": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer._update_mems": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "len",
    "max",
    "range",
    "tensorflow.concat",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.backward_compatible": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.build": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.call": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "enumerate",
    "isinstance",
    "layer",
    "len",
    "list",
    "shape_list",
    "tensorflow.concat",
    "tensorflow.linalg.band_part",
    "tensorflow.minimum",
    "tensorflow.ones",
    "tensorflow.range",
    "tensorflow.transpose",
    "tensorflow.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.init_mems": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "range",
    "shape_list",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.reset_length": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLModel": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_transfo_xl.TFTransfoXLPreTrainedModel",
    "transformers.modeling_tf_transfo_xl.TRANSFO_XL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_transfo_xl.TRANSFO_XL_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLModel.__init__": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer",
    "transformers.modeling_tf_transfo_xl.TFTransfoXLModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLModel.call": {
  "data": {
   "lineno": 666
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLPreTrainedModel": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "transformers.modeling_tf_transfo_xl.TF_TRANSFO_XL_PRETRAINED_MODEL_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TF_TRANSFO_XL_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.modeling_tf_transfo_xl.TRANSFO_XL_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 612
  },
  "type": "constant"
 },
 "transformers.modeling_tf_transfo_xl.TRANSFO_XL_START_DOCSTRING": {
  "data": {
   "lineno": 574
  },
  "type": "constant"
 },
 "transformers.modeling_tf_transfo_xl.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.modeling_tf_transfo_xl.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl_utilities": {
  "data": {},
  "type": "module"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "super",
    "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask._gather_logprob": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.gather_nd",
    "tensorflow.range",
    "tensorflow.shape",
    "tensorflow.stack"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask._logit": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.einsum"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask.build": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "len",
    "range",
    "super",
    "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask.call": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "len",
    "range",
    "shape_list",
    "tensorflow.boolean_mask",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.float32",
    "tensorflow.get_variable",
    "tensorflow.int64",
    "tensorflow.nn.log_softmax",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
    "tensorflow.reduce_mean",
    "tensorflow.scatter_nd",
    "tensorflow.shape",
    "tensorflow.where",
    "tensorflow.zeros",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl_utilities.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl_utilities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl_utilities.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_tf_xlm.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_xlm.TFMultiHeadAttention": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer",
    "transformers.modeling_tf_xlm.itertools"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFMultiHeadAttention.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "get_initializer",
    "next",
    "set",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_xlm.TFMultiHeadAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFMultiHeadAttention.call": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "input",
    "len",
    "shape",
    "shape_list",
    "tensorflow.concat",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "transformers.modeling_tf_xlm.math",
    "unshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFMultiHeadAttention.call.shape": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFMultiHeadAttention.call.unshape": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFMultiHeadAttention.prune_heads": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFTransformerFFN": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFTransformerFFN.__init__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.activations.relu",
    "tensorflow.keras.layers.Activation",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_xlm.TFTransformerFFN",
    "transformers.modeling_tf_xlm.gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFTransformerFFN.call": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForQuestionAnsweringSimple": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm.TFXLMPreTrainedModel",
    "transformers.modeling_tf_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_xlm.TFXLMForQuestionAnsweringSimple",
    "transformers.modeling_tf_xlm.TFXLMMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForQuestionAnsweringSimple.call": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "tensorflow.split",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForSequenceClassification": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm.TFXLMPreTrainedModel",
    "transformers.modeling_tf_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMForSequenceClassification.__init__": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "TFSequenceSummary",
    "super",
    "transformers.modeling_tf_xlm.TFXLMForSequenceClassification",
    "transformers.modeling_tf_xlm.TFXLMMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForSequenceClassification.call": {
  "data": {
   "lineno": 683
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer.__init__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFSharedEmbeddings",
    "get_initializer",
    "hasattr",
    "int",
    "list",
    "map",
    "range",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_xlm.TFMultiHeadAttention",
    "transformers.modeling_tf_xlm.TFTransformerFFN",
    "transformers.modeling_tf_xlm.TFXLMMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer._prune_heads": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer.call": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "isinstance",
    "len",
    "list",
    "range",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.expand_dims",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.not_equal",
    "tensorflow.range",
    "tensorflow.reduce_sum",
    "transformers.modeling_tf_xlm.get_masks",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMModel": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm.TFXLMPreTrainedModel",
    "transformers.modeling_tf_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMModel.__init__": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_xlm.TFXLMMainLayer",
    "transformers.modeling_tf_xlm.TFXLMModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMModel.call": {
  "data": {
   "lineno": 562
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMPreTrainedModel": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "transformers.modeling_tf_xlm.TF_XLM_PRETRAINED_MODEL_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMPreTrainedModel.dummy_inputs": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMPredLayer": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMPredLayer.__init__": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "NotImplementedError",
    "super",
    "transformers.modeling_tf_xlm.TFXLMPredLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMPredLayer.build": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_xlm.TFXLMPredLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMPredLayer.call": {
  "data": {
   "lineno": 597
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModel": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm.TFXLMPreTrainedModel",
    "transformers.modeling_tf_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModel.__init__": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_xlm.TFXLMMainLayer",
    "transformers.modeling_tf_xlm.TFXLMPredLayer",
    "transformers.modeling_tf_xlm.TFXLMWithLMHeadModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModel.call": {
  "data": {
   "lineno": 637
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TF_XLM_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlm.XLM_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 488
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlm.XLM_START_DOCSTRING": {
  "data": {
   "lineno": 444
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.create_sinusoidal_embeddings": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.power",
    "numpy.sin",
    "range",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.gelu": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "tensorflow.math.erf",
    "tensorflow.math.sqrt"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.get_masks": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.less_equal",
    "tensorflow.math.less",
    "tensorflow.newaxis",
    "tensorflow.range",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlm.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "tensorflow.keras.activations.relu",
    "tensorflow.keras.layers.Activation",
    "transformers.modeling_tf_xlnet.gelu",
    "transformers.modeling_tf_xlnet.logging",
    "transformers.modeling_tf_xlnet.swish"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_xlnet.ACT2FN": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlnet.TFXLNetFeedForward": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetFeedForward.__init__": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "get_initializer",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_xlnet.ACT2FN",
    "transformers.modeling_tf_xlnet.TFXLNetFeedForward",
    "transformers.modeling_tf_xlnet.sys"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetFeedForward.call": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForQuestionAnsweringSimple": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "transformers.modeling_tf_xlnet.TFXLNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_xlnet.TFXLNetForQuestionAnsweringSimple",
    "transformers.modeling_tf_xlnet.TFXLNetMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForQuestionAnsweringSimple.call": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "tensorflow.split",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForSequenceClassification": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlnet.TFXLNetPreTrainedModel",
    "transformers.modeling_tf_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlnet.XLNET_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForSequenceClassification.__init__": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "TFSequenceSummary",
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_xlnet.TFXLNetForSequenceClassification",
    "transformers.modeling_tf_xlnet.TFXLNetMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForSequenceClassification.call": {
  "data": {
   "lineno": 906
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHead": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHead.__init__": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_xlnet.TFXLNetLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHead.build": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_xlnet.TFXLNetLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHead.call": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModel": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlnet.TFXLNetPreTrainedModel",
    "transformers.modeling_tf_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlnet.XLNET_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModel.__init__": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_xlnet.TFXLNetLMHead",
    "transformers.modeling_tf_xlnet.TFXLNetLMHeadModel",
    "transformers.modeling_tf_xlnet.TFXLNetMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModel.call": {
  "data": {
   "lineno": 853
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLayer": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLayer.__init__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_xlnet.TFXLNetFeedForward",
    "transformers.modeling_tf_xlnet.TFXLNetLayer",
    "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLayer.call": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.__init__": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "TFSharedEmbeddings",
    "range",
    "super",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_xlnet.TFXLNetLayer",
    "transformers.modeling_tf_xlnet.TFXLNetMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer._prune_heads": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.build": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "get_initializer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.cache_mem": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.call": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "layer_module",
    "len",
    "list",
    "next",
    "shape_list",
    "tensorflow.bfloat16",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.equal",
    "tensorflow.eye",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.logical_not",
    "tensorflow.one_hot",
    "tensorflow.shape",
    "tensorflow.tile",
    "tensorflow.transpose",
    "tensorflow.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.create_mask": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.float32",
    "tensorflow.matrix_band_part",
    "tensorflow.ones",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.positional_embedding": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.concat",
    "tensorflow.cos",
    "tensorflow.einsum",
    "tensorflow.sin",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.relative_positional_encoding": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.cast",
    "tensorflow.clip_by_value",
    "tensorflow.concat",
    "tensorflow.float32",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetModel": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlnet.TFXLNetPreTrainedModel",
    "transformers.modeling_tf_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlnet.XLNET_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetModel.__init__": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_xlnet.TFXLNetMainLayer",
    "transformers.modeling_tf_xlnet.TFXLNetModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetModel.call": {
  "data": {
   "lineno": 803
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetPreTrainedModel": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "transformers.modeling_tf_xlnet.TF_XLNET_PRETRAINED_MODEL_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.build": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.call": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.einsum"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.post_attention": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "tensorflow.einsum"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.prune_heads": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.rel_attn_core": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "tensorflow.einsum",
    "tensorflow.float16",
    "tensorflow.nn.softmax"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.rel_shift": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "shape_list",
    "staticmethod",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TF_XLNET_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlnet.XLNET_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 718
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlnet.XLNET_START_DOCSTRING": {
  "data": {
   "lineno": 671
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlnet.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.gelu": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sqrt",
    "tensorflow.pow",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlnet.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.swish": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "tensorflow.sigmoid"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_transfo_xl.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_transfo_xl.AdaptiveEmbedding": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.AdaptiveEmbedding.__init__": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "len",
    "range",
    "super",
    "torch.nn.Embedding",
    "torch.nn.ModuleList",
    "torch.nn.Parameter",
    "torch.nn.ParameterList",
    "transformers.modeling_transfo_xl.AdaptiveEmbedding",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.AdaptiveEmbedding.forward": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "len",
    "next",
    "range",
    "torch.nn.functional.linear",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.Parameter": {
  "data": {
   "shadows": "torch.nn.parameter.Parameter"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.PositionalEmbedding": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.PositionalEmbedding.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_transfo_xl.PositionalEmbedding",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.PositionalEmbedding.forward": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.PositionwiseFF": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.PositionwiseFF.__init__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "torch.nn.ReLU",
    "torch.nn.Sequential",
    "transformers.modeling_transfo_xl.PositionwiseFF"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.PositionwiseFF.forward": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableDecoderLayer": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableDecoderLayer.__init__": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_transfo_xl.PositionwiseFF",
    "transformers.modeling_transfo_xl.RelPartialLearnableDecoderLayer",
    "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableDecoderLayer.forward": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn.__init__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn._rel_shift": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn.forward": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "next",
    "torch.nn.functional.softmax",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TRANSFO_XL_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 539
  },
  "type": "constant"
 },
 "transformers.modeling_transfo_xl.TRANSFO_XL_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.modeling_transfo_xl.TRANSFO_XL_START_DOCSTRING": {
  "data": {
   "lineno": 517
  },
  "type": "constant"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_transfo_xl.TRANSFO_XL_INPUTS_DOCSTRING",
    "transformers.modeling_transfo_xl.TRANSFO_XL_START_DOCSTRING",
    "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.__init__": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "LogUniformSampler",
    "ProjectedAdaptiveLogSoftmax",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_transfo_xl.TransfoXLLMHeadModel",
    "transformers.modeling_transfo_xl.TransfoXLModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.forward": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "NotImplementedError",
    "sample_logits",
    "torch.nn.functional.log_softmax"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.init_mems": {
  "data": {
   "lineno": 861
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.reset_length": {
  "data": {
   "lineno": 858
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.tie_weights": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_transfo_xl.TRANSFO_XL_INPUTS_DOCSTRING",
    "transformers.modeling_transfo_xl.TRANSFO_XL_START_DOCSTRING",
    "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.__init__": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "NotImplementedError",
    "range",
    "super",
    "torch.nn.Dropout",
    "torch.nn.ModuleList",
    "torch.nn.Parameter",
    "transformers.modeling_transfo_xl.AdaptiveEmbedding",
    "transformers.modeling_transfo_xl.PositionalEmbedding",
    "transformers.modeling_transfo_xl.RelPartialLearnableDecoderLayer",
    "transformers.modeling_transfo_xl.TransfoXLModel",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel._prune_heads": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "transformers.modeling_transfo_xl.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel._resize_token_embeddings": {
  "data": {
   "lineno": 642
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel._update_mems": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "len",
    "max",
    "range",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.backward_compatible": {
  "data": {
   "lineno": 645
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.forward": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "NotImplementedError",
    "enumerate",
    "layer",
    "list",
    "next",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.init_mems": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "next",
    "range",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.reset_length": {
  "data": {
   "lineno": 648
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "transformers.modeling_transfo_xl.TRANSFO_XL_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.modeling_transfo_xl.load_tf_weights_in_transfo_xl"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._init_bias": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "torch.nn.init.constant_"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._init_weight": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "torch.nn.init.normal_",
    "torch.nn.init.uniform_"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._init_weights": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "range",
    "torch.nn.init.normal_"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.build_tf_to_pytorch_map": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "NotImplementedError",
    "enumerate",
    "hasattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.load_tf_weights_in_transfo_xl": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "AssertionError",
    "ImportError",
    "enumerate",
    "len",
    "numpy.transpose",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.modeling_transfo_xl.build_tf_to_pytorch_map",
    "transformers.modeling_transfo_xl.logger",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.logger": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.modeling_transfo_xl.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl_utilities": {
  "data": {},
  "type": "module"
 },
 "transformers.modeling_transfo_xl_utilities.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl_utilities.LogUniformSampler": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl_utilities.LogUniformSampler.__init__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "transformers.modeling_transfo_xl_utilities.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities.LogUniformSampler.sample": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "transformers.modeling_transfo_xl_utilities.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "len",
    "range",
    "super",
    "torch.nn.Linear",
    "torch.nn.ModuleList",
    "torch.nn.Parameter",
    "torch.nn.ParameterList",
    "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax",
    "transformers.modeling_transfo_xl_utilities.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax._compute_logit": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "torch.nn.functional.linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax.forward": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr",
    "len",
    "range",
    "torch.nn.functional.log_softmax",
    "transformers.modeling_transfo_xl_utilities.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax.log_prob": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "len",
    "range",
    "torch.nn.functional.log_softmax",
    "transformers.modeling_transfo_xl_utilities.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl_utilities.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl_utilities.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl_utilities.sample_logits": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "embedding",
    "transformers.modeling_transfo_xl_utilities.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "transformers.modeling_utils.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_utils.Conv1D": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.Conv1D.__init__": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "super",
    "torch.nn.Parameter",
    "torch.nn.init.normal_",
    "transformers.modeling_utils.Conv1D",
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.Conv1D.forward": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_utils.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_utils.Identity": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.Identity.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "super",
    "torch.nn.Identity"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.Identity.forward": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PoolerAnswerClass": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.PoolerAnswerClass.__init__": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Tanh",
    "transformers.modeling_utils.PoolerAnswerClass"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PoolerAnswerClass.forward": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PoolerEndLogits": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.PoolerEndLogits.__init__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "super",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "torch.nn.Tanh",
    "transformers.modeling_utils.PoolerEndLogits"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PoolerEndLogits.forward": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "next",
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PoolerStartLogits": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.PoolerStartLogits.__init__": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_utils.PoolerStartLogits"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PoolerStartLogits.forward": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "next",
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.PreTrainedModel.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "super",
    "transformers.modeling_utils.PreTrainedModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel._get_resized_embeddings": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "min",
    "torch.nn.Embedding"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel._tie_or_clone_weights": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "hasattr",
    "torch.nn.Parameter",
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "EnvironmentError",
    "ImportError",
    "RuntimeError",
    "any",
    "cached_path",
    "classmethod",
    "cls",
    "cls.base_model_prefix",
    "cls.load_tf_weights",
    "getattr",
    "hasattr",
    "len",
    "load",
    "transformers.load_tf2_checkpoint_in_pytorch_model",
    "transformers.modeling_utils.logger",
    "transformers.modeling_utils.os",
    "transformers.modeling_utils.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.from_pretrained.load": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "load"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.init_weights": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.prune_heads": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "getattr",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.resize_token_embeddings": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.save_pretrained": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "hasattr",
    "transformers.modeling_utils.logger",
    "transformers.modeling_utils.os",
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.SQuADHead": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.SQuADHead.__init__": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_utils.PoolerAnswerClass",
    "transformers.modeling_utils.PoolerEndLogits",
    "transformers.modeling_utils.PoolerStartLogits",
    "transformers.modeling_utils.SQuADHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.SQuADHead.forward": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "loss_fct",
    "loss_fct_cls",
    "torch.nn.BCEWithLogitsLoss",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.functional.softmax",
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.SequenceSummary": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.SequenceSummary.__init__": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Identity",
    "torch.nn.Linear",
    "torch.nn.Tanh",
    "transformers.modeling_utils.SequenceSummary"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.SequenceSummary.forward": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "NotImplementedError",
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.modeling_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_utils.load_tf2_checkpoint_in_pytorch_model": {
  "data": {
   "shadows": "transformers.load_tf2_checkpoint_in_pytorch_model"
  },
  "type": "import"
 },
 "transformers.modeling_utils.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.modeling_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_utils.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_utils.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_utils.prune_conv1d_layer": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "len",
    "list",
    "transformers.modeling_utils.Conv1D"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.prune_layer": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "torch.nn.Linear",
    "transformers.modeling_utils.Conv1D",
    "transformers.modeling_utils.prune_conv1d_layer",
    "transformers.modeling_utils.prune_linear_layer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.prune_linear_layer": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "len",
    "list",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "transformers.modeling_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_xlm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_xlm.logging"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_xlm.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.MultiHeadAttention": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "torch.nn.Module",
    "transformers.modeling_xlm.itertools"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.MultiHeadAttention.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "next",
    "set",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_xlm.MultiHeadAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.MultiHeadAttention.forward": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "float",
    "input",
    "input.size",
    "shape",
    "torch.nn.functional.dropout",
    "torch.nn.functional.softmax",
    "transformers.modeling_xlm.math",
    "transformers.modeling_xlm.torch",
    "unshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.MultiHeadAttention.forward.shape": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "transformers.modeling_xlm.MultiHeadAttention.forward.unshape": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "transformers.modeling_xlm.MultiHeadAttention.prune_heads": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "len",
    "prune_linear_layer",
    "set",
    "sum",
    "transformers.modeling_xlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.TransformerFFN": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.TransformerFFN.__init__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.functional.relu",
    "transformers.modeling_xlm.TransformerFFN",
    "transformers.modeling_xlm.gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.TransformerFFN.forward": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "input",
    "torch.nn.functional.dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForQuestionAnswering": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm.XLMPreTrainedModel",
    "transformers.modeling_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForQuestionAnswering.__init__": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "SQuADHead",
    "super",
    "transformers.modeling_xlm.XLMForQuestionAnswering",
    "transformers.modeling_xlm.XLMModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForQuestionAnswering.forward": {
  "data": {
   "lineno": 867
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForQuestionAnsweringSimple": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm.XLMPreTrainedModel",
    "transformers.modeling_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_xlm.XLMForQuestionAnsweringSimple",
    "transformers.modeling_xlm.XLMModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForQuestionAnsweringSimple.forward": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForSequenceClassification": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm.XLMPreTrainedModel",
    "transformers.modeling_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForSequenceClassification.__init__": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "SequenceSummary",
    "super",
    "transformers.modeling_xlm.XLMForSequenceClassification",
    "transformers.modeling_xlm.XLMModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForSequenceClassification.forward": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMModel": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm.XLMPreTrainedModel",
    "transformers.modeling_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMModel.__init__": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "int",
    "list",
    "map",
    "range",
    "super",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.ModuleList",
    "transformers.modeling_xlm.MultiHeadAttention",
    "transformers.modeling_xlm.TransformerFFN",
    "transformers.modeling_xlm.XLMModel",
    "transformers.modeling_xlm.create_sinusoidal_embeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMModel._prune_heads": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMModel._resize_token_embeddings": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMModel.forward": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "next",
    "range",
    "torch.nn.functional.dropout",
    "transformers.modeling_xlm.get_masks",
    "transformers.modeling_xlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMPreTrainedModel": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "transformers.modeling_xlm.XLM_PRETRAINED_MODEL_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMPreTrainedModel.__init__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_xlm.XLMPreTrainedModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMPreTrainedModel._init_weights": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "torch.nn.init.constant_",
    "torch.nn.init.normal_"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMPredLayer": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMPredLayer.__init__": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "super",
    "torch.nn.AdaptiveLogSoftmaxWithLoss",
    "torch.nn.Linear",
    "transformers.modeling_xlm.XLMPredLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMPredLayer.forward": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "torch.nn.functional.cross_entropy"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMWithLMHeadModel": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm.XLMPreTrainedModel",
    "transformers.modeling_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMWithLMHeadModel.__init__": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_xlm.XLMModel",
    "transformers.modeling_xlm.XLMPredLayer",
    "transformers.modeling_xlm.XLMWithLMHeadModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMWithLMHeadModel.forward": {
  "data": {
   "lineno": 628
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMWithLMHeadModel.tie_weights": {
  "data": {
   "lineno": 623
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLM_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 273
  },
  "type": "constant"
 },
 "transformers.modeling_xlm.XLM_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.modeling_xlm.XLM_START_DOCSTRING": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "transformers.modeling_xlm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.create_sinusoidal_embeddings": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.power",
    "numpy.sin",
    "range",
    "transformers.modeling_xlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.gelu": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "transformers.modeling_xlm.math",
    "transformers.modeling_xlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.get_masks": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "transformers.modeling_xlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.modeling_xlm.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "__name__",
    "transformers.modeling_xlnet.gelu",
    "transformers.modeling_xlnet.logger",
    "transformers.modeling_xlnet.logging",
    "transformers.modeling_xlnet.swish",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_xlnet.ACT2FN": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "transformers.modeling_xlnet.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 511
  },
  "type": "constant"
 },
 "transformers.modeling_xlnet.XLNET_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.modeling_xlnet.XLNET_START_DOCSTRING": {
  "data": {
   "lineno": 480
  },
  "type": "constant"
 },
 "transformers.modeling_xlnet.XLNetFeedForward": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetFeedForward.__init__": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "transformers.modeling_xlnet.ACT2FN",
    "transformers.modeling_xlnet.XLNetFeedForward",
    "transformers.modeling_xlnet.sys"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetFeedForward.forward": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForMultipleChoice": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_xlnet.XLNET_START_DOCSTRING",
    "transformers.modeling_xlnet.XLNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForMultipleChoice.__init__": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "SequenceSummary",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_xlnet.XLNetForMultipleChoice",
    "transformers.modeling_xlnet.XLNetModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForMultipleChoice.forward": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnswering": {
  "data": {
   "lineno": 1226,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_xlnet.XLNET_START_DOCSTRING",
    "transformers.modeling_xlnet.XLNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "PoolerAnswerClass",
    "PoolerEndLogits",
    "PoolerStartLogits",
    "super",
    "transformers.modeling_xlnet.XLNetForQuestionAnswering",
    "transformers.modeling_xlnet.XLNetModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnswering.forward": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "loss_fct",
    "loss_fct_cls",
    "torch.nn.BCEWithLogitsLoss",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.functional.softmax",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnsweringSimple": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_xlnet.XLNET_START_DOCSTRING",
    "transformers.modeling_xlnet.XLNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_xlnet.XLNetForQuestionAnsweringSimple",
    "transformers.modeling_xlnet.XLNetModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnsweringSimple.forward": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForSequenceClassification": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_xlnet.XLNET_START_DOCSTRING",
    "transformers.modeling_xlnet.XLNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForSequenceClassification.__init__": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "SequenceSummary",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_xlnet.XLNetForSequenceClassification",
    "transformers.modeling_xlnet.XLNetModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForSequenceClassification.forward": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModel": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_xlnet.XLNET_START_DOCSTRING",
    "transformers.modeling_xlnet.XLNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModel.__init__": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_xlnet.XLNetLMHeadModel",
    "transformers.modeling_xlnet.XLNetModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModel.forward": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "loss_fct",
    "torch.nn.CrossEntropyLoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModel.tie_weights": {
  "data": {
   "lineno": 926
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLayer": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetLayer.__init__": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "transformers.modeling_xlnet.XLNetFeedForward",
    "transformers.modeling_xlnet.XLNetLayer",
    "transformers.modeling_xlnet.XLNetRelativeAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLayer.forward": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLayerNorm": {
  "data": {
   "shadows": "torch.nn.LayerNorm"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.XLNetModel": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_xlnet.XLNET_START_DOCSTRING",
    "transformers.modeling_xlnet.XLNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetModel.__init__": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.ModuleList",
    "torch.nn.Parameter",
    "transformers.modeling_xlnet.XLNetLayer",
    "transformers.modeling_xlnet.XLNetModel",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel._prune_heads": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel._resize_token_embeddings": {
  "data": {
   "lineno": 617
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.cache_mem": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.create_mask": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "next",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.forward": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "layer_module",
    "len",
    "next",
    "torch.nn.functional.one_hot",
    "transformers.modeling_xlnet.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.positional_embedding": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.relative_positional_encoding": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "ValueError",
    "next",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetPreTrainedModel": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "transformers.modeling_xlnet.XLNET_PRETRAINED_MODEL_ARCHIVE_MAP",
    "transformers.modeling_xlnet.load_tf_weights_in_xlnet"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetPreTrainedModel._init_weights": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "transformers.modeling_xlnet.XLNetRelativeAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Parameter",
    "transformers.modeling_xlnet.XLNetRelativeAttention",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.forward": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.post_attention": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.prune_heads": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.rel_attn_core": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "torch.nn.functional.softmax",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.rel_shift": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.rel_shift_bnij": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.build_tf_xlnet_to_pytorch_map": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "enumerate",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.gelu": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "transformers.modeling_xlnet.math",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.load_tf_weights_in_xlnet": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "AssertionError",
    "ImportError",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.transpose",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.modeling_xlnet.build_tf_xlnet_to_pytorch_map",
    "transformers.modeling_xlnet.logger",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.modeling_xlnet.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.swish": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.optimization": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.optimization.logging"
   ]
  },
  "type": "module"
 },
 "transformers.optimization.AdamW": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "torch.optim.Optimizer"
   ]
  },
  "type": "class"
 },
 "transformers.optimization.AdamW.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "super",
    "transformers.optimization.AdamW"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.AdamW.step": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "RuntimeError",
    "closure",
    "len",
    "transformers.optimization.math",
    "transformers.optimization.torch"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.ConstantLRSchedule": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "torch.optim.lr_scheduler.LambdaLR"
   ]
  },
  "type": "class"
 },
 "transformers.optimization.ConstantLRSchedule.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super",
    "transformers.optimization.ConstantLRSchedule"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.LambdaLR": {
  "data": {
   "shadows": "torch.optim.lr_scheduler.LambdaLR"
  },
  "type": "import"
 },
 "transformers.optimization.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "transformers.optimization.WarmupConstantSchedule": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "torch.optim.lr_scheduler.LambdaLR"
   ]
  },
  "type": "class"
 },
 "transformers.optimization.WarmupConstantSchedule.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "super",
    "transformers.optimization.WarmupConstantSchedule"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.WarmupConstantSchedule.lr_lambda": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "float",
    "max"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.WarmupCosineSchedule": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "torch.optim.lr_scheduler.LambdaLR"
   ]
  },
  "type": "class"
 },
 "transformers.optimization.WarmupCosineSchedule.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "super",
    "transformers.optimization.WarmupCosineSchedule"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.WarmupCosineSchedule.lr_lambda": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "float",
    "max",
    "transformers.optimization.math"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.WarmupCosineWithHardRestartsSchedule": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "torch.optim.lr_scheduler.LambdaLR"
   ]
  },
  "type": "class"
 },
 "transformers.optimization.WarmupCosineWithHardRestartsSchedule.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "super",
    "transformers.optimization.WarmupCosineWithHardRestartsSchedule"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.WarmupCosineWithHardRestartsSchedule.lr_lambda": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "float",
    "max",
    "transformers.optimization.math"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.WarmupLinearSchedule": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "torch.optim.lr_scheduler.LambdaLR"
   ]
  },
  "type": "class"
 },
 "transformers.optimization.WarmupLinearSchedule.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "super",
    "transformers.optimization.WarmupLinearSchedule"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.WarmupLinearSchedule.lr_lambda": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "float",
    "max"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.optimization.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.optimization.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.optimization.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.tokenization_auto": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.tokenization_auto.logging"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_auto.AutoTokenizer": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_auto.AutoTokenizer.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_auto.AutoTokenizer.from_pretrained": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_auto.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.tokenization_auto.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.tokenization_auto.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.tokenization_auto.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.tokenization_auto.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.tokenization_bert": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.tokenization_bert.logging"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_bert.BasicTokenizer": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_bert.BasicTokenizer.__init__": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._clean_text": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "ord",
    "transformers.tokenization_bert._is_control",
    "transformers.tokenization_bert._is_whitespace"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._is_chinese_char": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._run_split_on_punc": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "len",
    "list",
    "transformers.tokenization_bert._is_punctuation"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._run_strip_accents": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "transformers.tokenization_bert.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._tokenize_chinese_chars": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer.tokenize": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "transformers.tokenization_bert.whitespace_tokenize"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "transformers.tokenization_bert.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_bert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_bert.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_bert.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_bert.BertTokenizer.__init__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "transformers.tokenization_bert.BasicTokenizer",
    "transformers.tokenization_bert.BertTokenizer",
    "transformers.tokenization_bert.WordpieceTokenizer",
    "transformers.tokenization_bert.collections",
    "transformers.tokenization_bert.load_vocab",
    "transformers.tokenization_bert.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer._tokenize": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.save_vocabulary": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "io.open",
    "sorted",
    "transformers.tokenization_bert.VOCAB_FILES_NAMES",
    "transformers.tokenization_bert.logger",
    "transformers.tokenization_bert.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.vocab_size": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "transformers.tokenization_bert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "transformers.tokenization_bert.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.tokenization_bert.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.tokenization_bert.WordpieceTokenizer": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_bert.WordpieceTokenizer.__init__": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "transformers.tokenization_bert.WordpieceTokenizer.tokenize": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "len",
    "list",
    "transformers.tokenization_bert.whitespace_tokenize"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert._is_control": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "transformers.tokenization_bert.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert._is_punctuation": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ord",
    "transformers.tokenization_bert.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert._is_whitespace": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "transformers.tokenization_bert.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.load_vocab": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "enumerate",
    "io.open",
    "transformers.tokenization_bert.collections"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_bert.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.whitespace_tokenize": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.tokenization_ctrl.logging"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "transformers.tokenization_ctrl.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_ctrl.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_ctrl.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "dict",
    "io.open",
    "len",
    "range",
    "super",
    "transformers.tokenization_ctrl.CTRLTokenizer",
    "transformers.tokenization_ctrl.json",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer._tokenize": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.bpe": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "float",
    "len",
    "list",
    "min",
    "transformers.tokenization_ctrl.get_pairs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.save_vocabulary": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "io.open",
    "sorted",
    "transformers.tokenization_ctrl.VOCAB_FILES_NAMES",
    "transformers.tokenization_ctrl.json",
    "transformers.tokenization_ctrl.logger",
    "transformers.tokenization_ctrl.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.vocab_size": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.tokenization_ctrl.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.tokenization_ctrl.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.tokenization_ctrl.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.tokenization_ctrl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.tokenization_ctrl.get_pairs": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_ctrl.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_ctrl.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.tokenization_ctrl.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.tokenization_ctrl.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_ctrl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.tokenization_ctrl.re": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "transformers.tokenization_ctrl.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.tokenization_distilbert": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.tokenization_distilbert.logging"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_distilbert.DistilBertTokenizer": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "transformers.tokenization_distilbert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_distilbert.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_distilbert.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_distilbert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.tokenization_distilbert.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.tokenization_distilbert.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.tokenization_distilbert.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.tokenization_distilbert.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.tokenization_distilbert.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.tokenization_distilbert.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_distilbert.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.tokenization_distilbert.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.tokenization_distilbert.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_distilbert.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.tokenization_distilbert.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.tokenization_distilbert.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "transformers.tokenization_gpt2.logging"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "transformers.tokenization_gpt2.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_gpt2.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_gpt2.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "dict",
    "io.open",
    "len",
    "range",
    "regex.compile",
    "super",
    "transformers.tokenization_gpt2.GPT2Tokenizer",
    "transformers.tokenization_gpt2.bytes_to_unicode",
    "transformers.tokenization_gpt2.json",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer._convert_id_to_token": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer._convert_token_to_id": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer._tokenize": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "ord",
    "regex.findall",
    "transformers.tokenization_gpt2.sys"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.bpe": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "float",
    "len",
    "min",
    "transformers.tokenization_gpt2.get_pairs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "bytearray"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.save_vocabulary": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "io.open",
    "sorted",
    "transformers.tokenization_gpt2.VOCAB_FILES_NAMES",
    "transformers.tokenization_gpt2.json",
    "transformers.tokenization_gpt2.logger",
    "transformers.tokenization_gpt2.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.vocab_size": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.tokenization_gpt2.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "transformers.tokenization_gpt2.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.tokenization_gpt2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.bytes_to_unicode": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "_chr",
    "chr",
    "dict",
    "functools.lru_cache",
    "list",
    "ord",
    "range",
    "transformers.tokenization_gpt2.sys",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.get_pairs": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.tokenization_gpt2.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.lru_cache": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.re": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.tokenization_openai": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.tokenization_openai.logging"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_openai.English": {
  "data": {
   "shadows": "spacy.lang.en.English"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "transformers.tokenization_openai.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_openai.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_openai.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "BasicTokenizer",
    "ImportError",
    "dict",
    "io.open",
    "len",
    "range",
    "spacy.lang.en.English",
    "super",
    "transformers.tokenization_openai.OpenAIGPTTokenizer",
    "transformers.tokenization_openai.ftfy",
    "transformers.tokenization_openai.json",
    "transformers.tokenization_openai.logger",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer._tokenize": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "transformers.tokenization_openai.text_standardize"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.bpe": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "float",
    "len",
    "min",
    "transformers.tokenization_openai.get_pairs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.save_vocabulary": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "io.open",
    "sorted",
    "transformers.tokenization_openai.VOCAB_FILES_NAMES",
    "transformers.tokenization_openai.json",
    "transformers.tokenization_openai.logger",
    "transformers.tokenization_openai.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.vocab_size": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.tokenization_openai.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_openai.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_openai.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.ftfy": {
  "data": {
   "shadows": "ftfy"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.get_pairs": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_openai.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.text_standardize": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "transformers.tokenization_openai.re"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "transformers.tokenization_roberta.logging"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_roberta.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "transformers.tokenization_roberta.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "transformers.tokenization_roberta.RobertaTokenizer": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "transformers.tokenization_roberta.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_roberta.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_roberta.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_roberta.RobertaTokenizer.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "super",
    "transformers.tokenization_roberta.RobertaTokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_roberta.RobertaTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "transformers.tokenization_roberta.RobertaTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_roberta.RobertaTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_roberta.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.tokenization_roberta.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.tokenization_roberta.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta.lru_cache": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "transformers.tokenization_roberta.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta.re": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "transformers.tokenization_transfo_xl.logging"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_transfo_xl.CORPUS_NAME": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "transformers.tokenization_transfo_xl.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.LMMultiFileIterator": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "transformers.tokenization_transfo_xl.LMShuffledIterator"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.LMMultiFileIterator.__init__": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMMultiFileIterator.__iter__": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "numpy.random.shuffle"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "iter",
    "numpy.random.shuffle"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.__init__": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.__iter__": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.get_batch": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "int",
    "max",
    "min",
    "numpy.random.normal",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator.__init__": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator.__iter__": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.random.permutation",
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "StopIteration",
    "len",
    "min",
    "next",
    "range",
    "transformers.tokenization_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.PRETRAINED_CORPUS_ARCHIVE_MAP": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.tokenization_transfo_xl.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "transformers.tokenization_transfo_xl.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus.__init__": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "transformers.tokenization_transfo_xl.TransfoXLTokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus.build_corpus": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "transformers.tokenization_transfo_xl.glob",
    "transformers.tokenization_transfo_xl.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "EnvironmentError",
    "cached_path",
    "classmethod",
    "cls",
    "transformers.tokenization_transfo_xl.CORPUS_NAME",
    "transformers.tokenization_transfo_xl.PRETRAINED_CORPUS_ARCHIVE_MAP",
    "transformers.tokenization_transfo_xl.TransfoXLTokenizer",
    "transformers.tokenization_transfo_xl.logger",
    "transformers.tokenization_transfo_xl.os",
    "transformers.tokenization_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus.get_iterator": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "transformers.tokenization_transfo_xl.LMMultiFileIterator",
    "transformers.tokenization_transfo_xl.LMOrderedIterator",
    "transformers.tokenization_transfo_xl.LMShuffledIterator"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "transformers.tokenization_transfo_xl.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_transfo_xl.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_transfo_xl.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "collections.Counter",
    "super",
    "transformers.tokenization_transfo_xl.TransfoXLTokenizer",
    "transformers.tokenization_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer._build_from_file": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "io.open"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer._tokenize": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_special": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "len",
    "setattr"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_symbol": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.build_vocab": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "len",
    "transformers.tokenization_transfo_xl.logger"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_to_tensor": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "transformers.tokenization_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_file": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "enumerate",
    "io.open",
    "transformers.tokenization_transfo_xl.logger",
    "transformers.tokenization_transfo_xl.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_sents": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "transformers.tokenization_transfo_xl.logger"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_file": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "enumerate",
    "io.open",
    "transformers.tokenization_transfo_xl.logger",
    "transformers.tokenization_transfo_xl.os",
    "transformers.tokenization_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_sents": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "transformers.tokenization_transfo_xl.logger",
    "transformers.tokenization_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.save_vocabulary": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "transformers.tokenization_transfo_xl.VOCAB_FILES_NAMES",
    "transformers.tokenization_transfo_xl.os",
    "transformers.tokenization_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.vocab_size": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "transformers.tokenization_transfo_xl.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.get_lm_corpus": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "io.open",
    "transformers.tokenization_transfo_xl.TransfoXLCorpus",
    "transformers.tokenization_transfo_xl.logger",
    "transformers.tokenization_transfo_xl.os",
    "transformers.tokenization_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.tokenization_transfo_xl.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.tokenization_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_tf_available",
    "is_torch_available",
    "transformers.tokenization_utils.logging"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_utils.ADDED_TOKENS_FILE": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "all",
    "int",
    "isinstance",
    "list",
    "setattr",
    "str",
    "transformers.tokenization_utils.six",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.__len__": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._convert_token_to_id_with_added_voc": {
  "data": {
   "lineno": 680
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._from_pretrained": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "EnvironmentError",
    "all",
    "cached_path",
    "classmethod",
    "cls",
    "float",
    "int",
    "io.open",
    "isinstance",
    "list",
    "min",
    "transformers.tokenization_utils.ADDED_TOKENS_FILE",
    "transformers.tokenization_utils.SPECIAL_TOKENS_MAP_FILE",
    "transformers.tokenization_utils.TOKENIZER_CONFIG_FILE",
    "transformers.tokenization_utils.json",
    "transformers.tokenization_utils.logger",
    "transformers.tokenization_utils.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._tokenize": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.add_special_tokens": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "all",
    "isinstance",
    "list",
    "setattr",
    "str",
    "transformers.tokenization_utils.logger",
    "transformers.tokenization_utils.six",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.add_tokens": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "str",
    "transformers.tokenization_utils.logger",
    "transformers.tokenization_utils.six"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.additional_special_tokens": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.additional_special_tokens_ids": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.all_special_ids": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.all_special_tokens": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "property",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.bos_token": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.bos_token_id": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "transformers.tokenization_utils.logger"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.clean_up_tokenization": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.cls_token": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.cls_token_id": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.convert_ids_to_tokens": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.convert_tokens_to_ids": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "str",
    "transformers.tokenization_utils.logger",
    "transformers.tokenization_utils.six"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 983
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "len",
    "transformers.tokenization_utils.logger"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.decode": {
  "data": {
   "lineno": 990
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.encode": {
  "data": {
   "lineno": 691
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.encode_plus": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "get_input_ids"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.encode_plus.get_input_ids": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "transformers.tokenization_utils.six",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.eos_token": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.eos_token_id": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.from_pretrained": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.mask_token": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.mask_token_id": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.num_added_tokens": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.pad_token": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.pad_token_id": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.prepare_for_model": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "bool",
    "is_tf_available",
    "is_torch_available",
    "len",
    "tensorflow.constant",
    "transformers.tokenization_utils.logger",
    "transformers.tokenization_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.save_pretrained": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "io.open",
    "transformers.tokenization_utils.ADDED_TOKENS_FILE",
    "transformers.tokenization_utils.SPECIAL_TOKENS_MAP_FILE",
    "transformers.tokenization_utils.TOKENIZER_CONFIG_FILE",
    "transformers.tokenization_utils.copy",
    "transformers.tokenization_utils.json",
    "transformers.tokenization_utils.logger",
    "transformers.tokenization_utils.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.save_vocabulary": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.sep_token": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.sep_token_id": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.special_tokens_map": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.tokenize": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "list",
    "split_on_tokens"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.tokenize.split_on_token": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.tokenize.split_on_tokens": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "split_on_token",
    "sum"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.truncate_sequences": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "min",
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.unk_token": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.unk_token_id": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.vocab_size": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.SPECIAL_TOKENS_MAP_FILE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_utils.TOKENIZER_CONFIG_FILE": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.tokenization_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.tokenization_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.tokenization_xlm.logging"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_xlm.Mykytea": {
  "data": {
   "shadows": "Mykytea"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm.XLMTokenizer": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "transformers.tokenization_xlm.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_xlm.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_xlm.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_xlm.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_xlm.XLMTokenizer.__init__": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "dict",
    "io.open",
    "len",
    "range",
    "set",
    "super",
    "transformers.tokenization_xlm.XLMTokenizer",
    "transformers.tokenization_xlm.json",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 748
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 744
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer._tokenize": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "ValueError",
    "pythainlp.tokenize.word_tokenize",
    "transformers.tokenization_xlm.jieba",
    "transformers.tokenization_xlm.logger",
    "transformers.tokenization_xlm.lowercase_and_remove_accent",
    "transformers.tokenization_xlm.romanian_preprocessing",
    "transformers.tokenization_xlm.sys"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.bpe": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "float",
    "len",
    "min",
    "transformers.tokenization_xlm.get_pairs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 757
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 752
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.ja_tokenize": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "list",
    "transformers.tokenization_xlm.Mykytea",
    "transformers.tokenization_xlm.logger",
    "transformers.tokenization_xlm.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.moses_pipeline": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "transformers.tokenization_xlm.remove_non_printing_char",
    "transformers.tokenization_xlm.replace_unicode_punct"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.moses_punct_norm": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "sacremoses.MosesPunctNormalizer"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.moses_tokenize": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "sacremoses.MosesTokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.save_vocabulary": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "io.open",
    "sorted",
    "transformers.tokenization_xlm.VOCAB_FILES_NAMES",
    "transformers.tokenization_xlm.json",
    "transformers.tokenization_xlm.logger",
    "transformers.tokenization_xlm.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.vocab_size": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.get_pairs": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.jieba": {
  "data": {
   "shadows": "jieba"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.lowercase_and_remove_accent": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "transformers.tokenization_xlm.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.remove_non_printing_char": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "transformers.tokenization_xlm.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.replace_unicode_punct": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "transformers.tokenization_xlm.re"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.romanian_preprocessing": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.sm": {
  "data": {
   "shadows": "sacremoses"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.th_word_tokenize": {
  "data": {
   "shadows": "pythainlp.tokenize.word_tokenize"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.tokenization_xlnet.logging"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_xlnet.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.SEG_ID_A": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.SEG_ID_B": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.SEG_ID_CLS": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.SEG_ID_PAD": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.SEG_ID_SEP": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.SPIECE_UNDERLINE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "transformers.tokenization_xlnet.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_xlnet.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_xlnet.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.__getstate__": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ImportError",
    "sentencepiece.SentencePieceProcessor",
    "super",
    "transformers.tokenization_xlnet.XLNetTokenizer",
    "transformers.tokenization_xlnet.logger"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.__setstate__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ImportError",
    "sentencepiece.SentencePieceProcessor",
    "transformers.tokenization_xlnet.logger"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "transformers.tokenization_xlnet.six"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer._tokenize": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "str",
    "transformers.tokenization_xlnet.SPIECE_UNDERLINE",
    "transformers.tokenization_xlnet.six"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "transformers.tokenization_xlnet.SPIECE_UNDERLINE"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.preprocess_text": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "transformers.tokenization_xlnet.six",
    "transformers.tokenization_xlnet.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.save_vocabulary": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "shutil.copyfile",
    "transformers.tokenization_xlnet.VOCAB_FILES_NAMES",
    "transformers.tokenization_xlnet.logger",
    "transformers.tokenization_xlnet.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.vocab_size": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.spm": {
  "data": {
   "shadows": "sentencepiece"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 }
}