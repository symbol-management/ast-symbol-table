{
 "transformers": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "is_flax_available",
    "is_sentencepiece_available",
    "is_tf_available",
    "is_tokenizers_available",
    "is_torch_available",
    "transformers.logger"
   ]
  },
  "type": "module"
 },
 "transformers.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "transformers.absl.logging": {
  "data": {
   "shadows": "absl.logging"
  },
  "type": "import"
 },
 "transformers.activations": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "packaging.version.parse",
    "torch.nn.functional.gelu",
    "torch.nn.functional.relu",
    "torch.nn.functional.silu",
    "transformers.activations._gelu_python",
    "transformers.activations._silu_python",
    "transformers.activations.gelu",
    "transformers.activations.gelu_fast",
    "transformers.activations.gelu_new",
    "transformers.activations.linear_act",
    "transformers.activations.mish",
    "transformers.activations.silu",
    "transformers.activations.torch"
   ]
  },
  "type": "module"
 },
 "transformers.activations.ACT2FN": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "transformers.activations.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.activations._gelu_python": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "transformers.activations.math",
    "transformers.activations.torch"
   ]
  },
  "type": "function"
 },
 "transformers.activations._silu_python": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "transformers.activations.torch"
   ]
  },
  "type": "function"
 },
 "transformers.activations.gelu": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.activations.gelu_fast": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "transformers.activations.torch"
   ]
  },
  "type": "function"
 },
 "transformers.activations.gelu_new": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "transformers.activations.math",
    "transformers.activations.torch"
   ]
  },
  "type": "function"
 },
 "transformers.activations.get_activation": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "KeyError",
    "list",
    "transformers.activations.ACT2FN"
   ]
  },
  "type": "function"
 },
 "transformers.activations.linear_act": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "transformers.activations.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "transformers.activations.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.activations.mish": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "transformers.activations.torch"
   ]
  },
  "type": "function"
 },
 "transformers.activations.silu": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.activations.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.activations.version": {
  "data": {
   "shadows": "packaging.version"
  },
  "type": "import"
 },
 "transformers.activations_tf": {
  "data": {
   "symbols_in_volume": [
    "tensorflow.keras.activations.relu",
    "tensorflow.keras.activations.swish",
    "tensorflow.keras.activations.tanh",
    "tensorflow.keras.layers.Activation",
    "transformers.activations_tf.gelu",
    "transformers.activations_tf.gelu_fast",
    "transformers.activations_tf.gelu_new",
    "transformers.activations_tf.mish"
   ]
  },
  "type": "module"
 },
 "transformers.activations_tf.ACT2FN": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.activations_tf.gelu": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "tensorflow.convert_to_tensor",
    "tensorflow.math.erf",
    "tensorflow.math.sqrt"
   ]
  },
  "type": "function"
 },
 "transformers.activations_tf.gelu_fast": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.convert_to_tensor",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "transformers.activations_tf.gelu_new": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.convert_to_tensor",
    "tensorflow.pow",
    "tensorflow.sqrt",
    "tensorflow.tanh",
    "transformers.activations_tf.math"
   ]
  },
  "type": "function"
 },
 "transformers.activations_tf.get_tf_activation": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "KeyError",
    "list",
    "transformers.activations_tf.ACT2FN"
   ]
  },
  "type": "function"
 },
 "transformers.activations_tf.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.activations_tf.mish": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "tensorflow.convert_to_tensor",
    "tensorflow.math.softplus",
    "tensorflow.tanh"
   ]
  },
  "type": "function"
 },
 "transformers.activations_tf.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.benchmark": {
  "data": {},
  "type": "module"
 },
 "transformers.benchmark.benchmark": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_py3nvml_available",
    "is_torch_available"
   ]
  },
  "type": "module"
 },
 "transformers.benchmark.benchmark.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._inference_memory": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._inference_speed": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._measure_memory": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "Memory",
    "NotImplementedError",
    "RuntimeError",
    "func",
    "int",
    "is_py3nvml_available",
    "isinstance",
    "measure_peak_memory_cpu",
    "py3nvml.py3nvml.nvmlDeviceGetHandleByIndex",
    "py3nvml.py3nvml.nvmlDeviceGetMemoryInfo",
    "py3nvml.py3nvml.nvmlInit",
    "py3nvml.py3nvml.nvmlShutdown",
    "start_memory_tracing",
    "stop_memory_tracing",
    "transformers.benchmark.benchmark.logger",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._measure_speed": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "RuntimeError",
    "float",
    "min",
    "torch_xla.debug.metrics.metrics_report",
    "transformers.benchmark.benchmark.logger",
    "transformers.benchmark.benchmark.timeit"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._prepare_inference_func": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "getattr",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "model_cls",
    "str",
    "transformers.benchmark.benchmark.logger",
    "transformers.benchmark.benchmark.torch",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._prepare_inference_func.encoder_decoder_forward": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "inference_model",
    "transformers.benchmark.benchmark.torch"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._prepare_inference_func.encoder_forward": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "inference_model",
    "transformers.benchmark.benchmark.torch"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._prepare_train_func": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ImportError",
    "NotImplementedError",
    "__import__",
    "getattr",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "model_cls",
    "str",
    "transformers.benchmark.benchmark.logger",
    "transformers.benchmark.benchmark.torch",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._prepare_train_func.compute_loss_and_backprob_encoder": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "train_model"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._prepare_train_func.compute_loss_and_backprob_encoder_decoder": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "train_model"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._train_memory": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark._train_speed": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark.PyTorchBenchmark.framework_version": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "property",
    "transformers.benchmark.benchmark.torch"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark.logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.benchmark.benchmark.met": {
  "data": {
   "shadows": "torch_xla.debug.metrics"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark.nvml": {
  "data": {
   "shadows": "py3nvml.py3nvml"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_torch_available",
    "is_torch_tpu_available"
   ]
  },
  "type": "module"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "dataclasses.field",
    "str"
   ]
  },
  "type": "class"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "setattr",
    "super",
    "transformers.benchmark.benchmark_args.logger"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments._setup_devices": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "int",
    "is_torch_tpu_available",
    "torch_xla.core.xla_model.xla_device",
    "transformers.benchmark.benchmark_args.logger",
    "transformers.benchmark.benchmark_args.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments.device": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments.device_idx": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "int",
    "property",
    "transformers.benchmark.benchmark_args.torch"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments.is_gpu": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments.is_tpu": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "is_torch_tpu_available",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args.PyTorchBenchmarkArguments.n_gpu": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.benchmark.benchmark_args.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args.xm": {
  "data": {
   "shadows": "torch_xla.core.xla_model"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args_tf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_tf_available"
   ]
  },
  "type": "module"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "dataclasses.field",
    "int",
    "str"
   ]
  },
  "type": "class"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "super",
    "transformers.benchmark.benchmark_args_tf.logger"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments._setup_strategy": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tensorflow.config.experimental.set_visible_devices",
    "tensorflow.config.experimental_connect_to_cluster",
    "tensorflow.distribute.OneDeviceStrategy",
    "tensorflow.distribute.experimental.TPUStrategy",
    "tensorflow.tpu.experimental.initialize_tpu_system",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments._setup_tpu": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.distribute.cluster_resolver.TPUClusterResolver",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments.gpu_list": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "property",
    "tensorflow.config.list_physical_devices"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments.is_gpu": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments.is_tpu": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments.n_gpu": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "int",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.TensorFlowBenchmarkArguments.strategy": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_tf.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args_tf.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args_tf.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args_tf.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.benchmark.benchmark_args_tf.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.benchmark.benchmark_args_utils.BenchmarkArguments": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "dataclasses.field",
    "int",
    "round",
    "str",
    "time.time",
    "transformers.benchmark.benchmark_args_utils.list_field",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "transformers.benchmark.benchmark_args_utils.BenchmarkArguments.do_multi_processing": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "property",
    "transformers.benchmark.benchmark_args_utils.logger"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_utils.BenchmarkArguments.model_names": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_utils.BenchmarkArguments.to_json_string": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "transformers.benchmark.benchmark_args_utils.dataclasses",
    "transformers.benchmark.benchmark_args_utils.json"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args_utils.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args_utils.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args_utils.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args_utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_args_utils.list_field": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "dataclasses.field"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_args_utils.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.benchmark.benchmark_args_utils.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_tf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_py3nvml_available",
    "is_tf_available"
   ]
  },
  "type": "module"
 },
 "transformers.benchmark.benchmark_tf.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_tf.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_tf.ResourceExhaustedError": {
  "data": {
   "shadows": "tensorflow.python.framework.errors_impl.ResourceExhaustedError"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._inference_memory": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "int",
    "str",
    "tensorflow.config.experimental.set_memory_growth",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._inference_speed": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._measure_memory": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "Memory",
    "NotImplementedError",
    "func",
    "int",
    "is_py3nvml_available",
    "isinstance",
    "measure_peak_memory_cpu",
    "py3nvml.py3nvml.nvmlDeviceGetHandleByIndex",
    "py3nvml.py3nvml.nvmlDeviceGetMemoryInfo",
    "py3nvml.py3nvml.nvmlInit",
    "py3nvml.py3nvml.nvmlShutdown",
    "start_memory_tracing",
    "stop_memory_tracing",
    "tensorflow.python.framework.errors_impl.ResourceExhaustedError",
    "transformers.benchmark.benchmark_tf.logger",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._measure_speed": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "float",
    "func",
    "min",
    "tensorflow.python.framework.errors_impl.ResourceExhaustedError",
    "transformers.benchmark.benchmark_tf.logger",
    "transformers.benchmark.benchmark_tf.timeit"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._prepare_inference_func": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ImportError",
    "NotImplementedError",
    "__import__",
    "getattr",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "model_cls",
    "str",
    "transformers.benchmark.benchmark_tf.random_input_ids",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._prepare_inference_func.encoder_decoder_forward": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "model",
    "transformers.benchmark.benchmark_tf.run_with_tf_optimizations"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._prepare_inference_func.encoder_forward": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "model",
    "transformers.benchmark.benchmark_tf.run_with_tf_optimizations"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._prepare_train_func": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ImportError",
    "NotImplementedError",
    "__import__",
    "getattr",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "model",
    "model_cls",
    "str",
    "transformers.benchmark.benchmark_tf.random_input_ids",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._prepare_train_func.encoder_decoder_train": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "model",
    "model.trainable_variables",
    "tensorflow.gradients",
    "transformers.benchmark.benchmark_tf.run_with_tf_optimizations"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._prepare_train_func.encoder_train": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "model",
    "model.trainable_variables",
    "tensorflow.gradients",
    "transformers.benchmark.benchmark_tf.run_with_tf_optimizations"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._train_memory": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "int",
    "str",
    "tensorflow.config.experimental.set_memory_growth",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark._train_speed": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.TensorFlowBenchmark.framework_version": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "property",
    "tensorflow.__version__"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.logger": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.benchmark.benchmark_tf.nvml": {
  "data": {
   "shadows": "py3nvml.py3nvml"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_tf.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_tf.random_input_ids": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "int",
    "range",
    "tensorflow.constant",
    "tensorflow.int32",
    "transformers.benchmark.benchmark_tf.random"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.run_with_tf_optimizations": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.run_with_tf_optimizations.run_func": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.run_with_tf_optimizations.run_func.run_in_eager_mode": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.run_with_tf_optimizations.run_func.run_in_graph_mode": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "func",
    "functools.wraps",
    "tensorflow.function"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_tf.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_tf.timeit": {
  "data": {
   "shadows": "timeit"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_tf.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "is_psutil_available",
    "is_py3nvml_available",
    "is_tf_available",
    "is_torch_available",
    "transformers.benchmark.benchmark_utils.UsedMemoryState",
    "transformers.benchmark.benchmark_utils.platform",
    "typing.List"
   ]
  },
  "type": "module"
 },
 "transformers.benchmark.benchmark_utils.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.AutoConfig": {
  "data": {
   "shadows": "transformers.AutoConfig"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.Benchmark": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "abc.ABC",
    "str",
    "transformers.PretrainedConfig"
   ]
  },
  "type": "class"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.__init__": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "transformers.AutoConfig.from_pretrained",
    "transformers.PretrainedConfig",
    "transformers.benchmark.benchmark_utils.logger",
    "transformers.benchmark.benchmark_utils.os",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark._inference_memory": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "str",
    "transformers.benchmark.benchmark_utils.Memory",
    "transformers.benchmark.benchmark_utils.MemorySummary",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark._inference_speed": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark._train_memory": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int",
    "str",
    "transformers.benchmark.benchmark_utils.Memory",
    "transformers.benchmark.benchmark_utils.MemorySummary",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark._train_speed": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.environment_info": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "datetime.datetime.date",
    "datetime.datetime.now",
    "datetime.datetime.time",
    "is_psutil_available",
    "is_py3nvml_available",
    "property",
    "py3nvml.py3nvml.nvmlDeviceGetHandleByIndex",
    "py3nvml.py3nvml.nvmlDeviceGetMemoryInfo",
    "py3nvml.py3nvml.nvmlDeviceGetName",
    "py3nvml.py3nvml.nvmlDeviceGetPerformanceState",
    "py3nvml.py3nvml.nvmlDeviceGetPowerManagementLimit",
    "py3nvml.py3nvml.nvmlInit",
    "py3nvml.py3nvml.nvmlShutdown",
    "transformers.__version__",
    "transformers.benchmark.benchmark_utils.bytes_to_mega_bytes",
    "transformers.benchmark.benchmark_utils.logger",
    "transformers.benchmark.benchmark_utils.platform",
    "transformers.benchmark.benchmark_utils.psutil"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.framework_version": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.inference_memory": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "transformers.benchmark.benchmark_utils.Memory",
    "transformers.benchmark.benchmark_utils.MemorySummary",
    "transformers.benchmark.benchmark_utils.separate_process_wrapper_fn",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.inference_speed": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "float",
    "transformers.benchmark.benchmark_utils.separate_process_wrapper_fn"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.print_fn": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "print",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.print_fn.print_and_log": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.print_memory_trace_statistics": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "transformers.benchmark.benchmark_utils.MemorySummary"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.print_results": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.run": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "open",
    "transformers.benchmark.benchmark_utils.BenchmarkOutput",
    "transformers.benchmark.benchmark_utils.copy",
    "transformers.benchmark.benchmark_utils.csv"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.save_to_csv": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "len",
    "open",
    "transformers.benchmark.benchmark_utils.csv"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.train_memory": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "transformers.benchmark.benchmark_utils.Memory",
    "transformers.benchmark.benchmark_utils.MemorySummary",
    "transformers.benchmark.benchmark_utils.separate_process_wrapper_fn",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.Benchmark.train_speed": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "float",
    "transformers.benchmark.benchmark_utils.separate_process_wrapper_fn"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.BenchmarkOutput": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.benchmark.benchmark_utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.Connection": {
  "data": {
   "shadows": "multiprocessing.connection.Connection"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.Frame": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "transformers.benchmark.benchmark_utils.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.Memory": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "bytes",
    "int",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "transformers.benchmark.benchmark_utils.Memory.__repr__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "bytes_to_mega_bytes",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.MemoryState": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "transformers.benchmark.benchmark_utils.Frame",
    "transformers.benchmark.benchmark_utils.Memory",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "transformers.benchmark.benchmark_utils.MemorySummary": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "transformers.benchmark.benchmark_utils.Memory",
    "transformers.benchmark.benchmark_utils.MemoryState",
    "typing.List",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "transformers.benchmark.benchmark_utils.MemoryTrace": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "transformers.benchmark.benchmark_utils.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.Pipe": {
  "data": {
   "shadows": "multiprocessing.Pipe"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.PretrainedConfig": {
  "data": {
   "shadows": "transformers.PretrainedConfig"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.Queue": {
  "data": {
   "shadows": "multiprocessing.Queue"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.SIGKILL": {
  "data": {
   "shadows": "signal.SIGKILL"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.UsedMemoryState": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "int",
    "transformers.benchmark.benchmark_utils.Frame",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "transformers.benchmark.benchmark_utils._is_memory_tracing_enabled": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.benchmark.benchmark_utils.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.bytes_to_mega_bytes": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.is_memory_tracing_enabled": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "transformers.benchmark.benchmark_utils._is_memory_tracing_enabled"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.linecache": {
  "data": {
   "shadows": "linecache"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.benchmark.benchmark_utils.measure_peak_memory_cpu": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "Exception",
    "MemoryMeasureProcess",
    "RuntimeError",
    "function",
    "int",
    "is_psutil_available",
    "multiprocessing.Pipe",
    "signal.SIGKILL",
    "transformers.benchmark.benchmark_utils.logger",
    "transformers.benchmark.benchmark_utils.os",
    "transformers.benchmark.benchmark_utils.psutil",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.measure_peak_memory_cpu.MemoryMeasureProcess": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "multiprocessing.Process"
   ]
  },
  "type": "class"
 },
 "transformers.benchmark.benchmark_utils.measure_peak_memory_cpu.MemoryMeasureProcess.__init__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "float",
    "get_cpu_memory",
    "int",
    "multiprocessing.connection.Connection",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.measure_peak_memory_cpu.MemoryMeasureProcess.run": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "get_cpu_memory",
    "max"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.measure_peak_memory_cpu.get_cpu_memory": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "hasattr",
    "int",
    "transformers.benchmark.benchmark_utils.psutil"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.nvml": {
  "data": {
   "shadows": "py3nvml.py3nvml"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.separate_process_wrapper_fn": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "bool",
    "func",
    "transformers.benchmark.benchmark_utils.logger",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.separate_process_wrapper_fn.multi_process_func": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "list",
    "multiprocessing.Process",
    "multiprocessing.Queue"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.separate_process_wrapper_fn.multi_process_func.wrapper_func": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Exception",
    "func",
    "multiprocessing.Queue",
    "print",
    "transformers.benchmark.benchmark_utils.logger"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.start_memory_tracing": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "OSError",
    "int",
    "is_psutil_available",
    "is_py3nvml_available",
    "is_tf_available",
    "is_torch_available",
    "list",
    "py3nvml.py3nvml.NVMLError",
    "py3nvml.py3nvml.nvmlDeviceGetCount",
    "py3nvml.py3nvml.nvmlInit",
    "py3nvml.py3nvml.nvmlShutdown",
    "range",
    "str",
    "transformers.benchmark.benchmark_utils.MemoryTrace",
    "transformers.benchmark.benchmark_utils._is_memory_tracing_enabled",
    "transformers.benchmark.benchmark_utils.logger",
    "transformers.benchmark.benchmark_utils.os",
    "transformers.benchmark.benchmark_utils.psutil",
    "transformers.benchmark.benchmark_utils.sys",
    "typing.Iterable",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.start_memory_tracing.traceit": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "all",
    "any",
    "is_tf_available",
    "is_torch_available",
    "isinstance",
    "list",
    "py3nvml.py3nvml.nvmlDeviceGetHandleByIndex",
    "py3nvml.py3nvml.nvmlDeviceGetMemoryInfo",
    "py3nvml.py3nvml.nvmlInit",
    "py3nvml.py3nvml.nvmlShutdown",
    "str",
    "tensorflow.python.eager.context.context",
    "torch.cuda.empty_cache",
    "transformers.benchmark.benchmark_utils.Frame",
    "transformers.benchmark.benchmark_utils.UsedMemoryState",
    "transformers.benchmark.benchmark_utils._is_memory_tracing_enabled",
    "transformers.benchmark.benchmark_utils.linecache",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.stop_memory_tracing": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "bool",
    "collections.defaultdict",
    "len",
    "list",
    "max",
    "sorted",
    "sum",
    "transformers.benchmark.benchmark_utils.Memory",
    "transformers.benchmark.benchmark_utils.MemoryState",
    "transformers.benchmark.benchmark_utils.MemorySummary",
    "transformers.benchmark.benchmark_utils.MemoryTrace",
    "transformers.benchmark.benchmark_utils._is_memory_tracing_enabled",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.benchmark.benchmark_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.tf_context": {
  "data": {
   "shadows": "tensorflow.python.eager.context"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.torch_empty_cache": {
  "data": {
   "shadows": "torch.cuda.empty_cache"
  },
  "type": "import"
 },
 "transformers.benchmark.benchmark_utils.version": {
  "data": {
   "shadows": "transformers.__version__"
  },
  "type": "import"
 },
 "transformers.commands": {
  "data": {},
  "type": "module"
 },
 "transformers.commands.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "transformers.commands.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "transformers.commands.BaseTransformersCLICommand": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "transformers.commands.BaseTransformersCLICommand.register_subcommand": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "argparse.ArgumentParser",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "transformers.commands.BaseTransformersCLICommand.run": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "transformers.commands.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "transformers.commands.convert": {
  "data": {},
  "type": "module"
 },
 "transformers.commands.convert.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "transformers.commands.convert.BaseTransformersCLICommand": {
  "data": {
   "shadows": "transformers.commands.BaseTransformersCLICommand"
  },
  "type": "import"
 },
 "transformers.commands.convert.ConvertCommand": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "transformers.commands.BaseTransformersCLICommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.convert.ConvertCommand.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.commands.convert.ConvertCommand.register_subcommand": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "argparse.ArgumentParser",
    "staticmethod",
    "str",
    "transformers.commands.convert.convert_command_factory"
   ]
  },
  "type": "function"
 },
 "transformers.commands.convert.ConvertCommand.run": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "transformers.commands.convert.IMPORT_ERROR_MESSAGE",
    "transformers.convert_albert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch",
    "transformers.convert_bert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch",
    "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch",
    "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.convert_gpt2_checkpoint_to_pytorch",
    "transformers.convert_lxmert_original_pytorch_checkpoint_to_pytorch.convert_lxmert_checkpoint_to_pytorch",
    "transformers.convert_openai_original_tf_checkpoint_to_pytorch.convert_openai_checkpoint_to_pytorch",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.convert_transfo_xl_checkpoint_to_pytorch",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.convert_xlm_checkpoint_to_pytorch",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.convert_xlnet_checkpoint_to_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.commands.convert.IMPORT_ERROR_MESSAGE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "transformers.commands.convert.Namespace": {
  "data": {
   "shadows": "argparse.Namespace"
  },
  "type": "import"
 },
 "transformers.commands.convert.convert_command_factory": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ConvertCommand",
    "argparse.Namespace"
   ]
  },
  "type": "function"
 },
 "transformers.commands.convert.convert_gpt2_checkpoint_to_pytorch": {
  "data": {
   "shadows": "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.convert_gpt2_checkpoint_to_pytorch"
  },
  "type": "import"
 },
 "transformers.commands.convert.convert_lxmert_checkpoint_to_pytorch": {
  "data": {
   "shadows": "transformers.convert_lxmert_original_pytorch_checkpoint_to_pytorch.convert_lxmert_checkpoint_to_pytorch"
  },
  "type": "import"
 },
 "transformers.commands.convert.convert_openai_checkpoint_to_pytorch": {
  "data": {
   "shadows": "transformers.convert_openai_original_tf_checkpoint_to_pytorch.convert_openai_checkpoint_to_pytorch"
  },
  "type": "import"
 },
 "transformers.commands.convert.convert_tf_checkpoint_to_pytorch": {
  "data": {
   "shadows": "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch"
  },
  "type": "import"
 },
 "transformers.commands.convert.convert_transfo_xl_checkpoint_to_pytorch": {
  "data": {
   "shadows": "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.convert_transfo_xl_checkpoint_to_pytorch"
  },
  "type": "import"
 },
 "transformers.commands.convert.convert_xlm_checkpoint_to_pytorch": {
  "data": {
   "shadows": "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.convert_xlm_checkpoint_to_pytorch"
  },
  "type": "import"
 },
 "transformers.commands.convert.convert_xlnet_checkpoint_to_pytorch": {
  "data": {
   "shadows": "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.convert_xlnet_checkpoint_to_pytorch"
  },
  "type": "import"
 },
 "transformers.commands.download": {
  "data": {},
  "type": "module"
 },
 "transformers.commands.download.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "transformers.commands.download.AutoModel": {
  "data": {
   "shadows": "transformers.AutoModel"
  },
  "type": "import"
 },
 "transformers.commands.download.AutoTokenizer": {
  "data": {
   "shadows": "transformers.AutoTokenizer"
  },
  "type": "import"
 },
 "transformers.commands.download.BaseTransformersCLICommand": {
  "data": {
   "shadows": "transformers.commands.BaseTransformersCLICommand"
  },
  "type": "import"
 },
 "transformers.commands.download.DownloadCommand": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "transformers.commands.BaseTransformersCLICommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.download.DownloadCommand.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "bool",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.commands.download.DownloadCommand.register_subcommand": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "argparse.ArgumentParser",
    "staticmethod",
    "str",
    "transformers.commands.download.download_command_factory"
   ]
  },
  "type": "function"
 },
 "transformers.commands.download.DownloadCommand.run": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "transformers.AutoModel.from_pretrained",
    "transformers.AutoTokenizer.from_pretrained"
   ]
  },
  "type": "function"
 },
 "transformers.commands.download.download_command_factory": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "DownloadCommand"
   ]
  },
  "type": "function"
 },
 "transformers.commands.env": {
  "data": {},
  "type": "module"
 },
 "transformers.commands.env.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "transformers.commands.env.BaseTransformersCLICommand": {
  "data": {
   "shadows": "transformers.commands.BaseTransformersCLICommand"
  },
  "type": "import"
 },
 "transformers.commands.env.EnvironmentCommand": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "transformers.commands.BaseTransformersCLICommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.env.EnvironmentCommand.format_dict": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "transformers.commands.env.EnvironmentCommand.register_subcommand": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "argparse.ArgumentParser",
    "staticmethod",
    "transformers.commands.env.info_command_factory"
   ]
  },
  "type": "function"
 },
 "transformers.commands.env.EnvironmentCommand.run": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "AttributeError",
    "bool",
    "print",
    "tensorflow.__version__",
    "tensorflow.config.list_physical_devices",
    "tensorflow.test.is_gpu_available",
    "transformers.__version__",
    "transformers.commands.env.platform",
    "transformers.commands.env.torch",
    "transformers.is_tf_available",
    "transformers.is_torch_available"
   ]
  },
  "type": "function"
 },
 "transformers.commands.env.info_command_factory": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "EnvironmentCommand"
   ]
  },
  "type": "function"
 },
 "transformers.commands.env.is_tf_available": {
  "data": {
   "shadows": "transformers.is_tf_available"
  },
  "type": "import"
 },
 "transformers.commands.env.is_torch_available": {
  "data": {
   "shadows": "transformers.is_torch_available"
  },
  "type": "import"
 },
 "transformers.commands.env.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "transformers.commands.env.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.commands.env.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.commands.env.version": {
  "data": {
   "shadows": "transformers.__version__"
  },
  "type": "import"
 },
 "transformers.commands.run": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.commands.run.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "transformers.commands.run.BaseTransformersCLICommand": {
  "data": {
   "shadows": "transformers.commands.BaseTransformersCLICommand"
  },
  "type": "import"
 },
 "transformers.commands.run.Pipeline": {
  "data": {
   "shadows": "transformers.pipelines.Pipeline"
  },
  "type": "import"
 },
 "transformers.commands.run.PipelineDataFormat": {
  "data": {
   "shadows": "transformers.pipelines.PipelineDataFormat"
  },
  "type": "import"
 },
 "transformers.commands.run.RunCommand": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "transformers.commands.BaseTransformersCLICommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.run.RunCommand.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "transformers.pipelines.Pipeline",
    "transformers.pipelines.PipelineDataFormat"
   ]
  },
  "type": "function"
 },
 "transformers.commands.run.RunCommand.register_subcommand": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "argparse.ArgumentParser",
    "int",
    "staticmethod",
    "str",
    "transformers.commands.run.run_command_factory",
    "transformers.pipelines.PipelineDataFormat.SUPPORTED_FORMATS",
    "transformers.pipelines.SUPPORTED_TASKS.keys"
   ]
  },
  "type": "function"
 },
 "transformers.commands.run.RunCommand.run": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "nlp",
    "transformers.commands.run.logger"
   ]
  },
  "type": "function"
 },
 "transformers.commands.run.SUPPORTED_TASKS": {
  "data": {
   "shadows": "transformers.pipelines.SUPPORTED_TASKS"
  },
  "type": "import"
 },
 "transformers.commands.run.logger": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "transformers.commands.run.pipeline": {
  "data": {
   "shadows": "transformers.pipelines.pipeline"
  },
  "type": "import"
 },
 "transformers.commands.run.run_command_factory": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "RunCommand",
    "format",
    "transformers.commands.run.try_infer_format_from_ext",
    "transformers.pipelines.PipelineDataFormat.from_str",
    "transformers.pipelines.pipeline"
   ]
  },
  "type": "function"
 },
 "transformers.commands.run.try_infer_format_from_ext": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception",
    "str",
    "transformers.pipelines.PipelineDataFormat.SUPPORTED_FORMATS"
   ]
  },
  "type": "function"
 },
 "transformers.commands.serving": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "object",
    "pydantic.BaseModel"
   ]
  },
  "type": "module"
 },
 "transformers.commands.serving.APIRoute": {
  "data": {
   "shadows": "fastapi.routing.APIRoute"
  },
  "type": "import"
 },
 "transformers.commands.serving.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.commands.serving.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "transformers.commands.serving.BaseModel": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "transformers.commands.serving.BaseTransformersCLICommand": {
  "data": {
   "shadows": "transformers.commands.BaseTransformersCLICommand"
  },
  "type": "import"
 },
 "transformers.commands.serving.Body": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "transformers.commands.serving.FastAPI": {
  "data": {
   "shadows": "fastapi.FastAPI"
  },
  "type": "import"
 },
 "transformers.commands.serving.HTTPException": {
  "data": {
   "shadows": "fastapi.HTTPException"
  },
  "type": "import"
 },
 "transformers.commands.serving.JSONResponse": {
  "data": {
   "shadows": "starlette.responses.JSONResponse"
  },
  "type": "import"
 },
 "transformers.commands.serving.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.commands.serving.Namespace": {
  "data": {
   "shadows": "argparse.Namespace"
  },
  "type": "import"
 },
 "transformers.commands.serving.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.commands.serving.Pipeline": {
  "data": {
   "shadows": "transformers.Pipeline"
  },
  "type": "import"
 },
 "transformers.commands.serving.SUPPORTED_TASKS": {
  "data": {
   "shadows": "transformers.pipelines.SUPPORTED_TASKS"
  },
  "type": "import"
 },
 "transformers.commands.serving.ServeCommand": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Exception",
    "fastapi.Body",
    "fastapi.HTTPException",
    "len",
    "str",
    "transformers.commands.BaseTransformersCLICommand",
    "transformers.commands.serving.ServeForwardResult"
   ]
  },
  "type": "class"
 },
 "transformers.commands.serving.ServeCommand.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "RuntimeError",
    "fastapi.FastAPI",
    "fastapi.routing.APIRoute",
    "int",
    "starlette.responses.JSONResponse",
    "str",
    "transformers.Pipeline",
    "transformers.commands.serving.ServeDeTokenizeResult",
    "transformers.commands.serving.ServeForwardResult",
    "transformers.commands.serving.ServeModelInfoResult",
    "transformers.commands.serving.ServeTokenizeResult",
    "transformers.commands.serving._serve_dependencies_installed",
    "transformers.commands.serving.logger",
    "transformers.pipelines.pipeline"
   ]
  },
  "type": "function"
 },
 "transformers.commands.serving.ServeCommand.detokenize": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "fastapi.Body",
    "fastapi.HTTPException",
    "int",
    "str",
    "transformers.commands.serving.ServeDeTokenizeResult",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.commands.serving.ServeCommand.model_info": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "transformers.commands.serving.ServeModelInfoResult",
    "vars"
   ]
  },
  "type": "function"
 },
 "transformers.commands.serving.ServeCommand.register_subcommand": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "argparse.ArgumentParser",
    "int",
    "staticmethod",
    "str",
    "transformers.commands.serving.serve_command_factory",
    "transformers.pipelines.SUPPORTED_TASKS.keys"
   ]
  },
  "type": "function"
 },
 "transformers.commands.serving.ServeCommand.run": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "uvicorn.run"
   ]
  },
  "type": "function"
 },
 "transformers.commands.serving.ServeCommand.tokenize": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "fastapi.Body",
    "fastapi.HTTPException",
    "str",
    "transformers.commands.serving.ServeTokenizeResult"
   ]
  },
  "type": "function"
 },
 "transformers.commands.serving.ServeDeTokenizeResult": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pydantic.BaseModel",
    "str"
   ]
  },
  "type": "class"
 },
 "transformers.commands.serving.ServeForwardResult": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pydantic.BaseModel",
    "typing.Any"
   ]
  },
  "type": "class"
 },
 "transformers.commands.serving.ServeModelInfoResult": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dict",
    "pydantic.BaseModel"
   ]
  },
  "type": "class"
 },
 "transformers.commands.serving.ServeTokenizeResult": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "int",
    "pydantic.BaseModel",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "transformers.commands.serving._serve_dependencies_installed": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.commands.serving.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.commands.serving.pipeline": {
  "data": {
   "shadows": "transformers.pipelines.pipeline"
  },
  "type": "import"
 },
 "transformers.commands.serving.run": {
  "data": {
   "shadows": "uvicorn.run"
  },
  "type": "import"
 },
 "transformers.commands.serving.serve_command_factory": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ServeCommand",
    "argparse.Namespace",
    "transformers.pipelines.pipeline"
   ]
  },
  "type": "function"
 },
 "transformers.commands.train": {
  "data": {
   "symbols_in_volume": [
    "RuntimeError",
    "transformers.is_tf_available",
    "transformers.is_torch_available"
   ]
  },
  "type": "module"
 },
 "transformers.commands.train.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "transformers.commands.train.BaseTransformersCLICommand": {
  "data": {
   "shadows": "transformers.commands.BaseTransformersCLICommand"
  },
  "type": "import"
 },
 "transformers.commands.train.Namespace": {
  "data": {
   "shadows": "argparse.Namespace"
  },
  "type": "import"
 },
 "transformers.commands.train.Processor": {
  "data": {
   "shadows": "transformers.SingleSentenceClassificationProcessor"
  },
  "type": "import"
 },
 "transformers.commands.train.TextClassificationPipeline": {
  "data": {
   "shadows": "transformers.TextClassificationPipeline"
  },
  "type": "import"
 },
 "transformers.commands.train.TrainCommand": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "transformers.commands.BaseTransformersCLICommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.train.TrainCommand.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "NotImplementedError",
    "argparse.Namespace",
    "transformers.SingleSentenceClassificationProcessor.create_from_csv",
    "transformers.TextClassificationPipeline.from_pretrained",
    "transformers.commands.train.os",
    "transformers.is_tf_available"
   ]
  },
  "type": "function"
 },
 "transformers.commands.train.TrainCommand.register_subcommand": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "argparse.ArgumentParser",
    "float",
    "int",
    "staticmethod",
    "str",
    "transformers.commands.train.train_command_factory"
   ]
  },
  "type": "function"
 },
 "transformers.commands.train.TrainCommand.run": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "transformers.commands.train.TrainCommand.run_tf": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "transformers.commands.train.TrainCommand.run_torch": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.commands.train.USE_AMP": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "transformers.commands.train.USE_XLA": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "transformers.commands.train.is_tf_available": {
  "data": {
   "shadows": "transformers.is_tf_available"
  },
  "type": "import"
 },
 "transformers.commands.train.is_torch_available": {
  "data": {
   "shadows": "transformers.is_torch_available"
  },
  "type": "import"
 },
 "transformers.commands.train.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.commands.train.train_command_factory": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "TrainCommand",
    "argparse.Namespace"
   ]
  },
  "type": "function"
 },
 "transformers.commands.transformers_cli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.commands.transformers_cli.main"
   ]
  },
  "type": "module"
 },
 "transformers.commands.transformers_cli.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "transformers.commands.transformers_cli.ConvertCommand": {
  "data": {
   "shadows": "transformers.commands.convert.ConvertCommand"
  },
  "type": "import"
 },
 "transformers.commands.transformers_cli.DownloadCommand": {
  "data": {
   "shadows": "transformers.commands.download.DownloadCommand"
  },
  "type": "import"
 },
 "transformers.commands.transformers_cli.EnvironmentCommand": {
  "data": {
   "shadows": "transformers.commands.env.EnvironmentCommand"
  },
  "type": "import"
 },
 "transformers.commands.transformers_cli.RunCommand": {
  "data": {
   "shadows": "transformers.commands.run.RunCommand"
  },
  "type": "import"
 },
 "transformers.commands.transformers_cli.ServeCommand": {
  "data": {
   "shadows": "transformers.commands.serving.ServeCommand"
  },
  "type": "import"
 },
 "transformers.commands.transformers_cli.UserCommands": {
  "data": {
   "shadows": "transformers.commands.user.UserCommands"
  },
  "type": "import"
 },
 "transformers.commands.transformers_cli.main": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "argparse.ArgumentParser",
    "exit",
    "hasattr",
    "transformers.commands.convert.ConvertCommand.register_subcommand",
    "transformers.commands.download.DownloadCommand.register_subcommand",
    "transformers.commands.env.EnvironmentCommand.register_subcommand",
    "transformers.commands.run.RunCommand.register_subcommand",
    "transformers.commands.serving.ServeCommand.register_subcommand",
    "transformers.commands.user.UserCommands.register_subcommand"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user": {
  "data": {},
  "type": "module"
 },
 "transformers.commands.user.ANSI": {
  "data": {
   "lineno": 75
  },
  "type": "class"
 },
 "transformers.commands.user.ANSI.bold": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.ANSI.gray": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.ANSI.red": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "transformers.commands.user.BaseTransformersCLICommand": {
  "data": {
   "shadows": "transformers.commands.BaseTransformersCLICommand"
  },
  "type": "import"
 },
 "transformers.commands.user.BaseUserCommand": {
  "data": {
   "lineno": 115
  },
  "type": "class"
 },
 "transformers.commands.user.BaseUserCommand.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "transformers.hf_api.HfApi"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.DeleteObjCommand": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "transformers.commands.user.BaseUserCommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.user.DeleteObjCommand.run": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "exit",
    "print",
    "requests.exceptions.HTTPError",
    "transformers.commands.user.ANSI",
    "transformers.hf_api.HfFolder.get_token"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.DeprecatedUploadCommand": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "transformers.commands.user.BaseUserCommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.user.DeprecatedUploadCommand.run": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "exit",
    "print",
    "transformers.commands.user.ANSI"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.HTTPError": {
  "data": {
   "shadows": "requests.exceptions.HTTPError"
  },
  "type": "import"
 },
 "transformers.commands.user.HfApi": {
  "data": {
   "shadows": "transformers.hf_api.HfApi"
  },
  "type": "import"
 },
 "transformers.commands.user.HfFolder": {
  "data": {
   "shadows": "transformers.hf_api.HfFolder"
  },
  "type": "import"
 },
 "transformers.commands.user.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.commands.user.ListObjsCommand": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "transformers.commands.user.BaseUserCommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.user.ListObjsCommand.run": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "exit",
    "len",
    "print",
    "requests.exceptions.HTTPError",
    "transformers.commands.user.ANSI",
    "transformers.commands.user.tabulate",
    "transformers.hf_api.HfFolder.get_token"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.ListReposObjsCommand": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "transformers.commands.user.BaseUserCommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.user.ListReposObjsCommand.run": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "exit",
    "len",
    "print",
    "requests.exceptions.HTTPError",
    "transformers.commands.user.ANSI",
    "transformers.commands.user.tabulate",
    "transformers.hf_api.HfFolder.get_token"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.LoginCommand": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "transformers.commands.user.BaseUserCommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.user.LoginCommand.run": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "exit",
    "getpass.getpass",
    "input",
    "print",
    "requests.exceptions.HTTPError",
    "transformers.commands.user.ANSI",
    "transformers.hf_api.HfFolder.path_token",
    "transformers.hf_api.HfFolder.save_token"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.LogoutCommand": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "transformers.commands.user.BaseUserCommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.user.LogoutCommand.run": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "exit",
    "print",
    "transformers.hf_api.HfFolder.delete_token",
    "transformers.hf_api.HfFolder.get_token"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.RepoCreateCommand": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "transformers.commands.user.BaseUserCommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.user.RepoCreateCommand.run": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "FileNotFoundError",
    "exit",
    "input",
    "print",
    "requests.exceptions.HTTPError",
    "transformers.commands.user.ANSI",
    "transformers.commands.user.subprocess",
    "transformers.hf_api.HfFolder.get_token"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.UPLOAD_MAX_FILES": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "transformers.commands.user.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.commands.user.UploadCommand": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "transformers.commands.user.BaseUserCommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.user.UploadCommand.run": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "ValueError",
    "exit",
    "input",
    "len",
    "print",
    "requests.exceptions.HTTPError",
    "transformers.commands.user.ANSI",
    "transformers.commands.user.UPLOAD_MAX_FILES",
    "transformers.commands.user.os",
    "transformers.commands.user.sys",
    "transformers.hf_api.HfFolder.get_token"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.UploadCommand.walk_dir": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "list",
    "transformers.commands.user.os",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.UserCommands": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "transformers.commands.BaseTransformersCLICommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.user.UserCommands.register_subcommand": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "DeleteObjCommand",
    "DeprecatedUploadCommand",
    "ListObjsCommand",
    "ListReposObjsCommand",
    "LoginCommand",
    "LogoutCommand",
    "RepoCreateCommand",
    "UploadCommand",
    "WhoamiCommand",
    "argparse.ArgumentParser",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.WhoamiCommand": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "transformers.commands.user.BaseUserCommand"
   ]
  },
  "type": "class"
 },
 "transformers.commands.user.WhoamiCommand.run": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "exit",
    "print",
    "requests.exceptions.HTTPError",
    "transformers.commands.user.ANSI",
    "transformers.hf_api.HfFolder.get_token"
   ]
  },
  "type": "function"
 },
 "transformers.commands.user.getpass": {
  "data": {
   "shadows": "getpass.getpass"
  },
  "type": "import"
 },
 "transformers.commands.user.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.commands.user.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "transformers.commands.user.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.commands.user.tabulate": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "str",
    "typing.List",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_albert": {
  "data": {},
  "type": "module"
 },
 "transformers.configuration_albert.ALBERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_albert.AlbertConfig": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "transformers.configuration_albert.AlbertConfig.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_auto": {
  "data": {
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_auto.ALL_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "transformers.configuration_auto.AutoConfig": {
  "data": {
   "lineno": 230
  },
  "type": "class"
 },
 "transformers.configuration_auto.AutoConfig.__init__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_auto.AutoConfig.for_model": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "config_class",
    "str",
    "transformers.configuration_auto.CONFIG_MAPPING"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_auto.AutoConfig.from_pretrained": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "config_class",
    "config_class.from_dict",
    "transformers.configuration_auto.CONFIG_MAPPING",
    "transformers.configuration_auto.replace_list_option_in_docstrings"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_auto.CONFIG_MAPPING": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "transformers.configuration_auto.MODEL_NAMES_MAPPING": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "transformers.configuration_auto.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "transformers.configuration_auto._list_model_options": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "transformers.configuration_auto.CONFIG_MAPPING",
    "transformers.configuration_auto.MODEL_NAMES_MAPPING"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_auto.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.configuration_auto.replace_list_option_in_docstrings": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "transformers.configuration_auto.replace_list_option_in_docstrings.docstring_decorator": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "transformers.configuration_auto._list_model_options",
    "transformers.configuration_auto.re"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_bart": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_bart.BART_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.configuration_bart.BartConfig": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "transformers.configuration_bart.BartConfig.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_bart.BartConfig.hidden_size": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_bart.BartConfig.is_valid_mbart": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "bool",
    "transformers.configuration_bart.logger"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_bart.BartConfig.num_attention_heads": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_bart.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_bert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_bert.BERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_bert.BertConfig": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "transformers.configuration_bert.BertConfig.__init__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_bert.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.configuration_bert_generation": {
  "data": {},
  "type": "module"
 },
 "transformers.configuration_bert_generation.BertGenerationConfig": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "transformers.configuration_bert_generation.BertGenerationConfig.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_blenderbot": {
  "data": {},
  "type": "module"
 },
 "transformers.configuration_blenderbot.BLENDERBOT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_blenderbot.BlenderbotConfig": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "transformers.configuration_blenderbot.BlenderbotConfig.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_camembert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_camembert.CAMEMBERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_camembert.CamembertConfig": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "transformers.configuration_camembert.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.configuration_ctrl": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_ctrl.CTRLConfig": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "transformers.configuration_ctrl.CTRLConfig.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_ctrl.CTRLConfig.hidden_size": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_ctrl.CTRLConfig.max_position_embeddings": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_ctrl.CTRLConfig.num_attention_heads": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_ctrl.CTRLConfig.num_hidden_layers": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_ctrl.CTRL_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.configuration_ctrl.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_deberta": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_deberta.DEBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.configuration_deberta.DebertaConfig": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "transformers.configuration_deberta.DebertaConfig.__init__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "str",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_deberta.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_distilbert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_distilbert.DISTILBERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.configuration_distilbert.DistilBertConfig": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "transformers.configuration_distilbert.DistilBertConfig.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_distilbert.DistilBertConfig.hidden_size": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_distilbert.DistilBertConfig.num_attention_heads": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_distilbert.DistilBertConfig.num_hidden_layers": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_distilbert.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_dpr": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_dpr.DPRConfig": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "transformers.configuration_dpr.DPRConfig.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_dpr.DPR_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.configuration_dpr.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_electra": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_electra.ELECTRA_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_electra.ElectraConfig": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "transformers.configuration_electra.ElectraConfig.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_electra.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.configuration_encoder_decoder": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_encoder_decoder.EncoderDecoderConfig": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "transformers.configuration_encoder_decoder.EncoderDecoderConfig.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_encoder_decoder.EncoderDecoderConfig.from_encoder_decoder_configs": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "transformers.configuration_encoder_decoder.logger"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_encoder_decoder.EncoderDecoderConfig.to_dict": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "transformers.configuration_encoder_decoder.copy"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_encoder_decoder.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.configuration_encoder_decoder.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.configuration_flaubert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_flaubert.FLAUBERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.configuration_flaubert.FlaubertConfig": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "transformers.configuration_flaubert.FlaubertConfig.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_flaubert.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_fsmt": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_fsmt.DecoderConfig": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "transformers.configuration_fsmt.DecoderConfig.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_fsmt.FSMTConfig": {
  "data": {
   "lineno": 41
  },
  "type": "class"
 },
 "transformers.configuration_fsmt.FSMTConfig.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "transformers.configuration_fsmt.DecoderConfig"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_fsmt.FSMTConfig.hidden_size": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_fsmt.FSMTConfig.num_attention_heads": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_fsmt.FSMTConfig.to_dict": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "transformers.configuration_fsmt.copy"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_fsmt.FSMT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.configuration_fsmt.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.configuration_fsmt.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_funnel": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_funnel.FUNNEL_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.configuration_funnel.FunnelConfig": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "transformers.configuration_funnel.FunnelConfig.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_funnel.FunnelConfig.hidden_size": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_funnel.FunnelConfig.num_attention_heads": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_funnel.FunnelConfig.num_blocks": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_funnel.FunnelConfig.num_hidden_layers": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_funnel.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_gpt2": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_gpt2.GPT2Config": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "transformers.configuration_gpt2.GPT2Config.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_gpt2.GPT2Config.hidden_size": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_gpt2.GPT2Config.max_position_embeddings": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_gpt2.GPT2Config.num_attention_heads": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_gpt2.GPT2Config.num_hidden_layers": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_gpt2.GPT2_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_gpt2.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.configuration_layoutlm": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_layoutlm.LAYOUTLM_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_layoutlm.LayoutLMConfig": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "transformers.configuration_layoutlm.LayoutLMConfig.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_layoutlm.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.configuration_longformer": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_longformer.LONGFORMER_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.configuration_longformer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.configuration_longformer.LongformerConfig": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "transformers.configuration_longformer.LongformerConfig.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "int",
    "super",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_longformer.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.configuration_longformer.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.configuration_lxmert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_lxmert.LXMERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_lxmert.LxmertConfig": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "transformers.configuration_lxmert.LxmertConfig.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_lxmert.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.configuration_marian": {
  "data": {},
  "type": "module"
 },
 "transformers.configuration_marian.MarianConfig": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "transformers.configuration_marian.PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "transformers.configuration_mbart": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_mbart.MBART_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.configuration_mbart.MBartConfig": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "transformers.configuration_mbart.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_mmbt": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_mmbt.MMBTConfig": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_mmbt.MMBTConfig.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "transformers.configuration_mmbt.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_mobilebert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_mobilebert.MOBILEBERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_mobilebert.MobileBertConfig": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "transformers.configuration_mobilebert.MOBILEBERT_PRETRAINED_CONFIG_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_mobilebert.MobileBertConfig.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_mobilebert.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "transformers.configuration_openai": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_openai.OPENAI_GPT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_openai.OpenAIGPTConfig": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.hidden_size": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.max_position_embeddings": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.num_attention_heads": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_openai.OpenAIGPTConfig.num_hidden_layers": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_openai.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.configuration_pegasus": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "dict"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_pegasus.DEFAULTS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_pegasus.PegasusConfig": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "transformers.configuration_pegasus.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_pegasus.task_specific_params": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.configuration_prophetnet": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_prophetnet.PROPHETNET_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_prophetnet.ProphetNetConfig": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "transformers.configuration_prophetnet.ProphetNetConfig.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_prophetnet.ProphetNetConfig.num_attention_heads": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_prophetnet.ProphetNetConfig.num_hidden_layers": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_prophetnet.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.configuration_rag": {
  "data": {},
  "type": "module"
 },
 "transformers.configuration_rag.RAG_CONFIG_DOC": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.configuration_rag.RagConfig": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.configuration_rag.RAG_CONFIG_DOC"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_rag.RagConfig.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_rag.RagConfig.from_question_encoder_generator_configs": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_rag.RagConfig.to_dict": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "transformers.configuration_rag.copy"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_rag.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.configuration_reformer": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_reformer.REFORMER_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_reformer.ReformerConfig": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "transformers.configuration_reformer.ReformerConfig.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "super",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_reformer.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.configuration_retribert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_retribert.RETRIBERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_retribert.RetriBertConfig": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "transformers.configuration_retribert.RetriBertConfig.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_retribert.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_roberta": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_roberta.ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_roberta.RobertaConfig": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "transformers.configuration_roberta.RobertaConfig.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_roberta.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.configuration_squeezebert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_squeezebert.SQUEEZEBERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.configuration_squeezebert.SqueezeBertConfig": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "transformers.configuration_squeezebert.SQUEEZEBERT_PRETRAINED_CONFIG_ARCHIVE_MAP"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_squeezebert.SqueezeBertConfig.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_squeezebert.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_t5": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_t5.T5Config": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "transformers.configuration_t5.T5Config.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_t5.T5Config.hidden_size": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_t5.T5Config.max_position_embeddings": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_t5.T5Config.num_attention_heads": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_t5.T5Config.num_hidden_layers": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_t5.T5_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.configuration_t5.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_transfo_xl": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_transfo_xl.TRANSFO_XL_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.__init__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "super",
    "transformers.configuration_transfo_xl.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.hidden_size": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.max_position_embeddings": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "property",
    "transformers.configuration_transfo_xl.logger"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.n_token": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.num_attention_heads": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_transfo_xl.TransfoXLConfig.num_hidden_layers": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_transfo_xl.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.configuration_transfo_xl.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.configuration_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.configuration_utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.configuration_utils.PretrainedConfig": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "bool",
    "object",
    "str"
   ]
  },
  "type": "class"
 },
 "transformers.configuration_utils.PretrainedConfig.__eq__": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "AttributeError",
    "dict",
    "int",
    "setattr",
    "str",
    "transformers.configuration_utils.logger"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.__repr__": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig._dict_from_json_file": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "classmethod",
    "open",
    "str",
    "transformers.configuration_utils.json"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.from_dict": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "dict",
    "hasattr",
    "int",
    "setattr",
    "str",
    "transformers.configuration_utils.logger",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.from_json_file": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls._dict_from_json_file",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.from_pretrained": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.get_config_dict": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "EnvironmentError",
    "cached_path",
    "classmethod",
    "hf_bucket_url",
    "is_remote_url",
    "str",
    "transformers.configuration_utils.json",
    "transformers.configuration_utils.logger",
    "transformers.configuration_utils.os",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.name_or_path": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.num_labels": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "dict",
    "int",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.save_pretrained": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "AssertionError",
    "str",
    "transformers.configuration_utils.logger",
    "transformers.configuration_utils.os"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.to_dict": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "hasattr",
    "str",
    "transformers.configuration_utils.copy",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.to_diff_dict": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "str",
    "transformers.configuration_utils.PretrainedConfig",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.to_json_file": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "bool",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.to_json_string": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "bool",
    "str",
    "transformers.configuration_utils.json"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.update": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "setattr",
    "str",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.PretrainedConfig.use_return_dict": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.configuration_utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.configuration_utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.configuration_utils.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.configuration_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.configuration_xlm": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_xlm.XLMConfig": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "transformers.configuration_xlm.XLMConfig.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlm.XLMConfig.hidden_size": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlm.XLMConfig.n_words": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "transformers.configuration_xlm.XLMConfig.num_attention_heads": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlm.XLMConfig.num_hidden_layers": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlm.XLM_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.configuration_xlm.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.configuration_xlm_prophetnet": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_xlm_prophetnet.XLMProphetNetConfig": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "transformers.configuration_xlm_prophetnet.XLM_PROPHETNET_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_xlm_prophetnet.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.configuration_xlm_roberta": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_xlm_roberta.XLMRobertaConfig": {
  "data": {
   "lineno": 34
  },
  "type": "class"
 },
 "transformers.configuration_xlm_roberta.XLM_ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_xlm_roberta.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.configuration_xlnet": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.configuration_xlnet.XLNET_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.configuration_xlnet.XLNetConfig": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "transformers.configuration_xlnet.XLNetConfig.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.hidden_size": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.max_position_embeddings": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.n_token": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.num_attention_heads": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlnet.XLNetConfig.num_hidden_layers": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.configuration_xlnet.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.convert_albert_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_albert_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_albert_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_albert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch",
    "transformers.convert_albert_original_tf_checkpoint_to_pytorch.parser",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_albert_original_tf_checkpoint_to_pytorch.AlbertConfig": {
  "data": {
   "shadows": "transformers.AlbertConfig"
  },
  "type": "import"
 },
 "transformers.convert_albert_original_tf_checkpoint_to_pytorch.AlbertForPreTraining": {
  "data": {
   "shadows": "transformers.AlbertForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_albert_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_albert_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.convert_albert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "print",
    "str",
    "transformers.AlbertConfig.from_json_file",
    "transformers.AlbertForPreTraining",
    "transformers.convert_albert_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_albert"
   ]
  },
  "type": "function"
 },
 "transformers.convert_albert_original_tf_checkpoint_to_pytorch.load_tf_weights_in_albert": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_albert"
  },
  "type": "import"
 },
 "transformers.convert_albert_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_albert_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.convert_albert_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "packaging.version.parse",
    "str",
    "transformers.BartForSequenceClassification",
    "transformers.BartModel",
    "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.argparse",
    "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.args",
    "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.convert_bart_checkpoint",
    "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.fairseq",
    "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.parser",
    "transformers.utils.logging.get_logger",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.BartConfig": {
  "data": {
   "shadows": "transformers.BartConfig"
  },
  "type": "import"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.BartForConditionalGeneration": {
  "data": {
   "shadows": "transformers.BartForConditionalGeneration"
  },
  "type": "import"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.BartForSequenceClassification": {
  "data": {
   "shadows": "transformers.BartForSequenceClassification"
  },
  "type": "import"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.BartModel": {
  "data": {
   "shadows": "transformers.BartModel"
  },
  "type": "import"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.BartTokenizer": {
  "data": {
   "shadows": "transformers.BartTokenizer"
  },
  "type": "import"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.FAIRSEQ_MODELS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.SAMPLE_TEXT": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch._make_linear_from_emb": {
  "data": {
   "shadows": "transformers.modeling_bart._make_linear_from_emb"
  },
  "type": "import"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.convert_bart_checkpoint": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "hasattr",
    "model",
    "model.lm_head",
    "model.load_state_dict",
    "model.model",
    "model.model.load_state_dict",
    "model.model.shared",
    "model.save_pretrained",
    "pathlib.Path",
    "transformers.BartConfig.from_pretrained",
    "transformers.BartForConditionalGeneration",
    "transformers.BartForSequenceClassification",
    "transformers.BartModel",
    "transformers.BartTokenizer.from_pretrained",
    "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.SAMPLE_TEXT",
    "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.load_xsum_checkpoint",
    "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.mnli_rename_keys",
    "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.os",
    "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.remove_ignore_keys_",
    "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.rename_key",
    "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.torch",
    "transformers.modeling_bart._make_linear_from_emb"
   ]
  },
  "type": "function"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.extra_arch": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.fairseq": {
  "data": {
   "shadows": "fairseq"
  },
  "type": "import"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.load_xsum_checkpoint": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.mnli_rename_keys": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.remove_ignore_keys_": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.rename_key": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_bart_original_pytorch_checkpoint_to_pytorch.version": {
  "data": {
   "shadows": "packaging.version"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.argparse",
    "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.args",
    "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.convert_tf2_checkpoint_to_pytorch",
    "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.parser",
    "transformers.utils.logging.get_logger",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.BertConfig": {
  "data": {
   "shadows": "transformers.BertConfig"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.BertModel": {
  "data": {
   "shadows": "transformers.BertModel"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 225
  },
  "type": "constant"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.convert_tf2_checkpoint_to_pytorch": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "transformers.BertConfig.from_json_file",
    "transformers.BertModel",
    "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.load_tf2_weights_in_bert",
    "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.logger",
    "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.load_tf2_weights_in_bert": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "getattr",
    "int",
    "len",
    "list",
    "set",
    "str",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.logger",
    "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.os",
    "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.re",
    "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf2_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_bert_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_bert_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_bert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch",
    "transformers.convert_bert_original_tf_checkpoint_to_pytorch.parser",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.BertConfig": {
  "data": {
   "shadows": "transformers.BertConfig"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.BertForPreTraining": {
  "data": {
   "shadows": "transformers.BertForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "print",
    "str",
    "transformers.BertConfig.from_json_file",
    "transformers.BertForPreTraining",
    "transformers.convert_bert_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_bert"
   ]
  },
  "type": "function"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.load_tf_weights_in_bert": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_bert"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.convert_bert_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.convert_bert_pytorch_checkpoint_to_original_tf.main"
   ]
  },
  "type": "module"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.BertModel": {
  "data": {
   "shadows": "transformers.BertModel"
  },
  "type": "import"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.convert_pytorch_checkpoint_to_tf": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "any",
    "create_tf_var",
    "numpy.allclose",
    "print",
    "str",
    "tensorflow.Session",
    "tensorflow.keras.backend.set_value",
    "tensorflow.reset_default_graph",
    "tensorflow.train.Saver",
    "tensorflow.trainable_variables",
    "to_tf_var_name",
    "transformers.BertModel",
    "transformers.convert_bert_pytorch_checkpoint_to_original_tf.os"
   ]
  },
  "type": "function"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.convert_pytorch_checkpoint_to_tf.create_tf_var": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "numpy.ndarray",
    "str",
    "tensorflow.Session",
    "tensorflow.dtypes.as_dtype",
    "tensorflow.get_variable",
    "tensorflow.variables_initializer",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.convert_pytorch_checkpoint_to_tf.to_tf_var_name": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "iter",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.main": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "str",
    "transformers.BertModel.from_pretrained",
    "transformers.convert_bert_pytorch_checkpoint_to_original_tf.argparse",
    "transformers.convert_bert_pytorch_checkpoint_to_original_tf.convert_pytorch_checkpoint_to_tf",
    "transformers.convert_bert_pytorch_checkpoint_to_original_tf.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.convert_bert_pytorch_checkpoint_to_original_tf.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.argparse",
    "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.args",
    "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.convert_parlai_checkpoint",
    "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.parser",
    "transformers.utils.logging.get_logger",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.BartConfig": {
  "data": {
   "shadows": "transformers.BartConfig"
  },
  "type": "import"
 },
 "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.BartForConditionalGeneration": {
  "data": {
   "shadows": "transformers.BartForConditionalGeneration"
  },
  "type": "import"
 },
 "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.IGNORE_KEYS": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.PATTERNS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.convert_parlai_checkpoint": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "transformers.BartConfig.from_json_file",
    "transformers.BartForConditionalGeneration",
    "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.IGNORE_KEYS",
    "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.rename_layernorm_keys",
    "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.rename_state_dict_key",
    "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.rename_layernorm_keys": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.rename_state_dict_key": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.PATTERNS"
   ]
  },
  "type": "function"
 },
 "transformers.convert_blenderbot_original_pytorch_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.DIALOGPT_MODELS",
    "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.argparse",
    "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.args",
    "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.checkpoint_path",
    "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.convert_dialogpt_checkpoint",
    "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.os",
    "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.parser",
    "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.pytorch_dump_folder_path"
   ]
  },
  "type": "module"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.DIALOGPT_MODELS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.NEW_KEY": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.OLD_KEY": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.WEIGHTS_NAME": {
  "data": {
   "shadows": "transformers.file_utils.WEIGHTS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.checkpoint_path": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.convert_dialogpt_checkpoint": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "str",
    "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.NEW_KEY",
    "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.OLD_KEY",
    "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.os",
    "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.torch",
    "transformers.file_utils.WEIGHTS_NAME"
   ]
  },
  "type": "function"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.pytorch_dump_folder_path": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.convert_dialogpt_original_pytorch_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pathlib.Path",
    "str",
    "transformers.convert_dpr_original_checkpoint_to_pytorch.argparse",
    "transformers.convert_dpr_original_checkpoint_to_pytorch.args",
    "transformers.convert_dpr_original_checkpoint_to_pytorch.collections",
    "transformers.convert_dpr_original_checkpoint_to_pytorch.convert",
    "transformers.convert_dpr_original_checkpoint_to_pytorch.dest_dir",
    "transformers.convert_dpr_original_checkpoint_to_pytorch.parser",
    "transformers.convert_dpr_original_checkpoint_to_pytorch.src_file"
   ]
  },
  "type": "module"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.BertConfig": {
  "data": {
   "shadows": "transformers.BertConfig"
  },
  "type": "import"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.CheckpointState": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRConfig": {
  "data": {
   "shadows": "transformers.DPRConfig"
  },
  "type": "import"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRContextEncoder": {
  "data": {
   "shadows": "transformers.DPRContextEncoder"
  },
  "type": "import"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRContextEncoderState": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRState"
   ]
  },
  "type": "class"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRContextEncoderState.load_dpr_model": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "len",
    "print",
    "transformers.BertConfig.get_config_dict",
    "transformers.DPRConfig",
    "transformers.DPRContextEncoder",
    "transformers.convert_dpr_original_checkpoint_to_pytorch.load_states_from_checkpoint"
   ]
  },
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRQuestionEncoder": {
  "data": {
   "shadows": "transformers.DPRQuestionEncoder"
  },
  "type": "import"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRQuestionEncoderState": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRState"
   ]
  },
  "type": "class"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRQuestionEncoderState.load_dpr_model": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "print",
    "transformers.BertConfig.get_config_dict",
    "transformers.DPRConfig",
    "transformers.DPRQuestionEncoder",
    "transformers.convert_dpr_original_checkpoint_to_pytorch.load_states_from_checkpoint"
   ]
  },
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRReader": {
  "data": {
   "shadows": "transformers.DPRReader"
  },
  "type": "import"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRReaderState": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRState"
   ]
  },
  "type": "class"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRReaderState.load_dpr_model": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "len",
    "print",
    "transformers.BertConfig.get_config_dict",
    "transformers.DPRConfig",
    "transformers.DPRReader",
    "transformers.convert_dpr_original_checkpoint_to_pytorch.load_states_from_checkpoint"
   ]
  },
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRState": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRState.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRState.from_type": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "DPRContextEncoderState",
    "DPRQuestionEncoderState",
    "DPRReaderState",
    "ValueError",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRState.load_dpr_model": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.convert": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pathlib.Path",
    "str",
    "transformers.convert_dpr_original_checkpoint_to_pytorch.DPRState"
   ]
  },
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.default_restore_location": {
  "data": {
   "shadows": "torch.serialization.default_restore_location"
  },
  "type": "import"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.dest_dir": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.load_states_from_checkpoint": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "print",
    "str",
    "torch.serialization.default_restore_location",
    "transformers.convert_dpr_original_checkpoint_to_pytorch.CheckpointState",
    "transformers.convert_dpr_original_checkpoint_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.src_file": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "transformers.convert_dpr_original_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_electra_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_electra_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_electra_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_electra_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch",
    "transformers.convert_electra_original_tf_checkpoint_to_pytorch.parser",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_electra_original_tf_checkpoint_to_pytorch.ElectraConfig": {
  "data": {
   "shadows": "transformers.ElectraConfig"
  },
  "type": "import"
 },
 "transformers.convert_electra_original_tf_checkpoint_to_pytorch.ElectraForMaskedLM": {
  "data": {
   "shadows": "transformers.ElectraForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_electra_original_tf_checkpoint_to_pytorch.ElectraForPreTraining": {
  "data": {
   "shadows": "transformers.ElectraForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_electra_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_electra_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "transformers.convert_electra_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "print",
    "str",
    "transformers.ElectraConfig.from_json_file",
    "transformers.ElectraForMaskedLM",
    "transformers.ElectraForPreTraining",
    "transformers.convert_electra_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_electra"
   ]
  },
  "type": "function"
 },
 "transformers.convert_electra_original_tf_checkpoint_to_pytorch.load_tf_weights_in_electra": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_electra"
  },
  "type": "import"
 },
 "transformers.convert_electra_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_electra_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "transformers.convert_electra_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.argparse",
    "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.args",
    "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.convert_fsmt_checkpoint_to_pytorch",
    "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.org_names",
    "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.parser",
    "transformers.logging.set_verbosity_warning"
   ]
  },
  "type": "module"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.Dictionary": {
  "data": {
   "shadows": "fairseq.data.dictionary.Dictionary"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.FSMTConfig": {
  "data": {
   "shadows": "transformers.configuration_fsmt.FSMTConfig"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.FSMTForConditionalGeneration": {
  "data": {
   "shadows": "transformers.modeling_fsmt.FSMTForConditionalGeneration"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.TOKENIZER_CONFIG_FILE": {
  "data": {
   "shadows": "transformers.tokenization_utils_base.TOKENIZER_CONFIG_FILE"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.VOCAB_FILES_NAMES": {
  "data": {
   "shadows": "transformers.tokenization_fsmt.VOCAB_FILES_NAMES"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.WEIGHTS_NAME": {
  "data": {
   "shadows": "transformers.WEIGHTS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.best_score_hparams": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.convert_fsmt_checkpoint_to_pytorch": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "fairseq.data.dictionary.Dictionary.load",
    "fairseq.hub_utils.from_pretrained",
    "len",
    "open",
    "os.path.basename",
    "os.path.dirname",
    "print",
    "transformers.WEIGHTS_NAME",
    "transformers.configuration_fsmt.FSMTConfig.from_pretrained",
    "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.best_score_hparams",
    "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.fairseq",
    "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.json",
    "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.json_indent",
    "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.os",
    "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.re",
    "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.rewrite_dict_keys",
    "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.torch",
    "transformers.modeling_fsmt.FSMTForConditionalGeneration",
    "transformers.tokenization_fsmt.VOCAB_FILES_NAMES",
    "transformers.tokenization_utils_base.TOKENIZER_CONFIG_FILE",
    "vars"
   ]
  },
  "type": "function"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.fairseq": {
  "data": {
   "shadows": "fairseq"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.hub_utils": {
  "data": {
   "shadows": "fairseq.hub_utils"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.json_indent": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.logging"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.org_names": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 266
  },
  "type": "constant"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.rewrite_dict_keys": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "dict",
    "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.re"
   ]
  },
  "type": "function"
 },
 "transformers.convert_fsmt_original_pytorch_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_funnel_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch",
    "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.logging",
    "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.parser"
   ]
  },
  "type": "module"
 },
 "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.FunnelConfig": {
  "data": {
   "shadows": "transformers.FunnelConfig"
  },
  "type": "import"
 },
 "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.FunnelForPreTraining": {
  "data": {
   "shadows": "transformers.FunnelForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "print",
    "str",
    "transformers.FunnelConfig.from_json_file",
    "transformers.FunnelForPreTraining",
    "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_funnel"
   ]
  },
  "type": "function"
 },
 "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.load_tf_weights_in_funnel": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_funnel"
  },
  "type": "import"
 },
 "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.convert_funnel_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.convert_gpt2_checkpoint_to_pytorch",
    "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.parser",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.CONFIG_NAME": {
  "data": {
   "shadows": "transformers.CONFIG_NAME"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.GPT2Config": {
  "data": {
   "shadows": "transformers.GPT2Config"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.GPT2Model": {
  "data": {
   "shadows": "transformers.GPT2Model"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.WEIGHTS_NAME": {
  "data": {
   "shadows": "transformers.WEIGHTS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.convert_gpt2_checkpoint_to_pytorch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "open",
    "print",
    "transformers.CONFIG_NAME",
    "transformers.GPT2Config",
    "transformers.GPT2Config.from_json_file",
    "transformers.GPT2Model",
    "transformers.WEIGHTS_NAME",
    "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_gpt2"
   ]
  },
  "type": "function"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.load_tf_weights_in_gpt2": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_gpt2"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.convert_gpt2_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "exit",
    "hasattr",
    "onnxruntime.quantization.quantize",
    "packaging.version.parse",
    "pathlib.Path",
    "print",
    "transformers.convert_graph_to_onnx.ORT_QUANTIZE_MINIMUM_VERSION",
    "transformers.convert_graph_to_onnx.OnnxConverterArgumentParser",
    "transformers.convert_graph_to_onnx.args",
    "transformers.convert_graph_to_onnx.check_onnxruntime_requirements",
    "transformers.convert_graph_to_onnx.convert",
    "transformers.convert_graph_to_onnx.optimize",
    "transformers.convert_graph_to_onnx.parser",
    "transformers.convert_graph_to_onnx.verify"
   ]
  },
  "type": "module"
 },
 "transformers.convert_graph_to_onnx.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.BatchEncoding": {
  "data": {
   "shadows": "transformers.tokenization_utils.BatchEncoding"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.InferenceSession": {
  "data": {
   "shadows": "onnxruntime.InferenceSession"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.ModelOutput": {
  "data": {
   "shadows": "transformers.file_utils.ModelOutput"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.ORT_QUANTIZE_MINIMUM_VERSION": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "transformers.convert_graph_to_onnx.OnnxConverterArgumentParser": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "argparse.ArgumentParser"
   ]
  },
  "type": "class"
 },
 "transformers.convert_graph_to_onnx.OnnxConverterArgumentParser.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "transformers.convert_graph_to_onnx.SUPPORTED_PIPELINES"
   ]
  },
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.Pipeline": {
  "data": {
   "shadows": "transformers.pipelines.Pipeline"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.QuantizationMode": {
  "data": {
   "shadows": "onnxruntime.quantization.QuantizationMode"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.RuntimeException": {
  "data": {
   "shadows": "onnxruntime.capi.onnxruntime_pybind11_state.RuntimeException"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.SUPPORTED_PIPELINES": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "transformers.convert_graph_to_onnx.SessionOptions": {
  "data": {
   "shadows": "onnxruntime.SessionOptions"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.Version": {
  "data": {
   "shadows": "packaging.version.Version"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.args": {
  "data": {
   "lineno": 436
  },
  "type": "constant"
 },
 "transformers.convert_graph_to_onnx.check_onnxruntime_requirements": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ImportError",
    "packaging.version.Version",
    "packaging.version.parse",
    "transformers.convert_graph_to_onnx.ORT_QUANTIZE_MINIMUM_VERSION",
    "transformers.convert_graph_to_onnx.onnxruntime"
   ]
  },
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.convert": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "int",
    "len",
    "os.listdir",
    "os.makedirs",
    "pathlib.Path",
    "print",
    "str",
    "transformers.convert_graph_to_onnx.convert_pytorch",
    "transformers.convert_graph_to_onnx.convert_tensorflow",
    "transformers.convert_graph_to_onnx.load_graph_from_args",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.convert_keras": {
  "data": {
   "shadows": "keras2onnx.convert_keras"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.convert_pytorch": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "int",
    "pathlib.Path",
    "print",
    "torch.onnx.export",
    "transformers.convert_graph_to_onnx.ensure_valid_input",
    "transformers.convert_graph_to_onnx.infer_shapes",
    "transformers.convert_graph_to_onnx.torch",
    "transformers.is_torch_available",
    "transformers.pipelines.Pipeline"
   ]
  },
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.convert_tensorflow": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "int",
    "keras2onnx.__version__",
    "keras2onnx.convert_keras",
    "keras2onnx.save_model",
    "pathlib.Path",
    "print",
    "tensorflow.version.VERSION",
    "transformers.convert_graph_to_onnx.infer_shapes",
    "transformers.is_tf_available",
    "transformers.pipelines.Pipeline"
   ]
  },
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.ensure_valid_input": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "print",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.export": {
  "data": {
   "shadows": "torch.onnx.export"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.generate_identified_filename": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pathlib.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.infer_shapes": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "build_shape_dict",
    "dict",
    "isinstance",
    "len",
    "list",
    "range",
    "str",
    "transformers.file_utils.ModelOutput",
    "transformers.pipelines.Pipeline",
    "transformers.tokenization_utils.BatchEncoding",
    "tuple",
    "typing.Dict",
    "typing.List",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.infer_shapes.build_shape_dict": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "build_shape_dict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "print",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.is_tf_available": {
  "data": {
   "shadows": "transformers.is_tf_available"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.is_torch_available": {
  "data": {
   "shadows": "transformers.is_torch_available"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.k2ov": {
  "data": {
   "shadows": "keras2onnx.__version__"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.load_graph_from_args": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "Exception",
    "print",
    "str",
    "transformers.is_tf_available",
    "transformers.is_torch_available",
    "transformers.pipelines.Pipeline",
    "transformers.pipelines.pipeline",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.onnx": {
  "data": {
   "shadows": "onnx"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.onnxruntime": {
  "data": {
   "shadows": "onnxruntime"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.optimize": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "onnxruntime.InferenceSession",
    "onnxruntime.SessionOptions",
    "pathlib.Path",
    "print",
    "transformers.convert_graph_to_onnx.generate_identified_filename"
   ]
  },
  "type": "function"
 },
 "transformers.convert_graph_to_onnx.parse": {
  "data": {
   "shadows": "packaging.version.parse"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.parser": {
  "data": {
   "lineno": 435
  },
  "type": "constant"
 },
 "transformers.convert_graph_to_onnx.pipeline": {
  "data": {
   "shadows": "transformers.pipelines.pipeline"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.quantize": {
  "data": {
   "shadows": "onnxruntime.quantization.quantize",
   "symbols_in_volume": [
    "onnxruntime.quantization.QuantizationMode.IntegerOps",
    "onnxruntime.quantization.quantize",
    "pathlib.Path",
    "print",
    "transformers.convert_graph_to_onnx.generate_identified_filename",
    "transformers.convert_graph_to_onnx.onnx"
   ]
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.save_model": {
  "data": {
   "shadows": "keras2onnx.save_model"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_graph_to_onnx.verify": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "onnxruntime.InferenceSession",
    "onnxruntime.SessionOptions",
    "onnxruntime.capi.onnxruntime_pybind11_state.RuntimeException",
    "pathlib.Path",
    "print"
   ]
  },
  "type": "function"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.argparse",
    "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.args",
    "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.convert_longformer_qa_checkpoint_to_pytorch",
    "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.parser"
   ]
  },
  "type": "module"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.LightningModel": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pytorch_lightning.LightningModule"
   ]
  },
  "type": "class"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.LightningModel.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "super",
    "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.LightningModel.forward": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.LongformerForQuestionAnswering": {
  "data": {
   "shadows": "transformers.modeling_longformer.LongformerForQuestionAnswering"
  },
  "type": "import"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.LongformerModel": {
  "data": {
   "shadows": "transformers.modeling_longformer.LongformerModel"
  },
  "type": "import"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.args": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.convert_longformer_qa_checkpoint_to_pytorch": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "print",
    "str",
    "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.LightningModel",
    "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.torch",
    "transformers.modeling_longformer.LongformerForQuestionAnswering.from_pretrained",
    "transformers.modeling_longformer.LongformerModel.from_pretrained"
   ]
  },
  "type": "function"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.parser": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.pl": {
  "data": {
   "shadows": "pytorch_lightning"
  },
  "type": "import"
 },
 "transformers.convert_longformer_original_pytorch_lightning_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch",
    "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.logging",
    "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.parser"
   ]
  },
  "type": "module"
 },
 "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.LxmertConfig": {
  "data": {
   "shadows": "transformers.LxmertConfig"
  },
  "type": "import"
 },
 "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.LxmertForPreTraining": {
  "data": {
   "shadows": "transformers.LxmertForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "print",
    "str",
    "transformers.LxmertConfig.from_json_file",
    "transformers.LxmertForPreTraining",
    "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_lxmert"
   ]
  },
  "type": "function"
 },
 "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.load_tf_weights_in_lxmert": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_lxmert"
  },
  "type": "import"
 },
 "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.convert_lxmert_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_marian_tatoeba_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "transformers.convert_marian_tatoeba_to_pytorch.DEFAULT_REPO",
    "transformers.convert_marian_tatoeba_to_pytorch.TatoebaConverter",
    "transformers.convert_marian_tatoeba_to_pytorch.argparse",
    "transformers.convert_marian_tatoeba_to_pytorch.args",
    "transformers.convert_marian_tatoeba_to_pytorch.os",
    "transformers.convert_marian_tatoeba_to_pytorch.parser",
    "transformers.convert_marian_tatoeba_to_pytorch.resolver"
   ]
  },
  "type": "module"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.DEFAULT_MODEL_DIR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.DEFAULT_REPO": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.FRONT_MATTER_TEMPLATE": {
  "data": {
   "shadows": "transformers.convert_marian_to_pytorch.FRONT_MATTER_TEMPLATE"
  },
  "type": "import"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.GROUP_MEMBERS": {
  "data": {
   "lineno": 247
  },
  "type": "constant"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.ISO_PATH": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.ISO_URL": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.LANG_CODE_PATH": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.LANG_CODE_URL": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.TatoebaConverter": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.TatoebaConverter.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.read_csv",
    "pandas.to_datetime",
    "pathlib.Path",
    "transformers.convert_marian_tatoeba_to_pytorch.DEFAULT_REPO",
    "transformers.convert_marian_tatoeba_to_pytorch.ISO_PATH",
    "transformers.convert_marian_tatoeba_to_pytorch.LANG_CODE_PATH",
    "transformers.convert_marian_to_pytorch.remove_prefix",
    "transformers.convert_marian_to_pytorch.remove_suffix"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.TatoebaConverter.convert_models": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len",
    "str",
    "transformers.convert_marian_tatoeba_to_pytorch.os",
    "transformers.convert_marian_to_pytorch.convert_all_sentencepiece_models",
    "transformers.convert_marian_to_pytorch.remove_prefix"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.TatoebaConverter.download_metadata": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pathlib.Path",
    "transformers.convert_marian_tatoeba_to_pytorch.ISO_PATH",
    "transformers.convert_marian_tatoeba_to_pytorch.ISO_URL",
    "transformers.convert_marian_tatoeba_to_pytorch.LANG_CODE_PATH",
    "transformers.convert_marian_tatoeba_to_pytorch.LANG_CODE_URL",
    "transformers.convert_marian_tatoeba_to_pytorch.os",
    "transformers.convert_marian_tatoeba_to_pytorch.wget"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.TatoebaConverter.expand_group_to_two_letter_codes": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.TatoebaConverter.get_tags": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.TatoebaConverter.get_two_letter_code": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.TatoebaConverter.make_tatoeba_registry": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "open",
    "pathlib.Path",
    "staticmethod",
    "transformers.convert_marian_tatoeba_to_pytorch.DEFAULT_MODEL_DIR",
    "transformers.convert_marian_to_pytorch._parse_readme"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.TatoebaConverter.resolve_lang_code": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "dedup",
    "isinstance",
    "list",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.TatoebaConverter.write_model_card": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "l2front_matter",
    "pandas.Series",
    "pathlib.Path",
    "str",
    "transformers.convert_marian_tatoeba_to_pytorch.DEFAULT_REPO",
    "transformers.convert_marian_to_pytorch.FRONT_MATTER_TEMPLATE.format",
    "transformers.convert_marian_to_pytorch.get_system_metadata",
    "transformers.convert_marian_to_pytorch.remove_prefix"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.convert_marian_tatoeba_to_pytorch._parse_readme": {
  "data": {
   "shadows": "transformers.convert_marian_to_pytorch._parse_readme"
  },
  "type": "import"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.args": {
  "data": {
   "lineno": 1252
  },
  "type": "constant"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.convert_all_sentencepiece_models": {
  "data": {
   "shadows": "transformers.convert_marian_to_pytorch.convert_all_sentencepiece_models"
  },
  "type": "import"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.dedup": {
  "data": {
   "lineno": 1233
  },
  "type": "function"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.get_system_metadata": {
  "data": {
   "shadows": "transformers.convert_marian_to_pytorch.get_system_metadata"
  },
  "type": "import"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.l2front_matter": {
  "data": {
   "lineno": 1229
  },
  "type": "function"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.parser": {
  "data": {
   "lineno": 1247
  },
  "type": "constant"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.remove_prefix": {
  "data": {
   "shadows": "transformers.convert_marian_to_pytorch.remove_prefix"
  },
  "type": "import"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.remove_suffix": {
  "data": {
   "shadows": "transformers.convert_marian_to_pytorch.remove_suffix"
  },
  "type": "import"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.resolver": {
  "data": {
   "lineno": 1253
  },
  "type": "constant"
 },
 "transformers.convert_marian_tatoeba_to_pytorch.wget": {
  "data": {
   "shadows": "wget"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pathlib.Path",
    "str",
    "transformers.convert_marian_to_pytorch.DEFAULT_REPO",
    "transformers.convert_marian_to_pytorch.ROM_GROUP",
    "transformers.convert_marian_to_pytorch.argparse",
    "transformers.convert_marian_to_pytorch.args",
    "transformers.convert_marian_to_pytorch.convert",
    "transformers.convert_marian_to_pytorch.dest_dir",
    "transformers.convert_marian_to_pytorch.os",
    "transformers.convert_marian_to_pytorch.parser",
    "transformers.convert_marian_to_pytorch.source_dir"
   ]
  },
  "type": "module"
 },
 "transformers.convert_marian_to_pytorch.BART_CONVERTER": {
  "data": {
   "lineno": 408
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.BIAS_KEY": {
  "data": {
   "lineno": 407
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.CONFIG_KEY": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.DEFAULT_MODEL_DIR": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.DEFAULT_REPO": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.FRONT_MATTER_TEMPLATE": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.GROUPS": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.GROUP_TO_OPUS_NAME": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.HfApi": {
  "data": {
   "shadows": "transformers.hf_api.HfApi"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.MarianConfig": {
  "data": {
   "shadows": "transformers.MarianConfig"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.MarianMTModel": {
  "data": {
   "shadows": "transformers.MarianMTModel"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.MarianTokenizer": {
  "data": {
   "shadows": "transformers.MarianTokenizer"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.OPUS_GITHUB_URL": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.ORG_NAME": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.OpusState": {
  "data": {
   "lineno": 439
  },
  "type": "class"
 },
 "transformers.convert_marian_to_pytorch.OpusState.__init__": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "dict",
    "list",
    "load_yaml",
    "numpy.load",
    "transformers.MarianConfig",
    "transformers.convert_marian_to_pytorch.BIAS_KEY",
    "transformers.convert_marian_to_pytorch.add_emb_entries",
    "transformers.convert_marian_to_pytorch.cast_marian_config",
    "transformers.convert_marian_to_pytorch.check_marian_cfg_assumptions",
    "transformers.convert_marian_to_pytorch.find_model_file",
    "transformers.convert_marian_to_pytorch.load_config_from_state_dict"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.OpusState._check_layer_entries": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "len",
    "transformers.convert_marian_to_pytorch.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.OpusState.extra_keys": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "property",
    "transformers.convert_marian_to_pytorch.CONFIG_KEY"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.OpusState.load_marian_model": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "NotImplementedError",
    "print",
    "transformers.MarianMTModel",
    "transformers.convert_marian_to_pytorch.BART_CONVERTER",
    "transformers.convert_marian_to_pytorch.load_layers_",
    "transformers.convert_marian_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.OpusState.sub_keys": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "transformers.convert_marian_to_pytorch.remove_prefix"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.ROM_GROUP": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch._cast_yaml_str": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch._parse_readme": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.add_emb_entries": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.add_special_tokens_to_vocab": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "int",
    "load_yaml",
    "pathlib.Path",
    "print",
    "save_json",
    "transformers.convert_marian_to_pytorch.add_to_vocab_",
    "transformers.convert_marian_to_pytorch.find_vocab_file",
    "transformers.convert_marian_to_pytorch.save_tokenizer_config"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.add_to_vocab_": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "int",
    "max",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.args": {
  "data": {
   "lineno": 613
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.cast_marian_config": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "str",
    "transformers.convert_marian_to_pytorch._cast_yaml_str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.check_equal": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.check_marian_cfg_assumptions": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "transformers.convert_marian_to_pytorch.check_equal"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.convert": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "len",
    "pathlib.Path",
    "str",
    "transformers.MarianTokenizer.from_pretrained",
    "transformers.convert_marian_to_pytorch.OpusState",
    "transformers.convert_marian_to_pytorch.add_special_tokens_to_vocab"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.convert_all_sentencepiece_models": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "convert",
    "download_and_unzip",
    "list",
    "pathlib.Path",
    "tqdm.tqdm",
    "transformers.convert_marian_to_pytorch.convert_opus_name_to_hf_name",
    "transformers.convert_marian_to_pytorch.make_registry",
    "transformers.convert_marian_to_pytorch.os"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.convert_encoder_layer": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "dict",
    "str",
    "transformers.convert_marian_to_pytorch.remove_prefix",
    "transformers.convert_marian_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.convert_hf_name_to_opus_name": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "transformers.convert_marian_to_pytorch.GROUP_TO_OPUS_NAME",
    "transformers.convert_marian_to_pytorch.ORG_NAME",
    "transformers.convert_marian_to_pytorch.remove_prefix"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.convert_opus_name_to_hf_name": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "transformers.convert_marian_to_pytorch.GROUPS"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.convert_whole_dir": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "convert",
    "list",
    "pathlib.Path",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.dest_dir": {
  "data": {
   "lineno": 617
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.download_and_unzip": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "ImportError",
    "transformers.convert_marian_to_pytorch.os",
    "transformers.convert_marian_to_pytorch.wget",
    "unzip"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.fetch_test_set": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "len",
    "pathlib.Path",
    "str.strip",
    "transformers.convert_marian_to_pytorch.lmap",
    "transformers.convert_marian_to_pytorch.os",
    "transformers.convert_marian_to_pytorch.wget"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.find_model_file": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "len",
    "list",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.find_pretrained_model": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "str",
    "transformers.convert_marian_to_pytorch.remove_prefix",
    "transformers.hf_api.HfApi",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.find_vocab_file": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.get_system_metadata": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "dict",
    "transformers.convert_marian_to_pytorch.git",
    "transformers.convert_marian_to_pytorch.socket",
    "transformers.convert_marian_to_pytorch.time"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.git": {
  "data": {
   "shadows": "git"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.lmap": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "list",
    "map",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.load_config_from_state_dict": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "chr",
    "transformers.convert_marian_to_pytorch.CONFIG_KEY",
    "transformers.convert_marian_to_pytorch.cast_marian_config",
    "transformers.convert_marian_to_pytorch.yaml"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.load_layers_": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "transformers.convert_marian_to_pytorch.convert_encoder_layer",
    "transformers.convert_marian_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.load_yaml": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "open",
    "transformers.convert_marian_to_pytorch.yaml"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.make_registry": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError",
    "_parse_readme",
    "list",
    "open",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.parser": {
  "data": {
   "lineno": 609
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.remove_prefix": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.remove_suffix": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.save_json": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "open",
    "str",
    "transformers.convert_marian_to_pytorch.json",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.save_tokenizer_config": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "dict",
    "pathlib.Path",
    "save_json"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.source_dir": {
  "data": {
   "lineno": 615
  },
  "type": "constant"
 },
 "transformers.convert_marian_to_pytorch.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.unzip": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "str",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.wget": {
  "data": {
   "shadows": "wget"
  },
  "type": "import"
 },
 "transformers.convert_marian_to_pytorch.write_model_card": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "pandas.Series",
    "pathlib.Path",
    "print",
    "str",
    "transformers.convert_marian_to_pytorch.DEFAULT_REPO",
    "transformers.convert_marian_to_pytorch.FRONT_MATTER_TEMPLATE",
    "transformers.convert_marian_to_pytorch.ORG_NAME",
    "transformers.convert_marian_to_pytorch.convert_hf_name_to_opus_name",
    "transformers.convert_marian_to_pytorch.get_system_metadata",
    "transformers.convert_marian_to_pytorch.remove_prefix"
   ]
  },
  "type": "function"
 },
 "transformers.convert_marian_to_pytorch.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "transformers.convert_mbart_original_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_mbart_original_checkpoint_to_pytorch.argparse",
    "transformers.convert_mbart_original_checkpoint_to_pytorch.args",
    "transformers.convert_mbart_original_checkpoint_to_pytorch.convert_fairseq_mbart_checkpoint_from_disk",
    "transformers.convert_mbart_original_checkpoint_to_pytorch.model",
    "transformers.convert_mbart_original_checkpoint_to_pytorch.parser"
   ]
  },
  "type": "module"
 },
 "transformers.convert_mbart_original_checkpoint_to_pytorch.BartForConditionalGeneration": {
  "data": {
   "shadows": "transformers.BartForConditionalGeneration"
  },
  "type": "import"
 },
 "transformers.convert_mbart_original_checkpoint_to_pytorch.MBartConfig": {
  "data": {
   "shadows": "transformers.MBartConfig"
  },
  "type": "import"
 },
 "transformers.convert_mbart_original_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_mbart_original_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.convert_mbart_original_checkpoint_to_pytorch.convert_fairseq_mbart_checkpoint_from_disk": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "remove_ignore_keys_",
    "transformers.BartForConditionalGeneration",
    "transformers.MBartConfig.from_pretrained",
    "transformers.convert_mbart_original_checkpoint_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_mbart_original_checkpoint_to_pytorch.model": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.convert_mbart_original_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.convert_mbart_original_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch",
    "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.parser",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.MobileBertConfig": {
  "data": {
   "shadows": "transformers.MobileBertConfig"
  },
  "type": "import"
 },
 "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.MobileBertForPreTraining": {
  "data": {
   "shadows": "transformers.MobileBertForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "print",
    "str",
    "transformers.MobileBertConfig.from_json_file",
    "transformers.MobileBertForPreTraining",
    "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_mobilebert"
   ]
  },
  "type": "function"
 },
 "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.load_tf_weights_in_mobilebert": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_mobilebert"
  },
  "type": "import"
 },
 "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.convert_mobilebert_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_openai_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_openai_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_openai_original_tf_checkpoint_to_pytorch.convert_openai_checkpoint_to_pytorch",
    "transformers.convert_openai_original_tf_checkpoint_to_pytorch.parser",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.CONFIG_NAME": {
  "data": {
   "shadows": "transformers.CONFIG_NAME"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.OpenAIGPTConfig": {
  "data": {
   "shadows": "transformers.OpenAIGPTConfig"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.OpenAIGPTModel": {
  "data": {
   "shadows": "transformers.OpenAIGPTModel"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.WEIGHTS_NAME": {
  "data": {
   "shadows": "transformers.WEIGHTS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.convert_openai_checkpoint_to_pytorch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "open",
    "print",
    "transformers.CONFIG_NAME",
    "transformers.OpenAIGPTConfig",
    "transformers.OpenAIGPTConfig.from_json_file",
    "transformers.OpenAIGPTModel",
    "transformers.WEIGHTS_NAME",
    "transformers.convert_openai_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_openai_gpt"
   ]
  },
  "type": "function"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.load_tf_weights_in_openai_gpt": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_openai_gpt"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.convert_openai_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_pegasus_tf_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pathlib.Path",
    "str",
    "transformers.convert_pegasus_tf_to_pytorch.argparse",
    "transformers.convert_pegasus_tf_to_pytorch.args",
    "transformers.convert_pegasus_tf_to_pytorch.convert_pegasus_ckpt_to_pytorch",
    "transformers.convert_pegasus_tf_to_pytorch.dataset",
    "transformers.convert_pegasus_tf_to_pytorch.os",
    "transformers.convert_pegasus_tf_to_pytorch.parser"
   ]
  },
  "type": "module"
 },
 "transformers.convert_pegasus_tf_to_pytorch.DEFAULTS": {
  "data": {
   "shadows": "transformers.configuration_pegasus.DEFAULTS"
  },
  "type": "import"
 },
 "transformers.convert_pegasus_tf_to_pytorch.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.convert_pegasus_tf_to_pytorch.PATTERNS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.convert_pegasus_tf_to_pytorch.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "transformers.convert_pegasus_tf_to_pytorch.PegasusConfig": {
  "data": {
   "shadows": "transformers.PegasusConfig"
  },
  "type": "import"
 },
 "transformers.convert_pegasus_tf_to_pytorch.PegasusForConditionalGeneration": {
  "data": {
   "shadows": "transformers.PegasusForConditionalGeneration"
  },
  "type": "import"
 },
 "transformers.convert_pegasus_tf_to_pytorch.PegasusTokenizer": {
  "data": {
   "shadows": "transformers.PegasusTokenizer"
  },
  "type": "import"
 },
 "transformers.convert_pegasus_tf_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_pegasus_tf_to_pytorch.args": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "transformers.convert_pegasus_tf_to_pytorch.convert_pegasus": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "transformers.PegasusConfig",
    "transformers.PegasusForConditionalGeneration",
    "transformers.configuration_pegasus.DEFAULTS.copy",
    "transformers.convert_pegasus_tf_to_pytorch.rename_state_dict_key",
    "transformers.convert_pegasus_tf_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_pegasus_tf_to_pytorch.convert_pegasus_ckpt_to_pytorch": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pathlib.Path",
    "str",
    "transformers.PegasusTokenizer.from_pretrained",
    "transformers.configuration_pegasus.task_specific_params",
    "transformers.convert_pegasus_tf_to_pytorch.convert_pegasus",
    "transformers.convert_pegasus_tf_to_pytorch.get_tf_weights_as_numpy",
    "transformers.convert_pegasus_tf_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_pegasus_tf_to_pytorch.dataset": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "transformers.convert_pegasus_tf_to_pytorch.get_tf_weights_as_numpy": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "any",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "tqdm.tqdm",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.convert_pegasus_tf_to_pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_pegasus_tf_to_pytorch.parser": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "transformers.convert_pegasus_tf_to_pytorch.rename_state_dict_key": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "transformers.convert_pegasus_tf_to_pytorch.PATTERNS"
   ]
  },
  "type": "function"
 },
 "transformers.convert_pegasus_tf_to_pytorch.task_specific_params": {
  "data": {
   "shadows": "transformers.configuration_pegasus.task_specific_params"
  },
  "type": "import"
 },
 "transformers.convert_pegasus_tf_to_pytorch.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.convert_pegasus_tf_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_pegasus_tf_to_pytorch.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.argparse",
    "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.args",
    "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.convert_prophetnet_checkpoint_to_pytorch",
    "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.parser",
    "transformers.logging.get_logger",
    "transformers.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.ProphetNetForConditionalGeneration": {
  "data": {
   "shadows": "transformers.modeling_prophetnet.ProphetNetForConditionalGeneration"
  },
  "type": "import"
 },
 "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.ProphetNetForConditionalGenerationOld": {
  "data": {
   "shadows": "transformers_old.modeling_prophetnet.ProphetNetForConditionalGeneration"
  },
  "type": "import"
 },
 "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.XLMProphetNetForConditionalGeneration": {
  "data": {
   "shadows": "transformers.modeling_xlm_prophetnet.XLMProphetNetForConditionalGeneration"
  },
  "type": "import"
 },
 "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.XLMProphetNetForConditionalGenerationOld": {
  "data": {
   "shadows": "transformers_old.modeling_xlm_prophetnet.XLMProphetNetForConditionalGeneration"
  },
  "type": "import"
 },
 "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.convert_prophetnet_checkpoint_to_pytorch": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "hasattr",
    "int",
    "len",
    "print",
    "str",
    "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.logger",
    "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.torch",
    "transformers_old.modeling_prophetnet.ProphetNetForConditionalGeneration.from_pretrained",
    "transformers_old.modeling_xlm_prophetnet.XLMProphetNetForConditionalGeneration.from_pretrained"
   ]
  },
  "type": "function"
 },
 "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.logging"
  },
  "type": "import"
 },
 "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "transformers.convert_prophetnet_original_pytorch_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "list",
    "str",
    "transformers.ALBERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.AlbertConfig",
    "transformers.AlbertForPreTraining",
    "transformers.BART_PRETRAINED_MODEL_ARCHIVE_LIST",
    "transformers.BERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.BartConfig",
    "transformers.BartForConditionalGeneration",
    "transformers.BertConfig",
    "transformers.BertForPreTraining",
    "transformers.BertForQuestionAnswering",
    "transformers.BertForSequenceClassification",
    "transformers.CAMEMBERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.CTRLConfig",
    "transformers.CTRLLMHeadModel",
    "transformers.CTRL_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.CamembertConfig",
    "transformers.CamembertForMaskedLM",
    "transformers.DISTILBERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.DistilBertConfig",
    "transformers.DistilBertForMaskedLM",
    "transformers.DistilBertForQuestionAnswering",
    "transformers.ELECTRA_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.ElectraConfig",
    "transformers.ElectraForPreTraining",
    "transformers.FLAUBERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.FlaubertConfig",
    "transformers.FlaubertWithLMHeadModel",
    "transformers.GPT2Config",
    "transformers.GPT2LMHeadModel",
    "transformers.GPT2_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.LXMERT_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.LxmertConfig",
    "transformers.LxmertForPreTraining",
    "transformers.LxmertVisualFeatureEncoder",
    "transformers.OPENAI_GPT_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.OpenAIGPTConfig",
    "transformers.OpenAIGPTLMHeadModel",
    "transformers.ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.RobertaConfig",
    "transformers.RobertaForMaskedLM",
    "transformers.RobertaForSequenceClassification",
    "transformers.T5Config",
    "transformers.T5ForConditionalGeneration",
    "transformers.T5_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.TFAlbertForPreTraining",
    "transformers.TFBartForConditionalGeneration",
    "transformers.TFBertForPreTraining",
    "transformers.TFBertForQuestionAnswering",
    "transformers.TFBertForSequenceClassification",
    "transformers.TFCTRLLMHeadModel",
    "transformers.TFCamembertForMaskedLM",
    "transformers.TFDistilBertForMaskedLM",
    "transformers.TFDistilBertForQuestionAnswering",
    "transformers.TFElectraForPreTraining",
    "transformers.TFFlaubertWithLMHeadModel",
    "transformers.TFGPT2LMHeadModel",
    "transformers.TFLxmertForPreTraining",
    "transformers.TFLxmertVisualFeatureEncoder",
    "transformers.TFOpenAIGPTLMHeadModel",
    "transformers.TFRobertaForMaskedLM",
    "transformers.TFRobertaForSequenceClassification",
    "transformers.TFT5ForConditionalGeneration",
    "transformers.TFTransfoXLLMHeadModel",
    "transformers.TFXLMRobertaForMaskedLM",
    "transformers.TFXLMWithLMHeadModel",
    "transformers.TFXLNetLMHeadModel",
    "transformers.TRANSFO_XL_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.TransfoXLConfig",
    "transformers.TransfoXLLMHeadModel",
    "transformers.XLMConfig",
    "transformers.XLMRobertaConfig",
    "transformers.XLMRobertaForMaskedLM",
    "transformers.XLMWithLMHeadModel",
    "transformers.XLM_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.XLM_ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.XLNET_PRETRAINED_CONFIG_ARCHIVE_MAP",
    "transformers.XLNetConfig",
    "transformers.XLNetLMHeadModel",
    "transformers.convert_pytorch_checkpoint_to_tf2.MODEL_CLASSES",
    "transformers.convert_pytorch_checkpoint_to_tf2.argparse",
    "transformers.convert_pytorch_checkpoint_to_tf2.args",
    "transformers.convert_pytorch_checkpoint_to_tf2.convert_all_pt_checkpoints_to_tf",
    "transformers.convert_pytorch_checkpoint_to_tf2.parser",
    "transformers.is_torch_available",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.ALBERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.ALBERT_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.AlbertConfig": {
  "data": {
   "shadows": "transformers.AlbertConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.AlbertForPreTraining": {
  "data": {
   "shadows": "transformers.AlbertForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.BART_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "shadows": "transformers.BART_PRETRAINED_MODEL_ARCHIVE_LIST"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.BERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.BERT_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.BartConfig": {
  "data": {
   "shadows": "transformers.BartConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.BartForConditionalGeneration": {
  "data": {
   "shadows": "transformers.BartForConditionalGeneration"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.BertConfig": {
  "data": {
   "shadows": "transformers.BertConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.BertForPreTraining": {
  "data": {
   "shadows": "transformers.BertForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.BertForQuestionAnswering": {
  "data": {
   "shadows": "transformers.BertForQuestionAnswering"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.BertForSequenceClassification": {
  "data": {
   "shadows": "transformers.BertForSequenceClassification"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.CAMEMBERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.CAMEMBERT_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.CTRLConfig": {
  "data": {
   "shadows": "transformers.CTRLConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.CTRLLMHeadModel": {
  "data": {
   "shadows": "transformers.CTRLLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.CTRL_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.CTRL_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.CamembertConfig": {
  "data": {
   "shadows": "transformers.CamembertConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.CamembertForMaskedLM": {
  "data": {
   "shadows": "transformers.CamembertForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.DISTILBERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.DISTILBERT_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.DistilBertConfig": {
  "data": {
   "shadows": "transformers.DistilBertConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.DistilBertForMaskedLM": {
  "data": {
   "shadows": "transformers.DistilBertForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.DistilBertForQuestionAnswering": {
  "data": {
   "shadows": "transformers.DistilBertForQuestionAnswering"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.ELECTRA_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.ELECTRA_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.ElectraConfig": {
  "data": {
   "shadows": "transformers.ElectraConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.ElectraForPreTraining": {
  "data": {
   "shadows": "transformers.ElectraForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.FLAUBERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.FLAUBERT_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.FlaubertConfig": {
  "data": {
   "shadows": "transformers.FlaubertConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.FlaubertWithLMHeadModel": {
  "data": {
   "shadows": "transformers.FlaubertWithLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.GPT2Config": {
  "data": {
   "shadows": "transformers.GPT2Config"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.GPT2LMHeadModel": {
  "data": {
   "shadows": "transformers.GPT2LMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.GPT2_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.GPT2_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.LXMERT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.LXMERT_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.LxmertConfig": {
  "data": {
   "shadows": "transformers.LxmertConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.LxmertForPreTraining": {
  "data": {
   "shadows": "transformers.LxmertForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.LxmertVisualFeatureEncoder": {
  "data": {
   "shadows": "transformers.LxmertVisualFeatureEncoder"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.MODEL_CLASSES": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.OPENAI_GPT_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.OPENAI_GPT_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.OpenAIGPTConfig": {
  "data": {
   "shadows": "transformers.OpenAIGPTConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.OpenAIGPTLMHeadModel": {
  "data": {
   "shadows": "transformers.OpenAIGPTLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.RobertaConfig": {
  "data": {
   "shadows": "transformers.RobertaConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.RobertaForMaskedLM": {
  "data": {
   "shadows": "transformers.RobertaForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.RobertaForSequenceClassification": {
  "data": {
   "shadows": "transformers.RobertaForSequenceClassification"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.T5Config": {
  "data": {
   "shadows": "transformers.T5Config"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.T5ForConditionalGeneration": {
  "data": {
   "shadows": "transformers.T5ForConditionalGeneration"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.T5_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.T5_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFAlbertForPreTraining": {
  "data": {
   "shadows": "transformers.TFAlbertForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFBartForConditionalGeneration": {
  "data": {
   "shadows": "transformers.TFBartForConditionalGeneration"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFBertForPreTraining": {
  "data": {
   "shadows": "transformers.TFBertForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFBertForQuestionAnswering": {
  "data": {
   "shadows": "transformers.TFBertForQuestionAnswering"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFBertForSequenceClassification": {
  "data": {
   "shadows": "transformers.TFBertForSequenceClassification"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFCTRLLMHeadModel": {
  "data": {
   "shadows": "transformers.TFCTRLLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFCamembertForMaskedLM": {
  "data": {
   "shadows": "transformers.TFCamembertForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFDistilBertForMaskedLM": {
  "data": {
   "shadows": "transformers.TFDistilBertForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFDistilBertForQuestionAnswering": {
  "data": {
   "shadows": "transformers.TFDistilBertForQuestionAnswering"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFElectraForPreTraining": {
  "data": {
   "shadows": "transformers.TFElectraForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFFlaubertWithLMHeadModel": {
  "data": {
   "shadows": "transformers.TFFlaubertWithLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFGPT2LMHeadModel": {
  "data": {
   "shadows": "transformers.TFGPT2LMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFLxmertForPreTraining": {
  "data": {
   "shadows": "transformers.TFLxmertForPreTraining"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFLxmertVisualFeatureEncoder": {
  "data": {
   "shadows": "transformers.TFLxmertVisualFeatureEncoder"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFOpenAIGPTLMHeadModel": {
  "data": {
   "shadows": "transformers.TFOpenAIGPTLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFRobertaForMaskedLM": {
  "data": {
   "shadows": "transformers.TFRobertaForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFRobertaForSequenceClassification": {
  "data": {
   "shadows": "transformers.TFRobertaForSequenceClassification"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFT5ForConditionalGeneration": {
  "data": {
   "shadows": "transformers.TFT5ForConditionalGeneration"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFTransfoXLLMHeadModel": {
  "data": {
   "shadows": "transformers.TFTransfoXLLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFXLMRobertaForMaskedLM": {
  "data": {
   "shadows": "transformers.TFXLMRobertaForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFXLMWithLMHeadModel": {
  "data": {
   "shadows": "transformers.TFXLMWithLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TFXLNetLMHeadModel": {
  "data": {
   "shadows": "transformers.TFXLNetLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TRANSFO_XL_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.TRANSFO_XL_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TransfoXLConfig": {
  "data": {
   "shadows": "transformers.TransfoXLConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.TransfoXLLMHeadModel": {
  "data": {
   "shadows": "transformers.TransfoXLLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.WEIGHTS_NAME": {
  "data": {
   "shadows": "transformers.WEIGHTS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLMConfig": {
  "data": {
   "shadows": "transformers.XLMConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLMRobertaConfig": {
  "data": {
   "shadows": "transformers.XLMRobertaConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLMRobertaForMaskedLM": {
  "data": {
   "shadows": "transformers.XLMRobertaForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLMWithLMHeadModel": {
  "data": {
   "shadows": "transformers.XLMWithLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLM_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.XLM_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLM_ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.XLM_ROBERTA_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLNET_PRETRAINED_CONFIG_ARCHIVE_MAP": {
  "data": {
   "shadows": "transformers.XLNET_PRETRAINED_CONFIG_ARCHIVE_MAP"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLNetConfig": {
  "data": {
   "shadows": "transformers.XLNetConfig"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.XLNetLMHeadModel": {
  "data": {
   "shadows": "transformers.XLNetLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.args": {
  "data": {
   "lineno": 427
  },
  "type": "constant"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.cached_path": {
  "data": {
   "shadows": "transformers.cached_path"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.convert_all_pt_checkpoints_to_tf": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "list",
    "model_class",
    "print",
    "transformers.cached_path",
    "transformers.convert_pytorch_checkpoint_to_tf2.MODEL_CLASSES",
    "transformers.convert_pytorch_checkpoint_to_tf2.convert_pt_checkpoint_to_tf",
    "transformers.convert_pytorch_checkpoint_to_tf2.os",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.convert_pt_checkpoint_to_tf": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "model_class",
    "numpy.abs",
    "numpy.amax",
    "print",
    "pt_model",
    "pt_model.dummy_inputs",
    "str",
    "tf_model",
    "tf_model.dummy_inputs",
    "tf_model.save_weights",
    "transformers.WEIGHTS_NAME",
    "transformers.cached_path",
    "transformers.convert_pytorch_checkpoint_to_tf2.MODEL_CLASSES",
    "transformers.convert_pytorch_checkpoint_to_tf2.torch",
    "transformers.file_utils.hf_bucket_url",
    "transformers.load_pytorch_checkpoint_in_tf2_model"
   ]
  },
  "type": "function"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.hf_bucket_url": {
  "data": {
   "shadows": "transformers.file_utils.hf_bucket_url"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.is_torch_available": {
  "data": {
   "shadows": "transformers.is_torch_available"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.load_pytorch_checkpoint_in_tf2_model": {
  "data": {
   "shadows": "transformers.load_pytorch_checkpoint_in_tf2_model"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.parser": {
  "data": {
   "lineno": 384
  },
  "type": "constant"
 },
 "transformers.convert_pytorch_checkpoint_to_tf2.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.argparse",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.args",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.convert_trax_checkpoint_to_pytorch",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.parser",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.ReformerConfig": {
  "data": {
   "shadows": "transformers.ReformerConfig"
  },
  "type": "import"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.ReformerModelWithLMHead": {
  "data": {
   "shadows": "transformers.ReformerModelWithLMHead"
  },
  "type": "import"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 218
  },
  "type": "constant"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.convert_trax_checkpoint_to_pytorch": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "open",
    "print",
    "str",
    "transformers.ReformerConfig.from_json_file",
    "transformers.ReformerModelWithLMHead",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.pickle",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_model_weights_in_torch",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_block_weights_in_torch": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_layer_weights_in_torch_local",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_layer_weights_in_torch_lsh",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_param",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_layer_weights_in_torch_local": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.asarray",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_param",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_layer_weights_in_torch_lsh": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.asarray",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_param",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_model_weights_in_torch": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "numpy.asarray",
    "range",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_block_weights_in_torch",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_param",
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.set_param": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "transformers.convert_reformer_trax_checkpoint_to_pytorch.torch"
   ]
  },
  "type": "function"
 },
 "transformers.convert_reformer_trax_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "__name__",
    "packaging.version.parse",
    "str",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.argparse",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.args",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.convert_roberta_checkpoint_to_pytorch",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.fairseq",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.parser",
    "transformers.utils.logging.get_logger",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.BertIntermediate": {
  "data": {
   "shadows": "transformers.modeling_bert.BertIntermediate"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.BertLayer": {
  "data": {
   "shadows": "transformers.modeling_bert.BertLayer"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.BertOutput": {
  "data": {
   "shadows": "transformers.modeling_bert.BertOutput"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.BertSelfAttention": {
  "data": {
   "shadows": "transformers.modeling_bert.BertSelfAttention"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.BertSelfOutput": {
  "data": {
   "shadows": "transformers.modeling_bert.BertSelfOutput"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.FairseqRobertaModel": {
  "data": {
   "shadows": "fairseq.models.roberta.RobertaModel"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.RobertaConfig": {
  "data": {
   "shadows": "transformers.modeling_roberta.RobertaConfig"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.RobertaForMaskedLM": {
  "data": {
   "shadows": "transformers.modeling_roberta.RobertaForMaskedLM"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.RobertaForSequenceClassification": {
  "data": {
   "shadows": "transformers.modeling_roberta.RobertaForSequenceClassification"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.SAMPLE_TEXT": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.TransformerSentenceEncoderLayer": {
  "data": {
   "shadows": "fairseq.modules.TransformerSentenceEncoderLayer"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.convert_roberta_checkpoint_to_pytorch": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "fairseq.models.roberta.RobertaModel.from_pretrained",
    "fairseq.modules.TransformerSentenceEncoderLayer",
    "model",
    "model.save_pretrained",
    "print",
    "range",
    "str",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.SAMPLE_TEXT",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.pathlib",
    "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.torch",
    "transformers.modeling_bert.BertIntermediate",
    "transformers.modeling_bert.BertLayer",
    "transformers.modeling_bert.BertOutput",
    "transformers.modeling_bert.BertSelfAttention",
    "transformers.modeling_bert.BertSelfOutput",
    "transformers.modeling_roberta.RobertaConfig",
    "transformers.modeling_roberta.RobertaForMaskedLM",
    "transformers.modeling_roberta.RobertaForSequenceClassification"
   ]
  },
  "type": "function"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.fairseq": {
  "data": {
   "shadows": "fairseq"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_roberta_original_pytorch_checkpoint_to_pytorch.version": {
  "data": {
   "shadows": "packaging.version"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizer": {
  "data": {
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.AlbertConverter",
    "transformers.convert_slow_tokenizer.BertConverter",
    "transformers.convert_slow_tokenizer.CamembertConverter",
    "transformers.convert_slow_tokenizer.FunnelConverter",
    "transformers.convert_slow_tokenizer.GPT2Converter",
    "transformers.convert_slow_tokenizer.HerbertConverter",
    "transformers.convert_slow_tokenizer.MBartConverter",
    "transformers.convert_slow_tokenizer.OpenAIGPTConverter",
    "transformers.convert_slow_tokenizer.PegasusConverter",
    "transformers.convert_slow_tokenizer.ReformerConverter",
    "transformers.convert_slow_tokenizer.RobertaConverter",
    "transformers.convert_slow_tokenizer.T5Converter",
    "transformers.convert_slow_tokenizer.XLMRobertaConverter",
    "transformers.convert_slow_tokenizer.XLNetConverter"
   ]
  },
  "type": "module"
 },
 "transformers.convert_slow_tokenizer.AlbertConverter": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.SpmConverter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.AlbertConverter.normalizer": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "tokenizers.normalizers.Lowercase",
    "tokenizers.normalizers.NFKD",
    "tokenizers.normalizers.Precompiled",
    "tokenizers.normalizers.Replace",
    "tokenizers.normalizers.Sequence",
    "tokenizers.normalizers.StripAccents"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.AlbertConverter.post_processor": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "tokenizers.processors.TemplateProcessing"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.AlbertConverter.vocab": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.check_number_comma"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.BPE": {
  "data": {
   "shadows": "tokenizers.models.BPE"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizer.BertConverter": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.Converter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.BertConverter.converted": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "hasattr",
    "str",
    "tokenizers.Tokenizer",
    "tokenizers.decoders.WordPiece",
    "tokenizers.models.WordPiece",
    "tokenizers.normalizers.BertNormalizer",
    "tokenizers.pre_tokenizers.BertPreTokenizer",
    "tokenizers.processors.TemplateProcessing"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.BertGenerationConverter": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.SpmConverter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.CamembertConverter": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.SpmConverter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.CamembertConverter.post_processor": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "tokenizers.processors.TemplateProcessing"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.CamembertConverter.unk_id": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.CamembertConverter.vocab": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.Converter": {
  "data": {
   "lineno": 73
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.Converter.__init__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.Converter.converted": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "NotImplementedError",
    "tokenizers.Tokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizer.FunnelConverter": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.Converter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.FunnelConverter.converted": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "hasattr",
    "str",
    "tokenizers.Tokenizer",
    "tokenizers.decoders.WordPiece",
    "tokenizers.models.WordPiece",
    "tokenizers.normalizers.BertNormalizer",
    "tokenizers.pre_tokenizers.BertPreTokenizer",
    "tokenizers.processors.TemplateProcessing"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.GPT2Converter": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.Converter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.GPT2Converter.converted": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "list",
    "tokenizers.Tokenizer",
    "tokenizers.decoders.ByteLevel",
    "tokenizers.models.BPE",
    "tokenizers.pre_tokenizers.ByteLevel",
    "tokenizers.processors.ByteLevel"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.HerbertConverter": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.Converter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.HerbertConverter.converted": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "list",
    "tokenizers.Tokenizer",
    "tokenizers.decoders.BPEDecoder",
    "tokenizers.models.BPE",
    "tokenizers.normalizers.BertNormalizer",
    "tokenizers.pre_tokenizers.BertPreTokenizer",
    "tokenizers.processors.BertProcessing"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizer.MBartConverter": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.SpmConverter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.MBartConverter.post_processor": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "tokenizers.processors.TemplateProcessing"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.MBartConverter.unk_id": {
  "data": {
   "lineno": 454
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.MBartConverter.vocab": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.OpenAIGPTConverter": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.Converter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.OpenAIGPTConverter.converted": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "list",
    "str",
    "tokenizers.Tokenizer",
    "tokenizers.decoders.BPEDecoder",
    "tokenizers.models.BPE",
    "tokenizers.normalizers.BertNormalizer",
    "tokenizers.pre_tokenizers.BertPreTokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.PegasusConverter": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.SpmConverter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.PegasusConverter.post_processor": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "tokenizers.processors.TemplateProcessing"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.PegasusConverter.unk_id": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.PegasusConverter.vocab": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.ReformerConverter": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.SpmConverter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.RobertaConverter": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.Converter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.RobertaConverter.converted": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "list",
    "tokenizers.Tokenizer",
    "tokenizers.decoders.ByteLevel",
    "tokenizers.models.BPE",
    "tokenizers.pre_tokenizers.ByteLevel",
    "tokenizers.processors.RobertaProcessing"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.SLOW_TO_FAST_CONVERTERS": {
  "data": {
   "lineno": 574
  },
  "type": "constant"
 },
 "transformers.convert_slow_tokenizer.SentencePieceExtractor": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.SentencePieceExtractor.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "requires_sentencepiece",
    "sentencepiece.SentencePieceProcessor",
    "str",
    "transformers.utils.sentencepiece_model_pb2"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.SentencePieceExtractor.extract": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "int",
    "range",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.SentencePieceProcessor": {
  "data": {
   "shadows": "sentencepiece.SentencePieceProcessor"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizer.SpmConverter": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.Converter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.SpmConverter.__init__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "super",
    "transformers.convert_slow_tokenizer.get_proto"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.SpmConverter.converted": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "tokenizers.Tokenizer",
    "tokenizers.decoders.Metaspace",
    "tokenizers.pre_tokenizers.Metaspace",
    "tokenizers.pre_tokenizers.Sequence",
    "tokenizers.pre_tokenizers.WhitespaceSplit"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.SpmConverter.normalizer": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "tokenizers.normalizers.Precompiled"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.SpmConverter.post_processor": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.SpmConverter.tokenizer": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "Exception",
    "tokenizers.Tokenizer",
    "tokenizers.models.BPE",
    "tokenizers.models.Unigram",
    "transformers.convert_slow_tokenizer.SentencePieceExtractor"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.SpmConverter.unk_id": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.SpmConverter.vocab": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.T5Converter": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.SpmConverter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.T5Converter.post_processor": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "tokenizers.processors.TemplateProcessing"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.T5Converter.vocab": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.Tokenizer": {
  "data": {
   "shadows": "tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizer.Unigram": {
  "data": {
   "shadows": "tokenizers.models.Unigram"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizer.WordPiece": {
  "data": {
   "shadows": "tokenizers.models.WordPiece"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizer.XLMRobertaConverter": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.SpmConverter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.XLMRobertaConverter.post_processor": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "tokenizers.processors.TemplateProcessing"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.XLMRobertaConverter.unk_id": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.XLMRobertaConverter.vocab": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.XLNetConverter": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.SpmConverter"
   ]
  },
  "type": "class"
 },
 "transformers.convert_slow_tokenizer.XLNetConverter.normalizer": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "tokenizers.normalizers.Lowercase",
    "tokenizers.normalizers.NFKD",
    "tokenizers.normalizers.Precompiled",
    "tokenizers.normalizers.Replace",
    "tokenizers.normalizers.Sequence",
    "tokenizers.normalizers.StripAccents"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.XLNetConverter.post_processor": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "tokenizers.processors.TemplateProcessing"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.XLNetConverter.vocab": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "transformers.convert_slow_tokenizer.check_number_comma"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.check_number_comma": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "bool",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.convert_slow_tokenizer": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "ValueError",
    "converter_class",
    "list",
    "tokenizers.Tokenizer",
    "transformers.convert_slow_tokenizer.SLOW_TO_FAST_CONVERTERS"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.decoders": {
  "data": {
   "shadows": "tokenizers.decoders"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizer.get_proto": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "open",
    "str",
    "transformers.utils.sentencepiece_model_pb2.ModelProto"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizer.model": {
  "data": {
   "shadows": "transformers.utils.sentencepiece_model_pb2"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizer.normalizers": {
  "data": {
   "shadows": "tokenizers.normalizers"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizer.pre_tokenizers": {
  "data": {
   "shadows": "tokenizers.pre_tokenizers"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizer.processors": {
  "data": {
   "shadows": "tokenizers.processors"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizers_checkpoints_to_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "getattr",
    "list",
    "str",
    "transformers.convert_slow_tokenizer.SLOW_TO_FAST_CONVERTERS",
    "transformers.convert_slow_tokenizers_checkpoints_to_fast.TOKENIZER_CLASSES",
    "transformers.convert_slow_tokenizers_checkpoints_to_fast.argparse",
    "transformers.convert_slow_tokenizers_checkpoints_to_fast.args",
    "transformers.convert_slow_tokenizers_checkpoints_to_fast.convert_slow_checkpoint_to_fast",
    "transformers.convert_slow_tokenizers_checkpoints_to_fast.parser",
    "transformers.convert_slow_tokenizers_checkpoints_to_fast.transformers",
    "transformers.utils.logging.get_logger",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_slow_tokenizers_checkpoints_to_fast.SLOW_TO_FAST_CONVERTERS": {
  "data": {
   "shadows": "transformers.convert_slow_tokenizer.SLOW_TO_FAST_CONVERTERS"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizers_checkpoints_to_fast.TOKENIZER_CLASSES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.convert_slow_tokenizers_checkpoints_to_fast.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizers_checkpoints_to_fast.args": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "transformers.convert_slow_tokenizers_checkpoints_to_fast.convert_slow_checkpoint_to_fast": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "list",
    "transformers.convert_slow_tokenizers_checkpoints_to_fast.TOKENIZER_CLASSES",
    "transformers.convert_slow_tokenizers_checkpoints_to_fast.logger",
    "transformers.convert_slow_tokenizers_checkpoints_to_fast.os",
    "transformers.convert_slow_tokenizers_checkpoints_to_fast.transformers"
   ]
  },
  "type": "function"
 },
 "transformers.convert_slow_tokenizers_checkpoints_to_fast.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.convert_slow_tokenizers_checkpoints_to_fast.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizers_checkpoints_to_fast.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_slow_tokenizers_checkpoints_to_fast.parser": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "transformers.convert_slow_tokenizers_checkpoints_to_fast.transformers": {
  "data": {
   "shadows": "transformers"
  },
  "type": "import"
 },
 "transformers.convert_t5_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_t5_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_t5_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_t5_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch",
    "transformers.convert_t5_original_tf_checkpoint_to_pytorch.parser",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_t5_original_tf_checkpoint_to_pytorch.T5Config": {
  "data": {
   "shadows": "transformers.T5Config"
  },
  "type": "import"
 },
 "transformers.convert_t5_original_tf_checkpoint_to_pytorch.T5Model": {
  "data": {
   "shadows": "transformers.T5Model"
  },
  "type": "import"
 },
 "transformers.convert_t5_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_t5_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.convert_t5_original_tf_checkpoint_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "print",
    "str",
    "transformers.T5Config.from_json_file",
    "transformers.T5Model",
    "transformers.convert_t5_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_t5"
   ]
  },
  "type": "function"
 },
 "transformers.convert_t5_original_tf_checkpoint_to_pytorch.load_tf_weights_in_t5": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_t5"
  },
  "type": "import"
 },
 "transformers.convert_t5_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_t5_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.convert_t5_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "str",
    "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.argparse",
    "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.args",
    "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.convert_tf_checkpoint_to_pytorch",
    "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.parser",
    "transformers.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.BertConfig": {
  "data": {
   "shadows": "transformers.BertConfig"
  },
  "type": "import"
 },
 "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.BertGenerationConfig": {
  "data": {
   "shadows": "transformers.BertGenerationConfig"
  },
  "type": "import"
 },
 "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.BertGenerationDecoder": {
  "data": {
   "shadows": "transformers.BertGenerationDecoder"
  },
  "type": "import"
 },
 "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.BertGenerationEncoder": {
  "data": {
   "shadows": "transformers.BertGenerationEncoder"
  },
  "type": "import"
 },
 "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.args": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.convert_tf_checkpoint_to_pytorch": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "print",
    "str",
    "transformers.BertConfig.from_pretrained",
    "transformers.BertGenerationConfig",
    "transformers.BertGenerationDecoder",
    "transformers.BertGenerationEncoder",
    "transformers.load_tf_weights_in_bert_generation"
   ]
  },
  "type": "function"
 },
 "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.load_tf_weights_in_bert_generation": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_bert_generation"
  },
  "type": "import"
 },
 "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.logging"
  },
  "type": "import"
 },
 "transformers.convert_tf_hub_seq_to_seq_bert_to_pytorch.parser": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.convert_transfo_xl_checkpoint_to_pytorch",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.parser",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.sys",
    "transformers.tokenization_transfo_xl",
    "transformers.tokenization_transfo_xl.Corpus",
    "transformers.tokenization_transfo_xl.TransfoXLCorpus",
    "transformers.tokenization_transfo_xl.TransfoXLTokenizer",
    "transformers.tokenization_transfo_xl.Vocab",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.CONFIG_NAME": {
  "data": {
   "shadows": "transformers.CONFIG_NAME"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.CORPUS_NAME": {
  "data": {
   "shadows": "transformers.tokenization_transfo_xl.CORPUS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.TransfoXLConfig": {
  "data": {
   "shadows": "transformers.TransfoXLConfig"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.TransfoXLLMHeadModel": {
  "data": {
   "shadows": "transformers.TransfoXLLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.VOCAB_FILES_NAMES": {
  "data": {
   "shadows": "transformers.tokenization_transfo_xl.VOCAB_FILES_NAMES"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.WEIGHTS_NAME": {
  "data": {
   "shadows": "transformers.WEIGHTS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.convert_transfo_xl_checkpoint_to_pytorch": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "open",
    "print",
    "str",
    "transformers.CONFIG_NAME",
    "transformers.TransfoXLConfig",
    "transformers.TransfoXLConfig.from_json_file",
    "transformers.TransfoXLLMHeadModel",
    "transformers.WEIGHTS_NAME",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.os",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.pickle",
    "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_transfo_xl",
    "transformers.tokenization_transfo_xl.CORPUS_NAME",
    "transformers.tokenization_transfo_xl.VOCAB_FILES_NAMES"
   ]
  },
  "type": "function"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.data_utils": {
  "data": {
   "shadows": "transformers.tokenization_transfo_xl"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.load_tf_weights_in_transfo_xl": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_transfo_xl"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.convert_transfo_xl_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "str",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.argparse",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.args",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.convert_xlm_checkpoint_to_pytorch",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.parser",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.CONFIG_NAME": {
  "data": {
   "shadows": "transformers.CONFIG_NAME"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.VOCAB_FILES_NAMES": {
  "data": {
   "shadows": "transformers.tokenization_xlm.VOCAB_FILES_NAMES"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.WEIGHTS_NAME": {
  "data": {
   "shadows": "transformers.WEIGHTS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.convert_xlm_checkpoint_to_pytorch": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "open",
    "print",
    "transformers.CONFIG_NAME",
    "transformers.WEIGHTS_NAME",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.json",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.numpy",
    "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.torch",
    "transformers.tokenization_xlm.VOCAB_FILES_NAMES"
   ]
  },
  "type": "function"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "transformers.convert_xlm_original_pytorch_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "print",
    "str",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.argparse",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.args",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.convert_xlnet_checkpoint_to_pytorch",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.parser",
    "transformers.utils.logging.set_verbosity_info"
   ]
  },
  "type": "module"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.CONFIG_NAME": {
  "data": {
   "shadows": "transformers.CONFIG_NAME"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.GLUE_TASKS_NUM_LABELS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.WEIGHTS_NAME": {
  "data": {
   "shadows": "transformers.WEIGHTS_NAME"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.XLNetConfig": {
  "data": {
   "shadows": "transformers.XLNetConfig"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.XLNetForQuestionAnswering": {
  "data": {
   "shadows": "transformers.XLNetForQuestionAnswering"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.XLNetForSequenceClassification": {
  "data": {
   "shadows": "transformers.XLNetForSequenceClassification"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.XLNetLMHeadModel": {
  "data": {
   "shadows": "transformers.XLNetLMHeadModel"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.args": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.convert_xlnet_checkpoint_to_pytorch": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "open",
    "print",
    "str",
    "transformers.CONFIG_NAME",
    "transformers.WEIGHTS_NAME",
    "transformers.XLNetConfig.from_json_file",
    "transformers.XLNetForQuestionAnswering",
    "transformers.XLNetForSequenceClassification",
    "transformers.XLNetLMHeadModel",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.GLUE_TASKS_NUM_LABELS",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.os",
    "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.torch",
    "transformers.load_tf_weights_in_xlnet"
   ]
  },
  "type": "function"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.load_tf_weights_in_xlnet": {
  "data": {
   "shadows": "transformers.load_tf_weights_in_xlnet"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.logging": {
  "data": {
   "shadows": "transformers.utils.logging"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.parser": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "transformers.convert_xlnet_original_tf_checkpoint_to_pytorch.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.data": {
  "data": {},
  "type": "module"
 },
 "transformers.data.data_collator": {
  "data": {
   "symbols_in_volume": [
    "str",
    "transformers.data.data_collator.InputDataClass",
    "transformers.data.data_collator.torch",
    "typing.Any",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.NewType"
   ]
  },
  "type": "module"
 },
 "transformers.data.data_collator.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.data.data_collator.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "transformers.data.data_collator.DataCollator": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "transformers.data.data_collator.DataCollatorForLanguageModeling": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "float"
   ]
  },
  "type": "class"
 },
 "transformers.data.data_collator.DataCollatorForLanguageModeling.__call__": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "str",
    "transformers.data.data_collator._collate_batch",
    "transformers.data.data_collator.torch",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForLanguageModeling.__post_init__": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForLanguageModeling.mask_tokens": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "len",
    "transformers.data.data_collator.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForPermutationLanguageModeling": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "float",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.data.data_collator.DataCollatorForPermutationLanguageModeling.__call__": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "str",
    "transformers.data.data_collator._collate_batch",
    "transformers.data.data_collator.torch",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForPermutationLanguageModeling.mask_tokens": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "range",
    "transformers.data.data_collator.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForSOP": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.data.data_collator.DataCollatorForLanguageModeling"
   ]
  },
  "type": "class"
 },
 "transformers.data.data_collator.DataCollatorForSOP.__call__": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "str",
    "torch.nn.utils.rnn.pad_sequence",
    "transformers.data.data_collator._collate_batch",
    "transformers.data.data_collator.torch",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForSOP.__init__": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "FutureWarning",
    "transformers.data.data_collator.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForSOP.mask_tokens": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "transformers.data.data_collator.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForTokenClassification": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "int",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "transformers.data.data_collator.DataCollatorForTokenClassification.__call__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "len",
    "transformers.data.data_collator.torch"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForWholeWordMask": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.data.data_collator.DataCollatorForLanguageModeling"
   ]
  },
  "type": "class"
 },
 "transformers.data.data_collator.DataCollatorForWholeWordMask.__call__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "dict",
    "id",
    "int",
    "isinstance",
    "range",
    "str",
    "transformers.data.data_collator._collate_batch",
    "transformers.data.data_collator.tolist",
    "transformers.data.data_collator.torch",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForWholeWordMask._whole_word_mask": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "max",
    "min",
    "range",
    "round",
    "set",
    "str",
    "transformers.data.data_collator.random",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorForWholeWordMask.mask_tokens": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "transformers.data.data_collator.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.DataCollatorWithPadding": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "int",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "transformers.data.data_collator.DataCollatorWithPadding.__call__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "int",
    "str",
    "transformers.data.data_collator.torch",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.data.data_collator.InputDataClass": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "transformers.data.data_collator.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.data.data_collator.NewType": {
  "data": {
   "shadows": "typing.NewType"
  },
  "type": "import"
 },
 "transformers.data.data_collator.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.data.data_collator.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.data.data_collator.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.data.data_collator._collate_batch": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "max",
    "transformers.data.data_collator.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.data.data_collator.default_data_collator": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "str",
    "transformers.data.data_collator.InputDataClass",
    "transformers.data.data_collator.torch",
    "type",
    "typing.Dict",
    "typing.List",
    "vars"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.pad_sequence": {
  "data": {
   "shadows": "torch.nn.utils.rnn.pad_sequence"
  },
  "type": "import"
 },
 "transformers.data.data_collator.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "transformers.data.data_collator.tolist": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "isinstance",
    "transformers.data.data_collator.torch",
    "typing.Any",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.data.data_collator.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.data.data_collator.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.data.datasets": {
  "data": {},
  "type": "module"
 },
 "transformers.data.datasets.glue": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.data.datasets.glue.Dataset": {
  "data": {
   "shadows": "torch.utils.data.dataset.Dataset"
  },
  "type": "import"
 },
 "transformers.data.datasets.glue.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "transformers.data.datasets.glue.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "transformers.data.datasets.glue.GlueDataTrainingArguments": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "dataclasses.field",
    "int",
    "str"
   ]
  },
  "type": "class"
 },
 "transformers.data.datasets.glue.GlueDataTrainingArguments.__post_init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "transformers.data.datasets.glue.GlueDataset": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "str",
    "torch.utils.data.dataset.Dataset",
    "transformers.data.datasets.glue.GlueDataTrainingArguments",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "transformers.data.datasets.glue.GlueDataset.__getitem__": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "transformers.data.datasets.glue.GlueDataset.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "FutureWarning",
    "KeyError",
    "filelock.FileLock",
    "glue_convert_examples_to_features",
    "int",
    "isinstance",
    "str",
    "transformers.data.datasets.glue.GlueDataTrainingArguments",
    "transformers.data.datasets.glue.Split",
    "transformers.data.datasets.glue.logger",
    "transformers.data.datasets.glue.os",
    "transformers.data.datasets.glue.time",
    "transformers.data.datasets.glue.torch",
    "transformers.data.datasets.glue.warnings",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.glue.GlueDataset.__len__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.glue.GlueDataset.get_labels": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "transformers.data.datasets.glue.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.data.datasets.glue.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.data.datasets.glue.Split": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "transformers.data.datasets.glue.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.data.datasets.glue.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.data.datasets.glue.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "transformers.data.datasets.glue.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "transformers.data.datasets.glue.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.data.datasets.glue.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "transformers.data.datasets.glue.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.data.datasets.glue.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.data.datasets.language_modeling": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.data.datasets.language_modeling.DEPRECATION_WARNING": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.data.datasets.language_modeling.Dataset": {
  "data": {
   "shadows": "torch.utils.data.dataset.Dataset"
  },
  "type": "import"
 },
 "transformers.data.datasets.language_modeling.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.data.datasets.language_modeling.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "transformers.data.datasets.language_modeling.LineByLineTextDataset": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "torch.utils.data.dataset.Dataset"
   ]
  },
  "type": "class"
 },
 "transformers.data.datasets.language_modeling.LineByLineTextDataset.__getitem__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "str",
    "transformers.data.datasets.language_modeling.torch",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineTextDataset.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "FutureWarning",
    "int",
    "len",
    "open",
    "str",
    "tokenizer",
    "transformers.data.datasets.language_modeling.DEPRECATION_WARNING",
    "transformers.data.datasets.language_modeling.logger",
    "transformers.data.datasets.language_modeling.os",
    "transformers.data.datasets.language_modeling.torch",
    "transformers.data.datasets.language_modeling.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineTextDataset.__len__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithRefDataset": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "torch.utils.data.dataset.Dataset"
   ]
  },
  "type": "class"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithRefDataset.__getitem__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "str",
    "transformers.data.datasets.language_modeling.torch",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithRefDataset.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "FutureWarning",
    "int",
    "len",
    "open",
    "range",
    "str",
    "tokenizer",
    "transformers.data.datasets.language_modeling.DEPRECATION_WARNING",
    "transformers.data.datasets.language_modeling.json",
    "transformers.data.datasets.language_modeling.logger",
    "transformers.data.datasets.language_modeling.os",
    "transformers.data.datasets.language_modeling.torch",
    "transformers.data.datasets.language_modeling.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithRefDataset.__len__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "torch.utils.data.dataset.Dataset"
   ]
  },
  "type": "class"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__getitem__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "str",
    "transformers.data.datasets.language_modeling.torch",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__init__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "FutureWarning",
    "int",
    "len",
    "open",
    "str",
    "tokenizer",
    "tokenizer.convert_tokens_to_ids",
    "tokenizer.tokenize",
    "transformers.data.datasets.language_modeling.DEPRECATION_WARNING",
    "transformers.data.datasets.language_modeling.logger",
    "transformers.data.datasets.language_modeling.os",
    "transformers.data.datasets.language_modeling.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.__len__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "len",
    "range",
    "tokenizer.build_inputs_with_special_tokens",
    "tokenizer.create_token_type_ids_from_sequences",
    "tokenizer.num_special_tokens_to_add",
    "transformers.data.datasets.language_modeling.random",
    "transformers.data.datasets.language_modeling.torch",
    "truncate_seq_pair"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.LineByLineWithSOPTextDataset.create_examples_from_document.truncate_seq_pair": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "len",
    "transformers.data.datasets.language_modeling.random"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.data.datasets.language_modeling.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.data.datasets.language_modeling.TextDataset": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "torch.utils.data.dataset.Dataset"
   ]
  },
  "type": "class"
 },
 "transformers.data.datasets.language_modeling.TextDataset.__getitem__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "transformers.data.datasets.language_modeling.torch"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.TextDataset.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "FutureWarning",
    "filelock.FileLock",
    "int",
    "len",
    "open",
    "range",
    "str",
    "transformers.data.datasets.language_modeling.DEPRECATION_WARNING",
    "transformers.data.datasets.language_modeling.logger",
    "transformers.data.datasets.language_modeling.os",
    "transformers.data.datasets.language_modeling.pickle",
    "transformers.data.datasets.language_modeling.time",
    "transformers.data.datasets.language_modeling.warnings",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.TextDataset.__len__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "torch.utils.data.dataset.Dataset"
   ]
  },
  "type": "class"
 },
 "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__getitem__": {
  "data": {
   "lineno": 510
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__init__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "FutureWarning",
    "enumerate",
    "filelock.FileLock",
    "int",
    "len",
    "open",
    "str",
    "tokenizer",
    "tokenizer.__class__.__name__",
    "tokenizer.convert_tokens_to_ids",
    "tokenizer.num_special_tokens_to_add",
    "tokenizer.tokenize",
    "transformers.data.datasets.language_modeling.DEPRECATION_WARNING",
    "transformers.data.datasets.language_modeling.logger",
    "transformers.data.datasets.language_modeling.os",
    "transformers.data.datasets.language_modeling.pickle",
    "transformers.data.datasets.language_modeling.time",
    "transformers.data.datasets.language_modeling.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.__len__": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.TextDatasetForNextSentencePrediction.create_examples_from_document": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "int",
    "len",
    "range",
    "transformers.data.datasets.language_modeling.random",
    "transformers.data.datasets.language_modeling.torch",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.language_modeling.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.data.datasets.language_modeling.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "transformers.data.datasets.language_modeling.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.data.datasets.language_modeling.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "transformers.data.datasets.language_modeling.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "transformers.data.datasets.language_modeling.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "transformers.data.datasets.language_modeling.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.data.datasets.language_modeling.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.data.datasets.squad": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "list",
    "transformers.data.datasets.squad.MODEL_CONFIG_CLASSES",
    "tuple"
   ]
  },
  "type": "module"
 },
 "transformers.data.datasets.squad.Dataset": {
  "data": {
   "shadows": "torch.utils.data.dataset.Dataset"
  },
  "type": "import"
 },
 "transformers.data.datasets.squad.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.data.datasets.squad.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "transformers.data.datasets.squad.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "transformers.data.datasets.squad.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.data.datasets.squad.MODEL_CONFIG_CLASSES": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "transformers.data.datasets.squad.MODEL_TYPES": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.data.datasets.squad.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.data.datasets.squad.Split": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "transformers.data.datasets.squad.SquadDataTrainingArguments": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "dataclasses.field",
    "float",
    "int",
    "str",
    "transformers.data.datasets.squad.MODEL_TYPES"
   ]
  },
  "type": "class"
 },
 "transformers.data.datasets.squad.SquadDataset": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "bool",
    "torch.utils.data.dataset.Dataset",
    "transformers.data.datasets.squad.Split",
    "transformers.data.datasets.squad.SquadDataTrainingArguments",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "transformers.data.datasets.squad.SquadDataset.__getitem__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "str",
    "transformers.data.datasets.squad.Split",
    "transformers.data.datasets.squad.torch",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.squad.SquadDataset.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "KeyError",
    "SquadV1Processor",
    "SquadV2Processor",
    "bool",
    "filelock.FileLock",
    "int",
    "isinstance",
    "squad_convert_examples_to_features",
    "str",
    "transformers.data.datasets.squad.Split",
    "transformers.data.datasets.squad.SquadDataTrainingArguments",
    "transformers.data.datasets.squad.logger",
    "transformers.data.datasets.squad.os",
    "transformers.data.datasets.squad.time",
    "transformers.data.datasets.squad.torch",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.squad.SquadDataset.__len__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.data.datasets.squad.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.data.datasets.squad.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.data.datasets.squad.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "transformers.data.datasets.squad.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "transformers.data.datasets.squad.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.data.datasets.squad.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "transformers.data.datasets.squad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.data.metrics": {
  "data": {
   "symbols_in_volume": [
    "is_sklearn_available"
   ]
  },
  "type": "module"
 },
 "transformers.data.metrics.DEPRECATION_WARNING": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.data.metrics.acc_and_f1": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "FutureWarning",
    "requires_sklearn",
    "sklearn.metrics.f1_score",
    "transformers.data.metrics.DEPRECATION_WARNING",
    "transformers.data.metrics.simple_accuracy",
    "transformers.data.metrics.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.f1_score": {
  "data": {
   "shadows": "sklearn.metrics.f1_score"
  },
  "type": "import"
 },
 "transformers.data.metrics.glue_compute_metrics": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "FutureWarning",
    "KeyError",
    "len",
    "requires_sklearn",
    "sklearn.metrics.matthews_corrcoef",
    "transformers.data.metrics.DEPRECATION_WARNING",
    "transformers.data.metrics.acc_and_f1",
    "transformers.data.metrics.pearson_and_spearman",
    "transformers.data.metrics.simple_accuracy",
    "transformers.data.metrics.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.matthews_corrcoef": {
  "data": {
   "shadows": "sklearn.metrics.matthews_corrcoef"
  },
  "type": "import"
 },
 "transformers.data.metrics.pearson_and_spearman": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "FutureWarning",
    "requires_sklearn",
    "scipy.stats.pearsonr",
    "scipy.stats.spearmanr",
    "transformers.data.metrics.DEPRECATION_WARNING",
    "transformers.data.metrics.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.pearsonr": {
  "data": {
   "shadows": "scipy.stats.pearsonr"
  },
  "type": "import"
 },
 "transformers.data.metrics.simple_accuracy": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "FutureWarning",
    "requires_sklearn",
    "transformers.data.metrics.DEPRECATION_WARNING",
    "transformers.data.metrics.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.spearmanr": {
  "data": {
   "shadows": "scipy.stats.spearmanr"
  },
  "type": "import"
 },
 "transformers.data.metrics.squad_metrics": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.data.metrics.squad_metrics.BasicTokenizer": {
  "data": {
   "shadows": "transformers.tokenization_bert.BasicTokenizer"
  },
  "type": "import"
 },
 "transformers.data.metrics.squad_metrics._compute_softmax": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "transformers.data.metrics.squad_metrics.math"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics._get_best_indexes": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.apply_no_ans_threshold": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.data.metrics.squad_metrics.compute_exact": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "int",
    "transformers.data.metrics.squad_metrics.normalize_answer"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.compute_f1": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "int",
    "len",
    "sum",
    "transformers.data.metrics.squad_metrics.collections",
    "transformers.data.metrics.squad_metrics.get_tokens"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.compute_predictions_log_probs": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "_NbestPrediction",
    "_PrelimPrediction",
    "enumerate",
    "hasattr",
    "len",
    "list",
    "min",
    "open",
    "range",
    "sorted",
    "transformers.data.metrics.squad_metrics._compute_softmax",
    "transformers.data.metrics.squad_metrics.collections",
    "transformers.data.metrics.squad_metrics.get_final_text",
    "transformers.data.metrics.squad_metrics.json",
    "transformers.data.metrics.squad_metrics.logger"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.compute_predictions_logits": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "_NbestPrediction",
    "_PrelimPrediction",
    "enumerate",
    "len",
    "list",
    "open",
    "sorted",
    "transformers.data.metrics.squad_metrics._compute_softmax",
    "transformers.data.metrics.squad_metrics._get_best_indexes",
    "transformers.data.metrics.squad_metrics.collections",
    "transformers.data.metrics.squad_metrics.get_final_text",
    "transformers.data.metrics.squad_metrics.json",
    "transformers.data.metrics.squad_metrics.logger"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.find_all_best_thresh": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "transformers.data.metrics.squad_metrics.find_best_thresh"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.find_all_best_thresh_v2": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "transformers.data.metrics.squad_metrics.find_best_thresh_v2"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.find_best_thresh": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "sorted",
    "sum"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.find_best_thresh_v2": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "sorted",
    "sum"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.get_final_text": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "_strip_spaces",
    "len",
    "transformers.data.metrics.squad_metrics.logger",
    "transformers.tokenization_bert.BasicTokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.get_final_text._strip_spaces": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "transformers.data.metrics.squad_metrics.collections"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.get_raw_scores": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "max",
    "print",
    "transformers.data.metrics.squad_metrics.compute_exact",
    "transformers.data.metrics.squad_metrics.compute_f1",
    "transformers.data.metrics.squad_metrics.normalize_answer"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.get_tokens": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "transformers.data.metrics.squad_metrics.normalize_answer"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.data.metrics.squad_metrics.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.data.metrics.squad_metrics.make_eval_dict": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "len",
    "sum",
    "transformers.data.metrics.squad_metrics.collections"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.data.metrics.squad_metrics.merge_eval": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.normalize_answer": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "lower",
    "remove_articles",
    "remove_punc",
    "white_space_fix"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.normalize_answer.lower": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.normalize_answer.remove_articles": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "transformers.data.metrics.squad_metrics.re"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.normalize_answer.remove_punc": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "set",
    "transformers.data.metrics.squad_metrics.string"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.normalize_answer.white_space_fix": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.data.metrics.squad_metrics.squad_evaluate": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "bool",
    "transformers.data.metrics.squad_metrics.apply_no_ans_threshold",
    "transformers.data.metrics.squad_metrics.find_all_best_thresh",
    "transformers.data.metrics.squad_metrics.get_raw_scores",
    "transformers.data.metrics.squad_metrics.make_eval_dict",
    "transformers.data.metrics.squad_metrics.merge_eval"
   ]
  },
  "type": "function"
 },
 "transformers.data.metrics.squad_metrics.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "transformers.data.metrics.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.data.metrics.xnli_compute_metrics": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "FutureWarning",
    "KeyError",
    "len",
    "requires_sklearn",
    "transformers.data.metrics.DEPRECATION_WARNING",
    "transformers.data.metrics.simple_accuracy",
    "transformers.data.metrics.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors": {
  "data": {},
  "type": "module"
 },
 "transformers.data.processors.glue": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_tf_available",
    "transformers.data.processors.glue.ColaProcessor",
    "transformers.data.processors.glue.MnliMismatchedProcessor",
    "transformers.data.processors.glue.MnliProcessor",
    "transformers.data.processors.glue.MrpcProcessor",
    "transformers.data.processors.glue.QnliProcessor",
    "transformers.data.processors.glue.QqpProcessor",
    "transformers.data.processors.glue.RteProcessor",
    "transformers.data.processors.glue.Sst2Processor",
    "transformers.data.processors.glue.StsbProcessor",
    "transformers.data.processors.glue.WnliProcessor"
   ]
  },
  "type": "module"
 },
 "transformers.data.processors.glue.ColaProcessor": {
  "data": {
   "lineno": 279
  },
  "type": "class"
 },
 "transformers.data.processors.glue.ColaProcessor.__init__": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "FutureWarning",
    "super",
    "transformers.data.processors.glue.DEPRECATION_WARNING",
    "transformers.data.processors.glue.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor._create_examples": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor.get_dev_examples": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor.get_labels": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor.get_test_examples": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.ColaProcessor.get_train_examples": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.DEPRECATION_WARNING": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.data.processors.glue.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "transformers.data.processors.glue.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.data.processors.glue.MnliMismatchedProcessor": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "transformers.data.processors.glue.MnliProcessor"
   ]
  },
  "type": "class"
 },
 "transformers.data.processors.glue.MnliMismatchedProcessor.__init__": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "FutureWarning",
    "super",
    "transformers.data.processors.glue.DEPRECATION_WARNING",
    "transformers.data.processors.glue.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliMismatchedProcessor.get_dev_examples": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliMismatchedProcessor.get_test_examples": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor": {
  "data": {
   "lineno": 217
  },
  "type": "class"
 },
 "transformers.data.processors.glue.MnliProcessor.__init__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "FutureWarning",
    "super",
    "transformers.data.processors.glue.DEPRECATION_WARNING",
    "transformers.data.processors.glue.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor._create_examples": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor.get_dev_examples": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor.get_labels": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor.get_test_examples": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MnliProcessor.get_train_examples": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor": {
  "data": {
   "lineno": 170
  },
  "type": "class"
 },
 "transformers.data.processors.glue.MrpcProcessor.__init__": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "FutureWarning",
    "super",
    "transformers.data.processors.glue.DEPRECATION_WARNING",
    "transformers.data.processors.glue.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor._create_examples": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor.get_dev_examples": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor.get_labels": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor.get_test_examples": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.MrpcProcessor.get_train_examples": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "transformers.data.processors.glue.logger",
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.data.processors.glue.OutputMode": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "transformers.data.processors.glue.QnliProcessor": {
  "data": {
   "lineno": 470
  },
  "type": "class"
 },
 "transformers.data.processors.glue.QnliProcessor.__init__": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "FutureWarning",
    "super",
    "transformers.data.processors.glue.DEPRECATION_WARNING",
    "transformers.data.processors.glue.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor._create_examples": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor.get_dev_examples": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor.get_labels": {
  "data": {
   "lineno": 498
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor.get_test_examples": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QnliProcessor.get_train_examples": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor": {
  "data": {
   "lineno": 418
  },
  "type": "class"
 },
 "transformers.data.processors.glue.QqpProcessor.__init__": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "FutureWarning",
    "super",
    "transformers.data.processors.glue.DEPRECATION_WARNING",
    "transformers.data.processors.glue.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor._create_examples": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "IndexError",
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor.get_dev_examples": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor.get_labels": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor.get_test_examples": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.QqpProcessor.get_train_examples": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor": {
  "data": {
   "lineno": 516
  },
  "type": "class"
 },
 "transformers.data.processors.glue.RteProcessor.__init__": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "FutureWarning",
    "super",
    "transformers.data.processors.glue.DEPRECATION_WARNING",
    "transformers.data.processors.glue.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor._create_examples": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor.get_dev_examples": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor.get_labels": {
  "data": {
   "lineno": 544
  },
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor.get_test_examples": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.RteProcessor.get_train_examples": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor": {
  "data": {
   "lineno": 326
  },
  "type": "class"
 },
 "transformers.data.processors.glue.Sst2Processor.__init__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "FutureWarning",
    "super",
    "transformers.data.processors.glue.DEPRECATION_WARNING",
    "transformers.data.processors.glue.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor._create_examples": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor.get_dev_examples": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor.get_labels": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor.get_test_examples": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.Sst2Processor.get_train_examples": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor": {
  "data": {
   "lineno": 372
  },
  "type": "class"
 },
 "transformers.data.processors.glue.StsbProcessor.__init__": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "FutureWarning",
    "super",
    "transformers.data.processors.glue.DEPRECATION_WARNING",
    "transformers.data.processors.glue.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor._create_examples": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor.get_dev_examples": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor.get_labels": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor.get_test_examples": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.StsbProcessor.get_train_examples": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.data.processors.glue.WnliProcessor": {
  "data": {
   "lineno": 562
  },
  "type": "class"
 },
 "transformers.data.processors.glue.WnliProcessor.__init__": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "FutureWarning",
    "super",
    "transformers.data.processors.glue.DEPRECATION_WARNING",
    "transformers.data.processors.glue.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor._create_examples": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "InputExample",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor.get_dev_examples": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "InputExample",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor.get_labels": {
  "data": {
   "lineno": 590
  },
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor.get_test_examples": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.WnliProcessor.get_train_examples": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "transformers.data.processors.glue.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue._glue_convert_examples_to_features": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "InputFeatures",
    "enumerate",
    "int",
    "label_from_example",
    "len",
    "range",
    "tokenizer",
    "transformers.data.processors.glue.logger",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue._glue_convert_examples_to_features.label_from_example": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "KeyError",
    "float",
    "int",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue._tf_glue_convert_examples_to_features": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "int",
    "str",
    "tensorflow.TensorShape",
    "tensorflow.data.Dataset",
    "tensorflow.data.Dataset.from_generator",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.int64",
    "transformers.data.processors.glue.glue_convert_examples_to_features",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue._tf_glue_convert_examples_to_features.gen": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "dataclasses.asdict"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.asdict": {
  "data": {
   "shadows": "dataclasses.asdict"
  },
  "type": "import"
 },
 "transformers.data.processors.glue.glue_convert_examples_to_features": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "_glue_convert_examples_to_features",
    "_tf_glue_convert_examples_to_features",
    "int",
    "is_tf_available",
    "isinstance",
    "tensorflow.data.Dataset",
    "transformers.data.processors.glue.DEPRECATION_WARNING",
    "transformers.data.processors.glue.warnings",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.glue.glue_output_modes": {
  "data": {
   "lineno": 633
  },
  "type": "constant"
 },
 "transformers.data.processors.glue.glue_processors": {
  "data": {
   "lineno": 620
  },
  "type": "constant"
 },
 "transformers.data.processors.glue.glue_tasks_num_labels": {
  "data": {
   "lineno": 608
  },
  "type": "constant"
 },
 "transformers.data.processors.glue.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.data.processors.glue.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.data.processors.glue.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.data.processors.glue.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.data.processors.squad": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_tf_available",
    "is_torch_available"
   ]
  },
  "type": "module"
 },
 "transformers.data.processors.squad.MULTI_SEP_TOKENS_TOKENIZERS_SET": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "transformers.data.processors.squad.Pool": {
  "data": {
   "shadows": "multiprocessing.Pool"
  },
  "type": "import"
 },
 "transformers.data.processors.squad.SquadExample": {
  "data": {
   "lineno": 682
  },
  "type": "class"
 },
 "transformers.data.processors.squad.SquadExample.__init__": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "len",
    "min",
    "transformers.data.processors.squad._is_whitespace"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.squad.SquadFeatures": {
  "data": {
   "lineno": 745
  },
  "type": "class"
 },
 "transformers.data.processors.squad.SquadFeatures.__init__": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.squad.SquadProcessor": {
  "data": {
   "lineno": 528
  },
  "type": "class"
 },
 "transformers.data.processors.squad.SquadProcessor._create_examples": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "SquadExample",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.squad.SquadProcessor._get_example_from_tensor_dict": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "SquadExample",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.squad.SquadProcessor.get_dev_examples": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "transformers.data.processors.squad.json",
    "transformers.data.processors.squad.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.squad.SquadProcessor.get_examples_from_dataset": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.squad.SquadProcessor.get_train_examples": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "ValueError",
    "open",
    "transformers.data.processors.squad.json",
    "transformers.data.processors.squad.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.squad.SquadResult": {
  "data": {
   "lineno": 807
  },
  "type": "class"
 },
 "transformers.data.processors.squad.SquadResult.__init__": {
  "data": {
   "lineno": 817
  },
  "type": "function"
 },
 "transformers.data.processors.squad.SquadV1Processor": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "transformers.data.processors.squad.SquadProcessor"
   ]
  },
  "type": "class"
 },
 "transformers.data.processors.squad.SquadV2Processor": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "transformers.data.processors.squad.SquadProcessor"
   ]
  },
  "type": "class"
 },
 "transformers.data.processors.squad.TensorDataset": {
  "data": {
   "shadows": "torch.utils.data.TensorDataset"
  },
  "type": "import"
 },
 "transformers.data.processors.squad._check_is_max_context": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "enumerate",
    "min"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.squad._improve_answer_span": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.squad._is_whitespace": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.squad._new_check_is_max_context": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "enumerate",
    "min"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.squad.cpu_count": {
  "data": {
   "shadows": "multiprocessing.cpu_count"
  },
  "type": "import"
 },
 "transformers.data.processors.squad.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.data.processors.squad.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.data.processors.squad.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.data.processors.squad.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.data.processors.squad.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "transformers.data.processors.squad.squad_convert_example_to_features": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "SquadFeatures",
    "enumerate",
    "len",
    "min",
    "numpy.asarray",
    "numpy.ones_like",
    "numpy.where",
    "range",
    "transformers.data.processors.squad.MULTI_SEP_TOKENS_TOKENIZERS_SET",
    "transformers.data.processors.squad._improve_answer_span",
    "transformers.data.processors.squad._new_check_is_max_context",
    "transformers.data.processors.squad.logger",
    "type",
    "whitespace_tokenize"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.squad.squad_convert_example_to_features_init": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "transformers.data.processors.squad.squad_convert_examples_to_features": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "RuntimeError",
    "functools.partial",
    "is_tf_available",
    "is_torch_available",
    "len",
    "list",
    "min",
    "multiprocessing.Pool",
    "multiprocessing.cpu_count",
    "tensorflow.TensorShape",
    "tensorflow.data.Dataset.from_generator",
    "tensorflow.int32",
    "tensorflow.int64",
    "tensorflow.string",
    "torch.utils.data.TensorDataset",
    "tqdm.tqdm",
    "transformers.data.processors.squad.squad_convert_example_to_features",
    "transformers.data.processors.squad.squad_convert_example_to_features_init",
    "transformers.data.processors.squad.torch"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.squad.squad_convert_examples_to_features.gen": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.squad.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.data.processors.squad.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.data.processors.squad.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "transformers.data.processors.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.data.processors.utils.DataProcessor": {
  "data": {
   "lineno": 81
  },
  "type": "class"
 },
 "transformers.data.processors.utils.DataProcessor._read_tsv": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "classmethod",
    "list",
    "open",
    "transformers.data.processors.utils.csv"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.get_dev_examples": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.get_example_from_tensor_dict": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.get_labels": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.get_test_examples": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.get_train_examples": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.DataProcessor.tfds_map": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.InputExample": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "transformers.data.processors.utils.InputExample.to_json_string": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "transformers.data.processors.utils.dataclasses",
    "transformers.data.processors.utils.json"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.InputFeatures": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "float",
    "int",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "transformers.data.processors.utils.InputFeatures.to_json_string": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "transformers.data.processors.utils.dataclasses",
    "transformers.data.processors.utils.json"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.data.processors.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "transformers.data.processors.utils.DataProcessor"
   ]
  },
  "type": "class"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.__getitem__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "isinstance",
    "slice",
    "transformers.data.processors.utils.SingleSentenceClassificationProcessor"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.__init__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.__len__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.add_examples": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "set",
    "transformers.data.processors.utils.InputExample",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.add_examples_from_csv": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.create_from_csv": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.create_from_examples": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.get_features": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "enumerate",
    "float",
    "is_tf_available",
    "is_torch_available",
    "len",
    "max",
    "min",
    "str",
    "tensorflow.TensorShape",
    "tensorflow.data.Dataset.from_generator",
    "tensorflow.int32",
    "tensorflow.int64",
    "torch.utils.data.TensorDataset",
    "transformers.data.processors.utils.InputFeatures",
    "transformers.data.processors.utils.logger",
    "transformers.data.processors.utils.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.utils.SingleSentenceClassificationProcessor.get_features.gen": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "transformers.data.processors.utils.TensorDataset": {
  "data": {
   "shadows": "torch.utils.data.TensorDataset"
  },
  "type": "import"
 },
 "transformers.data.processors.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.data.processors.utils.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "transformers.data.processors.utils.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.data.processors.utils.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "transformers.data.processors.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.data.processors.utils.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.data.processors.utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.data.processors.utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.data.processors.xnli": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.data.processors.xnli.XnliProcessor"
   ]
  },
  "type": "module"
 },
 "transformers.data.processors.xnli.XnliProcessor": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "transformers.data.processors.xnli.XnliProcessor.__init__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "transformers.data.processors.xnli.XnliProcessor.get_labels": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "transformers.data.processors.xnli.XnliProcessor.get_test_examples": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "InputExample",
    "enumerate",
    "isinstance",
    "str",
    "transformers.data.processors.xnli.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.xnli.XnliProcessor.get_train_examples": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "InputExample",
    "enumerate",
    "isinstance",
    "str",
    "transformers.data.processors.xnli.os"
   ]
  },
  "type": "function"
 },
 "transformers.data.processors.xnli.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.data.processors.xnli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.data.processors.xnli.xnli_output_modes": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "transformers.data.processors.xnli.xnli_processors": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "transformers.data.processors.xnli.xnli_tasks_num_labels": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "transformers.data.test_generation_utils": {
  "data": {
   "symbols_in_volume": [
    "transformers.is_torch_available"
   ]
  },
  "type": "module"
 },
 "transformers.data.test_generation_utils.GenerationUtilsTest": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "transformers.data.test_generation_utils.unittest",
    "transformers.testing_utils.require_torch"
   ]
  },
  "type": "class"
 },
 "transformers.data.test_generation_utils.GenerationUtilsTest.config": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "transformers.MarianConfig.from_pretrained",
    "transformers.file_utils.cached_property"
   ]
  },
  "type": "function"
 },
 "transformers.data.test_generation_utils.GenerationUtilsTest.model": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "transformers.MarianMTModel",
    "transformers.file_utils.cached_property"
   ]
  },
  "type": "function"
 },
 "transformers.data.test_generation_utils.GenerationUtilsTest.test_postprocess_next_token_scores": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "transformers.data.test_generation_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.data.test_generation_utils.GenerationUtilsTest.test_postprocess_next_token_scores_large_bad_words_list": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "range",
    "transformers.data.test_generation_utils.random",
    "transformers.data.test_generation_utils.timeout_decorator",
    "transformers.data.test_generation_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.data.test_generation_utils.MarianConfig": {
  "data": {
   "shadows": "transformers.MarianConfig"
  },
  "type": "import"
 },
 "transformers.data.test_generation_utils.MarianMTModel": {
  "data": {
   "shadows": "transformers.MarianMTModel"
  },
  "type": "import"
 },
 "transformers.data.test_generation_utils.cached_property": {
  "data": {
   "shadows": "transformers.file_utils.cached_property"
  },
  "type": "import"
 },
 "transformers.data.test_generation_utils.is_torch_available": {
  "data": {
   "shadows": "transformers.is_torch_available"
  },
  "type": "import"
 },
 "transformers.data.test_generation_utils.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "transformers.data.test_generation_utils.require_torch": {
  "data": {
   "shadows": "transformers.testing_utils.require_torch"
  },
  "type": "import"
 },
 "transformers.data.test_generation_utils.timeout_decorator": {
  "data": {
   "shadows": "timeout_decorator"
  },
  "type": "import"
 },
 "transformers.data.test_generation_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.data.test_generation_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "transformers.file_utils": {
  "data": {
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "ImportError",
    "KeyError",
    "__name__",
    "hasattr",
    "int",
    "tensorflow",
    "tensorflow.__version__",
    "torch.hub._get_torch_home",
    "transformers.file_utils.ENV_VARS_TRUE_AND_AUTO_VALUES",
    "transformers.file_utils.ENV_VARS_TRUE_VALUES",
    "transformers.file_utils.PYTORCH_PRETRAINED_BERT_CACHE",
    "transformers.file_utils.PYTORCH_TRANSFORMERS_CACHE",
    "transformers.file_utils.SENTENCEPIECE_UNDERLINE",
    "transformers.file_utils.USE_JAX",
    "transformers.file_utils.USE_TF",
    "transformers.file_utils.USE_TORCH",
    "transformers.file_utils._datasets_available",
    "transformers.file_utils._torch_available",
    "transformers.file_utils.datasets",
    "transformers.file_utils.default_cache_path",
    "transformers.file_utils.faiss",
    "transformers.file_utils.flax",
    "transformers.file_utils.get_ipython",
    "transformers.file_utils.jax",
    "transformers.file_utils.logger",
    "transformers.file_utils.os",
    "transformers.file_utils.sys",
    "transformers.file_utils.torch",
    "transformers.file_utils.torch_cache_home"
   ]
  },
  "type": "module"
 },
 "transformers.file_utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.file_utils.BinaryIO": {
  "data": {
   "shadows": "typing.BinaryIO"
  },
  "type": "import"
 },
 "transformers.file_utils.CLOUDFRONT_DISTRIB_PREFIX": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "transformers.file_utils.CONFIG_NAME": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "transformers.file_utils.DATASETS_IMPORT_ERROR": {
  "data": {
   "lineno": 295
  },
  "type": "constant"
 },
 "transformers.file_utils.DUMMY_INPUTS": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "transformers.file_utils.DUMMY_MASK": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "transformers.file_utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.file_utils.ENV_VARS_TRUE_AND_AUTO_VALUES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.file_utils.ENV_VARS_TRUE_VALUES": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.file_utils.FAISS_IMPORT_ERROR": {
  "data": {
   "lineno": 334
  },
  "type": "constant"
 },
 "transformers.file_utils.FLAX_IMPORT_ERROR": {
  "data": {
   "lineno": 369
  },
  "type": "constant"
 },
 "transformers.file_utils.FileLock": {
  "data": {
   "shadows": "filelock.FileLock"
  },
  "type": "import"
 },
 "transformers.file_utils.HUGGINGFACE_CO_PREFIX": {
  "data": {
   "lineno": 221
  },
  "type": "constant"
 },
 "transformers.file_utils.IPython": {
  "data": {
   "shadows": "IPython"
  },
  "type": "import"
 },
 "transformers.file_utils.MODEL_CARD_NAME": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "transformers.file_utils.MULTIPLE_CHOICE_DUMMY_INPUTS": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "transformers.file_utils.ModelOutput": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "transformers.file_utils.ModelOutput.__delitem__": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.__getitem__": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.__post_init__": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "dataclasses.fields",
    "getattr",
    "isinstance",
    "iter",
    "len",
    "list",
    "setattr",
    "str",
    "transformers.file_utils.is_tensor",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.__setattr__": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.__setitem__": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.pop": {
  "data": {
   "lineno": 1297,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.setdefault": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.to_tuple": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "tuple",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.ModelOutput.update": {
  "data": {
   "lineno": 1300,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.file_utils.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "transformers.file_utils.PRESET_MIRROR_DICT": {
  "data": {
   "lineno": 223
  },
  "type": "constant"
 },
 "transformers.file_utils.PT_BASE_MODEL_SAMPLE": {
  "data": {
   "lineno": 598
  },
  "type": "constant"
 },
 "transformers.file_utils.PT_CAUSAL_LM_SAMPLE": {
  "data": {
   "lineno": 635
  },
  "type": "constant"
 },
 "transformers.file_utils.PT_MASKED_LM_SAMPLE": {
  "data": {
   "lineno": 581
  },
  "type": "constant"
 },
 "transformers.file_utils.PT_MULTIPLE_CHOICE_SAMPLE": {
  "data": {
   "lineno": 613
  },
  "type": "constant"
 },
 "transformers.file_utils.PT_QUESTION_ANSWERING_SAMPLE": {
  "data": {
   "lineno": 545
  },
  "type": "constant"
 },
 "transformers.file_utils.PT_RETURN_INTRODUCTION": {
  "data": {
   "lineno": 456
  },
  "type": "constant"
 },
 "transformers.file_utils.PT_SEQUENCE_CLASSIFICATION_SAMPLE": {
  "data": {
   "lineno": 565
  },
  "type": "constant"
 },
 "transformers.file_utils.PT_TOKEN_CLASSIFICATION_SAMPLE": {
  "data": {
   "lineno": 528
  },
  "type": "constant"
 },
 "transformers.file_utils.PYTORCH_IMPORT_ERROR": {
  "data": {
   "lineno": 342
  },
  "type": "constant"
 },
 "transformers.file_utils.PYTORCH_PRETRAINED_BERT_CACHE": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "transformers.file_utils.PYTORCH_TRANSFORMERS_CACHE": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "transformers.file_utils.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "transformers.file_utils.S3_BUCKET_PREFIX": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "transformers.file_utils.SENTENCEPIECE_IMPORT_ERROR": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "transformers.file_utils.SENTENCEPIECE_UNDERLINE": {
  "data": {
   "lineno": 210
  },
  "type": "constant"
 },
 "transformers.file_utils.SKLEARN_IMPORT_ERROR": {
  "data": {
   "lineno": 349
  },
  "type": "constant"
 },
 "transformers.file_utils.SPIECE_UNDERLINE": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "transformers.file_utils.TENSORFLOW_IMPORT_ERROR": {
  "data": {
   "lineno": 362
  },
  "type": "constant"
 },
 "transformers.file_utils.TF2_WEIGHTS_NAME": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "transformers.file_utils.TF_BASE_MODEL_SAMPLE": {
  "data": {
   "lineno": 721
  },
  "type": "constant"
 },
 "transformers.file_utils.TF_CAUSAL_LM_SAMPLE": {
  "data": {
   "lineno": 757
  },
  "type": "constant"
 },
 "transformers.file_utils.TF_MASKED_LM_SAMPLE": {
  "data": {
   "lineno": 704
  },
  "type": "constant"
 },
 "transformers.file_utils.TF_MULTIPLE_CHOICE_SAMPLE": {
  "data": {
   "lineno": 736
  },
  "type": "constant"
 },
 "transformers.file_utils.TF_QUESTION_ANSWERING_SAMPLE": {
  "data": {
   "lineno": 668
  },
  "type": "constant"
 },
 "transformers.file_utils.TF_RETURN_INTRODUCTION": {
  "data": {
   "lineno": 465
  },
  "type": "constant"
 },
 "transformers.file_utils.TF_SEQUENCE_CLASSIFICATION_SAMPLE": {
  "data": {
   "lineno": 687
  },
  "type": "constant"
 },
 "transformers.file_utils.TF_TOKEN_CLASSIFICATION_SAMPLE": {
  "data": {
   "lineno": 650
  },
  "type": "constant"
 },
 "transformers.file_utils.TF_WEIGHTS_NAME": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "transformers.file_utils.TOKENIZERS_IMPORT_ERROR": {
  "data": {
   "lineno": 313
  },
  "type": "constant"
 },
 "transformers.file_utils.TRANSFORMERS_CACHE": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "transformers.file_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.file_utils.USE_JAX": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "transformers.file_utils.USE_TF": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.file_utils.USE_TORCH": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "transformers.file_utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.file_utils.WEIGHTS_NAME": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "transformers.file_utils.ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "transformers.file_utils._convert_output_args_doc": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "len",
    "range",
    "transformers.file_utils._get_indent",
    "transformers.file_utils.re"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils._datasets_available": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "transformers.file_utils._faiss_available": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "transformers.file_utils._flax_available": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "transformers.file_utils._get_indent": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "transformers.file_utils.re"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils._get_torch_home": {
  "data": {
   "shadows": "torch.hub._get_torch_home"
  },
  "type": "import"
 },
 "transformers.file_utils._has_apex": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "transformers.file_utils._has_sklearn": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "transformers.file_utils._in_notebook": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "transformers.file_utils._prepare_output_docstrings": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "len",
    "transformers.file_utils.PT_RETURN_INTRODUCTION",
    "transformers.file_utils.TF_RETURN_INTRODUCTION",
    "transformers.file_utils._convert_output_args_doc",
    "transformers.file_utils.re"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils._psutil_available": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "transformers.file_utils._py3nvml_available": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "transformers.file_utils._sentencepiece_available": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "transformers.file_utils._tf_available": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "transformers.file_utils._tokenizers_available": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "transformers.file_utils._torch_available": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "transformers.file_utils._torch_tpu_available": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "transformers.file_utils.add_code_sample_docstrings": {
  "data": {
   "lineno": 772
  },
  "type": "function"
 },
 "transformers.file_utils.add_code_sample_docstrings.docstring_decorator": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "fn",
    "fn.__doc__",
    "fn.__qualname__.split",
    "transformers.file_utils.PT_BASE_MODEL_SAMPLE",
    "transformers.file_utils.PT_CAUSAL_LM_SAMPLE",
    "transformers.file_utils.PT_MASKED_LM_SAMPLE",
    "transformers.file_utils.PT_MULTIPLE_CHOICE_SAMPLE",
    "transformers.file_utils.PT_QUESTION_ANSWERING_SAMPLE",
    "transformers.file_utils.PT_SEQUENCE_CLASSIFICATION_SAMPLE",
    "transformers.file_utils.PT_TOKEN_CLASSIFICATION_SAMPLE",
    "transformers.file_utils.TF_BASE_MODEL_SAMPLE",
    "transformers.file_utils.TF_CAUSAL_LM_SAMPLE",
    "transformers.file_utils.TF_MASKED_LM_SAMPLE",
    "transformers.file_utils.TF_MULTIPLE_CHOICE_SAMPLE",
    "transformers.file_utils.TF_QUESTION_ANSWERING_SAMPLE",
    "transformers.file_utils.TF_SEQUENCE_CLASSIFICATION_SAMPLE",
    "transformers.file_utils.TF_TOKEN_CLASSIFICATION_SAMPLE",
    "transformers.file_utils._prepare_output_docstrings"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.add_end_docstrings": {
  "data": {
   "lineno": 448
  },
  "type": "function"
 },
 "transformers.file_utils.add_end_docstrings.docstring_decorator": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "fn",
    "fn.__doc__"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.add_start_docstrings": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "transformers.file_utils.add_start_docstrings.docstring_decorator": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "fn",
    "fn.__doc__"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.add_start_docstrings_to_model_forward": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "transformers.file_utils.add_start_docstrings_to_model_forward.docstring_decorator": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "fn",
    "fn.__doc__",
    "fn.__qualname__.split"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.amp": {
  "data": {
   "shadows": "apex.amp"
  },
  "type": "import"
 },
 "transformers.file_utils.cached_path": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "EnvironmentError",
    "ValueError",
    "filelock.FileLock",
    "get_from_cache",
    "isinstance",
    "pathlib.Path",
    "str",
    "transformers.file_utils.TRANSFORMERS_CACHE",
    "transformers.file_utils.is_remote_url",
    "transformers.file_utils.os",
    "transformers.file_utils.shutil",
    "transformers.file_utils.tarfile",
    "typing.Dict",
    "typing.Optional",
    "typing.Union",
    "urllib.parse.urlparse",
    "zipfile.ZipFile",
    "zipfile.is_zipfile"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.cached_property": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "class"
 },
 "transformers.file_utils.cached_property.__get__": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "transformers.file_utils.datasets": {
  "data": {
   "shadows": "datasets"
  },
  "type": "import"
 },
 "transformers.file_utils.default_cache_path": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "transformers.file_utils.faiss": {
  "data": {
   "shadows": "faiss"
  },
  "type": "import"
 },
 "transformers.file_utils.fields": {
  "data": {
   "shadows": "dataclasses.fields"
  },
  "type": "import"
 },
 "transformers.file_utils.filename_to_url": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "EnvironmentError",
    "isinstance",
    "open",
    "pathlib.Path",
    "str",
    "transformers.file_utils.TRANSFORMERS_CACHE",
    "transformers.file_utils.json",
    "transformers.file_utils.os"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.flax": {
  "data": {
   "shadows": "flax"
  },
  "type": "import"
 },
 "transformers.file_utils.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "transformers.file_utils.get_from_cache": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "OSError",
    "ValueError",
    "filelock.FileLock",
    "functools.partial",
    "isinstance",
    "len",
    "open",
    "pathlib.Path",
    "str",
    "temp_file_manager",
    "transformers.file_utils.TRANSFORMERS_CACHE",
    "transformers.file_utils.fnmatch",
    "transformers.file_utils.http_get",
    "transformers.file_utils.http_user_agent",
    "transformers.file_utils.json",
    "transformers.file_utils.logger",
    "transformers.file_utils.os",
    "transformers.file_utils.requests",
    "transformers.file_utils.tempfile",
    "transformers.file_utils.url_to_filename",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.get_from_cache._resumable_file_manager": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "open"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.get_ipython": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "transformers.file_utils.hf_bucket_url": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "str",
    "transformers.file_utils.HUGGINGFACE_CO_PREFIX",
    "transformers.file_utils.PRESET_MIRROR_DICT",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.http_get": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "str",
    "tqdm.auto.tqdm",
    "transformers.file_utils.http_user_agent",
    "transformers.file_utils.requests",
    "typing.BinaryIO",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.http_user_agent": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "str",
    "tensorflow.__version__",
    "transformers.file_utils.is_tf_available",
    "transformers.file_utils.is_torch_available",
    "transformers.file_utils.sys",
    "transformers.file_utils.torch",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "transformers.file_utils.is_apex_available": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "transformers.file_utils._has_apex"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_datasets_available": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "transformers.file_utils._datasets_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_faiss_available": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "transformers.file_utils._faiss_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_flax_available": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "transformers.file_utils._flax_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_in_notebook": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "transformers.file_utils._in_notebook"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_psutil_available": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "transformers.file_utils._psutil_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_py3nvml_available": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "transformers.file_utils._py3nvml_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_remote_url": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_sentencepiece_available": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "transformers.file_utils._sentencepiece_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_sklearn_available": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "transformers.file_utils._has_sklearn"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_tensor": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "tensorflow.Tensor",
    "transformers.file_utils.is_tf_available",
    "transformers.file_utils.is_torch_available",
    "transformers.file_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_tf_available": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "transformers.file_utils._tf_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_tokenizers_available": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "transformers.file_utils._tokenizers_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_torch_available": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "transformers.file_utils._torch_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_torch_tpu_available": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "transformers.file_utils._torch_tpu_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.is_zipfile": {
  "data": {
   "shadows": "zipfile.is_zipfile"
  },
  "type": "import"
 },
 "transformers.file_utils.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "transformers.file_utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.file_utils.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.file_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.file_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.file_utils.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "transformers.file_utils.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "transformers.file_utils.py3nvml": {
  "data": {
   "shadows": "py3nvml"
  },
  "type": "import"
 },
 "transformers.file_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.file_utils.replace_return_docstrings": {
  "data": {
   "lineno": 806
  },
  "type": "function"
 },
 "transformers.file_utils.replace_return_docstrings.docstring_decorator": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "ValueError",
    "fn",
    "fn.__doc__",
    "len",
    "transformers.file_utils._prepare_output_docstrings",
    "transformers.file_utils.re"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "transformers.file_utils.requires_datasets": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "transformers.file_utils.DATASETS_IMPORT_ERROR",
    "transformers.file_utils.is_datasets_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.requires_faiss": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "transformers.file_utils.FAISS_IMPORT_ERROR",
    "transformers.file_utils.is_faiss_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.requires_flax": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "transformers.file_utils.FLAX_IMPORT_ERROR",
    "transformers.file_utils.is_flax_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.requires_pytorch": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "transformers.file_utils.PYTORCH_IMPORT_ERROR",
    "transformers.file_utils.is_torch_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.requires_sentencepiece": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "transformers.file_utils.SENTENCEPIECE_IMPORT_ERROR",
    "transformers.file_utils.is_sentencepiece_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.requires_sklearn": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "transformers.file_utils.SKLEARN_IMPORT_ERROR",
    "transformers.file_utils.is_sklearn_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.requires_tf": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "transformers.file_utils.TENSORFLOW_IMPORT_ERROR",
    "transformers.file_utils.is_tf_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.requires_tokenizers": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "transformers.file_utils.TOKENIZERS_IMPORT_ERROR",
    "transformers.file_utils.is_tokenizers_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "transformers.file_utils.sentencepiece": {
  "data": {
   "shadows": "sentencepiece"
  },
  "type": "import"
 },
 "transformers.file_utils.sha256": {
  "data": {
   "shadows": "hashlib.sha256"
  },
  "type": "import"
 },
 "transformers.file_utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "transformers.file_utils.sklearn.metrics": {
  "data": {
   "shadows": "sklearn.metrics"
  },
  "type": "import"
 },
 "transformers.file_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.file_utils.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "transformers.file_utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "transformers.file_utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.file_utils.tf_required": {
  "data": {
   "lineno": 1213
  },
  "type": "function"
 },
 "transformers.file_utils.tf_required.wrapper": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "ImportError",
    "func",
    "func.__name__",
    "functools.wraps",
    "transformers.file_utils.is_tf_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.tokenizers": {
  "data": {
   "shadows": "tokenizers"
  },
  "type": "import"
 },
 "transformers.file_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.file_utils.torch_cache_home": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "transformers.file_utils.torch_only_method": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "transformers.file_utils.torch_only_method.wrapper": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ImportError",
    "fn",
    "transformers.file_utils._torch_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.torch_required": {
  "data": {
   "lineno": 1201
  },
  "type": "function"
 },
 "transformers.file_utils.torch_required.wrapper": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "ImportError",
    "func",
    "func.__name__",
    "functools.wraps",
    "transformers.file_utils.is_torch_available"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.tqdm": {
  "data": {
   "shadows": "tqdm.auto.tqdm"
  },
  "type": "import"
 },
 "transformers.file_utils.url_to_filename": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "hashlib.sha256",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.file_utils.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "transformers.file_utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "transformers.file_utils.xm": {
  "data": {
   "shadows": "torch_xla.core.xla_model"
  },
  "type": "import"
 },
 "transformers.generation_beam_search": {
  "data": {},
  "type": "module"
 },
 "transformers.generation_beam_search.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "transformers.generation_beam_search.BeamHypotheses": {
  "data": {
   "lineno": 312
  },
  "type": "class"
 },
 "transformers.generation_beam_search.BeamHypotheses.__init__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "bool",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.generation_beam_search.BeamHypotheses.__len__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.generation_beam_search.BeamHypotheses.add": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "min",
    "sorted",
    "transformers.generation_beam_search.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_beam_search.BeamHypotheses.is_done": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.generation_beam_search.BeamScorer": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "transformers.generation_beam_search.BeamScorer.finalize": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "add_start_docstrings",
    "transformers.generation_beam_search.FINALIZE_INPUTS_DOCSTRING",
    "transformers.generation_beam_search.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_beam_search.BeamScorer.process": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "add_start_docstrings",
    "transformers.generation_beam_search.PROCESS_INPUTS_DOCSTRING",
    "transformers.generation_beam_search.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.generation_beam_search.BeamSearchScorer": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "transformers.generation_beam_search.BeamScorer"
   ]
  },
  "type": "class"
 },
 "transformers.generation_beam_search.BeamSearchScorer.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "BeamHypotheses",
    "ValueError",
    "bool",
    "float",
    "int",
    "isinstance",
    "range",
    "transformers.generation_beam_search.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.generation_beam_search.BeamSearchScorer.finalize": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "min",
    "range",
    "sorted",
    "transformers.generation_beam_search.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.generation_beam_search.BeamSearchScorer.is_done": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.generation_beam_search.BeamSearchScorer.process": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "collections.UserDict",
    "enumerate",
    "int",
    "len",
    "transformers.generation_beam_search.torch",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.generation_beam_search.FINALIZE_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "transformers.generation_beam_search.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.generation_beam_search.PROCESS_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.generation_beam_search.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.generation_beam_search.UserDict": {
  "data": {
   "shadows": "collections.UserDict"
  },
  "type": "import"
 },
 "transformers.generation_beam_search.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "transformers.generation_beam_search.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.generation_logits_process": {
  "data": {},
  "type": "module"
 },
 "transformers.generation_logits_process.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "transformers.generation_logits_process.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.generation_logits_process.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "transformers.generation_logits_process.LOGITS_PROCESSOR_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.generation_logits_process.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.generation_logits_process.LogitsProcessor": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "transformers.generation_logits_process.LogitsProcessor.__call__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "NotImplementedError",
    "add_start_docstrings",
    "transformers.generation_logits_process.LOGITS_PROCESSOR_INPUTS_DOCSTRING",
    "transformers.generation_logits_process.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.LogitsProcessorList": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "transformers.generation_logits_process.LogitsProcessorList.__call__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "add_start_docstrings",
    "processor",
    "transformers.generation_logits_process.LOGITS_PROCESSOR_INPUTS_DOCSTRING",
    "transformers.generation_logits_process.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.LogitsWarper": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "transformers.generation_logits_process.LogitsWarper.__call__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "NotImplementedError",
    "add_start_docstrings",
    "transformers.generation_logits_process.LOGITS_PROCESSOR_INPUTS_DOCSTRING",
    "transformers.generation_logits_process.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.MinLengthLogitsProcessor": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "transformers.generation_logits_process.LogitsProcessor"
   ]
  },
  "type": "class"
 },
 "transformers.generation_logits_process.MinLengthLogitsProcessor.__call__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "float",
    "transformers.generation_logits_process.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.MinLengthLogitsProcessor.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.NoBadWordsLogitsProcessor": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "transformers.generation_logits_process.LogitsProcessor"
   ]
  },
  "type": "class"
 },
 "transformers.generation_logits_process.NoBadWordsLogitsProcessor.__call__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "transformers.generation_logits_process.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.NoBadWordsLogitsProcessor.__init__": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "filter",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.integer",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.NoBadWordsLogitsProcessor._calc_banned_bad_words_ids": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "int",
    "typing.Iterable"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.NoBadWordsLogitsProcessor._set_scores_to_inf_for_banned_tokens": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "int",
    "len",
    "transformers.generation_logits_process.torch",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.NoBadWordsLogitsProcessor._tokens_match": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "transformers.generation_logits_process.torch",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.NoRepeatNGramLogitsProcessor": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "transformers.generation_logits_process.LogitsProcessor"
   ]
  },
  "type": "class"
 },
 "transformers.generation_logits_process.NoRepeatNGramLogitsProcessor.__call__": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "transformers.generation_logits_process.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.NoRepeatNGramLogitsProcessor.__init__": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.NoRepeatNGramLogitsProcessor._calc_banned_ngram_tokens": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "_get_generated_ngrams",
    "int",
    "range",
    "transformers.generation_logits_process.torch",
    "tuple",
    "typing.Iterable",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.NoRepeatNGramLogitsProcessor._calc_banned_ngram_tokens._get_generated_ngrams": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.RepetitionPenaltyLogitsProcessor": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "transformers.generation_logits_process.LogitsProcessor"
   ]
  },
  "type": "class"
 },
 "transformers.generation_logits_process.RepetitionPenaltyLogitsProcessor.__call__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "range",
    "set",
    "transformers.generation_logits_process.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.RepetitionPenaltyLogitsProcessor.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.TemperatureLogitsWarper": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "transformers.generation_logits_process.LogitsWarper"
   ]
  },
  "type": "class"
 },
 "transformers.generation_logits_process.TemperatureLogitsWarper.__call__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "transformers.generation_logits_process.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.TemperatureLogitsWarper.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.TopKLogitsWarper": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "transformers.generation_logits_process.LogitsWarper"
   ]
  },
  "type": "class"
 },
 "transformers.generation_logits_process.TopKLogitsWarper.__call__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "max",
    "min",
    "transformers.generation_logits_process.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.TopKLogitsWarper.__init__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.TopPLogitsWarper": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "transformers.generation_logits_process.LogitsWarper"
   ]
  },
  "type": "class"
 },
 "transformers.generation_logits_process.TopPLogitsWarper.__call__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "torch.nn.functional.softmax",
    "transformers.generation_logits_process.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.TopPLogitsWarper.__init__": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "transformers.generation_logits_process.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.generation_logits_process.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.generation_tf_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.generation_tf_utils.BeamHypotheses": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.generation_tf_utils.BeamHypotheses.__init__": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "self.beams",
    "self.early_stopping",
    "self.length_penalty",
    "self.max_length",
    "self.num_beams",
    "self.worst_score"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.BeamHypotheses.__len__": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "len",
    "self.beams"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.BeamHypotheses.add": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "min",
    "self",
    "self.beams",
    "self.beams.append",
    "self.length_penalty",
    "self.num_beams",
    "self.worst_score",
    "sorted"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.BeamHypotheses.is_done": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "len",
    "self",
    "self.early_stopping",
    "self.length_penalty",
    "self.num_beams",
    "self.worst_score"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.TFGenerationMixin": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "transformers.generation_tf_utils.TFGenerationMixin._generate_beam_search": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "BeamHypotheses",
    "_create_next_token_logits_penalties",
    "all",
    "calc_banned_bad_words_ids",
    "calc_banned_ngram_tokens",
    "enumerate",
    "float",
    "len",
    "min",
    "range",
    "sample_without_replacement",
    "self",
    "self._reorder_cache",
    "self._use_cache",
    "self.adjust_logits_during_generation",
    "self.config.is_encoder_decoder",
    "self.prepare_inputs_for_generation",
    "set_tensor_by_indices_to_value",
    "shape_list",
    "sorted",
    "tensorflow.argsort",
    "tensorflow.bool",
    "tensorflow.broadcast_to",
    "tensorflow.concat",
    "tensorflow.convert_to_tensor",
    "tensorflow.expand_dims",
    "tensorflow.float32",
    "tensorflow.gather",
    "tensorflow.identity",
    "tensorflow.int32",
    "tensorflow.math.multiply",
    "tensorflow.math.top_k",
    "tensorflow.nn.log_softmax",
    "tensorflow.ones",
    "tensorflow.range",
    "tensorflow.reduce_all",
    "tensorflow.reduce_max",
    "tensorflow.reduce_min",
    "tensorflow.reshape",
    "tensorflow.stack",
    "tensorflow.where",
    "tensorflow.zeros",
    "tf_top_k_top_p_filtering",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.TFGenerationMixin._generate_no_beam_search": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "_create_next_token_logits_penalties",
    "calc_banned_bad_words_ids",
    "calc_banned_ngram_tokens",
    "float",
    "range",
    "self",
    "self._use_cache",
    "self.config.is_encoder_decoder",
    "set_tensor_by_indices_to_value",
    "shape_list",
    "tensorflow.bool",
    "tensorflow.broadcast_to",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.convert_to_tensor",
    "tensorflow.expand_dims",
    "tensorflow.int32",
    "tensorflow.math.argmax",
    "tensorflow.math.multiply",
    "tensorflow.math.reduce_max",
    "tensorflow.math.reduce_min",
    "tensorflow.ones",
    "tensorflow.ones_like",
    "tensorflow.random.categorical",
    "tensorflow.range",
    "tensorflow.squeeze",
    "tensorflow.transpose",
    "tensorflow.where",
    "tf_top_k_top_p_filtering"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.TFGenerationMixin._reorder_cache": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.gather",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.TFGenerationMixin._use_cache": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.TFGenerationMixin.adjust_logits_during_generation": {
  "data": {
   "lineno": 897
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.TFGenerationMixin.generate": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "AttributeError",
    "bool",
    "callable",
    "encoder",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.broadcast_to",
    "tensorflow.cast",
    "tensorflow.expand_dims",
    "tensorflow.fill",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.math.not_equal",
    "tensorflow.ones",
    "tensorflow.ones_like",
    "tensorflow.range",
    "tensorflow.repeat",
    "tensorflow.reshape",
    "transformers.generation_tf_utils.logger"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.TFGenerationMixin.prepare_inputs_for_generation": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "transformers.generation_tf_utils._create_next_token_logits_penalties": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "enumerate",
    "numpy.ones",
    "numpy.put",
    "numpy.unique",
    "numpy.zeros",
    "shape_list",
    "tensorflow.convert_to_tensor",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.calc_banned_bad_words_ids": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "_tokens_match",
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.calc_banned_bad_words_ids._tokens_match": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.calc_banned_ngram_tokens": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "_get_generated_ngrams",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.calc_banned_ngram_tokens._get_generated_ngrams": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.generation_tf_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.generation_tf_utils.sample_without_replacement": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.math.log",
    "tensorflow.nn.top_k",
    "tensorflow.random.uniform"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.scatter_values_on_batch_indices": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.broadcast_to",
    "tensorflow.concat",
    "tensorflow.expand_dims",
    "tensorflow.range",
    "tensorflow.reshape",
    "tensorflow.scatter_nd",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.set_tensor_by_indices_to_value": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "tensorflow.where",
    "tensorflow.zeros_like"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.shape_list": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "enumerate",
    "tensorflow.shape"
   ]
  },
  "type": "function"
 },
 "transformers.generation_tf_utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.generation_tf_utils.tf_top_k_top_p_filtering": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "float",
    "max",
    "min",
    "scatter_values_on_batch_indices",
    "set_tensor_by_indices_to_value",
    "shape_list",
    "tensorflow.argsort",
    "tensorflow.concat",
    "tensorflow.gather",
    "tensorflow.math.cumsum",
    "tensorflow.math.top_k",
    "tensorflow.nn.softmax",
    "tensorflow.roll",
    "tensorflow.zeros_like"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.generation_utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.generation_utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.generation_utils.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.generation_utils.GenerationMixin": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "transformers.generation_utils.GenerationMixin._expand_inputs_for_generation": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "bool",
    "int",
    "staticmethod",
    "str",
    "transformers.generation_utils.torch",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin._get_decoder_start_token_id": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin._get_logits_processor": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "LogitsProcessorList",
    "MinLengthLogitsProcessor",
    "NoBadWordsLogitsProcessor",
    "NoRepeatNGramLogitsProcessor",
    "RepetitionPenaltyLogitsProcessor",
    "float",
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin._get_logits_warper": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "LogitsProcessorList",
    "TemperatureLogitsWarper",
    "TopKLogitsWarper",
    "TopPLogitsWarper",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin._get_pad_token_id": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "int",
    "transformers.generation_utils.logger"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin._init_sequence_length_for_generation": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "transformers.generation_utils.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin._prepare_attention_mask_for_generation": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "int",
    "transformers.generation_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin._prepare_decoder_input_ids_for_generation": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "int",
    "transformers.generation_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin._prepare_encoder_decoder_kwargs_for_generation": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "encoder",
    "str",
    "transformers.generation_utils.torch",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin._prepare_input_ids_for_generation": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "transformers.generation_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin._reorder_cache": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.generation_utils.torch",
    "tuple",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin._update_model_kwargs_for_generation": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "bool",
    "staticmethod",
    "str",
    "transformers.generation_utils.torch",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin._update_seq_length_for_generation": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "transformers.generation_utils.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin.adjust_logits_during_generation": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "transformers.generation_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin.beam_sample": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "LogitsProcessorList",
    "int",
    "len",
    "logits_processor",
    "logits_warper",
    "self",
    "self._reorder_cache",
    "self._update_model_kwargs_for_generation",
    "self.adjust_logits_during_generation",
    "self.config.eos_token_id",
    "self.config.is_encoder_decoder",
    "self.config.max_length",
    "self.config.pad_token_id",
    "self.prepare_inputs_for_generation",
    "torch.nn.functional.log_softmax",
    "torch.nn.functional.softmax",
    "transformers.generation_utils.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin.beam_search": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "LogitsProcessorList",
    "int",
    "len",
    "logits_processor",
    "self",
    "self._reorder_cache",
    "self._update_model_kwargs_for_generation",
    "self.adjust_logits_during_generation",
    "self.config.eos_token_id",
    "self.config.is_encoder_decoder",
    "self.config.max_length",
    "self.config.pad_token_id",
    "self.prepare_inputs_for_generation",
    "torch.nn.functional.log_softmax",
    "transformers.generation_utils.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin.generate": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "BeamSearchScorer",
    "ValueError",
    "bool",
    "float",
    "int",
    "isinstance",
    "transformers.generation_utils.logger",
    "transformers.generation_utils.torch",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin.greedy_search": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "LogitsProcessorList",
    "int",
    "logits_processor",
    "self",
    "self._update_model_kwargs_for_generation",
    "self._update_seq_length_for_generation",
    "self.config.is_encoder_decoder",
    "transformers.generation_utils.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin.prepare_inputs_for_generation": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "str",
    "transformers.generation_utils.torch",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.GenerationMixin.sample": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "LogitsProcessorList",
    "int",
    "logits_processor",
    "logits_warper",
    "self",
    "self._init_sequence_length_for_generation",
    "self._update_model_kwargs_for_generation",
    "self._update_seq_length_for_generation",
    "self.config.eos_token_id",
    "self.config.is_encoder_decoder",
    "self.config.max_length",
    "self.config.pad_token_id",
    "self.prepare_inputs_for_generation",
    "torch.nn.functional.softmax",
    "transformers.generation_utils.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "transformers.generation_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.generation_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.generation_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.generation_utils.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.generation_utils.top_k_top_p_filtering": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "TopKLogitsWarper",
    "TopPLogitsWarper",
    "float",
    "int",
    "transformers.generation_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.generation_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.hf_api": {
  "data": {},
  "type": "module"
 },
 "transformers.hf_api.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.hf_api.ENDPOINT": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.hf_api.HfApi": {
  "data": {
   "lineno": 97
  },
  "type": "class"
 },
 "transformers.hf_api.HfApi.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "transformers.hf_api.ENDPOINT"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.HfApi.create_repo": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "str",
    "transformers.hf_api.requests",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.HfApi.delete_obj": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "str",
    "transformers.hf_api.requests",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.HfApi.delete_repo": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "str",
    "transformers.hf_api.requests",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.HfApi.list_objs": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "str",
    "transformers.hf_api.S3Obj",
    "transformers.hf_api.requests",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.HfApi.list_repos_objs": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "str",
    "transformers.hf_api.RepoObj",
    "transformers.hf_api.S3Obj",
    "transformers.hf_api.requests",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.HfApi.login": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "str",
    "transformers.hf_api.requests"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.HfApi.logout": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "str",
    "transformers.hf_api.requests"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.HfApi.model_list": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "transformers.hf_api.ModelInfo",
    "transformers.hf_api.requests",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.HfApi.presign": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "str",
    "transformers.hf_api.PresignedUrl",
    "transformers.hf_api.requests",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.HfApi.presign_and_upload": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "TqdmProgressFileReader",
    "open",
    "str",
    "transformers.hf_api.requests",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.HfApi.whoami": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "str",
    "transformers.hf_api.requests",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.HfFolder": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "os.path.expanduser"
   ]
  },
  "type": "class"
 },
 "transformers.hf_api.HfFolder.delete_token": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "FileNotFoundError",
    "classmethod",
    "transformers.hf_api.os"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.HfFolder.get_token": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "FileNotFoundError",
    "classmethod",
    "open"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.HfFolder.save_token": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "classmethod",
    "open",
    "transformers.hf_api.os"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.hf_api.ModelInfo": {
  "data": {
   "lineno": 72
  },
  "type": "class"
 },
 "transformers.hf_api.ModelInfo.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "int",
    "setattr",
    "str",
    "transformers.hf_api.ModelSibling",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.ModelSibling": {
  "data": {
   "lineno": 61
  },
  "type": "class"
 },
 "transformers.hf_api.ModelSibling.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.hf_api.PresignedUrl": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "transformers.hf_api.PresignedUrl.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.RepoObj": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "transformers.hf_api.RepoObj.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.S3Obj": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "transformers.hf_api.S3Obj.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.TqdmProgressFileReader": {
  "data": {
   "lineno": 255
  },
  "type": "class"
 },
 "transformers.hf_api.TqdmProgressFileReader.__init__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "tqdm.tqdm",
    "transformers.hf_api.io",
    "transformers.hf_api.os"
   ]
  },
  "type": "function"
 },
 "transformers.hf_api.TqdmProgressFileReader._read": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "transformers.hf_api.TqdmProgressFileReader.close": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "transformers.hf_api.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.hf_api.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "transformers.hf_api.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "transformers.hf_api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.hf_api.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "transformers.hf_api.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "transformers.hf_argparser": {
  "data": {
   "symbols_in_volume": [
    "typing.Any",
    "typing.NewType"
   ]
  },
  "type": "module"
 },
 "transformers.hf_argparser.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.hf_argparser.ArgumentParser": {
  "data": {
   "shadows": "argparse.ArgumentParser"
  },
  "type": "import"
 },
 "transformers.hf_argparser.DataClass": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "transformers.hf_argparser.DataClassType": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "transformers.hf_argparser.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "transformers.hf_argparser.HfArgumentParser": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "argparse.ArgumentParser",
    "transformers.hf_argparser.DataClassType",
    "typing.Iterable"
   ]
  },
  "type": "class"
 },
 "transformers.hf_argparser.HfArgumentParser.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "super",
    "transformers.hf_argparser.DataClassType",
    "transformers.hf_argparser.dataclasses",
    "typing.Iterable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.hf_argparser.HfArgumentParser._add_dataclass_arguments": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ImportError",
    "all",
    "bool",
    "enum.Enum",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "issubclass",
    "list",
    "str",
    "transformers.hf_argparser.DataClassType",
    "transformers.hf_argparser.dataclasses",
    "type",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.hf_argparser.HfArgumentParser.parse_args_into_dataclasses": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "delattr",
    "dtype",
    "len",
    "pathlib.Path",
    "transformers.hf_argparser.DataClass",
    "transformers.hf_argparser.dataclasses",
    "transformers.hf_argparser.sys",
    "typing.Tuple",
    "vars"
   ]
  },
  "type": "function"
 },
 "transformers.hf_argparser.HfArgumentParser.parse_dict": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "dict",
    "dtype",
    "transformers.hf_argparser.DataClass",
    "transformers.hf_argparser.dataclasses",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.hf_argparser.HfArgumentParser.parse_json_file": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "dtype",
    "pathlib.Path",
    "str",
    "transformers.hf_argparser.DataClass",
    "transformers.hf_argparser.dataclasses",
    "transformers.hf_argparser.json",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.hf_argparser.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "transformers.hf_argparser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.hf_argparser.NewType": {
  "data": {
   "shadows": "typing.NewType"
  },
  "type": "import"
 },
 "transformers.hf_argparser.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.hf_argparser.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "transformers.hf_argparser.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.hf_argparser.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.hf_argparser.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "transformers.hf_argparser.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.hf_argparser.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.integrations": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "ValueError",
    "__name__",
    "hasattr",
    "transformers.integrations.comet_ml",
    "transformers.integrations.logger",
    "transformers.integrations.os",
    "transformers.integrations.wandb"
   ]
  },
  "type": "module"
 },
 "transformers.integrations.ASHAScheduler": {
  "data": {
   "shadows": "ray.tune.schedulers.ASHAScheduler"
  },
  "type": "import"
 },
 "transformers.integrations.AzureMLCallback": {
  "data": {
   "lineno": 440
  },
  "type": "class"
 },
 "transformers.integrations.AzureMLCallback.__init__": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "transformers.integrations._has_azureml"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.AzureMLCallback.on_init_end": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "azureml.core.run.Run.get_context"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.AzureMLCallback.on_log": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.CLIReporter": {
  "data": {
   "shadows": "ray.tune.CLIReporter"
  },
  "type": "import"
 },
 "transformers.integrations.CometCallback": {
  "data": {
   "lineno": 385
  },
  "type": "class"
 },
 "transformers.integrations.CometCallback.__init__": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "transformers.integrations._has_comet"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.CometCallback.on_log": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "transformers.integrations.comet_ml"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.CometCallback.on_train_begin": {
  "data": {
   "lineno": 427
  },
  "type": "function"
 },
 "transformers.integrations.CometCallback.setup": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "hasattr",
    "transformers.integrations.comet_ml",
    "transformers.integrations.logger",
    "transformers.integrations.os"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.HyperBandForBOHB": {
  "data": {
   "shadows": "ray.tune.schedulers.HyperBandForBOHB"
  },
  "type": "import"
 },
 "transformers.integrations.MLflowCallback": {
  "data": {
   "lineno": 461
  },
  "type": "class"
 },
 "transformers.integrations.MLflowCallback.__del__": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "transformers.integrations.mlflow"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.MLflowCallback.__init__": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "transformers.integrations._has_mlflow"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.MLflowCallback.on_log": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "transformers.integrations.logger",
    "transformers.integrations.mlflow",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.MLflowCallback.on_train_begin": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "transformers.integrations.MLflowCallback.on_train_end": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "transformers.integrations.logger",
    "transformers.integrations.mlflow"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.MLflowCallback.setup": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "dict",
    "hasattr",
    "len",
    "list",
    "range",
    "transformers.integrations.MLflowCallback",
    "transformers.integrations.mlflow",
    "transformers.integrations.os"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.MedianStoppingRule": {
  "data": {
   "shadows": "ray.tune.schedulers.MedianStoppingRule"
  },
  "type": "import"
 },
 "transformers.integrations.PopulationBasedTraining": {
  "data": {
   "shadows": "ray.tune.schedulers.PopulationBasedTraining"
  },
  "type": "import"
 },
 "transformers.integrations.Run": {
  "data": {
   "shadows": "azureml.core.run.Run"
  },
  "type": "import"
 },
 "transformers.integrations.SummaryWriter": {
  "data": {
   "shadows": "tensorboardX.SummaryWriter"
  },
  "type": "import"
 },
 "transformers.integrations.TensorBoardCallback": {
  "data": {
   "lineno": 245
  },
  "type": "class"
 },
 "transformers.integrations.TensorBoardCallback.__init__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "transformers.integrations._has_tensorboard"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.TensorBoardCallback._init_summary_writer": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "tensorboardX.SummaryWriter"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.TensorBoardCallback.on_log": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "transformers.integrations.logger",
    "transformers.integrations.rewrite_logs",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.TensorBoardCallback.on_train_begin": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "hasattr",
    "transformers.integrations.os"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.TensorBoardCallback.on_train_end": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "transformers.integrations.WandbCallback": {
  "data": {
   "lineno": 316
  },
  "type": "class"
 },
 "transformers.integrations.WandbCallback.__init__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "transformers.integrations._has_wandb"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.WandbCallback.on_log": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "transformers.integrations.rewrite_logs",
    "transformers.integrations.wandb"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.WandbCallback.on_train_begin": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.WandbCallback.setup": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "hasattr",
    "is_torch_tpu_available",
    "max",
    "transformers.integrations.logger",
    "transformers.integrations.os",
    "transformers.integrations.wandb"
   ]
  },
  "type": "function"
 },
 "transformers.integrations._has_azureml": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "transformers.integrations._has_comet": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.integrations._has_mlflow": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "transformers.integrations._has_optuna": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.integrations._has_ray": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.integrations._has_tensorboard": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "transformers.integrations._has_wandb": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.integrations.comet_ml": {
  "data": {
   "shadows": "comet_ml"
  },
  "type": "import"
 },
 "transformers.integrations.default_hp_search_backend": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "transformers.integrations.is_optuna_available",
    "transformers.integrations.is_ray_available"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.hp_params": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "isinstance",
    "transformers.integrations.is_optuna_available",
    "transformers.integrations.is_ray_available",
    "transformers.integrations.optuna"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.is_azureml_available": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "transformers.integrations._has_azureml"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.is_comet_available": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "transformers.integrations._has_comet"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.is_mlflow_available": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "transformers.integrations._has_mlflow"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.is_optuna_available": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "transformers.integrations._has_optuna"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.is_ray_available": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "transformers.integrations._has_ray"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.is_tensorboard_available": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "transformers.integrations._has_tensorboard"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.is_wandb_available": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "transformers.integrations._has_wandb"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.logger": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "transformers.integrations.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.integrations.mlflow": {
  "data": {
   "shadows": "mlflow"
  },
  "type": "import"
 },
 "transformers.integrations.optuna": {
  "data": {
   "shadows": "optuna"
  },
  "type": "import"
 },
 "transformers.integrations.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.integrations.ray": {
  "data": {
   "shadows": "ray"
  },
  "type": "import"
 },
 "transformers.integrations.rewrite_logs": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.run_hp_search_optuna": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "BestRun",
    "int",
    "str",
    "transformers.integrations.optuna"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.run_hp_search_optuna._objective": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "getattr",
    "transformers.integrations.os"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.run_hp_search_ray": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "BestRun",
    "RuntimeError",
    "int",
    "isinstance",
    "ray.tune.CLIReporter",
    "ray.tune.schedulers.ASHAScheduler",
    "ray.tune.schedulers.HyperBandForBOHB",
    "ray.tune.schedulers.MedianStoppingRule",
    "ray.tune.schedulers.PopulationBasedTraining",
    "str",
    "transformers.integrations.logger",
    "transformers.integrations.math",
    "transformers.integrations.ray",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.run_hp_search_ray._objective": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "getattr",
    "transformers.integrations.os",
    "transformers.integrations.ray"
   ]
  },
  "type": "function"
 },
 "transformers.integrations.wandb": {
  "data": {
   "shadows": "wandb"
  },
  "type": "import"
 },
 "transformers.logger": {
  "data": {
   "lineno": 273
  },
  "type": "constant"
 },
 "transformers.modelcard": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modelcard.ModelCard": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "transformers.modelcard.ModelCard.__eq__": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "transformers.modelcard.ModelCard.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "AttributeError",
    "setattr",
    "transformers.modelcard.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modelcard.ModelCard.__repr__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.modelcard.ModelCard.from_dict": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "transformers.modelcard.ModelCard.from_json_file": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "open",
    "transformers.modelcard.json"
   ]
  },
  "type": "function"
 },
 "transformers.modelcard.ModelCard.from_pretrained": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "EnvironmentError",
    "cached_path",
    "classmethod",
    "cls",
    "hasattr",
    "hf_bucket_url",
    "is_remote_url",
    "setattr",
    "str",
    "transformers.modelcard.json",
    "transformers.modelcard.logger",
    "transformers.modelcard.os"
   ]
  },
  "type": "function"
 },
 "transformers.modelcard.ModelCard.save_pretrained": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "transformers.modelcard.logger",
    "transformers.modelcard.os"
   ]
  },
  "type": "function"
 },
 "transformers.modelcard.ModelCard.to_dict": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "transformers.modelcard.copy"
   ]
  },
  "type": "function"
 },
 "transformers.modelcard.ModelCard.to_json_file": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "transformers.modelcard.ModelCard.to_json_string": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "transformers.modelcard.json"
   ]
  },
  "type": "function"
 },
 "transformers.modelcard.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.modelcard.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modelcard.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.modelcard.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_albert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_albert.ALBERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 529
  },
  "type": "constant"
 },
 "transformers.modeling_albert.ALBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.modeling_albert.ALBERT_START_DOCSTRING": {
  "data": {
   "lineno": 512
  },
  "type": "constant"
 },
 "transformers.modeling_albert.AlbertAttention": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertAttention.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "set",
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertAttention.forward": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "torch.nn.Softmax",
    "transformers.modeling_albert.math",
    "transformers.modeling_albert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertAttention.prune_heads": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "find_pruneable_heads_and_indices",
    "len",
    "prune_linear_layer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertAttention.transpose_for_scores": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertEmbeddings": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertEmbeddings.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "transformers.modeling_albert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertEmbeddings.forward": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "transformers.modeling_albert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForMaskedLM": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_albert.ALBERT_START_DOCSTRING",
    "transformers.modeling_albert.AlbertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertForMaskedLM.__init__": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_albert.AlbertMLMHead",
    "transformers.modeling_albert.AlbertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForMaskedLM.forward": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "FutureWarning",
    "MaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "list",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_albert.ALBERT_INPUTS_DOCSTRING",
    "transformers.modeling_albert._CONFIG_FOR_DOC",
    "transformers.modeling_albert._TOKENIZER_FOR_DOC",
    "transformers.modeling_albert.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForMaskedLM.get_input_embeddings": {
  "data": {
   "lineno": 879
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 876
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForMultipleChoice": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_albert.ALBERT_START_DOCSTRING",
    "transformers.modeling_albert.AlbertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertForMultipleChoice.__init__": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_albert.AlbertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForMultipleChoice.forward": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "MultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_albert.ALBERT_INPUTS_DOCSTRING",
    "transformers.modeling_albert._CONFIG_FOR_DOC",
    "transformers.modeling_albert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForPreTraining": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_albert.ALBERT_START_DOCSTRING",
    "transformers.modeling_albert.AlbertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertForPreTraining.__init__": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "AlbertMLMHead",
    "AlbertSOPHead",
    "super",
    "transformers.modeling_albert.AlbertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForPreTraining.forward": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "FutureWarning",
    "add_start_docstrings_to_model_forward",
    "list",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_albert.ALBERT_INPUTS_DOCSTRING",
    "transformers.modeling_albert.AlbertForPreTrainingOutput",
    "transformers.modeling_albert._CONFIG_FOR_DOC",
    "transformers.modeling_albert.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForPreTraining.get_input_embeddings": {
  "data": {
   "lineno": 727
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForPreTraining.get_output_embeddings": {
  "data": {
   "lineno": 724
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForPreTrainingOutput": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_albert.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertForQuestionAnswering": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_albert.ALBERT_START_DOCSTRING",
    "transformers.modeling_albert.AlbertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_albert.AlbertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForQuestionAnswering.forward": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "QuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_albert.ALBERT_INPUTS_DOCSTRING",
    "transformers.modeling_albert._CONFIG_FOR_DOC",
    "transformers.modeling_albert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForSequenceClassification": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_albert.ALBERT_START_DOCSTRING",
    "transformers.modeling_albert.AlbertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertForSequenceClassification.__init__": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_albert.AlbertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForSequenceClassification.forward": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "SequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "transformers.modeling_albert.ALBERT_INPUTS_DOCSTRING",
    "transformers.modeling_albert._CONFIG_FOR_DOC",
    "transformers.modeling_albert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForTokenClassification": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_albert.ALBERT_START_DOCSTRING",
    "transformers.modeling_albert.AlbertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertForTokenClassification.__init__": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_albert.AlbertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertForTokenClassification.forward": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "TokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_albert.ALBERT_INPUTS_DOCSTRING",
    "transformers.modeling_albert._CONFIG_FOR_DOC",
    "transformers.modeling_albert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertLayer": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertLayer.__init__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "transformers.modeling_albert.AlbertAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertLayer.ff_chunk": {
  "data": {
   "lineno": 367
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertLayer.forward": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "apply_chunking_to_forward"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertLayerGroup": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertLayerGroup.__init__": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_albert.AlbertLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertLayerGroup.forward": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "albert_layer",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertMLMHead": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertMLMHead.__init__": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "super",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "transformers.modeling_albert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertMLMHead.forward": {
  "data": {
   "lineno": 836
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertModel": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_albert.ALBERT_START_DOCSTRING",
    "transformers.modeling_albert.AlbertPreTrainedModel",
    "transformers.modeling_albert.load_tf_weights_in_albert"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertModel.__init__": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Tanh",
    "transformers.modeling_albert.AlbertEmbeddings",
    "transformers.modeling_albert.AlbertTransformer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertModel._prune_heads": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertModel._resize_token_embeddings": {
  "data": {
   "lineno": 611
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertModel.forward": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "BaseModelOutputWithPooling",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_albert.ALBERT_INPUTS_DOCSTRING",
    "transformers.modeling_albert._CONFIG_FOR_DOC",
    "transformers.modeling_albert._TOKENIZER_FOR_DOC",
    "transformers.modeling_albert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertModel.get_input_embeddings": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertModel.set_input_embeddings": {
  "data": {
   "lineno": 608
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertPreTrainedModel": {
  "data": {
   "lineno": 455
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertPreTrainedModel._init_weights": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertSOPHead": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertSOPHead.__init__": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertSOPHead.forward": {
  "data": {
   "lineno": 854
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertTransformer": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_albert.AlbertTransformer.__init__": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.Linear",
    "torch.nn.ModuleList",
    "transformers.modeling_albert.AlbertLayerGroup"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.AlbertTransformer.forward": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "BaseModelOutput",
    "int",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_albert.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_albert.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_albert.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_albert._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "transformers.modeling_albert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "transformers.modeling_albert.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_albert.load_tf_weights_in_albert": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "ImportError",
    "getattr",
    "int",
    "len",
    "numpy.transpose",
    "print",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.modeling_albert.logger",
    "transformers.modeling_albert.os",
    "transformers.modeling_albert.re",
    "transformers.modeling_albert.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_albert.logger": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "transformers.modeling_albert.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_albert.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_albert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_albert.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_albert.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_albert.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_albert.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_albert.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_auto": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.OrderedDict"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_auto.AUTO_MODEL_PRETRAINED_DOCSTRING": {
  "data": {
   "lineno": 477
  },
  "type": "constant"
 },
 "transformers.modeling_auto.AutoModel": {
  "data": {
   "lineno": 560
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModel.__init__": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModel.from_config": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.MODEL_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModel.from_pretrained": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_auto.MODEL_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForCausalLM": {
  "data": {
   "lineno": 857
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForCausalLM.__init__": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForCausalLM.from_config": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.MODEL_FOR_CAUSAL_LM_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForCausalLM.from_pretrained": {
  "data": {
   "lineno": 908,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_auto.MODEL_FOR_CAUSAL_LM_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForMaskedLM": {
  "data": {
   "lineno": 951
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForMaskedLM.__init__": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForMaskedLM.from_config": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.MODEL_FOR_MASKED_LM_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_auto.MODEL_FOR_MASKED_LM_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForMultipleChoice": {
  "data": {
   "lineno": 1439
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForMultipleChoice.__init__": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForMultipleChoice.from_config": {
  "data": {
   "lineno": 1456,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.MODEL_FOR_MULTIPLE_CHOICE_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_auto.MODEL_FOR_MULTIPLE_CHOICE_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForNextSentencePrediction": {
  "data": {
   "lineno": 1539
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForNextSentencePrediction.__init__": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForNextSentencePrediction.from_config": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.MODEL_FOR_NEXT_SENTENCE_PREDICTION_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForNextSentencePrediction.from_pretrained": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_auto.MODEL_FOR_NEXT_SENTENCE_PREDICTION_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForPreTraining": {
  "data": {
   "lineno": 651
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForPreTraining.__init__": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForPreTraining.from_config": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.MODEL_FOR_PRETRAINING_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForPreTraining.from_pretrained": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_auto.MODEL_FOR_PRETRAINING_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForQuestionAnswering": {
  "data": {
   "lineno": 1241
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForQuestionAnswering.from_config": {
  "data": {
   "lineno": 1258,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.MODEL_FOR_QUESTION_ANSWERING_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_auto.MODEL_FOR_QUESTION_ANSWERING_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForSeq2SeqLM": {
  "data": {
   "lineno": 1045
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForSeq2SeqLM.__init__": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_config": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForSeq2SeqLM.from_pretrained": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_auto.MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForSequenceClassification": {
  "data": {
   "lineno": 1143
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForSequenceClassification.__init__": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForSequenceClassification.from_config": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_auto.MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForTokenClassification": {
  "data": {
   "lineno": 1340
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelForTokenClassification.__init__": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForTokenClassification.from_config": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1393,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_auto.MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelWithLMHead": {
  "data": {
   "lineno": 745
  },
  "type": "class"
 },
 "transformers.modeling_auto.AutoModelWithLMHead.__init__": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelWithLMHead.from_config": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.MODEL_WITH_LM_HEAD_MAPPING",
    "transformers.modeling_auto.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.AutoModelWithLMHead.from_pretrained": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_auto.AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_auto.MODEL_WITH_LM_HEAD_MAPPING",
    "transformers.modeling_auto.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_auto.MODEL_FOR_CAUSAL_LM_MAPPING": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "transformers.modeling_auto.MODEL_FOR_MASKED_LM_MAPPING": {
  "data": {
   "lineno": 348
  },
  "type": "constant"
 },
 "transformers.modeling_auto.MODEL_FOR_MULTIPLE_CHOICE_MAPPING": {
  "data": {
   "lineno": 451
  },
  "type": "constant"
 },
 "transformers.modeling_auto.MODEL_FOR_NEXT_SENTENCE_PREDICTION_MAPPING": {
  "data": {
   "lineno": 470
  },
  "type": "constant"
 },
 "transformers.modeling_auto.MODEL_FOR_PRETRAINING_MAPPING": {
  "data": {
   "lineno": 267
  },
  "type": "constant"
 },
 "transformers.modeling_auto.MODEL_FOR_QUESTION_ANSWERING_MAPPING": {
  "data": {
   "lineno": 408
  },
  "type": "constant"
 },
 "transformers.modeling_auto.MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING": {
  "data": {
   "lineno": 384
  },
  "type": "constant"
 },
 "transformers.modeling_auto.MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING": {
  "data": {
   "lineno": 369
  },
  "type": "constant"
 },
 "transformers.modeling_auto.MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING": {
  "data": {
   "lineno": 430
  },
  "type": "constant"
 },
 "transformers.modeling_auto.MODEL_MAPPING": {
  "data": {
   "lineno": 232
  },
  "type": "constant"
 },
 "transformers.modeling_auto.MODEL_WITH_LM_HEAD_MAPPING": {
  "data": {
   "lineno": 296
  },
  "type": "constant"
 },
 "transformers.modeling_auto.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "transformers.modeling_auto.logger": {
  "data": {
   "lineno": 229
  },
  "type": "constant"
 },
 "transformers.modeling_auto.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_bart": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_bart.Attention": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bart.Attention.__init__": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.Attention._concat_saved_state": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "torch.Tensor",
    "transformers.modeling_bart.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.Attention._shape": {
  "data": {
   "lineno": 680
  },
  "type": "function"
 },
 "transformers.modeling_bart.Attention.forward": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "bool",
    "dict",
    "float",
    "isinstance",
    "str",
    "torch.Tensor",
    "torch.nn.functional.dropout",
    "torch.nn.functional.softmax",
    "transformers.modeling_bart.torch",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BART_GENERATION_EXAMPLE": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "transformers.modeling_bart.BART_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "transformers.modeling_bart.BART_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "transformers.modeling_bart.BART_START_DOCSTRING": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "transformers.modeling_bart.BartClassificationHead": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bart.BartClassificationHead.__init__": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartClassificationHead.forward": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "transformers.modeling_bart.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartDecoder": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bart.BartDecoder.__init__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "LayerNorm",
    "LearnedPositionalEmbedding",
    "SinusoidalPositionalEmbedding",
    "range",
    "super",
    "torch.nn.Embedding",
    "torch.nn.Identity",
    "torch.nn.ModuleList",
    "transformers.modeling_bart.DecoderLayer",
    "transformers.modeling_bart.math"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartDecoder.forward": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "BaseModelOutputWithPastAndCrossAttentions",
    "FutureWarning",
    "decoder_layer",
    "enumerate",
    "torch.nn.functional.dropout",
    "transformers.modeling_bart.invert_mask",
    "transformers.modeling_bart.random",
    "transformers.modeling_bart.warnings",
    "tuple",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartEncoder": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bart.BartEncoder.__init__": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "LayerNorm",
    "LearnedPositionalEmbedding",
    "SinusoidalPositionalEmbedding",
    "range",
    "super",
    "torch.nn.Identity",
    "torch.nn.ModuleList",
    "transformers.modeling_bart.EncoderLayer",
    "transformers.modeling_bart.math"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartEncoder.forward": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "BaseModelOutput",
    "encoder_layer",
    "torch.nn.functional.dropout",
    "transformers.modeling_bart.invert_mask",
    "transformers.modeling_bart.random",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bart.BART_START_DOCSTRING",
    "transformers.modeling_bart.PretrainedBartModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bart.BartForConditionalGeneration.__init__": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bart.BartModel",
    "transformers.modeling_bart.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration._force_token_id_to_be_generated": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "float",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration._reorder_cache": {
  "data": {
   "lineno": 1122,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.modeling_bart._reorder_buffer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration._resize_final_logits_bias": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "int",
    "transformers.modeling_bart.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration.adjust_logits_during_generation": {
  "data": {
   "lineno": 1110
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration.forward": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "FutureWarning",
    "Seq2SeqLMOutput",
    "add_end_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.functional.linear",
    "transformers.modeling_bart.BART_GENERATION_EXAMPLE",
    "transformers.modeling_bart.BART_INPUTS_DOCSTRING",
    "transformers.modeling_bart._CONFIG_FOR_DOC",
    "transformers.modeling_bart.shift_tokens_right",
    "transformers.modeling_bart.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration.get_encoder": {
  "data": {
   "lineno": 1133
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration.get_output_embeddings": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "transformers.modeling_bart._make_linear_from_emb"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration.prepare_inputs_for_generation": {
  "data": {
   "lineno": 1098
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartForConditionalGeneration.resize_token_embeddings": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Embedding"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartForQuestionAnswering": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bart.BART_START_DOCSTRING",
    "transformers.modeling_bart.PretrainedBartModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bart.BartForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_bart.BartModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartForQuestionAnswering.forward": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "Seq2SeqQuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_bart.BART_INPUTS_DOCSTRING",
    "transformers.modeling_bart._CONFIG_FOR_DOC",
    "transformers.modeling_bart._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartForSequenceClassification": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bart.BART_START_DOCSTRING",
    "transformers.modeling_bart.PretrainedBartModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bart.BartForSequenceClassification.__init__": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bart.BartClassificationHead",
    "transformers.modeling_bart.BartModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartForSequenceClassification.forward": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "Seq2SeqSequenceClassifierOutput",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_bart.BART_INPUTS_DOCSTRING",
    "transformers.modeling_bart._CONFIG_FOR_DOC",
    "transformers.modeling_bart._TOKENIZER_FOR_DOC",
    "transformers.modeling_bart.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartModel": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bart.BART_START_DOCSTRING",
    "transformers.modeling_bart.PretrainedBartModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bart.BartModel.__init__": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "super",
    "torch.nn.Embedding",
    "transformers.modeling_bart.BartDecoder",
    "transformers.modeling_bart.BartEncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartModel.forward": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "BaseModelOutput",
    "FutureWarning",
    "Seq2SeqModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "isinstance",
    "len",
    "transformers.modeling_bart.BART_INPUTS_DOCSTRING",
    "transformers.modeling_bart._CONFIG_FOR_DOC",
    "transformers.modeling_bart._TOKENIZER_FOR_DOC",
    "transformers.modeling_bart._prepare_bart_decoder_inputs",
    "transformers.modeling_bart.warnings",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartModel.get_input_embeddings": {
  "data": {
   "lineno": 953
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartModel.get_output_embeddings": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "transformers.modeling_bart._make_linear_from_emb"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.BartModel.set_input_embeddings": {
  "data": {
   "lineno": 956
  },
  "type": "function"
 },
 "transformers.modeling_bart.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_bart.DecoderLayer": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bart.DecoderLayer.__init__": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "Attention",
    "LayerNorm",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.DecoderLayer.forward": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "torch.nn.functional.dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.modeling_bart.EncoderLayer": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bart.EncoderLayer.__init__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "Attention",
    "LayerNorm",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.EncoderLayer.forward": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "torch.nn.functional.dropout",
    "transformers.modeling_bart.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_bart.FusedLayerNorm": {
  "data": {
   "shadows": "apex.normalization.FusedLayerNorm"
  },
  "type": "import"
 },
 "transformers.modeling_bart.LayerNorm": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "ImportError",
    "apex.normalization.FusedLayerNorm",
    "transformers.modeling_bart.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.LearnedPositionalEmbedding": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "torch.nn.Embedding"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bart.LearnedPositionalEmbedding.__init__": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.LearnedPositionalEmbedding.forward": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bart.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.modeling_bart.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_bart.PretrainedBartModel": {
  "data": {
   "lineno": 186
  },
  "type": "class"
 },
 "transformers.modeling_bart.PretrainedBartModel._init_weights": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.PretrainedBartModel.dummy_inputs": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "property",
    "transformers.modeling_bart.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.SinusoidalPositionalEmbedding": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "torch.nn.Embedding"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bart.SinusoidalPositionalEmbedding.__init__": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.SinusoidalPositionalEmbedding._init_weight": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.power",
    "numpy.sin",
    "range",
    "staticmethod",
    "torch.nn.Parameter",
    "transformers.modeling_bart.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.SinusoidalPositionalEmbedding.forward": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bart.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "transformers.modeling_bart.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_bart._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "transformers.modeling_bart._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.modeling_bart._get_shape": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart._make_linear_from_emb": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart._prepare_bart_decoder_inputs": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "fill_with_neg_inf",
    "make_padding_mask",
    "shift_tokens_right",
    "transformers.modeling_bart.invert_mask",
    "transformers.modeling_bart.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart._reorder_buffer": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.fill_with_neg_inf": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bart.invert_mask": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "transformers.modeling_bart.logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.modeling_bart.make_padding_mask": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "transformers.modeling_bart.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_bart.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_bart.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_bart.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "transformers.modeling_bart.shift_tokens_right": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "transformers.modeling_bart.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_bart.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_bert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_bert.BERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 667
  },
  "type": "constant"
 },
 "transformers.modeling_bert.BERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "transformers.modeling_bert.BERT_START_DOCSTRING": {
  "data": {
   "lineno": 650
  },
  "type": "constant"
 },
 "transformers.modeling_bert.BertAttention": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertAttention.__init__": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "set",
    "super",
    "transformers.modeling_bert.BertSelfAttention",
    "transformers.modeling_bert.BertSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertAttention.forward": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertAttention.prune_heads": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "find_pruneable_heads_and_indices",
    "len",
    "prune_linear_layer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertEmbeddings": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertEmbeddings.__init__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertEmbeddings.forward": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertEncoder": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertEncoder.__init__": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_bert.BertLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertEncoder.forward": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "BaseModelOutputWithCrossAttentions",
    "create_custom_forward",
    "enumerate",
    "getattr",
    "layer_module",
    "transformers.modeling_bert.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertEncoder.forward.create_custom_forward": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertEncoder.forward.create_custom_forward.custom_forward": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForMaskedLM": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForMaskedLM.__init__": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bert.BertModel",
    "transformers.modeling_bert.BertOnlyMLMHead",
    "transformers.modeling_bert.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForMaskedLM.forward": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "FutureWarning",
    "MaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "list",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert._CONFIG_FOR_DOC",
    "transformers.modeling_bert._TOKENIZER_FOR_DOC",
    "transformers.modeling_bert.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 1115
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForMaskedLM.prepare_inputs_for_generation": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForMultipleChoice": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForMultipleChoice.__init__": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForMultipleChoice.forward": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "MultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert._CONFIG_FOR_DOC",
    "transformers.modeling_bert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForNextSentencePrediction": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForNextSentencePrediction.__init__": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bert.BertModel",
    "transformers.modeling_bert.BertOnlyNSPHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForNextSentencePrediction.forward": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "FutureWarning",
    "NextSentencePredictorOutput",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert._CONFIG_FOR_DOC",
    "transformers.modeling_bert.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForPreTraining": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForPreTraining.__init__": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bert.BertModel",
    "transformers.modeling_bert.BertPreTrainingHeads"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForPreTraining.forward": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "FutureWarning",
    "add_start_docstrings_to_model_forward",
    "list",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert.BertForPreTrainingOutput",
    "transformers.modeling_bert._CONFIG_FOR_DOC",
    "transformers.modeling_bert.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForPreTraining.get_output_embeddings": {
  "data": {
   "lineno": 881
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForPreTrainingOutput": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_bert.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForQuestionAnswering": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1584,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForQuestionAnswering.forward": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": [
    "QuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert._CONFIG_FOR_DOC",
    "transformers.modeling_bert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForSequenceClassification": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForSequenceClassification.__init__": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForSequenceClassification.forward": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "SequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert._CONFIG_FOR_DOC",
    "transformers.modeling_bert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForTokenClassification": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertForTokenClassification.__init__": {
  "data": {
   "lineno": 1493,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertForTokenClassification.forward": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": [
    "TokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "loss_fct.ignore_index",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert._CONFIG_FOR_DOC",
    "transformers.modeling_bert._TOKENIZER_FOR_DOC",
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertIntermediate": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertIntermediate.__init__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertIntermediate.forward": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertLMHeadModel": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertLMHeadModel.__init__": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bert.BertModel",
    "transformers.modeling_bert.BertOnlyMLMHead",
    "transformers.modeling_bert.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertLMHeadModel.forward": {
  "data": {
   "lineno": 997,
   "symbols_in_volume": [
    "CausalLMOutputWithCrossAttentions",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertLMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 994
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertLMHeadModel.prepare_inputs_for_generation": {
  "data": {
   "lineno": 1085
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertLMPredictionHead": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertLMPredictionHead.__init__": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "transformers.modeling_bert.BertPredictionHeadTransform",
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertLMPredictionHead.forward": {
  "data": {
   "lineno": 554
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertLayer": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertLayer.__init__": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bert.BertAttention",
    "transformers.modeling_bert.BertIntermediate",
    "transformers.modeling_bert.BertOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertLayer.feed_forward_chunk": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertLayer.forward": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "apply_chunking_to_forward",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertModel": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert.BERT_START_DOCSTRING",
    "transformers.modeling_bert.BertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertModel.__init__": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bert.BertEmbeddings",
    "transformers.modeling_bert.BertEncoder",
    "transformers.modeling_bert.BertPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertModel._prune_heads": {
  "data": {
   "lineno": 753
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertModel.forward": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "BaseModelOutputWithPoolingAndCrossAttentions",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_bert._CONFIG_FOR_DOC",
    "transformers.modeling_bert._TOKENIZER_FOR_DOC",
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertModel.get_input_embeddings": {
  "data": {
   "lineno": 747
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertModel.set_input_embeddings": {
  "data": {
   "lineno": 750
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertOnlyMLMHead": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertOnlyMLMHead.__init__": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bert.BertLMPredictionHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertOnlyMLMHead.forward": {
  "data": {
   "lineno": 565
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertOnlyNSPHead": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertOnlyNSPHead.__init__": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertOnlyNSPHead.forward": {
  "data": {
   "lineno": 575
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertOutput": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertOutput.__init__": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertOutput.forward": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertPooler": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertPooler.__init__": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Tanh"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertPooler.forward": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertPreTrainedModel": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "transformers.modeling_bert.load_tf_weights_in_bert"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertPreTrainedModel._init_weights": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "isinstance",
    "module",
    "module.bias",
    "module.bias.data.zero_",
    "module.weight.data.fill_",
    "module.weight.data.normal_",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertPreTrainingHeads": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertPreTrainingHeads.__init__": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_bert.BertLMPredictionHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertPreTrainingHeads.forward": {
  "data": {
   "lineno": 586
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertPredictionHeadTransform": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertPredictionHeadTransform.__init__": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertPredictionHeadTransform.forward": {
  "data": {
   "lineno": 533
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfAttention": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertSelfAttention.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "int",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfAttention.forward": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "torch.nn.Softmax",
    "transformers.modeling_bert.math",
    "transformers.modeling_bert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfAttention.transpose_for_scores": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfOutput": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert.BertSelfOutput.__init__": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.BertSelfOutput.forward": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "transformers.modeling_bert.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_bert.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_bert.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_bert.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_bert._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "transformers.modeling_bert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "transformers.modeling_bert.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_bert.load_tf_weights_in_bert": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "ImportError",
    "any",
    "getattr",
    "int",
    "len",
    "numpy.transpose",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.modeling_bert.logger",
    "transformers.modeling_bert.os",
    "transformers.modeling_bert.re",
    "transformers.modeling_bert.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert.logger": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "transformers.modeling_bert.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_bert.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_bert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_bert.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_bert.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_bert.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_bert.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_bert.torch.utils.checkpoint": {
  "data": {
   "shadows": "torch.utils.checkpoint"
  },
  "type": "import"
 },
 "transformers.modeling_bert.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_bert_generation": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_bert_generation.BERT_GENERATION_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "transformers.modeling_bert_generation.BERT_GENERATION_START_DOCSTRING": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "transformers.modeling_bert_generation.BertGenerationDecoder": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert_generation.BERT_GENERATION_START_DOCSTRING",
    "transformers.modeling_bert_generation.BertGenerationPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert_generation.BertGenerationDecoder.__init__": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_bert_generation.BertGenerationEncoder",
    "transformers.modeling_bert_generation.BertGenerationOnlyLMHead",
    "transformers.modeling_bert_generation.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationDecoder.forward": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "CausalLMOutputWithCrossAttentions",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_bert_generation.BERT_GENERATION_INPUTS_DOCSTRING",
    "transformers.modeling_bert_generation._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationDecoder.get_output_embeddings": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationDecoder.prepare_inputs_for_generation": {
  "data": {
   "lineno": 511
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationEmbeddings": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert_generation.BertGenerationEmbeddings.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "transformers.modeling_bert_generation.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationEmbeddings.forward": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationEncoder": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_bert_generation.BERT_GENERATION_START_DOCSTRING",
    "transformers.modeling_bert_generation.BertGenerationPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert_generation.BertGenerationEncoder.__init__": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "BertEncoder",
    "super",
    "transformers.modeling_bert_generation.BertGenerationEmbeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationEncoder._prune_heads": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationEncoder.forward": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "BaseModelOutputWithCrossAttentions",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_bert_generation.BERT_GENERATION_INPUTS_DOCSTRING",
    "transformers.modeling_bert_generation._CONFIG_FOR_DOC",
    "transformers.modeling_bert_generation._TOKENIZER_FOR_DOC",
    "transformers.modeling_bert_generation.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationEncoder.get_input_embeddings": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationEncoder.set_input_embeddings": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationOnlyLMHead": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_bert_generation.BertGenerationOnlyLMHead.__init__": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "transformers.modeling_bert_generation.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationOnlyLMHead.forward": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.BertGenerationPreTrainedModel": {
  "data": {
   "lineno": 168
  },
  "type": "class"
 },
 "transformers.modeling_bert_generation.BertGenerationPreTrainedModel._init_weights": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_bert_generation._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.modeling_bert_generation._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.modeling_bert_generation.hub": {
  "data": {
   "shadows": "tensorflow_hub"
  },
  "type": "import"
 },
 "transformers.modeling_bert_generation.load_tf_weights_in_bert_generation": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "ImportError",
    "enumerate",
    "getattr",
    "int",
    "list",
    "numpy.asarray",
    "numpy.float32",
    "numpy.transpose",
    "tensorflow.compat.v1.Session",
    "tensorflow.compat.v1.disable_eager_execution",
    "tensorflow.compat.v1.global_variables_initializer",
    "tensorflow_hub.Module",
    "transformers.modeling_bert_generation.logger",
    "transformers.modeling_bert_generation.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_bert_generation.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.modeling_bert_generation.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_bert_generation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_bert_generation.tensorflow_text": {
  "data": {
   "shadows": "tensorflow_text"
  },
  "type": "import"
 },
 "transformers.modeling_bert_generation.tf": {
  "data": {
   "shadows": "tensorflow.compat.v1"
  },
  "type": "import"
 },
 "transformers.modeling_bert_generation.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_bert_generation.torch.utils.checkpoint": {
  "data": {
   "shadows": "torch.utils.checkpoint"
  },
  "type": "import"
 },
 "transformers.modeling_blenderbot": {
  "data": {},
  "type": "module"
 },
 "transformers.modeling_blenderbot.BLENDERBOT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.modeling_blenderbot.BLENDER_START_DOCSTRING": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.modeling_blenderbot.BlenderbotForConditionalGeneration": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_blenderbot.BLENDER_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_blenderbot.BlenderbotForConditionalGeneration.adjust_logits_during_generation": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "transformers.modeling_blenderbot.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_blenderbot.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_camembert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_camembert.CAMEMBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.modeling_camembert.CAMEMBERT_START_DOCSTRING": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "transformers.modeling_camembert.CamembertForCausalLM": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_camembert.CAMEMBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_camembert.CamembertForMaskedLM": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_camembert.CAMEMBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_camembert.CamembertForMultipleChoice": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_camembert.CAMEMBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_camembert.CamembertForQuestionAnswering": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_camembert.CAMEMBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_camembert.CamembertForSequenceClassification": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_camembert.CAMEMBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_camembert.CamembertForTokenClassification": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_camembert.CAMEMBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_camembert.CamembertModel": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_camembert.CAMEMBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_camembert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.modeling_camembert.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.modeling_ctrl": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_ctrl.CTRLLMHeadModel": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_ctrl.CTRLPreTrainedModel",
    "transformers.modeling_ctrl.CTRL_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_ctrl.CTRLLMHeadModel.__init__": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_ctrl.CTRLModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLLMHeadModel.forward": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "CausalLMOutputWithPast",
    "FutureWarning",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "list",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_ctrl.CTRL_INPUTS_DOCSTRING",
    "transformers.modeling_ctrl._CONFIG_FOR_DOC",
    "transformers.modeling_ctrl._TOKENIZER_FOR_DOC",
    "transformers.modeling_ctrl.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLLMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLLMHeadModel.prepare_inputs_for_generation": {
  "data": {
   "lineno": 517
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLModel": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_ctrl.CTRLPreTrainedModel",
    "transformers.modeling_ctrl.CTRL_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_ctrl.CTRLModel.__init__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.ModuleList",
    "transformers.modeling_ctrl.EncoderLayer",
    "transformers.modeling_ctrl.positional_encoding",
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLModel._prune_heads": {
  "data": {
   "lineno": 345
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLModel.forward": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "BaseModelOutputWithPast",
    "FutureWarning",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "enumerate",
    "h",
    "len",
    "list",
    "numpy.sqrt",
    "transformers.modeling_ctrl.CTRL_INPUTS_DOCSTRING",
    "transformers.modeling_ctrl._CONFIG_FOR_DOC",
    "transformers.modeling_ctrl._TOKENIZER_FOR_DOC",
    "transformers.modeling_ctrl.torch",
    "transformers.modeling_ctrl.warnings",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLModel.get_input_embeddings": {
  "data": {
   "lineno": 339
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLModel.set_input_embeddings": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRLPreTrainedModel": {
  "data": {
   "lineno": 214
  },
  "type": "class"
 },
 "transformers.modeling_ctrl.CTRLPreTrainedModel._init_weights": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.CTRL_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "transformers.modeling_ctrl.CTRL_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.modeling_ctrl.CTRL_START_DOCSTRING": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "transformers.modeling_ctrl.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.EncoderLayer": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_ctrl.EncoderLayer.__init__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_ctrl.MultiHeadAttention",
    "transformers.modeling_ctrl.point_wise_feed_forward_network",
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.EncoderLayer.forward": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.MultiHeadAttention": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_ctrl.MultiHeadAttention.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "int",
    "set",
    "super",
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.MultiHeadAttention.forward": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "transformers.modeling_ctrl.scaled_dot_product_attention",
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.MultiHeadAttention.prune_heads": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "find_pruneable_heads_and_indices",
    "len",
    "prune_linear_layer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.MultiHeadAttention.split_into_heads": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "transformers.modeling_ctrl._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.modeling_ctrl._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.modeling_ctrl.angle_defn": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.modeling_ctrl.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.point_wise_feed_forward_network": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.positional_encoding": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "transformers.modeling_ctrl.angle_defn",
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.scaled_dot_product_attention": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.sqrt",
    "transformers.modeling_ctrl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_ctrl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_ctrl.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_deberta": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_deberta.ContextPooler": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.ContextPooler.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "StableDropout",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.ContextPooler.forward": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "transformers.modeling_deberta.ContextPooler.output_dim": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_deberta.DEBERTA_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 789
  },
  "type": "constant"
 },
 "transformers.modeling_deberta.DEBERTA_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.modeling_deberta.DEBERTA_START_DOCSTRING": {
  "data": {
   "lineno": 771
  },
  "type": "constant"
 },
 "transformers.modeling_deberta.DebertaAttention": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.DebertaAttention.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "DisentangledSelfAttention",
    "super",
    "transformers.modeling_deberta.DebertaSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaAttention.forward": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaEmbeddings": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.DebertaEmbeddings.__init__": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "getattr",
    "super",
    "torch.nn.Embedding",
    "torch.nn.Linear",
    "transformers.modeling_deberta.DebertaLayerNorm",
    "transformers.modeling_deberta.StableDropout",
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaEmbeddings.forward": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaEncoder": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.DebertaEncoder.__init__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "getattr",
    "range",
    "super",
    "torch.nn.Embedding",
    "torch.nn.ModuleList",
    "transformers.modeling_deberta.DebertaLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaEncoder.forward": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "BaseModelOutput",
    "collections.abc.Sequence",
    "enumerate",
    "isinstance",
    "layer_module",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaEncoder.get_attention_mask": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaEncoder.get_rel_embedding": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaEncoder.get_rel_pos": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "build_relative_position"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaForSequenceClassification": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_deberta.DEBERTA_START_DOCSTRING",
    "transformers.modeling_deberta.DebertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.DebertaForSequenceClassification.__init__": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "getattr",
    "super",
    "transformers.modeling_deberta.ContextPooler",
    "transformers.modeling_deberta.DebertaModel",
    "transformers.modeling_deberta.StableDropout",
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaForSequenceClassification.forward": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "SequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "log_softmax",
    "loss_fct",
    "loss_fn",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_deberta.DEBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_deberta._CONFIG_FOR_DOC",
    "transformers.modeling_deberta._TOKENIZER_FOR_DOC",
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaForSequenceClassification.get_input_embeddings": {
  "data": {
   "lineno": 973
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaForSequenceClassification.set_input_embeddings": {
  "data": {
   "lineno": 976
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaIntermediate": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.DebertaIntermediate.__init__": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaIntermediate.forward": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaLayer": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.DebertaLayer.__init__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_deberta.DebertaAttention",
    "transformers.modeling_deberta.DebertaIntermediate",
    "transformers.modeling_deberta.DebertaLayer",
    "transformers.modeling_deberta.DebertaOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaLayer.forward": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaLayerNorm": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.DebertaLayerNorm.__init__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "super",
    "torch.nn.Parameter",
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaLayerNorm.forward": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaModel": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_deberta.DEBERTA_START_DOCSTRING",
    "transformers.modeling_deberta.DebertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.DebertaModel.__init__": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_deberta.DebertaEmbeddings",
    "transformers.modeling_deberta.DebertaEncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaModel._prune_heads": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaModel.forward": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "BaseModelOutput",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "layer",
    "range",
    "transformers.modeling_deberta.DEBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_deberta._CONFIG_FOR_DOC",
    "transformers.modeling_deberta._TOKENIZER_FOR_DOC",
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaModel.get_input_embeddings": {
  "data": {
   "lineno": 848
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaModel.set_input_embeddings": {
  "data": {
   "lineno": 851
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaOutput": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.DebertaOutput.__init__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_deberta.DebertaLayerNorm",
    "transformers.modeling_deberta.DebertaOutput",
    "transformers.modeling_deberta.StableDropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaOutput.forward": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaPreTrainedModel": {
  "data": {
   "lineno": 751
  },
  "type": "class"
 },
 "transformers.modeling_deberta.DebertaPreTrainedModel._init_weights": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaSelfOutput": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.DebertaSelfOutput.__init__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_deberta.DebertaLayerNorm",
    "transformers.modeling_deberta.StableDropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DebertaSelfOutput.forward": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DisentangledSelfAttention": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.DisentangledSelfAttention.__init__": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "int",
    "super",
    "transformers.modeling_deberta.StableDropout",
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DisentangledSelfAttention.disentangled_att_bias": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "min",
    "transformers.modeling_deberta.build_relative_position",
    "transformers.modeling_deberta.c2p_dynamic_expand",
    "transformers.modeling_deberta.math",
    "transformers.modeling_deberta.p2c_dynamic_expand",
    "transformers.modeling_deberta.pos_dynamic_expand",
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DisentangledSelfAttention.forward": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "len",
    "linear",
    "range",
    "transformers.modeling_deberta.XSoftmax",
    "transformers.modeling_deberta.math",
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DisentangledSelfAttention.forward.linear": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DisentangledSelfAttention.transpose_for_scores": {
  "data": {
   "lineno": 524
  },
  "type": "function"
 },
 "transformers.modeling_deberta.DropoutContext": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.DropoutContext.__init__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "transformers.modeling_deberta.Sequence": {
  "data": {
   "shadows": "collections.abc.Sequence"
  },
  "type": "import"
 },
 "transformers.modeling_deberta.StableDropout": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.StableDropout.__init__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.StableDropout.clear_context": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "transformers.modeling_deberta.StableDropout.forward": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "transformers.modeling_deberta.XDropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.StableDropout.get_context": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "len",
    "transformers.modeling_deberta.DropoutContext"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.StableDropout.init_context": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "transformers.modeling_deberta.XDropout": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.XDropout.backward": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.XDropout.forward": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "input",
    "input.masked_fill",
    "staticmethod",
    "transformers.modeling_deberta.get_mask"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.XSoftmax": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_deberta.XSoftmax.backward": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "staticmethod",
    "torch._softmax_backward_data"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.XSoftmax.forward": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "float",
    "input.masked_fill",
    "packaging.version.Version",
    "staticmethod",
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.modeling_deberta._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.modeling_deberta._softmax_backward_data": {
  "data": {
   "shadows": "torch._softmax_backward_data"
  },
  "type": "import"
 },
 "transformers.modeling_deberta.build_relative_position": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.c2p_dynamic_expand": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.get_mask": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "input",
    "isinstance",
    "packaging.version.Version",
    "transformers.modeling_deberta.DropoutContext",
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.modeling_deberta.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_deberta.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_deberta.p2c_dynamic_expand": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.pos_dynamic_expand": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "transformers.modeling_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_deberta.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_deberta.version": {
  "data": {
   "shadows": "packaging.version"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_distilbert.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.DISTILBERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 374
  },
  "type": "constant"
 },
 "transformers.modeling_distilbert.DISTILBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.modeling_distilbert.DISTILBERT_START_DOCSTRING": {
  "data": {
   "lineno": 357
  },
  "type": "constant"
 },
 "transformers.modeling_distilbert.DistilBertForMaskedLM": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_distilbert.DistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertForMaskedLM.__init__": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "super",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "transformers.modeling_distilbert.DistilBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForMaskedLM.forward": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "FutureWarning",
    "MaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "gelu",
    "list",
    "transformers.modeling_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_distilbert._CONFIG_FOR_DOC",
    "transformers.modeling_distilbert._TOKENIZER_FOR_DOC",
    "transformers.modeling_distilbert.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 509
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForMultipleChoice": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_distilbert.DistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertForMultipleChoice.__init__": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_distilbert.DistilBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForMultipleChoice.forward": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "MultipleChoiceModelOutput",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.ReLU",
    "transformers.modeling_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_distilbert._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForQuestionAnswering": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_distilbert.DistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_distilbert.DistilBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForQuestionAnswering.forward": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "QuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_distilbert._CONFIG_FOR_DOC",
    "transformers.modeling_distilbert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForSequenceClassification": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_distilbert.DistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_distilbert.DistilBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForSequenceClassification.forward": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "SequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "torch.nn.ReLU",
    "transformers.modeling_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_distilbert._CONFIG_FOR_DOC",
    "transformers.modeling_distilbert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForTokenClassification": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_distilbert.DistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertForTokenClassification.__init__": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_distilbert.DistilBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertForTokenClassification.forward": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "TokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "loss_fct.ignore_index",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_distilbert._CONFIG_FOR_DOC",
    "transformers.modeling_distilbert._TOKENIZER_FOR_DOC",
    "transformers.modeling_distilbert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertModel": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_distilbert.DistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertModel.__init__": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_distilbert.Embeddings",
    "transformers.modeling_distilbert.Transformer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertModel._prune_heads": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertModel.forward": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "BaseModelOutput",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_distilbert._CONFIG_FOR_DOC",
    "transformers.modeling_distilbert._TOKENIZER_FOR_DOC",
    "transformers.modeling_distilbert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertModel.get_input_embeddings": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertModel.set_input_embeddings": {
  "data": {
   "lineno": 428
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.DistilBertPreTrainedModel": {
  "data": {
   "lineno": 333
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.DistilBertPreTrainedModel._init_weights": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.Embeddings": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.Embeddings.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "transformers.modeling_distilbert.create_sinusoidal_embeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.Embeddings.forward": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "transformers.modeling_distilbert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.FFN": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.FFN.__init__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "torch.nn.ReLU"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.FFN.ff_chunk": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.FFN.forward": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "apply_chunking_to_forward",
    "input"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "set",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.forward": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "float",
    "shape",
    "torch.nn.Softmax",
    "transformers.modeling_distilbert.math",
    "transformers.modeling_distilbert.torch",
    "unshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.forward.shape": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.forward.unshape": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.MultiHeadSelfAttention.prune_heads": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "find_pruneable_heads_and_indices",
    "len",
    "prune_linear_layer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.Transformer": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.Transformer.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_distilbert.TransformerBlock",
    "transformers.modeling_distilbert.copy"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.Transformer.forward": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "BaseModelOutput",
    "enumerate",
    "layer_module",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.TransformerBlock": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_distilbert.TransformerBlock.__init__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "super",
    "torch.nn.LayerNorm",
    "transformers.modeling_distilbert.FFN",
    "transformers.modeling_distilbert.MultiHeadSelfAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.TransformerBlock.forward": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "transformers.modeling_distilbert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "transformers.modeling_distilbert.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.create_sinusoidal_embeddings": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.power",
    "numpy.sin",
    "range",
    "transformers.modeling_distilbert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_distilbert.logger": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.modeling_distilbert.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_distilbert.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_dpr": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_dpr.DPRContextEncoder": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_dpr.DPRPretrainedContextEncoder",
    "transformers.modeling_dpr.DPR_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_dpr.DPRContextEncoder.__init__": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_dpr.DPREncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPRContextEncoder.forward": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "torch.Tensor",
    "transformers.modeling_dpr.DPRContextEncoderOutput",
    "transformers.modeling_dpr.DPR_ENCODERS_INPUTS_DOCSTRING",
    "transformers.modeling_dpr._CONFIG_FOR_DOC",
    "transformers.modeling_dpr.torch",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPRContextEncoderOutput": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_dpr.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_dpr.DPREncoder": {
  "data": {
   "lineno": 149
  },
  "type": "class"
 },
 "transformers.modeling_dpr.DPREncoder.__init__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "BertModel",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPREncoder.embeddings_size": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPREncoder.forward": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "BaseModelOutputWithPooling",
    "bool",
    "torch.Tensor",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPREncoder.init_weights": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPRPretrainedContextEncoder": {
  "data": {
   "lineno": 273
  },
  "type": "class"
 },
 "transformers.modeling_dpr.DPRPretrainedContextEncoder.init_weights": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPRPretrainedQuestionEncoder": {
  "data": {
   "lineno": 288
  },
  "type": "class"
 },
 "transformers.modeling_dpr.DPRPretrainedQuestionEncoder.init_weights": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPRPretrainedReader": {
  "data": {
   "lineno": 303
  },
  "type": "class"
 },
 "transformers.modeling_dpr.DPRPretrainedReader.init_weights": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPRQuestionEncoder": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_dpr.DPRPretrainedQuestionEncoder",
    "transformers.modeling_dpr.DPR_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_dpr.DPRQuestionEncoder.__init__": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_dpr.DPREncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPRQuestionEncoder.forward": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "torch.Tensor",
    "transformers.modeling_dpr.DPRQuestionEncoderOutput",
    "transformers.modeling_dpr.DPR_ENCODERS_INPUTS_DOCSTRING",
    "transformers.modeling_dpr._CONFIG_FOR_DOC",
    "transformers.modeling_dpr.torch",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPRQuestionEncoderOutput": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_dpr.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_dpr.DPRReader": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_dpr.DPRPretrainedReader",
    "transformers.modeling_dpr.DPR_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_dpr.DPRReader.__init__": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_dpr.DPRSpanPredictor"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPRReader.forward": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings_to_model_forward",
    "bool",
    "replace_return_docstrings",
    "torch.Tensor",
    "transformers.modeling_dpr.DPRReaderOutput",
    "transformers.modeling_dpr.DPR_READER_INPUTS_DOCSTRING",
    "transformers.modeling_dpr._CONFIG_FOR_DOC",
    "transformers.modeling_dpr.torch",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPRReaderOutput": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_dpr.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_dpr.DPRSpanPredictor": {
  "data": {
   "lineno": 208
  },
  "type": "class"
 },
 "transformers.modeling_dpr.DPRSpanPredictor.__init__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_dpr.DPREncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPRSpanPredictor.forward": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "bool",
    "torch.Tensor",
    "transformers.modeling_dpr.DPRReaderOutput",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPRSpanPredictor.init_weights": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "transformers.modeling_dpr.DPR_CONTEXT_ENCODER_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.modeling_dpr.DPR_ENCODERS_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 342
  },
  "type": "constant"
 },
 "transformers.modeling_dpr.DPR_QUESTION_ENCODER_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.modeling_dpr.DPR_READER_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 392
  },
  "type": "constant"
 },
 "transformers.modeling_dpr.DPR_READER_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.modeling_dpr.DPR_START_DOCSTRING": {
  "data": {
   "lineno": 325
  },
  "type": "constant"
 },
 "transformers.modeling_dpr.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_dpr.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "transformers.modeling_dpr.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_dpr.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.modeling_dpr._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.modeling_dpr.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_dpr.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.modeling_dpr.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_dpr.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_electra": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_electra.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_electra.ELECTRA_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 611
  },
  "type": "constant"
 },
 "transformers.modeling_electra.ELECTRA_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "transformers.modeling_electra.ELECTRA_START_DOCSTRING": {
  "data": {
   "lineno": 594
  },
  "type": "constant"
 },
 "transformers.modeling_electra.ElectraAttention": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraAttention.__init__": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "set",
    "super",
    "transformers.modeling_electra.ElectraSelfAttention",
    "transformers.modeling_electra.ElectraSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraAttention.forward": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraAttention.prune_heads": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "find_pruneable_heads_and_indices",
    "len",
    "prune_linear_layer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraClassificationHead": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraClassificationHead.__init__": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraClassificationHead.forward": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "get_activation"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraDiscriminatorPredictions": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraDiscriminatorPredictions.__init__": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraDiscriminatorPredictions.forward": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "get_activation"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraEmbeddings": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraEmbeddings.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "transformers.modeling_electra.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraEmbeddings.forward": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "transformers.modeling_electra.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraEncoder": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraEncoder.__init__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_electra.ElectraLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraEncoder.forward": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "BaseModelOutputWithCrossAttentions",
    "create_custom_forward",
    "enumerate",
    "getattr",
    "layer_module",
    "transformers.modeling_electra.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraEncoder.forward.create_custom_forward": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraEncoder.forward.create_custom_forward.custom_forward": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForMaskedLM": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_electra.ELECTRA_START_DOCSTRING",
    "transformers.modeling_electra.ElectraPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraForMaskedLM.__init__": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_electra.ElectraGeneratorPredictions",
    "transformers.modeling_electra.ElectraModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForMaskedLM.forward": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "FutureWarning",
    "MaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "list",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_electra.ELECTRA_INPUTS_DOCSTRING",
    "transformers.modeling_electra._CONFIG_FOR_DOC",
    "transformers.modeling_electra._TOKENIZER_FOR_DOC",
    "transformers.modeling_electra.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 981
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForMultipleChoice": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_electra.ELECTRA_START_DOCSTRING",
    "transformers.modeling_electra.ElectraPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraForMultipleChoice.__init__": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "SequenceSummary",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_electra.ElectraModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForMultipleChoice.forward": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "MultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_electra.ELECTRA_INPUTS_DOCSTRING",
    "transformers.modeling_electra._CONFIG_FOR_DOC",
    "transformers.modeling_electra._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForPreTraining": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_electra.ELECTRA_START_DOCSTRING",
    "transformers.modeling_electra.ElectraPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraForPreTraining.__init__": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_electra.ElectraDiscriminatorPredictions",
    "transformers.modeling_electra.ElectraModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForPreTraining.forward": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.BCEWithLogitsLoss",
    "transformers.modeling_electra.ELECTRA_INPUTS_DOCSTRING",
    "transformers.modeling_electra.ElectraForPreTrainingOutput",
    "transformers.modeling_electra._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForPreTrainingOutput": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_electra.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraForQuestionAnswering": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_electra.ELECTRA_START_DOCSTRING",
    "transformers.modeling_electra.ElectraPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_electra.ElectraModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForQuestionAnswering.forward": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "QuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_electra.ELECTRA_INPUTS_DOCSTRING",
    "transformers.modeling_electra._CONFIG_FOR_DOC",
    "transformers.modeling_electra._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForSequenceClassification": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_electra.ELECTRA_START_DOCSTRING",
    "transformers.modeling_electra.ElectraPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraForSequenceClassification.__init__": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_electra.ElectraClassificationHead",
    "transformers.modeling_electra.ElectraModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForSequenceClassification.forward": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "SequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "transformers.modeling_electra.ELECTRA_INPUTS_DOCSTRING",
    "transformers.modeling_electra._CONFIG_FOR_DOC",
    "transformers.modeling_electra._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForTokenClassification": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_electra.ELECTRA_START_DOCSTRING",
    "transformers.modeling_electra.ElectraPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraForTokenClassification.__init__": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_electra.ElectraModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraForTokenClassification.forward": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "TokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_electra.ELECTRA_INPUTS_DOCSTRING",
    "transformers.modeling_electra._CONFIG_FOR_DOC",
    "transformers.modeling_electra._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraGeneratorPredictions": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraGeneratorPredictions.__init__": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "super",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraGeneratorPredictions.forward": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "get_activation"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraIntermediate": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraIntermediate.__init__": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraIntermediate.forward": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraLayer": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraLayer.__init__": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_electra.ElectraAttention",
    "transformers.modeling_electra.ElectraIntermediate",
    "transformers.modeling_electra.ElectraOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraLayer.feed_forward_chunk": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraLayer.forward": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "apply_chunking_to_forward",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraModel": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_electra.ELECTRA_START_DOCSTRING",
    "transformers.modeling_electra.ElectraPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraModel.__init__": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_electra.ElectraEmbeddings",
    "transformers.modeling_electra.ElectraEncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraModel._prune_heads": {
  "data": {
   "lineno": 698
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraModel.forward": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "BaseModelOutputWithCrossAttentions",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "hasattr",
    "transformers.modeling_electra.ELECTRA_INPUTS_DOCSTRING",
    "transformers.modeling_electra._CONFIG_FOR_DOC",
    "transformers.modeling_electra._TOKENIZER_FOR_DOC",
    "transformers.modeling_electra.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraModel.get_input_embeddings": {
  "data": {
   "lineno": 692
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraModel.set_input_embeddings": {
  "data": {
   "lineno": 695
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraOutput": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraOutput.__init__": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraOutput.forward": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraPreTrainedModel": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "transformers.modeling_electra.load_tf_weights_in_electra"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraPreTrainedModel._init_weights": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "isinstance",
    "module",
    "module.bias",
    "module.bias.data.zero_",
    "module.weight.data.fill_",
    "module.weight.data.normal_",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraSelfAttention": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraSelfAttention.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "int",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraSelfAttention.forward": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "torch.nn.Softmax",
    "transformers.modeling_electra.math",
    "transformers.modeling_electra.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraSelfAttention.transpose_for_scores": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraSelfOutput": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_electra.ElectraSelfOutput.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.ElectraSelfOutput.forward": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "transformers.modeling_electra.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_electra.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_electra.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_electra._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "transformers.modeling_electra._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "transformers.modeling_electra.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_electra.load_tf_weights_in_electra": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "ImportError",
    "any",
    "getattr",
    "int",
    "isinstance",
    "len",
    "numpy.transpose",
    "print",
    "str",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.modeling_electra.logger",
    "transformers.modeling_electra.os",
    "transformers.modeling_electra.re",
    "transformers.modeling_electra.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_electra.logger": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "transformers.modeling_electra.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_electra.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_electra.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_electra.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_electra.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_electra.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_electra.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_electra.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_encoder_decoder": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_encoder_decoder.ENCODER_DECODER_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "transformers.modeling_encoder_decoder.ENCODER_DECODER_START_DOCSTRING": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_encoder_decoder.ENCODER_DECODER_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "isinstance",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel._reorder_cache": {
  "data": {
   "lineno": 455
  },
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.forward": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "Seq2SeqLMOutput",
    "add_start_docstrings_to_model_forward",
    "len",
    "replace_return_docstrings",
    "transformers.modeling_encoder_decoder.ENCODER_DECODER_INPUTS_DOCSTRING",
    "transformers.modeling_encoder_decoder._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.from_encoder_decoder_pretrained": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "len",
    "str",
    "transformers.modeling_encoder_decoder.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.get_decoder": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.get_encoder": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.get_input_embeddings": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.get_output_embeddings": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.prepare_inputs_for_generation": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.EncoderDecoderModel.tie_weights": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "transformers.modeling_encoder_decoder.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_encoder_decoder._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.modeling_encoder_decoder.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.modeling_flaubert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_flaubert.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_flaubert.FLAUBERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "transformers.modeling_flaubert.FLAUBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.modeling_flaubert.FLAUBERT_START_DOCSTRING": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "transformers.modeling_flaubert.FlaubertForMultipleChoice": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_flaubert.FLAUBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flaubert.FlaubertForMultipleChoice.__init__": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_flaubert.FlaubertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flaubert.FlaubertForQuestionAnswering": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_flaubert.FLAUBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flaubert.FlaubertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_flaubert.FlaubertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flaubert.FlaubertForQuestionAnsweringSimple": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_flaubert.FLAUBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flaubert.FlaubertForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_flaubert.FlaubertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flaubert.FlaubertForSequenceClassification": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_flaubert.FLAUBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flaubert.FlaubertForSequenceClassification.__init__": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_flaubert.FlaubertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flaubert.FlaubertForTokenClassification": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_flaubert.FLAUBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flaubert.FlaubertForTokenClassification.__init__": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_flaubert.FlaubertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flaubert.FlaubertModel": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_flaubert.FLAUBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flaubert.FlaubertModel.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "getattr",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flaubert.FlaubertModel.forward": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "BaseModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "get_masks",
    "range",
    "torch.nn.functional.dropout",
    "transformers.modeling_flaubert.FLAUBERT_INPUTS_DOCSTRING",
    "transformers.modeling_flaubert._CONFIG_FOR_DOC",
    "transformers.modeling_flaubert._TOKENIZER_FOR_DOC",
    "transformers.modeling_flaubert.random",
    "transformers.modeling_flaubert.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flaubert.FlaubertWithLMHeadModel": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_flaubert.FLAUBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flaubert.FlaubertWithLMHeadModel.__init__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_flaubert.FlaubertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flaubert._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.modeling_flaubert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.modeling_flaubert.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.modeling_flaubert.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "transformers.modeling_flaubert.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_flax_auto": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.OrderedDict",
    "dict"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_flax_auto.ALL_PRETRAINED_MODEL_ARCHIVE_MAP": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.modeling_flax_auto.FlaxAutoModel": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_auto.FlaxAutoModel.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_auto.FlaxAutoModel.from_config": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "isinstance",
    "model_class",
    "transformers.modeling_flax_auto.MODEL_MAPPING"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_auto.FlaxAutoModel.from_pretrained": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "isinstance",
    "model_class",
    "model_class.from_pretrained",
    "transformers.modeling_flax_auto.MODEL_MAPPING"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_auto.MODEL_MAPPING": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.modeling_flax_auto.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "transformers.modeling_flax_auto.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.modeling_flax_bert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_flax_bert.BERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "transformers.modeling_flax_bert.BERT_START_DOCSTRING": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.modeling_flax_bert.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "transformers.modeling_flax_bert.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.modeling_flax_bert.FlaxBertAttention": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "flax.linen.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_bert.FlaxBertAttention.__call__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "flax.linen.attention.SelfAttention",
    "flax.linen.compact",
    "transformers.modeling_flax_bert.FlaxBertLayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert.FlaxBertEmbedding": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "flax.linen.Module",
    "flax.linen.initializers.normal",
    "int",
    "numpy.ndarray",
    "typing.Callable"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_bert.FlaxBertEmbedding.__call__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "flax.linen.compact",
    "jax.numpy.take"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert.FlaxBertEmbeddings": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "flax.linen.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_bert.FlaxBertEmbeddings.__call__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "flax.linen.compact",
    "jax.numpy.atleast_2d",
    "jax.numpy.broadcast_to",
    "transformers.modeling_flax_bert.FlaxBertEmbedding",
    "transformers.modeling_flax_bert.FlaxBertLayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert.FlaxBertEncoder": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "flax.linen.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_bert.FlaxBertEncoder.__call__": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "flax.linen.compact",
    "layer",
    "transformers.modeling_flax_bert.FlaxBertLayerCollection"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert.FlaxBertIntermediate": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "flax.linen.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_bert.FlaxBertIntermediate.__call__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "flax.linen.Dense",
    "flax.linen.compact",
    "gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert.FlaxBertLayer": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "flax.linen.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_bert.FlaxBertLayer.__call__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "flax.linen.compact",
    "transformers.modeling_flax_bert.FlaxBertAttention",
    "transformers.modeling_flax_bert.FlaxBertIntermediate",
    "transformers.modeling_flax_bert.FlaxBertOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert.FlaxBertLayerCollection": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "flax.linen.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_bert.FlaxBertLayerCollection.__call__": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "flax.linen.compact",
    "layer",
    "range",
    "transformers.modeling_flax_bert.FlaxBertLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert.FlaxBertLayerNorm": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "bool",
    "flax.linen.Module",
    "flax.linen.initializers.ones",
    "flax.linen.initializers.zeros",
    "float",
    "jax.numpy.dtype",
    "jax.numpy.float32",
    "jax.numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_bert.FlaxBertLayerNorm.__call__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "flax.linen.compact",
    "jax.numpy.asarray",
    "jax.numpy.mean",
    "transformers.modeling_flax_bert.jax"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert.FlaxBertModel": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_flax_bert.BERT_START_DOCSTRING",
    "transformers.modeling_flax_bert.FlaxBertModule"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_bert.FlaxBertModel.__call__": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "jax.numpy.arange",
    "jax.numpy.array",
    "jax.numpy.atleast_2d",
    "jax.numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert.FlaxBertModel.__init__": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "dict",
    "int",
    "super",
    "transformers.modeling_flax_bert.FlaxBertModule"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert.FlaxBertModel.convert_from_pytorch": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "dict",
    "set",
    "staticmethod",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert.FlaxBertModel.module": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "flax.linen.Module",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert.FlaxBertModule": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "flax.linen.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_bert.FlaxBertModule.__call__": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "flax.linen.compact",
    "transformers.modeling_flax_bert.FlaxBertEmbeddings",
    "transformers.modeling_flax_bert.FlaxBertEncoder",
    "transformers.modeling_flax_bert.FlaxBertPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert.FlaxBertOutput": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "flax.linen.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_bert.FlaxBertOutput.__call__": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "flax.linen.Dense",
    "flax.linen.compact",
    "transformers.modeling_flax_bert.FlaxBertLayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert.FlaxBertPooler": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "flax.linen.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_bert.FlaxBertPooler.__call__": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "flax.linen.Dense",
    "flax.linen.compact",
    "transformers.modeling_flax_bert.jax"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_bert._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.modeling_flax_bert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.modeling_flax_bert.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "transformers.modeling_flax_bert.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "transformers.modeling_flax_bert.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.modeling_flax_bert.nn": {
  "data": {
   "shadows": "flax.linen"
  },
  "type": "import"
 },
 "transformers.modeling_flax_bert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_flax_roberta": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_flax_roberta.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "transformers.modeling_flax_roberta.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaAttention": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "flax.linen.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaAttention.__call__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "flax.linen.attention.SelfAttention",
    "flax.linen.compact",
    "transformers.modeling_flax_roberta.FlaxRobertaLayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaEmbedding": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "flax.linen.Module",
    "flax.linen.initializers.normal",
    "int",
    "numpy.ndarray",
    "typing.Callable"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaEmbedding.__call__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "flax.linen.compact",
    "jax.numpy.take"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaEmbeddings": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "flax.linen.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaEmbeddings.__call__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "flax.linen.compact",
    "jax.numpy.atleast_2d",
    "jax.numpy.broadcast_to",
    "transformers.modeling_flax_roberta.FlaxRobertaEmbedding",
    "transformers.modeling_flax_roberta.FlaxRobertaLayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaEncoder": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "flax.linen.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaEncoder.__call__": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "flax.linen.compact",
    "layer",
    "transformers.modeling_flax_roberta.FlaxRobertaLayerCollection"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaIntermediate": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "flax.linen.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaIntermediate.__call__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "flax.linen.Dense",
    "flax.linen.compact",
    "gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaLayer": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "flax.linen.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaLayer.__call__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "flax.linen.compact",
    "transformers.modeling_flax_roberta.FlaxRobertaAttention",
    "transformers.modeling_flax_roberta.FlaxRobertaIntermediate",
    "transformers.modeling_flax_roberta.FlaxRobertaOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaLayerCollection": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "flax.linen.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaLayerCollection.__call__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "flax.linen.compact",
    "layer",
    "range",
    "transformers.modeling_flax_roberta.FlaxRobertaLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaLayerNorm": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "bool",
    "flax.linen.Module",
    "flax.linen.initializers.ones",
    "flax.linen.initializers.zeros",
    "float",
    "jax.numpy.dtype",
    "jax.numpy.float32",
    "jax.numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaLayerNorm.__call__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "flax.linen.compact",
    "jax.numpy.asarray",
    "jax.numpy.mean",
    "transformers.modeling_flax_roberta.jax"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaModel": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_flax_roberta.FlaxRobertaModule",
    "transformers.modeling_flax_roberta.ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaModel.__call__": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "jax.numpy.array",
    "jax.numpy.ones_like",
    "numpy.arange",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaModel.__init__": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "dict",
    "int",
    "super",
    "transformers.modeling_flax_roberta.FlaxRobertaModule"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaModel.convert_from_pytorch": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "dict",
    "set",
    "staticmethod",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaModel.module": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "flax.linen.Module",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaModule": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "flax.linen.Module",
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaModule.__call__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "flax.linen.compact",
    "transformers.modeling_flax_roberta.FlaxRobertaEmbeddings",
    "transformers.modeling_flax_roberta.FlaxRobertaEncoder",
    "transformers.modeling_flax_roberta.FlaxRobertaPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaOutput": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "flax.linen.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaOutput.__call__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "flax.linen.Dense",
    "flax.linen.compact",
    "transformers.modeling_flax_roberta.FlaxRobertaLayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaPooler": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "flax.linen.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_roberta.FlaxRobertaPooler.__call__": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "flax.linen.Dense",
    "flax.linen.compact",
    "transformers.modeling_flax_roberta.jax"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_roberta.ROBERTA_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "transformers.modeling_flax_roberta.ROBERTA_START_DOCSTRING": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.modeling_flax_roberta._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.modeling_flax_roberta._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.modeling_flax_roberta.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "transformers.modeling_flax_roberta.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "transformers.modeling_flax_roberta.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.modeling_flax_roberta.nn": {
  "data": {
   "shadows": "flax.linen"
  },
  "type": "import"
 },
 "transformers.modeling_flax_roberta.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_flax_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "flax.linen.gelu",
    "flax.linen.relu",
    "flax.linen.swish",
    "transformers.modeling_flax_utils.gelu"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_flax_utils.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "transformers.modeling_flax_utils.ACT2FN": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "transformers.modeling_flax_utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.modeling_flax_utils.FlaxPreTrainedModel": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_flax_utils.FlaxPreTrainedModel.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "flax.linen.Module",
    "int",
    "jax.random.PRNGKey",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_utils.FlaxPreTrainedModel.config": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_utils.FlaxPreTrainedModel.convert_from_pytorch": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "staticmethod",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_utils.FlaxPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "EnvironmentError",
    "TypeError",
    "cached_path",
    "classmethod",
    "cls",
    "flax.serialization.from_bytes",
    "flax.traverse_util.unflatten_dict",
    "hf_bucket_url",
    "is_remote_url",
    "isinstance",
    "open",
    "pickle.UnpicklingError",
    "transformers.modeling_flax_utils.logger",
    "transformers.modeling_flax_utils.os",
    "transformers.modeling_flax_utils.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_utils.FlaxPreTrainedModel.save_pretrained": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "flax.serialization.to_bytes",
    "open",
    "transformers.modeling_flax_utils.os"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_utils.PRNGKey": {
  "data": {
   "shadows": "jax.random.PRNGKey"
  },
  "type": "import"
 },
 "transformers.modeling_flax_utils.UnpicklingError": {
  "data": {
   "shadows": "pickle.UnpicklingError"
  },
  "type": "import"
 },
 "transformers.modeling_flax_utils.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "transformers.modeling_flax_utils.from_bytes": {
  "data": {
   "shadows": "flax.serialization.from_bytes"
  },
  "type": "import"
 },
 "transformers.modeling_flax_utils.gelu": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "jax.numpy.sqrt",
    "transformers.modeling_flax_utils.jax"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_flax_utils.jax": {
  "data": {
   "shadows": "jax"
  },
  "type": "import"
 },
 "transformers.modeling_flax_utils.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "transformers.modeling_flax_utils.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.modeling_flax_utils.nn": {
  "data": {
   "shadows": "flax.linen"
  },
  "type": "import"
 },
 "transformers.modeling_flax_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_flax_utils.to_bytes": {
  "data": {
   "shadows": "flax.serialization.to_bytes"
  },
  "type": "import"
 },
 "transformers.modeling_flax_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_flax_utils.unflatten_dict": {
  "data": {
   "shadows": "flax.traverse_util.unflatten_dict"
  },
  "type": "import"
 },
 "transformers.modeling_fsmt": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "apex.normalization.FusedLayerNorm",
    "transformers.modeling_fsmt.have_fused_layer_norm",
    "transformers.modeling_fsmt.torch"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_fsmt.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.modeling_fsmt.Attention": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_fsmt.Attention.__init__": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.Attention._shape": {
  "data": {
   "lineno": 764
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.Attention._use_saved_state": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "torch.Tensor",
    "transformers.modeling_fsmt.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.Attention.forward": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "bool",
    "float",
    "list",
    "str",
    "torch.Tensor",
    "torch.nn.functional.dropout",
    "torch.nn.functional.softmax",
    "transformers.modeling_fsmt.torch",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_fsmt.DecoderLayer": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_fsmt.DecoderLayer.__init__": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "Attention",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_fsmt.LayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.DecoderLayer.forward": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "torch.nn.functional.dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.modeling_fsmt.EncoderLayer": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_fsmt.EncoderLayer.__init__": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "Attention",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_fsmt.LayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.EncoderLayer.forward": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "torch.nn.functional.dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_fsmt.FSMTDecoder": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_fsmt.FSMTDecoder.__init__": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "SinusoidalPositionalEmbedding",
    "range",
    "super",
    "torch.nn.Embedding",
    "torch.nn.Linear",
    "torch.nn.ModuleList",
    "transformers.modeling_fsmt.DecoderLayer",
    "transformers.modeling_fsmt.math"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTDecoder.forward": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "BaseModelOutputWithPastAndCrossAttentions",
    "FutureWarning",
    "decoder_layer",
    "enumerate",
    "torch.nn.functional.dropout",
    "transformers.modeling_fsmt.invert_mask",
    "transformers.modeling_fsmt.random",
    "transformers.modeling_fsmt.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTEncoder": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_fsmt.FSMTEncoder.__init__": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "SinusoidalPositionalEmbedding",
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_fsmt.EncoderLayer",
    "transformers.modeling_fsmt.math"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTEncoder.forward": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "BaseModelOutput",
    "encoder_layer",
    "torch.nn.functional.dropout",
    "transformers.modeling_fsmt.invert_mask",
    "transformers.modeling_fsmt.random",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_fsmt.FSMT_START_DOCSTRING",
    "transformers.modeling_fsmt.PretrainedFSMTModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration.__init__": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_fsmt.FSMTModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration._force_token_ids_generation": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "len",
    "next",
    "range",
    "transformers.modeling_fsmt.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration._reorder_cache": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.modeling_fsmt._reorder_buffer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration.adjust_logits_during_generation": {
  "data": {
   "lineno": 1138
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration.forward": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "Seq2SeqLMOutput",
    "add_end_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_fsmt.FSMT_GENERATION_EXAMPLE",
    "transformers.modeling_fsmt.FSMT_INPUTS_DOCSTRING",
    "transformers.modeling_fsmt._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration.get_encoder": {
  "data": {
   "lineno": 1166
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration.get_output_embeddings": {
  "data": {
   "lineno": 1169
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration.prepare_inputs_for_generation": {
  "data": {
   "lineno": 1126
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTForConditionalGeneration.resize_token_embeddings": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "super",
    "torch.nn.Embedding"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTModel": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_fsmt.FSMT_START_DOCSTRING",
    "transformers.modeling_fsmt.PretrainedFSMTModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_fsmt.FSMTModel.__init__": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "super",
    "torch.nn.Embedding",
    "transformers.modeling_fsmt.FSMTDecoder",
    "transformers.modeling_fsmt.FSMTEncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTModel.forward": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "BaseModelOutput",
    "FutureWarning",
    "Seq2SeqModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "isinstance",
    "len",
    "transformers.modeling_fsmt.FSMT_INPUTS_DOCSTRING",
    "transformers.modeling_fsmt._CONFIG_FOR_DOC",
    "transformers.modeling_fsmt._TOKENIZER_FOR_DOC",
    "transformers.modeling_fsmt._prepare_fsmt_decoder_inputs",
    "transformers.modeling_fsmt.warnings",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTModel.get_input_embeddings": {
  "data": {
   "lineno": 1013
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTModel.get_output_embeddings": {
  "data": {
   "lineno": 1019
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTModel.set_input_embeddings": {
  "data": {
   "lineno": 1016
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMTModel.set_output_embeddings": {
  "data": {
   "lineno": 1022
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.FSMT_GENERATION_EXAMPLE": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "transformers.modeling_fsmt.FSMT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 219
  },
  "type": "constant"
 },
 "transformers.modeling_fsmt.FSMT_START_DOCSTRING": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "transformers.modeling_fsmt.FusedLayerNorm": {
  "data": {
   "shadows": "apex.normalization.FusedLayerNorm"
  },
  "type": "import"
 },
 "transformers.modeling_fsmt.LayerNorm": {
  "data": {
   "lineno": 277
  },
  "type": "constant"
 },
 "transformers.modeling_fsmt.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.modeling_fsmt.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_fsmt.PretrainedFSMTModel": {
  "data": {
   "lineno": 308
  },
  "type": "class"
 },
 "transformers.modeling_fsmt.PretrainedFSMTModel._init_weights": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.PretrainedFSMTModel.dummy_inputs": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "property",
    "transformers.modeling_fsmt.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.SinusoidalPositionalEmbedding": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "torch.nn.Embedding"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_fsmt.SinusoidalPositionalEmbedding.__init__": {
  "data": {
   "lineno": 1184
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.SinusoidalPositionalEmbedding.forward": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "input",
    "input.shape",
    "super",
    "torch.Tensor",
    "typing.Any",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.SinusoidalPositionalEmbedding.get_embedding": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.modeling_fsmt.math",
    "transformers.modeling_fsmt.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.SinusoidalPositionalEmbedding.make_positions": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "int",
    "staticmethod",
    "transformers.modeling_fsmt.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.SinusoidalPositionalEmbedding.make_weight": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "hasattr",
    "super",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "transformers.modeling_fsmt.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_fsmt._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "transformers.modeling_fsmt._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "transformers.modeling_fsmt._check_shapes": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt._get_shape": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt._make_linear_from_emb": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt._prepare_fsmt_decoder_inputs": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "fill_with_neg_inf",
    "make_padding_mask",
    "shift_tokens_right",
    "transformers.modeling_fsmt.invert_mask",
    "transformers.modeling_fsmt.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt._reorder_buffer": {
  "data": {
   "lineno": 731
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.fill_with_neg_inf": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.have_fused_layer_norm": {
  "data": {
   "lineno": 273
  },
  "type": "constant"
 },
 "transformers.modeling_fsmt.invert_mask": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.logger": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "transformers.modeling_fsmt.make_padding_mask": {
  "data": {
   "lineno": 358
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_fsmt.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_fsmt.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "transformers.modeling_fsmt.shift_tokens_right": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "transformers.modeling_fsmt.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_fsmt.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_funnel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "add_start_docstrings",
    "transformers.modeling_funnel.FUNNEL_START_DOCSTRING"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_funnel.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_funnel.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_funnel.FUNNEL_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 847
  },
  "type": "constant"
 },
 "transformers.modeling_funnel.FUNNEL_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "transformers.modeling_funnel.FUNNEL_START_DOCSTRING": {
  "data": {
   "lineno": 827
  },
  "type": "constant"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "int",
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.__init__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.get_position_embeds": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "range",
    "transformers.modeling_funnel.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.init_attention_inputs": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "torch.nn.functional.pad"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.pool_tensor": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "list",
    "torch.nn.functional.avg_pool2d",
    "torch.nn.functional.max_pool2d",
    "transformers.modeling_funnel.torch",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.post_attention_pooling": {
  "data": {
   "lineno": 405
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.pre_attention_pooling": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.relative_pos": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "len",
    "transformers.modeling_funnel.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.stride_pool": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "slice",
    "transformers.modeling_funnel.torch",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.stride_pool_pos": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "transformers.modeling_funnel.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelAttentionStructure.token_type_ids_to_mat": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelBaseModel": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_funnel.FunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelBaseModel.__init__": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_funnel.FunnelEmbeddings",
    "transformers.modeling_funnel.FunnelEncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelBaseModel.forward": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "BaseModelOutput",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_funnel._TOKENIZER_FOR_DOC",
    "transformers.modeling_funnel.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelBaseModel.get_input_embeddings": {
  "data": {
   "lineno": 903
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelBaseModel.set_input_embeddings": {
  "data": {
   "lineno": 906
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelClassificationHead": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelClassificationHead.__init__": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelClassificationHead.forward": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "transformers.modeling_funnel.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelDecoder": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelDecoder.__init__": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_funnel.FunnelAttentionStructure",
    "transformers.modeling_funnel.FunnelLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelDecoder.forward": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "BaseModelOutput",
    "layer",
    "len",
    "transformers.modeling_funnel.upsample",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelDiscriminatorPredictions": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelDiscriminatorPredictions.__init__": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelDiscriminatorPredictions.forward": {
  "data": {
   "lineno": 744
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelEmbeddings": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelEmbeddings.__init__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelEmbeddings.forward": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelEncoder": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelEncoder.__init__": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "enumerate",
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_funnel.FunnelAttentionStructure",
    "transformers.modeling_funnel.FunnelLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelEncoder.forward": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "BaseModelOutput",
    "enumerate",
    "layer",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForMaskedLM": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_funnel.FunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelForMaskedLM.__init__": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_funnel.FunnelModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForMaskedLM.forward": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "MaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_funnel._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 1167
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForMultipleChoice": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_funnel.FunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelForMultipleChoice.__init__": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_funnel.FunnelBaseModel",
    "transformers.modeling_funnel.FunnelClassificationHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForMultipleChoice.forward": {
  "data": {
   "lineno": 1320,
   "symbols_in_volume": [
    "MultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_funnel._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForPreTraining": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "transformers.modeling_funnel.FunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelForPreTraining.__init__": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_funnel.FunnelDiscriminatorPredictions",
    "transformers.modeling_funnel.FunnelModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForPreTraining.forward": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.BCEWithLogitsLoss",
    "transformers.modeling_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_funnel.FunnelForPreTrainingOutput",
    "transformers.modeling_funnel._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForPreTrainingOutput": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_funnel.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelForQuestionAnswering": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_funnel.FunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_funnel.FunnelModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForQuestionAnswering.forward": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "QuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_funnel._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForSequenceClassification": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_funnel.FunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelForSequenceClassification.__init__": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_funnel.FunnelBaseModel",
    "transformers.modeling_funnel.FunnelClassificationHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForSequenceClassification.forward": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "SequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "transformers.modeling_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_funnel._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForTokenClassification": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_funnel.FunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelForTokenClassification.__init__": {
  "data": {
   "lineno": 1396,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_funnel.FunnelModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelForTokenClassification.forward": {
  "data": {
   "lineno": 1406,
   "symbols_in_volume": [
    "TokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "loss_fct.ignore_index",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_funnel._TOKENIZER_FOR_DOC",
    "transformers.modeling_funnel.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelLayer": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelLayer.__init__": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_funnel.FunnelPositionwiseFFN",
    "transformers.modeling_funnel.FunnelRelMultiheadAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelLayer.forward": {
  "data": {
   "lineno": 597
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelModel": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_funnel.FunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelModel.__init__": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_funnel.FunnelDecoder",
    "transformers.modeling_funnel.FunnelEmbeddings",
    "transformers.modeling_funnel.FunnelEncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelModel.forward": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "BaseModelOutput",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_funnel._TOKENIZER_FOR_DOC",
    "transformers.modeling_funnel.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelModel.get_input_embeddings": {
  "data": {
   "lineno": 980
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelModel.set_input_embeddings": {
  "data": {
   "lineno": 983
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelPositionwiseFFN": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelPositionwiseFFN.__init__": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelPositionwiseFFN.forward": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelPreTrainedModel": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "transformers.modeling_funnel.load_tf_weights_in_funnel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelPreTrainedModel._init_weights": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "float",
    "getattr",
    "numpy.sqrt",
    "torch.nn.init.constant_",
    "torch.nn.init.normal_",
    "torch.nn.init.uniform_"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelRelMultiheadAttention": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_funnel.FunnelRelMultiheadAttention.__init__": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "transformers.modeling_funnel.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelRelMultiheadAttention.forward": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "transformers.modeling_funnel.INF",
    "transformers.modeling_funnel.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelRelMultiheadAttention.relative_positional_attention": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "transformers.modeling_funnel._relative_shift_gather",
    "transformers.modeling_funnel.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.FunnelRelMultiheadAttention.relative_token_type_attention": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "transformers.modeling_funnel.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.INF": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "transformers.modeling_funnel.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_funnel.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_funnel.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_funnel._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "transformers.modeling_funnel._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.modeling_funnel._relative_shift_gather": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "transformers.modeling_funnel.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_funnel.load_tf_weights_in_funnel": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "any",
    "getattr",
    "int",
    "isinstance",
    "len",
    "numpy.transpose",
    "print",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.modeling_funnel.logger",
    "transformers.modeling_funnel.os",
    "transformers.modeling_funnel.re",
    "transformers.modeling_funnel.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_funnel.logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.modeling_funnel.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_funnel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_funnel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_funnel.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_funnel.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_funnel.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_funnel.upsample": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "torch.nn.functional.pad",
    "transformers.modeling_funnel.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_gpt2.Attention": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.Attention.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Conv1D",
    "set",
    "super",
    "torch.nn.Dropout",
    "transformers.modeling_gpt2.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention._attn": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "float",
    "torch.nn.Softmax",
    "transformers.modeling_gpt2.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention.forward": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "hasattr",
    "transformers.modeling_gpt2.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention.merge_heads": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention.prune_heads": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "find_pruneable_heads_and_indices",
    "len",
    "prune_conv1d_layer",
    "transformers.modeling_gpt2.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Attention.split_heads": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Block": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.Block.__init__": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "super",
    "torch.nn.LayerNorm",
    "transformers.modeling_gpt2.Attention",
    "transformers.modeling_gpt2.MLP"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.Block.forward": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModel": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_gpt2.GPT2PreTrainedModel",
    "transformers.modeling_gpt2.GPT2_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModel.__init__": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "SequenceSummary",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_gpt2.GPT2Model"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModel.forward": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "FutureWarning",
    "add_start_docstrings_to_model_forward",
    "list",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_gpt2.GPT2DoubleHeadsModelOutput",
    "transformers.modeling_gpt2.GPT2_INPUTS_DOCSTRING",
    "transformers.modeling_gpt2._CONFIG_FOR_DOC",
    "transformers.modeling_gpt2.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModel.get_output_embeddings": {
  "data": {
   "lineno": 835
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModel.prepare_inputs_for_generation": {
  "data": {
   "lineno": 838
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2DoubleHeadsModelOutput": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_gpt2.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2ForSequenceClassification": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_gpt2.GPT2PreTrainedModel",
    "transformers.modeling_gpt2.GPT2_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2ForSequenceClassification.__init__": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_gpt2.GPT2Model"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2ForSequenceClassification.forward": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "SequenceClassifierOutputWithPast",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "range",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "transformers.modeling_gpt2.GPT2_INPUTS_DOCSTRING",
    "transformers.modeling_gpt2._CONFIG_FOR_DOC",
    "transformers.modeling_gpt2._TOKENIZER_FOR_DOC",
    "transformers.modeling_gpt2.logger",
    "transformers.modeling_gpt2.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2LMHeadModel": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_gpt2.GPT2PreTrainedModel",
    "transformers.modeling_gpt2.GPT2_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2LMHeadModel.__init__": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_gpt2.GPT2Model"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2LMHeadModel.forward": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "CausalLMOutputWithPastAndCrossAttentions",
    "FutureWarning",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "list",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_gpt2.GPT2_INPUTS_DOCSTRING",
    "transformers.modeling_gpt2._CONFIG_FOR_DOC",
    "transformers.modeling_gpt2._TOKENIZER_FOR_DOC",
    "transformers.modeling_gpt2.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2LMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 707
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2LMHeadModel.prepare_inputs_for_generation": {
  "data": {
   "lineno": 710
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_gpt2.GPT2PreTrainedModel",
    "transformers.modeling_gpt2.GPT2_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2Model.__init__": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.ModuleList",
    "transformers.modeling_gpt2.Block"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model._prune_heads": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model.forward": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "BaseModelOutputWithPastAndCrossAttentions",
    "FutureWarning",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "block",
    "create_custom_forward",
    "enumerate",
    "getattr",
    "len",
    "list",
    "transformers.modeling_gpt2.GPT2_INPUTS_DOCSTRING",
    "transformers.modeling_gpt2._CONFIG_FOR_DOC",
    "transformers.modeling_gpt2._TOKENIZER_FOR_DOC",
    "transformers.modeling_gpt2.torch",
    "transformers.modeling_gpt2.warnings",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model.forward.create_custom_forward": {
  "data": {
   "lineno": 634
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model.forward.create_custom_forward.custom_forward": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "module",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model.get_input_embeddings": {
  "data": {
   "lineno": 496
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2Model.set_input_embeddings": {
  "data": {
   "lineno": 499
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2PreTrainedModel": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "transformers.modeling_gpt2.load_tf_weights_in_gpt2"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.GPT2PreTrainedModel.__init__": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2PreTrainedModel._init_weights": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "Conv1D",
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.GPT2_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 413
  },
  "type": "constant"
 },
 "transformers.modeling_gpt2.GPT2_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "transformers.modeling_gpt2.GPT2_START_DOCSTRING": {
  "data": {
   "lineno": 396
  },
  "type": "constant"
 },
 "transformers.modeling_gpt2.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.MLP": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_gpt2.MLP.__init__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "Conv1D",
    "super",
    "torch.nn.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.MLP.forward": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "transformers.modeling_gpt2._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "transformers.modeling_gpt2.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.load_tf_weights_in_gpt2": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "AssertionError",
    "ImportError",
    "getattr",
    "int",
    "len",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.modeling_gpt2.logger",
    "transformers.modeling_gpt2.os",
    "transformers.modeling_gpt2.re",
    "transformers.modeling_gpt2.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_gpt2.logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.modeling_gpt2.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_gpt2.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_layoutlm": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_layoutlm.torch"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_layoutlm.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_layoutlm.LAYOUTLM_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 542
  },
  "type": "constant"
 },
 "transformers.modeling_layoutlm.LAYOUTLM_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "transformers.modeling_layoutlm.LAYOUTLM_START_DOCSTRING": {
  "data": {
   "lineno": 527
  },
  "type": "constant"
 },
 "transformers.modeling_layoutlm.LayoutLMAttention": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMAttention.__init__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "set",
    "super",
    "transformers.modeling_layoutlm.LayoutLMSelfAttention",
    "transformers.modeling_layoutlm.LayoutLMSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMAttention.forward": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMAttention.prune_heads": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "find_pruneable_heads_and_indices",
    "len",
    "prune_linear_layer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMEmbeddings": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMEmbeddings.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "transformers.modeling_layoutlm.LayoutLMEmbeddings",
    "transformers.modeling_layoutlm.LayoutLMLayerNorm",
    "transformers.modeling_layoutlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMEmbeddings.forward": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "IndexError",
    "transformers.modeling_layoutlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMEncoder": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMEncoder.__init__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_layoutlm.LayoutLMLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMEncoder.forward": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "BaseModelOutputWithCrossAttentions",
    "create_custom_forward",
    "enumerate",
    "getattr",
    "layer_module",
    "transformers.modeling_layoutlm.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMEncoder.forward.create_custom_forward": {
  "data": {
   "lineno": 392
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMEncoder.forward.create_custom_forward.custom_forward": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMForMaskedLM": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_layoutlm.LAYOUTLM_PRETRAINED_MODEL_ARCHIVE_LIST",
    "transformers.modeling_layoutlm.LAYOUTLM_START_DOCSTRING",
    "transformers.modeling_layoutlm.LayoutLMPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMForMaskedLM.__init__": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_layoutlm.LayoutLMModel",
    "transformers.modeling_layoutlm.LayoutLMOnlyMLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMForMaskedLM.forward": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "MaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_layoutlm.LAYOUTLM_INPUTS_DOCSTRING",
    "transformers.modeling_layoutlm._CONFIG_FOR_DOC",
    "transformers.modeling_layoutlm._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMForMaskedLM.get_input_embeddings": {
  "data": {
   "lineno": 757
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 760
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMForTokenClassification": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_layoutlm.LAYOUTLM_PRETRAINED_MODEL_ARCHIVE_LIST",
    "transformers.modeling_layoutlm.LAYOUTLM_START_DOCSTRING",
    "transformers.modeling_layoutlm.LayoutLMPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMForTokenClassification.__init__": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_layoutlm.LayoutLMModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMForTokenClassification.forward": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "TokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_layoutlm.LAYOUTLM_INPUTS_DOCSTRING",
    "transformers.modeling_layoutlm._CONFIG_FOR_DOC",
    "transformers.modeling_layoutlm._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMForTokenClassification.get_input_embeddings": {
  "data": {
   "lineno": 848
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMIntermediate": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMIntermediate.__init__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMIntermediate.forward": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMLMPredictionHead": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMLMPredictionHead.__init__": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "transformers.modeling_layoutlm.LayoutLMPredictionHeadTransform",
    "transformers.modeling_layoutlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMLMPredictionHead.forward": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMLayer": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMLayer.__init__": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_layoutlm.LayoutLMAttention",
    "transformers.modeling_layoutlm.LayoutLMIntermediate",
    "transformers.modeling_layoutlm.LayoutLMOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMLayer.feed_forward_chunk": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMLayer.forward": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "apply_chunking_to_forward",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMLayerNorm": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "transformers.modeling_layoutlm.LayoutLMModel": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_layoutlm.LAYOUTLM_PRETRAINED_MODEL_ARCHIVE_LIST",
    "transformers.modeling_layoutlm.LAYOUTLM_START_DOCSTRING",
    "transformers.modeling_layoutlm.LayoutLMPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMModel.__init__": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_layoutlm.LayoutLMEmbeddings",
    "transformers.modeling_layoutlm.LayoutLMEncoder",
    "transformers.modeling_layoutlm.LayoutLMModel",
    "transformers.modeling_layoutlm.LayoutLMPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMModel._prune_heads": {
  "data": {
   "lineno": 617
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMModel.forward": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "BaseModelOutputWithPoolingAndCrossAttentions",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "list",
    "next",
    "transformers.modeling_layoutlm.LAYOUTLM_INPUTS_DOCSTRING",
    "transformers.modeling_layoutlm._CONFIG_FOR_DOC",
    "transformers.modeling_layoutlm._TOKENIZER_FOR_DOC",
    "transformers.modeling_layoutlm.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMModel.get_input_embeddings": {
  "data": {
   "lineno": 611
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMModel.set_input_embeddings": {
  "data": {
   "lineno": 614
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMOnlyMLMHead": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMOnlyMLMHead.__init__": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_layoutlm.LayoutLMLMPredictionHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMOnlyMLMHead.forward": {
  "data": {
   "lineno": 499
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMOutput": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMOutput.__init__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMOutput.forward": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMPooler": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMPooler.__init__": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Tanh"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMPooler.forward": {
  "data": {
   "lineno": 445
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMPreTrainedModel": {
  "data": {
   "lineno": 504
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMPreTrainedModel._init_weights": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "isinstance",
    "module",
    "module.bias",
    "module.bias.data.zero_",
    "module.weight.data.fill_",
    "module.weight.data.normal_",
    "torch.nn.Embedding",
    "torch.nn.Linear",
    "transformers.modeling_layoutlm.LayoutLMLayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMPredictionHeadTransform": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMPredictionHeadTransform.__init__": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMPredictionHeadTransform.forward": {
  "data": {
   "lineno": 465
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMSelfAttention": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMSelfAttention.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "int",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMSelfAttention.forward": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "torch.nn.Softmax",
    "transformers.modeling_layoutlm.math",
    "transformers.modeling_layoutlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMSelfAttention.transpose_for_scores": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMSelfOutput": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_layoutlm.LayoutLMSelfOutput.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm.LayoutLMSelfOutput.forward": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "transformers.modeling_layoutlm._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.modeling_layoutlm._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.modeling_layoutlm.logger": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.modeling_layoutlm.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_layoutlm.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_layoutlm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_longformer": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_longformer.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_longformer.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_longformer.LONGFORMER_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 1199
  },
  "type": "constant"
 },
 "transformers.modeling_longformer.LONGFORMER_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.modeling_longformer.LONGFORMER_START_DOCSTRING": {
  "data": {
   "lineno": 1182
  },
  "type": "constant"
 },
 "transformers.modeling_longformer.LongformerAttention": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerAttention.__init__": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "set",
    "super",
    "transformers.modeling_longformer.LongformerSelfAttention",
    "transformers.modeling_longformer.LongformerSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerAttention.forward": {
  "data": {
   "lineno": 961
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerAttention.prune_heads": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "find_pruneable_heads_and_indices",
    "len",
    "prune_linear_layer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerBaseModelOutput": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_longformer.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerBaseModelOutputWithPooling": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_longformer.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerClassificationHead": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerClassificationHead.__init__": {
  "data": {
   "lineno": 1675,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerClassificationHead.forward": {
  "data": {
   "lineno": 1681,
   "symbols_in_volume": [
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerEmbeddings": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerEmbeddings.__init__": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerEmbeddings.create_position_ids_from_inputs_embeds": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerEmbeddings.forward": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "transformers.modeling_longformer.create_position_ids_from_input_ids",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerEncoder": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerEncoder.__init__": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_longformer.LongformerLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerEncoder.forward": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "create_custom_forward",
    "enumerate",
    "getattr",
    "layer_module",
    "transformers.modeling_longformer.LongformerBaseModelOutput",
    "transformers.modeling_longformer.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerEncoder.forward.create_custom_forward": {
  "data": {
   "lineno": 1070
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerEncoder.forward.create_custom_forward.custom_forward": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForMaskedLM": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_longformer.LONGFORMER_START_DOCSTRING",
    "transformers.modeling_longformer.LongformerPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerForMaskedLM.__init__": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_longformer.LongformerLMHead",
    "transformers.modeling_longformer.LongformerModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForMaskedLM.forward": {
  "data": {
   "lineno": 1498,
   "symbols_in_volume": [
    "FutureWarning",
    "MaskedLMOutput",
    "add_start_docstrings_to_model_forward",
    "list",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_longformer.LONGFORMER_INPUTS_DOCSTRING",
    "transformers.modeling_longformer._CONFIG_FOR_DOC",
    "transformers.modeling_longformer.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 1495
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForMultipleChoice": {
  "data": {
   "lineno": 1916,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_longformer.LONGFORMER_START_DOCSTRING",
    "transformers.modeling_longformer.LongformerPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerForMultipleChoice.__init__": {
  "data": {
   "lineno": 1924,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_longformer.LongformerModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForMultipleChoice.forward": {
  "data": {
   "lineno": 1933,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "range",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_longformer.LONGFORMER_INPUTS_DOCSTRING",
    "transformers.modeling_longformer.LongformerMultipleChoiceModelOutput",
    "transformers.modeling_longformer._CONFIG_FOR_DOC",
    "transformers.modeling_longformer._TOKENIZER_FOR_DOC",
    "transformers.modeling_longformer._compute_global_attention_mask",
    "transformers.modeling_longformer.logger",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForQuestionAnswering": {
  "data": {
   "lineno": 1691,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_longformer.LONGFORMER_START_DOCSTRING",
    "transformers.modeling_longformer.LongformerPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1702,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_longformer.LongformerModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForQuestionAnswering.forward": {
  "data": {
   "lineno": 1711,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "len",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_longformer.LONGFORMER_INPUTS_DOCSTRING",
    "transformers.modeling_longformer.LongformerQuestionAnsweringModelOutput",
    "transformers.modeling_longformer._CONFIG_FOR_DOC",
    "transformers.modeling_longformer._compute_global_attention_mask",
    "transformers.modeling_longformer.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForSequenceClassification": {
  "data": {
   "lineno": 1582,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_longformer.LONGFORMER_START_DOCSTRING",
    "transformers.modeling_longformer.LongformerPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerForSequenceClassification.__init__": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": [
    "LongformerClassificationHead",
    "super",
    "transformers.modeling_longformer.LongformerModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForSequenceClassification.forward": {
  "data": {
   "lineno": 1602,
   "symbols_in_volume": [
    "SequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "transformers.modeling_longformer.LONGFORMER_INPUTS_DOCSTRING",
    "transformers.modeling_longformer._CONFIG_FOR_DOC",
    "transformers.modeling_longformer._TOKENIZER_FOR_DOC",
    "transformers.modeling_longformer.logger",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForTokenClassification": {
  "data": {
   "lineno": 1825,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_longformer.LONGFORMER_START_DOCSTRING",
    "transformers.modeling_longformer.LongformerPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerForTokenClassification.__init__": {
  "data": {
   "lineno": 1836,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_longformer.LongformerModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerForTokenClassification.forward": {
  "data": {
   "lineno": 1846,
   "symbols_in_volume": [
    "TokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "loss_fct.ignore_index",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_longformer.LONGFORMER_INPUTS_DOCSTRING",
    "transformers.modeling_longformer._CONFIG_FOR_DOC",
    "transformers.modeling_longformer._TOKENIZER_FOR_DOC",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerIntermediate": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerIntermediate.__init__": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerIntermediate.forward": {
  "data": {
   "lineno": 986
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerLMHead": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerLMHead.__init__": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "super",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerLMHead.forward": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerLayer": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerLayer.__init__": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_longformer.LongformerAttention",
    "transformers.modeling_longformer.LongformerIntermediate",
    "transformers.modeling_longformer.LongformerOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerLayer.ff_chunk": {
  "data": {
   "lineno": 1035
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerLayer.forward": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "apply_chunking_to_forward"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerModel": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_longformer.LONGFORMER_START_DOCSTRING",
    "transformers.modeling_longformer.LongformerPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerModel.__init__": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "super",
    "transformers.modeling_longformer.LongformerEmbeddings",
    "transformers.modeling_longformer.LongformerEncoder",
    "transformers.modeling_longformer.LongformerPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerModel._merge_to_attention_mask": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerModel._pad_to_window_size": {
  "data": {
   "lineno": 1309,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "max",
    "torch.nn.functional.pad",
    "transformers.modeling_longformer.logger",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerModel._prune_heads": {
  "data": {
   "lineno": 1301
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerModel.forward": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "transformers.modeling_longformer.LONGFORMER_INPUTS_DOCSTRING",
    "transformers.modeling_longformer.LongformerBaseModelOutputWithPooling",
    "transformers.modeling_longformer._CONFIG_FOR_DOC",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerModel.get_input_embeddings": {
  "data": {
   "lineno": 1295
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerModel.set_input_embeddings": {
  "data": {
   "lineno": 1298
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerMultipleChoiceModelOutput": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_longformer.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerOutput": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerOutput.__init__": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerOutput.forward": {
  "data": {
   "lineno": 1000
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerPooler": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerPooler.__init__": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Tanh"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerPooler.forward": {
  "data": {
   "lineno": 1124
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerPreTrainedModel": {
  "data": {
   "lineno": 1159
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerPreTrainedModel._init_weights": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "isinstance",
    "module",
    "module.bias",
    "module.bias.data.zero_",
    "module.weight.data.fill_",
    "module.weight.data.normal_",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerQuestionAnsweringModelOutput": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_longformer.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerSelfAttention": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerSelfAttention.__init__": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._chunk": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "list",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._compute_attn_output_with_global_indices": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._compute_global_attn_output_from_hidden": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "list",
    "torch.nn.functional.dropout",
    "torch.nn.functional.softmax",
    "transformers.modeling_longformer.math",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._concat_with_global_key_attn_probs": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._get_global_attn_indices": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._mask_invalid_locations": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "float",
    "staticmethod",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._pad_and_diagonalize": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "staticmethod",
    "torch.nn.functional.pad"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._pad_and_transpose_last_two_dims": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "staticmethod",
    "torch.nn.functional.pad"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._sliding_chunks_matmul_attn_probs_value": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "int",
    "torch.nn.functional.pad",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention._sliding_chunks_query_key_matmul": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "int",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfAttention.forward": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "len",
    "list",
    "torch.nn.functional.dropout",
    "torch.nn.functional.softmax",
    "transformers.modeling_longformer.math",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfOutput": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_longformer.LongformerSelfOutput.__init__": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.LongformerSelfOutput.forward": {
  "data": {
   "lineno": 929
  },
  "type": "function"
 },
 "transformers.modeling_longformer.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_longformer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_longformer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_longformer._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.modeling_longformer._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.modeling_longformer._compute_global_attention_mask": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "transformers.modeling_longformer._get_question_end_index",
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer._get_question_end_index": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "transformers.modeling_longformer.create_position_ids_from_input_ids": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "transformers.modeling_longformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_longformer.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_longformer.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.modeling_longformer.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_longformer.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_longformer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_longformer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_lxmert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_lxmert.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_lxmert.GeLU": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.GeLU.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.GeLU.forward": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LXMERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 820
  },
  "type": "constant"
 },
 "transformers.modeling_lxmert.LXMERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.modeling_lxmert.LXMERT_START_DOCSTRING": {
  "data": {
   "lineno": 797
  },
  "type": "constant"
 },
 "transformers.modeling_lxmert.LxmertAttention": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertAttention.__init__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertAttention.forward": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "torch.nn.Softmax",
    "transformers.modeling_lxmert.math",
    "transformers.modeling_lxmert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertAttention.transpose_for_scores": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertAttentionOutput": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertAttentionOutput.__init__": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertAttentionOutput.forward": {
  "data": {
   "lineno": 380
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertCrossAttentionLayer": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertCrossAttentionLayer.__init__": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_lxmert.LxmertAttention",
    "transformers.modeling_lxmert.LxmertAttentionOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertCrossAttentionLayer.forward": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertEmbeddings": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertEmbeddings.__init__": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertEmbeddings.forward": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "transformers.modeling_lxmert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertEncoder": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertEncoder.__init__": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_lxmert.LxmertLayer",
    "transformers.modeling_lxmert.LxmertVisualFeatureEncoder",
    "transformers.modeling_lxmert.LxmertXLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertEncoder.forward": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "layer_module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_lxmert.LXMERT_START_DOCSTRING",
    "transformers.modeling_lxmert.LxmertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining.__init__": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "super",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.SmoothL1Loss",
    "transformers.modeling_lxmert.LxmertModel",
    "transformers.modeling_lxmert.LxmertPreTrainingHeads",
    "transformers.modeling_lxmert.LxmertVisualAnswerHead",
    "transformers.modeling_lxmert.LxmertVisualObjHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining._get_resized_qa_labels": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "getattr",
    "min",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining._resize_qa_labels": {
  "data": {
   "lineno": 1099
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining._set_qa_logit_layer": {
  "data": {
   "lineno": 1116
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining.forward": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "FutureWarning",
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "transformers.modeling_lxmert.LXMERT_INPUTS_DOCSTRING",
    "transformers.modeling_lxmert.LxmertForPreTrainingOutput",
    "transformers.modeling_lxmert._CONFIG_FOR_DOC",
    "transformers.modeling_lxmert.torch",
    "transformers.modeling_lxmert.warnings",
    "visual_loss_fct"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining.get_qa_logit_layer": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "hasattr",
    "torch.nn.Module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTraining.resize_num_qa_labels": {
  "data": {
   "lineno": 1074
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForPreTrainingOutput": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_lxmert.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_lxmert.LXMERT_START_DOCSTRING",
    "transformers.modeling_lxmert.LxmertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "super",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_lxmert.LxmertModel",
    "transformers.modeling_lxmert.LxmertVisualAnswerHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering._get_resized_qa_labels": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "getattr",
    "min",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering._resize_qa_labels": {
  "data": {
   "lineno": 1329
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering._set_qa_logit_layer": {
  "data": {
   "lineno": 1347
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering.forward": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_lxmert.LXMERT_INPUTS_DOCSTRING",
    "transformers.modeling_lxmert.LxmertForQuestionAnsweringOutput",
    "transformers.modeling_lxmert._CONFIG_FOR_DOC",
    "transformers.modeling_lxmert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering.get_qa_logit_layer": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "hasattr",
    "torch.nn.Module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnswering.resize_num_qa_labels": {
  "data": {
   "lineno": 1304
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertForQuestionAnsweringOutput": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_lxmert.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertIntermediate": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertIntermediate.__init__": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertIntermediate.forward": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertLMPredictionHead": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertLMPredictionHead.__init__": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "transformers.modeling_lxmert.LxmertLMPredictionHead",
    "transformers.modeling_lxmert.LxmertPredictionHeadTransform",
    "transformers.modeling_lxmert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertLMPredictionHead.forward": {
  "data": {
   "lineno": 710
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertLayer": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertLayer.__init__": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_lxmert.LxmertIntermediate",
    "transformers.modeling_lxmert.LxmertOutput",
    "transformers.modeling_lxmert.LxmertSelfAttentionLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertLayer.forward": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertModel": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_lxmert.LXMERT_START_DOCSTRING",
    "transformers.modeling_lxmert.LxmertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertModel.__init__": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_lxmert.LxmertEmbeddings",
    "transformers.modeling_lxmert.LxmertEncoder",
    "transformers.modeling_lxmert.LxmertPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertModel.forward": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_lxmert.LXMERT_INPUTS_DOCSTRING",
    "transformers.modeling_lxmert.LxmertModelOutput",
    "transformers.modeling_lxmert._CONFIG_FOR_DOC",
    "transformers.modeling_lxmert._TOKENIZER_FOR_DOC",
    "transformers.modeling_lxmert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertModel.get_input_embeddings": {
  "data": {
   "lineno": 891
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertModel.set_input_embeddings": {
  "data": {
   "lineno": 894
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertModelOutput": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_lxmert.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertOutput": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertOutput.__init__": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertOutput.forward": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertPooler": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertPooler.__init__": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Tanh",
    "transformers.modeling_lxmert.LxmertPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertPooler.forward": {
  "data": {
   "lineno": 672
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertPreTrainedModel": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "transformers.modeling_lxmert.load_tf_weights_in_lxmert"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertPreTrainedModel._init_weights": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertPreTrainingHeads": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertPreTrainingHeads.__init__": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_lxmert.LxmertLMPredictionHead",
    "transformers.modeling_lxmert.LxmertPreTrainingHeads"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertPreTrainingHeads.forward": {
  "data": {
   "lineno": 768
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertPredictionHeadTransform": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertPredictionHeadTransform.__init__": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "super",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "transformers.modeling_lxmert.LxmertPredictionHeadTransform"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertPredictionHeadTransform.forward": {
  "data": {
   "lineno": 688
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertSelfAttentionLayer": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertSelfAttentionLayer.__init__": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_lxmert.LxmertAttention",
    "transformers.modeling_lxmert.LxmertAttentionOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertSelfAttentionLayer.forward": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertVisualAnswerHead": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertVisualAnswerHead.__init__": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "super",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "torch.nn.Sequential",
    "transformers.modeling_lxmert.GeLU"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertVisualAnswerHead.forward": {
  "data": {
   "lineno": 727
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertVisualFeatureEncoder": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertVisualFeatureEncoder.__init__": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertVisualFeatureEncoder.forward": {
  "data": {
   "lineno": 573
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertVisualObjHead": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertVisualObjHead.__init__": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.ModuleDict",
    "transformers.modeling_lxmert.LxmertPredictionHeadTransform"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertVisualObjHead.forward": {
  "data": {
   "lineno": 754
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertXLayer": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_lxmert.LxmertXLayer.__init__": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_lxmert.LxmertCrossAttentionLayer",
    "transformers.modeling_lxmert.LxmertIntermediate",
    "transformers.modeling_lxmert.LxmertOutput",
    "transformers.modeling_lxmert.LxmertSelfAttentionLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertXLayer.cross_att": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertXLayer.forward": {
  "data": {
   "lineno": 521
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertXLayer.output_fc": {
  "data": {
   "lineno": 510
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.LxmertXLayer.self_att": {
  "data": {
   "lineno": 504
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_lxmert.SmoothL1Loss": {
  "data": {
   "shadows": "torch.nn.SmoothL1Loss"
  },
  "type": "import"
 },
 "transformers.modeling_lxmert.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_lxmert._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "transformers.modeling_lxmert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.modeling_lxmert.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_lxmert.load_tf_weights_in_lxmert": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "ImportError",
    "any",
    "getattr",
    "int",
    "len",
    "numpy.transpose",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.modeling_lxmert.logger",
    "transformers.modeling_lxmert.os",
    "transformers.modeling_lxmert.re",
    "transformers.modeling_lxmert.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_lxmert.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.modeling_lxmert.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_lxmert.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_lxmert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_lxmert.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_lxmert.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_lxmert.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_lxmert.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_lxmert.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_marian": {
  "data": {},
  "type": "module"
 },
 "transformers.modeling_marian.MarianMTModel": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "transformers.modeling_marian.MarianMTModel.adjust_logits_during_generation": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mbart": {
  "data": {},
  "type": "module"
 },
 "transformers.modeling_mbart.MBART_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "transformers.modeling_mbart.MBartForConditionalGeneration": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "transformers.modeling_mbart._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "transformers.modeling_mbart._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "transformers.modeling_mmbt": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_mmbt.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_mmbt.MMBTForClassification": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "add_start_docstrings",
    "torch.nn.Module",
    "transformers.modeling_mmbt.MMBT_INPUTS_DOCSTRING",
    "transformers.modeling_mmbt.MMBT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mmbt.MMBTForClassification.__init__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_mmbt.MMBTModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mmbt.MMBTForClassification.forward": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "SequenceClassifierOutput",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mmbt.MMBTModel": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "add_start_docstrings",
    "torch.nn.Module",
    "transformers.modeling_mmbt.MMBT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mmbt.MMBTModel.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_mmbt.ModalEmbeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mmbt.MMBTModel.forward": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "BaseModelOutputWithPooling",
    "ValueError",
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "transformers.modeling_mmbt.MMBT_INPUTS_DOCSTRING",
    "transformers.modeling_mmbt._CONFIG_FOR_DOC",
    "transformers.modeling_mmbt.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mmbt.MMBTModel.get_input_embeddings": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "transformers.modeling_mmbt.MMBTModel.set_input_embeddings": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "transformers.modeling_mmbt.MMBT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "transformers.modeling_mmbt.MMBT_START_DOCSTRING": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "transformers.modeling_mmbt.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_mmbt.ModalEmbeddings": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mmbt.ModalEmbeddings.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mmbt.ModalEmbeddings.forward": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "transformers.modeling_mmbt.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mmbt._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.modeling_mmbt.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.modeling_mmbt.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_mmbt.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_mobilebert": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_mobilebert.NoNorm",
    "transformers.modeling_mobilebert.torch"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_mobilebert.Bottleneck": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.Bottleneck.__init__": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_mobilebert.BottleneckLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.Bottleneck.forward": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.BottleneckLayer": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.BottleneckLayer.__init__": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_mobilebert.NORM2FN"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.BottleneckLayer.forward": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_mobilebert.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_mobilebert.FFNLayer": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.FFNLayer.__init__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_mobilebert.FFNOutput",
    "transformers.modeling_mobilebert.MobileBertIntermediate"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.FFNLayer.forward": {
  "data": {
   "lineno": 476
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.FFNOutput": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.FFNOutput.__init__": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_mobilebert.NORM2FN"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.FFNOutput.forward": {
  "data": {
   "lineno": 464
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MOBILEBERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 746
  },
  "type": "constant"
 },
 "transformers.modeling_mobilebert.MOBILEBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "transformers.modeling_mobilebert.MOBILEBERT_START_DOCSTRING": {
  "data": {
   "lineno": 729
  },
  "type": "constant"
 },
 "transformers.modeling_mobilebert.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_mobilebert.MobileBertAttention": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertAttention.__init__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "set",
    "super",
    "transformers.modeling_mobilebert.MobileBertSelfAttention",
    "transformers.modeling_mobilebert.MobileBertSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertAttention.forward": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertAttention.prune_heads": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "find_pruneable_heads_and_indices",
    "len",
    "prune_linear_layer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertEmbeddings": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertEmbeddings.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.Linear",
    "transformers.modeling_mobilebert.NORM2FN",
    "transformers.modeling_mobilebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertEmbeddings.forward": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "torch.nn.functional.pad",
    "transformers.modeling_mobilebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertEncoder": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertEncoder.__init__": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_mobilebert.MobileBertLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertEncoder.forward": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "BaseModelOutput",
    "enumerate",
    "layer_module",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForMaskedLM": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_mobilebert.MobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForMaskedLM.__init__": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_mobilebert.MobileBertModel",
    "transformers.modeling_mobilebert.MobileBertOnlyMLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForMaskedLM.forward": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "FutureWarning",
    "MaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_mobilebert._CONFIG_FOR_DOC",
    "transformers.modeling_mobilebert._TOKENIZER_FOR_DOC",
    "transformers.modeling_mobilebert.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 1067
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForMaskedLM.tie_weights": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "min",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForMultipleChoice": {
  "data": {
   "lineno": 1455,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_mobilebert.MobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForMultipleChoice.__init__": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_mobilebert.MobileBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForMultipleChoice.forward": {
  "data": {
   "lineno": 1472,
   "symbols_in_volume": [
    "MultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_mobilebert._CONFIG_FOR_DOC",
    "transformers.modeling_mobilebert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForNextSentencePrediction": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_mobilebert.MobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForNextSentencePrediction.__init__": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_mobilebert.MobileBertModel",
    "transformers.modeling_mobilebert.MobileBertOnlyNSPHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForNextSentencePrediction.forward": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "FutureWarning",
    "NextSentencePredictorOutput",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_mobilebert._CONFIG_FOR_DOC",
    "transformers.modeling_mobilebert.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForPreTraining": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_mobilebert.MobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForPreTraining.__init__": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_mobilebert.MobileBertModel",
    "transformers.modeling_mobilebert.MobileBertPreTrainingHeads"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForPreTraining.forward": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_mobilebert.MobileBertForPreTrainingOutput",
    "transformers.modeling_mobilebert._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForPreTraining.get_output_embeddings": {
  "data": {
   "lineno": 949
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForPreTraining.tie_weights": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "min",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForPreTrainingOutput": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_mobilebert.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForQuestionAnswering": {
  "data": {
   "lineno": 1353,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_mobilebert.MobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_mobilebert.MobileBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForQuestionAnswering.forward": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "QuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_mobilebert._CONFIG_FOR_DOC",
    "transformers.modeling_mobilebert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForSequenceClassification": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_mobilebert.MobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_mobilebert.MobileBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForSequenceClassification.forward": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "SequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "transformers.modeling_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_mobilebert._CONFIG_FOR_DOC",
    "transformers.modeling_mobilebert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForTokenClassification": {
  "data": {
   "lineno": 1548,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_mobilebert.MobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertForTokenClassification.__init__": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_mobilebert.MobileBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertForTokenClassification.forward": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "TokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "loss_fct.ignore_index",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_mobilebert._CONFIG_FOR_DOC",
    "transformers.modeling_mobilebert._TOKENIZER_FOR_DOC",
    "transformers.modeling_mobilebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertIntermediate": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertIntermediate.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertIntermediate.forward": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertLMPredictionHead": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertLMPredictionHead.__init__": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "transformers.modeling_mobilebert.MobileBertPredictionHeadTransform",
    "transformers.modeling_mobilebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertLMPredictionHead.forward": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "transformers.modeling_mobilebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertLayer": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertLayer.__init__": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_mobilebert.Bottleneck",
    "transformers.modeling_mobilebert.FFNLayer",
    "transformers.modeling_mobilebert.MobileBertAttention",
    "transformers.modeling_mobilebert.MobileBertIntermediate",
    "transformers.modeling_mobilebert.MobileBertOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertLayer.forward": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "enumerate",
    "ffn_module",
    "transformers.modeling_mobilebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertModel": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_mobilebert.MobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertModel.__init__": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_mobilebert.MobileBertEmbeddings",
    "transformers.modeling_mobilebert.MobileBertEncoder",
    "transformers.modeling_mobilebert.MobileBertPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertModel._prune_heads": {
  "data": {
   "lineno": 832
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertModel.forward": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "BaseModelOutputWithPooling",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_mobilebert._CONFIG_FOR_DOC",
    "transformers.modeling_mobilebert._TOKENIZER_FOR_DOC",
    "transformers.modeling_mobilebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertModel.get_input_embeddings": {
  "data": {
   "lineno": 826
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertModel.set_input_embeddings": {
  "data": {
   "lineno": 829
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertOnlyMLMHead": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertOnlyMLMHead.__init__": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_mobilebert.MobileBertLMPredictionHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertOnlyMLMHead.forward": {
  "data": {
   "lineno": 653
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertOnlyNSPHead": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertOnlyNSPHead.__init__": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertOnlyNSPHead.forward": {
  "data": {
   "lineno": 1169
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertOutput": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertOutput.__init__": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_mobilebert.NORM2FN",
    "transformers.modeling_mobilebert.OutputBottleneck"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertOutput.forward": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertPooler": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertPooler.__init__": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertPooler.forward": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "transformers.modeling_mobilebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertPreTrainedModel": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "transformers.modeling_mobilebert.MOBILEBERT_PRETRAINED_MODEL_ARCHIVE_LIST",
    "transformers.modeling_mobilebert.load_tf_weights_in_mobilebert"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertPreTrainedModel._init_weights": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "transformers.modeling_mobilebert.NoNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertPreTrainingHeads": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertPreTrainingHeads.__init__": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_mobilebert.MobileBertLMPredictionHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertPreTrainingHeads.forward": {
  "data": {
   "lineno": 664
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertPredictionHeadTransform": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertPredictionHeadTransform.__init__": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_mobilebert.NORM2FN"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertPredictionHeadTransform.forward": {
  "data": {
   "lineno": 622
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertSelfAttention": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertSelfAttention.__init__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertSelfAttention.forward": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "torch.nn.Softmax",
    "transformers.modeling_mobilebert.math",
    "transformers.modeling_mobilebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertSelfAttention.transpose_for_scores": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertSelfOutput": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.MobileBertSelfOutput.__init__": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_mobilebert.NORM2FN"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.MobileBertSelfOutput.forward": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.NORM2FN": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "transformers.modeling_mobilebert.NoNorm": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.NoNorm.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "super",
    "torch.nn.Parameter",
    "transformers.modeling_mobilebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.NoNorm.forward": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_mobilebert.OutputBottleneck": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_mobilebert.OutputBottleneck.__init__": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_mobilebert.NORM2FN"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.OutputBottleneck.forward": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_mobilebert._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "transformers.modeling_mobilebert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.modeling_mobilebert.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_mobilebert.load_tf_weights_in_mobilebert": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "ImportError",
    "any",
    "getattr",
    "int",
    "len",
    "numpy.transpose",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.modeling_mobilebert.logger",
    "transformers.modeling_mobilebert.os",
    "transformers.modeling_mobilebert.re",
    "transformers.modeling_mobilebert.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.logger": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "transformers.modeling_mobilebert.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_mobilebert.mish": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "torch.nn.functional.softplus",
    "transformers.modeling_mobilebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_mobilebert.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_mobilebert.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_mobilebert.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_mobilebert.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_mobilebert.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_mobilebert.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_mobilebert.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_openai": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "torch.nn.ReLU"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_openai.ACT_FNS": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "transformers.modeling_openai.Attention": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.Attention.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "Conv1D",
    "set",
    "super",
    "torch.nn.Dropout",
    "transformers.modeling_openai.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.Attention._attn": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "torch.nn.Softmax",
    "transformers.modeling_openai.math",
    "transformers.modeling_openai.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.Attention.forward": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "transformers.modeling_openai.Attention.merge_heads": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "transformers.modeling_openai.Attention.prune_heads": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "find_pruneable_heads_and_indices",
    "len",
    "prune_conv1d_layer",
    "transformers.modeling_openai.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.Attention.split_heads": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "transformers.modeling_openai.Block": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.Block.__init__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "super",
    "torch.nn.LayerNorm",
    "transformers.modeling_openai.Attention",
    "transformers.modeling_openai.MLP"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.Block.forward": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "transformers.modeling_openai.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_openai.MLP": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.MLP.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "Conv1D",
    "super",
    "torch.nn.Dropout",
    "transformers.modeling_openai.ACT_FNS"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.MLP.forward": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "transformers.modeling_openai.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_openai.OPENAI_GPT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 350
  },
  "type": "constant"
 },
 "transformers.modeling_openai.OPENAI_GPT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.modeling_openai.OPENAI_GPT_START_DOCSTRING": {
  "data": {
   "lineno": 333
  },
  "type": "constant"
 },
 "transformers.modeling_openai.OpenAIGPTDoubleHeadsModel": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_openai.OPENAI_GPT_START_DOCSTRING",
    "transformers.modeling_openai.OpenAIGPTPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTDoubleHeadsModel.__init__": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "SequenceSummary",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_openai.OpenAIGPTModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTDoubleHeadsModel.forward": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "FutureWarning",
    "add_start_docstrings_to_model_forward",
    "list",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_openai.OPENAI_GPT_INPUTS_DOCSTRING",
    "transformers.modeling_openai.OpenAIGPTDoubleHeadsModelOutput",
    "transformers.modeling_openai._CONFIG_FOR_DOC",
    "transformers.modeling_openai.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTDoubleHeadsModel.get_output_embeddings": {
  "data": {
   "lineno": 629
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTDoubleHeadsModelOutput": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_openai.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTForSequenceClassification": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_openai.OPENAI_GPT_START_DOCSTRING",
    "transformers.modeling_openai.OpenAIGPTPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTForSequenceClassification.__init__": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_openai.OpenAIGPTModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTForSequenceClassification.forward": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "SequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "range",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "transformers.modeling_openai.OPENAI_GPT_INPUTS_DOCSTRING",
    "transformers.modeling_openai._CONFIG_FOR_DOC",
    "transformers.modeling_openai._TOKENIZER_FOR_DOC",
    "transformers.modeling_openai.logger",
    "transformers.modeling_openai.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTLMHeadModel": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_openai.OPENAI_GPT_START_DOCSTRING",
    "transformers.modeling_openai.OpenAIGPTPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTLMHeadModel.__init__": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_openai.OpenAIGPTModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTLMHeadModel.forward": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "CausalLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_openai.OPENAI_GPT_INPUTS_DOCSTRING",
    "transformers.modeling_openai._CONFIG_FOR_DOC",
    "transformers.modeling_openai._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTLMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 543
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTModel": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_openai.OPENAI_GPT_START_DOCSTRING",
    "transformers.modeling_openai.OpenAIGPTPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTModel.__init__": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.ModuleList",
    "transformers.modeling_openai.Block",
    "transformers.modeling_openai.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTModel._prune_heads": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTModel.forward": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "BaseModelOutput",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "block",
    "enumerate",
    "next",
    "transformers.modeling_openai.OPENAI_GPT_INPUTS_DOCSTRING",
    "transformers.modeling_openai._CONFIG_FOR_DOC",
    "transformers.modeling_openai._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTModel.get_input_embeddings": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTModel.set_input_embeddings": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "transformers.modeling_openai.OpenAIGPTPreTrainedModel": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "transformers.modeling_openai.load_tf_weights_in_openai_gpt"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_openai.OpenAIGPTPreTrainedModel._init_weights": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "Conv1D",
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_openai.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_openai._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "transformers.modeling_openai._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "transformers.modeling_openai.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_openai.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.modeling_openai.load_tf_weights_in_openai_gpt": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "AssertionError",
    "getattr",
    "int",
    "len",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.load",
    "numpy.prod",
    "numpy.split",
    "open",
    "range",
    "transformers.modeling_openai.json",
    "transformers.modeling_openai.logger",
    "transformers.modeling_openai.os",
    "transformers.modeling_openai.re",
    "transformers.modeling_openai.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_openai.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "transformers.modeling_openai.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_openai.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_openai.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_openai.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_openai.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_openai.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_openai.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_outputs": {
  "data": {},
  "type": "module"
 },
 "transformers.modeling_outputs.BaseModelOutput": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.BaseModelOutputWithCrossAttentions": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.BaseModelOutputWithPast": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.BaseModelOutputWithPastAndCrossAttentions": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.BaseModelOutputWithPooling": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.BaseModelOutputWithPoolingAndCrossAttentions": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.CausalLMOutput": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.CausalLMOutputWithCrossAttentions": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.CausalLMOutputWithPast": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.CausalLMOutputWithPastAndCrossAttentions": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.modeling_outputs.MaskedLMOutput": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.MultipleChoiceModelOutput": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.NextSentencePredictorOutput": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_outputs.QuestionAnsweringModelOutput": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.Seq2SeqLMOutput": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.Seq2SeqModelOutput": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.Seq2SeqQuestionAnsweringModelOutput": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.Seq2SeqSequenceClassifierOutput": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.SequenceClassifierOutput": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.SequenceClassifierOutputWithPast": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.TokenClassifierOutput": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_outputs.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_outputs.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_outputs.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_outputs.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_pegasus": {
  "data": {},
  "type": "module"
 },
 "transformers.modeling_pegasus.PegasusForConditionalGeneration": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "add_start_docstrings"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_prophetnet.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.modeling_prophetnet.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_prophetnet.FusedProphetNetLayerNorm": {
  "data": {
   "shadows": "apex.normalization.FusedProphetNetLayerNorm"
  },
  "type": "import"
 },
 "transformers.modeling_prophetnet.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_prophetnet.PROPHETNET_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "transformers.modeling_prophetnet.PROPHETNET_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.modeling_prophetnet.PROPHETNET_STANDALONE_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "transformers.modeling_prophetnet.PROPHETNET_START_DOCSTRING": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.modeling_prophetnet.ProhpetNetFeedForward": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProhpetNetFeedForward.__init__": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProhpetNetFeedForward.forward": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "torch.nn.functional.dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProhpetNetPositionalEmbeddings": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "torch.nn.Embedding"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProhpetNetPositionalEmbeddings.__init__": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProhpetNetPositionalEmbeddings._forward": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProhpetNetPositionalEmbeddings.forward": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "int",
    "super",
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetDecoder": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_prophetnet.PROPHETNET_START_DOCSTRING",
    "transformers.modeling_prophetnet.ProphetNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProphetNetDecoder.__init__": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.Embedding",
    "torch.nn.ModuleList",
    "transformers.modeling_prophetnet.ProhpetNetPositionalEmbeddings",
    "transformers.modeling_prophetnet.ProphetNetDecoderLayer",
    "transformers.modeling_prophetnet.ProphetNetLayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetDecoder.compute_buffered_relative_buckets": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "transformers.modeling_prophetnet.compute_all_stream_relative_buckets",
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetDecoder.forward": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings_to_model_forward",
    "decoder_layer",
    "enumerate",
    "range",
    "replace_return_docstrings",
    "torch.nn.functional.dropout",
    "transformers.modeling_prophetnet.PROPHETNET_STANDALONE_INPUTS_DOCSTRING",
    "transformers.modeling_prophetnet.ProphetNetDecoderModelOutput",
    "transformers.modeling_prophetnet._CONFIG_FOR_DOC",
    "transformers.modeling_prophetnet.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetDecoder.get_input_embeddings": {
  "data": {
   "lineno": 1273
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetDecoder.prepare_attention_mask": {
  "data": {
   "lineno": 1506,
   "symbols_in_volume": [
    "float",
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetDecoder.prepare_predict_attention_mask": {
  "data": {
   "lineno": 1524,
   "symbols_in_volume": [
    "transformers.modeling_prophetnet.ngram_attention_bias",
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetDecoder.set_input_embeddings": {
  "data": {
   "lineno": 1276
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetDecoderLMOutput": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_prophetnet.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProphetNetDecoderLayer": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProphetNetDecoderLayer.__init__": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_prophetnet.ProhpetNetFeedForward",
    "transformers.modeling_prophetnet.ProphetNetLayerNorm",
    "transformers.modeling_prophetnet.ProphetNetNgramProphetNetSelfAttention",
    "transformers.modeling_prophetnet.ProphetNetSelfAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetDecoderLayer.forward": {
  "data": {
   "lineno": 1081
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetDecoderModelOutput": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_prophetnet.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProphetNetEncoder": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_prophetnet.PROPHETNET_START_DOCSTRING",
    "transformers.modeling_prophetnet.ProphetNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProphetNetEncoder.__init__": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.Embedding",
    "torch.nn.ModuleList",
    "transformers.modeling_prophetnet.ProhpetNetPositionalEmbeddings",
    "transformers.modeling_prophetnet.ProphetNetEncoderLayer",
    "transformers.modeling_prophetnet.ProphetNetLayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetEncoder.forward": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "BaseModelOutput",
    "ValueError",
    "add_start_docstrings_to_model_forward",
    "encoder_layer",
    "replace_return_docstrings",
    "torch.nn.functional.dropout",
    "transformers.modeling_prophetnet.PROPHETNET_STANDALONE_INPUTS_DOCSTRING",
    "transformers.modeling_prophetnet._CONFIG_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetEncoder.get_input_embeddings": {
  "data": {
   "lineno": 1157
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetEncoder.set_input_embeddings": {
  "data": {
   "lineno": 1160
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetEncoderLayer": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProphetNetEncoderLayer.__init__": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_prophetnet.ProhpetNetFeedForward",
    "transformers.modeling_prophetnet.ProphetNetLayerNorm",
    "transformers.modeling_prophetnet.ProphetNetSelfAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetEncoderLayer.forward": {
  "data": {
   "lineno": 1047
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForCausalLM": {
  "data": {
   "lineno": 1861,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_prophetnet.PROPHETNET_START_DOCSTRING",
    "transformers.modeling_prophetnet.ProphetNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProphetNetForCausalLM.__init__": {
  "data": {
   "lineno": 1866,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_prophetnet.ProphetNetDecoder",
    "transformers.modeling_prophetnet.copy"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForCausalLM._compute_loss": {
  "data": {
   "lineno": 2009,
   "symbols_in_volume": [
    "range",
    "torch.nn.functional.log_softmax",
    "torch.nn.functional.nll_loss",
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForCausalLM._reorder_cache": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": [
    "_reorder_cache",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForCausalLM._reorder_cache._reorder_cache": {
  "data": {
   "lineno": 2054
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForCausalLM.forward": {
  "data": {
   "lineno": 1890,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "transformers.modeling_prophetnet.PROPHETNET_STANDALONE_INPUTS_DOCSTRING",
    "transformers.modeling_prophetnet.ProphetNetDecoderLMOutput",
    "transformers.modeling_prophetnet._CONFIG_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForCausalLM.get_decoder": {
  "data": {
   "lineno": 2072
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForCausalLM.get_input_embeddings": {
  "data": {
   "lineno": 1881
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForCausalLM.get_output_embeddings": {
  "data": {
   "lineno": 1887
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForCausalLM.prepare_inputs_for_generation": {
  "data": {
   "lineno": 2036
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForCausalLM.set_decoder": {
  "data": {
   "lineno": 2069
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForCausalLM.set_input_embeddings": {
  "data": {
   "lineno": 1884
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForConditionalGeneration": {
  "data": {
   "lineno": 1678,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_prophetnet.PROPHETNET_START_DOCSTRING",
    "transformers.modeling_prophetnet.ProphetNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProphetNetForConditionalGeneration.__init__": {
  "data": {
   "lineno": 1683,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_prophetnet.ProphetNetModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForConditionalGeneration._compute_loss": {
  "data": {
   "lineno": 1792,
   "symbols_in_volume": [
    "range",
    "torch.nn.functional.log_softmax",
    "torch.nn.functional.nll_loss",
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForConditionalGeneration._reorder_cache": {
  "data": {
   "lineno": 1836,
   "symbols_in_volume": [
    "_reorder_cache",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForConditionalGeneration._reorder_cache._reorder_cache": {
  "data": {
   "lineno": 1839
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForConditionalGeneration.forward": {
  "data": {
   "lineno": 1699,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "transformers.modeling_prophetnet.PROPHETNET_INPUTS_DOCSTRING",
    "transformers.modeling_prophetnet.ProphetNetSeq2SeqLMOutput",
    "transformers.modeling_prophetnet._CONFIG_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForConditionalGeneration.get_decoder": {
  "data": {
   "lineno": 1857
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForConditionalGeneration.get_encoder": {
  "data": {
   "lineno": 1854
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForConditionalGeneration.get_input_embeddings": {
  "data": {
   "lineno": 1696
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForConditionalGeneration.get_output_embeddings": {
  "data": {
   "lineno": 1693
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetForConditionalGeneration.prepare_inputs_for_generation": {
  "data": {
   "lineno": 1819
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetLayerNorm": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "ImportError",
    "apex.normalization.FusedProphetNetLayerNorm",
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetModel": {
  "data": {
   "lineno": 1560,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_prophetnet.PROPHETNET_START_DOCSTRING",
    "transformers.modeling_prophetnet.ProphetNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProphetNetModel.__init__": {
  "data": {
   "lineno": 1565,
   "symbols_in_volume": [
    "super",
    "torch.nn.Embedding",
    "transformers.modeling_prophetnet.ProphetNetDecoder",
    "transformers.modeling_prophetnet.ProphetNetEncoder",
    "transformers.modeling_prophetnet.copy"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetModel.forward": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "transformers.modeling_prophetnet.PROPHETNET_INPUTS_DOCSTRING",
    "transformers.modeling_prophetnet.ProphetNetSeq2SeqModelOutput",
    "transformers.modeling_prophetnet._CONFIG_FOR_DOC",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetModel.get_decoder": {
  "data": {
   "lineno": 1592
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetModel.get_encoder": {
  "data": {
   "lineno": 1589
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetModel.get_input_embeddings": {
  "data": {
   "lineno": 1581
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetModel.set_input_embeddings": {
  "data": {
   "lineno": 1584
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetNgramProphetNetSelfAttention": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProphetNetNgramProphetNetSelfAttention.__init__": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetNgramProphetNetSelfAttention._reshape": {
  "data": {
   "lineno": 773
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetNgramProphetNetSelfAttention.forward": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "list",
    "torch.nn.functional.dropout",
    "transformers.modeling_prophetnet.softmax",
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetNgramProphetNetSelfAttention.get_main_relative_pos_embeddings": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "transformers.modeling_prophetnet.compute_relative_buckets",
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetNgramProphetNetSelfAttention.get_predict_relative_pos_embeddings": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "transformers.modeling_prophetnet.compute_relative_buckets",
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetNgramProphetNetSelfAttention.prepare_for_onnx_export_": {
  "data": {
   "lineno": 776
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetPreTrainedModel": {
  "data": {
   "lineno": 524
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProphetNetPreTrainedModel._init_weights": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetPreTrainedModel._shift_right": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetSelfAttention": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProphetNetSelfAttention.__init__": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "int",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetSelfAttention._reshape": {
  "data": {
   "lineno": 625
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetSelfAttention.forward": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "list",
    "str",
    "torch.Tensor",
    "torch.nn.functional.dropout",
    "torch.nn.functional.softmax",
    "transformers.modeling_prophetnet.torch",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetSeq2SeqLMOutput": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_prophetnet.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProphetNetSeq2SeqLMOutput.decoder_cross_attentions": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "FutureWarning",
    "property",
    "transformers.modeling_prophetnet.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.ProphetNetSeq2SeqModelOutput": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_prophetnet.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_prophetnet.ProphetNetSeq2SeqModelOutput.decoder_cross_attentions": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "FutureWarning",
    "property",
    "transformers.modeling_prophetnet.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "transformers.modeling_prophetnet.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_prophetnet._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.modeling_prophetnet._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "transformers.modeling_prophetnet.compute_all_stream_relative_buckets": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "transformers.modeling_prophetnet.compute_relative_buckets",
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.compute_relative_buckets": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "transformers.modeling_prophetnet.math",
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.modeling_prophetnet.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_prophetnet.logger": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "transformers.modeling_prophetnet.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_prophetnet.ngram_attention_bias": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "float",
    "max",
    "range",
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_prophetnet.softmax": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "torch.nn.functional.softmax",
    "transformers.modeling_prophetnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_prophetnet.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_prophetnet.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_rag": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_rag.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.modeling_rag.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_rag.RAG_FORWARD_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 396
  },
  "type": "constant"
 },
 "transformers.modeling_rag.RAG_START_DOCSTRING": {
  "data": {
   "lineno": 358
  },
  "type": "constant"
 },
 "transformers.modeling_rag.RagModel": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_rag.RAG_START_DOCSTRING",
    "transformers.modeling_rag.RagPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_rag.RagModel.__init__": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "isinstance",
    "super",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagModel.forward": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "transformers.modeling_rag.RAG_FORWARD_INPUTS_DOCSTRING",
    "transformers.modeling_rag.RetrievAugLMOutput",
    "transformers.modeling_rag._CONFIG_FOR_DOC",
    "transformers.modeling_rag.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagPreTrainedModel": {
  "data": {
   "lineno": 208
  },
  "type": "class"
 },
 "transformers.modeling_rag.RagPreTrainedModel.from_pretrained_question_encoder_generator": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_rag.RAG_START_DOCSTRING",
    "transformers.modeling_rag.RagPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.__init__": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_rag.RagModel",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration._cat_and_pad": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "max",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.forward": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "transformers.modeling_rag.RAG_FORWARD_INPUTS_DOCSTRING",
    "transformers.modeling_rag.RetrievAugLMMarginOutput",
    "transformers.modeling_rag._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.generate": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "self",
    "self._cat_and_pad",
    "self.config.generator.pad_token_id",
    "str",
    "transformers.modeling_rag.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.generator": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.get_nll": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "_mask_pads",
    "self.config.bos_token_id",
    "self.config.generator.bos_token_id",
    "self.config.generator.pad_token_id",
    "self.config.n_docs",
    "transformers.modeling_rag.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.get_nll._mask_pads": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "self.config.generator.pad_token_id"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.question_encoder": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.retriever": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagSequenceForGeneration.set_retriever": {
  "data": {
   "lineno": 688
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_rag.RAG_START_DOCSTRING",
    "transformers.modeling_rag.RagPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_rag.RagTokenForGeneration.__init__": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "self.rag",
    "super",
    "transformers.modeling_rag.RagModel",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration._reorder_cache": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "_reorder_buffer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration._reorder_cache._reorder_buffer": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "_reorder_stacked"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration._reorder_cache._reorder_stacked": {
  "data": {
   "lineno": 1058
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.adjust_logits_during_generation": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "self.rag.generator.adjust_logits_during_generation"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.forward": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "self.config.do_marginalize",
    "self.config.label_smoothing",
    "self.config.n_docs",
    "self.config.reduce_loss",
    "self.get_nll",
    "self.marginalize",
    "self.rag",
    "transformers.modeling_rag.RAG_FORWARD_INPUTS_DOCSTRING",
    "transformers.modeling_rag.RetrievAugLMMarginOutput",
    "transformers.modeling_rag._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.generate": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "BeamSearchScorer",
    "ValueError",
    "encoder",
    "extend_enc_output",
    "next",
    "self._get_logits_processor",
    "self.beam_search",
    "self.config.early_stopping",
    "self.config.generator.bos_token_id",
    "self.config.generator.decoder_start_token_id",
    "self.config.generator.eos_token_id",
    "self.config.generator.pad_token_id",
    "self.config.length_penalty",
    "self.config.max_length",
    "self.config.n_docs",
    "self.config.num_beams",
    "self.config.num_return_sequences",
    "self.config.use_cache",
    "self.device",
    "self.generator.config.prefix",
    "self.greedy_search",
    "self.parameters",
    "self.question_encoder",
    "self.rag.generator.get_encoder",
    "self.retriever",
    "transformers.modeling_rag.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.generate.extend_enc_output": {
  "data": {
   "lineno": 1377
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.generator": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "property",
    "self.rag.generator"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.get_input_embeddings": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "self.rag.generator.get_input_embeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.get_nll": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "_mask_pads",
    "self.config.generator.pad_token_id",
    "self.config.n_docs",
    "self.marginalize",
    "transformers.modeling_rag.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.get_nll._mask_pads": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "self.config.generator.pad_token_id"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.get_output_embeddings": {
  "data": {
   "lineno": 1447,
   "symbols_in_volume": [
    "self.rag.generator.get_output_embeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.marginalize": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "self.config.n_docs",
    "transformers.modeling_rag.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.prepare_inputs_for_generation": {
  "data": {
   "lineno": 1019
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.question_encoder": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "property",
    "self.rag.question_encoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.retriever": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "property",
    "self.rag.retriever"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.set_retriever": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "self.rag.retriever"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RagTokenForGeneration.shift_tokens_right": {
  "data": {
   "lineno": 1450,
   "symbols_in_volume": [
    "self.config.decoder_start_token_id"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_rag.RetrievAugLMMarginOutput": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_rag.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_rag.RetrievAugLMOutput": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_rag.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_rag.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_rag._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.modeling_rag.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_rag.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.modeling_rag.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_reformer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_reformer.AttentionOutput": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "transformers.modeling_reformer.AxialPositionEmbeddings": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.AxialPositionEmbeddings.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "sum",
    "super",
    "torch.nn.Parameter",
    "torch.nn.ParameterList",
    "transformers.modeling_reformer._get_least_common_mult_chunk_len",
    "transformers.modeling_reformer.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.AxialPositionEmbeddings.forward": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "functools.reduce",
    "operator.mul",
    "range",
    "torch.nn.functional.dropout2d",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ChunkReformerFeedForward": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ChunkReformerFeedForward.__init__": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "super",
    "torch.nn.LayerNorm",
    "transformers.modeling_reformer.ReformerFeedForwardDense",
    "transformers.modeling_reformer.ReformerFeedForwardOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ChunkReformerFeedForward.forward": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "apply_chunking_to_forward"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ChunkReformerFeedForward.forward_chunk": {
  "data": {
   "lineno": 1405
  },
  "type": "function"
 },
 "transformers.modeling_reformer.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_reformer.EfficientAttentionMixin": {
  "data": {
   "lineno": 269
  },
  "type": "class"
 },
 "transformers.modeling_reformer.EfficientAttentionMixin._look_adjacent": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "range",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.EfficientAttentionMixin._merge_hidden_size_dims": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.EfficientAttentionMixin._split_hidden_size_dim": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "transformers.modeling_reformer.EfficientAttentionMixin._split_seq_length_dim_to": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.Function": {
  "data": {
   "shadows": "torch.autograd.function.Function"
  },
  "type": "import"
 },
 "transformers.modeling_reformer.LSHSelfAttention": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "torch.nn.Module",
    "transformers.modeling_reformer.EfficientAttentionMixin"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.LSHSelfAttention.__init__": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._attend": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "torch.nn.functional.dropout",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._compute_attn_mask": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._expand_to_indices_in_relevant_chunk": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._gather_by_expansion": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._get_relevant_hid_states_and_buckets": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "functools.reduce",
    "int",
    "isinstance",
    "operator.mul",
    "transformers.modeling_reformer._stable_argsort",
    "transformers.modeling_reformer.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._get_sorted_bucket_idx_and_undo_sorted_bucket_idx": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "transformers.modeling_reformer._stable_argsort",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._hash_vectors": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._len_and_dim_norm": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._len_norm": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._query_per_attn_head": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._set_num_buckets": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "int",
    "max",
    "transformers.modeling_reformer.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention._value_per_attn_head": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttention.forward": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "int",
    "transformers.modeling_reformer.LSHSelfAttentionOutput",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LSHSelfAttentionOutput": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "transformers.modeling_reformer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.modeling_reformer.LocalSelfAttention": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "torch.nn.Module",
    "transformers.modeling_reformer.EfficientAttentionMixin"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.LocalSelfAttention.__init__": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LocalSelfAttention._compute_attn_mask": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LocalSelfAttention._retrieve_relevant_hidden_states": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LocalSelfAttention.forward": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "torch.nn.functional.dropout",
    "transformers.modeling_reformer.LocalSelfAttentionOutput",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.LocalSelfAttentionOutput": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.modeling_reformer.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_reformer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_reformer.PositionEmbeddings": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.PositionEmbeddings.__init__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "super",
    "torch.nn.Embedding"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.PositionEmbeddings.forward": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "torch.nn.functional.dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.REFORMER_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 1904
  },
  "type": "constant"
 },
 "transformers.modeling_reformer.REFORMER_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.modeling_reformer.REFORMER_START_DOCSTRING": {
  "data": {
   "lineno": 1885
  },
  "type": "constant"
 },
 "transformers.modeling_reformer.ReformerAttention": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerAttention.__init__": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "set",
    "super",
    "torch.nn.LayerNorm",
    "transformers.modeling_reformer.LSHSelfAttention",
    "transformers.modeling_reformer.LocalSelfAttention",
    "transformers.modeling_reformer.ReformerSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerAttention.forward": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "hasattr",
    "transformers.modeling_reformer.AttentionOutput",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerBackwardOutput": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "transformers.modeling_reformer.ReformerClassificationHead": {
  "data": {
   "lineno": 2457,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerClassificationHead.__init__": {
  "data": {
   "lineno": 2460,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerClassificationHead.forward": {
  "data": {
   "lineno": 2466,
   "symbols_in_volume": [
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerEmbeddings": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerEmbeddings.__init__": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "super",
    "torch.nn.Embedding",
    "transformers.modeling_reformer.AxialPositionEmbeddings",
    "transformers.modeling_reformer.PositionEmbeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerEmbeddings.forward": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "torch.nn.functional.dropout",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerEncoder": {
  "data": {
   "lineno": 1686,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerEncoder.__init__": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.LayerNorm",
    "torch.nn.ModuleList",
    "transformers.modeling_reformer.ReformerLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerEncoder.forward": {
  "data": {
   "lineno": 1696,
   "symbols_in_volume": [
    "len",
    "range",
    "torch.nn.functional.dropout",
    "transformers.modeling_reformer.ReformerEncoderOutput",
    "transformers.modeling_reformer._ReversibleFunction",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerEncoderOutput": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "transformers.modeling_reformer.ReformerFeedForwardDense": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerFeedForwardDense.__init__": {
  "data": {
   "lineno": 1356,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerFeedForwardDense.forward": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "torch.nn.functional.dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerFeedForwardOutput": {
  "data": {
   "lineno": 1374,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerFeedForwardOutput.__init__": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerFeedForwardOutput.forward": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "torch.nn.functional.dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerForMaskedLM": {
  "data": {
   "lineno": 2297,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_reformer.REFORMER_START_DOCSTRING",
    "transformers.modeling_reformer.ReformerPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerForMaskedLM.__init__": {
  "data": {
   "lineno": 2299,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_reformer.ReformerModel",
    "transformers.modeling_reformer.ReformerOnlyLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerForMaskedLM.forward": {
  "data": {
   "lineno": 2312,
   "symbols_in_volume": [
    "MaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_reformer.REFORMER_INPUTS_DOCSTRING",
    "transformers.modeling_reformer._CONFIG_FOR_DOC",
    "transformers.modeling_reformer._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 2309
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerForQuestionAnswering": {
  "data": {
   "lineno": 2476,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_reformer.REFORMER_START_DOCSTRING",
    "transformers.modeling_reformer.ReformerPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerForQuestionAnswering.__init__": {
  "data": {
   "lineno": 2484,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_reformer.ReformerModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerForQuestionAnswering.forward": {
  "data": {
   "lineno": 2494,
   "symbols_in_volume": [
    "QuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_reformer.REFORMER_INPUTS_DOCSTRING",
    "transformers.modeling_reformer._CONFIG_FOR_DOC",
    "transformers.modeling_reformer._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerForSequenceClassification": {
  "data": {
   "lineno": 2373,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_reformer.REFORMER_START_DOCSTRING",
    "transformers.modeling_reformer.ReformerPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerForSequenceClassification.__init__": {
  "data": {
   "lineno": 2381,
   "symbols_in_volume": [
    "ReformerClassificationHead",
    "super",
    "transformers.modeling_reformer.ReformerModel",
    "transformers.modeling_reformer.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerForSequenceClassification.forward": {
  "data": {
   "lineno": 2392,
   "symbols_in_volume": [
    "SequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "transformers.modeling_reformer.REFORMER_INPUTS_DOCSTRING",
    "transformers.modeling_reformer._CONFIG_FOR_DOC",
    "transformers.modeling_reformer._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerLayer": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerLayer.__init__": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_reformer.ChunkReformerFeedForward",
    "transformers.modeling_reformer.ReformerAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerLayer._init_attention_seed": {
  "data": {
   "lineno": 1422,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "len",
    "transformers.modeling_reformer.sys",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerLayer._init_feed_forward_seed": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "len",
    "transformers.modeling_reformer.sys",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerLayer.backward_pass": {
  "data": {
   "lineno": 1510,
   "symbols_in_volume": [
    "transformers.modeling_reformer.ReformerBackwardOutput",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerLayer.forward": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "transformers.modeling_reformer.ReformerOutput",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModel": {
  "data": {
   "lineno": 1965,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_reformer.REFORMER_START_DOCSTRING",
    "transformers.modeling_reformer.ReformerPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerModel.__init__": {
  "data": {
   "lineno": 1970,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_reformer.ReformerEmbeddings",
    "transformers.modeling_reformer.ReformerEncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModel._pad_to_mult_of_chunk_length": {
  "data": {
   "lineno": 2123,
   "symbols_in_volume": [
    "transformers.modeling_reformer.logger",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModel._prune_heads": {
  "data": {
   "lineno": 1988,
   "symbols_in_volume": [
    "layer",
    "layer.attention.prune_heads"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModel.forward": {
  "data": {
   "lineno": 1996,
   "symbols_in_volume": [
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "len",
    "transformers.modeling_reformer.REFORMER_INPUTS_DOCSTRING",
    "transformers.modeling_reformer.ReformerModelOutput",
    "transformers.modeling_reformer._CONFIG_FOR_DOC",
    "transformers.modeling_reformer._TOKENIZER_FOR_DOC",
    "transformers.modeling_reformer._get_least_common_mult_chunk_len",
    "transformers.modeling_reformer._get_min_chunk_len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModel.get_input_embeddings": {
  "data": {
   "lineno": 1982
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModel.set_input_embeddings": {
  "data": {
   "lineno": 1985
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModelOutput": {
  "data": {
   "lineno": 1806,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_reformer.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerModelWithLMHead": {
  "data": {
   "lineno": 2180,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_reformer.REFORMER_START_DOCSTRING",
    "transformers.modeling_reformer.ReformerPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerModelWithLMHead.__init__": {
  "data": {
   "lineno": 2182,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_reformer.ReformerModel",
    "transformers.modeling_reformer.ReformerOnlyLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModelWithLMHead._reorder_cache": {
  "data": {
   "lineno": 2282
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModelWithLMHead.forward": {
  "data": {
   "lineno": 2200,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_reformer.REFORMER_INPUTS_DOCSTRING",
    "transformers.modeling_reformer.ReformerModelWithLMHeadOutput",
    "transformers.modeling_reformer._CONFIG_FOR_DOC",
    "transformers.modeling_reformer._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModelWithLMHead.get_output_embeddings": {
  "data": {
   "lineno": 2197
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModelWithLMHead.prepare_inputs_for_generation": {
  "data": {
   "lineno": 2268
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerModelWithLMHeadOutput": {
  "data": {
   "lineno": 1844,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_reformer.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerOnlyLMHead": {
  "data": {
   "lineno": 1747,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerOnlyLMHead.__init__": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerOnlyLMHead.forward": {
  "data": {
   "lineno": 1760,
   "symbols_in_volume": [
    "apply_chunking_to_forward"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerOnlyLMHead.forward_chunk": {
  "data": {
   "lineno": 1763
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerOutput": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "transformers.modeling_reformer.ReformerPreTrainedModel": {
  "data": {
   "lineno": 1768
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerPreTrainedModel._init_weights": {
  "data": {
   "lineno": 1787,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "transformers.modeling_reformer.AxialPositionEmbeddings",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerPreTrainedModel.dummy_inputs": {
  "data": {
   "lineno": 1777,
   "symbols_in_volume": [
    "property",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerSelfOutput": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReformerSelfOutput.__init__": {
  "data": {
   "lineno": 1249,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReformerSelfOutput.forward": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "torch.nn.functional.dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReverseSort": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "torch.autograd.function.Function"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer.ReverseSort.backward": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.ReverseSort.forward": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_reformer._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.modeling_reformer._ReversibleFunction": {
  "data": {
   "lineno": 1574,
   "symbols_in_volume": [
    "torch.autograd.function.Function"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_reformer._ReversibleFunction.backward": {
  "data": {
   "lineno": 1639,
   "symbols_in_volume": [
    "enumerate",
    "layer",
    "layer.backward_pass",
    "len",
    "staticmethod",
    "transformers.modeling_reformer.ReformerBackwardOutput",
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer._ReversibleFunction.forward": {
  "data": {
   "lineno": 1581,
   "symbols_in_volume": [
    "enumerate",
    "layer",
    "staticmethod",
    "transformers.modeling_reformer.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.modeling_reformer._get_least_common_mult_chunk_len": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "numpy.lcm",
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer._get_min_chunk_len": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "min",
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer._stable_argsort": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "transformers.modeling_reformer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_reformer.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_reformer.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.modeling_reformer.mul": {
  "data": {
   "shadows": "operator.mul"
  },
  "type": "import"
 },
 "transformers.modeling_reformer.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "transformers.modeling_reformer.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_reformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_reformer.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "transformers.modeling_reformer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.modeling_reformer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_retribert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_retribert.RETRIBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.modeling_retribert.RETRIBERT_START_DOCSTRING": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "transformers.modeling_retribert.RetriBertModel": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_retribert.RETRIBERT_START_DOCSTRING",
    "transformers.modeling_retribert.RetriBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_retribert.RetriBertModel.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "BertModel",
    "super",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_retribert.RetriBertModel.embed_answers": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "transformers.modeling_retribert.RetriBertModel.embed_questions": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "transformers.modeling_retribert.RetriBertModel.embed_sentences_checkpointed": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "range",
    "sent_encoder",
    "sent_encoder.config.num_hidden_layers",
    "sent_encoder.embeddings",
    "sent_encoder.get_extended_attention_mask",
    "torch.utils.checkpoint.checkpoint",
    "transformers.modeling_retribert.math",
    "transformers.modeling_retribert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_retribert.RetriBertModel.embed_sentences_checkpointed.partial_encode": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "sent_encoder.encoder",
    "sent_encoder.pooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_retribert.RetriBertModel.forward": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "transformers.modeling_retribert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_retribert.RetriBertPreTrainedModel": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "transformers.modeling_retribert.RetriBertPreTrainedModel._init_weights": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_retribert.checkpoint": {
  "data": {
   "shadows": "torch.utils.checkpoint"
  },
  "type": "import"
 },
 "transformers.modeling_retribert.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.modeling_retribert.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_retribert.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_retribert.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_roberta": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_roberta.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_roberta.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_roberta.ROBERTA_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 508
  },
  "type": "constant"
 },
 "transformers.modeling_roberta.ROBERTA_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "transformers.modeling_roberta.ROBERTA_START_DOCSTRING": {
  "data": {
   "lineno": 491
  },
  "type": "constant"
 },
 "transformers.modeling_roberta.RobertaAttention": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaAttention.__init__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "set",
    "super",
    "transformers.modeling_roberta.RobertaSelfAttention",
    "transformers.modeling_roberta.RobertaSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaAttention.forward": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaAttention.prune_heads": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "find_pruneable_heads_and_indices",
    "len",
    "prune_linear_layer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaClassificationHead": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaClassificationHead.__init__": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaClassificationHead.forward": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "transformers.modeling_roberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEmbeddings": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaEmbeddings.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "transformers.modeling_roberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEmbeddings.create_position_ids_from_inputs_embeds": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "transformers.modeling_roberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEmbeddings.forward": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "create_position_ids_from_input_ids",
    "transformers.modeling_roberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEncoder": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaEncoder.__init__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_roberta.RobertaLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEncoder.forward": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "BaseModelOutputWithCrossAttentions",
    "create_custom_forward",
    "enumerate",
    "getattr",
    "layer_module",
    "transformers.modeling_roberta.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEncoder.forward.create_custom_forward": {
  "data": {
   "lineno": 406
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaEncoder.forward.create_custom_forward.custom_forward": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForCausalLM": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_roberta.RobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForCausalLM.__init__": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "RobertaLMHead",
    "super",
    "transformers.modeling_roberta.RobertaModel",
    "transformers.modeling_roberta.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForCausalLM.forward": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "CausalLMOutputWithCrossAttentions",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_roberta._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForCausalLM.get_output_embeddings": {
  "data": {
   "lineno": 729
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForCausalLM.prepare_inputs_for_generation": {
  "data": {
   "lineno": 821
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMaskedLM": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_roberta.RobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForMaskedLM.__init__": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "RobertaLMHead",
    "super",
    "transformers.modeling_roberta.RobertaModel",
    "transformers.modeling_roberta.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMaskedLM.forward": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "FutureWarning",
    "MaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "list",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_roberta._CONFIG_FOR_DOC",
    "transformers.modeling_roberta._TOKENIZER_FOR_DOC",
    "transformers.modeling_roberta.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 850
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMultipleChoice": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_roberta.RobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForMultipleChoice.__init__": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_roberta.RobertaModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForMultipleChoice.forward": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "MultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_roberta._CONFIG_FOR_DOC",
    "transformers.modeling_roberta._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForQuestionAnswering": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_roberta.RobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_roberta.RobertaModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForQuestionAnswering.forward": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "QuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_roberta._CONFIG_FOR_DOC",
    "transformers.modeling_roberta._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForSequenceClassification": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_roberta.RobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForSequenceClassification.__init__": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "RobertaClassificationHead",
    "super",
    "transformers.modeling_roberta.RobertaModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForSequenceClassification.forward": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "SequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "transformers.modeling_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_roberta._CONFIG_FOR_DOC",
    "transformers.modeling_roberta._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForTokenClassification": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_roberta.RobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaForTokenClassification.__init__": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_roberta.RobertaModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaForTokenClassification.forward": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "TokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "loss_fct.ignore_index",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_roberta._CONFIG_FOR_DOC",
    "transformers.modeling_roberta._TOKENIZER_FOR_DOC",
    "transformers.modeling_roberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaIntermediate": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaIntermediate.__init__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaIntermediate.forward": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaLMHead": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaLMHead.__init__": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "super",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "transformers.modeling_roberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaLMHead.forward": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "gelu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaLayer": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaLayer.__init__": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_roberta.RobertaAttention",
    "transformers.modeling_roberta.RobertaIntermediate",
    "transformers.modeling_roberta.RobertaOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaLayer.feed_forward_chunk": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaLayer.forward": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "apply_chunking_to_forward",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaModel": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_roberta.RobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaModel.__init__": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_roberta.RobertaEmbeddings",
    "transformers.modeling_roberta.RobertaEncoder",
    "transformers.modeling_roberta.RobertaPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaModel._prune_heads": {
  "data": {
   "lineno": 600
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaModel.forward": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "BaseModelOutputWithPoolingAndCrossAttentions",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_roberta._CONFIG_FOR_DOC",
    "transformers.modeling_roberta._TOKENIZER_FOR_DOC",
    "transformers.modeling_roberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaModel.get_input_embeddings": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaModel.set_input_embeddings": {
  "data": {
   "lineno": 597
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaOutput": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaOutput.__init__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaOutput.forward": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaPooler": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaPooler.__init__": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Tanh"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaPooler.forward": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaPreTrainedModel": {
  "data": {
   "lineno": 468
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaPreTrainedModel._init_weights": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "isinstance",
    "module",
    "module.bias",
    "module.bias.data.zero_",
    "module.weight.data.fill_",
    "module.weight.data.normal_",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaSelfAttention": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaSelfAttention.__init__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "int",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaSelfAttention.forward": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "torch.nn.Softmax",
    "transformers.modeling_roberta.math",
    "transformers.modeling_roberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaSelfAttention.transpose_for_scores": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaSelfOutput": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_roberta.RobertaSelfOutput.__init__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.RobertaSelfOutput.forward": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "transformers.modeling_roberta._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "transformers.modeling_roberta._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.modeling_roberta.create_position_ids_from_input_ids": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "transformers.modeling_roberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_roberta.logger": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "transformers.modeling_roberta.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_roberta.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_roberta.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_roberta.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_squeezebert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_squeezebert.ConvActivation": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.ConvActivation.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "super",
    "torch.nn.Conv1d"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.ConvActivation.forward": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.ConvDropoutLayerNorm": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.ConvDropoutLayerNorm.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "super",
    "torch.nn.Conv1d",
    "torch.nn.Dropout",
    "transformers.modeling_squeezebert.SqueezeBertLayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.ConvDropoutLayerNorm.forward": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_squeezebert.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_squeezebert.MatMulWrapper": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "transformers.modeling_squeezebert.torch"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.MatMulWrapper.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.MatMulWrapper.forward": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "transformers.modeling_squeezebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SQUEEZEBERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 442
  },
  "type": "constant"
 },
 "transformers.modeling_squeezebert.SQUEEZEBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.modeling_squeezebert.SQUEEZEBERT_START_DOCSTRING": {
  "data": {
   "lineno": 399
  },
  "type": "constant"
 },
 "transformers.modeling_squeezebert.SqueezeBertEmbeddings": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.SqueezeBertEmbeddings.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "transformers.modeling_squeezebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertEmbeddings.forward": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "transformers.modeling_squeezebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertEncoder": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.SqueezeBertEncoder.__init__": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_squeezebert.SqueezeBertModule"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertEncoder.forward": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "BaseModelOutput",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertForMaskedLM": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_squeezebert.SQUEEZEBERT_START_DOCSTRING",
    "transformers.modeling_squeezebert.SqueezeBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.SqueezeBertForMaskedLM.__init__": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_squeezebert.SqueezeBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertForMaskedLM.forward": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "MaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_squeezebert.SQUEEZEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_squeezebert._CONFIG_FOR_DOC",
    "transformers.modeling_squeezebert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 605
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertForMultipleChoice": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_squeezebert.SQUEEZEBERT_START_DOCSTRING",
    "transformers.modeling_squeezebert.SqueezeBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.SqueezeBertForMultipleChoice.__init__": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_squeezebert.SqueezeBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertForMultipleChoice.forward": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "MultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_squeezebert.SQUEEZEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_squeezebert._CONFIG_FOR_DOC",
    "transformers.modeling_squeezebert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertForQuestionAnswering": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_squeezebert.SQUEEZEBERT_START_DOCSTRING",
    "transformers.modeling_squeezebert.SqueezeBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.SqueezeBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_squeezebert.SqueezeBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertForQuestionAnswering.forward": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "QuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_squeezebert.SQUEEZEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_squeezebert._CONFIG_FOR_DOC",
    "transformers.modeling_squeezebert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertForSequenceClassification": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_squeezebert.SQUEEZEBERT_START_DOCSTRING",
    "transformers.modeling_squeezebert.SqueezeBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.SqueezeBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_squeezebert.SqueezeBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertForSequenceClassification.forward": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "SequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "transformers.modeling_squeezebert.SQUEEZEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_squeezebert._CONFIG_FOR_DOC",
    "transformers.modeling_squeezebert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertForTokenClassification": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_squeezebert.SQUEEZEBERT_START_DOCSTRING",
    "transformers.modeling_squeezebert.SqueezeBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.SqueezeBertForTokenClassification.__init__": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_squeezebert.SqueezeBertModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertForTokenClassification.forward": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "TokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "loss_fct.ignore_index",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_squeezebert.SQUEEZEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_squeezebert._CONFIG_FOR_DOC",
    "transformers.modeling_squeezebert._TOKENIZER_FOR_DOC",
    "transformers.modeling_squeezebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertLayerNorm": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "torch.nn.LayerNorm"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.SqueezeBertLayerNorm.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "torch.nn.LayerNorm.__init__"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertLayerNorm.forward": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "torch.nn.LayerNorm.forward"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertModel": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_squeezebert.SQUEEZEBERT_START_DOCSTRING",
    "transformers.modeling_squeezebert.SqueezeBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.SqueezeBertModel.__init__": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_squeezebert.SqueezeBertEmbeddings",
    "transformers.modeling_squeezebert.SqueezeBertEncoder",
    "transformers.modeling_squeezebert.SqueezeBertPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertModel._prune_heads": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertModel.forward": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "BaseModelOutputWithPooling",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_squeezebert.SQUEEZEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_squeezebert._CONFIG_FOR_DOC",
    "transformers.modeling_squeezebert._TOKENIZER_FOR_DOC",
    "transformers.modeling_squeezebert.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertModel.get_input_embeddings": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertModel.set_input_embeddings": {
  "data": {
   "lineno": 510
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertModule": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.SqueezeBertModule.__init__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_squeezebert.ConvActivation",
    "transformers.modeling_squeezebert.ConvDropoutLayerNorm",
    "transformers.modeling_squeezebert.SqueezeBertSelfAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertModule.forward": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertPooler": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.SqueezeBertPooler.__init__": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Tanh"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertPooler.forward": {
  "data": {
   "lineno": 367
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertPreTrainedModel": {
  "data": {
   "lineno": 376
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.SqueezeBertPreTrainedModel._init_weights": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Conv1d",
    "torch.nn.Embedding",
    "torch.nn.Linear",
    "transformers.modeling_squeezebert.SqueezeBertLayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertSelfAttention": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_squeezebert.SqueezeBertSelfAttention.__init__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "super",
    "torch.nn.Conv1d",
    "torch.nn.Dropout",
    "torch.nn.Softmax",
    "transformers.modeling_squeezebert.MatMulWrapper"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertSelfAttention.forward": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "transformers.modeling_squeezebert.math"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertSelfAttention.transpose_for_scores": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertSelfAttention.transpose_key_for_scores": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert.SqueezeBertSelfAttention.transpose_output": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "transformers.modeling_squeezebert._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.modeling_squeezebert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "transformers.modeling_squeezebert.logger": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "transformers.modeling_squeezebert.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_squeezebert.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_squeezebert.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_t5": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_t5.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_t5.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_t5.T5Attention": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_t5.T5Attention.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "set",
    "super",
    "torch.nn.Embedding",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Attention._relative_position_bucket": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.modeling_t5.math",
    "transformers.modeling_t5.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Attention.compute_bias": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "transformers.modeling_t5.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Attention.forward": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "ValueError",
    "input",
    "input.size",
    "len",
    "shape",
    "torch.nn.functional.dropout",
    "torch.nn.functional.softmax",
    "transformers.modeling_t5.torch",
    "unshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Attention.forward.shape": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Attention.forward.unshape": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Attention.prune_heads": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "find_pruneable_heads_and_indices",
    "len",
    "prune_linear_layer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Block": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_t5.T5Block.__init__": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "super",
    "torch.nn.ModuleList",
    "transformers.modeling_t5.T5LayerCrossAttention",
    "transformers.modeling_t5.T5LayerFF",
    "transformers.modeling_t5.T5LayerSelfAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Block.forward": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5DenseReluDense": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_t5.T5DenseReluDense.__init__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5DenseReluDense.forward": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "torch.nn.functional.relu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_t5.T5PreTrainedModel",
    "transformers.modeling_t5.T5_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.__init__": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "super",
    "torch.nn.Embedding",
    "torch.nn.Linear",
    "transformers.modeling_t5.T5Stack",
    "transformers.modeling_t5.copy"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration._reorder_cache": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "len",
    "transformers.modeling_t5.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.forward": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "BaseModelOutput",
    "FutureWarning",
    "Seq2SeqLMOutput",
    "add_start_docstrings_to_model_forward",
    "isinstance",
    "len",
    "list",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_t5.T5_INPUTS_DOCSTRING",
    "transformers.modeling_t5._CONFIG_FOR_DOC",
    "transformers.modeling_t5.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.get_decoder": {
  "data": {
   "lineno": 1103
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.get_encoder": {
  "data": {
   "lineno": 1100
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.get_input_embeddings": {
  "data": {
   "lineno": 1089
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.get_output_embeddings": {
  "data": {
   "lineno": 1097
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.prepare_inputs_for_generation": {
  "data": {
   "lineno": 1253
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5ForConditionalGeneration.set_input_embeddings": {
  "data": {
   "lineno": 1092
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerCrossAttention": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_t5.T5LayerCrossAttention.__init__": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "transformers.modeling_t5.T5Attention",
    "transformers.modeling_t5.T5LayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerCrossAttention.forward": {
  "data": {
   "lineno": 458
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerFF": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_t5.T5LayerFF.__init__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "transformers.modeling_t5.T5DenseReluDense",
    "transformers.modeling_t5.T5LayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerFF.forward": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerNorm": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_t5.T5LayerNorm.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "super",
    "torch.nn.Parameter",
    "transformers.modeling_t5.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerNorm.forward": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "transformers.modeling_t5.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerSelfAttention": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_t5.T5LayerSelfAttention.__init__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "transformers.modeling_t5.T5Attention",
    "transformers.modeling_t5.T5LayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5LayerSelfAttention.forward": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Model": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_t5.T5PreTrainedModel",
    "transformers.modeling_t5.T5_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_t5.T5Model.__init__": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "super",
    "torch.nn.Embedding",
    "transformers.modeling_t5.T5Stack",
    "transformers.modeling_t5.copy"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Model._prune_heads": {
  "data": {
   "lineno": 954
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Model.forward": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "BaseModelOutput",
    "FutureWarning",
    "Seq2SeqModelOutput",
    "add_start_docstrings_to_model_forward",
    "isinstance",
    "len",
    "list",
    "replace_return_docstrings",
    "transformers.modeling_t5.T5_INPUTS_DOCSTRING",
    "transformers.modeling_t5._CONFIG_FOR_DOC",
    "transformers.modeling_t5.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Model.get_decoder": {
  "data": {
   "lineno": 951
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Model.get_encoder": {
  "data": {
   "lineno": 948
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Model.get_input_embeddings": {
  "data": {
   "lineno": 940
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Model.set_input_embeddings": {
  "data": {
   "lineno": 943
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5PreTrainedModel": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "transformers.modeling_t5.load_tf_weights_in_t5"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_t5.T5PreTrainedModel._init_weights": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "transformers.modeling_t5.T5Attention",
    "transformers.modeling_t5.T5DenseReluDense",
    "transformers.modeling_t5.T5LayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5PreTrainedModel._shift_right": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "transformers.modeling_t5.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5PreTrainedModel.dummy_inputs": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "property",
    "transformers.modeling_t5.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Stack": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "transformers.modeling_t5.T5PreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_t5.T5Stack.__init__": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "bool",
    "range",
    "super",
    "torch.nn.Dropout",
    "torch.nn.ModuleList",
    "transformers.modeling_t5.T5Block",
    "transformers.modeling_t5.T5LayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Stack.forward": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "BaseModelOutputWithPastAndCrossAttentions",
    "ValueError",
    "enumerate",
    "layer_module",
    "len",
    "transformers.modeling_t5.torch",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Stack.get_input_embeddings": {
  "data": {
   "lineno": 668
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Stack.get_output_embeddings": {
  "data": {
   "lineno": 671
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5Stack.set_input_embeddings": {
  "data": {
   "lineno": 674
  },
  "type": "function"
 },
 "transformers.modeling_t5.T5_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 843
  },
  "type": "constant"
 },
 "transformers.modeling_t5.T5_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.modeling_t5.T5_START_DOCSTRING": {
  "data": {
   "lineno": 821
  },
  "type": "constant"
 },
 "transformers.modeling_t5._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.modeling_t5._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.modeling_t5.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.modeling_t5.load_tf_weights_in_t5": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "ImportError",
    "any",
    "getattr",
    "int",
    "len",
    "numpy.float32",
    "numpy.transpose",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.modeling_t5.logger",
    "transformers.modeling_t5.os",
    "transformers.modeling_t5.re",
    "transformers.modeling_t5.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_t5.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.modeling_t5.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_t5.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_t5.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_t5.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_t5.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_t5.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_t5.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_t5.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_tf_albert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_albert.ALBERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 694
  },
  "type": "constant"
 },
 "transformers.modeling_tf_albert.ALBERT_START_DOCSTRING": {
  "data": {
   "lineno": 658
  },
  "type": "constant"
 },
 "transformers.modeling_tf_albert.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_albert.TFAlbertAttention": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertAttention.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "get_initializer",
    "int",
    "set",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertAttention.call": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.math.sqrt",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertAttention.prune_heads": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertAttention.transpose_for_scores": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertEmbeddings": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertEmbeddings.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertEmbeddings._embedding": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.fill",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertEmbeddings._linear": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.matmul",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertEmbeddings.build": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertEmbeddings.call": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForMaskedLM": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_albert.ALBERT_START_DOCSTRING",
    "transformers.modeling_tf_albert.TFAlbertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertForMaskedLM.__init__": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_albert.TFAlbertMLMHead",
    "transformers.modeling_tf_albert.TFAlbertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForMaskedLM.call": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "TFMaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_albert.ALBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_albert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_albert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 854
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForMultipleChoice": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_albert.ALBERT_START_DOCSTRING",
    "transformers.modeling_tf_albert.TFAlbertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertForMultipleChoice.__init__": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_albert.TFAlbertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForMultipleChoice.call": {
  "data": {
   "lineno": 1222,
   "symbols_in_volume": [
    "TFMultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.reshape",
    "transformers.modeling_tf_albert.ALBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_albert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_albert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForMultipleChoice.dummy_inputs": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForPreTraining": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_albert.ALBERT_START_DOCSTRING",
    "transformers.modeling_tf_albert.TFAlbertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertForPreTraining.__init__": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "TFAlbertSOPHead",
    "super",
    "transformers.modeling_tf_albert.TFAlbertMLMHead",
    "transformers.modeling_tf_albert.TFAlbertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForPreTraining.call": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "transformers.modeling_tf_albert.ALBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_albert.TFAlbertForPreTrainingOutput",
    "transformers.modeling_tf_albert._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForPreTraining.get_output_embeddings": {
  "data": {
   "lineno": 785
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForPreTrainingOutput": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertForQuestionAnswering": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_albert.ALBERT_START_DOCSTRING",
    "transformers.modeling_tf_albert.TFAlbertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1105,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_albert.TFAlbertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForQuestionAnswering.call": {
  "data": {
   "lineno": 1114,
   "symbols_in_volume": [
    "TFQuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "tensorflow.split",
    "tensorflow.squeeze",
    "transformers.modeling_tf_albert.ALBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_albert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_albert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForSequenceClassification": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_albert.ALBERT_START_DOCSTRING",
    "transformers.modeling_tf_albert.TFAlbertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertForSequenceClassification.__init__": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_albert.TFAlbertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForSequenceClassification.call": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "TFSequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_albert.ALBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_albert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_albert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForTokenClassification": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_albert.ALBERT_START_DOCSTRING",
    "transformers.modeling_tf_albert.TFAlbertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertForTokenClassification.__init__": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_albert.TFAlbertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertForTokenClassification.call": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "TFTokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_albert.ALBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_albert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_albert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertLayer": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertLayer.__init__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_albert.TFAlbertAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertLayer.call": {
  "data": {
   "lineno": 325
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertLayerGroup": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertLayerGroup.__init__": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "range",
    "super",
    "transformers.modeling_tf_albert.TFAlbertLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertLayerGroup.call": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "albert_layer",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMLMHead": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertMLMHead.__init__": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMLMHead.build": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMLMHead.call": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMainLayer": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertMainLayer.__init__": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_albert.TFAlbertEmbeddings",
    "transformers.modeling_tf_albert.TFAlbertTransformer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMainLayer._prune_heads": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMainLayer.call": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFBaseModelOutputWithPooling",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.fill",
    "tensorflow.float32",
    "tensorflow.newaxis",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertMainLayer.set_input_embeddings": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertModel": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_albert.ALBERT_START_DOCSTRING",
    "transformers.modeling_tf_albert.TFAlbertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertModel.__init__": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_albert.TFAlbertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertModel.call": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "TFBaseModelOutputWithPooling",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_albert.ALBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_albert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_albert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertPreTrainedModel": {
  "data": {
   "lineno": 436
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertSOPHead": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertSOPHead.__init__": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertSOPHead.call": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertSelfOutput": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertSelfOutput.__init__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertSelfOutput.call": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertTransformer": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_albert.TFAlbertTransformer.__init__": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "get_initializer",
    "range",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_albert.TFAlbertLayerGroup"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TFAlbertTransformer.call": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "int",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_albert.TF_ALBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "transformers.modeling_tf_albert.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_albert._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.modeling_tf_albert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "transformers.modeling_tf_albert.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_tf_albert.logger": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "transformers.modeling_tf_albert.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_auto": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.OrderedDict"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_auto.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "transformers.modeling_tf_auto.TFAutoModel": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModel.__init__": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModel.from_config": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_MODEL_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModel.from_pretrained": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_tf_auto.TF_MODEL_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForCausalLM": {
  "data": {
   "lineno": 741
  },
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForCausalLM.__init__": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_config": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_CAUSAL_LM_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForCausalLM.from_pretrained": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_CAUSAL_LM_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMaskedLM": {
  "data": {
   "lineno": 835
  },
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.__init__": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_config": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_MASKED_LM_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_MASKED_LM_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice": {
  "data": {
   "lineno": 1319
  },
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.__init__": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_config": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_MULTIPLE_CHOICE_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 1372,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_MULTIPLE_CHOICE_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForPreTraining": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForPreTraining.__init__": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_config": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_PRETRAINING_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForPreTraining.from_pretrained": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_PRETRAINING_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_config": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_QUESTION_ANSWERING_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_QUESTION_ANSWERING_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM": {
  "data": {
   "lineno": 929
  },
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.__init__": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_config": {
  "data": {
   "lineno": 946,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSeq2SeqLM.from_pretrained": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.__init__": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_config": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForTokenClassification": {
  "data": {
   "lineno": 1222
  },
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.__init__": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_config": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_tf_auto.TF_MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelWithLMHead": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_auto.TFAutoModelWithLMHead.__init__": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_config": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "classmethod",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_MODEL_WITH_LM_HEAD_MAPPING",
    "transformers.modeling_tf_auto.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TFAutoModelWithLMHead.from_pretrained": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "add_start_docstrings",
    "classmethod",
    "isinstance",
    "replace_list_option_in_docstrings",
    "transformers.modeling_tf_auto.TF_AUTO_MODEL_PRETRAINED_DOCSTRING",
    "transformers.modeling_tf_auto.TF_MODEL_WITH_LM_HEAD_MAPPING",
    "transformers.modeling_tf_auto.warnings",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_auto.TF_AUTO_MODEL_PRETRAINED_DOCSTRING": {
  "data": {
   "lineno": 359
  },
  "type": "constant"
 },
 "transformers.modeling_tf_auto.TF_MODEL_FOR_CAUSAL_LM_MAPPING": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "transformers.modeling_tf_auto.TF_MODEL_FOR_MASKED_LM_MAPPING": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "transformers.modeling_tf_auto.TF_MODEL_FOR_MULTIPLE_CHOICE_MAPPING": {
  "data": {
   "lineno": 341
  },
  "type": "constant"
 },
 "transformers.modeling_tf_auto.TF_MODEL_FOR_PRETRAINING_MAPPING": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "transformers.modeling_tf_auto.TF_MODEL_FOR_QUESTION_ANSWERING_MAPPING": {
  "data": {
   "lineno": 306
  },
  "type": "constant"
 },
 "transformers.modeling_tf_auto.TF_MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING": {
  "data": {
   "lineno": 289
  },
  "type": "constant"
 },
 "transformers.modeling_tf_auto.TF_MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "transformers.modeling_tf_auto.TF_MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING": {
  "data": {
   "lineno": 324
  },
  "type": "constant"
 },
 "transformers.modeling_tf_auto.TF_MODEL_MAPPING": {
  "data": {
   "lineno": 171
  },
  "type": "constant"
 },
 "transformers.modeling_tf_auto.TF_MODEL_WITH_LM_HEAD_MAPPING": {
  "data": {
   "lineno": 220
  },
  "type": "constant"
 },
 "transformers.modeling_tf_auto.logger": {
  "data": {
   "lineno": 168
  },
  "type": "constant"
 },
 "transformers.modeling_tf_auto.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bart": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_bart.BART_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bart.BART_START_DOCSTRING": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bart.Dense": {
  "data": {
   "shadows": "tensorflow.keras.layers.Dense"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bart.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bart.LARGE_NEGATIVE": {
  "data": {
   "lineno": 130
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bart.Layer": {
  "data": {
   "shadows": "tensorflow.keras.layers.Layer"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bart.LayerNormalization": {
  "data": {
   "shadows": "tensorflow.keras.layers.LayerNormalization"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bart.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bart.PAST_KV_DEPRECATION_WARNING": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bart.TFAttention": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bart.TFAttention.__init__": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFAttention._concat_saved_state": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.concat",
    "tensorflow.reshape",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFAttention._shape": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFAttention.call": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "dict",
    "shape_list",
    "str",
    "tensorflow.Tensor",
    "tensorflow.bool",
    "tensorflow.cast",
    "tensorflow.expand_dims",
    "tensorflow.float32",
    "tensorflow.matmul",
    "tensorflow.nn.dropout",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "tensorflow.transpose",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartDecoder": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bart.TFBartDecoder.__init__": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "TFLearnedPositionalEmbedding",
    "TFSinusoidalPositionalEmbedding",
    "range",
    "super",
    "tensorflow.keras.layers.Layer",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_bart.TFDecoderLayer",
    "transformers.modeling_tf_bart.math"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartDecoder.call": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "TFBaseModelOutputWithPast",
    "cast_bool_to_primitive",
    "decoder_layer",
    "enumerate",
    "len",
    "list",
    "shape_list",
    "tensorflow.nn.dropout",
    "tensorflow.transpose",
    "transformers.modeling_tf_bart.invert_mask",
    "transformers.modeling_tf_bart.random",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartEncoder": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bart.TFBartEncoder.__init__": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "TFLearnedPositionalEmbedding",
    "TFSinusoidalPositionalEmbedding",
    "range",
    "super",
    "tensorflow.keras.layers.Layer",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_bart.TFEncoderLayer",
    "transformers.modeling_tf_bart.math"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartEncoder.call": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "encoder_layer",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.nn.dropout",
    "tensorflow.transpose",
    "transformers.modeling_tf_bart.LARGE_NEGATIVE",
    "transformers.modeling_tf_bart.random",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartForConditionalGeneration": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bart.BART_START_DOCSTRING",
    "transformers.modeling_tf_bart.TFPretrainedBartModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bart.TFBartForConditionalGeneration.__init__": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bart.TFBartModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartForConditionalGeneration._reorder_cache": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "len",
    "staticmethod",
    "transformers.modeling_tf_bart._reorder_buffer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartForConditionalGeneration.adjust_logits_during_generation": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "range",
    "tensorflow.constant",
    "tensorflow.where",
    "transformers.modeling_tf_bart.LARGE_NEGATIVE"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartForConditionalGeneration.call": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "TFSeq2SeqLMOutput",
    "TFSeq2SeqModelOutput",
    "ValueError",
    "add_start_docstrings_to_model_forward",
    "cast_bool_to_primitive",
    "dict",
    "isinstance",
    "len",
    "list",
    "replace_return_docstrings",
    "transformers.modeling_tf_bart.BART_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bart.PAST_KV_DEPRECATION_WARNING",
    "transformers.modeling_tf_bart._CONFIG_FOR_DOC",
    "transformers.modeling_tf_bart.warnings",
    "tuple",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartForConditionalGeneration.compute_loss": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "loss_fn",
    "shape_list",
    "tensorflow.boolean_mask",
    "tensorflow.keras.losses.Reduction.NONE",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy",
    "tensorflow.not_equal",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartForConditionalGeneration.get_encoder": {
  "data": {
   "lineno": 1209
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartForConditionalGeneration.get_output_embeddings": {
  "data": {
   "lineno": 1206
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartForConditionalGeneration.prepare_inputs_for_generation": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "isinstance",
    "len",
    "tensorflow.Tensor",
    "tuple",
    "type",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartModel": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bart.BART_START_DOCSTRING",
    "transformers.modeling_tf_bart.TFPretrainedBartModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bart.TFBartModel.__init__": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "TFSharedEmbeddings",
    "TFWrappedEmbeddings",
    "super",
    "tensorflow.compat.v1.variable_scope",
    "transformers.modeling_tf_bart.TFBartDecoder",
    "transformers.modeling_tf_bart.TFBartEncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartModel._prepare_bart_decoder_inputs": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "shape_list",
    "transformers.modeling_tf_bart.causal_attention_mask",
    "transformers.modeling_tf_bart.invert_mask",
    "transformers.modeling_tf_bart.make_padding_mask"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartModel.call": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "TFSeq2SeqModelOutput",
    "ValueError",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "replace_return_docstrings",
    "transformers.modeling_tf_bart.BART_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bart._CONFIG_FOR_DOC",
    "tuple",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartModel.get_input_embeddings": {
  "data": {
   "lineno": 1002
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartModel.get_output_embeddings": {
  "data": {
   "lineno": 1008
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFBartModel.set_input_embeddings": {
  "data": {
   "lineno": 1005
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFDecoderLayer": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bart.TFDecoderLayer.__init__": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "TFAttention",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFDecoderLayer.call": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "str",
    "tensorflow.Tensor",
    "tensorflow.nn.dropout",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFEncoderLayer": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bart.TFEncoderLayer.__init__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "TFAttention",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFEncoderLayer.call": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.nn.dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFLearnedPositionalEmbedding": {
  "data": {
   "lineno": 773
  },
  "type": "class"
 },
 "transformers.modeling_tf_bart.TFLearnedPositionalEmbedding.__init__": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFLearnedPositionalEmbedding.call": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "shape_list",
    "super",
    "tensorflow.Tensor",
    "tensorflow.fill",
    "tensorflow.int32",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFPretrainedBartModel": {
  "data": {
   "lineno": 165
  },
  "type": "class"
 },
 "transformers.modeling_tf_bart.TFPretrainedBartModel._shift_right": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.control_dependencies",
    "tensorflow.debugging.assert_greater_equal",
    "tensorflow.fill",
    "tensorflow.identity",
    "tensorflow.int32",
    "tensorflow.roll",
    "tensorflow.where"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFPretrainedBartModel.dummy_inputs": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "property",
    "tensorflow.cast",
    "tensorflow.constant",
    "tensorflow.int32",
    "tensorflow.math.not_equal"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFSinusoidalPositionalEmbedding": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Embedding"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bart.TFSinusoidalPositionalEmbedding.__init__": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "NotImplementedError",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFSinusoidalPositionalEmbedding._init_weight": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.power",
    "numpy.sin",
    "range",
    "staticmethod",
    "tensorflow.convert_to_tensor",
    "tensorflow.float32",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFSinusoidalPositionalEmbedding.build": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "numpy.ndarray",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.TFSinusoidalPositionalEmbedding.call": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "shape_list",
    "super",
    "tensorflow.fill",
    "tensorflow.int32",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.Tensor": {
  "data": {
   "shadows": "tensorflow.Tensor"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bart.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bart._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bart._reorder_buffer": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "tensorflow.gather"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.causal_attention_mask": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.range",
    "transformers.modeling_tf_bart.LARGE_NEGATIVE"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.create_position_ids_from_input_ids": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "tensorflow.cumsum"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.invert_mask": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.bool",
    "tensorflow.cast",
    "tensorflow.debugging.assert_rank",
    "tensorflow.math.logical_not"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.logger": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bart.make_padding_mask": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "tensorflow.math.equal"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bart.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bart.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bart.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bart.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bart.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 732
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bert.BERT_START_DOCSTRING": {
  "data": {
   "lineno": 696
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bert.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert.TFBertAttention": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertAttention.__init__": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertSelfAttention",
    "transformers.modeling_tf_bert.TFBertSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertAttention.call": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertAttention.prune_heads": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings._embedding": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.fill",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings._linear": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.matmul",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings.build": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEmbeddings.call": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEncoder": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertEncoder.__init__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "range",
    "super",
    "transformers.modeling_tf_bert.TFBertLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertEncoder.call": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "enumerate",
    "layer_module",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMaskedLM": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForMaskedLM.__init__": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertMLMHead",
    "transformers.modeling_tf_bert.TFBertMainLayer",
    "transformers.modeling_tf_bert.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMaskedLM.call": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "TFMaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_bert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 881
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMultipleChoice": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForMultipleChoice.__init__": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_bert.TFBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMultipleChoice.call": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "TFMultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.reshape",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_bert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForMultipleChoice.dummy_inputs": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForNextSentencePrediction": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForNextSentencePrediction.__init__": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertMainLayer",
    "transformers.modeling_tf_bert.TFBertNSPHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForNextSentencePrediction.call": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "TFNextSentencePredictorOutput",
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForPreTraining": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForPreTraining.__init__": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertMLMHead",
    "transformers.modeling_tf_bert.TFBertMainLayer",
    "transformers.modeling_tf_bert.TFBertNSPHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForPreTraining.call": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertForPreTrainingOutput",
    "transformers.modeling_tf_bert._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForPreTraining.get_output_embeddings": {
  "data": {
   "lineno": 824
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForPreTrainingOutput": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForQuestionAnswering": {
  "data": {
   "lineno": 1382,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1394,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_bert.TFBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForQuestionAnswering.call": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": [
    "TFQuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "tensorflow.split",
    "tensorflow.squeeze",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_bert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForSequenceClassification": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_bert.TFBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForSequenceClassification.call": {
  "data": {
   "lineno": 1101,
   "symbols_in_volume": [
    "TFSequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_bert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForTokenClassification": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertForTokenClassification.__init__": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_bert.TFBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertForTokenClassification.call": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "TFTokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_bert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertIntermediate": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertIntermediate.__init__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertIntermediate.call": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMHeadModel": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertLMHeadModel.__init__": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertMLMHead",
    "transformers.modeling_tf_bert.TFBertMainLayer",
    "transformers.modeling_tf_bert.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMHeadModel.call": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "TFCausalLMOutput",
    "add_code_sample_docstrings",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_bert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_bert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 963
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMPredictionHead": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertLMPredictionHead.__init__": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertPredictionHeadTransform"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMPredictionHead.build": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLMPredictionHead.call": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLayer": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertLayer.__init__": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertAttention",
    "transformers.modeling_tf_bert.TFBertIntermediate",
    "transformers.modeling_tf_bert.TFBertOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertLayer.call": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMLMHead": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertMLMHead.__init__": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertLMPredictionHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMLMHead.call": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer.__init__": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertEmbeddings",
    "transformers.modeling_tf_bert.TFBertEncoder",
    "transformers.modeling_tf_bert.TFBertPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer._prune_heads": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer.call": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFBaseModelOutputWithPooling",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.fill",
    "tensorflow.newaxis",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 530
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertMainLayer.set_input_embeddings": {
  "data": {
   "lineno": 533
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertModel": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_bert.BERT_START_DOCSTRING",
    "transformers.modeling_tf_bert.TFBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertModel.__init__": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_bert.TFBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertModel.call": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "TFBaseModelOutputWithPooling",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_bert.BERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_bert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_bert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertNSPHead": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertNSPHead.__init__": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertNSPHead.call": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertOutput": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertOutput.__init__": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertOutput.call": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertPooler": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertPooler.__init__": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertPooler.call": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertPreTrainedModel": {
  "data": {
   "lineno": 656
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertPredictionHeadTransform": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertPredictionHeadTransform.__init__": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertPredictionHeadTransform.call": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfAttention": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertSelfAttention.__init__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "get_initializer",
    "int",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfAttention.call": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.math.sqrt",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfAttention.transpose_for_scores": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfOutput": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_bert.TFBertSelfOutput.__init__": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TFBertSelfOutput.call": {
  "data": {
   "lineno": 292
  },
  "type": "function"
 },
 "transformers.modeling_tf_bert.TF_BERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bert.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bert.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_tf_bert.logger": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "transformers.modeling_tf_bert.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_blenderbot": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_tf_available",
    "transformers.modeling_tf_blenderbot._CONFIG_FOR_DOC"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_blenderbot.START_DOCSTRING": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.modeling_tf_blenderbot.TFBlenderbotForConditionalGeneration": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_blenderbot.START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_blenderbot.TFBlenderbotForConditionalGeneration.adjust_logits_during_generation": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "range",
    "tensorflow.constant",
    "tensorflow.where"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_blenderbot._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.modeling_tf_blenderbot.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.modeling_tf_blenderbot.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_camembert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_camembert.CAMEMBERT_START_DOCSTRING": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.modeling_tf_camembert.TFCamembertForMaskedLM": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_camembert.CAMEMBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_camembert.TFCamembertForMultipleChoice": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_camembert.CAMEMBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_camembert.TFCamembertForQuestionAnswering": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_camembert.CAMEMBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_camembert.TFCamembertForSequenceClassification": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_camembert.CAMEMBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_camembert.TFCamembertForTokenClassification": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_camembert.CAMEMBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_camembert.TFCamembertModel": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_camembert.CAMEMBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_camembert.TF_CAMEMBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.modeling_tf_camembert.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.modeling_tf_ctrl": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_ctrl.CTRL_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 474
  },
  "type": "constant"
 },
 "transformers.modeling_tf_ctrl.CTRL_START_DOCSTRING": {
  "data": {
   "lineno": 438
  },
  "type": "constant"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHead": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHead.__init__": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHead.build": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHead.call": {
  "data": {
   "lineno": 575
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHeadModel": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_ctrl.CTRL_START_DOCSTRING",
    "transformers.modeling_tf_ctrl.TFCTRLPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHeadModel.__init__": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_ctrl.TFCTRLLMHead",
    "transformers.modeling_tf_ctrl.TFCTRLMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHeadModel.call": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "TFCausalLMOutputWithPast",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_ctrl.CTRL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_ctrl._CONFIG_FOR_DOC",
    "transformers.modeling_tf_ctrl._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 595
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLLMHeadModel.prepare_inputs_for_generation": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "tensorflow.expand_dims"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer.__init__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "TFSharedEmbeddings",
    "range",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_ctrl.TFEncoderLayer",
    "transformers.modeling_tf_ctrl.positional_encoding"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer._prune_heads": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer.call": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFBaseModelOutputWithPast",
    "ValueError",
    "dict",
    "enumerate",
    "h",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.linalg.band_part",
    "tensorflow.math.sqrt",
    "tensorflow.newaxis",
    "tensorflow.ones",
    "tensorflow.range",
    "tensorflow.reshape",
    "tensorflow.tile",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLMainLayer.set_input_embeddings": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLModel": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_ctrl.CTRL_START_DOCSTRING",
    "transformers.modeling_tf_ctrl.TFCTRLPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFCTRLModel.__init__": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_ctrl.TFCTRLMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLModel.call": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "TFBaseModelOutputWithPast",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_ctrl.CTRL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_ctrl._CONFIG_FOR_DOC",
    "transformers.modeling_tf_ctrl._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFCTRLPreTrainedModel": {
  "data": {
   "lineno": 428
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFEncoderLayer": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFEncoderLayer.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_ctrl.TFMultiHeadAttention",
    "transformers.modeling_tf_ctrl.TFPointWiseFeedForwardLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFEncoderLayer.call": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFMultiHeadAttention": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFMultiHeadAttention.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "int",
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFMultiHeadAttention.call": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.concat",
    "tensorflow.reshape",
    "tensorflow.stack",
    "tensorflow.transpose",
    "tensorflow.unstack",
    "transformers.modeling_tf_ctrl.scaled_dot_product_attention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFMultiHeadAttention.split_into_heads": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFPointWiseFeedForwardLayer": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_ctrl.TFPointWiseFeedForwardLayer.__init__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TFPointWiseFeedForwardLayer.call": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.TF_CTRL_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.modeling_tf_ctrl._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.modeling_tf_ctrl._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.modeling_tf_ctrl.angle_defn": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.power"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.logger": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.modeling_tf_ctrl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_ctrl.positional_encoding": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.newaxis",
    "numpy.sin",
    "tensorflow.cast",
    "tensorflow.float32",
    "transformers.modeling_tf_ctrl.angle_defn"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.scaled_dot_product_attention": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.math.sqrt",
    "tensorflow.matmul",
    "tensorflow.nn.softmax"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_ctrl.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_distilbert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_distilbert.DISTILBERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 532
  },
  "type": "constant"
 },
 "transformers.modeling_tf_distilbert.DISTILBERT_START_DOCSTRING": {
  "data": {
   "lineno": 496
  },
  "type": "constant"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMaskedLM": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_tf_distilbert.TFDistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMaskedLM.__init__": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_distilbert.TFDistilBertLMHead",
    "transformers.modeling_tf_distilbert.TFDistilBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMaskedLM.call": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "TFMaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_distilbert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_distilbert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 630
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMultipleChoice": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_tf_distilbert.TFDistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMultipleChoice.__init__": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_distilbert.TFDistilBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMultipleChoice.call": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "TFMultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.reshape",
    "transformers.modeling_tf_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_distilbert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_distilbert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForMultipleChoice.dummy_inputs": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForQuestionAnswering": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_tf_distilbert.TFDistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_distilbert.TFDistilBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForQuestionAnswering.call": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "TFQuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "tensorflow.split",
    "tensorflow.squeeze",
    "transformers.modeling_tf_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_distilbert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_distilbert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForSequenceClassification": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_tf_distilbert.TFDistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_distilbert.TFDistilBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForSequenceClassification.call": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "TFSequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_distilbert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_distilbert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForTokenClassification": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_tf_distilbert.TFDistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForTokenClassification.__init__": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_distilbert.TFDistilBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertForTokenClassification.call": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "TFTokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_distilbert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_distilbert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertLMHead": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertLMHead.__init__": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertLMHead.build": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertLMHead.call": {
  "data": {
   "lineno": 607
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer.__init__": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_distilbert.TFEmbeddings",
    "transformers.modeling_tf_distilbert.TFTransformer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer._prune_heads": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer.call": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.ones",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertMainLayer.set_input_embeddings": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertModel": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_distilbert.DISTILBERT_START_DOCSTRING",
    "transformers.modeling_tf_distilbert.TFDistilBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertModel.__init__": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_distilbert.TFDistilBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertModel.call": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_distilbert.DISTILBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_distilbert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_distilbert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFDistilBertPreTrainedModel": {
  "data": {
   "lineno": 486
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "TFSharedEmbeddings",
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings._embedding": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings._linear": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.matmul",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings.build": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFEmbeddings.call": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFFFN": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFFFN.__init__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFFFN.call": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.__init__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "get_initializer",
    "set",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.call": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "shape",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.math.divide",
    "tensorflow.math.rsqrt",
    "tensorflow.matmul",
    "tensorflow.multiply",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "unshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.call.shape": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.call.unshape": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention.prune_heads": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFTransformer": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFTransformer.__init__": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "range",
    "super",
    "transformers.modeling_tf_distilbert.TFTransformerBlock"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFTransformer.call": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "enumerate",
    "layer_module",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFTransformerBlock": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_distilbert.TFTransformerBlock.__init__": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_distilbert.TFFFN",
    "transformers.modeling_tf_distilbert.TFMultiHeadSelfAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TFTransformerBlock.call": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "transformers.modeling_tf_distilbert.TF_DISTILBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "transformers.modeling_tf_distilbert._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "transformers.modeling_tf_distilbert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "transformers.modeling_tf_distilbert.logger": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "transformers.modeling_tf_distilbert.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_electra": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_electra.ELECTRA_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 662
  },
  "type": "constant"
 },
 "transformers.modeling_tf_electra.ELECTRA_START_DOCSTRING": {
  "data": {
   "lineno": 626
  },
  "type": "constant"
 },
 "transformers.modeling_tf_electra.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_electra.TFElectraAttention": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraAttention.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_electra.TFElectraSelfAttention",
    "transformers.modeling_tf_electra.TFElectraSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraAttention.call": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraAttention.prune_heads": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraClassificationHead": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraClassificationHead.__init__": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraClassificationHead.call": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "get_tf_activation"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraDiscriminatorPredictions": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraDiscriminatorPredictions.__init__": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraDiscriminatorPredictions.call": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "get_tf_activation",
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraEmbeddings": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraEmbeddings.__init__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraEmbeddings._embedding": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.fill",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraEmbeddings._linear": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.matmul",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraEmbeddings.build": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraEmbeddings.call": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraEncoder": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraEncoder.__init__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "range",
    "super",
    "transformers.modeling_tf_electra.TFElectraLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraEncoder.call": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "enumerate",
    "layer_module",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForMaskedLM": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_electra.ELECTRA_START_DOCSTRING",
    "transformers.modeling_tf_electra.TFElectraPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraForMaskedLM.__init__": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "get_tf_activation",
    "isinstance",
    "str",
    "super",
    "transformers.modeling_tf_electra.TFElectraGeneratorPredictions",
    "transformers.modeling_tf_electra.TFElectraMainLayer",
    "transformers.modeling_tf_electra.TFElectraMaskedLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForMaskedLM.call": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "TFMaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_electra.ELECTRA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_electra._CONFIG_FOR_DOC",
    "transformers.modeling_tf_electra._TOKENIZER_FOR_DOC",
    "transformers.modeling_tf_electra.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 858
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForMultipleChoice": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_electra.ELECTRA_START_DOCSTRING",
    "transformers.modeling_tf_electra.TFElectraPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraForMultipleChoice.__init__": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "TFSequenceSummary",
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_electra.TFElectraMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForMultipleChoice.call": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "TFMultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.reshape",
    "transformers.modeling_tf_electra.ELECTRA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_electra._CONFIG_FOR_DOC",
    "transformers.modeling_tf_electra._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForMultipleChoice.dummy_inputs": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForPreTraining": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_electra.ELECTRA_START_DOCSTRING",
    "transformers.modeling_tf_electra.TFElectraPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraForPreTraining.__init__": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_electra.TFElectraDiscriminatorPredictions",
    "transformers.modeling_tf_electra.TFElectraMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForPreTraining.call": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "replace_return_docstrings",
    "transformers.modeling_tf_electra.ELECTRA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_electra.TFElectraForPreTrainingOutput",
    "transformers.modeling_tf_electra._CONFIG_FOR_DOC",
    "transformers.modeling_tf_electra.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForPreTrainingOutput": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraForQuestionAnswering": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_electra.ELECTRA_START_DOCSTRING",
    "transformers.modeling_tf_electra.TFElectraPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_electra.TFElectraMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForQuestionAnswering.call": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "TFQuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "tensorflow.split",
    "tensorflow.squeeze",
    "transformers.modeling_tf_electra.ELECTRA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_electra._CONFIG_FOR_DOC",
    "transformers.modeling_tf_electra._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForSequenceClassification": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_electra.ELECTRA_START_DOCSTRING",
    "transformers.modeling_tf_electra.TFElectraPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraForSequenceClassification.__init__": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_electra.TFElectraClassificationHead",
    "transformers.modeling_tf_electra.TFElectraMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForSequenceClassification.call": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "TFSequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_electra.ELECTRA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_electra._CONFIG_FOR_DOC",
    "transformers.modeling_tf_electra._TOKENIZER_FOR_DOC",
    "transformers.modeling_tf_electra.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForTokenClassification": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_electra.ELECTRA_START_DOCSTRING",
    "transformers.modeling_tf_electra.TFElectraPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraForTokenClassification.__init__": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_electra.TFElectraMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraForTokenClassification.call": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "TFTokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_electra.ELECTRA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_electra._CONFIG_FOR_DOC",
    "transformers.modeling_tf_electra._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraGeneratorPredictions": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraGeneratorPredictions.__init__": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraGeneratorPredictions.call": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "get_tf_activation"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraIntermediate": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraIntermediate.__init__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraIntermediate.call": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraLayer": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraLayer.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_electra.TFElectraAttention",
    "transformers.modeling_tf_electra.TFElectraIntermediate",
    "transformers.modeling_tf_electra.TFElectraOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraLayer.call": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer.__init__": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_electra.TFElectraEmbeddings",
    "transformers.modeling_tf_electra.TFElectraEncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer._prune_heads": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer.call": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.fill",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer.get_extended_attention_mask": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.fill",
    "tensorflow.newaxis"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer.get_head_mask": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMainLayer.set_input_embeddings": {
  "data": {
   "lineno": 476
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMaskedLMHead": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraMaskedLMHead.__init__": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMaskedLMHead.build": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraMaskedLMHead.call": {
  "data": {
   "lineno": 827
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraModel": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_electra.ELECTRA_START_DOCSTRING",
    "transformers.modeling_tf_electra.TFElectraPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraModel.__init__": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_electra.TFElectraMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraModel.call": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_electra.ELECTRA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_electra._CONFIG_FOR_DOC",
    "transformers.modeling_tf_electra._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraOutput": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraOutput.__init__": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraOutput.call": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraPooler": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraPooler.__init__": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraPooler.call": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraPreTrainedModel": {
  "data": {
   "lineno": 448
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraSelfAttention": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraSelfAttention.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "get_initializer",
    "int",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraSelfAttention.call": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.math.sqrt",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraSelfAttention.transpose_for_scores": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraSelfOutput": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_electra.TFElectraSelfOutput.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TFElectraSelfOutput.call": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "transformers.modeling_tf_electra.TF_ELECTRA_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.modeling_tf_electra.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_electra._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "transformers.modeling_tf_electra._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.modeling_tf_electra.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_tf_electra.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.modeling_tf_electra.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_electra.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_tf_flaubert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_flaubert.FLAUBERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "transformers.modeling_tf_flaubert.FLAUBERT_START_DOCSTRING": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.modeling_tf_flaubert.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForMultipleChoice": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_flaubert.FLAUBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForMultipleChoice.__init__": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_flaubert.TFFlaubertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForQuestionAnsweringSimple": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_flaubert.FLAUBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_flaubert.TFFlaubertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForSequenceClassification": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_flaubert.FLAUBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForSequenceClassification.__init__": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_flaubert.TFFlaubertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForTokenClassification": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_flaubert.FLAUBERT_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertForTokenClassification.__init__": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_flaubert.TFFlaubertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMainLayer": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMainLayer.__init__": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "TFSharedEmbeddings",
    "get_initializer",
    "getattr",
    "range",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_flaubert.TFFlaubertMultiHeadAttention",
    "transformers.modeling_tf_flaubert.TFFlaubertTransformerFFN"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMainLayer.call": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFBaseModelOutput",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "range",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.convert_to_tensor",
    "tensorflow.debugging.assert_equal",
    "tensorflow.expand_dims",
    "tensorflow.int32",
    "tensorflow.less",
    "tensorflow.newaxis",
    "tensorflow.not_equal",
    "tensorflow.random.uniform",
    "tensorflow.range",
    "tensorflow.reduce_sum",
    "transformers.modeling_tf_flaubert.get_masks",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertModel": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_flaubert.FLAUBERT_START_DOCSTRING",
    "transformers.modeling_tf_flaubert.TFFlaubertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertModel.__init__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "TFFlaubertMainLayer",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertModel.call": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_flaubert.FLAUBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_flaubert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_flaubert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMultiHeadAttention": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer",
    "transformers.modeling_tf_flaubert.itertools"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMultiHeadAttention.__init__": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "get_initializer",
    "next",
    "set",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_flaubert.TFFlaubertMultiHeadAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMultiHeadAttention.call": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "input",
    "len",
    "shape",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.math.divide",
    "tensorflow.math.rsqrt",
    "tensorflow.matmul",
    "tensorflow.multiply",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "unshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMultiHeadAttention.call.shape": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMultiHeadAttention.call.unshape": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertMultiHeadAttention.prune_heads": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertPreTrainedModel": {
  "data": {
   "lineno": 195
  },
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertPreTrainedModel.dummy_inputs": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertPredLayer": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertPredLayer.__init__": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "NotImplementedError",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertPredLayer.build": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertPredLayer.call": {
  "data": {
   "lineno": 666
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertTransformerFFN": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertTransformerFFN.__init__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.activations_tf.get_tf_activation"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertTransformerFFN.call": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertWithLMHeadModel": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_flaubert.FLAUBERT_START_DOCSTRING",
    "transformers.modeling_tf_flaubert.TFFlaubertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertWithLMHeadModel.__init__": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_flaubert.TFFlaubertMainLayer",
    "transformers.modeling_tf_flaubert.TFFlaubertPredLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertWithLMHeadModel.call": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_flaubert.FLAUBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_flaubert.TFFlaubertWithLMHeadModelOutput",
    "transformers.modeling_tf_flaubert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_flaubert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertWithLMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 712
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertWithLMHeadModel.prepare_inputs_for_generation": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.int32",
    "tensorflow.ones",
    "tensorflow.ones_like"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.TFFlaubertWithLMHeadModelOutput": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_flaubert.TF_FLAUBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.modeling_tf_flaubert.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_flaubert._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.modeling_tf_flaubert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.modeling_tf_flaubert.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_tf_flaubert.get_masks": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.debugging.assert_equal",
    "tensorflow.float32",
    "tensorflow.less_equal",
    "tensorflow.math.less",
    "tensorflow.newaxis",
    "tensorflow.range",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_flaubert.get_tf_activation": {
  "data": {
   "shadows": "transformers.activations_tf.get_tf_activation"
  },
  "type": "import"
 },
 "transformers.modeling_tf_flaubert.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "transformers.modeling_tf_flaubert.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.modeling_tf_flaubert.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_funnel": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_funnel.FUNNEL_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 1096
  },
  "type": "constant"
 },
 "transformers.modeling_tf_funnel.FUNNEL_START_DOCSTRING": {
  "data": {
   "lineno": 1057
  },
  "type": "constant"
 },
 "transformers.modeling_tf_funnel.INF": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "transformers.modeling_tf_funnel.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.__init__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.get_position_embeds": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "range",
    "tensorflow.concat",
    "tensorflow.cos",
    "tensorflow.einsum",
    "tensorflow.float32",
    "tensorflow.gather",
    "tensorflow.range",
    "tensorflow.sin"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.init_attention_inputs": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "tensorflow.ones",
    "tensorflow.pad"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.pool_tensor": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "list",
    "tensorflow.concat",
    "tensorflow.nn.avg_pool1d",
    "tensorflow.nn.max_pool1d",
    "tensorflow.squeeze",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.post_attention_pooling": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.pre_attention_pooling": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.relative_pos": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "tensorflow.int64",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.stride_pool": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "slice",
    "tensorflow.concat",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.stride_pool_pos": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelAttentionStructure.token_type_ids_to_mat": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "tensorflow.constant",
    "tensorflow.equal",
    "tensorflow.expand_dims",
    "tensorflow.logical_or"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseLayer": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseLayer.__init__": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_funnel.TFFunnelEmbeddings",
    "transformers.modeling_tf_funnel.TFFunnelEncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseLayer._prune_heads": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseLayer.call": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.fill",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseLayer.get_input_embeddings": {
  "data": {
   "lineno": 775
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseLayer.set_input_embeddings": {
  "data": {
   "lineno": 778
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseModel": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_tf_funnel.TFFunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseModel.__init__": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_funnel.TFFunnelBaseLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelBaseModel.call": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_tf_funnel._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelClassificationHead": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelClassificationHead.__init__": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelClassificationHead.call": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "tensorflow.keras.activations.tanh"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelDecoder": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelDecoder.__init__": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "len",
    "range",
    "super",
    "transformers.modeling_tf_funnel.TFFunnelAttentionStructure",
    "transformers.modeling_tf_funnel.TFFunnelLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelDecoder.call": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "layer",
    "transformers.modeling_tf_funnel.upsample",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelDiscriminatorPredictions": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelDiscriminatorPredictions.__init__": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelDiscriminatorPredictions.call": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "tensorflow.squeeze"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelEmbeddings": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelEmbeddings.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelEmbeddings._embedding": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "tensorflow.gather"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelEmbeddings._linear": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.matmul",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelEmbeddings.build": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelEmbeddings.call": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelEncoder": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelEncoder.__init__": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "enumerate",
    "range",
    "super",
    "transformers.modeling_tf_funnel.TFFunnelAttentionStructure",
    "transformers.modeling_tf_funnel.TFFunnelLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelEncoder.call": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "enumerate",
    "layer",
    "range",
    "shape_list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForMaskedLM": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_tf_funnel.TFFunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelForMaskedLM.__init__": {
  "data": {
   "lineno": 1256,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_funnel.TFFunnelMainLayer",
    "transformers.modeling_tf_funnel.TFFunnelMaskedLMHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForMaskedLM.call": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "TFMaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_tf_funnel._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForMultipleChoice": {
  "data": {
   "lineno": 1400,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_tf_funnel.TFFunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelForMultipleChoice.__init__": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_funnel.TFFunnelBaseLayer",
    "transformers.modeling_tf_funnel.TFFunnelClassificationHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForMultipleChoice.call": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "TFMultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.reshape",
    "transformers.modeling_tf_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_tf_funnel._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForMultipleChoice.dummy_inputs": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForPreTraining": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_tf_funnel.TFFunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelForPreTraining.__init__": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_funnel.TFFunnelDiscriminatorPredictions",
    "transformers.modeling_tf_funnel.TFFunnelMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForPreTraining.call": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "replace_return_docstrings",
    "transformers.modeling_tf_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_funnel.TFFunnelForPreTrainingOutput",
    "transformers.modeling_tf_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_tf_funnel.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForPreTrainingOutput": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelForQuestionAnswering": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_tf_funnel.TFFunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_funnel.TFFunnelMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForQuestionAnswering.call": {
  "data": {
   "lineno": 1616,
   "symbols_in_volume": [
    "TFQuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "tensorflow.split",
    "tensorflow.squeeze",
    "transformers.modeling_tf_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_tf_funnel._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForSequenceClassification": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_tf_funnel.TFFunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelForSequenceClassification.__init__": {
  "data": {
   "lineno": 1331,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_funnel.TFFunnelBaseLayer",
    "transformers.modeling_tf_funnel.TFFunnelClassificationHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForSequenceClassification.call": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "TFSequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_tf_funnel._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForTokenClassification": {
  "data": {
   "lineno": 1519,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_tf_funnel.TFFunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelForTokenClassification.__init__": {
  "data": {
   "lineno": 1527,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_funnel.TFFunnelMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelForTokenClassification.call": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "TFTokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_tf_funnel._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelLayer": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelLayer.__init__": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_funnel.TFFunnelPositionwiseFFN",
    "transformers.modeling_tf_funnel.TFFunnelRelMultiheadAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelLayer.call": {
  "data": {
   "lineno": 610
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMainLayer": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelMainLayer.__init__": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_funnel.TFFunnelDecoder",
    "transformers.modeling_tf_funnel.TFFunnelEmbeddings",
    "transformers.modeling_tf_funnel.TFFunnelEncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMainLayer._prune_heads": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMainLayer.call": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.fill",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 868
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMainLayer.set_input_embeddings": {
  "data": {
   "lineno": 871
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMaskedLMHead": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelMaskedLMHead.__init__": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMaskedLMHead.build": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelMaskedLMHead.call": {
  "data": {
   "lineno": 998
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelModel": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_funnel.FUNNEL_START_DOCSTRING",
    "transformers.modeling_tf_funnel.TFFunnelPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelModel.__init__": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_funnel.TFFunnelMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelModel.call": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_funnel.FUNNEL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_funnel._CONFIG_FOR_DOC",
    "transformers.modeling_tf_funnel._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelPositionwiseFFN": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelPositionwiseFFN.__init__": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelPositionwiseFFN.call": {
  "data": {
   "lineno": 595
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelPreTrainedModel": {
  "data": {
   "lineno": 1021
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelRelMultiheadAttention": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_funnel.TFFunnelRelMultiheadAttention.__init__": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelRelMultiheadAttention.build": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "get_initializer",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelRelMultiheadAttention.call": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.einsum",
    "tensorflow.float32",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "transformers.modeling_tf_funnel.INF"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelRelMultiheadAttention.relative_positional_attention": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "tensorflow.einsum",
    "transformers.modeling_tf_funnel._relative_shift_gather"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TFFunnelRelMultiheadAttention.relative_token_type_attention": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.broadcast_to",
    "tensorflow.einsum",
    "tensorflow.split",
    "tensorflow.where"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.TF_FUNNEL_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "transformers.modeling_tf_funnel.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_funnel._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "transformers.modeling_tf_funnel._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "transformers.modeling_tf_funnel._relative_shift_gather": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_tf_funnel.logger": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "transformers.modeling_tf_funnel.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_funnel.upsample": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.pad",
    "tensorflow.repeat"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_funnel.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_gpt2.GPT2_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 489
  },
  "type": "constant"
 },
 "transformers.modeling_tf_gpt2.GPT2_START_DOCSTRING": {
  "data": {
   "lineno": 453
  },
  "type": "constant"
 },
 "transformers.modeling_tf_gpt2.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.TFAttention": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFAttention.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "TFConv1D",
    "set",
    "super",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention._attn": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.math.sqrt",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.call": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.split",
    "tensorflow.stack",
    "tensorflow.unstack"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.causal_attention_mask": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.cast",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.merge_heads": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.prune_heads": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFAttention.split_heads": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFBlock": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFBlock.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_gpt2.TFAttention",
    "transformers.modeling_tf_gpt2.TFMLP"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFBlock.call": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModel": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_gpt2.GPT2_START_DOCSTRING",
    "transformers.modeling_tf_gpt2.TFGPT2PreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModel.__init__": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "TFSequenceSummary",
    "super",
    "transformers.modeling_tf_gpt2.TFGPT2MainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModel.call": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "replace_return_docstrings",
    "shape_list",
    "tensorflow.reshape",
    "tensorflow.squeeze",
    "transformers.modeling_tf_gpt2.GPT2_INPUTS_DOCSTRING",
    "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModelOutput",
    "transformers.modeling_tf_gpt2._CONFIG_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModel.get_output_embeddings": {
  "data": {
   "lineno": 687
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2DoubleHeadsModelOutput": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFGPT2LMHeadModel": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_gpt2.GPT2_START_DOCSTRING",
    "transformers.modeling_tf_gpt2.TFGPT2PreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFGPT2LMHeadModel.__init__": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_gpt2.TFGPT2MainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2LMHeadModel.call": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "TFCausalLMOutputWithPast",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_gpt2.GPT2_INPUTS_DOCSTRING",
    "transformers.modeling_tf_gpt2._CONFIG_FOR_DOC",
    "transformers.modeling_tf_gpt2._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2LMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 584
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2LMHeadModel.prepare_inputs_for_generation": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "tensorflow.expand_dims"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "TFSharedEmbeddings",
    "get_initializer",
    "range",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_gpt2.TFBlock"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer._prune_heads": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer.call": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFBaseModelOutputWithPast",
    "ValueError",
    "block",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range",
    "tensorflow.reshape",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer.get_input_embeddings": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2MainLayer.set_input_embeddings": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2Model": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_gpt2.GPT2_START_DOCSTRING",
    "transformers.modeling_tf_gpt2.TFGPT2PreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFGPT2Model.__init__": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_gpt2.TFGPT2MainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2Model.call": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "TFBaseModelOutputWithPast",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_gpt2.GPT2_INPUTS_DOCSTRING",
    "transformers.modeling_tf_gpt2._CONFIG_FOR_DOC",
    "transformers.modeling_tf_gpt2._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFGPT2PreTrainedModel": {
  "data": {
   "lineno": 407
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFMLP": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_gpt2.TFMLP.__init__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "TFConv1D",
    "get_tf_activation",
    "super",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TFMLP.call": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "transformers.modeling_tf_gpt2.TF_GPT2_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "transformers.modeling_tf_gpt2.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "transformers.modeling_tf_gpt2._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.modeling_tf_gpt2.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_tf_gpt2.logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.modeling_tf_gpt2.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_longformer": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_longformer.LONGFORMER_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 1673
  },
  "type": "constant"
 },
 "transformers.modeling_tf_longformer.LONGFORMER_START_DOCSTRING": {
  "data": {
   "lineno": 1636
  },
  "type": "constant"
 },
 "transformers.modeling_tf_longformer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_longformer.TFLongformerAttention": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerAttention.__init__": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_longformer.TFLongformerSelfAttention",
    "transformers.modeling_tf_longformer.TFLongformerSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerAttention.call": {
  "data": {
   "lineno": 1253
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerAttention.prune_heads": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerBaseModelOutput": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerBaseModelOutputWithPooling": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings._embedding": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.fill",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings._linear": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.matmul",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings.build": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings.call": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings.create_position_ids_from_input_ids": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.int32",
    "tensorflow.math.cumsum",
    "tensorflow.math.not_equal"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEmbeddings.create_position_ids_from_inputs_embeds": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEncoder": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerEncoder.__init__": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "range",
    "super",
    "transformers.modeling_tf_longformer.TFLongformerLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerEncoder.call": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "enumerate",
    "layer_module",
    "tensorflow.transpose",
    "transformers.modeling_tf_longformer.TFLongformerBaseModelOutput",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerForMaskedLM": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_longformer.LONGFORMER_START_DOCSTRING",
    "transformers.modeling_tf_longformer.TFLongformerPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerForMaskedLM.__init__": {
  "data": {
   "lineno": 1773,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_longformer.TFLongformerLMHead",
    "transformers.modeling_tf_longformer.TFLongformerMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerForMaskedLM.call": {
  "data": {
   "lineno": 1782,
   "symbols_in_volume": [
    "TFMaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_longformer.LONGFORMER_INPUTS_DOCSTRING",
    "transformers.modeling_tf_longformer._CONFIG_FOR_DOC",
    "transformers.modeling_tf_longformer._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 1779
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerForQuestionAnswering": {
  "data": {
   "lineno": 1848,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_longformer.LONGFORMER_START_DOCSTRING",
    "transformers.modeling_tf_longformer.TFLongformerPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1859,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_longformer.TFLongformerMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerForQuestionAnswering.call": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.split",
    "tensorflow.squeeze",
    "tensorflow.where",
    "transformers.modeling_tf_longformer.LONGFORMER_INPUTS_DOCSTRING",
    "transformers.modeling_tf_longformer.TFLongformerQuestionAnsweringModelOutput",
    "transformers.modeling_tf_longformer._CONFIG_FOR_DOC",
    "transformers.modeling_tf_longformer._TOKENIZER_FOR_DOC",
    "transformers.modeling_tf_longformer._compute_global_attention_mask",
    "transformers.modeling_tf_longformer.logger",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerIntermediate": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerIntermediate.__init__": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "get_initializer",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.activations_tf.get_tf_activation"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerIntermediate.call": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerLMHead": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerLMHead.__init__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.activations_tf.get_tf_activation"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerLMHead.build": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerLMHead.call": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerLayer": {
  "data": {
   "lineno": 1272,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerLayer.__init__": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_longformer.TFLongformerAttention",
    "transformers.modeling_tf_longformer.TFLongformerIntermediate",
    "transformers.modeling_tf_longformer.TFLongformerOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerLayer.call": {
  "data": {
   "lineno": 1280
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer": {
  "data": {
   "lineno": 1372,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer.__init__": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "super",
    "transformers.modeling_tf_longformer.TFLongformerEmbeddings",
    "transformers.modeling_tf_longformer.TFLongformerEncoder",
    "transformers.modeling_tf_longformer.TFLongformerPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer._merge_to_attention_mask": {
  "data": {
   "lineno": 1599,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.Tensor"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer._pad_to_window_size": {
  "data": {
   "lineno": 1543,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "max",
    "shape_list",
    "tensorflow.concat",
    "tensorflow.constant",
    "tensorflow.fill",
    "tensorflow.pad",
    "transformers.modeling_tf_longformer.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer._prune_heads": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer.call": {
  "data": {
   "lineno": 1414,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.dtypes.float32",
    "tensorflow.fill",
    "tensorflow.math.abs",
    "tensorflow.math.greater",
    "tensorflow.math.less",
    "tensorflow.math.reduce_any",
    "tensorflow.newaxis",
    "transformers.modeling_tf_longformer.TFLongformerBaseModelOutputWithPooling",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 1400
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerMainLayer.set_input_embeddings": {
  "data": {
   "lineno": 1403
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerModel": {
  "data": {
   "lineno": 1732,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_longformer.LONGFORMER_START_DOCSTRING",
    "transformers.modeling_tf_longformer.TFLongformerPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerModel.__init__": {
  "data": {
   "lineno": 1753,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_longformer.TFLongformerMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerModel.call": {
  "data": {
   "lineno": 1758,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_longformer.LONGFORMER_INPUTS_DOCSTRING"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerOutput": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerOutput.__init__": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerOutput.call": {
  "data": {
   "lineno": 455
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerPooler": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerPooler.__init__": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerPooler.call": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerPreTrainedModel": {
  "data": {
   "lineno": 1614
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerPreTrainedModel.dummy_inputs": {
  "data": {
   "lineno": 1623,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerQuestionAnsweringModelOutput": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention.__init__": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "ValueError",
    "get_initializer",
    "int",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._chunk": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "shape_list",
    "staticmethod",
    "tensorflow.debugging.assert_equal",
    "tensorflow.reshape",
    "tensorflow.signal.frame"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._compute_attn_output_with_global_indices": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.einsum",
    "tensorflow.gather_nd",
    "tensorflow.scatter_nd"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._compute_global_attn_output_from_hidden": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.broadcast_to",
    "tensorflow.constant",
    "tensorflow.debugging.assert_equal",
    "tensorflow.dtypes.float32",
    "tensorflow.gather_nd",
    "tensorflow.math.sqrt",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.ones",
    "tensorflow.reshape",
    "tensorflow.scatter_nd",
    "tensorflow.tensor_scatter_nd_update",
    "tensorflow.transpose",
    "tensorflow.where",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._concat_with_global_key_attn_probs": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.concat",
    "tensorflow.einsum",
    "tensorflow.gather_nd",
    "tensorflow.ones",
    "tensorflow.scatter_nd",
    "tensorflow.tensor_scatter_nd_update",
    "tensorflow.transpose",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._get_global_attn_indices": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.cast",
    "tensorflow.dtypes.int32",
    "tensorflow.expand_dims",
    "tensorflow.math.logical_not",
    "tensorflow.range",
    "tensorflow.reduce_max",
    "tensorflow.reduce_sum",
    "tensorflow.where"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._mask_invalid_locations": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "float",
    "shape_list",
    "staticmethod",
    "tensorflow.broadcast_to",
    "tensorflow.constant",
    "tensorflow.dtypes.float32",
    "tensorflow.linalg.band_part",
    "tensorflow.math.greater",
    "tensorflow.ones",
    "tensorflow.ones_like",
    "tensorflow.pad",
    "tensorflow.reverse",
    "tensorflow.where"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._pad_and_diagonalize": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "shape_list",
    "staticmethod",
    "tensorflow.constant",
    "tensorflow.pad",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._pad_and_transpose_last_two_dims": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "shape_list",
    "staticmethod",
    "tensorflow.pad",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._sliding_chunks_matmul_attn_probs_value": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.constant",
    "tensorflow.debugging.assert_equal",
    "tensorflow.dtypes.int32",
    "tensorflow.einsum",
    "tensorflow.pad",
    "tensorflow.reshape",
    "tensorflow.signal.frame",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention._sliding_chunks_query_key_matmul": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.broadcast_to",
    "tensorflow.concat",
    "tensorflow.constant",
    "tensorflow.debugging.assert_equal",
    "tensorflow.dtypes.int32",
    "tensorflow.einsum",
    "tensorflow.range",
    "tensorflow.reshape",
    "tensorflow.roll",
    "tensorflow.transpose",
    "tensorflow.where",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention.call": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.broadcast_to",
    "tensorflow.cond",
    "tensorflow.constant",
    "tensorflow.debugging.assert_equal",
    "tensorflow.dtypes.float32",
    "tensorflow.float32",
    "tensorflow.math.sqrt",
    "tensorflow.nn.softmax",
    "tensorflow.ones",
    "tensorflow.reshape",
    "tensorflow.where",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfAttention.reshape_and_transpose": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfOutput": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfOutput.__init__": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TFLongformerSelfOutput.call": {
  "data": {
   "lineno": 495
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.TF_LONGFORMER_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.modeling_tf_longformer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_longformer._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.modeling_tf_longformer._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "transformers.modeling_tf_longformer._compute_global_attention_mask": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "tensorflow.broadcast_to",
    "tensorflow.cast",
    "tensorflow.dtypes.int32",
    "tensorflow.range",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_longformer.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_tf_longformer.get_tf_activation": {
  "data": {
   "shadows": "transformers.activations_tf.get_tf_activation"
  },
  "type": "import"
 },
 "transformers.modeling_tf_longformer.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.modeling_tf_longformer.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_lxmert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_lxmert.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.modeling_tf_lxmert.LXMERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 903
  },
  "type": "constant"
 },
 "transformers.modeling_tf_lxmert.LXMERT_START_DOCSTRING": {
  "data": {
   "lineno": 865
  },
  "type": "constant"
 },
 "transformers.modeling_tf_lxmert.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_lxmert.TFLxmertAttention": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertAttention.__init__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "get_initializer",
    "int",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertAttention.call": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.math.sqrt",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertAttention.transpose_for_scores": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertAttentionOutput": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertAttentionOutput.__init__": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertAttentionOutput.call": {
  "data": {
   "lineno": 412
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertCrossAttentionLayer": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertCrossAttentionLayer.__init__": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_lxmert.TFLxmertAttention",
    "transformers.modeling_tf_lxmert.TFLxmertAttentionOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertCrossAttentionLayer.call": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEmbeddings": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEmbeddings.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEmbeddings._embedding": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.fill",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEmbeddings._linear": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.matmul",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEmbeddings.build": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEmbeddings.call": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEncoder": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEncoder.__init__": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "range",
    "super",
    "transformers.modeling_tf_lxmert.TFLxmertLayer",
    "transformers.modeling_tf_lxmert.TFLxmertVisualFeatureEncoder",
    "transformers.modeling_tf_lxmert.TFLxmertXLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertEncoder.call": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "layer_module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertForPreTraining": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_lxmert.LXMERT_START_DOCSTRING",
    "transformers.modeling_tf_lxmert.TFLxmertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertForPreTraining.__init__": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.losses.Huber",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy",
    "transformers.modeling_tf_lxmert.TFLxmertMainLayer",
    "transformers.modeling_tf_lxmert.TFLxmertPreTrainingHeads",
    "transformers.modeling_tf_lxmert.TFLxmertVisualAnswerHead",
    "transformers.modeling_tf_lxmert.TFLxmertVisualObjHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertForPreTraining.call": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "replace_return_docstrings",
    "tensorflow.cast",
    "tensorflow.constant",
    "tensorflow.reduce_mean",
    "tensorflow.reshape",
    "transformers.modeling_tf_lxmert.LXMERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_lxmert.TFLxmertForPreTrainingOutput",
    "transformers.modeling_tf_lxmert._CONFIG_FOR_DOC",
    "tuple",
    "visn_loss_fct"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertForPreTraining.dummy_inputs": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant",
    "tensorflow.ones",
    "tensorflow.random.uniform"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertForPreTrainingOutput": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertIntermediate": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertIntermediate.__init__": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertIntermediate.call": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertLMPredictionHead": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertLMPredictionHead.__init__": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_lxmert.TFLxmertPredictionHeadTransform"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertLMPredictionHead.build": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertLMPredictionHead.call": {
  "data": {
   "lineno": 1038
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertLayer": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertLayer.__init__": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_lxmert.TFLxmertIntermediate",
    "transformers.modeling_tf_lxmert.TFLxmertOutput",
    "transformers.modeling_tf_lxmert.TFLxmertSelfAttentionLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertLayer.call": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMLMHead": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMLMHead.__init__": {
  "data": {
   "lineno": 1046,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_lxmert.TFLxmertLMPredictionHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMLMHead.call": {
  "data": {
   "lineno": 1051
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer.__init__": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "TFLxmertPooler",
    "super",
    "transformers.modeling_tf_lxmert.TFLxmertEmbeddings",
    "transformers.modeling_tf_lxmert.TFLxmertEncoder"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer._prune_heads": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer.call": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.fill",
    "tensorflow.float32",
    "tensorflow.newaxis",
    "transformers.modeling_tf_lxmert.TFLxmertModelOutput",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer.dummy_inputs": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant",
    "tensorflow.random.uniform"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 704
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertMainLayer.set_input_embeddings": {
  "data": {
   "lineno": 707
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertModel": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_lxmert.LXMERT_START_DOCSTRING",
    "transformers.modeling_tf_lxmert.TFLxmertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertModel.__init__": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_lxmert.TFLxmertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertModel.call": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_lxmert.LXMERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_lxmert.TFLxmertModelOutput",
    "transformers.modeling_tf_lxmert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_lxmert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertModelOutput": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertOutput": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertOutput.__init__": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertOutput.call": {
  "data": {
   "lineno": 394
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPooler": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPooler.__init__": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPooler.call": {
  "data": {
   "lineno": 995
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPreTrainedModel": {
  "data": {
   "lineno": 851
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPreTrainedModel.dummy_inputs": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "getattr",
    "property",
    "str",
    "tensorflow.Tensor",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPreTrainingHeads": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPreTrainingHeads.__init__": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_lxmert.TFLxmertLMPredictionHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPreTrainingHeads.call": {
  "data": {
   "lineno": 1067
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPredictionHeadTransform": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPredictionHeadTransform.__init__": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertPredictionHeadTransform.call": {
  "data": {
   "lineno": 1017
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertSelfAttentionLayer": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertSelfAttentionLayer.__init__": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_lxmert.TFLxmertAttention",
    "transformers.modeling_tf_lxmert.TFLxmertAttentionOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertSelfAttentionLayer.call": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualAnswerHead": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualAnswerHead.__init__": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualAnswerHead.call": {
  "data": {
   "lineno": 1090
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualFeatureEncoder": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualFeatureEncoder.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualFeatureEncoder.call": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualObjHead": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualObjHead.__init__": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_lxmert.TFLxmertPredictionHeadTransform"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertVisualObjHead.call": {
  "data": {
   "lineno": 1125
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertXLayer": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_lxmert.TFLxmertXLayer.__init__": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_lxmert.TFLxmertCrossAttentionLayer",
    "transformers.modeling_tf_lxmert.TFLxmertIntermediate",
    "transformers.modeling_tf_lxmert.TFLxmertOutput",
    "transformers.modeling_tf_lxmert.TFLxmertSelfAttentionLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertXLayer.call": {
  "data": {
   "lineno": 544
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertXLayer.cross_att": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "tensorflow.identity"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertXLayer.output_fc": {
  "data": {
   "lineno": 534
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TFLxmertXLayer.self_att": {
  "data": {
   "lineno": 520
  },
  "type": "function"
 },
 "transformers.modeling_tf_lxmert.TF_LXMERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.modeling_tf_lxmert.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_lxmert._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.modeling_tf_lxmert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "transformers.modeling_tf_lxmert.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_tf_lxmert.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.modeling_tf_lxmert.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_marian": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_tf_available",
    "transformers.modeling_tf_marian._CONFIG_FOR_DOC"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_marian.START_DOCSTRING": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.modeling_tf_marian.TFMarianMTModel": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_marian.START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_marian.TFMarianMTModel.adjust_logits_during_generation": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "range",
    "tensorflow.constant",
    "tensorflow.where"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_marian._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.modeling_tf_marian.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.modeling_tf_marian.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_mbart": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_tf_mbart._CONFIG_FOR_DOC"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_mbart.START_DOCSTRING": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.modeling_tf_mbart.TFMBartForConditionalGeneration": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_mbart.START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mbart._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.modeling_tf_mbart.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.modeling_tf_mobilebert": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_tf_mobilebert.TFLayerNorm",
    "transformers.modeling_tf_mobilebert.TFNoNorm"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_mobilebert.MOBILEBERT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 900
  },
  "type": "constant"
 },
 "transformers.modeling_tf_mobilebert.MOBILEBERT_START_DOCSTRING": {
  "data": {
   "lineno": 864
  },
  "type": "constant"
 },
 "transformers.modeling_tf_mobilebert.NORM2FN": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "transformers.modeling_tf_mobilebert.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_mobilebert.TFBottleneck": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFBottleneck.__init__": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_mobilebert.TFBottleneckLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFBottleneck.call": {
  "data": {
   "lineno": 445
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFBottleneckLayer": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFBottleneckLayer.__init__": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_mobilebert.NORM2FN"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFBottleneckLayer.call": {
  "data": {
   "lineno": 430
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFFFNLayer": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFFFNLayer.__init__": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_mobilebert.TFFFNOutput",
    "transformers.modeling_tf_mobilebert.TFMobileBertIntermediate"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFFFNLayer.call": {
  "data": {
   "lineno": 492
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFFFNOutput": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFFFNOutput.__init__": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_mobilebert.NORM2FN"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFFFNOutput.call": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFLayerNorm": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFLayerNorm.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertAttention": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertAttention.__init__": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_mobilebert.TFMobileBertSelfAttention",
    "transformers.modeling_tf_mobilebert.TFMobileBertSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertAttention.call": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertAttention.prune_heads": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEmbeddings": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEmbeddings.__init__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "transformers.modeling_tf_mobilebert.NORM2FN"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEmbeddings._embedding": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.concat",
    "tensorflow.fill",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.pad",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEmbeddings._linear": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.matmul",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEmbeddings.build": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEmbeddings.call": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEncoder": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEncoder.__init__": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "range",
    "super",
    "transformers.modeling_tf_mobilebert.TFMobileBertLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertEncoder.call": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "enumerate",
    "layer_module",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMaskedLM": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_tf_mobilebert.TFMobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMaskedLM.__init__": {
  "data": {
   "lineno": 1034,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_mobilebert.TFMobileBertMLMHead",
    "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMaskedLM.call": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "TFMaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_mobilebert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_mobilebert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 1040
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMultipleChoice": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_tf_mobilebert.TFMobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMultipleChoice.__init__": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMultipleChoice.call": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "TFMultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.reshape",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_mobilebert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_mobilebert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForMultipleChoice.dummy_inputs": {
  "data": {
   "lineno": 1369,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForNextSentencePrediction": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_tf_mobilebert.TFMobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForNextSentencePrediction.__init__": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer",
    "transformers.modeling_tf_mobilebert.TFMobileBertOnlyNSPHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForNextSentencePrediction.call": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "TFNextSentencePredictorOutput",
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_mobilebert._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForPreTraining": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_tf_mobilebert.TFMobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForPreTraining.__init__": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "TFMobileBertOnlyNSPHead",
    "super",
    "transformers.modeling_tf_mobilebert.TFMobileBertMLMHead",
    "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForPreTraining.call": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_mobilebert.TFMobileBertForPreTrainingOutput",
    "transformers.modeling_tf_mobilebert._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForPreTraining.get_output_embeddings": {
  "data": {
   "lineno": 989
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForPreTrainingOutput": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForQuestionAnswering": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_tf_mobilebert.TFMobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForQuestionAnswering.call": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "TFQuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "tensorflow.split",
    "tensorflow.squeeze",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_mobilebert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_mobilebert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForSequenceClassification": {
  "data": {
   "lineno": 1166,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_tf_mobilebert.TFMobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForSequenceClassification.call": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "TFSequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_mobilebert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_mobilebert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForTokenClassification": {
  "data": {
   "lineno": 1483,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_tf_mobilebert.TFMobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForTokenClassification.__init__": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertForTokenClassification.call": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "TFTokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_mobilebert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_mobilebert._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertIntermediate": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertIntermediate.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "get_tf_activation",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertIntermediate.call": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertLMPredictionHead": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertLMPredictionHead.__init__": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_mobilebert.TFMobileBertPredictionHeadTransform"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertLMPredictionHead.build": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertLMPredictionHead.call": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.matmul",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertLayer": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertLayer.__init__": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "range",
    "super",
    "transformers.modeling_tf_mobilebert.TFBottleneck",
    "transformers.modeling_tf_mobilebert.TFFFNLayer",
    "transformers.modeling_tf_mobilebert.TFMobileBertAttention",
    "transformers.modeling_tf_mobilebert.TFMobileBertIntermediate",
    "transformers.modeling_tf_mobilebert.TFMobileBertOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertLayer.call": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "enumerate",
    "ffn_module",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMLMHead": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMLMHead.__init__": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_mobilebert.TFMobileBertLMPredictionHead"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMLMHead.call": {
  "data": {
   "lineno": 680
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer.__init__": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_mobilebert.TFMobileBertEmbeddings",
    "transformers.modeling_tf_mobilebert.TFMobileBertEncoder",
    "transformers.modeling_tf_mobilebert.TFMobileBertPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer._prune_heads": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer.call": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFBaseModelOutputWithPooling",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.fill",
    "tensorflow.float32",
    "tensorflow.newaxis",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 700
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertModel": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_START_DOCSTRING",
    "transformers.modeling_tf_mobilebert.TFMobileBertPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertModel.__init__": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_mobilebert.TFMobileBertMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertModel.call": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "TFBaseModelOutputWithPooling",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_mobilebert.MOBILEBERT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_mobilebert._CONFIG_FOR_DOC",
    "transformers.modeling_tf_mobilebert._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertOnlyNSPHead": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertOnlyNSPHead.__init__": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertOnlyNSPHead.call": {
  "data": {
   "lineno": 1113
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertOutput": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertOutput.__init__": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_mobilebert.NORM2FN",
    "transformers.modeling_tf_mobilebert.TFOutputBottleneck"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertOutput.call": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertPooler": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertPooler.__init__": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertPooler.call": {
  "data": {
   "lineno": 615
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertPreTrainedModel": {
  "data": {
   "lineno": 823
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertPredictionHeadTransform": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertPredictionHeadTransform.__init__": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_mobilebert.NORM2FN"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertPredictionHeadTransform.call": {
  "data": {
   "lineno": 638
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertSelfAttention": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertSelfAttention.__init__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "ValueError",
    "get_initializer",
    "int",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertSelfAttention.call": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.math.sqrt",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertSelfAttention.transpose_for_scores": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertSelfOutput": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertSelfOutput.__init__": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_mobilebert.NORM2FN"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFMobileBertSelfOutput.call": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFNoNorm": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFNoNorm.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFNoNorm.build": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFNoNorm.call": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "tensorflow.Tensor"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFOutputBottleneck": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_mobilebert.TFOutputBottleneck.__init__": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_mobilebert.NORM2FN"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TFOutputBottleneck.call": {
  "data": {
   "lineno": 389
  },
  "type": "function"
 },
 "transformers.modeling_tf_mobilebert.TF_MOBILEBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "transformers.modeling_tf_mobilebert.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_mobilebert._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "transformers.modeling_tf_mobilebert._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "transformers.modeling_tf_mobilebert.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_tf_mobilebert.logger": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "transformers.modeling_tf_mobilebert.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_openai.OPENAI_GPT_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 435
  },
  "type": "constant"
 },
 "transformers.modeling_tf_openai.OPENAI_GPT_START_DOCSTRING": {
  "data": {
   "lineno": 398
  },
  "type": "constant"
 },
 "transformers.modeling_tf_openai.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai.TFAttention": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFAttention.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "TFConv1D",
    "set",
    "super",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention._attn": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.math.sqrt",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.call": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "tensorflow.split"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.causal_attention_mask": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.cast",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.merge_heads": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.prune_heads": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFAttention.split_heads": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFBlock": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFBlock.__init__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_openai.TFAttention",
    "transformers.modeling_tf_openai.TFMLP"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFBlock.call": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFMLP": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFMLP.__init__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "TFConv1D",
    "get_tf_activation",
    "super",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFMLP.call": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModel": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_openai.OPENAI_GPT_START_DOCSTRING",
    "transformers.modeling_tf_openai.TFOpenAIGPTPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModel.__init__": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "TFSequenceSummary",
    "super",
    "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModel.call": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "replace_return_docstrings",
    "shape_list",
    "tensorflow.reshape",
    "tensorflow.squeeze",
    "transformers.modeling_tf_openai.OPENAI_GPT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModelOutput",
    "transformers.modeling_tf_openai._CONFIG_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModel.get_output_embeddings": {
  "data": {
   "lineno": 612
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTDoubleHeadsModelOutput": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTLMHeadModel": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_openai.OPENAI_GPT_START_DOCSTRING",
    "transformers.modeling_tf_openai.TFOpenAIGPTPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTLMHeadModel.__init__": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTLMHeadModel.call": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "TFCausalLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_openai.OPENAI_GPT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_openai._CONFIG_FOR_DOC",
    "transformers.modeling_tf_openai._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTLMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer.__init__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "TFSharedEmbeddings",
    "get_initializer",
    "range",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "transformers.modeling_tf_openai.TFBlock"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer._prune_heads": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer.call": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFBaseModelOutput",
    "ValueError",
    "block",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range",
    "tensorflow.reshape",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer.set_input_embeddings": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTModel": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_openai.OPENAI_GPT_START_DOCSTRING",
    "transformers.modeling_tf_openai.TFOpenAIGPTPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTModel.__init__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_openai.TFOpenAIGPTMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTModel.call": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_openai.OPENAI_GPT_INPUTS_DOCSTRING",
    "transformers.modeling_tf_openai._CONFIG_FOR_DOC",
    "transformers.modeling_tf_openai._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_openai.TFOpenAIGPTPreTrainedModel": {
  "data": {
   "lineno": 359
  },
  "type": "class"
 },
 "transformers.modeling_tf_openai.TF_OPENAI_GPT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "transformers.modeling_tf_openai.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "transformers.modeling_tf_openai._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.modeling_tf_openai.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_tf_openai.logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.modeling_tf_openai.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_outputs": {
  "data": {},
  "type": "module"
 },
 "transformers.modeling_tf_outputs.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.modeling_tf_outputs.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_outputs.TFBaseModelOutput": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFBaseModelOutputWithPast": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFBaseModelOutputWithPooling": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFCausalLMOutput": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFCausalLMOutputWithPast": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFMaskedLMOutput": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFMultipleChoiceModelOutput": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFNextSentencePredictorOutput": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFQuestionAnsweringModelOutput": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFSeq2SeqLMOutput": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFSeq2SeqModelOutput": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFSeq2SeqQuestionAnsweringModelOutput": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFSeq2SeqSequenceClassifierOutput": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFSequenceClassifierOutput": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.TFTokenClassifierOutput": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_outputs.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_outputs.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_tf_outputs.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_pegasus": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.modeling_tf_pegasus._CONFIG_FOR_DOC"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_pegasus.START_DOCSTRING": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.modeling_tf_pegasus.TFPegasusForConditionalGeneration": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_pegasus.START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_pegasus._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.modeling_tf_pegasus.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.modeling_tf_pytorch_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_pytorch_utils.K": {
  "data": {
   "shadows": "tensorflow.python.keras.backend"
  },
  "type": "import"
 },
 "transformers.modeling_tf_pytorch_utils.convert_tf_weight_name_to_pt_weight_name": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "bool",
    "transformers.modeling_tf_pytorch_utils.re"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_pytorch_utils.load_pytorch_checkpoint_in_tf2_model": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ImportError",
    "load_pytorch_weights_in_tf2_model",
    "sum",
    "transformers.modeling_tf_pytorch_utils.logger",
    "transformers.modeling_tf_pytorch_utils.os",
    "transformers.modeling_tf_pytorch_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_pytorch_utils.load_pytorch_model_in_tf2_model": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "load_pytorch_weights_in_tf2_model"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_pytorch_utils.load_pytorch_weights_in_tf2_model": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "ImportError",
    "any",
    "len",
    "list",
    "set",
    "tensorflow.python.keras.backend.batch_set_value",
    "tf_model",
    "tf_model.__class__.__name__",
    "tf_model.authorized_missing_keys",
    "tf_model.authorized_unexpected_keys",
    "tf_model.base_model_prefix",
    "tf_model.non_trainable_weights",
    "tf_model.trainable_weights",
    "transformers.modeling_tf_pytorch_utils.convert_tf_weight_name_to_pt_weight_name",
    "transformers.modeling_tf_pytorch_utils.logger",
    "transformers.modeling_tf_pytorch_utils.numpy",
    "transformers.modeling_tf_pytorch_utils.re",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_pytorch_utils.load_tf2_checkpoint_in_pytorch_model": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ImportError",
    "getattr",
    "load_tf2_model_in_pytorch_model",
    "load_tf_weights",
    "tf_model",
    "tf_model.dummy_inputs",
    "tf_model_class",
    "transformers.modeling_tf_pytorch_utils.logger",
    "transformers.modeling_tf_pytorch_utils.transformers"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_pytorch_utils.load_tf2_model_in_pytorch_model": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "load_tf2_weights_in_pytorch_model",
    "tf_model.weights"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_pytorch_utils.load_tf2_weights_in_pytorch_model": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "ImportError",
    "any",
    "dict",
    "len",
    "list",
    "set",
    "transformers.modeling_tf_pytorch_utils.convert_tf_weight_name_to_pt_weight_name",
    "transformers.modeling_tf_pytorch_utils.logger",
    "transformers.modeling_tf_pytorch_utils.numpy",
    "transformers.modeling_tf_pytorch_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_pytorch_utils.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.modeling_tf_pytorch_utils.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_pytorch_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_tf_pytorch_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_tf_pytorch_utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_pytorch_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_tf_pytorch_utils.transformers": {
  "data": {
   "shadows": "transformers"
  },
  "type": "import"
 },
 "transformers.modeling_tf_roberta": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_roberta.ROBERTA_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 657
  },
  "type": "constant"
 },
 "transformers.modeling_tf_roberta.ROBERTA_START_DOCSTRING": {
  "data": {
   "lineno": 621
  },
  "type": "constant"
 },
 "transformers.modeling_tf_roberta.TFRobertaAttention": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaAttention.__init__": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_roberta.TFRobertaSelfAttention",
    "transformers.modeling_tf_roberta.TFRobertaSelfOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaAttention.call": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaAttention.prune_heads": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaClassificationHead": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaClassificationHead.__init__": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaClassificationHead.call": {
  "data": {
   "lineno": 862
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings._embedding": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.fill",
    "tensorflow.gather",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings._linear": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.matmul",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings.build": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings.call": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings.create_position_ids_from_input_ids": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.int32",
    "tensorflow.math.cumsum",
    "tensorflow.math.not_equal"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEmbeddings.create_position_ids_from_inputs_embeds": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEncoder": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaEncoder.__init__": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "range",
    "super",
    "transformers.modeling_tf_roberta.TFRobertaLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaEncoder.call": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "enumerate",
    "layer_module",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMaskedLM": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_tf_roberta.TFRobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMaskedLM.__init__": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_roberta.TFRobertaLMHead",
    "transformers.modeling_tf_roberta.TFRobertaMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMaskedLM.call": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "TFMaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_roberta._CONFIG_FOR_DOC",
    "transformers.modeling_tf_roberta._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMaskedLM.get_output_embeddings": {
  "data": {
   "lineno": 776
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMultipleChoice": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_tf_roberta.TFRobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMultipleChoice.__init__": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_roberta.TFRobertaMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMultipleChoice.call": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "TFMultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.reshape",
    "transformers.modeling_tf_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_roberta._CONFIG_FOR_DOC",
    "transformers.modeling_tf_roberta._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForMultipleChoice.dummy_inputs": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForQuestionAnswering": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_tf_roberta.TFRobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_roberta.TFRobertaMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForQuestionAnswering.call": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "TFQuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "tensorflow.split",
    "tensorflow.squeeze",
    "transformers.modeling_tf_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_roberta._CONFIG_FOR_DOC",
    "transformers.modeling_tf_roberta._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForSequenceClassification": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_tf_roberta.TFRobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaForSequenceClassification.__init__": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_roberta.TFRobertaClassificationHead",
    "transformers.modeling_tf_roberta.TFRobertaMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForSequenceClassification.call": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "TFSequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_roberta._CONFIG_FOR_DOC",
    "transformers.modeling_tf_roberta._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForTokenClassification": {
  "data": {
   "lineno": 1078,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_tf_roberta.TFRobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaForTokenClassification.__init__": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_roberta.TFRobertaMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaForTokenClassification.call": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "TFTokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_roberta._CONFIG_FOR_DOC",
    "transformers.modeling_tf_roberta._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaIntermediate": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaIntermediate.__init__": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaIntermediate.call": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaLMHead": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaLMHead.__init__": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaLMHead.build": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaLMHead.call": {
  "data": {
   "lineno": 754
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaLayer": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaLayer.__init__": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_roberta.TFRobertaAttention",
    "transformers.modeling_tf_roberta.TFRobertaIntermediate",
    "transformers.modeling_tf_roberta.TFRobertaOutput"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaLayer.call": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer.__init__": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_roberta.TFRobertaEmbeddings",
    "transformers.modeling_tf_roberta.TFRobertaEncoder",
    "transformers.modeling_tf_roberta.TFRobertaPooler"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer._prune_heads": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer.call": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFBaseModelOutputWithPooling",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.fill",
    "tensorflow.newaxis",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaMainLayer.set_input_embeddings": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaModel": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_roberta.ROBERTA_START_DOCSTRING",
    "transformers.modeling_tf_roberta.TFRobertaPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaModel.__init__": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_roberta.TFRobertaMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaModel.call": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "TFBaseModelOutputWithPooling",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_roberta.ROBERTA_INPUTS_DOCSTRING",
    "transformers.modeling_tf_roberta._CONFIG_FOR_DOC",
    "transformers.modeling_tf_roberta._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaOutput": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaOutput.__init__": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaOutput.call": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaPooler": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaPooler.__init__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaPooler.call": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaPreTrainedModel": {
  "data": {
   "lineno": 611
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaSelfAttention": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaSelfAttention.__init__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "ValueError",
    "get_initializer",
    "int",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaSelfAttention.call": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.math.sqrt",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaSelfAttention.transpose_for_scores": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaSelfOutput": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_roberta.TFRobertaSelfOutput.__init__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TFRobertaSelfOutput.call": {
  "data": {
   "lineno": 330
  },
  "type": "function"
 },
 "transformers.modeling_tf_roberta.TF_ROBERTA_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "transformers.modeling_tf_roberta._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.modeling_tf_roberta._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "transformers.modeling_tf_roberta.logger": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "transformers.modeling_tf_roberta.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_t5": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_t5.T5_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 861
  },
  "type": "constant"
 },
 "transformers.modeling_tf_t5.T5_START_DOCSTRING": {
  "data": {
   "lineno": 820
  },
  "type": "constant"
 },
 "transformers.modeling_tf_t5.TFT5Attention": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer",
    "transformers.modeling_tf_t5.itertools"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5Attention.__init__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "next",
    "set",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "transformers.modeling_tf_t5.TFT5Attention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Attention._relative_position_bucket": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.dtypes.cast",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.math.abs",
    "tensorflow.math.less",
    "tensorflow.math.log",
    "tensorflow.math.maximum",
    "tensorflow.math.minimum",
    "tensorflow.where",
    "transformers.modeling_tf_t5.math"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Attention.call": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "cast_bool_to_primitive",
    "input",
    "len",
    "shape",
    "shape_list",
    "tensorflow.concat",
    "tensorflow.einsum",
    "tensorflow.matmul",
    "tensorflow.nn.softmax",
    "unshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Attention.call.shape": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Attention.call.unshape": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Attention.compute_bias": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "tensorflow.expand_dims",
    "tensorflow.range",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Attention.prune_heads": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Block": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5Block.__init__": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "len",
    "super",
    "transformers.modeling_tf_t5.TFT5LayerCrossAttention",
    "transformers.modeling_tf_t5.TFT5LayerFF",
    "transformers.modeling_tf_t5.TFT5LayerSelfAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Block.call": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "len",
    "shape_list"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5DenseReluDense": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5DenseReluDense.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.activations.relu",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5DenseReluDense.call": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_t5.T5_START_DOCSTRING",
    "transformers.modeling_tf_t5.TFT5PreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.__init__": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "TFSharedEmbeddings",
    "super",
    "tensorflow.compat.v1.variable_scope",
    "transformers.modeling_tf_t5.TFT5MainLayer",
    "transformers.modeling_tf_t5.copy",
    "transformers.modeling_tf_utils.TFWrappedEmbeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration._reorder_cache": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "len",
    "shape_list",
    "tensorflow.gather",
    "transformers.modeling_tf_t5.logger",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.call": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "FutureWarning",
    "TFSeq2SeqLMOutput",
    "add_start_docstrings_to_model_forward",
    "cast_bool_to_primitive",
    "dict",
    "embed_tokens",
    "isinstance",
    "len",
    "list",
    "replace_return_docstrings",
    "transformers.modeling_tf_t5.T5_INPUTS_DOCSTRING",
    "transformers.modeling_tf_t5._CONFIG_FOR_DOC",
    "transformers.modeling_tf_t5.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.get_decoder": {
  "data": {
   "lineno": 1177
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.get_encoder": {
  "data": {
   "lineno": 1174
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.get_input_embeddings": {
  "data": {
   "lineno": 1158
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.get_output_embeddings": {
  "data": {
   "lineno": 1161
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.prepare_inputs_for_generation": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5ForConditionalGeneration.set_input_embeddings": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "tensorflow.compat.v1.variable_scope",
    "transformers.modeling_tf_utils.TFWrappedEmbeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerCrossAttention": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5LayerCrossAttention.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_t5.TFT5Attention",
    "transformers.modeling_tf_t5.TFT5LayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerCrossAttention.call": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerFF": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5LayerFF.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_t5.TFT5DenseReluDense",
    "transformers.modeling_tf_t5.TFT5LayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerFF.call": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerNorm": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5LayerNorm.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerNorm.build": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerNorm.call": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "tensorflow.math.reduce_mean",
    "tensorflow.math.rsqrt",
    "tensorflow.math.square"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerSelfAttention": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5LayerSelfAttention.__init__": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_t5.TFT5Attention",
    "transformers.modeling_tf_t5.TFT5LayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5LayerSelfAttention.call": {
  "data": {
   "lineno": 331
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer.__init__": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "bool",
    "range",
    "super",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_t5.TFT5Block",
    "transformers.modeling_tf_t5.TFT5LayerNorm"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer._prune_heads": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer.call": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "cast_bool_to_primitive",
    "dict",
    "enumerate",
    "isinstance",
    "layer_module",
    "len",
    "list",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.fill",
    "tensorflow.float32",
    "tensorflow.less_equal",
    "tensorflow.range",
    "tensorflow.reshape",
    "tensorflow.tile",
    "transformers.modeling_tf_t5.warnings",
    "tuple",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer.get_input_embeddings": {
  "data": {
   "lineno": 538
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer.get_output_embeddings": {
  "data": {
   "lineno": 541
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5MainLayer.set_embed_tokens": {
  "data": {
   "lineno": 544
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Model": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_t5.T5_START_DOCSTRING",
    "transformers.modeling_tf_t5.TFT5PreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5Model.__init__": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "TFSharedEmbeddings",
    "super",
    "tensorflow.compat.v1.variable_scope",
    "transformers.modeling_tf_t5.TFT5MainLayer",
    "transformers.modeling_tf_t5.copy",
    "transformers.modeling_tf_utils.TFWrappedEmbeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Model.call": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "FutureWarning",
    "TFSeq2SeqModelOutput",
    "add_start_docstrings_to_model_forward",
    "cast_bool_to_primitive",
    "dict",
    "isinstance",
    "len",
    "list",
    "replace_return_docstrings",
    "transformers.modeling_tf_t5.T5_INPUTS_DOCSTRING",
    "transformers.modeling_tf_t5._CONFIG_FOR_DOC",
    "transformers.modeling_tf_t5.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Model.get_decoder": {
  "data": {
   "lineno": 980
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Model.get_encoder": {
  "data": {
   "lineno": 977
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Model.get_input_embeddings": {
  "data": {
   "lineno": 960
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Model.get_output_embeddings": {
  "data": {
   "lineno": 963
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5Model.set_input_embeddings": {
  "data": {
   "lineno": 966,
   "symbols_in_volume": [
    "tensorflow.compat.v1.variable_scope",
    "transformers.modeling_tf_utils.TFWrappedEmbeddings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5PreTrainedModel": {
  "data": {
   "lineno": 771
  },
  "type": "class"
 },
 "transformers.modeling_tf_t5.TFT5PreTrainedModel._shift_right": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.control_dependencies",
    "tensorflow.debugging.assert_greater_equal",
    "tensorflow.fill",
    "tensorflow.identity",
    "tensorflow.int32",
    "tensorflow.roll",
    "tensorflow.where"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFT5PreTrainedModel.dummy_inputs": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_t5.TFWrappedEmbeddings": {
  "data": {
   "shadows": "transformers.modeling_tf_utils.TFWrappedEmbeddings"
  },
  "type": "import"
 },
 "transformers.modeling_tf_t5.TF_T5_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.modeling_tf_t5.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_t5._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "transformers.modeling_tf_t5._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "transformers.modeling_tf_t5.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_t5.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "transformers.modeling_tf_t5.logger": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "transformers.modeling_tf_t5.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_tf_t5.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_t5.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_transfo_xl.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding.__init__": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "NotImplementedError",
    "get_initializer",
    "len",
    "range",
    "super",
    "tensorflow.keras.layers.Embedding"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding.build": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "get_initializer",
    "len",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding.call": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "range",
    "shape_list",
    "tensorflow.boolean_mask",
    "tensorflow.cast",
    "tensorflow.einsum",
    "tensorflow.int64",
    "tensorflow.reshape",
    "tensorflow.scatter_nd",
    "tensorflow.where",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionalEmbedding": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionalEmbedding.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "super",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionalEmbedding.call": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.cos",
    "tensorflow.einsum",
    "tensorflow.sin",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionwiseFF": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionwiseFF.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization",
    "tensorflow.nn.relu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFPositionwiseFF.call": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableDecoderLayer": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableDecoderLayer.__init__": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_transfo_xl.TFPositionwiseFF",
    "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableDecoderLayer.call": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn._rel_shift": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.pad",
    "tensorflow.reshape",
    "tensorflow.slice"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn.build": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableMultiHeadAttn.call": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.concat",
    "tensorflow.einsum",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "tensorflow.split"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_transfo_xl.TFTransfoXLPreTrainedModel",
    "transformers.modeling_tf_transfo_xl.TRANSFO_XL_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.__init__": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "TFAdaptiveSoftmaxMask",
    "super",
    "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.call": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModelOutput",
    "transformers.modeling_tf_transfo_xl.TRANSFO_XL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_transfo_xl._CONFIG_FOR_DOC",
    "transformers.modeling_tf_transfo_xl._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.init_mems": {
  "data": {
   "lineno": 878
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.prepare_inputs_for_generation": {
  "data": {
   "lineno": 955
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.reset_length": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "FutureWarning",
    "transformers.modeling_tf_transfo_xl.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModel.reset_memory_length": {
  "data": {
   "lineno": 875
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLLMHeadModelOutput": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMHead": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMHead.__init__": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMHead.build": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMHead.call": {
  "data": {
   "lineno": 836
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.__init__": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "NotImplementedError",
    "range",
    "super",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_transfo_xl.TFAdaptiveEmbedding",
    "transformers.modeling_tf_transfo_xl.TFPositionalEmbedding",
    "transformers.modeling_tf_transfo_xl.TFRelPartialLearnableDecoderLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer._prune_heads": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer._update_mems": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "len",
    "max",
    "range",
    "tensorflow.concat",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.backward_compatible": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.build": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.call": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFTransfoXLModelOutput",
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "layer",
    "len",
    "list",
    "shape_list",
    "tensorflow.concat",
    "tensorflow.linalg.band_part",
    "tensorflow.minimum",
    "tensorflow.ones",
    "tensorflow.range",
    "tensorflow.transpose",
    "tensorflow.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.init_mems": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "range",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.reset_memory_length": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer.set_input_embeddings": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLModel": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_transfo_xl.TFTransfoXLPreTrainedModel",
    "transformers.modeling_tf_transfo_xl.TRANSFO_XL_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLModel.__init__": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_transfo_xl.TFTransfoXLMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLModel.call": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_transfo_xl.TFTransfoXLModelOutput",
    "transformers.modeling_tf_transfo_xl.TRANSFO_XL_INPUTS_DOCSTRING",
    "transformers.modeling_tf_transfo_xl._CONFIG_FOR_DOC",
    "transformers.modeling_tf_transfo_xl._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLModelOutput": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TFTransfoXLPreTrainedModel": {
  "data": {
   "lineno": 655
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl.TF_TRANSFO_XL_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "transformers.modeling_tf_transfo_xl.TRANSFO_XL_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 765
  },
  "type": "constant"
 },
 "transformers.modeling_tf_transfo_xl.TRANSFO_XL_START_DOCSTRING": {
  "data": {
   "lineno": 729
  },
  "type": "constant"
 },
 "transformers.modeling_tf_transfo_xl.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "transformers.modeling_tf_transfo_xl._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.modeling_tf_transfo_xl.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.logger": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.modeling_tf_transfo_xl.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_tf_transfo_xl_utilities": {
  "data": {},
  "type": "module"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask._gather_logprob": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "shape_list",
    "staticmethod",
    "tensorflow.gather_nd",
    "tensorflow.range",
    "tensorflow.stack"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask._logit": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.einsum"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask.build": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl_utilities.TFAdaptiveSoftmaxMask.call": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "range",
    "shape_list",
    "tensorflow.boolean_mask",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.float32",
    "tensorflow.int64",
    "tensorflow.nn.log_softmax",
    "tensorflow.nn.sparse_softmax_cross_entropy_with_logits",
    "tensorflow.reduce_mean",
    "tensorflow.scatter_nd",
    "tensorflow.where",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_transfo_xl_utilities.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.modeling_tf_utils.K": {
  "data": {
   "shadows": "tensorflow.python.keras.backend"
  },
  "type": "import"
 },
 "transformers.modeling_tf_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.modeling_tf_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_utils.TFCausalLanguageModelingLoss": {
  "data": {
   "lineno": 125
  },
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFCausalLanguageModelingLoss.compute_loss": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "loss_fn",
    "shape_list",
    "tensorflow.boolean_mask",
    "tensorflow.keras.losses.Reduction.NONE",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy",
    "tensorflow.not_equal",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFConv1D": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFConv1D.__init__": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFConv1D.build": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "get_initializer",
    "tensorflow.zeros_initializer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFConv1D.call": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.matmul",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFMaskedLanguageModelingLoss": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "transformers.modeling_tf_utils.TFCausalLanguageModelingLoss"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFModelUtilsMixin": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFModelUtilsMixin.num_parameters": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.prod",
    "sum"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFMultipleChoiceLoss": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "transformers.modeling_tf_utils.TFSequenceClassificationLoss"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "tensorflow.keras.Model",
    "transformers.modeling_tf_utils.TFModelUtilsMixin"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.__init__": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel._get_resized_embeddings": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "get_initializer",
    "getattr",
    "min",
    "tensorflow.Variable",
    "tensorflow.float32"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel._get_word_embeddings": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel._resize_token_embeddings": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.dummy_inputs": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "property",
    "str",
    "tensorflow.Tensor",
    "tensorflow.constant",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "EnvironmentError",
    "OSError",
    "cached_path",
    "classmethod",
    "cls",
    "cls.authorized_missing_keys",
    "cls.authorized_unexpected_keys",
    "hf_bucket_url",
    "is_remote_url",
    "isinstance",
    "len",
    "load_pytorch_checkpoint_in_tf2_model",
    "model",
    "model.__class__.__name__",
    "model.dummy_inputs",
    "transformers.modeling_tf_utils.detect_tf_missing_unexpected_layers",
    "transformers.modeling_tf_utils.load_tf_weights",
    "transformers.modeling_tf_utils.logger",
    "transformers.modeling_tf_utils.os",
    "transformers.modeling_tf_utils.re"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.get_input_embeddings": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "NotImplementedError",
    "getattr",
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.get_output_embeddings": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.prune_heads": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.resize_token_embeddings": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "tensorflow.Variable"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.save_pretrained": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "transformers.modeling_tf_utils.logger",
    "transformers.modeling_tf_utils.os"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFPreTrainedModel.set_input_embeddings": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "NotImplementedError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFQuestionAnsweringLoss": {
  "data": {
   "lineno": 146
  },
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFQuestionAnsweringLoss.compute_loss": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "loss_fn",
    "tensorflow.keras.losses.Reduction.NONE",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSequenceClassificationLoss": {
  "data": {
   "lineno": 188
  },
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFSequenceClassificationLoss.compute_loss": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "len",
    "loss_fn",
    "shape_list",
    "tensorflow.keras.losses.MeanSquaredError",
    "tensorflow.keras.losses.Reduction.NONE",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSequenceSummary": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFSequenceSummary.__init__": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "NotImplementedError",
    "float",
    "get_initializer",
    "hasattr",
    "super",
    "tensorflow.keras.activations.tanh",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSequenceSummary.call": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.fill",
    "tensorflow.gather",
    "tensorflow.newaxis",
    "tensorflow.reduce_mean",
    "tensorflow.squeeze",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSharedEmbeddings": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFSharedEmbeddings.__init__": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "float",
    "int",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSharedEmbeddings._embedding": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "tensorflow.gather"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSharedEmbeddings._linear": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.matmul",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSharedEmbeddings.build": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "get_initializer",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSharedEmbeddings.call": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "tensorflow.Tensor"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFSharedEmbeddings.get_config": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "dict",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFTokenClassificationLoss": {
  "data": {
   "lineno": 161
  },
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFTokenClassificationLoss.compute_loss": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "loss_fn",
    "shape_list",
    "tensorflow.boolean_mask",
    "tensorflow.keras.losses.Reduction.NONE",
    "tensorflow.keras.losses.SparseCategoricalCrossentropy",
    "tensorflow.math.reduce_any",
    "tensorflow.reshape",
    "transformers.modeling_tf_utils.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFWrappedEmbeddings": {
  "data": {
   "lineno": 1069
  },
  "type": "class"
 },
 "transformers.modeling_tf_utils.TFWrappedEmbeddings.__call__": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "tensorflow.compat.v1.variable_scope",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFWrappedEmbeddings.__init__": {
  "data": {
   "lineno": 1076
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.TFWrappedEmbeddings.call": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "tensorflow.compat.v1.variable_scope",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.modeling_tf_utils.cast_bool_to_primitive": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "bool",
    "hasattr",
    "tensorflow.Tensor",
    "tensorflow.is_tensor",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.detect_tf_missing_unexpected_layers": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "list",
    "set",
    "tensorflow.python.keras.saving.hdf5_format.load_attributes_from_hdf5_group",
    "transformers.modeling_tf_utils.h5py"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "transformers.modeling_tf_utils.get_initializer": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "float",
    "tensorflow.initializers.TruncatedNormal",
    "tensorflow.keras.initializers.TruncatedNormal"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "transformers.modeling_tf_utils.hdf5_format": {
  "data": {
   "shadows": "tensorflow.python.keras.saving.hdf5_format"
  },
  "type": "import"
 },
 "transformers.modeling_tf_utils.keras_serializable": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "getattr",
    "hasattr",
    "tensorflow.keras.utils",
    "tensorflow.keras.utils.register_keras_serializable"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.keras_serializable.get_config": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.keras_serializable.wrapped_init": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "initializer",
    "isinstance",
    "len",
    "transformers.modeling_tf_utils.functools"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.load_tf_weights": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.asarray",
    "numpy.reshape",
    "set",
    "tensorflow.python.keras.backend.batch_set_value",
    "tensorflow.python.keras.backend.int_shape",
    "tensorflow.python.keras.saving.hdf5_format.load_attributes_from_hdf5_group",
    "transformers.modeling_tf_utils.h5py"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.modeling_tf_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_tf_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_tf_utils.shape_list": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "tensorflow.Tensor",
    "tensorflow.shape",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_xlm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.TFXLMForMultipleChoice": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm.TFXLMPreTrainedModel",
    "transformers.modeling_tf_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMForMultipleChoice.__init__": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "TFSequenceSummary",
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_xlm.TFXLMMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForMultipleChoice.call": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "FutureWarning",
    "TFMultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.reshape",
    "transformers.modeling_tf_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlm._CONFIG_FOR_DOC",
    "transformers.modeling_tf_xlm._TOKENIZER_FOR_DOC",
    "transformers.modeling_tf_xlm.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForMultipleChoice.dummy_inputs": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForQuestionAnsweringSimple": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm.TFXLMPreTrainedModel",
    "transformers.modeling_tf_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_xlm.TFXLMMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForQuestionAnsweringSimple.call": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "TFQuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "tensorflow.split",
    "tensorflow.squeeze",
    "transformers.modeling_tf_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlm._CONFIG_FOR_DOC",
    "transformers.modeling_tf_xlm._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForSequenceClassification": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm.TFXLMPreTrainedModel",
    "transformers.modeling_tf_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMForSequenceClassification.__init__": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "TFSequenceSummary",
    "super",
    "transformers.modeling_tf_xlm.TFXLMMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForSequenceClassification.call": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "TFSequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlm._CONFIG_FOR_DOC",
    "transformers.modeling_tf_xlm._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForTokenClassification": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm.TFXLMPreTrainedModel",
    "transformers.modeling_tf_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMForTokenClassification.__init__": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_xlm.TFXLMMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMForTokenClassification.call": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "TFTokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlm._CONFIG_FOR_DOC",
    "transformers.modeling_tf_xlm._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer.__init__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFSharedEmbeddings",
    "get_initializer",
    "hasattr",
    "int",
    "list",
    "map",
    "range",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.Embedding",
    "tensorflow.keras.layers.LayerNormalization",
    "transformers.modeling_tf_xlm.TFXLMMultiHeadAttention",
    "transformers.modeling_tf_xlm.TFXLMTransformerFFN"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer._prune_heads": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer.call": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFBaseModelOutput",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "range",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.convert_to_tensor",
    "tensorflow.debugging.assert_equal",
    "tensorflow.expand_dims",
    "tensorflow.int32",
    "tensorflow.newaxis",
    "tensorflow.not_equal",
    "tensorflow.range",
    "tensorflow.reduce_sum",
    "transformers.modeling_tf_xlm.get_masks",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMainLayer.set_input_embeddings": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMModel": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm.TFXLMPreTrainedModel",
    "transformers.modeling_tf_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMModel.__init__": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_xlm.TFXLMMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMModel.call": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "TFBaseModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlm._CONFIG_FOR_DOC",
    "transformers.modeling_tf_xlm._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMultiHeadAttention": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer",
    "transformers.modeling_tf_xlm.itertools"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMMultiHeadAttention.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "get_initializer",
    "next",
    "set",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_xlm.TFXLMMultiHeadAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMultiHeadAttention.call": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "input",
    "len",
    "shape",
    "shape_list",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.math.divide",
    "tensorflow.math.rsqrt",
    "tensorflow.matmul",
    "tensorflow.multiply",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "unshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMultiHeadAttention.call.shape": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMultiHeadAttention.call.unshape": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "tensorflow.reshape",
    "tensorflow.transpose"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMMultiHeadAttention.prune_heads": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMPreTrainedModel": {
  "data": {
   "lineno": 533
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMPreTrainedModel.dummy_inputs": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMPredLayer": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMPredLayer.__init__": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "NotImplementedError",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMPredLayer.build": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMPredLayer.call": {
  "data": {
   "lineno": 741
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMTransformerFFN": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMTransformerFFN.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMTransformerFFN.call": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModel": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm.TFXLMPreTrainedModel",
    "transformers.modeling_tf_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModel.__init__": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_xlm.TFXLMMainLayer",
    "transformers.modeling_tf_xlm.TFXLMPredLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModel.call": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_xlm.TFXLMWithLMHeadModelOutput",
    "transformers.modeling_tf_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlm._CONFIG_FOR_DOC",
    "transformers.modeling_tf_xlm._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 761
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModel.prepare_inputs_for_generation": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.int32",
    "tensorflow.ones",
    "tensorflow.ones_like"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.TFXLMWithLMHeadModelOutput": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm.TF_XLM_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlm.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.XLM_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 617
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlm.XLM_START_DOCSTRING": {
  "data": {
   "lineno": 581
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlm._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlm._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlm.create_sinusoidal_embeddings": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.power",
    "numpy.sin",
    "range",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.get_masks": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.cast",
    "tensorflow.debugging.assert_equal",
    "tensorflow.float32",
    "tensorflow.less_equal",
    "tensorflow.math.less",
    "tensorflow.newaxis",
    "tensorflow.range",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlm.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.logger": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlm_roberta": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_xlm_roberta.TFXLMRobertaForMaskedLM": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm_roberta.XLM_ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm_roberta.TFXLMRobertaForMultipleChoice": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm_roberta.XLM_ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm_roberta.TFXLMRobertaForQuestionAnswering": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm_roberta.XLM_ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm_roberta.TFXLMRobertaForSequenceClassification": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm_roberta.XLM_ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm_roberta.TFXLMRobertaForTokenClassification": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm_roberta.XLM_ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm_roberta.TFXLMRobertaModel": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlm_roberta.XLM_ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlm_roberta.TF_XLM_ROBERTA_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlm_roberta.XLM_ROBERTA_START_DOCSTRING": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlm_roberta.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlnet": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_tf_xlnet.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.TFXLNetFeedForward": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetFeedForward.__init__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "get_initializer",
    "get_tf_activation",
    "isinstance",
    "str",
    "super",
    "tensorflow.keras.layers.Dense",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetFeedForward.call": {
  "data": {
   "lineno": 344
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForMultipleChoice": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlnet.TFXLNetPreTrainedModel",
    "transformers.modeling_tf_xlnet.XLNET_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForMultipleChoice.__init__": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "TFSequenceSummary",
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_xlnet.TFXLNetMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForMultipleChoice.call": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "shape_list",
    "tensorflow.reshape",
    "transformers.modeling_tf_xlnet.TFXLNetForMultipleChoiceOutput",
    "transformers.modeling_tf_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlnet._CONFIG_FOR_DOC",
    "transformers.modeling_tf_xlnet._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForMultipleChoice.dummy_inputs": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "property",
    "tensorflow.constant"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForMultipleChoiceOutput": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForQuestionAnsweringSimple": {
  "data": {
   "lineno": 1627,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlnet.TFXLNetPreTrainedModel",
    "transformers.modeling_tf_xlnet.XLNET_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 1635,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_xlnet.TFXLNetMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForQuestionAnsweringSimple.call": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "tensorflow.split",
    "tensorflow.squeeze",
    "transformers.modeling_tf_xlnet.TFXLNetForQuestionAnsweringSimpleOutput",
    "transformers.modeling_tf_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlnet._CONFIG_FOR_DOC",
    "transformers.modeling_tf_xlnet._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForQuestionAnsweringSimpleOutput": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForSequenceClassification": {
  "data": {
   "lineno": 1297,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlnet.TFXLNetPreTrainedModel",
    "transformers.modeling_tf_xlnet.XLNET_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForSequenceClassification.__init__": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "TFSequenceSummary",
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_xlnet.TFXLNetMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForSequenceClassification.call": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_xlnet.TFXLNetForSequenceClassificationOutput",
    "transformers.modeling_tf_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlnet._CONFIG_FOR_DOC",
    "transformers.modeling_tf_xlnet._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForSequenceClassificationOutput": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForTokenClassification": {
  "data": {
   "lineno": 1538,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlnet.TFXLNetPreTrainedModel",
    "transformers.modeling_tf_xlnet.XLNET_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForTokenClassification.__init__": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": [
    "get_initializer",
    "super",
    "tensorflow.keras.layers.Dense",
    "transformers.modeling_tf_xlnet.TFXLNetMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForTokenClassification.call": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "transformers.modeling_tf_xlnet.TFXLNetForTokenClassificationOutput",
    "transformers.modeling_tf_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlnet._CONFIG_FOR_DOC",
    "transformers.modeling_tf_xlnet._TOKENIZER_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetForTokenClassificationOutput": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHead": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHead.__init__": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHead.build": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHead.call": {
  "data": {
   "lineno": 411
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModel": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlnet.TFXLNetPreTrainedModel",
    "transformers.modeling_tf_xlnet.XLNET_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModel.__init__": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_xlnet.TFXLNetLMHead",
    "transformers.modeling_tf_xlnet.TFXLNetMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModel.call": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "dict",
    "isinstance",
    "len",
    "list",
    "replace_return_docstrings",
    "transformers.modeling_tf_xlnet.TFXLNetLMHeadModelOutput",
    "transformers.modeling_tf_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlnet._CONFIG_FOR_DOC",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 1157
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModel.prepare_inputs_for_generation": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.ones",
    "tensorflow.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLMHeadModelOutput": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLayer": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLayer.__init__": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "super",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_xlnet.TFXLNetFeedForward",
    "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetLayer.call": {
  "data": {
   "lineno": 362
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.__init__": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "TFSharedEmbeddings",
    "range",
    "super",
    "tensorflow.keras.layers.Dropout",
    "transformers.modeling_tf_xlnet.TFXLNetLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer._prune_heads": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer._resize_token_embeddings": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.build": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "get_initializer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.cache_mem": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.stop_gradient"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.call": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "NotImplementedError",
    "TFXLNetModelOutput",
    "ValueError",
    "dict",
    "enumerate",
    "isinstance",
    "layer_module",
    "len",
    "list",
    "shape_list",
    "tensorflow.bfloat16",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.equal",
    "tensorflow.eye",
    "tensorflow.float32",
    "tensorflow.int32",
    "tensorflow.logical_not",
    "tensorflow.one_hot",
    "tensorflow.tile",
    "tensorflow.transpose",
    "tensorflow.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.create_mask": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "tensorflow.concat",
    "tensorflow.float32",
    "tensorflow.matrix_band_part",
    "tensorflow.ones",
    "tensorflow.zeros"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.get_input_embeddings": {
  "data": {
   "lineno": 444
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.positional_embedding": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "staticmethod",
    "tensorflow.concat",
    "tensorflow.cos",
    "tensorflow.einsum",
    "tensorflow.sin",
    "tensorflow.tile"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.relative_positional_encoding": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.cast",
    "tensorflow.clip_by_value",
    "tensorflow.concat",
    "tensorflow.float32",
    "tensorflow.range"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetMainLayer.set_input_embeddings": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetModel": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_tf_xlnet.TFXLNetPreTrainedModel",
    "transformers.modeling_tf_xlnet.XLNET_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetModel.__init__": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_tf_xlnet.TFXLNetMainLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetModel.call": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_tf_xlnet.TFXLNetModelOutput",
    "transformers.modeling_tf_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_tf_xlnet._CONFIG_FOR_DOC",
    "transformers.modeling_tf_xlnet._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetModelOutput": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "tensorflow.Tensor",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetPreTrainedModel": {
  "data": {
   "lineno": 790
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tensorflow.keras.layers.Layer"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "tensorflow.keras.layers.Dropout",
    "tensorflow.keras.layers.LayerNormalization"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.build": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "get_initializer",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.call": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "len",
    "shape_list",
    "tensorflow.concat",
    "tensorflow.einsum"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.post_attention": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "tensorflow.einsum"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.prune_heads": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.rel_attn_core": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.einsum",
    "tensorflow.float16",
    "tensorflow.nn.softmax"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TFXLNetRelativeAttention.rel_shift": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "shape_list",
    "tensorflow.reshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_tf_xlnet.TF_XLNET_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlnet.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.XLNET_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 1048
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlnet.XLNET_START_DOCSTRING": {
  "data": {
   "lineno": 1012
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlnet._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlnet._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlnet.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_tf_xlnet.logger": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "transformers.modeling_tf_xlnet.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_transfo_xl.AdaptiveEmbedding": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.AdaptiveEmbedding.__init__": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "len",
    "range",
    "super",
    "torch.nn.Embedding",
    "torch.nn.ModuleList",
    "torch.nn.Parameter",
    "torch.nn.ParameterList",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.AdaptiveEmbedding.forward": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "len",
    "next",
    "range",
    "torch.nn.functional.linear",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.PositionalEmbedding": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.PositionalEmbedding.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.PositionalEmbedding.forward": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.PositionwiseFF": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.PositionwiseFF.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "torch.nn.ReLU",
    "torch.nn.Sequential"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.PositionwiseFF.forward": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableDecoderLayer": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableDecoderLayer.__init__": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_transfo_xl.PositionwiseFF",
    "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableDecoderLayer.forward": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "torch.nn.Parameter",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn._rel_shift": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.RelPartialLearnableMultiHeadAttn.forward": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "next",
    "torch.nn.functional.softmax",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TRANSFO_XL_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 696
  },
  "type": "constant"
 },
 "transformers.modeling_transfo_xl.TRANSFO_XL_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.modeling_transfo_xl.TRANSFO_XL_START_DOCSTRING": {
  "data": {
   "lineno": 679
  },
  "type": "constant"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_transfo_xl.TRANSFO_XL_START_DOCSTRING",
    "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.__init__": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "ProjectedAdaptiveLogSoftmax",
    "super",
    "transformers.modeling_transfo_xl.TransfoXLModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel._resize_cutoffs": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "layer",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.forward": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_transfo_xl.TRANSFO_XL_INPUTS_DOCSTRING",
    "transformers.modeling_transfo_xl.TransfoXLLMHeadModelOutput",
    "transformers.modeling_transfo_xl._CONFIG_FOR_DOC",
    "transformers.modeling_transfo_xl._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 1087
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.init_mems": {
  "data": {
   "lineno": 1023
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.prepare_inputs_for_generation": {
  "data": {
   "lineno": 1094
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.reset_length": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "FutureWarning",
    "transformers.modeling_transfo_xl.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.reset_memory_length": {
  "data": {
   "lineno": 1020
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModel.tie_weights": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "range",
    "torch.nn.Parameter"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModelOutput": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_transfo_xl.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.TransfoXLLMHeadModelOutput.logits": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_transfo_xl.TRANSFO_XL_START_DOCSTRING",
    "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.__init__": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "NotImplementedError",
    "range",
    "super",
    "torch.nn.Dropout",
    "torch.nn.ModuleList",
    "torch.nn.Parameter",
    "transformers.modeling_transfo_xl.AdaptiveEmbedding",
    "transformers.modeling_transfo_xl.PositionalEmbedding",
    "transformers.modeling_transfo_xl.RelPartialLearnableDecoderLayer",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel._prune_heads": {
  "data": {
   "lineno": 802,
   "symbols_in_volume": [
    "transformers.modeling_transfo_xl.logger"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel._update_mems": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "len",
    "max",
    "range",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.backward_compatible": {
  "data": {
   "lineno": 796
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.forward": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "enumerate",
    "layer",
    "next",
    "transformers.modeling_transfo_xl.TRANSFO_XL_INPUTS_DOCSTRING",
    "transformers.modeling_transfo_xl.TransfoXLModelOutput",
    "transformers.modeling_transfo_xl._CONFIG_FOR_DOC",
    "transformers.modeling_transfo_xl._TOKENIZER_FOR_DOC",
    "transformers.modeling_transfo_xl.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.get_input_embeddings": {
  "data": {
   "lineno": 790
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.init_mems": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "next",
    "range",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.reset_memory_length": {
  "data": {
   "lineno": 799
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModel.set_input_embeddings": {
  "data": {
   "lineno": 793
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLModelOutput": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_transfo_xl.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "transformers.modeling_transfo_xl.load_tf_weights_in_transfo_xl"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._get_embedding_shapes": {
  "data": {
   "lineno": 576
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._get_new_num_tokens_layer": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._init_bias": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "torch.nn.init.constant_"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._init_weight": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "torch.nn.init.normal_",
    "torch.nn.init.uniform_"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._init_weights": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "range",
    "torch.nn.init.normal_"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._resize_cutoffs": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "len",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel._resize_token_embeddings": {
  "data": {
   "lineno": 580
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.TransfoXLPreTrainedModel.resize_token_embeddings": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "getattr",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.modeling_transfo_xl._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "transformers.modeling_transfo_xl.build_tf_to_pytorch_map": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NotImplementedError",
    "enumerate",
    "hasattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.load_tf_weights_in_transfo_xl": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "AssertionError",
    "ImportError",
    "enumerate",
    "len",
    "numpy.transpose",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.modeling_transfo_xl.build_tf_to_pytorch_map",
    "transformers.modeling_transfo_xl.logger",
    "transformers.modeling_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl.logger": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "transformers.modeling_transfo_xl.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl_utilities": {
  "data": {},
  "type": "module"
 },
 "transformers.modeling_transfo_xl_utilities.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "range",
    "super",
    "torch.nn.Linear",
    "torch.nn.ModuleList",
    "torch.nn.Parameter",
    "torch.nn.ParameterList",
    "transformers.modeling_transfo_xl_utilities.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax._compute_logit": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "torch.nn.functional.linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax.forward": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "RuntimeError",
    "hasattr",
    "len",
    "range",
    "torch.nn.functional.log_softmax",
    "transformers.modeling_transfo_xl_utilities.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities.ProjectedAdaptiveLogSoftmax.log_prob": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "len",
    "range",
    "torch.nn.functional.log_softmax",
    "transformers.modeling_transfo_xl_utilities.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_transfo_xl_utilities.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_transfo_xl_utilities.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.modeling_utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "transformers.modeling_utils.Conv1D": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.Conv1D.__init__": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "super",
    "torch.nn.Parameter",
    "torch.nn.init.normal_",
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.Conv1D.forward": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.modeling_utils.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_utils.Identity": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.Identity.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.Identity.forward": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.modeling_utils.ModuleUtilsMixin": {
  "data": {
   "lineno": 89
  },
  "type": "class"
 },
 "transformers.modeling_utils.ModuleUtilsMixin._convert_head_mask_to_5d": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin._hook_rss_memory_post_forward": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ImportError",
    "hasattr",
    "staticmethod",
    "transformers.modeling_utils.os",
    "transformers.modeling_utils.psutil"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin._hook_rss_memory_pre_forward": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ImportError",
    "staticmethod",
    "transformers.modeling_utils.os",
    "transformers.modeling_utils.psutil"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.add_memory_hooks": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.device": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "property",
    "torch.device"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.device.find_tensor_attributes": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "str",
    "torch.Tensor",
    "torch.nn.Module",
    "transformers.modeling_utils.torch",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.dtype": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "StopIteration",
    "next",
    "property",
    "torch.dtype"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.dtype.find_tensor_attributes": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "str",
    "torch.Tensor",
    "torch.nn.Module",
    "transformers.modeling_utils.torch",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.estimate_tokens": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "int",
    "str",
    "sum",
    "transformers.modeling_utils.torch",
    "transformers.modeling_utils.warnings",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.floating_point_ops": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "transformers.modeling_utils.torch",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.get_extended_attention_mask": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "torch.Tensor",
    "torch.device",
    "transformers.modeling_utils.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.get_head_mask": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "bool",
    "int",
    "torch.Tensor",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.invert_attention_mask": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "torch.Tensor",
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.num_parameters": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "bool",
    "filter",
    "int",
    "sum"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.num_parameters.parameter_filter": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "isinstance",
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.ModuleUtilsMixin.reset_memory_hooks_state": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "transformers.modeling_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_utils.PoolerAnswerClass": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.PoolerAnswerClass.__init__": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.Tanh"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PoolerAnswerClass.forward": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "transformers.modeling_utils.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PoolerEndLogits": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.PoolerEndLogits.__init__": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "super",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "torch.nn.Tanh"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PoolerEndLogits.forward": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "next",
    "transformers.modeling_utils.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PoolerStartLogits": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.PoolerStartLogits.__init__": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PoolerStartLogits.forward": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "next",
    "transformers.modeling_utils.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "torch.nn.Module",
    "transformers.modeling_utils.ModuleUtilsMixin"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.PreTrainedModel.__init__": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel._get_resized_embeddings": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "int",
    "min",
    "torch.nn.Embedding",
    "transformers.modeling_utils.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel._resize_token_embeddings": {
  "data": {
   "lineno": 621
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel._tie_encoder_decoder_weights": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "len",
    "staticmethod",
    "str",
    "tie_encoder_to_decoder_recursively",
    "torch.nn.Module",
    "transformers.modeling_utils.logger",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel._tie_encoder_decoder_weights.tie_encoder_to_decoder_recursively": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "set",
    "str",
    "tie_encoder_to_decoder_recursively",
    "torch.nn.Module",
    "type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel._tie_or_clone_weights": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "torch.nn.Parameter",
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.base_model": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "getattr",
    "property",
    "torch.nn.Module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.dummy_inputs": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "property",
    "str",
    "transformers.modeling_utils.torch",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "EnvironmentError",
    "Exception",
    "ImportError",
    "OSError",
    "RuntimeError",
    "any",
    "cached_path",
    "classmethod",
    "cls",
    "cls.authorized_missing_keys",
    "cls.authorized_unexpected_keys",
    "cls.base_model_prefix",
    "cls.load_tf_weights",
    "getattr",
    "hasattr",
    "hf_bucket_url",
    "is_remote_url",
    "is_torch_tpu_available",
    "isinstance",
    "len",
    "load",
    "load_tf2_checkpoint_in_pytorch_model",
    "torch_xla.core.xla_model.send_cpu_data_to_device",
    "torch_xla.core.xla_model.xla_device",
    "transformers.modeling_utils.logger",
    "transformers.modeling_utils.os",
    "transformers.modeling_utils.re",
    "transformers.modeling_utils.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.from_pretrained.load": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "load",
    "torch.nn.Module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.get_input_embeddings": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "NotImplementedError",
    "getattr",
    "torch.nn.Module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.get_output_embeddings": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.init_weights": {
  "data": {
   "lineno": 668
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.prune_heads": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "int",
    "list",
    "set",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.resize_token_embeddings": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "getattr",
    "int",
    "transformers.modeling_utils.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.save_pretrained": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "is_torch_tpu_available",
    "torch_xla.core.xla_model.is_master_ordinal",
    "torch_xla.core.xla_model.save",
    "transformers.modeling_utils.logger",
    "transformers.modeling_utils.os",
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.set_input_embeddings": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "NotImplementedError",
    "getattr",
    "torch.nn.Module"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.PreTrainedModel.tie_weights": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.SQuADHead": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.SQuADHead.__init__": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_utils.PoolerAnswerClass",
    "transformers.modeling_utils.PoolerEndLogits",
    "transformers.modeling_utils.PoolerStartLogits"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.SQuADHead.forward": {
  "data": {
   "lineno": 1342,
   "symbols_in_volume": [
    "bool",
    "loss_fct",
    "loss_fct_cls",
    "replace_return_docstrings",
    "torch.nn.BCEWithLogitsLoss",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.functional.softmax",
    "transformers.modeling_utils.SquadHeadOutput",
    "transformers.modeling_utils.torch",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.SequenceSummary": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.SequenceSummary.__init__": {
  "data": {
   "lineno": 1468,
   "symbols_in_volume": [
    "NotImplementedError",
    "get_activation",
    "getattr",
    "hasattr",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Identity",
    "torch.nn.Linear",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.SequenceSummary.forward": {
  "data": {
   "lineno": 1497,
   "symbols_in_volume": [
    "NotImplementedError",
    "transformers.modeling_utils.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "transformers.modeling_utils.SquadHeadOutput": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_utils.torch",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_utils.Tensor": {
  "data": {
   "shadows": "torch.Tensor"
  },
  "type": "import"
 },
 "transformers.modeling_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.modeling_utils.apply_chunking_to_forward": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": [
    "all",
    "forward_fn",
    "int",
    "len",
    "transformers.modeling_utils.inspect",
    "transformers.modeling_utils.torch",
    "tuple",
    "typing.Callable",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_utils.device": {
  "data": {
   "shadows": "torch.device"
  },
  "type": "import"
 },
 "transformers.modeling_utils.dtype": {
  "data": {
   "shadows": "torch.dtype"
  },
  "type": "import"
 },
 "transformers.modeling_utils.find_pruneable_heads_and_indices": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "int",
    "len",
    "set",
    "sum",
    "transformers.modeling_utils.torch",
    "typing.List",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "transformers.modeling_utils.logger": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "transformers.modeling_utils.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.modeling_utils.prune_conv1d_layer": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "transformers.modeling_utils.Conv1D",
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.prune_layer": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "torch.nn.Linear",
    "transformers.modeling_utils.Conv1D",
    "transformers.modeling_utils.prune_conv1d_layer",
    "transformers.modeling_utils.prune_linear_layer",
    "transformers.modeling_utils.torch",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.prune_linear_layer": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "torch.nn.Linear",
    "transformers.modeling_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_utils.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "transformers.modeling_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.modeling_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_utils.xm": {
  "data": {
   "shadows": "torch_xla.core.xla_model"
  },
  "type": "import"
 },
 "transformers.modeling_xlm": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_xlm.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.MultiHeadAttention": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "torch.nn.Module",
    "transformers.modeling_xlm.itertools"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.MultiHeadAttention.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "next",
    "set",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_xlm.MultiHeadAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.MultiHeadAttention.forward": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "float",
    "input",
    "input.size",
    "shape",
    "torch.nn.functional.dropout",
    "torch.nn.functional.softmax",
    "transformers.modeling_xlm.math",
    "transformers.modeling_xlm.torch",
    "unshape"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.MultiHeadAttention.forward.shape": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "transformers.modeling_xlm.MultiHeadAttention.forward.unshape": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "transformers.modeling_xlm.MultiHeadAttention.prune_heads": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "find_pruneable_heads_and_indices",
    "len",
    "prune_linear_layer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.TransformerFFN": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.TransformerFFN.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "torch.nn.functional.relu"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.TransformerFFN.ff_chunk": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "input",
    "torch.nn.functional.dropout"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.TransformerFFN.forward": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "apply_chunking_to_forward",
    "input"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.XLMForMultipleChoice": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm.XLMPreTrainedModel",
    "transformers.modeling_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForMultipleChoice.__init__": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "SequenceSummary",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_xlm.XLMModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForMultipleChoice.forward": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "FutureWarning",
    "MultipleChoiceModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_xlm._CONFIG_FOR_DOC",
    "transformers.modeling_xlm._TOKENIZER_FOR_DOC",
    "transformers.modeling_xlm.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForQuestionAnswering": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm.XLMPreTrainedModel",
    "transformers.modeling_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForQuestionAnswering.__init__": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "SQuADHead",
    "super",
    "transformers.modeling_xlm.XLMModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForQuestionAnswering.forward": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "replace_return_docstrings",
    "transformers.modeling_xlm.XLMForQuestionAnsweringOutput",
    "transformers.modeling_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_xlm._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForQuestionAnsweringOutput": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_xlm.torch",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForQuestionAnsweringSimple": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm.XLMPreTrainedModel",
    "transformers.modeling_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_xlm.XLMModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForQuestionAnsweringSimple.forward": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "QuestionAnsweringModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_xlm._CONFIG_FOR_DOC",
    "transformers.modeling_xlm._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForSequenceClassification": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm.XLMPreTrainedModel",
    "transformers.modeling_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForSequenceClassification.__init__": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "SequenceSummary",
    "super",
    "transformers.modeling_xlm.XLMModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForSequenceClassification.forward": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "SequenceClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "transformers.modeling_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_xlm._CONFIG_FOR_DOC",
    "transformers.modeling_xlm._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForTokenClassification": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm.XLMPreTrainedModel",
    "transformers.modeling_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMForTokenClassification.__init__": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "torch.nn.Linear",
    "transformers.modeling_xlm.XLMModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMForTokenClassification.forward": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "TokenClassifierOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "loss_fct.ignore_index",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_xlm._CONFIG_FOR_DOC",
    "transformers.modeling_xlm._TOKENIZER_FOR_DOC",
    "transformers.modeling_xlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMModel": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm.XLMPreTrainedModel",
    "transformers.modeling_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMModel.__init__": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "int",
    "list",
    "map",
    "range",
    "super",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.ModuleList",
    "transformers.modeling_xlm.MultiHeadAttention",
    "transformers.modeling_xlm.TransformerFFN",
    "transformers.modeling_xlm.create_sinusoidal_embeddings",
    "transformers.modeling_xlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMModel._prune_heads": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMModel.forward": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "BaseModelOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "range",
    "torch.nn.functional.dropout",
    "transformers.modeling_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_xlm._CONFIG_FOR_DOC",
    "transformers.modeling_xlm._TOKENIZER_FOR_DOC",
    "transformers.modeling_xlm.get_masks",
    "transformers.modeling_xlm.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMModel.get_input_embeddings": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMModel.set_input_embeddings": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMPreTrainedModel": {
  "data": {
   "lineno": 231
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMPreTrainedModel.__init__": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMPreTrainedModel._init_weights": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "torch.nn.init.constant_",
    "torch.nn.init.normal_"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMPreTrainedModel.dummy_inputs": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "property",
    "transformers.modeling_xlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMPredLayer": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMPredLayer.__init__": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "super",
    "torch.nn.AdaptiveLogSoftmaxWithLoss",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMPredLayer.forward": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "torch.nn.functional.cross_entropy"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMWithLMHeadModel": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm.XLMPreTrainedModel",
    "transformers.modeling_xlm.XLM_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm.XLMWithLMHeadModel.__init__": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "super",
    "transformers.modeling_xlm.XLMModel",
    "transformers.modeling_xlm.XLMPredLayer"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMWithLMHeadModel.forward": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "MaskedLMOutput",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "transformers.modeling_xlm.XLM_INPUTS_DOCSTRING",
    "transformers.modeling_xlm._CONFIG_FOR_DOC",
    "transformers.modeling_xlm._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMWithLMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 690
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLMWithLMHeadModel.prepare_inputs_for_generation": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "transformers.modeling_xlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.XLM_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 329
  },
  "type": "constant"
 },
 "transformers.modeling_xlm.XLM_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "transformers.modeling_xlm.XLM_START_DOCSTRING": {
  "data": {
   "lineno": 312
  },
  "type": "constant"
 },
 "transformers.modeling_xlm._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "transformers.modeling_xlm._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "transformers.modeling_xlm.create_sinusoidal_embeddings": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.power",
    "numpy.sin",
    "range",
    "transformers.modeling_xlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.get_masks": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "transformers.modeling_xlm.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlm.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.logger": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.modeling_xlm.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.modeling_xlm.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.modeling_xlm_prophetnet": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_xlm_prophetnet.XLMProphetNetDecoder": {
  "data": {
   "lineno": 60
  },
  "type": "class"
 },
 "transformers.modeling_xlm_prophetnet.XLMProphetNetEncoder": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "transformers.modeling_xlm_prophetnet.XLMProphetNetForCausalLM": {
  "data": {
   "lineno": 128
  },
  "type": "class"
 },
 "transformers.modeling_xlm_prophetnet.XLMProphetNetForConditionalGeneration": {
  "data": {
   "lineno": 105
  },
  "type": "class"
 },
 "transformers.modeling_xlm_prophetnet.XLMProphetNetModel": {
  "data": {
   "lineno": 82
  },
  "type": "class"
 },
 "transformers.modeling_xlm_prophetnet.XLM_PROPHETNET_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.modeling_xlm_prophetnet._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.modeling_xlm_prophetnet.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.modeling_xlm_roberta": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_xlm_roberta.XLMRobertaForCausalLM": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm_roberta.XLM_ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm_roberta.XLMRobertaForMaskedLM": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm_roberta.XLM_ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm_roberta.XLMRobertaForMultipleChoice": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm_roberta.XLM_ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm_roberta.XLMRobertaForQuestionAnswering": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm_roberta.XLM_ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm_roberta.XLMRobertaForSequenceClassification": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm_roberta.XLM_ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm_roberta.XLMRobertaForTokenClassification": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm_roberta.XLM_ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm_roberta.XLMRobertaModel": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlm_roberta.XLM_ROBERTA_START_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlm_roberta.XLM_ROBERTA_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.modeling_xlm_roberta.XLM_ROBERTA_START_DOCSTRING": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.modeling_xlm_roberta.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.modeling_xlnet": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.modeling_xlnet.CrossEntropyLoss": {
  "data": {
   "shadows": "torch.nn.CrossEntropyLoss"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.F": {
  "data": {
   "shadows": "torch.nn.functional"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.MSELoss": {
  "data": {
   "shadows": "torch.nn.MSELoss"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING": {
  "data": {
   "lineno": 857
  },
  "type": "constant"
 },
 "transformers.modeling_xlnet.XLNET_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "transformers.modeling_xlnet.XLNET_START_DOCSTRING": {
  "data": {
   "lineno": 840
  },
  "type": "constant"
 },
 "transformers.modeling_xlnet.XLNetFeedForward": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetFeedForward.__init__": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Linear"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetFeedForward.forward": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForMultipleChoice": {
  "data": {
   "lineno": 1640,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlnet.XLNET_START_DOCSTRING",
    "transformers.modeling_xlnet.XLNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForMultipleChoice.__init__": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": [
    "SequenceSummary",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_xlnet.XLNetModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForMultipleChoice.forward": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_xlnet.XLNetForMultipleChoiceOutput",
    "transformers.modeling_xlnet._CONFIG_FOR_DOC",
    "transformers.modeling_xlnet._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForMultipleChoiceOutput": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_xlnet.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnswering": {
  "data": {
   "lineno": 1850,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlnet.XLNET_START_DOCSTRING",
    "transformers.modeling_xlnet.XLNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1858,
   "symbols_in_volume": [
    "PoolerAnswerClass",
    "PoolerEndLogits",
    "PoolerStartLogits",
    "super",
    "transformers.modeling_xlnet.XLNetModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnswering.forward": {
  "data": {
   "lineno": 1870,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "loss_fct_cls",
    "replace_return_docstrings",
    "torch.nn.BCEWithLogitsLoss",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.functional.softmax",
    "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_xlnet.XLNetForQuestionAnsweringOutput",
    "transformers.modeling_xlnet._CONFIG_FOR_DOC",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnsweringOutput": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_xlnet.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnsweringSimple": {
  "data": {
   "lineno": 1741,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlnet.XLNET_START_DOCSTRING",
    "transformers.modeling_xlnet.XLNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 1749,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_xlnet.XLNetModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnsweringSimple.forward": {
  "data": {
   "lineno": 1758,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "len",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_xlnet.XLNetForQuestionAnsweringSimpleOutput",
    "transformers.modeling_xlnet._CONFIG_FOR_DOC",
    "transformers.modeling_xlnet._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForQuestionAnsweringSimpleOutput": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_xlnet.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForSequenceClassification": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlnet.XLNET_START_DOCSTRING",
    "transformers.modeling_xlnet.XLNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForSequenceClassification.__init__": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "SequenceSummary",
    "super",
    "torch.nn.Linear",
    "transformers.modeling_xlnet.XLNetModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForSequenceClassification.forward": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "torch.nn.CrossEntropyLoss",
    "torch.nn.MSELoss",
    "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_xlnet.XLNetForSequenceClassificationOutput",
    "transformers.modeling_xlnet._CONFIG_FOR_DOC",
    "transformers.modeling_xlnet._TOKENIZER_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForSequenceClassificationOutput": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_xlnet.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForTokenClassification": {
  "data": {
   "lineno": 1543,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlnet.XLNET_START_DOCSTRING",
    "transformers.modeling_xlnet.XLNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetForTokenClassification.__init__": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_xlnet.XLNetModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForTokenClassification.forward": {
  "data": {
   "lineno": 1560,
   "symbols_in_volume": [
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "loss_fct.ignore_index",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_xlnet.XLNetForTokenClassificationOutput",
    "transformers.modeling_xlnet._CONFIG_FOR_DOC",
    "transformers.modeling_xlnet._TOKENIZER_FOR_DOC",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetForTokenClassificationOutput": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_xlnet.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModel": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlnet.XLNET_START_DOCSTRING",
    "transformers.modeling_xlnet.XLNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModel.__init__": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "super",
    "torch.nn.Linear",
    "transformers.modeling_xlnet.XLNetModel"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModel.forward": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "add_start_docstrings_to_model_forward",
    "loss_fct",
    "replace_return_docstrings",
    "torch.nn.CrossEntropyLoss",
    "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_xlnet.XLNetLMHeadModelOutput",
    "transformers.modeling_xlnet._CONFIG_FOR_DOC"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModel.get_output_embeddings": {
  "data": {
   "lineno": 1299
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModel.prepare_inputs_for_generation": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "transformers.modeling_xlnet.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLMHeadModelOutput": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_xlnet.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetLayer": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetLayer.__init__": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "super",
    "torch.nn.Dropout",
    "transformers.modeling_xlnet.XLNetFeedForward",
    "transformers.modeling_xlnet.XLNetRelativeAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLayer.ff_chunk": {
  "data": {
   "lineno": 537
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetLayer.forward": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "apply_chunking_to_forward"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.modeling_xlnet.XLNET_START_DOCSTRING",
    "transformers.modeling_xlnet.XLNetPreTrainedModel"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetModel.__init__": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "range",
    "super",
    "torch.nn.Dropout",
    "torch.nn.Embedding",
    "torch.nn.ModuleList",
    "torch.nn.Parameter",
    "transformers.modeling_xlnet.XLNetLayer",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel._prune_heads": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.cache_mem": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.create_mask": {
  "data": {
   "lineno": 964,
   "symbols_in_volume": [
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.forward": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "ValueError",
    "add_code_sample_docstrings",
    "add_start_docstrings_to_model_forward",
    "enumerate",
    "layer_module",
    "len",
    "next",
    "torch.nn.functional.one_hot",
    "transformers.modeling_xlnet.XLNET_INPUTS_DOCSTRING",
    "transformers.modeling_xlnet.XLNetModelOutput",
    "transformers.modeling_xlnet._CONFIG_FOR_DOC",
    "transformers.modeling_xlnet._TOKENIZER_FOR_DOC",
    "transformers.modeling_xlnet.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.get_input_embeddings": {
  "data": {
   "lineno": 955
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.positional_embedding": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.relative_positional_encoding": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "ValueError",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModel.set_input_embeddings": {
  "data": {
   "lineno": 958
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetModelOutput": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "dataclasses.dataclass",
    "transformers.modeling_xlnet.torch",
    "typing.List",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetPreTrainedModel": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "transformers.modeling_xlnet.load_tf_weights_in_xlnet"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetPreTrainedModel._init_weights": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "isinstance",
    "torch.nn.Embedding",
    "torch.nn.LayerNorm",
    "torch.nn.Linear",
    "transformers.modeling_xlnet.XLNetRelativeAttention"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "torch.nn.Module"
   ]
  },
  "type": "class"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "torch.nn.Dropout",
    "torch.nn.LayerNorm",
    "torch.nn.Parameter",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.forward": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.post_attention": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.prune_heads": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.rel_attn_core": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "torch.nn.functional.softmax",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.rel_shift": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.XLNetRelativeAttention.rel_shift_bnij": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet._CONFIG_FOR_DOC": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.modeling_xlnet._TOKENIZER_FOR_DOC": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "transformers.modeling_xlnet.build_tf_xlnet_to_pytorch_map": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "enumerate",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.load_tf_weights_in_xlnet": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "AssertionError",
    "ImportError",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.transpose",
    "tensorflow.train.list_variables",
    "tensorflow.train.load_variable",
    "transformers.modeling_xlnet.build_tf_xlnet_to_pytorch_map",
    "transformers.modeling_xlnet.logger",
    "transformers.modeling_xlnet.torch"
   ]
  },
  "type": "function"
 },
 "transformers.modeling_xlnet.logger": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "transformers.modeling_xlnet.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.modeling_xlnet.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.optimization": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.optimization.Adafactor": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "torch.optim.Optimizer"
   ]
  },
  "type": "class"
 },
 "transformers.optimization.Adafactor.__init__": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.Adafactor._approx_sq_grad": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.optimization.torch"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.Adafactor._get_lr": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "max",
    "min",
    "staticmethod",
    "transformers.optimization.math"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.Adafactor._get_options": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.Adafactor._rms": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.Adafactor.step": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "RuntimeError",
    "closure",
    "len",
    "transformers.optimization.math",
    "transformers.optimization.torch"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.AdamW": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "torch.optim.Optimizer"
   ]
  },
  "type": "class"
 },
 "transformers.optimization.AdamW.__init__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dict",
    "float",
    "super",
    "transformers.optimization.torch",
    "typing.Iterable",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.AdamW.step": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "RuntimeError",
    "closure",
    "len",
    "transformers.optimization.math",
    "transformers.optimization.torch",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "transformers.optimization.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "transformers.optimization.LambdaLR": {
  "data": {
   "shadows": "torch.optim.lr_scheduler.LambdaLR"
  },
  "type": "import"
 },
 "transformers.optimization.Optimizer": {
  "data": {
   "shadows": "torch.optim.Optimizer"
  },
  "type": "import"
 },
 "transformers.optimization.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.optimization.get_constant_schedule": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "int",
    "torch.optim.Optimizer",
    "torch.optim.lr_scheduler.LambdaLR"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.get_constant_schedule_with_warmup": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "int",
    "torch.optim.Optimizer",
    "torch.optim.lr_scheduler.LambdaLR"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.get_constant_schedule_with_warmup.lr_lambda": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "float",
    "int",
    "max"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.get_cosine_schedule_with_warmup": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "float",
    "int",
    "torch.optim.Optimizer",
    "torch.optim.lr_scheduler.LambdaLR"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.get_cosine_schedule_with_warmup.lr_lambda": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "float",
    "max",
    "transformers.optimization.math"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.get_cosine_with_hard_restarts_schedule_with_warmup": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "int",
    "torch.optim.Optimizer",
    "torch.optim.lr_scheduler.LambdaLR"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.get_cosine_with_hard_restarts_schedule_with_warmup.lr_lambda": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "float",
    "max",
    "transformers.optimization.math"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.get_linear_schedule_with_warmup": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "torch.optim.lr_scheduler.LambdaLR"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.get_linear_schedule_with_warmup.lr_lambda": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "float",
    "int",
    "max"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.get_polynomial_decay_schedule_with_warmup": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "torch.optim.lr_scheduler.LambdaLR"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.get_polynomial_decay_schedule_with_warmup.lr_lambda": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "float",
    "int",
    "max"
   ]
  },
  "type": "function"
 },
 "transformers.optimization.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.optimization.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.optimization.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.optimization_tf": {
  "data": {},
  "type": "module"
 },
 "transformers.optimization_tf.AdamWeightDecay": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "tensorflow.keras.optimizers.Adam"
   ]
  },
  "type": "class"
 },
 "transformers.optimization_tf.AdamWeightDecay.__init__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "bool",
    "float",
    "str",
    "super",
    "tensorflow.keras.optimizers.schedules.LearningRateSchedule",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay._decay_weights_op": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "tensorflow.no_op"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay._do_use_weight_decay": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "transformers.optimization_tf.re"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay._get_lr": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay._prepare_local": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "super",
    "tensorflow.constant",
    "transformers.optimization_tf.AdamWeightDecay"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay._resource_apply_dense": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "super",
    "tensorflow.control_dependencies",
    "transformers.optimization_tf.AdamWeightDecay"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay._resource_apply_sparse": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "super",
    "tensorflow.control_dependencies",
    "transformers.optimization_tf.AdamWeightDecay"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay.apply_gradients": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "list",
    "super",
    "transformers.optimization_tf.AdamWeightDecay",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay.from_config": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "classmethod",
    "super",
    "transformers.optimization_tf.AdamWeightDecay",
    "transformers.optimization_tf.WarmUp"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.AdamWeightDecay.get_config": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "transformers.optimization_tf.GradientAccumulator": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.optimization_tf.GradientAccumulator.__call__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "tensorflow.Variable",
    "tensorflow.VariableAggregation.ONLY_FIRST_REPLICA",
    "tensorflow.VariableSynchronization.ON_READ",
    "tensorflow.zeros_like",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.GradientAccumulator.__init__": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "transformers.optimization_tf.GradientAccumulator.gradients": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.GradientAccumulator.reset": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "tensorflow.zeros_like"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.GradientAccumulator.step": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "property",
    "tensorflow.Variable",
    "tensorflow.VariableAggregation.ONLY_FIRST_REPLICA",
    "tensorflow.VariableSynchronization.ON_READ",
    "tensorflow.constant",
    "tensorflow.int64"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.optimization_tf.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.optimization_tf.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.optimization_tf.WarmUp": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "tensorflow.keras.optimizers.schedules.LearningRateSchedule"
   ]
  },
  "type": "class"
 },
 "transformers.optimization_tf.WarmUp.__call__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.cond",
    "tensorflow.float32",
    "tensorflow.math.pow",
    "tensorflow.name_scope"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.WarmUp.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "float",
    "int",
    "str",
    "super",
    "typing.Callable"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.WarmUp.get_config": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "transformers.optimization_tf.create_optimizer": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "AdamWeightDecay",
    "float",
    "int",
    "str",
    "tensorflow.keras.optimizers.Adam",
    "tensorflow.keras.optimizers.schedules.PolynomialDecay",
    "transformers.optimization_tf.WarmUp",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.optimization_tf.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.optimization_tf.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.pipelines": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_tf_available",
    "is_torch_available",
    "transformers.pipelines.ConversationalPipeline",
    "transformers.pipelines.FeatureExtractionPipeline",
    "transformers.pipelines.FillMaskPipeline",
    "transformers.pipelines.QuestionAnsweringPipeline",
    "transformers.pipelines.SummarizationPipeline",
    "transformers.pipelines.Text2TextGenerationPipeline",
    "transformers.pipelines.TextClassificationPipeline",
    "transformers.pipelines.TextGenerationPipeline",
    "transformers.pipelines.TokenClassificationPipeline",
    "transformers.pipelines.TranslationPipeline",
    "transformers.pipelines.ZeroShotClassificationPipeline",
    "typing.TYPE_CHECKING"
   ]
  },
  "type": "module"
 },
 "transformers.pipelines.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "transformers.pipelines.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.pipelines.ArgumentHandler": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.ArgumentHandler.__call__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Conversation": {
  "data": {
   "lineno": 2272
  },
  "type": "class"
 },
 "transformers.pipelines.Conversation.__init__": {
  "data": {
   "lineno": 2303,
   "symbols_in_volume": [
    "int",
    "self.generated_responses",
    "self.history",
    "self.new_user_input",
    "self.past_user_inputs",
    "self.uuid",
    "str",
    "transformers.pipelines.uuid",
    "typing.List",
    "typing.Optional",
    "uuid.UUID"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Conversation.__repr__": {
  "data": {
   "lineno": 2366,
   "symbols_in_volume": [
    "self.generated_responses",
    "self.new_user_input",
    "self.past_user_inputs",
    "self.uuid",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Conversation.add_user_input": {
  "data": {
   "lineno": 2312,
   "symbols_in_volume": [
    "bool",
    "self.new_user_input",
    "str",
    "transformers.pipelines.logger"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Conversation.append_response": {
  "data": {
   "lineno": 2347,
   "symbols_in_volume": [
    "self.generated_responses.append",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Conversation.mark_processed": {
  "data": {
   "lineno": 2338,
   "symbols_in_volume": [
    "self.new_user_input",
    "self.past_user_inputs.append"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Conversation.set_history": {
  "data": {
   "lineno": 2356,
   "symbols_in_volume": [
    "int",
    "self.history",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.ConversationalPipeline": {
  "data": {
   "lineno": 2385,
   "symbols_in_volume": [
    "add_end_docstrings",
    "transformers.pipelines.PIPELINE_INIT_ARGS",
    "transformers.pipelines.Pipeline"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.ConversationalPipeline.__call__": {
  "data": {
   "lineno": 2429,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "self._clean_padding_history",
    "self._concat_inputs_history",
    "self._parse_and_tokenize",
    "self.device_placement",
    "self.ensure_tensor_on_device",
    "self.framework",
    "self.model.config.is_encoder_decoder",
    "self.model.config.max_length",
    "self.model.generate",
    "self.tokenizer.decode",
    "self.tokenizer.eos_token_id",
    "self.tokenizer.pad_token_id",
    "tensorflow.concat",
    "tensorflow.shape",
    "transformers.pipelines.Conversation",
    "transformers.pipelines.logger",
    "transformers.pipelines.torch",
    "type",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.ConversationalPipeline.__init__": {
  "data": {
   "lineno": 2419,
   "symbols_in_volume": [
    "self.min_length_for_response",
    "self.tokenizer.eos_token",
    "self.tokenizer.eos_token_id",
    "self.tokenizer.pad_token",
    "self.tokenizer.pad_token_id",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.ConversationalPipeline._clean_padding_history": {
  "data": {
   "lineno": 2539,
   "symbols_in_volume": [
    "int",
    "self.framework",
    "self.tokenizer.eos_token_id",
    "self.tokenizer.pad_token_id",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.ConversationalPipeline._concat_inputs_history": {
  "data": {
   "lineno": 2572,
   "symbols_in_volume": [
    "int",
    "len",
    "self.framework",
    "self.min_length_for_response",
    "self.tokenizer.eos_token_id",
    "self.tokenizer.pad",
    "typing.List",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.ConversationalPipeline._parse_and_tokenize": {
  "data": {
   "lineno": 2529,
   "symbols_in_volume": [
    "input",
    "input.append",
    "self.tokenizer",
    "self.tokenizer.eos_token_id"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.CsvPipelineDataFormat": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "transformers.pipelines.PipelineDataFormat"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.CsvPipelineDataFormat.__init__": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "str",
    "super",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.CsvPipelineDataFormat.__iter__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "open",
    "transformers.pipelines.csv"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.CsvPipelineDataFormat.save": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "open",
    "transformers.pipelines.csv",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.pipelines.FeatureExtractionPipeline": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "transformers.pipelines.Pipeline"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.FeatureExtractionPipeline.__call__": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.FeatureExtractionPipeline.__init__": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "transformers.pipelines.ArgumentHandler",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.FillMaskPipeline": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "add_end_docstrings",
    "transformers.pipelines.PIPELINE_INIT_ARGS",
    "transformers.pipelines.Pipeline"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.FillMaskPipeline.__call__": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.where",
    "range",
    "reversed",
    "self._forward",
    "self._parse_and_tokenize",
    "self.ensure_exactly_one_mask_token",
    "self.framework",
    "self.tokenizer.convert_ids_to_tokens",
    "self.tokenizer.convert_tokens_to_ids",
    "self.tokenizer.decode",
    "self.tokenizer.mask_token_id",
    "self.tokenizer.pad_token_id",
    "self.tokenizer.tokenize",
    "self.tokenizer.unk_token",
    "self.top_k",
    "str",
    "tensorflow.argsort",
    "tensorflow.gather_nd",
    "tensorflow.math.top_k",
    "tensorflow.nn.softmax",
    "tensorflow.reshape",
    "tensorflow.reverse",
    "tensorflow.where",
    "transformers.pipelines.logger",
    "transformers.pipelines.torch",
    "typing.Optional",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.FillMaskPipeline.__init__": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "FutureWarning",
    "int",
    "self.check_model_type",
    "self.framework",
    "self.top_k",
    "str",
    "super",
    "transformers.pipelines.ArgumentHandler",
    "transformers.pipelines.warnings",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.FillMaskPipeline.ensure_exactly_one_mask_token": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.prod",
    "self.model.base_model_prefix",
    "self.tokenizer.mask_token",
    "transformers.pipelines.PipelineException"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "transformers.pipelines.JsonPipelineDataFormat": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "transformers.pipelines.PipelineDataFormat"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.JsonPipelineDataFormat.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "open",
    "str",
    "super",
    "transformers.pipelines.json",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.JsonPipelineDataFormat.__iter__": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "transformers.pipelines.JsonPipelineDataFormat.save": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "dict",
    "open",
    "transformers.pipelines.json"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.pipelines.NerPipeline": {
  "data": {
   "lineno": 1593
  },
  "type": "constant"
 },
 "transformers.pipelines.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.pipelines.PIPELINE_INIT_ARGS": {
  "data": {
   "lineno": 453
  },
  "type": "constant"
 },
 "transformers.pipelines.PipedPipelineDataFormat": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "transformers.pipelines.PipelineDataFormat"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.PipedPipelineDataFormat.__iter__": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "transformers.pipelines.sys",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.PipedPipelineDataFormat.save": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "dict",
    "print"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.PipedPipelineDataFormat.save_binary": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "str",
    "super",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Pipeline": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "add_end_docstrings",
    "transformers.pipelines.PIPELINE_INIT_ARGS",
    "transformers.pipelines._ScikitCompat"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.Pipeline.__call__": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "self._forward",
    "self._parse_and_tokenize"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Pipeline.__init__": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "transformers.pipelines.ArgumentHandler",
    "transformers.pipelines.get_framework",
    "transformers.pipelines.torch",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Pipeline._forward": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "self.device_placement",
    "self.ensure_tensor_on_device",
    "self.framework",
    "self.model",
    "transformers.pipelines.torch"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Pipeline._parse_and_tokenize": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "self.framework",
    "self.tokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Pipeline.check_model_type": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "self.model.__class__.__name__",
    "self.model.base_model_prefix",
    "self.task",
    "str",
    "transformers.pipelines.PipelineException",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Pipeline.device_placement": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "self.device",
    "self.device.type",
    "self.framework",
    "tensorflow.device",
    "transformers.pipelines.torch"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Pipeline.ensure_tensor_on_device": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "self.device"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Pipeline.predict": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "self"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Pipeline.save_pretrained": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "str",
    "transformers.pipelines.logger",
    "transformers.pipelines.os"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Pipeline.transform": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "self"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.PipelineDataFormat": {
  "data": {
   "lineno": 188
  },
  "type": "class"
 },
 "transformers.pipelines.PipelineDataFormat.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "OSError",
    "bool",
    "len",
    "os.path.abspath",
    "os.path.exists",
    "str",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.PipelineDataFormat.__iter__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.PipelineDataFormat.from_str": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "CsvPipelineDataFormat",
    "JsonPipelineDataFormat",
    "KeyError",
    "PipedPipelineDataFormat",
    "format",
    "staticmethod",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.PipelineDataFormat.save": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.PipelineDataFormat.save_binary": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "dict",
    "open",
    "str",
    "transformers.pipelines.os",
    "transformers.pipelines.pickle",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.PipelineException": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.PipelineException.__init__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.QuestionAnsweringArgumentHandler": {
  "data": {
   "lineno": 1596,
   "symbols_in_volume": [
    "transformers.pipelines.ArgumentHandler"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.QuestionAnsweringArgumentHandler.__call__": {
  "data": {
   "lineno": 1620,
   "symbols_in_volume": [
    "ValueError",
    "collections.abc.Iterable",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "self.normalize",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.QuestionAnsweringArgumentHandler.normalize": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.QuestionAnsweringPipeline": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "add_end_docstrings",
    "transformers.pipelines.PIPELINE_INIT_ARGS",
    "transformers.pipelines.Pipeline"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.QuestionAnsweringPipeline.__call__": {
  "data": {
   "lineno": 1719,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "min",
    "numpy.abs",
    "numpy.array",
    "numpy.exp",
    "numpy.log",
    "numpy.sum",
    "numpy.where",
    "self._args_parser",
    "self.decode",
    "self.device",
    "self.device_placement",
    "self.framework",
    "self.model",
    "self.tokenizer",
    "self.tokenizer.model_input_names",
    "sorted",
    "squad_convert_examples_to_features",
    "tensorflow.constant",
    "transformers.pipelines.torch",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.QuestionAnsweringPipeline.__init__": {
  "data": {
   "lineno": 1671,
   "symbols_in_volume": [
    "int",
    "self._args_parser",
    "self.check_model_type",
    "self.framework",
    "str",
    "super",
    "transformers.pipelines.QuestionAnsweringArgumentHandler",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.QuestionAnsweringPipeline.create_sample": {
  "data": {
   "lineno": 1696,
   "symbols_in_volume": [
    "SquadExample",
    "isinstance",
    "list",
    "staticmethod",
    "str",
    "typing.List",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.QuestionAnsweringPipeline.decode": {
  "data": {
   "lineno": 1856,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.argmax",
    "numpy.argpartition",
    "numpy.argsort",
    "numpy.expand_dims",
    "numpy.matmul",
    "numpy.ndarray",
    "numpy.tril",
    "numpy.triu",
    "numpy.unravel_index",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.QuestionAnsweringPipeline.span_to_answer": {
  "data": {
   "lineno": 1897,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "max",
    "min",
    "self.tokenizer.tokenize",
    "str",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.SUPPORTED_TASKS": {
  "data": {
   "lineno": 2598
  },
  "type": "constant"
 },
 "transformers.pipelines.SummarizationPipeline": {
  "data": {
   "lineno": 1941,
   "symbols_in_volume": [
    "add_end_docstrings",
    "transformers.pipelines.PIPELINE_INIT_ARGS",
    "transformers.pipelines.Pipeline"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.SummarizationPipeline.__call__": {
  "data": {
   "lineno": 1972,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "self._parse_and_tokenize",
    "self.device_placement",
    "self.ensure_tensor_on_device",
    "self.framework",
    "self.model.config.max_length",
    "self.model.config.min_length",
    "self.model.config.prefix",
    "self.model.generate",
    "self.tokenizer.decode",
    "self.tokenizer.pad_token_id",
    "str",
    "tensorflow.shape",
    "transformers.pipelines.logger"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.SummarizationPipeline.__init__": {
  "data": {
   "lineno": 1964,
   "symbols_in_volume": [
    "self.check_model_type",
    "self.framework",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.TYPE_CHECKING": {
  "data": {
   "shadows": "typing.TYPE_CHECKING"
  },
  "type": "import"
 },
 "transformers.pipelines.Text2TextGenerationPipeline": {
  "data": {
   "lineno": 2177,
   "symbols_in_volume": [
    "add_end_docstrings",
    "transformers.pipelines.PIPELINE_INIT_ARGS",
    "transformers.pipelines.Pipeline"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.Text2TextGenerationPipeline.__call__": {
  "data": {
   "lineno": 2203,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "self._parse_and_tokenize",
    "self.device_placement",
    "self.ensure_tensor_on_device",
    "self.framework",
    "self.model.generate",
    "self.tokenizer.decode",
    "self.tokenizer.pad_token_id",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Text2TextGenerationPipeline.__init__": {
  "data": {
   "lineno": 2194,
   "symbols_in_volume": [
    "self.check_model_type",
    "self.framework",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.TextClassificationPipeline": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "add_end_docstrings",
    "transformers.pipelines.PIPELINE_INIT_ARGS",
    "transformers.pipelines.Pipeline"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.TextClassificationPipeline.__call__": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "enumerate",
    "numpy.exp",
    "self.model.config.id2label",
    "self.model.config.num_labels",
    "self.return_all_scores",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.TextClassificationPipeline.__init__": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "bool",
    "self.check_model_type",
    "self.framework",
    "self.return_all_scores",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.TextGenerationPipeline": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "add_end_docstrings",
    "transformers.pipelines.PIPELINE_INIT_ARGS",
    "transformers.pipelines.Pipeline"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.TextGenerationPipeline.__call__": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "self.XL_PREFIX",
    "self._parse_and_tokenize",
    "self.device_placement",
    "self.ensure_tensor_on_device",
    "self.framework",
    "self.model.__class__.__name__",
    "self.model.config.prefix",
    "self.model.generate",
    "self.tokenizer.decode",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.TextGenerationPipeline.__init__": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "self.ALLOWED_MODELS",
    "self.check_model_type",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.TextGenerationPipeline._parse_and_tokenize": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "self.framework",
    "self.model.__class__.__name__",
    "self.tokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.TokenClassificationArgumentHandler": {
  "data": {
   "lineno": 1328,
   "symbols_in_volume": [
    "transformers.pipelines.ArgumentHandler"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.TokenClassificationArgumentHandler.__call__": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.TokenClassificationPipeline": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "add_end_docstrings",
    "transformers.pipelines.PIPELINE_INIT_ARGS",
    "transformers.pipelines.Pipeline"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.TokenClassificationPipeline.__call__": {
  "data": {
   "lineno": 1417,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "numpy.exp",
    "self._args_parser",
    "self.device_placement",
    "self.ensure_tensor_on_device",
    "self.framework",
    "self.group_entities",
    "self.grouped_entities",
    "self.ignore_labels",
    "self.ignore_subwords",
    "self.model",
    "self.model.config.id2label",
    "self.tokenizer",
    "self.tokenizer.convert_ids_to_tokens",
    "self.tokenizer.is_fast",
    "self.tokenizer.unk_token_id",
    "str",
    "transformers.pipelines.torch",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.TokenClassificationPipeline.__init__": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "BasicTokenizer",
    "ValueError",
    "bool",
    "int",
    "self._args_parser",
    "self._basic_tokenizer",
    "self.check_model_type",
    "self.framework",
    "self.grouped_entities",
    "self.ignore_labels",
    "self.ignore_subwords",
    "self.tokenizer.is_fast",
    "str",
    "super",
    "transformers.pipelines.ArgumentHandler",
    "transformers.pipelines.TokenClassificationArgumentHandler",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.TokenClassificationPipeline.group_entities": {
  "data": {
   "lineno": 1539,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "self.group_sub_entities",
    "self.ignore_subwords",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.TokenClassificationPipeline.group_sub_entities": {
  "data": {
   "lineno": 1520,
   "symbols_in_volume": [
    "dict",
    "numpy.mean",
    "numpy.nanmean",
    "self.tokenizer.convert_tokens_to_string",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.TranslationPipeline": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "add_end_docstrings",
    "transformers.pipelines.PIPELINE_INIT_ARGS",
    "transformers.pipelines.Pipeline"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.TranslationPipeline.__call__": {
  "data": {
   "lineno": 2092,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "self._parse_and_tokenize",
    "self.device_placement",
    "self.ensure_tensor_on_device",
    "self.framework",
    "self.model.config.max_length",
    "self.model.config.prefix",
    "self.model.generate",
    "self.tokenizer.decode",
    "self.tokenizer.pad_token_id",
    "str",
    "tensorflow.shape",
    "transformers.pipelines.logger"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.TranslationPipeline.__init__": {
  "data": {
   "lineno": 2085,
   "symbols_in_volume": [
    "self.check_model_type",
    "self.framework",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.pipelines.UUID": {
  "data": {
   "shadows": "uuid.UUID"
  },
  "type": "import"
 },
 "transformers.pipelines.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.pipelines.ZeroShotClassificationArgumentHandler": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "transformers.pipelines.ArgumentHandler"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.ZeroShotClassificationArgumentHandler.__call__": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "self._parse_labels",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.ZeroShotClassificationArgumentHandler._parse_labels": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.ZeroShotClassificationPipeline": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "add_end_docstrings",
    "transformers.pipelines.PIPELINE_INIT_ARGS",
    "transformers.pipelines.Pipeline"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines.ZeroShotClassificationPipeline.__call__": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.exp",
    "range",
    "reversed",
    "self._args_parser._parse_labels",
    "self.entailment_id",
    "str",
    "super",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.ZeroShotClassificationPipeline.__init__": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "self._args_parser",
    "self.entailment_id",
    "super",
    "transformers.pipelines.ZeroShotClassificationArgumentHandler",
    "transformers.pipelines.logger"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.ZeroShotClassificationPipeline._parse_and_tokenize": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "self._args_parser",
    "self.framework",
    "self.tokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.ZeroShotClassificationPipeline.entailment_id": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "property",
    "self.model.config.label2id.items"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines._ScikitCompat": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "transformers.pipelines._ScikitCompat.predict": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines._ScikitCompat.transform": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "transformers.pipelines.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "transformers.pipelines.check_task": {
  "data": {
   "lineno": 2689,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "list",
    "str",
    "transformers.pipelines.SUPPORTED_TASKS",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "transformers.pipelines.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "transformers.pipelines.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "transformers.pipelines.get_default_model": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "is_tf_available",
    "is_torch_available",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.get_framework": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "OSError",
    "RuntimeError",
    "is_tf_available",
    "is_torch_available",
    "isinstance",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.pipelines.logger": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "transformers.pipelines.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.pipelines.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.pipelines.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "transformers.pipelines.pipeline": {
  "data": {
   "lineno": 2731,
   "symbols_in_volume": [
    "Exception",
    "UserWarning",
    "bool",
    "isinstance",
    "str",
    "task_class",
    "transformers.pipelines.Pipeline",
    "transformers.pipelines.check_task",
    "transformers.pipelines.get_default_model",
    "transformers.pipelines.get_framework",
    "transformers.pipelines.logger",
    "transformers.pipelines.warnings",
    "tuple",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.pipelines.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.pipelines.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.pipelines.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.pipelines.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "transformers.pipelines.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.retrieval_rag": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_datasets_available",
    "is_faiss_available"
   ]
  },
  "type": "module"
 },
 "transformers.retrieval_rag.CanonicalHFIndex": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "transformers.retrieval_rag.HFIndexBase"
   ]
  },
  "type": "class"
 },
 "transformers.retrieval_rag.CanonicalHFIndex.__init__": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ValueError",
    "datasets.load_dataset",
    "int",
    "str",
    "super",
    "transformers.retrieval_rag.logger",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.CanonicalHFIndex.init_index": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "datasets.load_dataset",
    "transformers.retrieval_rag.logger"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.CustomHFIndex": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "transformers.retrieval_rag.HFIndexBase"
   ]
  },
  "type": "class"
 },
 "transformers.retrieval_rag.CustomHFIndex.__init__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "int",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.CustomHFIndex.init_index": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "transformers.retrieval_rag.logger"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.CustomHFIndex.load_from_disk": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "datasets.load_from_disk",
    "transformers.retrieval_rag.logger"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.Dataset": {
  "data": {
   "shadows": "datasets.Dataset"
  },
  "type": "import"
 },
 "transformers.retrieval_rag.HFIndexBase": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "transformers.retrieval_rag.Index"
   ]
  },
  "type": "class"
 },
 "transformers.retrieval_rag.HFIndexBase.__init__": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "transformers.retrieval_rag.HFIndexBase._check_dataset_format": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "datasets.Dataset",
    "isinstance",
    "len",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.HFIndexBase.get_doc_dicts": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "dict",
    "numpy.ndarray",
    "range",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.HFIndexBase.get_top_docs": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.ndarray",
    "numpy.vstack",
    "numpy.zeros",
    "range",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.HFIndexBase.init_index": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.HFIndexBase.is_initialized": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "transformers.retrieval_rag.Index": {
  "data": {
   "lineno": 51
  },
  "type": "class"
 },
 "transformers.retrieval_rag.Index.get_doc_dicts": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "numpy.ndarray",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.Index.get_top_docs": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.ndarray",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.Index.init_index": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.Index.is_initialized": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "transformers.retrieval_rag.LEGACY_INDEX_PATH": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.retrieval_rag.LegacyIndex": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "transformers.retrieval_rag.Index"
   ]
  },
  "type": "class"
 },
 "transformers.retrieval_rag.LegacyIndex.__init__": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex._deserialize_index": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "len",
    "open",
    "transformers.retrieval_rag.faiss",
    "transformers.retrieval_rag.logger",
    "transformers.retrieval_rag.pickle"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex._load_passages": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "open",
    "transformers.retrieval_rag.logger",
    "transformers.retrieval_rag.pickle"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex._resolve_path": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "EnvironmentError",
    "cached_path",
    "is_remote_url",
    "transformers.retrieval_rag.logger",
    "transformers.retrieval_rag.os"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex.get_doc_dicts": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex.get_top_docs": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.ndarray",
    "numpy.zeros",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex.init_index": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "transformers.retrieval_rag.faiss"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.LegacyIndex.is_initialized": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "transformers.retrieval_rag.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.retrieval_rag.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.retrieval_rag.RagRetriever": {
  "data": {
   "lineno": 332
  },
  "type": "class"
 },
 "transformers.retrieval_rag.RagRetriever.__call__": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "BatchEncoding",
    "int",
    "numpy.ndarray",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever.__init__": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "requires_datasets",
    "requires_faiss",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever._build_index": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.retrieval_rag.CanonicalHFIndex",
    "transformers.retrieval_rag.CustomHFIndex",
    "transformers.retrieval_rag.LEGACY_INDEX_PATH",
    "transformers.retrieval_rag.LegacyIndex"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever._chunk_tensor": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "int",
    "len",
    "range",
    "typing.Iterable",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever._main_retrieve": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.ndarray",
    "transformers.retrieval_rag.logger",
    "transformers.retrieval_rag.time",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever.from_pretrained": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls._build_index",
    "requires_datasets",
    "requires_faiss",
    "transformers.retrieval_rag.CustomHFIndex"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever.init_retrieval": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "transformers.retrieval_rag.logger"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever.postprocess_docs": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "cat_input_and_doc",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever.postprocess_docs.cat_input_and_doc": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever.retrieve": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "dict",
    "int",
    "numpy.ndarray",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.RagRetriever.save_pretrained": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "RagTokenizer",
    "isinstance",
    "transformers.retrieval_rag.CustomHFIndex",
    "transformers.retrieval_rag.os"
   ]
  },
  "type": "function"
 },
 "transformers.retrieval_rag.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.retrieval_rag.faiss": {
  "data": {
   "shadows": "faiss"
  },
  "type": "import"
 },
 "transformers.retrieval_rag.load_dataset": {
  "data": {
   "shadows": "datasets.load_dataset"
  },
  "type": "import"
 },
 "transformers.retrieval_rag.load_from_disk": {
  "data": {
   "shadows": "datasets.load_from_disk"
  },
  "type": "import"
 },
 "transformers.retrieval_rag.logger": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.retrieval_rag.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.retrieval_rag.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.retrieval_rag.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "transformers.retrieval_rag.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "transformers.testing_utils": {
  "data": {
   "symbols_in_volume": [
    "_read_stream",
    "callback",
    "print",
    "transformers.testing_utils._RunOutput",
    "transformers.testing_utils.asyncio",
    "transformers.testing_utils.err",
    "transformers.testing_utils.line",
    "transformers.testing_utils.out",
    "transformers.testing_utils.p",
    "transformers.testing_utils.parse_flag_from_env",
    "transformers.testing_utils.parse_int_from_env",
    "transformers.testing_utils.require_torch_non_multigpu",
    "transformers.testing_utils.sys",
    "transformers.testing_utils.tee",
    "transformers.testing_utils.torch"
   ]
  },
  "type": "module"
 },
 "transformers.testing_utils.CaptureLogger": {
  "data": {
   "lineno": 456
  },
  "type": "class"
 },
 "transformers.testing_utils.CaptureLogger.__enter__": {
  "data": {
   "lineno": 485
  },
  "type": "function"
 },
 "transformers.testing_utils.CaptureLogger.__exit__": {
  "data": {
   "lineno": 489
  },
  "type": "function"
 },
 "transformers.testing_utils.CaptureLogger.__init__": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "io.StringIO",
    "transformers.testing_utils.logging"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.CaptureLogger.__repr__": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "transformers.testing_utils.CaptureStd": {
  "data": {
   "lineno": 365
  },
  "type": "class"
 },
 "transformers.testing_utils.CaptureStd.__enter__": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "transformers.testing_utils.sys"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.CaptureStd.__exit__": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "transformers.testing_utils.apply_print_resets",
    "transformers.testing_utils.sys"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.CaptureStd.__init__": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.CaptureStd.__repr__": {
  "data": {
   "lineno": 427
  },
  "type": "function"
 },
 "transformers.testing_utils.CaptureStderr": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "transformers.testing_utils.CaptureStd"
   ]
  },
  "type": "class"
 },
 "transformers.testing_utils.CaptureStderr.__init__": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.CaptureStdout": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "transformers.testing_utils.CaptureStd"
   ]
  },
  "type": "class"
 },
 "transformers.testing_utils.CaptureStdout.__init__": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.DUMMY_DIFF_TOKENIZER_IDENTIFIER": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.testing_utils.DUMMY_UNKWOWN_IDENTIFIER": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.testing_utils.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "transformers.testing_utils.SMALL_MODEL_IDENTIFIER": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.testing_utils.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "transformers.testing_utils.TestCasePlus": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "class"
 },
 "transformers.testing_utils.TestCasePlus.examples_dir": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.examples_dir_str": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.get_auto_remove_tmp_dir": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "ValueError",
    "pathlib.Path",
    "transformers.testing_utils.shutil",
    "transformers.testing_utils.tempfile"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.get_env": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "transformers.testing_utils.os"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.repo_root_dir": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.repo_root_dir_str": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.setUp": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "ValueError",
    "pathlib.Path",
    "transformers.testing_utils.inspect"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.src_dir": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.src_dir_str": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.tearDown": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "transformers.testing_utils.shutil"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.test_file_dir": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.test_file_dir_str": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.test_file_path": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.test_file_path_str": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.tests_dir": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.TestCasePlus.tests_dir_str": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils._RunOutput": {
  "data": {
   "lineno": 880
  },
  "type": "class"
 },
 "transformers.testing_utils._RunOutput.__init__": {
  "data": {
   "lineno": 881
  },
  "type": "function"
 },
 "transformers.testing_utils._run_custom_tokenizers": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "transformers.testing_utils._run_pipeline_tests": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "transformers.testing_utils._run_pt_tf_cross_tests": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "transformers.testing_utils._run_slow_tests": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "transformers.testing_utils._tf_gpu_memory_limit": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "transformers.testing_utils.apply_print_resets": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "transformers.testing_utils.re"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.assert_screenout": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "transformers.testing_utils.apply_print_resets"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "transformers.testing_utils.create_terminal_writer": {
  "data": {
   "shadows": "_pytest.config.create_terminal_writer"
  },
  "type": "import"
 },
 "transformers.testing_utils.custom_tokenizers": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "transformers.testing_utils._run_custom_tokenizers",
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.err": {
  "data": {
   "lineno": 918
  },
  "type": "constant"
 },
 "transformers.testing_utils.execute_subprocess_async": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "RuntimeError",
    "_stream_subprocess",
    "transformers.testing_utils._RunOutput",
    "transformers.testing_utils.asyncio"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.get_gpu_count": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "len",
    "tensorflow.config.list_physical_devices",
    "transformers.testing_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.get_tests_dir": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "transformers.testing_utils.inspect",
    "transformers.testing_utils.os"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "transformers.testing_utils.is_pipeline_test": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ImportError",
    "transformers.testing_utils._run_pipeline_tests",
    "transformers.testing_utils.pytest",
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.is_pt_tf_cross_test": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ImportError",
    "transformers.testing_utils._run_pt_tf_cross_tests",
    "transformers.testing_utils.pytest",
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.line": {
  "data": {
   "lineno": 889
  },
  "type": "constant"
 },
 "transformers.testing_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.testing_utils.mockenv": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "transformers.testing_utils.os",
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.testing_utils.out": {
  "data": {
   "lineno": 917
  },
  "type": "constant"
 },
 "transformers.testing_utils.p": {
  "data": {
   "lineno": 900
  },
  "type": "constant"
 },
 "transformers.testing_utils.parse_flag_from_env": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "distutils.util.strtobool",
    "transformers.testing_utils.os"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.parse_int_from_env": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "int",
    "transformers.testing_utils.os"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "transformers.testing_utils.pytest_addoption_shared": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "transformers.testing_utils.pytest_opt_registered"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.pytest_opt_registered": {
  "data": {
   "lineno": 723
  },
  "type": "constant"
 },
 "transformers.testing_utils.pytest_terminal_summary_main": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "_pytest.config.create_terminal_writer",
    "dir",
    "enumerate",
    "hasattr",
    "id",
    "len",
    "open",
    "pathlib.Path",
    "summary_failures_short"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.pytest_terminal_summary_main.summary_failures_short": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "transformers.testing_utils.re"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.testing_utils.require_datasets": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.require_faiss": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.require_flax": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.require_optuna": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.require_ray": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.require_sentencepiece": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.require_tf": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.require_tokenizers": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.require_torch": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.require_torch_gpu": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "transformers.testing_utils.torch_device",
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.require_torch_multigpu": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "transformers.testing_utils.torch",
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.require_torch_non_multigpu": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "transformers.testing_utils.torch",
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.require_torch_non_multigpu_but_fix_me": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "transformers.testing_utils.require_torch_tpu": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "transformers.testing_utils.slow": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "transformers.testing_utils._run_slow_tests",
    "transformers.testing_utils.unittest"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.strtobool": {
  "data": {
   "shadows": "distutils.util.strtobool"
  },
  "type": "import"
 },
 "transformers.testing_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.testing_utils.tee": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "print",
    "transformers.testing_utils.line"
   ]
  },
  "type": "function"
 },
 "transformers.testing_utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "transformers.testing_utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.testing_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.testing_utils.torch_device": {
  "data": {
   "lineno": 252
  },
  "type": "constant"
 },
 "transformers.testing_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "transformers.tokenization_albert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_albert.AlbertTokenizer": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "transformers.tokenization_albert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_albert.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_albert.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_albert.AlbertTokenizer.__getstate__": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "sentencepiece.SentencePieceProcessor",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.__setstate__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "sentencepiece.SentencePieceProcessor"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer._tokenize": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "len",
    "str",
    "transformers.tokenization_albert.SPIECE_UNDERLINE"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "transformers.tokenization_albert.SPIECE_UNDERLINE"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.get_vocab": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.preprocess_text": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "transformers.tokenization_albert.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.save_vocabulary": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_albert.VOCAB_FILES_NAMES",
    "transformers.tokenization_albert.logger",
    "transformers.tokenization_albert.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert.AlbertTokenizer.vocab_size": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_albert.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_albert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.tokenization_albert.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_albert.SPIECE_UNDERLINE": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "transformers.tokenization_albert.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_albert.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_albert.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_albert.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.tokenization_albert.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_albert.spm": {
  "data": {
   "shadows": "sentencepiece"
  },
  "type": "import"
 },
 "transformers.tokenization_albert.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "transformers.tokenization_albert_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_sentencepiece_available"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_albert_fast.AlbertTokenizer": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_albert_fast.AlbertTokenizerFast": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "transformers.tokenization_albert_fast.AlbertTokenizer",
    "transformers.tokenization_albert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_albert_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_albert_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_albert_fast.AlbertTokenizerFast.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert_fast.AlbertTokenizerFast.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert_fast.AlbertTokenizerFast.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert_fast.AlbertTokenizerFast.get_special_tokens_mask": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert_fast.AlbertTokenizerFast.save_vocabulary": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_albert_fast.VOCAB_FILES_NAMES",
    "transformers.tokenization_albert_fast.logger",
    "transformers.tokenization_albert_fast.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_albert_fast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_albert_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_albert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "transformers.tokenization_albert_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_albert_fast.SPIECE_UNDERLINE": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "transformers.tokenization_albert_fast.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_albert_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.tokenization_albert_fast.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_albert_fast.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_albert_fast.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_auto": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.OrderedDict",
    "is_sentencepiece_available",
    "is_tokenizers_available",
    "transformers.tokenization_auto.AlbertTokenizer",
    "transformers.tokenization_auto.AlbertTokenizerFast",
    "transformers.tokenization_auto.BartTokenizerFast",
    "transformers.tokenization_auto.BertGenerationTokenizer",
    "transformers.tokenization_auto.BertTokenizerFast",
    "transformers.tokenization_auto.CamembertTokenizer",
    "transformers.tokenization_auto.CamembertTokenizerFast",
    "transformers.tokenization_auto.DPRQuestionEncoderTokenizerFast",
    "transformers.tokenization_auto.DistilBertTokenizerFast",
    "transformers.tokenization_auto.ElectraTokenizerFast",
    "transformers.tokenization_auto.FunnelTokenizerFast",
    "transformers.tokenization_auto.GPT2TokenizerFast",
    "transformers.tokenization_auto.HerbertTokenizerFast",
    "transformers.tokenization_auto.LayoutLMTokenizerFast",
    "transformers.tokenization_auto.LongformerTokenizerFast",
    "transformers.tokenization_auto.LxmertTokenizerFast",
    "transformers.tokenization_auto.MBartTokenizer",
    "transformers.tokenization_auto.MBartTokenizerFast",
    "transformers.tokenization_auto.MarianTokenizer",
    "transformers.tokenization_auto.MobileBertTokenizerFast",
    "transformers.tokenization_auto.OpenAIGPTTokenizerFast",
    "transformers.tokenization_auto.PegasusTokenizer",
    "transformers.tokenization_auto.PegasusTokenizerFast",
    "transformers.tokenization_auto.ReformerTokenizer",
    "transformers.tokenization_auto.ReformerTokenizerFast",
    "transformers.tokenization_auto.RetriBertTokenizerFast",
    "transformers.tokenization_auto.RobertaTokenizerFast",
    "transformers.tokenization_auto.SqueezeBertTokenizerFast",
    "transformers.tokenization_auto.T5Tokenizer",
    "transformers.tokenization_auto.T5TokenizerFast",
    "transformers.tokenization_auto.TOKENIZER_MAPPING",
    "transformers.tokenization_auto.XLMProphetNetTokenizer",
    "transformers.tokenization_auto.XLMRobertaTokenizer",
    "transformers.tokenization_auto.XLMRobertaTokenizerFast",
    "transformers.tokenization_auto.XLNetTokenizer",
    "transformers.tokenization_auto.XLNetTokenizerFast"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_auto.AlbertTokenizer": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.AlbertTokenizerFast": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.AutoTokenizer": {
  "data": {
   "lineno": 223
  },
  "type": "class"
 },
 "transformers.tokenization_auto.AutoTokenizer.__init__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "EnvironmentError"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_auto.AutoTokenizer.from_pretrained": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "globals",
    "isinstance",
    "replace_list_option_in_docstrings",
    "str",
    "transformers.tokenization_auto.SLOW_TOKENIZER_MAPPING",
    "transformers.tokenization_auto.TOKENIZER_MAPPING",
    "transformers.tokenization_auto.logger",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_auto.BartTokenizerFast": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.BertGenerationTokenizer": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.BertTokenizerFast": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.CamembertTokenizer": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.CamembertTokenizerFast": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.DPRQuestionEncoderTokenizerFast": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.DistilBertTokenizerFast": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.ElectraTokenizerFast": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.FunnelTokenizerFast": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.GPT2TokenizerFast": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.HerbertTokenizerFast": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.LayoutLMTokenizerFast": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.LongformerTokenizerFast": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.LxmertTokenizerFast": {
  "data": {
   "lineno": 156
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.MBartTokenizer": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.MBartTokenizerFast": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.MarianTokenizer": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.MobileBertTokenizerFast": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.OpenAIGPTTokenizerFast": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "transformers.tokenization_auto.PegasusTokenizer": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.PegasusTokenizerFast": {
  "data": {
   "lineno": 160
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.ReformerTokenizer": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.ReformerTokenizerFast": {
  "data": {
   "lineno": 161
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.RetriBertTokenizerFast": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.RobertaTokenizerFast": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.SLOW_TOKENIZER_MAPPING": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.SqueezeBertTokenizerFast": {
  "data": {
   "lineno": 164
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.T5Tokenizer": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.T5TokenizerFast": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.TOKENIZER_MAPPING": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.XLMProphetNetTokenizer": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.XLMRobertaTokenizer": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.XLMRobertaTokenizerFast": {
  "data": {
   "lineno": 166
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.XLNetTokenizer": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.XLNetTokenizerFast": {
  "data": {
   "lineno": 167
  },
  "type": "constant"
 },
 "transformers.tokenization_auto.logger": {
  "data": {
   "lineno": 169
  },
  "type": "constant"
 },
 "transformers.tokenization_bart": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_bart.BartTokenizer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "transformers.tokenization_bart._all_bart_models",
    "transformers.tokenization_bart.merges_url",
    "transformers.tokenization_bart.vocab_url"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_bart.BartTokenizer.prepare_seq2seq_batch": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "self",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bart.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_bart.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_bart._all_bart_models": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.tokenization_bart.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.tokenization_bart.merges_url": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_bart.vocab_url": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_bart_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_bart_fast.BartTokenizerFast": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "transformers.tokenization_bart_fast._all_bart_models",
    "transformers.tokenization_bart_fast.merges_url",
    "transformers.tokenization_bart_fast.tokenizer_url",
    "transformers.tokenization_bart_fast.vocab_url"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_bart_fast.BartTokenizerFast.prepare_seq2seq_batch": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "int",
    "self",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bart_fast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_bart_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_bart_fast._all_bart_models": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.tokenization_bart_fast.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.tokenization_bart_fast.merges_url": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.tokenization_bart_fast.tokenizer_url": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_bart_fast.vocab_url": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_bert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_bert.BasicTokenizer": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_bert.BasicTokenizer.__init__": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._clean_text": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "_is_control",
    "_is_whitespace",
    "ord"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._is_chinese_char": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._run_split_on_punc": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "_is_punctuation",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._run_strip_accents": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "transformers.tokenization_bert.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer._tokenize_chinese_chars": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BasicTokenizer.tokenize": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "set",
    "transformers.tokenization_bert.whitespace_tokenize"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "transformers.tokenization_bert.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_bert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_bert.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_bert.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_bert.BertTokenizer.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "BasicTokenizer",
    "ValueError",
    "WordpieceTokenizer",
    "super",
    "transformers.tokenization_bert.collections",
    "transformers.tokenization_bert.load_vocab",
    "transformers.tokenization_bert.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer._tokenize": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.do_lower_case": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.get_vocab": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.save_vocabulary": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "open",
    "sorted",
    "str",
    "transformers.tokenization_bert.VOCAB_FILES_NAMES",
    "transformers.tokenization_bert.logger",
    "transformers.tokenization_bert.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.BertTokenizer.vocab_size": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "transformers.tokenization_bert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "transformers.tokenization_bert.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.tokenization_bert.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.tokenization_bert.WordpieceTokenizer": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_bert.WordpieceTokenizer.__init__": {
  "data": {
   "lineno": 507
  },
  "type": "function"
 },
 "transformers.tokenization_bert.WordpieceTokenizer.tokenize": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "len",
    "list",
    "transformers.tokenization_bert.whitespace_tokenize"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.load_vocab": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "enumerate",
    "open",
    "transformers.tokenization_bert.collections"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_bert.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "transformers.tokenization_bert.whitespace_tokenize": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "transformers.tokenization_bert_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_bert_fast.BertTokenizerFast": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "transformers.tokenization_bert_fast.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_bert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_bert_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_bert_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_bert_fast.BertTokenizerFast.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "getattr",
    "pre_tok_class",
    "super",
    "tokenizers.normalizers",
    "transformers.tokenization_bert_fast.json"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_fast.BertTokenizerFast.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "transformers.tokenization_bert_fast.BertTokenizerFast.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_fast.BertTokenizerFast.save_vocabulary": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "str",
    "tuple",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_fast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_fast.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "transformers.tokenization_bert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "transformers.tokenization_bert_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.tokenization_bert_fast.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.tokenization_bert_fast.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_fast.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_bert_fast.normalizers": {
  "data": {
   "shadows": "tokenizers.normalizers"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_generation": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "int",
    "transformers.tokenization_bert_generation.VOCAB_FILES_NAMES",
    "transformers.tokenization_bert_generation.tokenizer_url",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer.__getstate__": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "sentencepiece.SentencePieceProcessor",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer.__setstate__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "sentencepiece.SentencePieceProcessor"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer._tokenize": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer.get_vocab": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer.save_vocabulary": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_bert_generation.VOCAB_FILES_NAMES",
    "transformers.tokenization_bert_generation.logger",
    "transformers.tokenization_bert_generation.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_generation.BertGenerationTokenizer.vocab_size": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_generation.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_generation.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_generation.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_generation.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_bert_generation.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_generation.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_bert_generation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_generation.spm": {
  "data": {
   "shadows": "sentencepiece"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_generation.tokenizer_url": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_bert_japanese": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_bert_japanese.BertJapaneseTokenizer": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "transformers.tokenization_bert_japanese.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_bert_japanese.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_bert_japanese.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_bert_japanese.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_bert_japanese.BertJapaneseTokenizer.__getstate__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_japanese.BertJapaneseTokenizer.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "BasicTokenizer",
    "CharacterTokenizer",
    "MecabTokenizer",
    "ValueError",
    "WordpieceTokenizer",
    "load_vocab",
    "super",
    "transformers.tokenization_bert_japanese.collections",
    "transformers.tokenization_bert_japanese.copy",
    "transformers.tokenization_bert_japanese.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_japanese.BertJapaneseTokenizer.__setstate__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "MecabTokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_japanese.BertJapaneseTokenizer._tokenize": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "transformers.tokenization_bert_japanese.BertJapaneseTokenizer.do_lower_case": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_japanese.CharacterTokenizer": {
  "data": {
   "lineno": 305
  },
  "type": "class"
 },
 "transformers.tokenization_bert_japanese.CharacterTokenizer.__init__": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "transformers.tokenization_bert_japanese.CharacterTokenizer.tokenize": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "transformers.tokenization_bert_japanese.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_japanese.MecabTokenizer": {
  "data": {
   "lineno": 197
  },
  "type": "class"
 },
 "transformers.tokenization_bert_japanese.MecabTokenizer.__init__": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "RuntimeError",
    "ValueError",
    "str",
    "transformers.tokenization_bert_japanese.fugashi",
    "transformers.tokenization_bert_japanese.ipadic",
    "transformers.tokenization_bert_japanese.os",
    "transformers.tokenization_bert_japanese.unidic",
    "transformers.tokenization_bert_japanese.unidic_lite",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_japanese.MecabTokenizer.tokenize": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "transformers.tokenization_bert_japanese.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bert_japanese.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_japanese.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.tokenization_bert_japanese.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.tokenization_bert_japanese.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_bert_japanese.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_bert_japanese.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_japanese.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_japanese.fugashi": {
  "data": {
   "shadows": "fugashi"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_japanese.ipadic": {
  "data": {
   "shadows": "ipadic"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_japanese.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_bert_japanese.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_japanese.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_japanese.unidic": {
  "data": {
   "shadows": "unidic"
  },
  "type": "import"
 },
 "transformers.tokenization_bert_japanese.unidic_lite": {
  "data": {
   "shadows": "unidic_lite"
  },
  "type": "import"
 },
 "transformers.tokenization_bertweet": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.tokenization_bertweet.EMOTICONS",
    "transformers.tokenization_bertweet.REGEXPS",
    "transformers.tokenization_bertweet.URLS",
    "transformers.tokenization_bertweet.regex"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "transformers.tokenization_bertweet.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_bertweet.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_bertweet.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ImportError",
    "TweetTokenizer",
    "dict",
    "emoji.demojize",
    "len",
    "open",
    "range",
    "super",
    "transformers.tokenization_bertweet.logger",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer._tokenize": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "transformers.tokenization_bertweet.re"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.add_from_file": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "Exception",
    "FileNotFoundError",
    "UnicodeError",
    "ValueError",
    "isinstance",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.bpe": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "list",
    "min",
    "transformers.tokenization_bertweet.get_pairs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.get_vocab": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.normalizeToken": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.normalizeTweet": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.save_vocabulary": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_bertweet.VOCAB_FILES_NAMES",
    "transformers.tokenization_bertweet.logger",
    "transformers.tokenization_bertweet.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.BertweetTokenizer.vocab_size": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.EMOTICONS": {
  "data": {
   "lineno": 484
  },
  "type": "constant"
 },
 "transformers.tokenization_bertweet.EMOTICON_RE": {
  "data": {
   "lineno": 602
  },
  "type": "constant"
 },
 "transformers.tokenization_bertweet.ENT_RE": {
  "data": {
   "lineno": 605
  },
  "type": "constant"
 },
 "transformers.tokenization_bertweet.HANG_RE": {
  "data": {
   "lineno": 598
  },
  "type": "constant"
 },
 "transformers.tokenization_bertweet.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_bertweet.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_bertweet.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "transformers.tokenization_bertweet.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.tokenization_bertweet.REGEXPS": {
  "data": {
   "lineno": 547
  },
  "type": "constant"
 },
 "transformers.tokenization_bertweet.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_bertweet.TweetTokenizer": {
  "data": {
   "lineno": 678
  },
  "type": "class"
 },
 "transformers.tokenization_bertweet.TweetTokenizer.__init__": {
  "data": {
   "lineno": 696
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.TweetTokenizer.tokenize": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "list",
    "map",
    "reduce_lengthening",
    "remove_handles",
    "transformers.tokenization_bertweet.EMOTICON_RE",
    "transformers.tokenization_bertweet.HANG_RE",
    "transformers.tokenization_bertweet.WORD_RE",
    "transformers.tokenization_bertweet._replace_html_entities"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.URLS": {
  "data": {
   "lineno": 502
  },
  "type": "constant"
 },
 "transformers.tokenization_bertweet.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.tokenization_bertweet.WORD_RE": {
  "data": {
   "lineno": 595
  },
  "type": "constant"
 },
 "transformers.tokenization_bertweet._replace_html_entities": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "transformers.tokenization_bertweet.ENT_RE",
    "transformers.tokenization_bertweet._str_to_unicode"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet._replace_html_entities._convert_entity": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "OverflowError",
    "ValueError",
    "bytes",
    "chr",
    "int",
    "transformers.tokenization_bertweet.html"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet._str_to_unicode": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.casual_tokenize": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "transformers.tokenization_bertweet.TweetTokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_bertweet.demojize": {
  "data": {
   "shadows": "emoji.demojize"
  },
  "type": "import"
 },
 "transformers.tokenization_bertweet.get_pairs": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.html": {
  "data": {
   "shadows": "html"
  },
  "type": "import"
 },
 "transformers.tokenization_bertweet.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.tokenization_bertweet.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_bertweet.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.tokenization_bertweet.reduce_lengthening": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "transformers.tokenization_bertweet.regex"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_bertweet.regex": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "transformers.tokenization_bertweet.remove_handles": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "transformers.tokenization_bertweet.regex"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_blenderbot": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_blenderbot.BlenderbotSmallTokenizer": {
  "data": {
   "lineno": 98
  },
  "type": "class"
 },
 "transformers.tokenization_blenderbot.BlenderbotSmallTokenizer.__init__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "dict",
    "len",
    "open",
    "range",
    "super",
    "transformers.tokenization_blenderbot.json",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_blenderbot.BlenderbotSmallTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_blenderbot.BlenderbotSmallTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_blenderbot.BlenderbotSmallTokenizer._tokenize": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "regex.findall",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_blenderbot.BlenderbotSmallTokenizer.bpe": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "list",
    "min",
    "regex.sub",
    "str",
    "transformers.tokenization_blenderbot.get_pairs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_blenderbot.BlenderbotSmallTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_blenderbot.BlenderbotSmallTokenizer.get_vocab": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "dict",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_blenderbot.BlenderbotSmallTokenizer.save_vocabulary": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "open",
    "sorted",
    "str",
    "transformers.tokenization_blenderbot.VOCAB_FILES_NAMES",
    "transformers.tokenization_blenderbot.json",
    "transformers.tokenization_blenderbot.logger",
    "transformers.tokenization_blenderbot.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_blenderbot.BlenderbotSmallTokenizer.vocab_size": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "int",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_blenderbot.BlenderbotTokenizer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "transformers.tokenization_blenderbot.CKPT_3B"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_blenderbot.BlenderbotTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_blenderbot.CKPT_3B": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.tokenization_blenderbot.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.tokenization_blenderbot.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_blenderbot.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_blenderbot.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_blenderbot.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_blenderbot.get_pairs": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_blenderbot.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_blenderbot.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.tokenization_blenderbot.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_blenderbot.re": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "transformers.tokenization_camembert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_camembert.CamembertTokenizer": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "transformers.tokenization_camembert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_camembert.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_camembert.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.__getstate__": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len",
    "sentencepiece.SentencePieceProcessor",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.__setstate__": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "sentencepiece.SentencePieceProcessor"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer._tokenize": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "transformers.tokenization_camembert.SPIECE_UNDERLINE"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.get_vocab": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.save_vocabulary": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_camembert.VOCAB_FILES_NAMES",
    "transformers.tokenization_camembert.logger",
    "transformers.tokenization_camembert.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_camembert.CamembertTokenizer.vocab_size": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_camembert.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_camembert.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_camembert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.tokenization_camembert.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_camembert.SHARED_MODEL_IDENTIFIERS": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.tokenization_camembert.SPIECE_UNDERLINE": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.tokenization_camembert.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_camembert.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_camembert.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_camembert.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_camembert.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_camembert.spm": {
  "data": {
   "shadows": "sentencepiece"
  },
  "type": "import"
 },
 "transformers.tokenization_camembert_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_sentencepiece_available"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_camembert_fast.CamembertTokenizer": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_camembert_fast.CamembertTokenizerFast": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "transformers.tokenization_camembert_fast.CamembertTokenizer",
    "transformers.tokenization_camembert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_camembert_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_camembert_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_camembert_fast.CamembertTokenizerFast.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_camembert_fast.CamembertTokenizerFast.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_camembert_fast.CamembertTokenizerFast.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_camembert_fast.CamembertTokenizerFast.get_special_tokens_mask": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_camembert_fast.CamembertTokenizerFast.save_vocabulary": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_camembert_fast.VOCAB_FILES_NAMES",
    "transformers.tokenization_camembert_fast.logger",
    "transformers.tokenization_camembert_fast.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_camembert_fast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_camembert_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_camembert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.tokenization_camembert_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.tokenization_camembert_fast.SHARED_MODEL_IDENTIFIERS": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "transformers.tokenization_camembert_fast.SPIECE_UNDERLINE": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "transformers.tokenization_camembert_fast.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_camembert_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_camembert_fast.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_camembert_fast.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.tokenization_camembert_fast.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_ctrl": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_ctrl.CONTROL_CODES": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "transformers.tokenization_ctrl.CONTROL_CODES",
    "transformers.tokenization_ctrl.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_ctrl.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_ctrl.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "dict",
    "len",
    "open",
    "range",
    "super",
    "transformers.tokenization_ctrl.json",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer._tokenize": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "regex.findall"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.bpe": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "list",
    "min",
    "transformers.tokenization_ctrl.get_pairs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.get_vocab": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.save_vocabulary": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "open",
    "sorted",
    "str",
    "transformers.tokenization_ctrl.VOCAB_FILES_NAMES",
    "transformers.tokenization_ctrl.json",
    "transformers.tokenization_ctrl.logger",
    "transformers.tokenization_ctrl.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.CTRLTokenizer.vocab_size": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_ctrl.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "transformers.tokenization_ctrl.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_ctrl.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_ctrl.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_ctrl.get_pairs": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_ctrl.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_ctrl.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_ctrl.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_ctrl.re": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "transformers.tokenization_deberta": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_deberta.DebertaTokenizer": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "transformers.tokenization_deberta.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_deberta.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_deberta.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_deberta.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_deberta.DebertaTokenizer.__init__": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "ValueError",
    "super",
    "transformers.tokenization_deberta.GPT2Tokenizer",
    "transformers.tokenization_deberta.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.DebertaTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 573
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.DebertaTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 569
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.DebertaTokenizer._tokenize": {
  "data": {
   "lineno": 563
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.DebertaTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 581
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.DebertaTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 577
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.DebertaTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.DebertaTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.DebertaTokenizer.get_vocab": {
  "data": {
   "lineno": 558
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.DebertaTokenizer.prepare_for_tokenization": {
  "data": {
   "lineno": 667
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.DebertaTokenizer.save_vocabulary": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.DebertaTokenizer.vocab": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.DebertaTokenizer.vocab_size": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.Encoder": {
  "data": {
   "lineno": 99
  },
  "type": "class"
 },
 "transformers.tokenization_deberta.Encoder.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "dict",
    "len",
    "range",
    "regex.compile",
    "transformers.tokenization_deberta.bytes_to_unicode",
    "transformers.tokenization_deberta.random",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.Encoder.bpe": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "Exception",
    "float",
    "len",
    "min",
    "transformers.tokenization_deberta.get_pairs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.Encoder.decode": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "bytearray"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.Encoder.encode": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.Encoder.split_to_words": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "list",
    "regex.findall"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer.__init__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "transformers.tokenization_deberta.get_encoder",
    "transformers.tokenization_deberta.load_vocab"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer._decode": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "int",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer._encode": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer.add_special_token": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer.add_symbol": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer.convert_ids_to_tokens": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer.convert_tokens_to_ids": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer.decode": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer.id": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer.part_of_whole_word": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "len",
    "list",
    "transformers.tokenization_deberta._is_control",
    "transformers.tokenization_deberta._is_punctuation",
    "transformers.tokenization_deberta._is_whitespace"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer.save_pretrained": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "list",
    "str",
    "transformers.tokenization_deberta.VOCAB_FILES_NAMES",
    "transformers.tokenization_deberta.os",
    "transformers.tokenization_deberta.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer.split_to_words": {
  "data": {
   "lineno": 397
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer.sym": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.GPT2Tokenizer.tokenize": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_deberta.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.tokenization_deberta.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "transformers.tokenization_deberta.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "transformers.tokenization_deberta.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_deberta.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.tokenization_deberta.ZipFile": {
  "data": {
   "shadows": "zipfile.ZipFile"
  },
  "type": "import"
 },
 "transformers.tokenization_deberta.__all__": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.tokenization_deberta._is_control": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "transformers.tokenization_deberta.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta._is_punctuation": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "ord",
    "transformers.tokenization_deberta.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta._is_whitespace": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "transformers.tokenization_deberta.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.bytes_to_unicode": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "chr",
    "dict",
    "functools.lru_cache",
    "list",
    "ord",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.download_asset": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "Exception",
    "int",
    "len",
    "open",
    "transformers.tokenization_deberta.os",
    "transformers.tokenization_deberta.pathlib",
    "transformers.tokenization_deberta.requests",
    "transformers.tokenization_deberta.tqdm"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.get_encoder": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "transformers.tokenization_deberta.Encoder"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.get_pairs": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.load_vocab": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "transformers.tokenization_deberta.download_asset",
    "transformers.tokenization_deberta.os",
    "transformers.tokenization_deberta.pathlib",
    "transformers.tokenization_deberta.torch",
    "zipfile.ZipFile"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_deberta.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.tokenization_deberta.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "transformers.tokenization_deberta.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_deberta.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "transformers.tokenization_deberta.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "transformers.tokenization_deberta.re": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "transformers.tokenization_deberta.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "transformers.tokenization_deberta.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.tokenization_deberta.tqdm": {
  "data": {
   "shadows": "tqdm"
  },
  "type": "import"
 },
 "transformers.tokenization_deberta.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "transformers.tokenization_distilbert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_distilbert.DistilBertTokenizer": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "transformers.tokenization_distilbert.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_distilbert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_distilbert.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_distilbert.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_distilbert.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.tokenization_distilbert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.tokenization_distilbert.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_distilbert.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.tokenization_distilbert.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.tokenization_distilbert_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_distilbert_fast.DistilBertTokenizerFast": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "transformers.tokenization_distilbert_fast.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_distilbert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_distilbert_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_distilbert_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_distilbert_fast.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.tokenization_distilbert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.tokenization_distilbert_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.tokenization_distilbert_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.tokenization_distilbert_fast.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.tokenization_dpr.collections"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_dpr.CONTEXT_ENCODER_PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr.CONTEXT_ENCODER_PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr.CONTEXT_ENCODER_PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr.CUSTOM_DPR_READER_DOCSTRING": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr.CustomDPRReaderTokenizerMixin": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.tokenization_dpr.CUSTOM_DPR_READER_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_dpr.CustomDPRReaderTokenizerMixin.__call__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "bool",
    "int",
    "isinstance",
    "len",
    "str",
    "super",
    "typing.Optional",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_dpr.CustomDPRReaderTokenizerMixin._get_best_spans": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "int",
    "len",
    "sorted",
    "transformers.tokenization_dpr.DPRSpanPrediction",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_dpr.CustomDPRReaderTokenizerMixin.decode_best_spans": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "range",
    "sorted",
    "transformers.tokenization_dpr.DPRReaderOutput",
    "transformers.tokenization_dpr.DPRSpanPrediction",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_dpr.DPRContextEncoderTokenizer": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "transformers.tokenization_dpr.CONTEXT_ENCODER_PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_dpr.CONTEXT_ENCODER_PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_dpr.CONTEXT_ENCODER_PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_dpr.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_dpr.DPRQuestionEncoderTokenizer": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "transformers.tokenization_dpr.QUESTION_ENCODER_PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_dpr.QUESTION_ENCODER_PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_dpr.QUESTION_ENCODER_PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_dpr.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_dpr.DPRReaderOutput": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr.DPRReaderTokenizer": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "add_end_docstrings",
    "transformers.tokenization_dpr.CUSTOM_DPR_READER_DOCSTRING",
    "transformers.tokenization_dpr.CustomDPRReaderTokenizerMixin",
    "transformers.tokenization_dpr.READER_PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_dpr.READER_PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_dpr.READER_PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_dpr.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_dpr.DPRSpanPrediction": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_dpr.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_dpr.QUESTION_ENCODER_PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr.QUESTION_ENCODER_PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr.QUESTION_ENCODER_PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr.READER_PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr.READER_PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr.READER_PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.tokenization_dpr.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.tokenization_dpr.logger": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.tokenization_dpr_fast.collections"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_dpr_fast.CONTEXT_ENCODER_PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr_fast.CONTEXT_ENCODER_PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr_fast.CONTEXT_ENCODER_PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr_fast.CUSTOM_DPR_READER_DOCSTRING": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr_fast.CustomDPRReaderTokenizerMixin": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "add_start_docstrings",
    "transformers.tokenization_dpr_fast.CUSTOM_DPR_READER_DOCSTRING"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_dpr_fast.CustomDPRReaderTokenizerMixin.__call__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "bool",
    "int",
    "isinstance",
    "len",
    "str",
    "super",
    "typing.Optional",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_dpr_fast.CustomDPRReaderTokenizerMixin._get_best_spans": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "int",
    "len",
    "sorted",
    "transformers.tokenization_dpr_fast.DPRSpanPrediction",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_dpr_fast.CustomDPRReaderTokenizerMixin.decode_best_spans": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "range",
    "sorted",
    "transformers.tokenization_dpr_fast.DPRReaderOutput",
    "transformers.tokenization_dpr_fast.DPRSpanPrediction",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_dpr_fast.DPRContextEncoderTokenizerFast": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "transformers.tokenization_dpr_fast.CONTEXT_ENCODER_PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_dpr_fast.CONTEXT_ENCODER_PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_dpr_fast.CONTEXT_ENCODER_PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_dpr_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_dpr_fast.DPRQuestionEncoderTokenizerFast": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "transformers.tokenization_dpr_fast.QUESTION_ENCODER_PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_dpr_fast.QUESTION_ENCODER_PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_dpr_fast.QUESTION_ENCODER_PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_dpr_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_dpr_fast.DPRReaderOutput": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr_fast.DPRReaderTokenizerFast": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "add_end_docstrings",
    "transformers.tokenization_dpr_fast.CUSTOM_DPR_READER_DOCSTRING",
    "transformers.tokenization_dpr_fast.CustomDPRReaderTokenizerMixin",
    "transformers.tokenization_dpr_fast.READER_PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_dpr_fast.READER_PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_dpr_fast.READER_PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_dpr_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_dpr_fast.DPRSpanPrediction": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr_fast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_dpr_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_dpr_fast.QUESTION_ENCODER_PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr_fast.QUESTION_ENCODER_PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr_fast.QUESTION_ENCODER_PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr_fast.READER_PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr_fast.READER_PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr_fast.READER_PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr_fast.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.tokenization_dpr_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_dpr_fast.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.tokenization_dpr_fast.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_electra": {
  "data": {},
  "type": "module"
 },
 "transformers.tokenization_electra.ElectraTokenizer": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "transformers.tokenization_electra.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_electra.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_electra.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_electra.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_electra.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.tokenization_electra.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_electra.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.tokenization_electra.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "transformers.tokenization_electra_fast": {
  "data": {},
  "type": "module"
 },
 "transformers.tokenization_electra_fast.ElectraTokenizerFast": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "transformers.tokenization_electra_fast.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_electra_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_electra_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_electra_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_electra_fast.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.tokenization_electra_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.tokenization_electra_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.tokenization_electra_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "transformers.tokenization_flaubert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_flaubert.FlaubertTokenizer": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "transformers.tokenization_flaubert.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_flaubert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_flaubert.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_flaubert.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_flaubert.FlaubertTokenizer.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_flaubert.FlaubertTokenizer._tokenize": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "transformers.tokenization_flaubert.logger"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_flaubert.FlaubertTokenizer.preprocess_text": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "transformers.tokenization_flaubert.convert_to_unicode",
    "transformers.tokenization_flaubert.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_flaubert.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.tokenization_flaubert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.tokenization_flaubert.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.tokenization_flaubert.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_flaubert.convert_to_unicode": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "six_ensure_text"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_flaubert.convert_to_unicode.six_ensure_text": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "transformers.tokenization_flaubert.six",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_flaubert.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.tokenization_flaubert.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "transformers.tokenization_flaubert.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "transformers.tokenization_fsmt": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_fsmt.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "transformers.tokenization_fsmt.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_fsmt.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_fsmt.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_fsmt.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.__init__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "open",
    "range",
    "super",
    "transformers.tokenization_fsmt.json",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer._tokenize": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.bpe": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "min",
    "transformers.tokenization_fsmt.get_pairs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.get_src_vocab": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.get_tgt_vocab": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.get_vocab": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.moses_detokenize": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "sacremoses.MosesDetokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.moses_pipeline": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "transformers.tokenization_fsmt.remove_non_printing_char",
    "transformers.tokenization_fsmt.replace_unicode_punct"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.moses_punct_norm": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "sacremoses.MosesPunctNormalizer"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.moses_tokenize": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "sacremoses.MosesTokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.prepare_seq2seq_batch": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "dict",
    "int",
    "list",
    "self",
    "str",
    "type",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.save_vocabulary": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "open",
    "self.bpe_ranks.items",
    "self.decoder.items",
    "self.encoder",
    "sorted",
    "str",
    "transformers.tokenization_fsmt.VOCAB_FILES_NAMES",
    "transformers.tokenization_fsmt.json",
    "transformers.tokenization_fsmt.logger",
    "transformers.tokenization_fsmt.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.src_vocab_size": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.tgt_vocab_size": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.FSMTTokenizer.vocab_size": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_fsmt.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_fsmt.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "transformers.tokenization_fsmt.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.tokenization_fsmt.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "transformers.tokenization_fsmt.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_fsmt.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.tokenization_fsmt.get_pairs": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_fsmt.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_fsmt.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_fsmt.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.tokenization_fsmt.remove_non_printing_char": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "transformers.tokenization_fsmt.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.replace_unicode_punct": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "transformers.tokenization_fsmt.re"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_fsmt.sm": {
  "data": {
   "shadows": "sacremoses"
  },
  "type": "import"
 },
 "transformers.tokenization_fsmt.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "transformers.tokenization_funnel": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.tokenization_funnel._model_names"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_funnel.FunnelTokenizer": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "int",
    "transformers.tokenization_funnel.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_funnel.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_funnel.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_funnel.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_funnel.FunnelTokenizer.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_funnel.FunnelTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_funnel.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_funnel.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_funnel.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.tokenization_funnel.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "transformers.tokenization_funnel.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "transformers.tokenization_funnel.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_funnel._model_names": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_funnel.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.tokenization_funnel_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "transformers.tokenization_funnel_fast._model_names"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_funnel_fast.FunnelTokenizerFast": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "int",
    "transformers.tokenization_funnel_fast.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_funnel_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_funnel_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_funnel_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_funnel_fast.FunnelTokenizerFast.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_funnel_fast.FunnelTokenizerFast.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_funnel_fast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_funnel_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_funnel_fast.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "transformers.tokenization_funnel_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "transformers.tokenization_funnel_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.tokenization_funnel_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.tokenization_funnel_fast._model_names": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_funnel_fast.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.tokenization_gpt2": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "transformers.tokenization_gpt2.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_gpt2.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_gpt2.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.__init__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "AddedToken",
    "dict",
    "isinstance",
    "len",
    "open",
    "range",
    "regex.compile",
    "str",
    "super",
    "transformers.tokenization_gpt2.bytes_to_unicode",
    "transformers.tokenization_gpt2.json",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer._convert_id_to_token": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer._convert_token_to_id": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer._tokenize": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "regex.findall"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.bpe": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "min",
    "transformers.tokenization_gpt2.get_pairs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "bytearray"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.get_vocab": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.prepare_for_tokenization": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "FutureWarning",
    "transformers.tokenization_gpt2.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.save_vocabulary": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "open",
    "sorted",
    "str",
    "transformers.tokenization_gpt2.VOCAB_FILES_NAMES",
    "transformers.tokenization_gpt2.json",
    "transformers.tokenization_gpt2.logger",
    "transformers.tokenization_gpt2.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.GPT2Tokenizer.vocab_size": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "transformers.tokenization_gpt2.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.tokenization_gpt2.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_gpt2.bytes_to_unicode": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "chr",
    "dict",
    "functools.lru_cache",
    "list",
    "ord",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.get_pairs": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_gpt2.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.re": {
  "data": {
   "shadows": "regex"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_gpt2_fast.GPT2TokenizerFast": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "transformers.tokenization_gpt2_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_gpt2_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_gpt2_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_gpt2_fast.GPT2TokenizerFast.__init__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "getattr",
    "pre_tok_class",
    "super",
    "tokenizers.pre_tokenizers",
    "transformers.tokenization_gpt2_fast.json"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2_fast.GPT2TokenizerFast._batch_encode_plus": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "FutureWarning",
    "super",
    "transformers.tokenization_gpt2_fast.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2_fast.GPT2TokenizerFast._encode_plus": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "FutureWarning",
    "super",
    "transformers.tokenization_gpt2_fast.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2_fast.GPT2TokenizerFast.save_vocabulary": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "str",
    "tuple",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_gpt2_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "transformers.tokenization_gpt2_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.tokenization_gpt2_fast.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_gpt2_fast.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2_fast.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_gpt2_fast.pre_tokenizers": {
  "data": {
   "shadows": "tokenizers.pre_tokenizers"
  },
  "type": "import"
 },
 "transformers.tokenization_gpt2_fast.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.tokenization_herbert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_herbert.HerbertTokenizer": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "transformers.tokenization_herbert.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_herbert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_herbert.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_herbert.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_herbert.HerbertTokenizer.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "BasicTokenizer",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_herbert.HerbertTokenizer._tokenize": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "transformers.tokenization_herbert.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.tokenization_herbert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.tokenization_herbert.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_herbert.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.tokenization_herbert.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.tokenization_herbert_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_herbert_fast.HerbertTokenizerFast": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "transformers.tokenization_herbert_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_herbert_fast.HerbertTokenizerFast.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_herbert_fast.HerbertTokenizerFast.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_herbert_fast.HerbertTokenizerFast.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_herbert_fast.HerbertTokenizerFast.get_special_tokens_mask": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_herbert_fast.HerbertTokenizerFast.save_vocabulary": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "str",
    "tuple",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_herbert_fast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_herbert_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_herbert_fast.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_herbert_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_herbert_fast.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_layoutlm": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_layoutlm.LayoutLMTokenizer": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "transformers.tokenization_layoutlm.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_layoutlm.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_layoutlm.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_layoutlm.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_layoutlm.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "transformers.tokenization_layoutlm.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.tokenization_layoutlm.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.tokenization_layoutlm.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.tokenization_layoutlm.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.tokenization_layoutlm_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_layoutlm_fast.LayoutLMTokenizerFast": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "transformers.tokenization_layoutlm_fast.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_layoutlm_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_layoutlm_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_layoutlm_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_layoutlm_fast.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.tokenization_layoutlm_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.tokenization_layoutlm_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_layoutlm_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_layoutlm_fast.logger": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.tokenization_longformer": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_longformer.LongformerTokenizer": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "transformers.tokenization_longformer.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_longformer._all_longformer_models",
    "transformers.tokenization_longformer.merges_url",
    "transformers.tokenization_longformer.vocab_url"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_longformer.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_longformer._all_longformer_models": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.tokenization_longformer.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "transformers.tokenization_longformer.merges_url": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_longformer.vocab_url": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.tokenization_longformer_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_longformer_fast.LongformerTokenizerFast": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "transformers.tokenization_longformer_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_longformer_fast._all_longformer_models",
    "transformers.tokenization_longformer_fast.merges_url",
    "transformers.tokenization_longformer_fast.tokenizer_url",
    "transformers.tokenization_longformer_fast.vocab_url"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_longformer_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.tokenization_longformer_fast._all_longformer_models": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_longformer_fast.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.tokenization_longformer_fast.merges_url": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.tokenization_longformer_fast.tokenizer_url": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_longformer_fast.vocab_url": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_lxmert": {
  "data": {},
  "type": "module"
 },
 "transformers.tokenization_lxmert.LxmertTokenizer": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "transformers.tokenization_lxmert.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_lxmert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_lxmert.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_lxmert.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_lxmert.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.tokenization_lxmert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.tokenization_lxmert.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.tokenization_lxmert.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.tokenization_lxmert_fast": {
  "data": {},
  "type": "module"
 },
 "transformers.tokenization_lxmert_fast.LxmertTokenizerFast": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "transformers.tokenization_lxmert_fast.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_lxmert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_lxmert_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_lxmert_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_lxmert_fast.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "transformers.tokenization_lxmert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.tokenization_lxmert_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_lxmert_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.tokenization_marian": {
  "data": {},
  "type": "module"
 },
 "transformers.tokenization_marian.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.tokenization_marian.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_marian.MarianTokenizer": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "transformers.tokenization_marian.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_marian.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_marian.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_marian.re",
    "transformers.tokenization_marian.vocab_files_names"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_marian.MarianTokenizer.__getstate__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "self.__dict__.copy",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "KeyError",
    "list",
    "load_json",
    "load_spm",
    "pathlib.Path",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.__setstate__": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "load_spm",
    "self.__dict__",
    "self._setup_normalizer",
    "self.current_spm",
    "self.spm_files",
    "self.spm_source",
    "self.spm_target",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer._setup_normalizer": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "FileNotFoundError",
    "ImportError",
    "sacremoses.MosesPunctNormalizer",
    "transformers.tokenization_marian.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer._special_token_mask": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "self.all_special_ids",
    "self.unk_token_id",
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer._tokenize": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "bool",
    "int",
    "self._special_token_mask",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.get_vocab": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "self.added_tokens_encoder",
    "self.encoder.copy",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.normalize": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.num_special_tokens_to_add": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.prepare_seq2seq_batch": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "dict",
    "int",
    "self",
    "self.current_spm",
    "self.spm_source",
    "self.spm_target",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.remove_language_code": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.save_vocabulary": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pathlib.Path",
    "save_json",
    "self.encoder",
    "self.spm_files",
    "self.vocab_files_names",
    "shutil.copyfile",
    "str",
    "tuple",
    "typing.Optional",
    "typing.Tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MarianTokenizer.vocab_size": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "int",
    "len",
    "property",
    "self.encoder"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.MosesPunctNormalizer": {
  "data": {
   "shadows": "sacremoses.MosesPunctNormalizer"
  },
  "type": "import"
 },
 "transformers.tokenization_marian.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_marian.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_marian.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.tokenization_marian.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.tokenization_marian.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "transformers.tokenization_marian.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_marian.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.tokenization_marian.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_marian.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_marian.load_json": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "open",
    "str",
    "transformers.tokenization_marian.json",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.load_spm": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "str",
    "transformers.tokenization_marian.sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.tokenization_marian.save_json": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "open",
    "str",
    "transformers.tokenization_marian.json"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_marian.sentencepiece": {
  "data": {
   "shadows": "sentencepiece"
  },
  "type": "import"
 },
 "transformers.tokenization_marian.vocab_files_names": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "transformers.tokenization_marian.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.tokenization_mbart": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_mbart.FAIRSEQ_LANGUAGE_CODES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_mbart.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_mbart.MBartTokenizer": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "int",
    "transformers.tokenization_mbart.SPM_URL",
    "transformers.tokenization_mbart._all_mbart_models",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_mbart.MBartTokenizer.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "super",
    "transformers.tokenization_mbart.FAIRSEQ_LANGUAGE_CODES"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_mbart.MBartTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_mbart.MBartTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_mbart.MBartTokenizer.prepare_seq2seq_batch": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "add_start_docstrings",
    "bool",
    "int",
    "self",
    "self.set_src_lang_special_tokens",
    "self.set_tgt_lang_special_tokens",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_mbart.MBartTokenizer.set_src_lang_special_tokens": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "self.cur_lang_code",
    "self.eos_token_id",
    "self.lang_code_to_id",
    "self.prefix_tokens",
    "self.suffix_tokens"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_mbart.MBartTokenizer.set_tgt_lang_special_tokens": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "self.cur_lang_code",
    "self.eos_token_id",
    "self.lang_code_to_id",
    "self.prefix_tokens",
    "self.suffix_tokens",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_mbart.MBartTokenizer.vocab_size": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_mbart.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_mbart.SPM_URL": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_mbart._all_mbart_models": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_mbart.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_mbart_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_sentencepiece_available"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_mbart_fast.FAIRSEQ_LANGUAGE_CODES": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.tokenization_mbart_fast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_mbart_fast.MBartTokenizer": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_mbart_fast.MBartTokenizerFast": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "int",
    "transformers.tokenization_mbart_fast.MBartTokenizer",
    "transformers.tokenization_mbart_fast.SPM_URL",
    "transformers.tokenization_mbart_fast._all_mbart_models",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_mbart_fast.MBartTokenizerFast.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "super",
    "transformers.tokenization_mbart_fast.FAIRSEQ_LANGUAGE_CODES"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_mbart_fast.MBartTokenizerFast.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_mbart_fast.MBartTokenizerFast.get_special_tokens_mask": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_mbart_fast.MBartTokenizerFast.prepare_seq2seq_batch": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "add_start_docstrings",
    "bool",
    "int",
    "self",
    "self.set_src_lang_special_tokens",
    "self.set_tgt_lang_special_tokens",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_mbart_fast.MBartTokenizerFast.set_src_lang_special_tokens": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "list",
    "self._tokenizer.post_processor",
    "self.convert_ids_to_tokens",
    "self.convert_tokens_to_ids",
    "self.cur_lang_code",
    "self.eos_token_id",
    "self.prefix_tokens",
    "self.suffix_tokens",
    "tokenizers.processors.TemplateProcessing",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_mbart_fast.MBartTokenizerFast.set_tgt_lang_special_tokens": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "list",
    "self._tokenizer.post_processor",
    "self.convert_ids_to_tokens",
    "self.convert_tokens_to_ids",
    "self.cur_lang_code",
    "self.eos_token_id",
    "self.prefix_tokens",
    "self.suffix_tokens",
    "str",
    "tokenizers.processors.TemplateProcessing",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_mbart_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_mbart_fast.SPM_URL": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.tokenization_mbart_fast._all_mbart_models": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_mbart_fast.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.tokenization_mbart_fast.processors": {
  "data": {
   "shadows": "tokenizers.processors"
  },
  "type": "import"
 },
 "transformers.tokenization_mbart_fast.tokenizer_URL": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.tokenization_mobilebert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_mobilebert.MobileBertTokenizer": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "transformers.tokenization_mobilebert.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_mobilebert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_mobilebert.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_mobilebert.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_mobilebert.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.tokenization_mobilebert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_mobilebert.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.tokenization_mobilebert.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.tokenization_mobilebert.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "transformers.tokenization_mobilebert_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_mobilebert_fast.MobileBertTokenizerFast": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "transformers.tokenization_mobilebert_fast.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_mobilebert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_mobilebert_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_mobilebert_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_mobilebert_fast.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_mobilebert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_mobilebert_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_mobilebert_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.tokenization_mobilebert_fast.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.tokenization_openai": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_openai.English": {
  "data": {
   "shadows": "spacy.lang.en.English"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "transformers.tokenization_openai.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_openai.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_openai.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "BasicTokenizer",
    "ImportError",
    "dict",
    "len",
    "open",
    "range",
    "spacy.lang.en.English",
    "super",
    "transformers.tokenization_openai.ftfy",
    "transformers.tokenization_openai.json",
    "transformers.tokenization_openai.logger",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer._tokenize": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "transformers.tokenization_openai.text_standardize"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.bpe": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "min",
    "transformers.tokenization_openai.get_pairs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.do_lower_case": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.get_vocab": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.save_vocabulary": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "open",
    "sorted",
    "str",
    "transformers.tokenization_openai.VOCAB_FILES_NAMES",
    "transformers.tokenization_openai.json",
    "transformers.tokenization_openai.logger",
    "transformers.tokenization_openai.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.OpenAIGPTTokenizer.vocab_size": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "transformers.tokenization_openai.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_openai.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_openai.ftfy": {
  "data": {
   "shadows": "ftfy"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.get_pairs": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_openai.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.tokenization_openai.text_standardize": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "transformers.tokenization_openai.re"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_openai_fast.OpenAIGPTTokenizerFast": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "transformers.tokenization_openai_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_openai_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_openai_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_openai_fast.OpenAIGPTTokenizerFast.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai_fast.OpenAIGPTTokenizerFast.do_lower_case": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai_fast.OpenAIGPTTokenizerFast.save_vocabulary": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "str",
    "tuple",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_openai_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_openai_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_openai_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.tokenization_openai_fast.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_openai_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_openai_fast.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_pegasus": {
  "data": {},
  "type": "module"
 },
 "transformers.tokenization_pegasus.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.tokenization_pegasus.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_pegasus.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_pegasus.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_pegasus.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "transformers.tokenization_pegasus.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_pegasus.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_pegasus.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "int",
    "len",
    "range",
    "str",
    "super",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer._special_token_mask": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "bool",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer.num_special_tokens_to_add": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer.prepare_seq2seq_batch": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "dict",
    "int",
    "self",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_pegasus.PegasusTokenizer.vocab_size": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "int",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_pegasus.SPIECE_UNDERLINE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.tokenization_pegasus.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.tokenization_pegasus_fast": {
  "data": {
   "symbols_in_volume": [
    "is_sentencepiece_available"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_pegasus_fast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_pegasus_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_pegasus_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.tokenization_pegasus_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_pegasus_fast.PegasusTokenizer": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_pegasus_fast.PegasusTokenizerFast": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "transformers.tokenization_pegasus_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_pegasus_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_pegasus_fast.PegasusTokenizer",
    "transformers.tokenization_pegasus_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_pegasus_fast.PegasusTokenizerFast._special_token_mask": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_pegasus_fast.PegasusTokenizerFast.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "int",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_pegasus_fast.PegasusTokenizerFast.get_special_tokens_mask": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "bool",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_pegasus_fast.PegasusTokenizerFast.prepare_seq2seq_batch": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "add_start_docstrings",
    "dict",
    "int",
    "self",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_pegasus_fast.SPIECE_UNDERLINE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_pegasus_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_phobert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_phobert.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_phobert.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_phobert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.tokenization_phobert.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_phobert.PhobertTokenizer": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "transformers.tokenization_phobert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_phobert.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_phobert.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "dict",
    "len",
    "open",
    "range",
    "super",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer._tokenize": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "transformers.tokenization_phobert.re"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.add_from_file": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "Exception",
    "FileNotFoundError",
    "UnicodeError",
    "ValueError",
    "isinstance",
    "len",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.bpe": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "list",
    "min",
    "transformers.tokenization_phobert.get_pairs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.get_vocab": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.save_vocabulary": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_phobert.VOCAB_FILES_NAMES",
    "transformers.tokenization_phobert.logger",
    "transformers.tokenization_phobert.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_phobert.PhobertTokenizer.vocab_size": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_phobert.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_phobert.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_phobert.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_phobert.get_pairs": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_phobert.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_phobert.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_phobert.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.tokenization_prophetnet": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_prophetnet.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_prophetnet.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_prophetnet.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_prophetnet.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.tokenization_prophetnet.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.tokenization_prophetnet.ProphetNetTokenizer": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "transformers.tokenization_prophetnet.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_prophetnet.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_prophetnet.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_prophetnet.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_prophetnet.ProphetNetTokenizer.__init__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "BasicTokenizer",
    "ValueError",
    "WordpieceTokenizer",
    "super",
    "transformers.tokenization_prophetnet.collections",
    "transformers.tokenization_prophetnet.load_vocab",
    "transformers.tokenization_prophetnet.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_prophetnet.ProphetNetTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "transformers.tokenization_prophetnet.ProphetNetTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "transformers.tokenization_prophetnet.ProphetNetTokenizer._tokenize": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "transformers.tokenization_prophetnet.ProphetNetTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_prophetnet.ProphetNetTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "transformers.tokenization_prophetnet.ProphetNetTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_prophetnet.ProphetNetTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_prophetnet.ProphetNetTokenizer.get_vocab": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_prophetnet.ProphetNetTokenizer.save_vocabulary": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "open",
    "sorted",
    "str",
    "transformers.tokenization_prophetnet.VOCAB_FILES_NAMES",
    "transformers.tokenization_prophetnet.logger",
    "transformers.tokenization_prophetnet.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_prophetnet.ProphetNetTokenizer.vocab_size": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_prophetnet.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_prophetnet.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_prophetnet.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.tokenization_prophetnet.load_vocab": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "enumerate",
    "open",
    "transformers.tokenization_prophetnet.collections"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_prophetnet.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_prophetnet.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_rag": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_rag.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_rag.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_rag.RagTokenizer": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "transformers.tokenization_rag.RagTokenizer.__call__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "transformers.tokenization_rag.RagTokenizer.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "transformers.tokenization_rag.RagTokenizer.batch_decode": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "transformers.tokenization_rag.RagTokenizer.from_pretrained": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "transformers.tokenization_rag.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_rag.RagTokenizer.prepare_seq2seq_batch": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "add_start_docstrings",
    "int",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_rag.RagTokenizer.save_pretrained": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "transformers.tokenization_rag.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_rag.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_rag.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_reformer": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_reformer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.tokenization_reformer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_reformer.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "transformers.tokenization_reformer.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "transformers.tokenization_reformer.ReformerTokenizer": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "transformers.tokenization_reformer.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_reformer.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_reformer.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_reformer.ReformerTokenizer.__getstate__": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "sentencepiece.SentencePieceProcessor",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer.__setstate__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "sentencepiece.SentencePieceProcessor"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer._tokenize": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer.get_vocab": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "int",
    "range",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer.save_vocabulary": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_reformer.VOCAB_FILES_NAMES",
    "transformers.tokenization_reformer.logger",
    "transformers.tokenization_reformer.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_reformer.ReformerTokenizer.vocab_size": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_reformer.SPIECE_UNDERLINE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_reformer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_reformer.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.tokenization_reformer.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_reformer.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_reformer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_reformer.spm": {
  "data": {
   "shadows": "sentencepiece"
  },
  "type": "import"
 },
 "transformers.tokenization_reformer_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_sentencepiece_available"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_reformer_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_reformer_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.tokenization_reformer_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.tokenization_reformer_fast.ReformerTokenizer": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_reformer_fast.ReformerTokenizerFast": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "transformers.tokenization_reformer_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_reformer_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_reformer_fast.ReformerTokenizer",
    "transformers.tokenization_reformer_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_reformer_fast.ReformerTokenizerFast.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_reformer_fast.ReformerTokenizerFast.save_vocabulary": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_reformer_fast.VOCAB_FILES_NAMES",
    "transformers.tokenization_reformer_fast.logger",
    "transformers.tokenization_reformer_fast.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_reformer_fast.SPIECE_UNDERLINE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_reformer_fast.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_reformer_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.tokenization_reformer_fast.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_reformer_fast.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.tokenization_reformer_fast.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_retribert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_retribert.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "transformers.tokenization_retribert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.tokenization_retribert.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_retribert.RetriBertTokenizer": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "transformers.tokenization_retribert.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_retribert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_retribert.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_retribert.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_retribert.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.tokenization_retribert.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.tokenization_retribert_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_retribert_fast.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "transformers.tokenization_retribert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_retribert_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.tokenization_retribert_fast.RetriBertTokenizerFast": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "transformers.tokenization_retribert_fast.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_retribert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_retribert_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_retribert_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_retribert_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.tokenization_retribert_fast.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.tokenization_roberta": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_roberta.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.tokenization_roberta.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_roberta.RobertaTokenizer": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "transformers.tokenization_roberta.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_roberta.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_roberta.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_roberta.RobertaTokenizer.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "AddedToken",
    "isinstance",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_roberta.RobertaTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_roberta.RobertaTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_roberta.RobertaTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_roberta.RobertaTokenizer.prepare_for_tokenization": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "FutureWarning",
    "len",
    "transformers.tokenization_roberta.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_roberta.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_roberta.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_roberta.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_roberta_fast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_roberta_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.tokenization_roberta_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_roberta_fast.RobertaTokenizerFast": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "transformers.tokenization_roberta_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_roberta_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_roberta_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_roberta_fast.RobertaTokenizerFast.__init__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_roberta_fast.RobertaTokenizerFast.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "transformers.tokenization_roberta_fast.RobertaTokenizerFast.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_roberta_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.tokenization_roberta_fast.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.tokenization_squeezebert": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_squeezebert.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "transformers.tokenization_squeezebert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.tokenization_squeezebert.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_squeezebert.SqueezeBertTokenizer": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "transformers.tokenization_squeezebert.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_squeezebert.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_squeezebert.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_squeezebert.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_squeezebert.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "transformers.tokenization_squeezebert.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.tokenization_squeezebert_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_squeezebert_fast.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.tokenization_squeezebert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "transformers.tokenization_squeezebert_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "transformers.tokenization_squeezebert_fast.SqueezeBertTokenizerFast": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "transformers.tokenization_squeezebert_fast.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_squeezebert_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_squeezebert_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_squeezebert_fast.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_squeezebert_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "transformers.tokenization_squeezebert_fast.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "transformers.tokenization_t5": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_t5.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_t5.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_t5.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "transformers.tokenization_t5.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "transformers.tokenization_t5.T5Tokenizer": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "transformers.tokenization_t5.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_t5.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_t5.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_t5.T5Tokenizer.__getstate__": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "filter",
    "len",
    "range",
    "sentencepiece.SentencePieceProcessor",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.__setstate__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "sentencepiece.SentencePieceProcessor"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer._add_eos_if_not_present": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "int",
    "len",
    "transformers.tokenization_t5.warnings",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer._convert_id_to_token": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer._convert_token_to_id": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "int",
    "transformers.tokenization_t5.re"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer._tokenize": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.get_vocab": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.prepare_seq2seq_batch": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "add_start_docstrings",
    "bool",
    "int",
    "self",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.save_vocabulary": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_t5.VOCAB_FILES_NAMES",
    "transformers.tokenization_t5.logger",
    "transformers.tokenization_t5.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_t5.T5Tokenizer.vocab_size": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_t5.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_t5.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.tokenization_t5.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_t5.logger": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_t5.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_t5.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.tokenization_t5.spm": {
  "data": {
   "shadows": "sentencepiece"
  },
  "type": "import"
 },
 "transformers.tokenization_t5.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.tokenization_t5_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_sentencepiece_available"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_t5_fast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_t5_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_t5_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "transformers.tokenization_t5_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "transformers.tokenization_t5_fast.T5Tokenizer": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_t5_fast.T5TokenizerFast": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "int",
    "transformers.tokenization_t5_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_t5_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_t5_fast.T5Tokenizer",
    "transformers.tokenization_t5_fast.VOCAB_FILES_NAMES",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_t5_fast.T5TokenizerFast.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "filter",
    "len",
    "range",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_t5_fast.T5TokenizerFast.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_t5_fast.T5TokenizerFast.prepare_seq2seq_batch": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "add_start_docstrings",
    "bool",
    "int",
    "self",
    "self.pad_token_id",
    "self.prefix_tokens",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_t5_fast.T5TokenizerFast.save_vocabulary": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_t5_fast.VOCAB_FILES_NAMES",
    "transformers.tokenization_t5_fast.logger",
    "transformers.tokenization_t5_fast.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_t5_fast.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_t5_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.tokenization_t5_fast.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_t5_fast.logger": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_t5_fast.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_torch_available"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_transfo_xl.CORPUS_NAME": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "transformers.tokenization_transfo_xl.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.DETOKENIZE_NUMBERS": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "transformers.tokenization_transfo_xl.LMMultiFileIterator": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "transformers.tokenization_transfo_xl.LMShuffledIterator"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.LMMultiFileIterator.__init__": {
  "data": {
   "lineno": 630
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMMultiFileIterator.__iter__": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "numpy.random.shuffle"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMMultiFileIterator.get_sent_stream": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "iter",
    "numpy.random.shuffle"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.__init__": {
  "data": {
   "lineno": 493
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.__iter__": {
  "data": {
   "lineno": 547
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.get_batch": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.get_fixlen_iter": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMOrderedIterator.get_varlen_iter": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "int",
    "max",
    "min",
    "numpy.random.normal",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator.__init__": {
  "data": {
   "lineno": 552
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator.__iter__": {
  "data": {
   "lineno": 621
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator.get_sent_stream": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.random.permutation",
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.LMShuffledIterator.stream_iterator": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "StopIteration",
    "len",
    "min",
    "next",
    "range",
    "transformers.tokenization_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.MATCH_NUMBERS": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "transformers.tokenization_transfo_xl.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.PRETRAINED_CORPUS_ARCHIVE_MAP": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "transformers.tokenization_transfo_xl.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "transformers.tokenization_transfo_xl.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus.__init__": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "transformers.tokenization_transfo_xl.TransfoXLTokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus.build_corpus": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "transformers.tokenization_transfo_xl.glob",
    "transformers.tokenization_transfo_xl.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus.from_pretrained": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "EnvironmentError",
    "cached_path",
    "classmethod",
    "cls",
    "transformers.tokenization_transfo_xl.CORPUS_NAME",
    "transformers.tokenization_transfo_xl.PRETRAINED_CORPUS_ARCHIVE_MAP",
    "transformers.tokenization_transfo_xl.TransfoXLTokenizer",
    "transformers.tokenization_transfo_xl.logger",
    "transformers.tokenization_transfo_xl.os",
    "transformers.tokenization_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLCorpus.get_iterator": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "ValueError",
    "transformers.tokenization_transfo_xl.LMMultiFileIterator",
    "transformers.tokenization_transfo_xl.LMOrderedIterator",
    "transformers.tokenization_transfo_xl.LMShuffledIterator"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "transformers.tokenization_transfo_xl.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_transfo_xl.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_transfo_xl.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "ValueError",
    "collections.Counter",
    "int",
    "is_torch_available",
    "open",
    "sacremoses.MosesDetokenizer",
    "sacremoses.MosesPunctNormalizer",
    "sacremoses.MosesTokenizer",
    "str",
    "super",
    "transformers.tokenization_transfo_xl.pickle",
    "transformers.tokenization_transfo_xl.re",
    "transformers.tokenization_transfo_xl.torch",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer._build_from_file": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "open"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer._compile_space_around_punctuation_pattern": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "transformers.tokenization_transfo_xl.re"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer._tokenize": {
  "data": {
   "lineno": 472
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_special": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "len",
    "setattr"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.add_symbol": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.build_vocab": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "len",
    "transformers.tokenization_transfo_xl.logger"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_to_tensor": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "transformers.tokenization_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "transformers.tokenization_transfo_xl.detokenize_numbers"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_file": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "enumerate",
    "open",
    "transformers.tokenization_transfo_xl.logger",
    "transformers.tokenization_transfo_xl.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.count_sents": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "transformers.tokenization_transfo_xl.logger"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.do_lower_case": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_file": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "enumerate",
    "open",
    "transformers.tokenization_transfo_xl.logger",
    "transformers.tokenization_transfo_xl.os",
    "transformers.tokenization_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.encode_sents": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "transformers.tokenization_transfo_xl.logger",
    "transformers.tokenization_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.get_vocab": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_pipeline": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "str",
    "transformers.tokenization_transfo_xl.tokenize_numbers",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_punct_norm": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.moses_tokenize": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.move_added_token": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "int",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.save_vocabulary": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "open",
    "str",
    "transformers.tokenization_transfo_xl.VOCAB_FILES_NAMES",
    "transformers.tokenization_transfo_xl.os",
    "transformers.tokenization_transfo_xl.pickle",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.TransfoXLTokenizer.vocab_size": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "transformers.tokenization_transfo_xl.detokenize_numbers": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "str",
    "transformers.tokenization_transfo_xl.DETOKENIZE_NUMBERS",
    "transformers.tokenization_transfo_xl.re"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.get_lm_corpus": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "open",
    "transformers.tokenization_transfo_xl.TransfoXLCorpus",
    "transformers.tokenization_transfo_xl.logger",
    "transformers.tokenization_transfo_xl.os",
    "transformers.tokenization_transfo_xl.pickle",
    "transformers.tokenization_transfo_xl.torch"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.logger": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.tokenization_transfo_xl.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.sm": {
  "data": {
   "shadows": "sacremoses"
  },
  "type": "import"
 },
 "transformers.tokenization_transfo_xl.tokenize_numbers": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "range",
    "str",
    "transformers.tokenization_transfo_xl.MATCH_NUMBERS",
    "transformers.tokenization_transfo_xl.re",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_transfo_xl.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.tokenization_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_utils.ADDED_TOKENS_FILE": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "transformers.tokenization_utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "add_end_docstrings"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "int",
    "str",
    "super",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.__len__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._add_tokens": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "bool",
    "dict",
    "enumerate",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "set",
    "sorted",
    "str",
    "transformers.tokenization_utils.logger",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._batch_encode_plus": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "BatchEncoding",
    "FutureWarning",
    "NotImplementedError",
    "bool",
    "get_input_ids",
    "int",
    "isinstance",
    "list",
    "str",
    "transformers.tokenization_utils.warnings",
    "tuple",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._batch_encode_plus.get_input_ids": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "str",
    "transformers.tokenization_utils.itertools",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._batch_prepare_for_model": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "BatchEncoding",
    "add_end_docstrings",
    "bool",
    "int",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._convert_token_to_id_with_added_voc": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._decode": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._encode_plus": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "FutureWarning",
    "NotImplementedError",
    "bool",
    "get_input_ids",
    "int",
    "str",
    "transformers.tokenization_utils.warnings",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._encode_plus.get_input_ids": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "str",
    "transformers.tokenization_utils.itertools",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer._tokenize": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.convert_ids_to_tokens": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "bool",
    "int",
    "isinstance",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.convert_tokens_to_ids": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.get_added_vocab": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "bool",
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.is_fast": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.num_special_tokens_to_add": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "bool",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.prepare_for_tokenization": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.prepare_seq2seq_batch": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "BatchEncoding",
    "NotImplementedError",
    "int",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.tokenize": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "FutureWarning",
    "dict",
    "hasattr",
    "isinstance",
    "split_on_tokens",
    "str",
    "transformers.tokenization_utils.logger",
    "transformers.tokenization_utils.re",
    "transformers.tokenization_utils.warnings",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.tokenize.split_on_token": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "transformers.tokenization_utils._is_end_of_word",
    "transformers.tokenization_utils._is_start_of_word"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.tokenize.split_on_tokens": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "list",
    "split_on_token",
    "transformers.tokenization_utils.itertools"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.PreTrainedTokenizer.vocab_size": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.SPECIAL_TOKENS_MAP_FILE": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.tokenization_utils.TOKENIZER_CONFIG_FILE": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.tokenization_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.tokenization_utils._is_control": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "transformers.tokenization_utils.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils._is_end_of_word": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "bool",
    "transformers.tokenization_utils._is_control",
    "transformers.tokenization_utils._is_punctuation",
    "transformers.tokenization_utils._is_whitespace"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils._is_punctuation": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ord",
    "transformers.tokenization_utils.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils._is_start_of_word": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "bool",
    "transformers.tokenization_utils._is_control",
    "transformers.tokenization_utils._is_punctuation",
    "transformers.tokenization_utils._is_whitespace"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils._is_whitespace": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "transformers.tokenization_utils.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "transformers.tokenization_utils.overload": {
  "data": {
   "shadows": "typing.overload"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "transformers.tokenization_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "int",
    "is_flax_available",
    "is_tf_available",
    "is_tokenizers_available",
    "is_torch_available",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_utils_base.ADDED_TOKENS_FILE": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.AddedToken": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "dataclasses.field",
    "str"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_utils_base.AddedToken.__getstate__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.BatchEncoding": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "collections.UserDict"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_utils_base.BatchEncoding.__getattr__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.__getitem__": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "isinstance",
    "str",
    "tokenizers.Encoding",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.__getstate__": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.__init__": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "bool",
    "isinstance",
    "str",
    "super",
    "tokenizers.Encoding",
    "transformers.tokenization_utils_base.TensorType",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Sequence",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.__setstate__": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.char_to_token": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.char_to_word": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.convert_to_tensors": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "as_tensor",
    "bool",
    "is_flax_available",
    "is_tf_available",
    "is_torch_available",
    "isinstance",
    "jax.numpy.array",
    "numpy.asarray",
    "str",
    "tensorflow.constant",
    "transformers.tokenization_utils_base.TensorType",
    "transformers.tokenization_utils_base.torch",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.encodings": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "property",
    "tokenizers.Encoding",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.is_fast": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.items": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.keys": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.to": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.token_to_chars": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "transformers.tokenization_utils_base.CharSpan",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.token_to_word": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.tokens": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.values": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.word_to_chars": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "transformers.tokenization_utils_base.CharSpan",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.word_to_tokens": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "transformers.tokenization_utils_base.TokenSpan",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.BatchEncoding.words": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.CharSpan": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "int",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_utils_base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.ENCODE_KWARGS_DOCSTRING": {
  "data": {
   "lineno": 1145
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.ENCODE_PLUS_ADDITIONAL_KWARGS_DOCSTRING": {
  "data": {
   "lineno": 1197
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.EncodedInput": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.EncodedInputPair": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.EncodingFast": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "dataclasses.dataclass"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_utils_base.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.ExplicitEnum": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_utils_base.ExplicitEnum._missing_": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.FULL_TOKENIZER_FILE": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.INIT_TOKENIZER_DOCSTRING": {
  "data": {
   "lineno": 1250
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.LARGE_INTEGER": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.PREPARE_SEQ2SEQ_BATCH_DOCSTRING": {
  "data": {
   "lineno": 1313
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.PaddingStrategy": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "transformers.tokenization_utils_base.ExplicitEnum"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_utils_base.PreTokenizedInput": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.PreTokenizedInputPair": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase": {
  "data": {
   "lineno": 1375,
   "symbols_in_volume": [
    "add_end_docstrings",
    "int",
    "str",
    "transformers.tokenization_utils_base.INIT_TOKENIZER_DOCSTRING",
    "transformers.tokenization_utils_base.SpecialTokensMixin",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.__call__": {
  "data": {
   "lineno": 2116,
   "symbols_in_volume": [
    "add_end_docstrings",
    "bool",
    "int",
    "isinstance",
    "len",
    "list",
    "str",
    "transformers.tokenization_utils_base.BatchEncoding",
    "transformers.tokenization_utils_base.ENCODE_KWARGS_DOCSTRING",
    "transformers.tokenization_utils_base.ENCODE_PLUS_ADDITIONAL_KWARGS_DOCSTRING",
    "transformers.tokenization_utils_base.PaddingStrategy",
    "transformers.tokenization_utils_base.PreTokenizedInput",
    "transformers.tokenization_utils_base.TensorType",
    "transformers.tokenization_utils_base.TextInput",
    "transformers.tokenization_utils_base.TruncationStrategy",
    "tuple",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.__init__": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "super",
    "transformers.tokenization_utils_base.VERY_LARGE_INTEGER",
    "transformers.tokenization_utils_base.copy"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.__repr__": {
  "data": {
   "lineno": 1469,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase._batch_encode_plus": {
  "data": {
   "lineno": 2402,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "int",
    "str",
    "transformers.tokenization_utils_base.BatchEncoding",
    "transformers.tokenization_utils_base.EncodedInput",
    "transformers.tokenization_utils_base.EncodedInputPair",
    "transformers.tokenization_utils_base.PaddingStrategy",
    "transformers.tokenization_utils_base.PreTokenizedInput",
    "transformers.tokenization_utils_base.PreTokenizedInputPair",
    "transformers.tokenization_utils_base.TensorType",
    "transformers.tokenization_utils_base.TextInput",
    "transformers.tokenization_utils_base.TextInputPair",
    "transformers.tokenization_utils_base.TruncationStrategy",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase._decode": {
  "data": {
   "lineno": 3005,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "int",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase._encode_plus": {
  "data": {
   "lineno": 2308,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "int",
    "str",
    "transformers.tokenization_utils_base.BatchEncoding",
    "transformers.tokenization_utils_base.EncodedInput",
    "transformers.tokenization_utils_base.PaddingStrategy",
    "transformers.tokenization_utils_base.PreTokenizedInput",
    "transformers.tokenization_utils_base.TensorType",
    "transformers.tokenization_utils_base.TextInput",
    "transformers.tokenization_utils_base.TruncationStrategy",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase._from_pretrained": {
  "data": {
   "lineno": 1656,
   "symbols_in_volume": [
    "OSError",
    "bool",
    "classmethod",
    "cls",
    "convert_added_tokens",
    "dict",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "min",
    "open",
    "setattr",
    "sorted",
    "tokenizers.AddedToken",
    "transformers.tokenization_utils_base.copy",
    "transformers.tokenization_utils_base.json",
    "transformers.tokenization_utils_base.logger"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase._from_pretrained.convert_added_tokens": {
  "data": {
   "lineno": 1692,
   "symbols_in_volume": [
    "convert_added_tokens",
    "dict",
    "isinstance",
    "list",
    "tokenizers.AddedToken",
    "tuple",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase._get_padding_truncation_strategies": {
  "data": {
   "lineno": 1988,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "isinstance",
    "transformers.tokenization_utils_base.LARGE_INTEGER",
    "transformers.tokenization_utils_base.PaddingStrategy",
    "transformers.tokenization_utils_base.TruncationStrategy",
    "transformers.tokenization_utils_base.logger",
    "transformers.tokenization_utils_base.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase._pad": {
  "data": {
   "lineno": 2852,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dict",
    "int",
    "len",
    "str",
    "transformers.tokenization_utils_base.BatchEncoding",
    "transformers.tokenization_utils_base.EncodedInput",
    "transformers.tokenization_utils_base.PaddingStrategy",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase._save_pretrained": {
  "data": {
   "lineno": 1857,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "open",
    "str",
    "transformers.tokenization_utils_base.ADDED_TOKENS_FILE",
    "transformers.tokenization_utils_base.json",
    "transformers.tokenization_utils_base.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.batch_decode": {
  "data": {
   "lineno": 2936,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.batch_encode_plus": {
  "data": {
   "lineno": 2331,
   "symbols_in_volume": [
    "add_end_docstrings",
    "bool",
    "int",
    "str",
    "transformers.tokenization_utils_base.BatchEncoding",
    "transformers.tokenization_utils_base.ENCODE_KWARGS_DOCSTRING",
    "transformers.tokenization_utils_base.ENCODE_PLUS_ADDITIONAL_KWARGS_DOCSTRING",
    "transformers.tokenization_utils_base.EncodedInput",
    "transformers.tokenization_utils_base.EncodedInputPair",
    "transformers.tokenization_utils_base.PaddingStrategy",
    "transformers.tokenization_utils_base.PreTokenizedInput",
    "transformers.tokenization_utils_base.PreTokenizedInputPair",
    "transformers.tokenization_utils_base.TensorType",
    "transformers.tokenization_utils_base.TextInput",
    "transformers.tokenization_utils_base.TextInputPair",
    "transformers.tokenization_utils_base.TruncationStrategy",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 2600,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.clean_up_tokenization": {
  "data": {
   "lineno": 3045,
   "symbols_in_volume": [
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.convert_tokens_to_string": {
  "data": {
   "lineno": 2925,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 2580,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.decode": {
  "data": {
   "lineno": 2969,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "transformers.tokenization_utils_base.to_py_obj",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.encode": {
  "data": {
   "lineno": 1933,
   "symbols_in_volume": [
    "add_end_docstrings",
    "bool",
    "int",
    "str",
    "transformers.tokenization_utils_base.ENCODE_KWARGS_DOCSTRING",
    "transformers.tokenization_utils_base.EncodedInput",
    "transformers.tokenization_utils_base.PaddingStrategy",
    "transformers.tokenization_utils_base.PreTokenizedInput",
    "transformers.tokenization_utils_base.TensorType",
    "transformers.tokenization_utils_base.TextInput",
    "transformers.tokenization_utils_base.TruncationStrategy",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.encode_plus": {
  "data": {
   "lineno": 2238,
   "symbols_in_volume": [
    "add_end_docstrings",
    "bool",
    "int",
    "str",
    "transformers.tokenization_utils_base.BatchEncoding",
    "transformers.tokenization_utils_base.ENCODE_KWARGS_DOCSTRING",
    "transformers.tokenization_utils_base.ENCODE_PLUS_ADDITIONAL_KWARGS_DOCSTRING",
    "transformers.tokenization_utils_base.EncodedInput",
    "transformers.tokenization_utils_base.PaddingStrategy",
    "transformers.tokenization_utils_base.PreTokenizedInput",
    "transformers.tokenization_utils_base.TensorType",
    "transformers.tokenization_utils_base.TextInput",
    "transformers.tokenization_utils_base.TruncationStrategy",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.from_pretrained": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "EnvironmentError",
    "ValueError",
    "all",
    "cached_path",
    "classmethod",
    "hf_bucket_url",
    "is_remote_url",
    "len",
    "list",
    "str",
    "transformers.tokenization_utils_base.ADDED_TOKENS_FILE",
    "transformers.tokenization_utils_base.FULL_TOKENIZER_FILE",
    "transformers.tokenization_utils_base.SPECIAL_TOKENS_MAP_FILE",
    "transformers.tokenization_utils_base.TOKENIZER_CONFIG_FILE",
    "transformers.tokenization_utils_base.logger",
    "transformers.tokenization_utils_base.os",
    "transformers.tokenization_utils_base.requests"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.get_special_tokens_mask": {
  "data": {
   "lineno": 3014,
   "symbols_in_volume": [
    "bool",
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.get_vocab": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": [
    "NotImplementedError",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.max_len": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "FutureWarning",
    "int",
    "property",
    "transformers.tokenization_utils_base.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.max_len_sentences_pair": {
  "data": {
   "lineno": 1455,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "transformers.tokenization_utils_base.logger"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.max_len_single_sentence": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "transformers.tokenization_utils_base.logger"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.num_special_tokens_to_add": {
  "data": {
   "lineno": 1985,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.pad": {
  "data": {
   "lineno": 2431,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "bool",
    "dict",
    "int",
    "is_tf_available",
    "is_torch_available",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.ndarray",
    "range",
    "str",
    "tensorflow.Tensor",
    "transformers.tokenization_utils_base.BatchEncoding",
    "transformers.tokenization_utils_base.EncodedInput",
    "transformers.tokenization_utils_base.PaddingStrategy",
    "transformers.tokenization_utils_base.TensorType",
    "transformers.tokenization_utils_base.to_py_obj",
    "transformers.tokenization_utils_base.torch",
    "tuple",
    "type",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.prepare_for_model": {
  "data": {
   "lineno": 2620,
   "symbols_in_volume": [
    "FutureWarning",
    "ValueError",
    "add_end_docstrings",
    "bool",
    "int",
    "len",
    "str",
    "transformers.tokenization_utils_base.BatchEncoding",
    "transformers.tokenization_utils_base.ENCODE_KWARGS_DOCSTRING",
    "transformers.tokenization_utils_base.ENCODE_PLUS_ADDITIONAL_KWARGS_DOCSTRING",
    "transformers.tokenization_utils_base.PaddingStrategy",
    "transformers.tokenization_utils_base.TensorType",
    "transformers.tokenization_utils_base.TruncationStrategy",
    "transformers.tokenization_utils_base.logger",
    "transformers.tokenization_utils_base.warnings",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.save_pretrained": {
  "data": {
   "lineno": 1774,
   "symbols_in_volume": [
    "bool",
    "convert_added_tokens",
    "len",
    "open",
    "str",
    "transformers.tokenization_utils_base.SPECIAL_TOKENS_MAP_FILE",
    "transformers.tokenization_utils_base.TOKENIZER_CONFIG_FILE",
    "transformers.tokenization_utils_base.copy",
    "transformers.tokenization_utils_base.json",
    "transformers.tokenization_utils_base.logger",
    "transformers.tokenization_utils_base.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.save_pretrained.convert_added_tokens": {
  "data": {
   "lineno": 1826,
   "symbols_in_volume": [
    "convert_added_tokens",
    "dict",
    "isinstance",
    "list",
    "tokenizers.AddedToken",
    "tuple",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.save_vocabulary": {
  "data": {
   "lineno": 1888,
   "symbols_in_volume": [
    "NotImplementedError",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.tokenize": {
  "data": {
   "lineno": 1906,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.PreTrainedTokenizerBase.truncate_sequences": {
  "data": {
   "lineno": 2759,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "len",
    "min",
    "range",
    "str",
    "transformers.tokenization_utils_base.TruncationStrategy",
    "transformers.tokenization_utils_base.logger",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SPECIAL_TOKENS_MAP_FILE": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin": {
  "data": {
   "lineno": 649
  },
  "type": "class"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.__init__": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "isinstance",
    "list",
    "setattr",
    "str",
    "tokenizers.AddedToken",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin._add_tokens": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "NotImplementedError",
    "bool",
    "int",
    "str",
    "tokenizers.AddedToken",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.add_special_tokens": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "all",
    "int",
    "isinstance",
    "list",
    "setattr",
    "str",
    "tokenizers.AddedToken",
    "transformers.tokenization_utils_base.logger",
    "tuple",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.add_tokens": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "bool",
    "int",
    "isinstance",
    "list",
    "str",
    "tokenizers.AddedToken",
    "tuple",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.additional_special_tokens": {
  "data": {
   "lineno": 953
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.additional_special_tokens_ids": {
  "data": {
   "lineno": 1072
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.all_special_ids": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": [
    "int",
    "property",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.all_special_tokens": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "property",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.all_special_tokens_extended": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "collections.OrderedDict.fromkeys",
    "isinstance",
    "list",
    "property",
    "str",
    "tokenizers.AddedToken",
    "tuple",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.bos_token": {
  "data": {
   "lineno": 925
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.bos_token_id": {
  "data": {
   "lineno": 1044
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.cls_token": {
  "data": {
   "lineno": 945
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.cls_token_id": {
  "data": {
   "lineno": 1064
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.eos_token": {
  "data": {
   "lineno": 929
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.eos_token_id": {
  "data": {
   "lineno": 1048
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.mask_token": {
  "data": {
   "lineno": 949
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.mask_token_id": {
  "data": {
   "lineno": 1068
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.pad_token": {
  "data": {
   "lineno": 941
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.pad_token_id": {
  "data": {
   "lineno": 1060
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.pad_token_type_id": {
  "data": {
   "lineno": 1007,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.sanitize_special_tokens": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.sep_token": {
  "data": {
   "lineno": 937
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.sep_token_id": {
  "data": {
   "lineno": 1056
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.special_tokens_map": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "getattr",
    "property",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.special_tokens_map_extended": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "getattr",
    "property",
    "str",
    "tokenizers.AddedToken",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.unk_token": {
  "data": {
   "lineno": 933
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.SpecialTokensMixin.unk_token_id": {
  "data": {
   "lineno": 1052
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.TOKENIZER_CONFIG_FILE": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.TensorType": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "transformers.tokenization_utils_base.ExplicitEnum"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_utils_base.TextInput": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.TextInputPair": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.TokenSpan": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "int",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_utils_base.TruncationStrategy": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "transformers.tokenization_utils_base.ExplicitEnum"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_utils_base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.UserDict": {
  "data": {
   "shadows": "collections.UserDict"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.VERY_LARGE_INTEGER": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.jnp": {
  "data": {
   "shadows": "jax.numpy"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.logger": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.to_py_obj": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "is_tf_available",
    "is_torch_available",
    "isinstance",
    "list",
    "numpy.ndarray",
    "tensorflow.Tensor",
    "transformers.tokenization_utils_base.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_base.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_base.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_utils_fast.ADDED_TOKENS_FILE": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_fast.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_fast.DecoderFast": {
  "data": {
   "shadows": "tokenizers.decoders.Decoder"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_fast.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_fast.EncodingFast": {
  "data": {
   "shadows": "tokenizers.Encoding"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_fast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "add_end_docstrings"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "convert_slow_tokenizer",
    "super",
    "tokenizers.Tokenizer.from_file"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.__len__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast._add_tokens": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast._batch_encode_plus": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "BatchEncoding",
    "FutureWarning",
    "TypeError",
    "ValueError",
    "bool",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "str",
    "transformers.tokenization_utils_fast.warnings",
    "type",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast._convert_encoding": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "bool",
    "collections.defaultdict",
    "len",
    "list",
    "str",
    "tokenizers.Encoding",
    "typing.Any",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast._convert_id_to_token": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast._convert_token_to_id_with_added_voc": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast._decode": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "bool",
    "int",
    "isinstance",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast._encode_plus": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "BatchEncoding",
    "FutureWarning",
    "bool",
    "int",
    "isinstance",
    "len",
    "list",
    "transformers.tokenization_utils_fast.warnings",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast._save_pretrained": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "bool",
    "open",
    "str",
    "transformers.tokenization_utils_fast.ADDED_TOKENS_FILE",
    "transformers.tokenization_utils_fast.TOKENIZER_FILE",
    "transformers.tokenization_utils_fast.json",
    "transformers.tokenization_utils_fast.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.backend_tokenizer": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "property",
    "tokenizers.Tokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.convert_ids_to_tokens": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "bool",
    "int",
    "isinstance",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.convert_tokens_to_ids": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.convert_tokens_to_string": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.decoder": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "property",
    "tokenizers.decoders.Decoder"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.get_added_vocab": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "dict",
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.get_vocab": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "int",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.is_fast": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.num_special_tokens_to_add": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.set_truncation_and_padding": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "int",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.tokenize": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.vocab": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "int",
    "property",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.PreTrainedTokenizerFast.vocab_size": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_utils_fast.SPECIAL_TOKENS_MAP_FILE": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_fast.TOKENIZER_CONFIG_FILE": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_fast.TOKENIZER_FILE": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_fast.TokenizerFast": {
  "data": {
   "shadows": "tokenizers.Tokenizer"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_fast.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_fast.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_fast.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_fast.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_fast.logger": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.tokenization_utils_fast.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_utils_fast.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_xlm.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.Mykytea": {
  "data": {
   "shadows": "Mykytea"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm.XLMTokenizer": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "transformers.tokenization_xlm.PRETRAINED_INIT_CONFIGURATION",
    "transformers.tokenization_xlm.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_xlm.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_xlm.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_xlm.XLMTokenizer.__init__": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "dict",
    "len",
    "open",
    "range",
    "set",
    "super",
    "transformers.tokenization_xlm.json",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 853
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 849
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer._tokenize": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "ValueError",
    "pythainlp.tokenize.word_tokenize",
    "transformers.tokenization_xlm.jieba",
    "transformers.tokenization_xlm.logger",
    "transformers.tokenization_xlm.lowercase_and_remove_accent",
    "transformers.tokenization_xlm.romanian_preprocessing",
    "transformers.tokenization_xlm.sys"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.bpe": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "min",
    "transformers.tokenization_xlm.get_pairs",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 857
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.do_lower_case": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.get_vocab": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.ja_tokenize": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "list",
    "transformers.tokenization_xlm.Mykytea",
    "transformers.tokenization_xlm.logger",
    "transformers.tokenization_xlm.os"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.moses_pipeline": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "transformers.tokenization_xlm.remove_non_printing_char",
    "transformers.tokenization_xlm.replace_unicode_punct"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.moses_punct_norm": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "sacremoses.MosesPunctNormalizer"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.moses_tokenize": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "sacremoses.MosesTokenizer"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.save_vocabulary": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "open",
    "sorted",
    "str",
    "transformers.tokenization_xlm.VOCAB_FILES_NAMES",
    "transformers.tokenization_xlm.json",
    "transformers.tokenization_xlm.logger",
    "transformers.tokenization_xlm.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.XLMTokenizer.vocab_size": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.get_pairs": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.jieba": {
  "data": {
   "shadows": "jieba"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm.lowercase_and_remove_accent": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "transformers.tokenization_xlm.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.remove_non_printing_char": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "transformers.tokenization_xlm.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.replace_unicode_punct": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "transformers.tokenization_xlm.re"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.romanian_preprocessing": {
  "data": {
   "lineno": 516
  },
  "type": "function"
 },
 "transformers.tokenization_xlm.sm": {
  "data": {
   "shadows": "sacremoses"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.th_word_tokenize": {
  "data": {
   "shadows": "pythainlp.tokenize.word_tokenize"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_prophetnet": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_xlm_prophetnet.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_prophetnet.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_prophetnet.PRETRAINED_INIT_CONFIGURATION": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_prophetnet.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_prophetnet.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_prophetnet.SPIECE_UNDERLINE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_prophetnet.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_prophetnet.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_prophetnet.XLMProphetNetTokenizer": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "transformers.tokenization_xlm_prophetnet.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_xlm_prophetnet.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_xlm_prophetnet.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_xlm_prophetnet.XLMProphetNetTokenizer.__getstate__": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_prophetnet.XLMProphetNetTokenizer.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ImportError",
    "range",
    "sentencepiece.SentencePieceProcessor",
    "str",
    "super",
    "transformers.tokenization_xlm_prophetnet.logger"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_prophetnet.XLMProphetNetTokenizer.__setstate__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ImportError",
    "sentencepiece.SentencePieceProcessor",
    "transformers.tokenization_xlm_prophetnet.logger"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_prophetnet.XLMProphetNetTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_prophetnet.XLMProphetNetTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_prophetnet.XLMProphetNetTokenizer._tokenize": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_prophetnet.XLMProphetNetTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_prophetnet.XLMProphetNetTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "transformers.tokenization_xlm_prophetnet.SPIECE_UNDERLINE"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_prophetnet.XLMProphetNetTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_prophetnet.XLMProphetNetTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_prophetnet.XLMProphetNetTokenizer.get_vocab": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_prophetnet.XLMProphetNetTokenizer.save_vocabulary": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_xlm_prophetnet.VOCAB_FILES_NAMES",
    "transformers.tokenization_xlm_prophetnet.logger",
    "transformers.tokenization_xlm_prophetnet.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_prophetnet.XLMProphetNetTokenizer.vocab_size": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_prophetnet.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_prophetnet.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_prophetnet.load_vocab": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "enumerate",
    "open",
    "transformers.tokenization_xlm_prophetnet.collections"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_prophetnet.logger": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_prophetnet.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_prophetnet.spm": {
  "data": {
   "shadows": "sentencepiece"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_roberta": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_xlm_roberta.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_roberta.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_roberta.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_roberta.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_roberta.SPIECE_UNDERLINE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_roberta.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_roberta.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "transformers.tokenization_xlm_roberta.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_xlm_roberta.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_xlm_roberta.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.__getstate__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len",
    "sentencepiece.SentencePieceProcessor",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.__setstate__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "sentencepiece.SentencePieceProcessor"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 253
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer._tokenize": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "transformers.tokenization_xlm_roberta.SPIECE_UNDERLINE"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.get_vocab": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.save_vocabulary": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_xlm_roberta.VOCAB_FILES_NAMES",
    "transformers.tokenization_xlm_roberta.logger",
    "transformers.tokenization_xlm_roberta.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.XLMRobertaTokenizer.vocab_size": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_roberta.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_roberta.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_roberta.spm": {
  "data": {
   "shadows": "sentencepiece"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_roberta_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_sentencepiece_available"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_xlm_roberta_fast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_roberta_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_roberta_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_roberta_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_roberta_fast.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_roberta_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_roberta_fast.XLMRobertaTokenizer": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_roberta_fast.XLMRobertaTokenizerFast": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "transformers.tokenization_xlm_roberta_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_xlm_roberta_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_xlm_roberta_fast.VOCAB_FILES_NAMES",
    "transformers.tokenization_xlm_roberta_fast.XLMRobertaTokenizer"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_xlm_roberta_fast.XLMRobertaTokenizerFast.__init__": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta_fast.XLMRobertaTokenizerFast.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta_fast.XLMRobertaTokenizerFast.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta_fast.XLMRobertaTokenizerFast.get_special_tokens_mask": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta_fast.XLMRobertaTokenizerFast.save_vocabulary": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_xlm_roberta_fast.VOCAB_FILES_NAMES",
    "transformers.tokenization_xlm_roberta_fast.logger",
    "transformers.tokenization_xlm_roberta_fast.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlm_roberta_fast.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_xlm_roberta_fast.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.tokenization_xlm_roberta_fast.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_xlnet.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.SEG_ID_A": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.SEG_ID_B": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.SEG_ID_CLS": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.SEG_ID_PAD": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.SEG_ID_SEP": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "transformers.tokenization_xlnet.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_xlnet.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_xlnet.VOCAB_FILES_NAMES"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.__getstate__": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "sentencepiece.SentencePieceProcessor",
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.__setstate__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "sentencepiece.SentencePieceProcessor"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer._convert_id_to_token": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer._convert_token_to_id": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer._tokenize": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.convert_tokens_to_string": {
  "data": {
   "lineno": 220
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.get_special_tokens_mask": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.get_vocab": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.preprocess_text": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "transformers.tokenization_xlnet.unicodedata"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.save_vocabulary": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_xlnet.VOCAB_FILES_NAMES",
    "transformers.tokenization_xlnet.logger",
    "transformers.tokenization_xlnet.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.XLNetTokenizer.vocab_size": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.logger": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.spm": {
  "data": {
   "shadows": "sentencepiece"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet.unicodedata": {
  "data": {
   "shadows": "unicodedata"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet_fast": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_sentencepiece_available"
   ]
  },
  "type": "module"
 },
 "transformers.tokenization_xlnet_fast.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet_fast.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet_fast.PRETRAINED_VOCAB_FILES_MAP": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet_fast.SEG_ID_A": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet_fast.SEG_ID_B": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet_fast.SEG_ID_CLS": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet_fast.SEG_ID_PAD": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet_fast.SEG_ID_SEP": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet_fast.SPIECE_UNDERLINE": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet_fast.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet_fast.VOCAB_FILES_NAMES": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet_fast.XLNetTokenizer": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet_fast.XLNetTokenizerFast": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "transformers.tokenization_xlnet_fast.PRETRAINED_POSITIONAL_EMBEDDINGS_SIZES",
    "transformers.tokenization_xlnet_fast.PRETRAINED_VOCAB_FILES_MAP",
    "transformers.tokenization_xlnet_fast.VOCAB_FILES_NAMES",
    "transformers.tokenization_xlnet_fast.XLNetTokenizer"
   ]
  },
  "type": "class"
 },
 "transformers.tokenization_xlnet_fast.XLNetTokenizerFast.__init__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet_fast.XLNetTokenizerFast.build_inputs_with_special_tokens": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "int",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet_fast.XLNetTokenizerFast.create_token_type_ids_from_sequences": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "int",
    "len",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet_fast.XLNetTokenizerFast.get_special_tokens_mask": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "len",
    "list",
    "map",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet_fast.XLNetTokenizerFast.save_vocabulary": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "shutil.copyfile",
    "str",
    "transformers.tokenization_xlnet_fast.VOCAB_FILES_NAMES",
    "transformers.tokenization_xlnet_fast.logger",
    "transformers.tokenization_xlnet_fast.os",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.tokenization_xlnet_fast.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "transformers.tokenization_xlnet_fast.logger": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "transformers.tokenization_xlnet_fast.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.trainer": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_apex_available",
    "is_azureml_available",
    "is_comet_available",
    "is_datasets_available",
    "is_in_notebook",
    "is_mlflow_available",
    "is_optuna_available",
    "is_ray_available",
    "is_tensorboard_available",
    "is_torch_tpu_available",
    "is_wandb_available",
    "packaging.version.parse",
    "transformers.trainer.DEFAULT_CALLBACKS",
    "transformers.trainer.torch"
   ]
  },
  "type": "module"
 },
 "transformers.trainer.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.trainer.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "transformers.trainer.DEFAULT_CALLBACKS": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "transformers.trainer.DEFAULT_PROGRESS_CALLBACK": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "transformers.trainer.DataLoader": {
  "data": {
   "shadows": "torch.utils.data.dataloader.DataLoader"
  },
  "type": "import"
 },
 "transformers.trainer.Dataset": {
  "data": {
   "shadows": "torch.utils.data.dataset.Dataset"
  },
  "type": "import"
 },
 "transformers.trainer.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.trainer.DistributedSampler": {
  "data": {
   "shadows": "torch.utils.data.distributed.DistributedSampler"
  },
  "type": "import"
 },
 "transformers.trainer.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.trainer.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.trainer.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "transformers.trainer.RandomSampler": {
  "data": {
   "shadows": "torch.utils.data.sampler.RandomSampler"
  },
  "type": "import"
 },
 "transformers.trainer.SequentialSampler": {
  "data": {
   "shadows": "torch.utils.data.sampler.SequentialSampler"
  },
  "type": "import"
 },
 "transformers.trainer.Trainer": {
  "data": {
   "lineno": 166
  },
  "type": "class"
 },
 "transformers.trainer.Trainer.__init__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "CallbackHandler",
    "DataCollatorWithPadding",
    "FutureWarning",
    "RuntimeError",
    "TensorBoardCallback",
    "TrainerControl",
    "TrainerState",
    "TrainingArguments",
    "ValueError",
    "callable",
    "getattr",
    "is_datasets_available",
    "is_torch_tpu_available",
    "isinstance",
    "list",
    "set_seed",
    "torch.utils.data.dataset.Dataset",
    "transformers.trainer.DEFAULT_CALLBACKS",
    "transformers.trainer.DEFAULT_PROGRESS_CALLBACK",
    "transformers.trainer._use_native_amp",
    "transformers.trainer.collections",
    "transformers.trainer.datasets",
    "transformers.trainer.logger",
    "transformers.trainer.os",
    "transformers.trainer.torch",
    "transformers.trainer.warnings",
    "type",
    "typing.Callable",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._actual_model": {
  "data": {
   "lineno": 1562,
   "symbols_in_volume": [
    "isinstance",
    "model",
    "model.module",
    "staticmethod",
    "transformers.trainer.torch",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._gather_and_numpify": {
  "data": {
   "lineno": 1466,
   "symbols_in_volume": [
    "distributed_concat",
    "is_torch_tpu_available",
    "nested_numpify",
    "nested_xla_mesh_reduce"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._get_eval_sampler": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "SequentialDistributedSampler",
    "is_torch_tpu_available",
    "torch.utils.data.dataset.Dataset",
    "torch.utils.data.sampler.SequentialSampler",
    "torch_xla.core.xla_model.get_ordinal",
    "torch_xla.core.xla_model.xrt_world_size",
    "transformers.trainer.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._get_train_sampler": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "get_tpu_sampler",
    "is_torch_tpu_available",
    "isinstance",
    "torch.utils.data.distributed.DistributedSampler",
    "torch.utils.data.sampler.RandomSampler",
    "transformers.trainer.collections",
    "transformers.trainer.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._hp_search_setup": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "hasattr",
    "setattr",
    "str",
    "transformers.trainer.logger",
    "type",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._load_optimizer_and_scheduler": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "is_torch_tpu_available",
    "reissue_pt_warnings",
    "torch_xla.core.xla_model.send_cpu_data_to_device",
    "transformers.trainer.os",
    "transformers.trainer.torch",
    "transformers.trainer.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._maybe_log_save_evaluate": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "float",
    "packaging.version.parse",
    "str",
    "transformers.trainer.torch",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._prepare_inputs": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "transformers.trainer.torch",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._remove_unused_columns": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "list",
    "set",
    "str",
    "transformers.trainer.inspect",
    "transformers.trainer.logger",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._report_to_hp_search": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "float",
    "int",
    "ray.tune.report",
    "str",
    "transformers.trainer.optuna",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._rotate_checkpoints": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "len",
    "max",
    "transformers.trainer.logger",
    "transformers.trainer.shutil"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._save": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "transformers.trainer.logger",
    "transformers.trainer.os",
    "transformers.trainer.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._save_checkpoint": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "hasattr",
    "is_torch_tpu_available",
    "numpy.greater",
    "numpy.less",
    "operator",
    "ray.tune.get_trial_id",
    "reissue_pt_warnings",
    "torch_xla.core.xla_model.rendezvous",
    "torch_xla.core.xla_model.save",
    "transformers.trainer.os",
    "transformers.trainer.torch",
    "transformers.trainer.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._save_tpu": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "torch_xla.core.xla_model.is_master_ordinal",
    "torch_xla.core.xla_model.rendezvous",
    "torch_xla.core.xla_model.save",
    "transformers.trainer.logger",
    "transformers.trainer.os",
    "transformers.trainer.torch",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._sorted_checkpoints": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "int",
    "pathlib.Path",
    "sorted",
    "str",
    "transformers.trainer.os",
    "transformers.trainer.re",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer._tune_save_checkpoint": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "ray.tune.checkpoint_dir",
    "transformers.trainer.os",
    "transformers.trainer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.add_callback": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.call_model_init": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "transformers.trainer.inspect"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.compute_loss": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "model"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.create_optimizer_and_scheduler": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "AdamW",
    "any",
    "get_linear_schedule_with_warmup",
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.evaluate": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "str",
    "torch.utils.data.dataset.Dataset",
    "torch_xla.core.xla_model.master_print",
    "torch_xla.debug.metrics.metrics_report",
    "transformers.trainer.collections",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.floating_point_ops": {
  "data": {
   "lineno": 1540,
   "symbols_in_volume": [
    "hasattr",
    "model",
    "model.floating_point_ops",
    "str",
    "transformers.trainer.torch",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.get_eval_dataloader": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "ValueError",
    "is_datasets_available",
    "isinstance",
    "torch.utils.data.dataloader.DataLoader",
    "torch.utils.data.dataset.Dataset",
    "transformers.trainer.collections",
    "transformers.trainer.datasets",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.get_test_dataloader": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "ValueError",
    "is_datasets_available",
    "isinstance",
    "torch.utils.data.dataloader.DataLoader",
    "torch.utils.data.dataset.Dataset",
    "transformers.trainer.collections",
    "transformers.trainer.datasets"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.get_train_dataloader": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "ValueError",
    "torch.utils.data.dataloader.DataLoader"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.hyperparameter_search": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "HPSearchBackend",
    "HPSearchBackend.OPTUNA",
    "HPSearchBackend.RAY",
    "RuntimeError",
    "default_hp_search_backend",
    "float",
    "int",
    "is_optuna_available",
    "is_ray_available",
    "run_hp_search",
    "str",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.is_local_master": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "FutureWarning",
    "bool",
    "transformers.trainer.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.is_local_process_zero": {
  "data": {
   "lineno": 1155,
   "symbols_in_volume": [
    "bool",
    "is_torch_tpu_available",
    "torch_xla.core.xla_model.is_master_ordinal"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.is_world_master": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "FutureWarning",
    "bool",
    "transformers.trainer.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.is_world_process_zero": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "bool",
    "is_torch_tpu_available",
    "torch_xla.core.xla_model.is_master_ordinal",
    "transformers.trainer.torch"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.log": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "FutureWarning",
    "float",
    "hasattr",
    "str",
    "transformers.trainer.warnings",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.num_examples": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "int",
    "len",
    "torch.utils.data.dataloader.DataLoader"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.pop_callback": {
  "data": {
   "lineno": 349
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.predict": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "torch.utils.data.dataset.Dataset",
    "transformers.trainer.collections"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.prediction_loop": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "DistributedTensorGatherer",
    "EvalPrediction",
    "FutureWarning",
    "PredictionOutput",
    "ValueError",
    "bool",
    "delattr",
    "enumerate",
    "hasattr",
    "is_torch_tpu_available",
    "isinstance",
    "list",
    "max",
    "model",
    "model.eval",
    "nested_concat",
    "str",
    "torch.utils.data.dataloader.DataLoader",
    "torch_xla.core.xla_model.xrt_world_size",
    "torch_xla.distributed.parallel_loader.ParallelLoader",
    "transformers.trainer.collections",
    "transformers.trainer.logger",
    "transformers.trainer.torch",
    "transformers.trainer.warnings",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.prediction_step": {
  "data": {
   "lineno": 1480,
   "symbols_in_volume": [
    "all",
    "bool",
    "float",
    "len",
    "model",
    "nested_detach",
    "str",
    "torch.cuda.amp.autocast",
    "torch.nn.Module",
    "transformers.trainer._use_native_amp",
    "transformers.trainer.torch",
    "tuple",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.remove_callback": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.save_model": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "is_torch_tpu_available",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.store_flos": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "distributed_broadcast_scalars"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.train": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "ImportError",
    "TrainOutput",
    "TrainerState",
    "TrainerState.load_from_json",
    "apex.amp.initialize",
    "apex.amp.master_params",
    "delattr",
    "enumerate",
    "getattr",
    "hasattr",
    "hp_params",
    "int",
    "is_apex_available",
    "is_torch_tpu_available",
    "isinstance",
    "len",
    "max",
    "range",
    "set_seed",
    "str",
    "torch.utils.data.dataloader.DataLoader",
    "torch.utils.data.distributed.DistributedSampler",
    "torch_xla.core.xla_model.master_print",
    "torch_xla.core.xla_model.optimizer_step",
    "torch_xla.core.xla_model.xrt_world_size",
    "torch_xla.debug.metrics.metrics_report",
    "torch_xla.distributed.parallel_loader.ParallelLoader",
    "transformers.trainer._use_apex",
    "transformers.trainer._use_ddp_no_sync",
    "transformers.trainer._use_native_amp",
    "transformers.trainer.collections",
    "transformers.trainer.logger",
    "transformers.trainer.math",
    "transformers.trainer.os",
    "transformers.trainer.torch",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Trainer.training_step": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "FutureWarning",
    "apex.amp.scale_loss",
    "hasattr",
    "str",
    "torch.cuda.amp.autocast",
    "torch.nn.Module",
    "transformers.trainer._use_apex",
    "transformers.trainer._use_native_amp",
    "transformers.trainer.torch",
    "transformers.trainer.warnings",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.trainer.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.trainer.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.trainer._use_apex": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "transformers.trainer._use_ddp_no_sync": {
  "data": {
   "lineno": 121
  },
  "type": "constant"
 },
 "transformers.trainer._use_native_amp": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "transformers.trainer.amp": {
  "data": {
   "shadows": "apex.amp"
  },
  "type": "import"
 },
 "transformers.trainer.autocast": {
  "data": {
   "shadows": "torch.cuda.amp.autocast"
  },
  "type": "import"
 },
 "transformers.trainer.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "transformers.trainer.datasets": {
  "data": {
   "shadows": "datasets"
  },
  "type": "import"
 },
 "transformers.trainer.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "transformers.trainer.logger": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "transformers.trainer.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.trainer.met": {
  "data": {
   "shadows": "torch_xla.debug.metrics"
  },
  "type": "import"
 },
 "transformers.trainer.nn": {
  "data": {
   "shadows": "torch.nn"
  },
  "type": "import"
 },
 "transformers.trainer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.trainer.optuna": {
  "data": {
   "shadows": "optuna"
  },
  "type": "import"
 },
 "transformers.trainer.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.trainer.pl": {
  "data": {
   "shadows": "torch_xla.distributed.parallel_loader"
  },
  "type": "import"
 },
 "transformers.trainer.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.trainer.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "transformers.trainer.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.trainer.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "transformers.trainer.version": {
  "data": {
   "shadows": "packaging.version"
  },
  "type": "import"
 },
 "transformers.trainer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.trainer.xm": {
  "data": {
   "shadows": "torch_xla.core.xla_model"
  },
  "type": "import"
 },
 "transformers.trainer_callback": {
  "data": {
   "symbols_in_volume": [
    "__name__"
   ]
  },
  "type": "module"
 },
 "transformers.trainer_callback.CallbackHandler": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerCallback"
   ]
  },
  "type": "class"
 },
 "transformers.trainer_callback.CallbackHandler.__init__": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "transformers.trainer_callback.logger"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.add_callback": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "callback",
    "callback.__class__",
    "isinstance",
    "transformers.trainer_callback.logger",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.call_event": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "callback",
    "getattr"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.callback_list": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.on_epoch_begin": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.on_epoch_end": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.on_evaluate": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.on_init_end": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.on_log": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.on_prediction_step": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.on_save": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.on_step_begin": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.on_step_end": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.on_train_begin": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.on_train_end": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.pop_callback": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "callback",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.CallbackHandler.remove_callback": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "callback",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.DefaultFlowCallback": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerCallback"
   ]
  },
  "type": "class"
 },
 "transformers.trainer_callback.DefaultFlowCallback.on_epoch_end": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.DefaultFlowCallback.on_step_end": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.trainer_callback.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.trainer_callback.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.trainer_callback.PrinterCallback": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerCallback"
   ]
  },
  "type": "class"
 },
 "transformers.trainer_callback.PrinterCallback.on_log": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.ProgressCallback": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerCallback"
   ]
  },
  "type": "class"
 },
 "transformers.trainer_callback.ProgressCallback.__init__": {
  "data": {
   "lineno": 432
  },
  "type": "function"
 },
 "transformers.trainer_callback.ProgressCallback.on_evaluate": {
  "data": {
   "lineno": 452
  },
  "type": "function"
 },
 "transformers.trainer_callback.ProgressCallback.on_log": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.ProgressCallback.on_prediction_step": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "len",
    "tqdm.auto.tqdm"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.ProgressCallback.on_step_end": {
  "data": {
   "lineno": 441
  },
  "type": "function"
 },
 "transformers.trainer_callback.ProgressCallback.on_train_begin": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "tqdm.auto.tqdm"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.ProgressCallback.on_train_end": {
  "data": {
   "lineno": 463
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerCallback": {
  "data": {
   "lineno": 156
  },
  "type": "class"
 },
 "transformers.trainer_callback.TrainerCallback.on_epoch_begin": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerCallback.on_epoch_end": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerCallback.on_evaluate": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerCallback.on_init_end": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerCallback.on_log": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerCallback.on_prediction_step": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerCallback.on_save": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerCallback.on_step_begin": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerCallback.on_step_end": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerCallback.on_train_begin": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerCallback.on_train_end": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "transformers.trainer_callback.TrainerControl",
    "transformers.trainer_callback.TrainerState"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerControl": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass"
   ]
  },
  "type": "class"
 },
 "transformers.trainer_callback.TrainerControl._new_epoch": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerControl._new_step": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerControl._new_training": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerState": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "float",
    "int",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "transformers.trainer_callback.TrainerState.__post_init__": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerState.load_from_json": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "open",
    "str",
    "transformers.trainer_callback.json"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.TrainerState.save_to_json": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "open",
    "str",
    "transformers.trainer_callback.dataclasses",
    "transformers.trainer_callback.json"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_callback.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.trainer_callback.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.trainer_callback.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "transformers.trainer_callback.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.trainer_callback.logger": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.trainer_callback.tqdm": {
  "data": {
   "shadows": "tqdm.auto.tqdm"
  },
  "type": "import"
 },
 "transformers.trainer_pt_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_torch_tpu_available",
    "packaging.version.parse",
    "transformers.trainer_pt_utils.torch"
   ]
  },
  "type": "module"
 },
 "transformers.trainer_pt_utils.DistributedSampler": {
  "data": {
   "shadows": "torch.utils.data.distributed.DistributedSampler"
  },
  "type": "import"
 },
 "transformers.trainer_pt_utils.DistributedTensorGatherer": {
  "data": {
   "lineno": 257
  },
  "type": "class"
 },
 "transformers.trainer_pt_utils.DistributedTensorGatherer.__init__": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "int",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.DistributedTensorGatherer._nested_set_tensors": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.DistributedTensorGatherer.add_arrays": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "transformers.trainer_pt_utils._get_first_shape",
    "transformers.trainer_pt_utils.nested_expand_like",
    "transformers.trainer_pt_utils.nested_new_like"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.DistributedTensorGatherer.finalize": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "transformers.trainer_pt_utils.logger",
    "transformers.trainer_pt_utils.nested_truncate"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.trainer_pt_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.trainer_pt_utils.RandomSampler": {
  "data": {
   "shadows": "torch.utils.data.sampler.RandomSampler"
  },
  "type": "import"
 },
 "transformers.trainer_pt_utils.SAVE_STATE_WARNING": {
  "data": {
   "shadows": "torch.optim.lr_scheduler.SAVE_STATE_WARNING"
  },
  "type": "import"
 },
 "transformers.trainer_pt_utils.Sampler": {
  "data": {
   "shadows": "torch.utils.data.sampler.Sampler"
  },
  "type": "import"
 },
 "transformers.trainer_pt_utils.SequentialDistributedSampler": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "torch.utils.data.sampler.Sampler"
   ]
  },
  "type": "class"
 },
 "transformers.trainer_pt_utils.SequentialDistributedSampler.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "len",
    "transformers.trainer_pt_utils.math",
    "transformers.trainer_pt_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.SequentialDistributedSampler.__iter__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "iter",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.SequentialDistributedSampler.__len__": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.trainer_pt_utils._get_first_shape": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "transformers.trainer_pt_utils.distributed_broadcast_scalars": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "AssertionError",
    "float",
    "int",
    "range",
    "transformers.trainer_pt_utils.torch",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.distributed_concat": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "AssertionError",
    "int",
    "isinstance",
    "list",
    "range",
    "transformers.trainer_pt_utils.torch",
    "tuple",
    "type",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.get_tpu_sampler": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "torch.utils.data.distributed.DistributedSampler",
    "torch.utils.data.sampler.RandomSampler",
    "torch_xla.core.xla_model.get_ordinal",
    "torch_xla.core.xla_model.xrt_world_size",
    "transformers.trainer_pt_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.logger": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.trainer_pt_utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.trainer_pt_utils.nested_concat": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "numpy.ndarray",
    "transformers.trainer_pt_utils.numpy_pad_and_concatenate",
    "transformers.trainer_pt_utils.torch",
    "transformers.trainer_pt_utils.torch_pad_and_concatenate",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.nested_detach": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.nested_expand_like": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.full_like",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.nested_new_like": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.full_like",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.nested_numpify": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.nested_truncate": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.nested_xla_mesh_reduce": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ImportError",
    "enumerate",
    "is_torch_tpu_available",
    "isinstance",
    "list",
    "torch_xla.core.xla_model.mesh_reduce",
    "transformers.trainer_pt_utils.torch",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.trainer_pt_utils.numpy_pad_and_concatenate": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.concatenate",
    "numpy.full_like"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.reissue_pt_warnings": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "UserWarning",
    "len",
    "torch.optim.lr_scheduler.SAVE_STATE_WARNING",
    "transformers.trainer_pt_utils.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.trainer_pt_utils.torch_distributed_zero_first": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "int",
    "transformers.trainer_pt_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.torch_pad_and_concatenate": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len",
    "max",
    "transformers.trainer_pt_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_pt_utils.version": {
  "data": {
   "shadows": "packaging.version"
  },
  "type": "import"
 },
 "transformers.trainer_pt_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.trainer_pt_utils.xm": {
  "data": {
   "shadows": "torch_xla.core.xla_model"
  },
  "type": "import"
 },
 "transformers.trainer_tf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_comet_available",
    "is_wandb_available"
   ]
  },
  "type": "module"
 },
 "transformers.trainer_tf.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "transformers.trainer_tf.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.trainer_tf.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.trainer_tf.PerReplica": {
  "data": {
   "shadows": "tensorflow.python.distribute.values.PerReplica"
  },
  "type": "import"
 },
 "transformers.trainer_tf.TFTrainer": {
  "data": {
   "lineno": 37
  },
  "type": "class"
 },
 "transformers.trainer_tf.TFTrainer.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "FutureWarning",
    "GradientAccumulator",
    "is_comet_available",
    "is_wandb_available",
    "list",
    "packaging.version.parse",
    "set_seed",
    "tensorflow.__version__",
    "tensorflow.data.Dataset",
    "tensorflow.keras.optimizers.Optimizer",
    "tensorflow.keras.optimizers.schedules.LearningRateSchedule",
    "tensorflow.summary.SummaryWriter",
    "tensorflow.summary.create_file_writer",
    "transformers.trainer_tf.logger",
    "transformers.trainer_tf.os",
    "transformers.trainer_tf.warnings",
    "typing.Callable",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer._compute_nb_instances": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "isinstance",
    "staticmethod",
    "tensorflow.cast",
    "tensorflow.concat",
    "tensorflow.int32",
    "tensorflow.python.distribute.values.PerReplica",
    "tensorflow.reduce_sum"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer._get_step_inputs": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "staticmethod",
    "tensorflow.python.distribute.values.PerReplica"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.apply_gradients": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "list",
    "tensorflow.clip_by_value",
    "tensorflow.concat",
    "tensorflow.range",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.create_optimizer_and_scheduler": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "create_optimizer",
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.distributed_prediction_steps": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "tensorflow.function"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.distributed_training_steps": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "tensorflow.function"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.evaluate": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "float",
    "str",
    "tensorflow.data.Dataset",
    "typing.Dict",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.get_eval_tfdataset": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "approx",
    "tensorflow.data.Dataset",
    "tensorflow.data.experimental.AUTOTUNE",
    "tensorflow.data.experimental.cardinality",
    "transformers.trainer_tf.math",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.get_test_tfdataset": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "approx",
    "tensorflow.data.Dataset",
    "tensorflow.data.experimental.AUTOTUNE",
    "tensorflow.data.experimental.cardinality",
    "transformers.trainer_tf.math"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.get_train_tfdataset": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "tensorflow.data.Dataset",
    "tensorflow.data.experimental.AUTOTUNE",
    "tensorflow.data.experimental.cardinality"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.log": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "FutureWarning",
    "float",
    "hasattr",
    "is_comet_available",
    "is_wandb_available",
    "str",
    "tensorflow.summary.scalar",
    "transformers.trainer_tf.comet_ml",
    "transformers.trainer_tf.logger",
    "transformers.trainer_tf.wandb",
    "transformers.trainer_tf.warnings",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.predict": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "PredictionOutput",
    "tensorflow.data.Dataset"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.prediction_loop": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "EvalPrediction",
    "FutureWarning",
    "PredictionOutput",
    "bool",
    "delattr",
    "enumerate",
    "hasattr",
    "int",
    "isinstance",
    "list",
    "numpy.append",
    "numpy.ndarray",
    "str",
    "tensorflow.data.Dataset",
    "tensorflow.keras.metrics.Sum",
    "transformers.trainer_tf.logger",
    "transformers.trainer_tf.warnings",
    "tuple",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.prediction_step": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "tensorflow.Tensor",
    "tensorflow.cast"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.run_model": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "FutureWarning",
    "dict",
    "getattr",
    "hasattr",
    "isinstance",
    "transformers.trainer_tf.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.save_model": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "str",
    "transformers.trainer_tf.logger",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.setup_comet": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "transformers.trainer_tf.comet_ml",
    "transformers.trainer_tf.logger",
    "transformers.trainer_tf.os"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.setup_wandb": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "FutureWarning",
    "hasattr",
    "transformers.trainer_tf.logger",
    "transformers.trainer_tf.os",
    "transformers.trainer_tf.wandb",
    "transformers.trainer_tf.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.train": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "approx",
    "delattr",
    "enumerate",
    "float",
    "hasattr",
    "int",
    "max",
    "range",
    "str",
    "tensorflow.keras.metrics.Sum",
    "tensorflow.summary.experimental.set_step",
    "tensorflow.summary.text",
    "tensorflow.summary.trace_export",
    "tensorflow.summary.trace_on",
    "tensorflow.train.Checkpoint",
    "tensorflow.train.CheckpointManager",
    "transformers.trainer_tf.datetime",
    "transformers.trainer_tf.logger",
    "transformers.trainer_tf.math",
    "transformers.trainer_tf.os"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.TFTrainer.training_step": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "tensorflow.cast",
    "tensorflow.gradients",
    "tensorflow.zeros_like",
    "zip"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_tf.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.trainer_tf.comet_ml": {
  "data": {
   "shadows": "comet_ml"
  },
  "type": "import"
 },
 "transformers.trainer_tf.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "transformers.trainer_tf.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.trainer_tf.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "transformers.trainer_tf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.trainer_tf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.trainer_tf.parse": {
  "data": {
   "shadows": "packaging.version.parse"
  },
  "type": "import"
 },
 "transformers.trainer_tf.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.trainer_tf.wandb": {
  "data": {
   "shadows": "wandb"
  },
  "type": "import"
 },
 "transformers.trainer_tf.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.trainer_utils": {
  "data": {
   "symbols_in_volume": [
    "transformers.trainer_utils.HPSearchBackend",
    "transformers.trainer_utils.default_hp_space_optuna",
    "transformers.trainer_utils.default_hp_space_ray"
   ]
  },
  "type": "module"
 },
 "transformers.trainer_utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.trainer_utils.BestRun": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "float",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "transformers.trainer_utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.trainer_utils.EvalPrediction": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.ndarray",
    "typing.NamedTuple",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "transformers.trainer_utils.EvaluationStrategy": {
  "data": {
   "lineno": 78
  },
  "type": "class"
 },
 "transformers.trainer_utils.HPSearchBackend": {
  "data": {
   "lineno": 146
  },
  "type": "class"
 },
 "transformers.trainer_utils.NamedTuple": {
  "data": {
   "shadows": "typing.NamedTuple"
  },
  "type": "import"
 },
 "transformers.trainer_utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.trainer_utils.PREFIX_CHECKPOINT_DIR": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "transformers.trainer_utils.PredictionOutput": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "float",
    "numpy.ndarray",
    "str",
    "typing.Dict",
    "typing.NamedTuple",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "transformers.trainer_utils.TrainOutput": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "float",
    "int",
    "typing.NamedTuple"
   ]
  },
  "type": "class"
 },
 "transformers.trainer_utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.trainer_utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "transformers.trainer_utils.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.trainer_utils.default_compute_objective": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "float",
    "len",
    "str",
    "sum",
    "transformers.trainer_utils.copy",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_utils.default_hp_space": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "transformers.trainer_utils.default_hp_space_optuna": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "float",
    "is_optuna_available",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_utils.default_hp_space_ray": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "float",
    "is_ray_available",
    "list",
    "range",
    "ray.tune.choice",
    "ray.tune.loguniform",
    "ray.tune.uniform",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_utils.is_main_process": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "is_torch_tpu_available",
    "torch_xla.core.xla_model.get_ordinal"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "transformers.trainer_utils.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "transformers.trainer_utils.set_seed": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "int",
    "is_tf_available",
    "is_torch_available",
    "numpy.random.seed",
    "tensorflow.random.set_seed",
    "transformers.trainer_utils.random",
    "transformers.trainer_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_utils.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.trainer_utils.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.trainer_utils.total_processes_number": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "is_torch_available",
    "is_torch_tpu_available",
    "torch_xla.core.xla_model.xrt_world_size",
    "transformers.trainer_utils.torch"
   ]
  },
  "type": "function"
 },
 "transformers.trainer_utils.tune": {
  "data": {
   "shadows": "ray.tune"
  },
  "type": "import"
 },
 "transformers.trainer_utils.xm": {
  "data": {
   "shadows": "torch_xla.core.xla_model"
  },
  "type": "import"
 },
 "transformers.training_args": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_torch_available",
    "is_torch_tpu_available"
   ]
  },
  "type": "module"
 },
 "transformers.training_args.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "transformers.training_args.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "transformers.training_args.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "transformers.training_args.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "transformers.training_args.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.training_args.TrainingArguments": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "dataclasses.field",
    "float",
    "int",
    "str",
    "transformers.training_args.default_logdir",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "transformers.training_args.TrainingArguments.__post_init__": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "EvaluationStrategy",
    "EvaluationStrategy.NO",
    "FutureWarning",
    "ValueError",
    "is_torch_available",
    "transformers.training_args.logger",
    "transformers.training_args.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.training_args.TrainingArguments._setup_devices": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "int",
    "is_torch_tpu_available",
    "torch_xla.core.xla_model.xla_device",
    "transformers.training_args.logger",
    "transformers.training_args.torch",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.training_args.TrainingArguments.device": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.training_args.TrainingArguments.eval_batch_size": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "int",
    "max",
    "property",
    "transformers.training_args.logger"
   ]
  },
  "type": "function"
 },
 "transformers.training_args.TrainingArguments.n_gpu": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.training_args.TrainingArguments.to_dict": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "enum.Enum",
    "isinstance",
    "transformers.training_args.dataclasses"
   ]
  },
  "type": "function"
 },
 "transformers.training_args.TrainingArguments.to_json_string": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "transformers.training_args.json"
   ]
  },
  "type": "function"
 },
 "transformers.training_args.TrainingArguments.to_sanitized_dict": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "is_torch_available",
    "str",
    "transformers.training_args.torch",
    "type",
    "typing.Any",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "transformers.training_args.TrainingArguments.train_batch_size": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "int",
    "max",
    "property",
    "transformers.training_args.logger"
   ]
  },
  "type": "function"
 },
 "transformers.training_args.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.training_args.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.training_args.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "transformers.training_args.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "transformers.training_args.default_logdir": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "datetime.datetime.now",
    "str",
    "transformers.training_args.os",
    "transformers.training_args.socket"
   ]
  },
  "type": "function"
 },
 "transformers.training_args.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "transformers.training_args.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "transformers.training_args.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.training_args.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.training_args.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "transformers.training_args.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "transformers.training_args.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.training_args.xm": {
  "data": {
   "shadows": "torch_xla.core.xla_model"
  },
  "type": "import"
 },
 "transformers.training_args_tf": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "is_tf_available"
   ]
  },
  "type": "module"
 },
 "transformers.training_args_tf.TFTrainingArguments": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "bool",
    "dataclasses.dataclass",
    "dataclasses.field",
    "float",
    "str"
   ]
  },
  "type": "class"
 },
 "transformers.training_args_tf.TFTrainingArguments._setup_strategy": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "tensorflow.config.experimental_connect_to_cluster",
    "tensorflow.config.list_physical_devices",
    "tensorflow.config.optimizer.set_jit",
    "tensorflow.distribute.MirroredStrategy",
    "tensorflow.distribute.OneDeviceStrategy",
    "tensorflow.distribute.cluster_resolver.TPUClusterResolver",
    "tensorflow.distribute.experimental.TPUStrategy",
    "tensorflow.keras.mixed_precision.experimental.Policy",
    "tensorflow.keras.mixed_precision.experimental.set_policy",
    "tensorflow.tpu.experimental.initialize_tpu_system",
    "transformers.training_args_tf.logger",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "transformers.training_args_tf.TFTrainingArguments.eval_batch_size": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "int",
    "property",
    "transformers.training_args_tf.logger"
   ]
  },
  "type": "function"
 },
 "transformers.training_args_tf.TFTrainingArguments.n_gpu": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "FutureWarning",
    "int",
    "property",
    "transformers.training_args_tf.warnings"
   ]
  },
  "type": "function"
 },
 "transformers.training_args_tf.TFTrainingArguments.n_replicas": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.training_args_tf.TFTrainingArguments.strategy": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "transformers.training_args_tf.TFTrainingArguments.train_batch_size": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "int",
    "property",
    "transformers.training_args_tf.logger"
   ]
  },
  "type": "function"
 },
 "transformers.training_args_tf.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "transformers.training_args_tf.dataclass": {
  "data": {
   "shadows": "dataclasses.dataclass"
  },
  "type": "import"
 },
 "transformers.training_args_tf.field": {
  "data": {
   "shadows": "dataclasses.field"
  },
  "type": "import"
 },
 "transformers.training_args_tf.logger": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "transformers.training_args_tf.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "transformers.training_args_tf.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "transformers.utils": {
  "data": {},
  "type": "module"
 },
 "transformers.utils.dummy_flax_objects": {
  "data": {},
  "type": "module"
 },
 "transformers.utils.dummy_flax_objects.FlaxBertModel": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "transformers.utils.dummy_flax_objects.FlaxBertModel.__init__": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "requires_flax"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_flax_objects.FlaxBertModel.from_pretrained": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "classmethod",
    "requires_flax"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_flax_objects.FlaxRobertaModel": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "transformers.utils.dummy_flax_objects.FlaxRobertaModel.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "requires_flax"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_flax_objects.FlaxRobertaModel.from_pretrained": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "classmethod",
    "requires_flax"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects": {
  "data": {},
  "type": "module"
 },
 "transformers.utils.dummy_pt_objects.ALBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.Adafactor": {
  "data": {
   "lineno": 2017
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.Adafactor.__init__": {
  "data": {
   "lineno": 2018,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AdamW": {
  "data": {
   "lineno": 2022
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AdamW.__init__": {
  "data": {
   "lineno": 2023,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AdaptiveEmbedding": {
  "data": {
   "lineno": 1707
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AdaptiveEmbedding.__init__": {
  "data": {
   "lineno": 1708,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertForMaskedLM": {
  "data": {
   "lineno": 178
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AlbertForMaskedLM.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertForMultipleChoice": {
  "data": {
   "lineno": 187
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AlbertForMultipleChoice.__init__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertForPreTraining": {
  "data": {
   "lineno": 196
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AlbertForPreTraining.__init__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertForQuestionAnswering": {
  "data": {
   "lineno": 201
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AlbertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertForSequenceClassification": {
  "data": {
   "lineno": 210
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AlbertForSequenceClassification.__init__": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertForTokenClassification": {
  "data": {
   "lineno": 219
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AlbertForTokenClassification.__init__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertModel": {
  "data": {
   "lineno": 228
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AlbertModel.__init__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertModel.from_pretrained": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertPreTrainedModel": {
  "data": {
   "lineno": 237
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AlbertPreTrainedModel.__init__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AlbertPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModel": {
  "data": {
   "lineno": 283
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AutoModel.__init__": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModel.from_pretrained": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForCausalLM": {
  "data": {
   "lineno": 292
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForCausalLM.__init__": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForCausalLM.from_pretrained": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForMaskedLM": {
  "data": {
   "lineno": 301
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForMaskedLM.__init__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForMultipleChoice": {
  "data": {
   "lineno": 310
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForMultipleChoice.__init__": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForNextSentencePrediction": {
  "data": {
   "lineno": 319
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForNextSentencePrediction.__init__": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForNextSentencePrediction.from_pretrained": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForPreTraining": {
  "data": {
   "lineno": 328
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForPreTraining.__init__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForPreTraining.from_pretrained": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForQuestionAnswering": {
  "data": {
   "lineno": 337
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForQuestionAnswering.__init__": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForSeq2SeqLM": {
  "data": {
   "lineno": 346
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForSeq2SeqLM.__init__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForSeq2SeqLM.from_pretrained": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForSequenceClassification": {
  "data": {
   "lineno": 355
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForSequenceClassification.__init__": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForTokenClassification": {
  "data": {
   "lineno": 364
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForTokenClassification.__init__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelWithLMHead": {
  "data": {
   "lineno": 373
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.AutoModelWithLMHead.__init__": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.AutoModelWithLMHead.from_pretrained": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BART_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 382
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.BERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 430
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.BLENDERBOT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 538
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.BartForConditionalGeneration": {
  "data": {
   "lineno": 385
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BartForConditionalGeneration.__init__": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BartForConditionalGeneration.from_pretrained": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BartForQuestionAnswering": {
  "data": {
   "lineno": 394
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BartForQuestionAnswering.__init__": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BartForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BartForSequenceClassification": {
  "data": {
   "lineno": 403
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BartForSequenceClassification.__init__": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BartForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BartModel": {
  "data": {
   "lineno": 412
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BartModel.__init__": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BartModel.from_pretrained": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BeamScorer": {
  "data": {
   "lineno": 111
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BeamScorer.__init__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BeamSearchScorer": {
  "data": {
   "lineno": 116
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BeamSearchScorer.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertForMaskedLM": {
  "data": {
   "lineno": 433
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BertForMaskedLM.__init__": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertForMultipleChoice": {
  "data": {
   "lineno": 442
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BertForMultipleChoice.__init__": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertForNextSentencePrediction": {
  "data": {
   "lineno": 451
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BertForNextSentencePrediction.__init__": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertForPreTraining": {
  "data": {
   "lineno": 456
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BertForPreTraining.__init__": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertForQuestionAnswering": {
  "data": {
   "lineno": 461
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertForSequenceClassification": {
  "data": {
   "lineno": 470
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BertForSequenceClassification.__init__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertForTokenClassification": {
  "data": {
   "lineno": 479
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BertForTokenClassification.__init__": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertGenerationDecoder": {
  "data": {
   "lineno": 524
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BertGenerationDecoder.__init__": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertGenerationEncoder": {
  "data": {
   "lineno": 529
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BertGenerationEncoder.__init__": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertLMHeadModel": {
  "data": {
   "lineno": 493
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BertLMHeadModel.__init__": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertLMHeadModel.from_pretrained": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertLayer": {
  "data": {
   "lineno": 488
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BertLayer.__init__": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertModel": {
  "data": {
   "lineno": 502
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BertModel.__init__": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertModel.from_pretrained": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertPreTrainedModel": {
  "data": {
   "lineno": 511
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BertPreTrainedModel.__init__": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BertPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BlenderbotForConditionalGeneration": {
  "data": {
   "lineno": 541
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.BlenderbotForConditionalGeneration.__init__": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.BlenderbotForConditionalGeneration.from_pretrained": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CAMEMBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 550
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.CTRLLMHeadModel": {
  "data": {
   "lineno": 615
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.CTRLLMHeadModel.__init__": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CTRLLMHeadModel.from_pretrained": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CTRLModel": {
  "data": {
   "lineno": 624
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.CTRLModel.__init__": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CTRLModel.from_pretrained": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CTRLPreTrainedModel": {
  "data": {
   "lineno": 633
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.CTRLPreTrainedModel.__init__": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CTRLPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CTRL_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 612
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.CamembertForCausalLM": {
  "data": {
   "lineno": 553
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.CamembertForCausalLM.__init__": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CamembertForMaskedLM": {
  "data": {
   "lineno": 558
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.CamembertForMaskedLM.__init__": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CamembertForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CamembertForMultipleChoice": {
  "data": {
   "lineno": 567
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.CamembertForMultipleChoice.__init__": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CamembertForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CamembertForQuestionAnswering": {
  "data": {
   "lineno": 576
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.CamembertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CamembertForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CamembertForSequenceClassification": {
  "data": {
   "lineno": 585
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.CamembertForSequenceClassification.__init__": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CamembertForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CamembertForTokenClassification": {
  "data": {
   "lineno": 594
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.CamembertForTokenClassification.__init__": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CamembertForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CamembertModel": {
  "data": {
   "lineno": 603
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.CamembertModel.__init__": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.CamembertModel.from_pretrained": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.Conv1D": {
  "data": {
   "lineno": 1743
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.Conv1D.__init__": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DEBERTA_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 642
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.DISTILBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 672
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.DPRContextEncoder": {
  "data": {
   "lineno": 738
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DPRContextEncoder.__init__": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DPRPretrainedContextEncoder": {
  "data": {
   "lineno": 743
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DPRPretrainedContextEncoder.__init__": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DPRPretrainedQuestionEncoder": {
  "data": {
   "lineno": 748
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DPRPretrainedQuestionEncoder.__init__": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DPRPretrainedReader": {
  "data": {
   "lineno": 753
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DPRPretrainedReader.__init__": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DPRQuestionEncoder": {
  "data": {
   "lineno": 758
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DPRQuestionEncoder.__init__": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DPRReader": {
  "data": {
   "lineno": 763
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DPRReader.__init__": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DataCollator": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DataCollator.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorForLanguageModeling": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorForLanguageModeling.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorForLanguageModeling.from_pretrained": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorForPermutationLanguageModeling": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorForPermutationLanguageModeling.__init__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorForPermutationLanguageModeling.from_pretrained": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorForSOP": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorForSOP.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorForTokenClassification": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorForTokenClassification.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorForWholeWordMask": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorForWholeWordMask.__init__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorWithPadding": {
  "data": {
   "lineno": 57
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DataCollatorWithPadding.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DebertaForSequenceClassification": {
  "data": {
   "lineno": 645
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DebertaForSequenceClassification.__init__": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DebertaForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DebertaModel": {
  "data": {
   "lineno": 654
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DebertaModel.__init__": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DebertaModel.from_pretrained": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DebertaPreTrainedModel": {
  "data": {
   "lineno": 663
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DebertaPreTrainedModel.__init__": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DebertaPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForMaskedLM": {
  "data": {
   "lineno": 675
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForMaskedLM.__init__": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForMultipleChoice": {
  "data": {
   "lineno": 684
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForMultipleChoice.__init__": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForQuestionAnswering": {
  "data": {
   "lineno": 693
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForSequenceClassification": {
  "data": {
   "lineno": 702
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForTokenClassification": {
  "data": {
   "lineno": 711
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForTokenClassification.__init__": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DistilBertForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DistilBertModel": {
  "data": {
   "lineno": 720
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DistilBertModel.__init__": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DistilBertModel.from_pretrained": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DistilBertPreTrainedModel": {
  "data": {
   "lineno": 729
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.DistilBertPreTrainedModel.__init__": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.DistilBertPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ELECTRA_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 768
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.ElectraForMaskedLM": {
  "data": {
   "lineno": 771
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ElectraForMaskedLM.__init__": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ElectraForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ElectraForMultipleChoice": {
  "data": {
   "lineno": 780
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ElectraForMultipleChoice.__init__": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ElectraForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ElectraForPreTraining": {
  "data": {
   "lineno": 789
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ElectraForPreTraining.__init__": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ElectraForQuestionAnswering": {
  "data": {
   "lineno": 794
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ElectraForQuestionAnswering.__init__": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ElectraForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ElectraForSequenceClassification": {
  "data": {
   "lineno": 803
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ElectraForSequenceClassification.__init__": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ElectraForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ElectraForTokenClassification": {
  "data": {
   "lineno": 812
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ElectraForTokenClassification.__init__": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ElectraForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ElectraModel": {
  "data": {
   "lineno": 821
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ElectraModel.__init__": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ElectraModel.from_pretrained": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ElectraPreTrainedModel": {
  "data": {
   "lineno": 830
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ElectraPreTrainedModel.__init__": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ElectraPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.EncoderDecoderModel": {
  "data": {
   "lineno": 843
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.EncoderDecoderModel.__init__": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.EncoderDecoderModel.from_pretrained": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FLAUBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 852
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.FSMTForConditionalGeneration": {
  "data": {
   "lineno": 918
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FSMTForConditionalGeneration.__init__": {
  "data": {
   "lineno": 919,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FSMTForConditionalGeneration.from_pretrained": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FSMTModel": {
  "data": {
   "lineno": 927
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FSMTModel.__init__": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FSMTModel.from_pretrained": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FUNNEL_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 945
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForMultipleChoice": {
  "data": {
   "lineno": 855
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForMultipleChoice.__init__": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForQuestionAnswering": {
  "data": {
   "lineno": 864
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForQuestionAnsweringSimple": {
  "data": {
   "lineno": 873
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForQuestionAnsweringSimple.from_pretrained": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForSequenceClassification": {
  "data": {
   "lineno": 882
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForSequenceClassification.__init__": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForTokenClassification": {
  "data": {
   "lineno": 891
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForTokenClassification.__init__": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FlaubertForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FlaubertModel": {
  "data": {
   "lineno": 900
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FlaubertModel.__init__": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FlaubertModel.from_pretrained": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FlaubertWithLMHeadModel": {
  "data": {
   "lineno": 909
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FlaubertWithLMHeadModel.__init__": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FlaubertWithLMHeadModel.from_pretrained": {
  "data": {
   "lineno": 913,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelBaseModel": {
  "data": {
   "lineno": 948
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FunnelBaseModel.__init__": {
  "data": {
   "lineno": 949,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelBaseModel.from_pretrained": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelForMaskedLM": {
  "data": {
   "lineno": 957
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FunnelForMaskedLM.__init__": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelForMultipleChoice": {
  "data": {
   "lineno": 966
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FunnelForMultipleChoice.__init__": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 970,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelForPreTraining": {
  "data": {
   "lineno": 975
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FunnelForPreTraining.__init__": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelForQuestionAnswering": {
  "data": {
   "lineno": 980
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FunnelForQuestionAnswering.__init__": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelForSequenceClassification": {
  "data": {
   "lineno": 989
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FunnelForSequenceClassification.__init__": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelForTokenClassification": {
  "data": {
   "lineno": 998
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FunnelForTokenClassification.__init__": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelModel": {
  "data": {
   "lineno": 1007
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.FunnelModel.__init__": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.FunnelModel.from_pretrained": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.GPT2DoubleHeadsModel": {
  "data": {
   "lineno": 1023
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.GPT2DoubleHeadsModel.__init__": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.GPT2DoubleHeadsModel.from_pretrained": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.GPT2ForSequenceClassification": {
  "data": {
   "lineno": 1032
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.GPT2ForSequenceClassification.__init__": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.GPT2ForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.GPT2LMHeadModel": {
  "data": {
   "lineno": 1041
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.GPT2LMHeadModel.__init__": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.GPT2LMHeadModel.from_pretrained": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.GPT2Model": {
  "data": {
   "lineno": 1050
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.GPT2Model.__init__": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.GPT2Model.from_pretrained": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.GPT2PreTrainedModel": {
  "data": {
   "lineno": 1059
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.GPT2PreTrainedModel.__init__": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.GPT2PreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.GPT2_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1020
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.GlueDataTrainingArguments": {
  "data": {
   "lineno": 71
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.GlueDataTrainingArguments.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.GlueDataset": {
  "data": {
   "lineno": 66
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.GlueDataset.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LAYOUTLM_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1072
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.LONGFORMER_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1102
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.LayoutLMForMaskedLM": {
  "data": {
   "lineno": 1075
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LayoutLMForMaskedLM.__init__": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LayoutLMForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 1079,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LayoutLMForTokenClassification": {
  "data": {
   "lineno": 1084
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LayoutLMForTokenClassification.__init__": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LayoutLMForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LayoutLMModel": {
  "data": {
   "lineno": 1093
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LayoutLMModel.__init__": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LayoutLMModel.from_pretrained": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LineByLineTextDataset": {
  "data": {
   "lineno": 76
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LineByLineTextDataset.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LineByLineWithRefDataset": {
  "data": {
   "lineno": 81
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LineByLineWithRefDataset.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LineByLineWithSOPTextDataset": {
  "data": {
   "lineno": 86
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LineByLineWithSOPTextDataset.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LogitsProcessor": {
  "data": {
   "lineno": 121
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LogitsProcessor.__init__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LogitsProcessorList": {
  "data": {
   "lineno": 126
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LogitsProcessorList.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LogitsWarper": {
  "data": {
   "lineno": 131
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LogitsWarper.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LongformerForMaskedLM": {
  "data": {
   "lineno": 1105
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LongformerForMaskedLM.__init__": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LongformerForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LongformerForMultipleChoice": {
  "data": {
   "lineno": 1114
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LongformerForMultipleChoice.__init__": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LongformerForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LongformerForQuestionAnswering": {
  "data": {
   "lineno": 1123
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LongformerForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LongformerForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LongformerForSequenceClassification": {
  "data": {
   "lineno": 1132
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LongformerForSequenceClassification.__init__": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LongformerForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LongformerForTokenClassification": {
  "data": {
   "lineno": 1141
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LongformerForTokenClassification.__init__": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LongformerForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LongformerModel": {
  "data": {
   "lineno": 1150
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LongformerModel.__init__": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LongformerModel.from_pretrained": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LongformerSelfAttention": {
  "data": {
   "lineno": 1159
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LongformerSelfAttention.__init__": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LxmertEncoder": {
  "data": {
   "lineno": 1164
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LxmertEncoder.__init__": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LxmertForPreTraining": {
  "data": {
   "lineno": 1169
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LxmertForPreTraining.__init__": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LxmertForQuestionAnswering": {
  "data": {
   "lineno": 1174
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LxmertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LxmertForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LxmertModel": {
  "data": {
   "lineno": 1183
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LxmertModel.__init__": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LxmertModel.from_pretrained": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LxmertPreTrainedModel": {
  "data": {
   "lineno": 1192
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LxmertPreTrainedModel.__init__": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LxmertPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LxmertVisualFeatureEncoder": {
  "data": {
   "lineno": 1201
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LxmertVisualFeatureEncoder.__init__": {
  "data": {
   "lineno": 1202,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.LxmertXLayer": {
  "data": {
   "lineno": 1206
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.LxmertXLayer.__init__": {
  "data": {
   "lineno": 1207,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MBartForConditionalGeneration": {
  "data": {
   "lineno": 1220
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MBartForConditionalGeneration.__init__": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MBartForConditionalGeneration.from_pretrained": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MMBTForClassification": {
  "data": {
   "lineno": 1229
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MMBTForClassification.__init__": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MMBTModel": {
  "data": {
   "lineno": 1234
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MMBTModel.__init__": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MMBTModel.from_pretrained": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MOBILEBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1248
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.MODEL_FOR_CAUSAL_LM_MAPPING": {
  "data": {
   "lineno": 250
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.MODEL_FOR_MASKED_LM_MAPPING": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.MODEL_FOR_MULTIPLE_CHOICE_MAPPING": {
  "data": {
   "lineno": 256
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.MODEL_FOR_NEXT_SENTENCE_PREDICTION_MAPPING": {
  "data": {
   "lineno": 259
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.MODEL_FOR_PRETRAINING_MAPPING": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.MODEL_FOR_QUESTION_ANSWERING_MAPPING": {
  "data": {
   "lineno": 265
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING": {
  "data": {
   "lineno": 271
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING": {
  "data": {
   "lineno": 274
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.MODEL_MAPPING": {
  "data": {
   "lineno": 277
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.MODEL_WITH_LM_HEAD_MAPPING": {
  "data": {
   "lineno": 280
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.MarianMTModel": {
  "data": {
   "lineno": 1211
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MarianMTModel.__init__": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MarianMTModel.from_pretrained": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MinLengthLogitsProcessor": {
  "data": {
   "lineno": 136
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MinLengthLogitsProcessor.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForMaskedLM": {
  "data": {
   "lineno": 1251
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForMaskedLM.__init__": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 1255,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForMultipleChoice": {
  "data": {
   "lineno": 1260
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForMultipleChoice.__init__": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForNextSentencePrediction": {
  "data": {
   "lineno": 1269
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForNextSentencePrediction.__init__": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForPreTraining": {
  "data": {
   "lineno": 1274
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForPreTraining.__init__": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForQuestionAnswering": {
  "data": {
   "lineno": 1279
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 1283,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForSequenceClassification": {
  "data": {
   "lineno": 1288
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 1289,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1292,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForTokenClassification": {
  "data": {
   "lineno": 1297
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForTokenClassification.__init__": {
  "data": {
   "lineno": 1298,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertLayer": {
  "data": {
   "lineno": 1306
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MobileBertLayer.__init__": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertModel": {
  "data": {
   "lineno": 1311
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MobileBertModel.__init__": {
  "data": {
   "lineno": 1312,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertModel.from_pretrained": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertPreTrainedModel": {
  "data": {
   "lineno": 1320
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.MobileBertPreTrainedModel.__init__": {
  "data": {
   "lineno": 1321,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.MobileBertPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ModalEmbeddings": {
  "data": {
   "lineno": 1243
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ModalEmbeddings.__init__": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.NoBadWordsLogitsProcessor": {
  "data": {
   "lineno": 141
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.NoBadWordsLogitsProcessor.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.NoRepeatNGramLogitsProcessor": {
  "data": {
   "lineno": 146
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.NoRepeatNGramLogitsProcessor.__init__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.OPENAI_GPT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1333
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTDoubleHeadsModel": {
  "data": {
   "lineno": 1336
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTDoubleHeadsModel.__init__": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTDoubleHeadsModel.from_pretrained": {
  "data": {
   "lineno": 1340,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTForSequenceClassification": {
  "data": {
   "lineno": 1345
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTForSequenceClassification.__init__": {
  "data": {
   "lineno": 1346,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1349,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTLMHeadModel": {
  "data": {
   "lineno": 1354
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTLMHeadModel.__init__": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTLMHeadModel.from_pretrained": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTModel": {
  "data": {
   "lineno": 1363
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTModel.__init__": {
  "data": {
   "lineno": 1364,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTModel.from_pretrained": {
  "data": {
   "lineno": 1367,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTPreTrainedModel": {
  "data": {
   "lineno": 1372
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTPreTrainedModel.__init__": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.OpenAIGPTPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.PROPHETNET_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1394
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.PegasusForConditionalGeneration": {
  "data": {
   "lineno": 1385
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.PegasusForConditionalGeneration.__init__": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.PegasusForConditionalGeneration.from_pretrained": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.PreTrainedModel": {
  "data": {
   "lineno": 1748
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.PreTrainedModel.__init__": {
  "data": {
   "lineno": 1749,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.PreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1752,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.PretrainedBartModel": {
  "data": {
   "lineno": 421
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.PretrainedBartModel.__init__": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.PretrainedBartModel.from_pretrained": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.PretrainedFSMTModel": {
  "data": {
   "lineno": 936
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.PretrainedFSMTModel.__init__": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.PretrainedFSMTModel.from_pretrained": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetDecoder": {
  "data": {
   "lineno": 1397
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetDecoder.__init__": {
  "data": {
   "lineno": 1398,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetEncoder": {
  "data": {
   "lineno": 1402
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetEncoder.__init__": {
  "data": {
   "lineno": 1403,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetForCausalLM": {
  "data": {
   "lineno": 1407
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetForCausalLM.__init__": {
  "data": {
   "lineno": 1408,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetForConditionalGeneration": {
  "data": {
   "lineno": 1412
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetForConditionalGeneration.__init__": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetForConditionalGeneration.from_pretrained": {
  "data": {
   "lineno": 1416,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetModel": {
  "data": {
   "lineno": 1421
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetModel.__init__": {
  "data": {
   "lineno": 1422,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetModel.from_pretrained": {
  "data": {
   "lineno": 1425,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetPreTrainedModel": {
  "data": {
   "lineno": 1430
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetPreTrainedModel.__init__": {
  "data": {
   "lineno": 1431,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ProphetNetPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.PyTorchBenchmark": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.PyTorchBenchmark.__init__": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.PyTorchBenchmarkArguments": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.PyTorchBenchmarkArguments.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.REFORMER_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1458
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.RETRIBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1516
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.ROBERTA_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1537
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.RagModel": {
  "data": {
   "lineno": 1439
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.RagModel.__init__": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RagModel.from_pretrained": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RagSequenceForGeneration": {
  "data": {
   "lineno": 1448
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.RagSequenceForGeneration.__init__": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RagTokenForGeneration": {
  "data": {
   "lineno": 1453
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.RagTokenForGeneration.__init__": {
  "data": {
   "lineno": 1454,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ReformerAttention": {
  "data": {
   "lineno": 1461
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ReformerAttention.__init__": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ReformerForMaskedLM": {
  "data": {
   "lineno": 1466
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ReformerForMaskedLM.__init__": {
  "data": {
   "lineno": 1467,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ReformerForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 1470,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ReformerForQuestionAnswering": {
  "data": {
   "lineno": 1475
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ReformerForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ReformerForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 1479,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ReformerForSequenceClassification": {
  "data": {
   "lineno": 1484
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ReformerForSequenceClassification.__init__": {
  "data": {
   "lineno": 1485,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ReformerForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ReformerLayer": {
  "data": {
   "lineno": 1493
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ReformerLayer.__init__": {
  "data": {
   "lineno": 1494,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ReformerModel": {
  "data": {
   "lineno": 1498
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ReformerModel.__init__": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ReformerModel.from_pretrained": {
  "data": {
   "lineno": 1502,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ReformerModelWithLMHead": {
  "data": {
   "lineno": 1507
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.ReformerModelWithLMHead.__init__": {
  "data": {
   "lineno": 1508,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.ReformerModelWithLMHead.from_pretrained": {
  "data": {
   "lineno": 1511,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RepetitionPenaltyLogitsProcessor": {
  "data": {
   "lineno": 151
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.RepetitionPenaltyLogitsProcessor.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RetriBertModel": {
  "data": {
   "lineno": 1519
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.RetriBertModel.__init__": {
  "data": {
   "lineno": 1520,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RetriBertModel.from_pretrained": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RetriBertPreTrainedModel": {
  "data": {
   "lineno": 1528
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.RetriBertPreTrainedModel.__init__": {
  "data": {
   "lineno": 1529,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RetriBertPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RobertaForCausalLM": {
  "data": {
   "lineno": 1540
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.RobertaForCausalLM.__init__": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RobertaForMaskedLM": {
  "data": {
   "lineno": 1545
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.RobertaForMaskedLM.__init__": {
  "data": {
   "lineno": 1546,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RobertaForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 1549,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RobertaForMultipleChoice": {
  "data": {
   "lineno": 1554
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.RobertaForMultipleChoice.__init__": {
  "data": {
   "lineno": 1555,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RobertaForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RobertaForQuestionAnswering": {
  "data": {
   "lineno": 1563
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.RobertaForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1564,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RobertaForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RobertaForSequenceClassification": {
  "data": {
   "lineno": 1572
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.RobertaForSequenceClassification.__init__": {
  "data": {
   "lineno": 1573,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RobertaForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1576,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RobertaForTokenClassification": {
  "data": {
   "lineno": 1581
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.RobertaForTokenClassification.__init__": {
  "data": {
   "lineno": 1582,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RobertaForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1585,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RobertaModel": {
  "data": {
   "lineno": 1590
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.RobertaModel.__init__": {
  "data": {
   "lineno": 1591,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.RobertaModel.from_pretrained": {
  "data": {
   "lineno": 1594,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SQUEEZEBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1599
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.SquadDataTrainingArguments": {
  "data": {
   "lineno": 96
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.SquadDataTrainingArguments.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SquadDataset": {
  "data": {
   "lineno": 91
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.SquadDataset.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForMaskedLM": {
  "data": {
   "lineno": 1602
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForMaskedLM.__init__": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 1606,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForMultipleChoice": {
  "data": {
   "lineno": 1611
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForMultipleChoice.__init__": {
  "data": {
   "lineno": 1612,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 1615,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForQuestionAnswering": {
  "data": {
   "lineno": 1620
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1621,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 1624,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForSequenceClassification": {
  "data": {
   "lineno": 1629
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 1630,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1633,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForTokenClassification": {
  "data": {
   "lineno": 1638
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForTokenClassification.__init__": {
  "data": {
   "lineno": 1639,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1642,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertModel": {
  "data": {
   "lineno": 1647
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertModel.__init__": {
  "data": {
   "lineno": 1648,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertModel.from_pretrained": {
  "data": {
   "lineno": 1651,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertModule": {
  "data": {
   "lineno": 1656
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertModule.__init__": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertPreTrainedModel": {
  "data": {
   "lineno": 1661
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertPreTrainedModel.__init__": {
  "data": {
   "lineno": 1662,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.SqueezeBertPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1665,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.T5ForConditionalGeneration": {
  "data": {
   "lineno": 1673
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.T5ForConditionalGeneration.__init__": {
  "data": {
   "lineno": 1674,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.T5ForConditionalGeneration.from_pretrained": {
  "data": {
   "lineno": 1677,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.T5Model": {
  "data": {
   "lineno": 1682
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.T5Model.__init__": {
  "data": {
   "lineno": 1683,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.T5Model.from_pretrained": {
  "data": {
   "lineno": 1686,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.T5PreTrainedModel": {
  "data": {
   "lineno": 1691
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.T5PreTrainedModel.__init__": {
  "data": {
   "lineno": 1692,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.T5PreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.T5_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1670
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.TRANSFO_XL_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1704
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.TemperatureLogitsWarper": {
  "data": {
   "lineno": 156
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.TemperatureLogitsWarper.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.TextDataset": {
  "data": {
   "lineno": 101
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.TextDataset.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.TextDatasetForNextSentencePrediction": {
  "data": {
   "lineno": 106
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.TextDatasetForNextSentencePrediction.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.TopKLogitsWarper": {
  "data": {
   "lineno": 161
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.TopKLogitsWarper.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.TopPLogitsWarper": {
  "data": {
   "lineno": 166
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.TopPLogitsWarper.__init__": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.Trainer": {
  "data": {
   "lineno": 2051
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.Trainer.__init__": {
  "data": {
   "lineno": 2052,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.TransfoXLLMHeadModel": {
  "data": {
   "lineno": 1712
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.TransfoXLLMHeadModel.__init__": {
  "data": {
   "lineno": 1713,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.TransfoXLLMHeadModel.from_pretrained": {
  "data": {
   "lineno": 1716,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.TransfoXLModel": {
  "data": {
   "lineno": 1721
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.TransfoXLModel.__init__": {
  "data": {
   "lineno": 1722,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.TransfoXLModel.from_pretrained": {
  "data": {
   "lineno": 1725,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.TransfoXLPreTrainedModel": {
  "data": {
   "lineno": 1730
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.TransfoXLPreTrainedModel.__init__": {
  "data": {
   "lineno": 1731,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.TransfoXLPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1734,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMForMultipleChoice": {
  "data": {
   "lineno": 1768
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMForMultipleChoice.__init__": {
  "data": {
   "lineno": 1769,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 1772,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMForQuestionAnswering": {
  "data": {
   "lineno": 1777
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1778,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 1781,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMForQuestionAnsweringSimple": {
  "data": {
   "lineno": 1786
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 1787,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMForQuestionAnsweringSimple.from_pretrained": {
  "data": {
   "lineno": 1790,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMForSequenceClassification": {
  "data": {
   "lineno": 1795
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMForSequenceClassification.__init__": {
  "data": {
   "lineno": 1796,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1799,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMForTokenClassification": {
  "data": {
   "lineno": 1804
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMForTokenClassification.__init__": {
  "data": {
   "lineno": 1805,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1808,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMModel": {
  "data": {
   "lineno": 1813
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMModel.__init__": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMModel.from_pretrained": {
  "data": {
   "lineno": 1817,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMPreTrainedModel": {
  "data": {
   "lineno": 1822
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMPreTrainedModel.__init__": {
  "data": {
   "lineno": 1823,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1826,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMProphetNetDecoder": {
  "data": {
   "lineno": 1843
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMProphetNetDecoder.__init__": {
  "data": {
   "lineno": 1844,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMProphetNetEncoder": {
  "data": {
   "lineno": 1848
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMProphetNetEncoder.__init__": {
  "data": {
   "lineno": 1849,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMProphetNetForCausalLM": {
  "data": {
   "lineno": 1853
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMProphetNetForCausalLM.__init__": {
  "data": {
   "lineno": 1854,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMProphetNetForConditionalGeneration": {
  "data": {
   "lineno": 1858
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMProphetNetForConditionalGeneration.__init__": {
  "data": {
   "lineno": 1859,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMProphetNetForConditionalGeneration.from_pretrained": {
  "data": {
   "lineno": 1862,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMProphetNetModel": {
  "data": {
   "lineno": 1867
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMProphetNetModel.__init__": {
  "data": {
   "lineno": 1868,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMProphetNetModel.from_pretrained": {
  "data": {
   "lineno": 1871,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForCausalLM": {
  "data": {
   "lineno": 1879
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForCausalLM.__init__": {
  "data": {
   "lineno": 1880,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForMaskedLM": {
  "data": {
   "lineno": 1884
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForMaskedLM.__init__": {
  "data": {
   "lineno": 1885,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 1888,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForMultipleChoice": {
  "data": {
   "lineno": 1893
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForMultipleChoice.__init__": {
  "data": {
   "lineno": 1894,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 1897,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForQuestionAnswering": {
  "data": {
   "lineno": 1902
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1903,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 1906,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForSequenceClassification": {
  "data": {
   "lineno": 1911
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForSequenceClassification.__init__": {
  "data": {
   "lineno": 1912,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1915,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForTokenClassification": {
  "data": {
   "lineno": 1920
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForTokenClassification.__init__": {
  "data": {
   "lineno": 1921,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1924,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaModel": {
  "data": {
   "lineno": 1929
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaModel.__init__": {
  "data": {
   "lineno": 1930,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMRobertaModel.from_pretrained": {
  "data": {
   "lineno": 1933,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMWithLMHeadModel": {
  "data": {
   "lineno": 1831
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLMWithLMHeadModel.__init__": {
  "data": {
   "lineno": 1832,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLMWithLMHeadModel.from_pretrained": {
  "data": {
   "lineno": 1835,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLM_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1765
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.XLM_PROPHETNET_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1840
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.XLM_ROBERTA_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1876
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.XLNET_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1938
  },
  "type": "constant"
 },
 "transformers.utils.dummy_pt_objects.XLNetForMultipleChoice": {
  "data": {
   "lineno": 1941
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLNetForMultipleChoice.__init__": {
  "data": {
   "lineno": 1942,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 1945,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetForQuestionAnswering": {
  "data": {
   "lineno": 1950
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLNetForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1951,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 1954,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetForQuestionAnsweringSimple": {
  "data": {
   "lineno": 1959
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLNetForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 1960,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetForQuestionAnsweringSimple.from_pretrained": {
  "data": {
   "lineno": 1963,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetForSequenceClassification": {
  "data": {
   "lineno": 1968
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLNetForSequenceClassification.__init__": {
  "data": {
   "lineno": 1969,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1972,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetForTokenClassification": {
  "data": {
   "lineno": 1977
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLNetForTokenClassification.__init__": {
  "data": {
   "lineno": 1978,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1981,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetLMHeadModel": {
  "data": {
   "lineno": 1986
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLNetLMHeadModel.__init__": {
  "data": {
   "lineno": 1987,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetLMHeadModel.from_pretrained": {
  "data": {
   "lineno": 1990,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetModel": {
  "data": {
   "lineno": 1995
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLNetModel.__init__": {
  "data": {
   "lineno": 1996,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetModel.from_pretrained": {
  "data": {
   "lineno": 1999,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetPreTrainedModel": {
  "data": {
   "lineno": 2004
  },
  "type": "class"
 },
 "transformers.utils.dummy_pt_objects.XLNetPreTrainedModel.__init__": {
  "data": {
   "lineno": 2005,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.XLNetPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 2008,
   "symbols_in_volume": [
    "classmethod",
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.apply_chunking_to_forward": {
  "data": {
   "lineno": 1757,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.default_data_collator": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.get_constant_schedule": {
  "data": {
   "lineno": 2027,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.get_constant_schedule_with_warmup": {
  "data": {
   "lineno": 2031,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.get_cosine_schedule_with_warmup": {
  "data": {
   "lineno": 2035,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.get_cosine_with_hard_restarts_schedule_with_warmup": {
  "data": {
   "lineno": 2039,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.get_linear_schedule_with_warmup": {
  "data": {
   "lineno": 2043,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.get_polynomial_decay_schedule_with_warmup": {
  "data": {
   "lineno": 2047,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.load_tf_weights_in_albert": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.load_tf_weights_in_bert": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.load_tf_weights_in_bert_generation": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.load_tf_weights_in_electra": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.load_tf_weights_in_funnel": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.load_tf_weights_in_gpt2": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.load_tf_weights_in_mobilebert": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.load_tf_weights_in_openai_gpt": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.load_tf_weights_in_t5": {
  "data": {
   "lineno": 1700,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.load_tf_weights_in_transfo_xl": {
  "data": {
   "lineno": 1739,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.load_tf_weights_in_xlnet": {
  "data": {
   "lineno": 2013,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.prune_layer": {
  "data": {
   "lineno": 1761,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.top_k_top_p_filtering": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_pt_objects.torch_distributed_zero_first": {
  "data": {
   "lineno": 2056,
   "symbols_in_volume": [
    "requires_pytorch"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects": {
  "data": {},
  "type": "module"
 },
 "transformers.utils.dummy_sentencepiece_objects.AlbertTokenizer": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "transformers.utils.dummy_sentencepiece_objects.AlbertTokenizer.__init__": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.AlbertTokenizer.from_pretrained": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "classmethod",
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.BertGenerationTokenizer": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "transformers.utils.dummy_sentencepiece_objects.BertGenerationTokenizer.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.BertGenerationTokenizer.from_pretrained": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "classmethod",
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.CamembertTokenizer": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "transformers.utils.dummy_sentencepiece_objects.CamembertTokenizer.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.CamembertTokenizer.from_pretrained": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "classmethod",
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.MBartTokenizer": {
  "data": {
   "lineno": 41
  },
  "type": "class"
 },
 "transformers.utils.dummy_sentencepiece_objects.MBartTokenizer.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.MBartTokenizer.from_pretrained": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "classmethod",
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.MarianTokenizer": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "transformers.utils.dummy_sentencepiece_objects.MarianTokenizer.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.MarianTokenizer.from_pretrained": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "classmethod",
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.PegasusTokenizer": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "transformers.utils.dummy_sentencepiece_objects.PegasusTokenizer.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.PegasusTokenizer.from_pretrained": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "classmethod",
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.ReformerTokenizer": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "transformers.utils.dummy_sentencepiece_objects.ReformerTokenizer.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.ReformerTokenizer.from_pretrained": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "classmethod",
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.T5Tokenizer": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "transformers.utils.dummy_sentencepiece_objects.T5Tokenizer.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.T5Tokenizer.from_pretrained": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "classmethod",
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.XLMProphetNetTokenizer": {
  "data": {
   "lineno": 77
  },
  "type": "class"
 },
 "transformers.utils.dummy_sentencepiece_objects.XLMProphetNetTokenizer.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.XLMProphetNetTokenizer.from_pretrained": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "classmethod",
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.XLMRobertaTokenizer": {
  "data": {
   "lineno": 86
  },
  "type": "class"
 },
 "transformers.utils.dummy_sentencepiece_objects.XLMRobertaTokenizer.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.XLMRobertaTokenizer.from_pretrained": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "classmethod",
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.XLNetTokenizer": {
  "data": {
   "lineno": 95
  },
  "type": "class"
 },
 "transformers.utils.dummy_sentencepiece_objects.XLNetTokenizer.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_sentencepiece_objects.XLNetTokenizer.from_pretrained": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "classmethod",
    "requires_sentencepiece"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects": {
  "data": {},
  "type": "module"
 },
 "transformers.utils.dummy_tf_objects.AdamWeightDecay": {
  "data": {
   "lineno": 1324
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.AdamWeightDecay.__init__": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.GradientAccumulator": {
  "data": {
   "lineno": 1329
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.GradientAccumulator.__init__": {
  "data": {
   "lineno": 1330,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAdaptiveEmbedding": {
  "data": {
   "lineno": 1065
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAdaptiveEmbedding.__init__": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForMaskedLM": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForMaskedLM.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForMultipleChoice": {
  "data": {
   "lineno": 31
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForMultipleChoice.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForPreTraining": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForPreTraining.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForQuestionAnswering": {
  "data": {
   "lineno": 45
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForSequenceClassification": {
  "data": {
   "lineno": 54
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForSequenceClassification.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForTokenClassification": {
  "data": {
   "lineno": 63
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForTokenClassification.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertMainLayer": {
  "data": {
   "lineno": 72
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertMainLayer.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertModel": {
  "data": {
   "lineno": 77
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertModel.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertModel.from_pretrained": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertPreTrainedModel": {
  "data": {
   "lineno": 86
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertPreTrainedModel.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAlbertPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModel": {
  "data": {
   "lineno": 125
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModel.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModel.from_pretrained": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForCausalLM": {
  "data": {
   "lineno": 134
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForCausalLM.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForCausalLM.from_pretrained": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForMaskedLM": {
  "data": {
   "lineno": 143
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForMaskedLM.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForMultipleChoice": {
  "data": {
   "lineno": 152
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForMultipleChoice.__init__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForPreTraining": {
  "data": {
   "lineno": 161
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForPreTraining.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForPreTraining.from_pretrained": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForQuestionAnswering": {
  "data": {
   "lineno": 170
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForQuestionAnswering.__init__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForSeq2SeqLM": {
  "data": {
   "lineno": 179
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForSeq2SeqLM.__init__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForSeq2SeqLM.from_pretrained": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForSequenceClassification": {
  "data": {
   "lineno": 188
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForSequenceClassification.__init__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForTokenClassification": {
  "data": {
   "lineno": 197
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForTokenClassification.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelWithLMHead": {
  "data": {
   "lineno": 206
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelWithLMHead.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFAutoModelWithLMHead.from_pretrained": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBartForConditionalGeneration": {
  "data": {
   "lineno": 215
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBartForConditionalGeneration.__init__": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBartForConditionalGeneration.from_pretrained": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBartModel": {
  "data": {
   "lineno": 224
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBartModel.__init__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBartModel.from_pretrained": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertEmbeddings": {
  "data": {
   "lineno": 236
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBertEmbeddings.__init__": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertForMaskedLM": {
  "data": {
   "lineno": 241
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBertForMaskedLM.__init__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertForMultipleChoice": {
  "data": {
   "lineno": 250
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBertForMultipleChoice.__init__": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertForNextSentencePrediction": {
  "data": {
   "lineno": 259
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBertForNextSentencePrediction.__init__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertForPreTraining": {
  "data": {
   "lineno": 264
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBertForPreTraining.__init__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertForQuestionAnswering": {
  "data": {
   "lineno": 269
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertForSequenceClassification": {
  "data": {
   "lineno": 278
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertForTokenClassification": {
  "data": {
   "lineno": 287
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBertForTokenClassification.__init__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertLMHeadModel": {
  "data": {
   "lineno": 296
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBertLMHeadModel.__init__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertLMHeadModel.from_pretrained": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertMainLayer": {
  "data": {
   "lineno": 305
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBertMainLayer.__init__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertModel": {
  "data": {
   "lineno": 310
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBertModel.__init__": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertModel.from_pretrained": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertPreTrainedModel": {
  "data": {
   "lineno": 319
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBertPreTrainedModel.__init__": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBertPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBlenderbotForConditionalGeneration": {
  "data": {
   "lineno": 328
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFBlenderbotForConditionalGeneration.__init__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFBlenderbotForConditionalGeneration.from_pretrained": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCTRLLMHeadModel": {
  "data": {
   "lineno": 397
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFCTRLLMHeadModel.__init__": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCTRLLMHeadModel.from_pretrained": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCTRLModel": {
  "data": {
   "lineno": 406
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFCTRLModel.__init__": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCTRLModel.from_pretrained": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCTRLPreTrainedModel": {
  "data": {
   "lineno": 415
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFCTRLPreTrainedModel.__init__": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCTRLPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForMaskedLM": {
  "data": {
   "lineno": 340
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForMaskedLM.__init__": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForMultipleChoice": {
  "data": {
   "lineno": 349
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForMultipleChoice.__init__": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForQuestionAnswering": {
  "data": {
   "lineno": 358
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForSequenceClassification": {
  "data": {
   "lineno": 367
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForSequenceClassification.__init__": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForTokenClassification": {
  "data": {
   "lineno": 376
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForTokenClassification.__init__": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertModel": {
  "data": {
   "lineno": 385
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertModel.__init__": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFCamembertModel.from_pretrained": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForMaskedLM": {
  "data": {
   "lineno": 427
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForMaskedLM.__init__": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForMultipleChoice": {
  "data": {
   "lineno": 436
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForMultipleChoice.__init__": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForQuestionAnswering": {
  "data": {
   "lineno": 445
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForSequenceClassification": {
  "data": {
   "lineno": 454
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForTokenClassification": {
  "data": {
   "lineno": 463
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForTokenClassification.__init__": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertMainLayer": {
  "data": {
   "lineno": 472
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertMainLayer.__init__": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertModel": {
  "data": {
   "lineno": 477
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertModel.__init__": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertModel.from_pretrained": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertPreTrainedModel": {
  "data": {
   "lineno": 486
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertPreTrainedModel.__init__": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFDistilBertPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForMaskedLM": {
  "data": {
   "lineno": 498
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForMaskedLM.__init__": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForMultipleChoice": {
  "data": {
   "lineno": 507
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForMultipleChoice.__init__": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForPreTraining": {
  "data": {
   "lineno": 516
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForPreTraining.__init__": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForQuestionAnswering": {
  "data": {
   "lineno": 521
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForQuestionAnswering.__init__": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForSequenceClassification": {
  "data": {
   "lineno": 530
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForSequenceClassification.__init__": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForTokenClassification": {
  "data": {
   "lineno": 539
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForTokenClassification.__init__": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraModel": {
  "data": {
   "lineno": 548
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFElectraModel.__init__": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraModel.from_pretrained": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraPreTrainedModel": {
  "data": {
   "lineno": 557
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFElectraPreTrainedModel.__init__": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFElectraPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertForMultipleChoice": {
  "data": {
   "lineno": 569
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertForMultipleChoice.__init__": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertForQuestionAnsweringSimple": {
  "data": {
   "lineno": 578
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertForQuestionAnsweringSimple.from_pretrained": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertForSequenceClassification": {
  "data": {
   "lineno": 587
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertForSequenceClassification.__init__": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertForTokenClassification": {
  "data": {
   "lineno": 596
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertForTokenClassification.__init__": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertModel": {
  "data": {
   "lineno": 605
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertModel.__init__": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertModel.from_pretrained": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertWithLMHeadModel": {
  "data": {
   "lineno": 614
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertWithLMHeadModel.__init__": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFlaubertWithLMHeadModel.from_pretrained": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelBaseModel": {
  "data": {
   "lineno": 626
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelBaseModel.__init__": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelBaseModel.from_pretrained": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForMaskedLM": {
  "data": {
   "lineno": 635
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForMaskedLM.__init__": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForMultipleChoice": {
  "data": {
   "lineno": 644
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForMultipleChoice.__init__": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForPreTraining": {
  "data": {
   "lineno": 653
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForPreTraining.__init__": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForQuestionAnswering": {
  "data": {
   "lineno": 658
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForQuestionAnswering.__init__": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForSequenceClassification": {
  "data": {
   "lineno": 667
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForSequenceClassification.__init__": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForTokenClassification": {
  "data": {
   "lineno": 676
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForTokenClassification.__init__": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelModel": {
  "data": {
   "lineno": 685
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelModel.__init__": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFFunnelModel.from_pretrained": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFGPT2DoubleHeadsModel": {
  "data": {
   "lineno": 697
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFGPT2DoubleHeadsModel.__init__": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFGPT2DoubleHeadsModel.from_pretrained": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFGPT2LMHeadModel": {
  "data": {
   "lineno": 706
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFGPT2LMHeadModel.__init__": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFGPT2LMHeadModel.from_pretrained": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFGPT2MainLayer": {
  "data": {
   "lineno": 715
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFGPT2MainLayer.__init__": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFGPT2Model": {
  "data": {
   "lineno": 720
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFGPT2Model.__init__": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFGPT2Model.from_pretrained": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFGPT2PreTrainedModel": {
  "data": {
   "lineno": 729
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFGPT2PreTrainedModel.__init__": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFGPT2PreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFLongformerForMaskedLM": {
  "data": {
   "lineno": 741
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFLongformerForMaskedLM.__init__": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFLongformerForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFLongformerForQuestionAnswering": {
  "data": {
   "lineno": 750
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFLongformerForQuestionAnswering.__init__": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFLongformerForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFLongformerModel": {
  "data": {
   "lineno": 759
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFLongformerModel.__init__": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFLongformerModel.from_pretrained": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFLongformerSelfAttention": {
  "data": {
   "lineno": 768
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFLongformerSelfAttention.__init__": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFLxmertForPreTraining": {
  "data": {
   "lineno": 776
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFLxmertForPreTraining.__init__": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFLxmertMainLayer": {
  "data": {
   "lineno": 781
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFLxmertMainLayer.__init__": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFLxmertModel": {
  "data": {
   "lineno": 786
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFLxmertModel.__init__": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFLxmertModel.from_pretrained": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFLxmertPreTrainedModel": {
  "data": {
   "lineno": 795
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFLxmertPreTrainedModel.__init__": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFLxmertPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFLxmertVisualFeatureEncoder": {
  "data": {
   "lineno": 804
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFLxmertVisualFeatureEncoder.__init__": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMBartForConditionalGeneration": {
  "data": {
   "lineno": 818
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFMBartForConditionalGeneration.__init__": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMBartForConditionalGeneration.from_pretrained": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMarianMTModel": {
  "data": {
   "lineno": 809
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFMarianMTModel.__init__": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMarianMTModel.from_pretrained": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForMaskedLM": {
  "data": {
   "lineno": 830
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForMaskedLM.__init__": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForMultipleChoice": {
  "data": {
   "lineno": 839
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForMultipleChoice.__init__": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForNextSentencePrediction": {
  "data": {
   "lineno": 848
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForNextSentencePrediction.__init__": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForPreTraining": {
  "data": {
   "lineno": 853
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForPreTraining.__init__": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForQuestionAnswering": {
  "data": {
   "lineno": 858
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForQuestionAnswering.__init__": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForSequenceClassification": {
  "data": {
   "lineno": 867
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForSequenceClassification.__init__": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForTokenClassification": {
  "data": {
   "lineno": 876
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForTokenClassification.__init__": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertMainLayer": {
  "data": {
   "lineno": 885
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertMainLayer.__init__": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertModel": {
  "data": {
   "lineno": 890
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertModel.__init__": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertModel.from_pretrained": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertPreTrainedModel": {
  "data": {
   "lineno": 899
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertPreTrainedModel.__init__": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFMobileBertPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFOpenAIGPTDoubleHeadsModel": {
  "data": {
   "lineno": 911
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFOpenAIGPTDoubleHeadsModel.__init__": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFOpenAIGPTDoubleHeadsModel.from_pretrained": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFOpenAIGPTLMHeadModel": {
  "data": {
   "lineno": 920
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFOpenAIGPTLMHeadModel.__init__": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFOpenAIGPTLMHeadModel.from_pretrained": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFOpenAIGPTMainLayer": {
  "data": {
   "lineno": 929
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFOpenAIGPTMainLayer.__init__": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFOpenAIGPTModel": {
  "data": {
   "lineno": 934
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFOpenAIGPTModel.__init__": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFOpenAIGPTModel.from_pretrained": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFOpenAIGPTPreTrainedModel": {
  "data": {
   "lineno": 943
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFOpenAIGPTPreTrainedModel.__init__": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFOpenAIGPTPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFPegasusForConditionalGeneration": {
  "data": {
   "lineno": 952
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFPegasusForConditionalGeneration.__init__": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFPegasusForConditionalGeneration.from_pretrained": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFPreTrainedModel": {
  "data": {
   "lineno": 1102
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFPreTrainedModel.__init__": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForMaskedLM": {
  "data": {
   "lineno": 964
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForMaskedLM.__init__": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForMultipleChoice": {
  "data": {
   "lineno": 973
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForMultipleChoice.__init__": {
  "data": {
   "lineno": 974,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForQuestionAnswering": {
  "data": {
   "lineno": 982
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForQuestionAnswering.__init__": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForSequenceClassification": {
  "data": {
   "lineno": 991
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForSequenceClassification.__init__": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForTokenClassification": {
  "data": {
   "lineno": 1000
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForTokenClassification.__init__": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaMainLayer": {
  "data": {
   "lineno": 1009
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaMainLayer.__init__": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaModel": {
  "data": {
   "lineno": 1014
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaModel.__init__": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaModel.from_pretrained": {
  "data": {
   "lineno": 1018,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaPreTrainedModel": {
  "data": {
   "lineno": 1023
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaPreTrainedModel.__init__": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFRobertaPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFSequenceSummary": {
  "data": {
   "lineno": 1111
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFSequenceSummary.__init__": {
  "data": {
   "lineno": 1112,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFSharedEmbeddings": {
  "data": {
   "lineno": 1116
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFSharedEmbeddings.__init__": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFT5ForConditionalGeneration": {
  "data": {
   "lineno": 1035
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFT5ForConditionalGeneration.__init__": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFT5ForConditionalGeneration.from_pretrained": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFT5Model": {
  "data": {
   "lineno": 1044
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFT5Model.__init__": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFT5Model.from_pretrained": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFT5PreTrainedModel": {
  "data": {
   "lineno": 1053
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFT5PreTrainedModel.__init__": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFT5PreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFTrainer": {
  "data": {
   "lineno": 1343
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFTrainer.__init__": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFTransfoXLLMHeadModel": {
  "data": {
   "lineno": 1070
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFTransfoXLLMHeadModel.__init__": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFTransfoXLLMHeadModel.from_pretrained": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFTransfoXLMainLayer": {
  "data": {
   "lineno": 1079
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFTransfoXLMainLayer.__init__": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFTransfoXLModel": {
  "data": {
   "lineno": 1084
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFTransfoXLModel.__init__": {
  "data": {
   "lineno": 1085,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFTransfoXLModel.from_pretrained": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFTransfoXLPreTrainedModel": {
  "data": {
   "lineno": 1093
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFTransfoXLPreTrainedModel.__init__": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFTransfoXLPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMForMultipleChoice": {
  "data": {
   "lineno": 1128
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLMForMultipleChoice.__init__": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMForQuestionAnsweringSimple": {
  "data": {
   "lineno": 1137
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLMForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMForQuestionAnsweringSimple.from_pretrained": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMForSequenceClassification": {
  "data": {
   "lineno": 1146
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLMForSequenceClassification.__init__": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMForTokenClassification": {
  "data": {
   "lineno": 1155
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLMForTokenClassification.__init__": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMMainLayer": {
  "data": {
   "lineno": 1164
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLMMainLayer.__init__": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMModel": {
  "data": {
   "lineno": 1169
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLMModel.__init__": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMModel.from_pretrained": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMPreTrainedModel": {
  "data": {
   "lineno": 1178
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLMPreTrainedModel.__init__": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForMaskedLM": {
  "data": {
   "lineno": 1199
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForMaskedLM.__init__": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForMaskedLM.from_pretrained": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForMultipleChoice": {
  "data": {
   "lineno": 1208
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForMultipleChoice.__init__": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForQuestionAnswering": {
  "data": {
   "lineno": 1217
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForQuestionAnswering.__init__": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForQuestionAnswering.from_pretrained": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForSequenceClassification": {
  "data": {
   "lineno": 1226
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForSequenceClassification.__init__": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForTokenClassification": {
  "data": {
   "lineno": 1235
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForTokenClassification.__init__": {
  "data": {
   "lineno": 1236,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaModel": {
  "data": {
   "lineno": 1244
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaModel.__init__": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMRobertaModel.from_pretrained": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMWithLMHeadModel": {
  "data": {
   "lineno": 1187
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLMWithLMHeadModel.__init__": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLMWithLMHeadModel.from_pretrained": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetForMultipleChoice": {
  "data": {
   "lineno": 1256
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetForMultipleChoice.__init__": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetForMultipleChoice.from_pretrained": {
  "data": {
   "lineno": 1260,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetForQuestionAnsweringSimple": {
  "data": {
   "lineno": 1265
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetForQuestionAnsweringSimple.__init__": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetForQuestionAnsweringSimple.from_pretrained": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetForSequenceClassification": {
  "data": {
   "lineno": 1274
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetForSequenceClassification.__init__": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetForSequenceClassification.from_pretrained": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetForTokenClassification": {
  "data": {
   "lineno": 1283
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetForTokenClassification.__init__": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetForTokenClassification.from_pretrained": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetLMHeadModel": {
  "data": {
   "lineno": 1292
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetLMHeadModel.__init__": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetLMHeadModel.from_pretrained": {
  "data": {
   "lineno": 1296,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetMainLayer": {
  "data": {
   "lineno": 1301
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetMainLayer.__init__": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetModel": {
  "data": {
   "lineno": 1306
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetModel.__init__": {
  "data": {
   "lineno": 1307,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetModel.from_pretrained": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetPreTrainedModel": {
  "data": {
   "lineno": 1315
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetPreTrainedModel.__init__": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TFXLNetPreTrainedModel.from_pretrained": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "classmethod",
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TF_ALBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_BERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 233
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_CAMEMBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 337
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_CTRL_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 394
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_DISTILBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 424
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_ELECTRA_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 495
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_FLAUBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 566
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_FUNNEL_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 623
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_GPT2_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 694
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_LONGFORMER_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 738
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_LXMERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 773
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_MOBILEBERT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 827
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_MODEL_FOR_CAUSAL_LM_MAPPING": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_MODEL_FOR_MASKED_LM_MAPPING": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_MODEL_FOR_MULTIPLE_CHOICE_MAPPING": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_MODEL_FOR_PRETRAINING_MAPPING": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_MODEL_FOR_QUESTION_ANSWERING_MAPPING": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_MODEL_FOR_SEQUENCE_CLASSIFICATION_MAPPING": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_MODEL_FOR_TOKEN_CLASSIFICATION_MAPPING": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_MODEL_MAPPING": {
  "data": {
   "lineno": 119
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_MODEL_WITH_LM_HEAD_MAPPING": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_OPENAI_GPT_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 908
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_ROBERTA_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 961
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_T5_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1032
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_TRANSFO_XL_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1062
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_XLM_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1125
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_XLM_ROBERTA_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1196
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TF_XLNET_PRETRAINED_MODEL_ARCHIVE_LIST": {
  "data": {
   "lineno": 1253
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tf_objects.TensorFlowBenchmark": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TensorFlowBenchmark.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.TensorFlowBenchmarkArguments": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.TensorFlowBenchmarkArguments.__init__": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.WarmUp": {
  "data": {
   "lineno": 1334
  },
  "type": "class"
 },
 "transformers.utils.dummy_tf_objects.WarmUp.__init__": {
  "data": {
   "lineno": 1335,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.create_optimizer": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.shape_list": {
  "data": {
   "lineno": 1121,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tf_objects.tf_top_k_top_p_filtering": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "requires_tf"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects": {
  "data": {},
  "type": "module"
 },
 "transformers.utils.dummy_tokenizers_objects.AlbertTokenizerFast": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.AlbertTokenizerFast.__init__": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.AlbertTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.BartTokenizerFast": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.BartTokenizerFast.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.BartTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.BertTokenizerFast": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.BertTokenizerFast.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.BertTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.CamembertTokenizerFast": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.CamembertTokenizerFast.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.CamembertTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.DPRContextEncoderTokenizerFast": {
  "data": {
   "lineno": 50
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.DPRContextEncoderTokenizerFast.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.DPRContextEncoderTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.DPRQuestionEncoderTokenizerFast": {
  "data": {
   "lineno": 59
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.DPRQuestionEncoderTokenizerFast.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.DPRQuestionEncoderTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.DPRReaderTokenizerFast": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.DPRReaderTokenizerFast.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.DPRReaderTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.DistilBertTokenizerFast": {
  "data": {
   "lineno": 41
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.DistilBertTokenizerFast.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.DistilBertTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.ElectraTokenizerFast": {
  "data": {
   "lineno": 77
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.ElectraTokenizerFast.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.ElectraTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.FunnelTokenizerFast": {
  "data": {
   "lineno": 86
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.FunnelTokenizerFast.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.FunnelTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.GPT2TokenizerFast": {
  "data": {
   "lineno": 95
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.GPT2TokenizerFast.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.GPT2TokenizerFast.from_pretrained": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.HerbertTokenizerFast": {
  "data": {
   "lineno": 104
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.HerbertTokenizerFast.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.HerbertTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.LayoutLMTokenizerFast": {
  "data": {
   "lineno": 113
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.LayoutLMTokenizerFast.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.LayoutLMTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.LongformerTokenizerFast": {
  "data": {
   "lineno": 122
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.LongformerTokenizerFast.__init__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.LongformerTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.LxmertTokenizerFast": {
  "data": {
   "lineno": 131
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.LxmertTokenizerFast.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.LxmertTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.MBartTokenizerFast": {
  "data": {
   "lineno": 140
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.MBartTokenizerFast.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.MBartTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.MobileBertTokenizerFast": {
  "data": {
   "lineno": 149
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.MobileBertTokenizerFast.__init__": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.MobileBertTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.OpenAIGPTTokenizerFast": {
  "data": {
   "lineno": 158
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.OpenAIGPTTokenizerFast.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.OpenAIGPTTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.PegasusTokenizerFast": {
  "data": {
   "lineno": 167
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.PegasusTokenizerFast.__init__": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.PegasusTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.PreTrainedTokenizerFast": {
  "data": {
   "lineno": 221
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.PreTrainedTokenizerFast.__init__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.PreTrainedTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.ReformerTokenizerFast": {
  "data": {
   "lineno": 176
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.ReformerTokenizerFast.__init__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.ReformerTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.RetriBertTokenizerFast": {
  "data": {
   "lineno": 185
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.RetriBertTokenizerFast.__init__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.RetriBertTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.RobertaTokenizerFast": {
  "data": {
   "lineno": 194
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.RobertaTokenizerFast.__init__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.RobertaTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.SLOW_TO_FAST_CONVERTERS": {
  "data": {
   "lineno": 248
  },
  "type": "constant"
 },
 "transformers.utils.dummy_tokenizers_objects.SqueezeBertTokenizerFast": {
  "data": {
   "lineno": 203
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.SqueezeBertTokenizerFast.__init__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.SqueezeBertTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.T5TokenizerFast": {
  "data": {
   "lineno": 212
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.T5TokenizerFast.__init__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.T5TokenizerFast.from_pretrained": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.XLMRobertaTokenizerFast": {
  "data": {
   "lineno": 230
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.XLMRobertaTokenizerFast.__init__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.XLMRobertaTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.XLNetTokenizerFast": {
  "data": {
   "lineno": 239
  },
  "type": "class"
 },
 "transformers.utils.dummy_tokenizers_objects.XLNetTokenizerFast.__init__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.XLNetTokenizerFast.from_pretrained": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "classmethod",
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.dummy_tokenizers_objects.convert_slow_tokenizer": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "requires_tokenizers"
   ]
  },
  "type": "function"
 },
 "transformers.utils.hp_naming": {
  "data": {},
  "type": "module"
 },
 "transformers.utils.hp_naming.TrialShortNamer": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "transformers.utils.hp_naming.TrialShortNamer.add_new_param_name": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.utils.hp_naming.TrialShortNamer"
   ]
  },
  "type": "function"
 },
 "transformers.utils.hp_naming.TrialShortNamer.build_naming_info": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "list"
   ]
  },
  "type": "function"
 },
 "transformers.utils.hp_naming.TrialShortNamer.parse_repr": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "classmethod",
    "float",
    "len",
    "repr",
    "repr.split",
    "transformers.utils.hp_naming.re"
   ]
  },
  "type": "function"
 },
 "transformers.utils.hp_naming.TrialShortNamer.set_defaults": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "transformers.utils.hp_naming.TrialShortNamer.shortname": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "Exception",
    "bool",
    "classmethod",
    "float",
    "int",
    "isinstance",
    "transformers.utils.hp_naming.copy"
   ]
  },
  "type": "function"
 },
 "transformers.utils.hp_naming.TrialShortNamer.shortname_for_key": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "staticmethod",
    "transformers.utils.hp_naming.TrialShortNamer"
   ]
  },
  "type": "function"
 },
 "transformers.utils.hp_naming.TrialShortNamer.shortname_for_word": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Exception",
    "any",
    "int_to_alphabetic",
    "len",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "transformers.utils.hp_naming.TrialShortNamer.shortname_for_word.int_to_alphabetic": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "chr",
    "ord"
   ]
  },
  "type": "function"
 },
 "transformers.utils.hp_naming.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "transformers.utils.hp_naming.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "transformers.utils.logging": {
  "data": {
   "symbols_in_volume": [
    "transformers.utils.logging.logging",
    "transformers.utils.logging.threading",
    "typing.Optional"
   ]
  },
  "type": "module"
 },
 "transformers.utils.logging.CRITICAL": {
  "data": {
   "shadows": "logging.CRITICAL"
  },
  "type": "import"
 },
 "transformers.utils.logging.DEBUG": {
  "data": {
   "shadows": "logging.DEBUG"
  },
  "type": "import"
 },
 "transformers.utils.logging.ERROR": {
  "data": {
   "shadows": "logging.ERROR"
  },
  "type": "import"
 },
 "transformers.utils.logging.FATAL": {
  "data": {
   "shadows": "logging.FATAL"
  },
  "type": "import"
 },
 "transformers.utils.logging.INFO": {
  "data": {
   "shadows": "logging.INFO"
  },
  "type": "import"
 },
 "transformers.utils.logging.NOTSET": {
  "data": {
   "shadows": "logging.NOTSET"
  },
  "type": "import"
 },
 "transformers.utils.logging.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.utils.logging.WARN": {
  "data": {
   "shadows": "logging.WARN"
  },
  "type": "import"
 },
 "transformers.utils.logging.WARNING": {
  "data": {
   "shadows": "logging.WARNING"
  },
  "type": "import"
 },
 "transformers.utils.logging._configure_library_root_logger": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "transformers.utils.logging._get_default_logging_level",
    "transformers.utils.logging._get_library_root_logger",
    "transformers.utils.logging._lock",
    "transformers.utils.logging.logging"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging._default_log_level": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "transformers.utils.logging._get_default_logging_level": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "transformers.utils.logging._default_log_level",
    "transformers.utils.logging.log_levels",
    "transformers.utils.logging.logging",
    "transformers.utils.logging.os"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging._get_library_name": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "__name__.split",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging._get_library_root_logger": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "transformers.utils.logging._get_library_name",
    "transformers.utils.logging.logging"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging._lock": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "transformers.utils.logging._reset_library_root_logger": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "transformers.utils.logging._get_library_root_logger",
    "transformers.utils.logging._lock",
    "transformers.utils.logging.logging"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging.disable_default_handler": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "transformers.utils.logging._configure_library_root_logger",
    "transformers.utils.logging._get_library_root_logger"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging.disable_propagation": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "transformers.utils.logging._configure_library_root_logger",
    "transformers.utils.logging._get_library_root_logger"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging.enable_default_handler": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "transformers.utils.logging._configure_library_root_logger",
    "transformers.utils.logging._get_library_root_logger"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging.enable_explicit_format": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "transformers.utils.logging._get_library_root_logger",
    "transformers.utils.logging.logging"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging.enable_propagation": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "transformers.utils.logging._configure_library_root_logger",
    "transformers.utils.logging._get_library_root_logger"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging.get_logger": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "str",
    "transformers.utils.logging._configure_library_root_logger",
    "transformers.utils.logging._get_library_name",
    "transformers.utils.logging.logging",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging.get_verbosity": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "int",
    "transformers.utils.logging._configure_library_root_logger",
    "transformers.utils.logging._get_library_root_logger"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging.log_levels": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "transformers.utils.logging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "transformers.utils.logging.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "transformers.utils.logging.reset_format": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "transformers.utils.logging._get_library_root_logger"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging.set_verbosity": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "int",
    "transformers.utils.logging._configure_library_root_logger",
    "transformers.utils.logging._get_library_root_logger"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging.set_verbosity_debug": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "logging.DEBUG",
    "transformers.utils.logging.set_verbosity"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging.set_verbosity_error": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "logging.ERROR",
    "transformers.utils.logging.set_verbosity"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging.set_verbosity_info": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "logging.INFO",
    "transformers.utils.logging.set_verbosity"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging.set_verbosity_warning": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "logging.WARNING",
    "transformers.utils.logging.set_verbosity"
   ]
  },
  "type": "function"
 },
 "transformers.utils.logging.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "transformers.utils.notebook": {
  "data": {},
  "type": "module"
 },
 "transformers.utils.notebook.NotebookProgressBar": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "transformers.utils.notebook.NotebookProgressBar.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "bool",
    "int",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookProgressBar.close": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "IPython.display.HTML"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookProgressBar.display": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "IPython.display.HTML",
    "IPython.display.display",
    "transformers.utils.notebook.html_progress_bar"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookProgressBar.update": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "bool",
    "int",
    "max",
    "min",
    "str",
    "transformers.utils.notebook.time"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookProgressBar.update_bar": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "len",
    "str",
    "transformers.utils.notebook.format_time"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookProgressCallback": {
  "data": {
   "lineno": 268
  },
  "type": "class"
 },
 "transformers.utils.notebook.NotebookProgressCallback.__init__": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookProgressCallback.on_evaluate": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "int",
    "reversed"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookProgressCallback.on_log": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookProgressCallback.on_prediction_step": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "len",
    "transformers.utils.notebook.NotebookProgressBar"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookProgressCallback.on_step_end": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookProgressCallback.on_train_begin": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "transformers.utils.notebook.NotebookTrainingTracker"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookProgressCallback.on_train_end": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookTrainingTracker": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "transformers.utils.notebook.NotebookProgressBar"
   ]
  },
  "type": "class"
 },
 "transformers.utils.notebook.NotebookTrainingTracker.__init__": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookTrainingTracker.add_child": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "transformers.utils.notebook.NotebookProgressBar"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookTrainingTracker.display": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "IPython.display.HTML",
    "IPython.display.display",
    "transformers.utils.notebook.html_progress_bar",
    "transformers.utils.notebook.text_to_html_table"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookTrainingTracker.remove_child": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "transformers.utils.notebook.NotebookTrainingTracker.write_line": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "transformers.utils.notebook.disp": {
  "data": {
   "shadows": "IPython.display"
  },
  "type": "import"
 },
 "transformers.utils.notebook.format_time": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.html_progress_bar": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "transformers.utils.notebook.text_to_html_table": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "float",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "transformers.utils.notebook.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "transformers.utils.sentencepiece_model_pb2": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "float",
    "google.protobuf.descriptor.Descriptor",
    "google.protobuf.descriptor.EnumDescriptor",
    "google.protobuf.descriptor.EnumValueDescriptor",
    "google.protobuf.descriptor.FieldDescriptor",
    "google.protobuf.descriptor.FileDescriptor",
    "google.protobuf.descriptor._ParseOptions",
    "google.protobuf.descriptor_pb2.FieldOptions",
    "google.protobuf.descriptor_pb2.FileOptions",
    "google.protobuf.message.Message",
    "google.protobuf.reflection.GeneratedProtocolMessageType",
    "google.protobuf.symbol_database.Default",
    "transformers.utils.sentencepiece_model_pb2.DESCRIPTOR",
    "transformers.utils.sentencepiece_model_pb2.ModelProto",
    "transformers.utils.sentencepiece_model_pb2.NormalizerSpec",
    "transformers.utils.sentencepiece_model_pb2.SelfTestData",
    "transformers.utils.sentencepiece_model_pb2.TrainerSpec",
    "transformers.utils.sentencepiece_model_pb2._MODELPROTO",
    "transformers.utils.sentencepiece_model_pb2._MODELPROTO_SENTENCEPIECE",
    "transformers.utils.sentencepiece_model_pb2._MODELPROTO_SENTENCEPIECE_TYPE",
    "transformers.utils.sentencepiece_model_pb2._NORMALIZERSPEC",
    "transformers.utils.sentencepiece_model_pb2._SELFTESTDATA",
    "transformers.utils.sentencepiece_model_pb2._SELFTESTDATA_SAMPLE",
    "transformers.utils.sentencepiece_model_pb2._TRAINERSPEC",
    "transformers.utils.sentencepiece_model_pb2._TRAINERSPEC_MODELTYPE",
    "transformers.utils.sentencepiece_model_pb2._b",
    "transformers.utils.sentencepiece_model_pb2._sym_db",
    "transformers.utils.sentencepiece_model_pb2.sys"
   ]
  },
  "type": "module"
 },
 "transformers.utils.sentencepiece_model_pb2.DESCRIPTOR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2.ModelProto": {
  "data": {
   "lineno": 1137
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2.NormalizerSpec": {
  "data": {
   "lineno": 1105
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2.SelfTestData": {
  "data": {
   "lineno": 1116
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2.TrainerSpec": {
  "data": {
   "lineno": 1094
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2._MODELPROTO": {
  "data": {
   "lineno": 986
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2._MODELPROTO_SENTENCEPIECE": {
  "data": {
   "lineno": 911
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2._MODELPROTO_SENTENCEPIECE_TYPE": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2._NORMALIZERSPEC": {
  "data": {
   "lineno": 690
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2._SELFTESTDATA": {
  "data": {
   "lineno": 869
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2._SELFTESTDATA_SAMPLE": {
  "data": {
   "lineno": 815
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2._TRAINERSPEC": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2._TRAINERSPEC_MODELTYPE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2._b": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2._descriptor": {
  "data": {
   "shadows": "google.protobuf.descriptor"
  },
  "type": "import"
 },
 "transformers.utils.sentencepiece_model_pb2._message": {
  "data": {
   "shadows": "google.protobuf.message"
  },
  "type": "import"
 },
 "transformers.utils.sentencepiece_model_pb2._reflection": {
  "data": {
   "shadows": "google.protobuf.reflection"
  },
  "type": "import"
 },
 "transformers.utils.sentencepiece_model_pb2._sym_db": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "transformers.utils.sentencepiece_model_pb2._symbol_database": {
  "data": {
   "shadows": "google.protobuf.symbol_database"
  },
  "type": "import"
 },
 "transformers.utils.sentencepiece_model_pb2.descriptor_pb2": {
  "data": {
   "shadows": "google.protobuf.descriptor_pb2"
  },
  "type": "import"
 },
 "transformers.utils.sentencepiece_model_pb2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 }
}