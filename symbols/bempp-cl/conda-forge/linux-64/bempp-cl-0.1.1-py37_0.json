{
 "bempp": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api": {
  "lineno": null,
  "symbols_in_volume": [
   "bempp.api.utils.DefaultParameters",
   "logging.CRITICAL",
   "logging.DEBUG",
   "logging.ERROR",
   "logging.INFO",
   "logging.WARNING",
   "numba.errors.NumbaDeprecationWarning",
   "numba.errors.NumbaPendingDeprecationWarning",
   "numba.errors.NumbaPerformanceWarning",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "tempfile.mkdtemp",
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "bempp.api.Timer": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.Timer.__enter__": {
  "lineno": 149,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "bempp.api.Timer.__exit__": {
  "lineno": 153,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "bempp.api.Timer.__init__": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api._get_version": {
  "lineno": 231,
  "symbols_in_volume": [
   "bempp.version.__version__"
  ],
  "type": "function"
 },
 "bempp.api._gmsh_path": {
  "lineno": 216,
  "symbols_in_volume": [
   "bempp.api.utils.which",
   "os.name"
  ],
  "type": "function"
 },
 "bempp.api._init_logger": {
  "lineno": 79,
  "symbols_in_volume": [
   "logging.NullHandler",
   "logging.addLevelName",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "bempp.api.assembly": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.assembly.assembler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.assembly.assembler.AssemblerBase": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.assembler.AssemblerBase.__init__": {
  "lineno": 86,
  "symbols_in_volume": [
   "bempp.api.assign_parameters"
  ],
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerBase.assemble": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerBase.domain": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerBase.dual_to_range": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerBase.parameters": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerInterface": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.assembler.AssemblerInterface.__init__": {
  "lineno": 31,
  "symbols_in_volume": [
   "bempp.api.assign_parameters"
  ],
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerInterface.assemble": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerInterface.domain": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerInterface.dual_to_range": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerInterface.parameters": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.assembler._create_assembler": {
  "lineno": 4,
  "symbols_in_volume": [
   "bempp.core.dense_assembler.DenseAssembler",
   "bempp.core.dense_evaluator.DenseEvaluatorAssembler",
   "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler",
   "bempp.core.singular_assembler.SingularAssembler",
   "bempp.core.sparse_assembler.SparseAssembler"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.assembly.blocked_operator.BlockedDiscreteOperator": {
  "lineno": 592,
  "symbols_in_volume": [
   "bempp.api.assembly.discrete_boundary_operator._DiscreteOperatorBase"
  ],
  "type": "class"
 },
 "bempp.api.assembly.blocked_operator.BlockedDiscreteOperator.A": {
  "lineno": 707,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedDiscreteOperator.__getitem__": {
  "lineno": 665,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedDiscreteOperator.__init__": {
  "lineno": 595,
  "symbols_in_volume": [
   "bempp.api.assembly.discrete_boundary_operator.ZeroDiscreteBoundaryOperator",
   "bempp.api.utils.data_types.combined_type",
   "numpy.array",
   "numpy.empty",
   "numpy.ndarray",
   "numpy.object",
   "numpy.ones",
   "numpy.sum"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedDiscreteOperator._adjoint": {
  "lineno": 721,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedDiscreteOperator._fill_complete": {
  "lineno": 669,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedDiscreteOperator._get_column_dimensions": {
  "lineno": 704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedDiscreteOperator._get_row_dimensions": {
  "lineno": 701,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedDiscreteOperator._matmat": {
  "lineno": 674,
  "symbols_in_volume": [
   "bempp.api.utils.data_types.combined_type",
   "numpy.imag",
   "numpy.iscomplexobj",
   "numpy.real",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedDiscreteOperator._transpose": {
  "lineno": 717,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperator": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperator.__getitem__": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperator.__init__": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.object"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperator.__setitem__": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperator._assemble": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperator._fill_complete": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperator.domain_spaces": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperator.dual_to_range_spaces": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperator.range_spaces": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperatorBase": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperatorBase.__add__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperatorBase.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperatorBase.__matmul__": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperatorBase.__mul__": {
  "lineno": 117,
  "symbols_in_volume": [
   "bempp.api.assembly.grid_function.GridFunction",
   "collections.abc.Iterable",
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperatorBase.__neg__": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperatorBase.__rmul__": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperatorBase.__sub__": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperatorBase.domain_spaces": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperatorBase.dual_to_range_spaces": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperatorBase.ndims": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperatorBase.range_spaces": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperatorBase.strong_form": {
  "lineno": 41,
  "symbols_in_volume": [
   "bempp.api.assembly.discrete_boundary_operator.InverseSparseDiscreteBoundaryOperator",
   "bempp.api.operators.boundary.sparse.identity",
   "numpy.empty"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.BlockedOperatorBase.weak_form": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.GeneralizedBlockedOperator": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.blocked_operator.GeneralizedBlockedOperator.__init__": {
  "lineno": 278,
  "symbols_in_volume": [
   "bempp.api.assembly.boundary_operator.BoundaryOperator",
   "collections.abc.Iterable"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.GeneralizedBlockedOperator.__init__.make_blocked": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.GeneralizedBlockedOperator._assemble": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.GeneralizedBlockedOperator.domain_spaces": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.GeneralizedBlockedOperator.dual_to_range_spaces": {
  "lineno": 365,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.GeneralizedBlockedOperator.range_spaces": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.GeneralizedDiscreteBlockedOperator": {
  "lineno": 518,
  "symbols_in_volume": [
   "bempp.api.assembly.discrete_boundary_operator._DiscreteOperatorBase"
  ],
  "type": "class"
 },
 "bempp.api.assembly.blocked_operator.GeneralizedDiscreteBlockedOperator.A": {
  "lineno": 560,
  "symbols_in_volume": [
   "numpy.block"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.GeneralizedDiscreteBlockedOperator.__init__": {
  "lineno": 521,
  "symbols_in_volume": [
   "bempp.api.utils.data_types.combined_type"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.GeneralizedDiscreteBlockedOperator._matmat": {
  "lineno": 569,
  "symbols_in_volume": [
   "bempp.api.utils.data_types.combined_type",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.MultitraceOperatorFromAssembler": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.blocked_operator.MultitraceOperatorFromAssembler.__init__": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.MultitraceOperatorFromAssembler._assemble": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.MultitraceOperatorFromAssembler.domain_spaces": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.MultitraceOperatorFromAssembler.dual_to_range_spaces": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.MultitraceOperatorFromAssembler.range_spaces": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.ProductBlockedOperator": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.blocked_operator.ProductBlockedOperator.__init__": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.ProductBlockedOperator._assemble": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.ProductBlockedOperator.domain_spaces": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.ProductBlockedOperator.dual_to_range_spaces": {
  "lineno": 477,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.ProductBlockedOperator.range_spaces": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.ScaledBlockedOperator": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.blocked_operator.ScaledBlockedOperator.__init__": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.ScaledBlockedOperator._assemble": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.ScaledBlockedOperator.domain_spaces": {
  "lineno": 512,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.ScaledBlockedOperator.dual_to_range_spaces": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.ScaledBlockedOperator.range_spaces": {
  "lineno": 502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.SumBlockedOperator": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.blocked_operator.SumBlockedOperator.__init__": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.SumBlockedOperator._assemble": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.SumBlockedOperator.domain_spaces": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.SumBlockedOperator.dual_to_range_spaces": {
  "lineno": 443,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.SumBlockedOperator.range_spaces": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator._prod": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator._sum": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.coefficients_from_grid_functions_list": {
  "lineno": 730,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.promote_types",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.grid_function_list_from_coefficients": {
  "lineno": 792,
  "symbols_in_volume": [
   "bempp.api.GridFunction"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.grid_function_list_from_projections": {
  "lineno": 818,
  "symbols_in_volume": [
   "bempp.api.GridFunction"
  ],
  "type": "function"
 },
 "bempp.api.assembly.blocked_operator.projections_from_grid_functions_list": {
  "lineno": 756,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.promote_types",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperator": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperator.__add__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperator.__init__": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperator.__matmul__": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperator.__mul__": {
  "lineno": 66,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperator.__neg__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperator.__rmul__": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperator.__sub__": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperator.domain": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperator.dual_to_range": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperator.parameters": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperator.range": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperator.strong_form": {
  "lineno": 46,
  "symbols_in_volume": [
   "bempp.api.assembly.discrete_boundary_operator.InverseSparseDiscreteBoundaryOperator",
   "bempp.api.operators.boundary.sparse.identity"
  ],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperator.weak_form": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperatorWithAssembler": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperatorWithAssembler.__init__": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperatorWithAssembler._assemble": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperatorWithAssembler.assembler": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.BoundaryOperatorWithAssembler.descriptor": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.MultiplicationOperator": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.boundary_operator.MultiplicationOperator.__init__": {
  "lineno": 262,
  "symbols_in_volume": [
   "bempp.api.utils.helpers.assign_parameters"
  ],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.MultiplicationOperator._assemble": {
  "lineno": 329,
  "symbols_in_volume": [
   "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator",
   "bempp.api.integration.triangle_gauss.rule",
   "bempp.api.space.space.return_compatible_representation",
   "numpy.arange",
   "numpy.conj",
   "numpy.flatnonzero",
   "numpy.multiply",
   "numpy.newaxis",
   "numpy.repeat",
   "numpy.sum",
   "numpy.tensordot",
   "numpy.tile",
   "numpy.zeros",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.ZeroBoundaryOperator": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.boundary_operator.ZeroBoundaryOperator.__iadd__": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.ZeroBoundaryOperator.__init__": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.ZeroBoundaryOperator.__isub__": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator.ZeroBoundaryOperator._assemble": {
  "lineno": 222,
  "symbols_in_volume": [
   "bempp.api.assembly.discrete_boundary_operator.ZeroDiscreteBoundaryOperator"
  ],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator._ProductBoundaryOperator": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.boundary_operator._ProductBoundaryOperator.__init__": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator._ProductBoundaryOperator._assemble": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator._ScaledBoundaryOperator": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.boundary_operator._ScaledBoundaryOperator.__init__": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator._ScaledBoundaryOperator._assemble": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator._SumBoundaryOperator": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.boundary_operator._SumBoundaryOperator.__init__": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.boundary_operator._SumBoundaryOperator._assemble": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.assembly.discrete_boundary_operator.DenseDiscreteBoundaryOperator": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.discrete_boundary_operator.DenseDiscreteBoundaryOperator.A": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DenseDiscreteBoundaryOperator.__add__": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DenseDiscreteBoundaryOperator.__init__": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DenseDiscreteBoundaryOperator.__mul__": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DenseDiscreteBoundaryOperator.__neg__": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DenseDiscreteBoundaryOperator.__rmul__": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DenseDiscreteBoundaryOperator._adjoint": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DenseDiscreteBoundaryOperator._matmat": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.imag",
   "numpy.iscomplexobj",
   "numpy.real"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DenseDiscreteBoundaryOperator._transpose": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DenseDiscreteBoundaryOperator.dot": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.iscomplexobj",
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DiscreteRankOneOperator": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.discrete_boundary_operator.DiscreteRankOneOperator.A": {
  "lineno": 403,
  "symbols_in_volume": [
   "numpy.outer"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DiscreteRankOneOperator.__init__": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DiscreteRankOneOperator._adjoint": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DiscreteRankOneOperator._matvec": {
  "lineno": 387,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.outer"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DiscreteRankOneOperator._rmatvec": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.DiscreteRankOneOperator._transpoe": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.GenericDiscreteBoundaryOperator": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.discrete_boundary_operator.GenericDiscreteBoundaryOperator.A": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.eye"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.GenericDiscreteBoundaryOperator.__init__": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.GenericDiscreteBoundaryOperator._matvec": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.imag",
   "numpy.iscomplexobj",
   "numpy.real"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.InverseSparseDiscreteBoundaryOperator": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.discrete_boundary_operator.InverseSparseDiscreteBoundaryOperator.A": {
  "lineno": 323,
  "symbols_in_volume": [
   "numpy.eye"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.InverseSparseDiscreteBoundaryOperator.__init__": {
  "lineno": 310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.InverseSparseDiscreteBoundaryOperator._matmat": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator.A": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator.__add__": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator.__init__": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator.__mul__": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator.__neg__": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator.__rmul__": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator._adjoint": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator._matmat": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.imag",
   "numpy.iscomplexobj",
   "numpy.real"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator._transpose": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator.dot": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.ZeroDiscreteBoundaryOperator": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.discrete_boundary_operator.ZeroDiscreteBoundaryOperator.__init__": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.ZeroDiscreteBoundaryOperator._matmat": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._DiscreteOperatorBase": {
  "lineno": 11,
  "symbols_in_volume": [
   "scipy.sparse.linalg.interface.LinearOperator"
  ],
  "type": "class"
 },
 "bempp.api.assembly.discrete_boundary_operator._DiscreteOperatorBase.__add__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._DiscreteOperatorBase.__init__": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._DiscreteOperatorBase.__mul__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._DiscreteOperatorBase.__neg__": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._DiscreteOperatorBase.__rmul__": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._DiscreteOperatorBase.__sub__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._DiscreteOperatorBase.dot": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._ProductDiscreteOperator": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.discrete_boundary_operator._ProductDiscreteOperator.A": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._ProductDiscreteOperator.__init__": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.find_common_type"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._ProductDiscreteOperator._matvec": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._ScaledDiscreteOperator": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.discrete_boundary_operator._ScaledDiscreteOperator.A": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._ScaledDiscreteOperator.__init__": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.find_common_type"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._ScaledDiscreteOperator._matvec": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._Solver": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.discrete_boundary_operator._Solver.__init__": {
  "lineno": 442,
  "symbols_in_volume": [
   "bempp.helpers.timeit",
   "mkl_pardiso_solve.PardisoInterface",
   "scipy.sparse.csc_matrix",
   "scipy.sparse.linalg.splu",
   "time.time"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._Solver.dtype": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._Solver.shape": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._Solver.solve": {
  "lineno": 509,
  "symbols_in_volume": [
   "bempp.helpers.timeit",
   "numpy.imag",
   "numpy.iscomplexobj",
   "numpy.real"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._SumDiscreteOperator": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.discrete_boundary_operator._SumDiscreteOperator.A": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._SumDiscreteOperator.__init__": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.find_common_type"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._SumDiscreteOperator._matvec": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator._get_dense": {
  "lineno": 528,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "bempp.api.assembly.discrete_boundary_operator.as_matrix": {
  "lineno": 409,
  "symbols_in_volume": [
   "numpy.eye"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.assembly.grid_function.GridFunction": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.grid_function.GridFunction.__add__": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.__div__": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.__init__": {
  "lineno": 108,
  "symbols_in_volume": [
   "bempp.api.integration.triangle_gauss.rule",
   "bempp.api.space.space.return_compatible_representation",
   "bempp.api.utils.helpers.assign_parameters",
   "numpy.all",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.__mul__": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.__neg__": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.__rmul__": {
  "lineno": 568,
  "symbols_in_volume": [
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.__sub__": {
  "lineno": 585,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.__truediv__": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.coefficients": {
  "lineno": 305,
  "symbols_in_volume": [
   "bempp.api.assembly.discrete_boundary_operator.InverseSparseDiscreteBoundaryOperator",
   "bempp.api.operators.boundary.sparse.identity"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.component_count": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.dtype": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.dual_space": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.evaluate": {
  "lineno": 445,
  "symbols_in_volume": [
   "numpy.tensordot"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.evaluate_on_element_centers": {
  "lineno": 454,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.evaluate_on_vertices": {
  "lineno": 467,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.from_ones": {
  "lineno": 600,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.from_random": {
  "lineno": 591,
  "symbols_in_volume": [
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.from_zeros": {
  "lineno": 609,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.grid_coefficients": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.imag": {
  "lineno": 357,
  "symbols_in_volume": [
   "numpy.imag"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.integrate": {
  "lineno": 499,
  "symbols_in_volume": [
   "bempp.api.integration.triangle_gauss.rule"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.l2_norm": {
  "lineno": 520,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.parameters": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.plot": {
  "lineno": 418,
  "symbols_in_volume": [
   "bempp.api.external.viewers.visualize"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.project_to_space": {
  "lineno": 410,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.sparse.identity"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.projections": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.real": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.real"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.representation": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.space": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.grid_function._integrate": {
  "lineno": 619,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.empty",
   "numpy.float64",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function._project_function": {
  "lineno": 669,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.empty",
   "numpy.float64",
   "numpy.sum"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.complex_callable": {
  "lineno": 22,
  "symbols_in_volume": [
   "numba.complex128",
   "numba.float64",
   "numba.njit",
   "numba.uint32",
   "numba.void"
  ],
  "type": "function"
 },
 "bempp.api.assembly.grid_function.real_callable": {
  "lineno": 10,
  "symbols_in_volume": [
   "numba.float64",
   "numba.njit",
   "numba.uint32",
   "numba.void"
  ],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.assembly.potential_operator.PotentialOperator": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.potential_operator.PotentialOperator.__add__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator.PotentialOperator.__init__": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator.PotentialOperator.__mul__": {
  "lineno": 45,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator.PotentialOperator.__neg__": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator.PotentialOperator.__rmul__": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator.PotentialOperator.__sub__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator.PotentialOperator._is_compatible": {
  "lineno": 29,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator.PotentialOperator.component_count": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator.PotentialOperator.evaluate": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator.PotentialOperator.evaluation_points": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator.PotentialOperator.space": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator._ScaledPotentialOperator": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.potential_operator._ScaledPotentialOperator.__init__": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator._ScaledPotentialOperator.component_count": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator._ScaledPotentialOperator.evaluate": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator._ScaledPotentialOperator.evaluation_points": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator._ScaledPotentialOperator.space": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator._SumPotentialOperator": {
  "lineno": 128,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.assembly.potential_operator._SumPotentialOperator.__init__": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator._SumPotentialOperator.component_count": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator._SumPotentialOperator.evaluate": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator._SumPotentialOperator.evaluation_points": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.assembly.potential_operator._SumPotentialOperator.space": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.benchmark": {
  "lineno": 171,
  "symbols_in_volume": [
   "os.path.join",
   "pytest.main"
  ],
  "type": "function"
 },
 "bempp.api.enable_console_logging": {
  "lineno": 102,
  "symbols_in_volume": [
   "bempp.api.utils.pool._MY_ID",
   "bempp.api.utils.pool.is_worker",
   "logging.Formatter",
   "logging.StreamHandler"
  ],
  "type": "function"
 },
 "bempp.api.external": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.external.fenics": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.external.fenics.FenicsOperator": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.external.fenics.FenicsOperator.__init__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.external.fenics.FenicsOperator.weak_form": {
  "lineno": 52,
  "symbols_in_volume": [
   "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator",
   "dolfin.as_backend_type",
   "dolfin.assemble",
   "dolfin.parameters",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "bempp.api.external.fenics.boundary_grid_from_fenics_mesh": {
  "lineno": 4,
  "symbols_in_volume": [
   "bempp.api.grid_from_element_data",
   "dolfin.BoundaryMesh"
  ],
  "type": "function"
 },
 "bempp.api.external.fenics.fenics_space_info": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.external.fenics.fenics_to_bempp_trace_data": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.external.fenics.p1_trace": {
  "lineno": 74,
  "symbols_in_volume": [
   "dolfin.BoundaryMesh",
   "dolfin.dof_to_vertex_map",
   "numpy.arange",
   "numpy.int64",
   "numpy.ones",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "bempp.api.external.viewers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.external.viewers.enable_gmsh_viewer": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.external.viewers.enable_jupyter_viewer": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.external.viewers.enable_paraview_viewer": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.external.viewers.visualize": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.imag",
   "numpy.log",
   "numpy.real",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "bempp.api.external.viewers.visualize_with_gmsh": {
  "lineno": 117,
  "symbols_in_volume": [
   "bempp.api.GMSH_PATH",
   "bempp.api.GridFunction",
   "bempp.api.TMP_PATH",
   "bempp.api.export",
   "bempp.api.grid.grid.Grid",
   "subprocess.Popen",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "bempp.api.external.viewers.visualize_with_jupyter_notebook": {
  "lineno": 58,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.grid.grid.Grid",
   "matplotlib.colors.Normalize",
   "matplotlib.pyplot.get_cmap",
   "numpy.array",
   "numpy.max",
   "numpy.min",
   "numpy.real",
   "numpy.rint",
   "numpy.zeros",
   "plotly.figure_factory.create_trisurf",
   "plotly.graph_objs.layout.Scene",
   "plotly.offline.init_notebook_mode",
   "plotly.offline.iplot"
  ],
  "type": "function"
 },
 "bempp.api.external.viewers.visualize_with_paraview": {
  "lineno": 160,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.TMP_PATH",
   "bempp.api.export",
   "bempp.api.grid.grid.Grid",
   "bempp.api.utils.which",
   "os.name",
   "subprocess.Popen",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "bempp.api.flush_log": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.fmm.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.fmm.common.LeafNode": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.fmm.common.LeafNode.__init__": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64"
  ],
  "type": "function"
 },
 "bempp.api.fmm.common.LeafNode.colleagues": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.common.LeafNode.identifier": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.common.LeafNode.source_ids": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.common.LeafNode.target_ids": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.common.grid_to_points": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.common.grid_to_points_impl": {
  "lineno": 233,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.empty",
   "numpy.expand_dims",
   "numpy.float64"
  ],
  "type": "function"
 },
 "bempp.api.fmm.common.map_space_to_points": {
  "lineno": 39,
  "symbols_in_volume": [
   "scipy.sparse.coo_matrix",
   "scipy.sparse.linalg.aslinearoperator"
  ],
  "type": "function"
 },
 "bempp.api.fmm.common.map_space_to_points_impl": {
  "lineno": 149,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.arange",
   "numpy.empty",
   "numpy.float64",
   "numpy.int64",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "bempp.api.fmm.exafmm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.fmm.exafmm.Exafmm": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.fmm.exafmm.Exafmm.__init__": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm._compute_near_field_matrix": {
  "lineno": 198,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.laplace.single_layer",
   "bempp.core.near_field_assembler.NearFieldAssembler"
  ],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm._evaluate": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm._evaluate_far_field": {
  "lineno": 225,
  "symbols_in_volume": [
   "exafmm_laplace.clear",
   "exafmm_laplace.evaluate",
   "exafmm_laplace.update"
  ],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm._setup": {
  "lineno": 114,
  "symbols_in_volume": [
   "bempp.api.integration.triangle_gauss.rule",
   "exafmm_laplace.build_list",
   "exafmm_laplace.build_tree",
   "exafmm_laplace.configure",
   "exafmm_laplace.init_sources",
   "exafmm_laplace.init_targets",
   "exafmm_laplace.precompute",
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.as_linear_operator": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.float64",
   "scipy.sparse.linalg.LinearOperator"
  ],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.domain": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.dual_to_range": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.leaf_nodes": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.local_points": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.source_grid": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.source_transform": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.sources": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.target_grid": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.target_transform": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.targets": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.fmm.exafmm.compute_max_level": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.log2",
   "numpy.max",
   "numpy.maximum",
   "numpy.minimum"
  ],
  "type": "function"
 },
 "bempp.api.grid": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.grid.grid": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "numpy.array"
  ],
  "type": "module"
 },
 "bempp.api.grid.grid.Edge": {
  "lineno": 860,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.grid.grid.Edge.__init__": {
  "lineno": 863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Edge.geometry": {
  "lineno": 874,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Edge.index": {
  "lineno": 869,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.EdgeGeometry": {
  "lineno": 841,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.grid.grid.EdgeGeometry.__init__": {
  "lineno": 844,
  "symbols_in_volume": [
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.EdgeGeometry.corners": {
  "lineno": 849,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.EdgeGeometry.volume": {
  "lineno": 854,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Element": {
  "lineno": 757,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.grid.grid.Element.__eq__": {
  "lineno": 810,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Element.__init__": {
  "lineno": 760,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Element.domain_index": {
  "lineno": 781,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Element.geometry": {
  "lineno": 775,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Element.grid": {
  "lineno": 770,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Element.index": {
  "lineno": 765,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Element.sub_entity_iterator": {
  "lineno": 786,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Element.sub_entity_iterator.edge_iterator": {
  "lineno": 789,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Element.sub_entity_iterator.vertex_iterator": {
  "lineno": 794,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.ElementGeometry": {
  "lineno": 703,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.grid.grid.ElementGeometry.__init__": {
  "lineno": 706,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.ElementGeometry.centroid": {
  "lineno": 747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.ElementGeometry.corners": {
  "lineno": 712,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.ElementGeometry.diameter": {
  "lineno": 742,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.ElementGeometry.integration_element": {
  "lineno": 722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.ElementGeometry.jacobian": {
  "lineno": 717,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.ElementGeometry.jacobian_inverse_transposed": {
  "lineno": 727,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.ElementGeometry.local2global": {
  "lineno": 752,
  "symbols_in_volume": [
   "numpy.expand_dims"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.ElementGeometry.normal": {
  "lineno": 732,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.ElementGeometry.volume": {
  "lineno": 737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.grid.grid.Grid.__init__": {
  "lineno": 17,
  "symbols_in_volume": [
   "bempp.api.log",
   "bempp.api.utils.helpers.create_unique_id",
   "bempp.api.utils.pool.is_initialised",
   "bempp.api.utils.pool.is_worker",
   "bempp.helpers.timeit"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid._compute_boundary_information": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bool",
   "numpy.flatnonzero",
   "numpy.ones",
   "numpy.ravel",
   "numpy.repeat",
   "numpy.zeros",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid._compute_edge_neighbors": {
  "lineno": 631,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid._compute_geometric_quantities": {
  "lineno": 535,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cross",
   "numpy.empty",
   "numpy.expand_dims",
   "numpy.linalg.det",
   "numpy.linalg.inv",
   "numpy.linalg.norm",
   "numpy.repeat",
   "numpy.reshape",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.swapaxes",
   "numpy.tile"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid._compute_vertex_neighbors": {
  "lineno": 435,
  "symbols_in_volume": [
   "bempp.helpers.IndexList"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid._enumerate_edges": {
  "lineno": 458,
  "symbols_in_volume": [
   "numba.typed.Dict.empty",
   "numba.types.containers.UniTuple",
   "numba.types.int64"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid._get_element_adjacency_for_edges_and_vertices": {
  "lineno": 482,
  "symbols_in_volume": [
   "bempp.helpers.IndexList"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid._normalize_and_assign_input": {
  "lineno": 447,
  "symbols_in_volume": [
   "bempp.api.utils.helpers.align_array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid._scatter": {
  "lineno": 310,
  "symbols_in_volume": [
   "bempp.api.utils.pool.execute",
   "bempp.api.utils.pool.to_buffer"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.as_array": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.barycentric_refinement": {
  "lineno": 298,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.bounding_box": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.centroids": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.data": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.device_interfaces": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.diameters": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.domain_indices": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.edge_adjacency": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.edge_neighbors": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.edge_on_boundary": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.edges": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.element_edges": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.element_neighbors": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.element_to_element_matrix": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.element_to_vertex_matrix": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.elements": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.entity_count": {
  "lineno": 321,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.entity_iterator": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.entity_iterator.edge_iterator": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.entity_iterator.element_iterator": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.entity_iterator.vertex_iterator": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.get_element": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.id": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.integration_elements": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.jacobian_inverse_transposed": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.jacobians": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.maximum_element_diameter": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.minimum_element_diameter": {
  "lineno": 248,
  "symbols_in_volume": [
   "numpy.min"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.normals": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.number_of_edges": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.number_of_elements": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.number_of_vertices": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.plot": {
  "lineno": 333,
  "symbols_in_volume": [
   "bempp.api.external.viewers.visualize"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.push_to_device": {
  "lineno": 413,
  "symbols_in_volume": [
   "bempp.core.device_grid_interface.DeviceGridInterface"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.refine": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.vertex_adjacency": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.vertex_neighbors": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.vertex_on_boundary": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.vertices": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Grid.volumes": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.GridData": {
  "lineno": 643,
  "symbols_in_volume": [
   "numba.boolean",
   "numba.float64",
   "numba.jitclass",
   "numba.uint32"
  ],
  "type": "class"
 },
 "bempp.api.grid.grid.GridData.__init__": {
  "lineno": 663,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.GridData.local2global": {
  "lineno": 694,
  "symbols_in_volume": [
   "numpy.expand_dims"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.Vertex": {
  "lineno": 822,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.grid.grid.Vertex.__init__": {
  "lineno": 825,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Vertex.geometry": {
  "lineno": 835,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.Vertex.index": {
  "lineno": 830,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid._compare_array_to_value": {
  "lineno": 910,
  "symbols_in_volume": [
   "numba.njit",
   "numba.types.int32"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid._create_barycentric_connectivity_array": {
  "lineno": 1133,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.empty",
   "numpy.float64",
   "numpy.ones",
   "numpy.sum",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid._element_filter": {
  "lineno": 1076,
  "symbols_in_volume": [
   "numpy.argwhere"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid._find_edge_adjacency": {
  "lineno": 1029,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid._find_first_common_array_index_pair_from_position": {
  "lineno": 923,
  "symbols_in_volume": [
   "numba.njit",
   "numba.types.int32"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid._find_two_common_array_index_pairs": {
  "lineno": 946,
  "symbols_in_volume": [
   "numba.njit",
   "numba.types.int32",
   "numpy.empty",
   "numpy.int32"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid._find_vertex_adjacency": {
  "lineno": 1000,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid._get_element_to_element_vertex_count": {
  "lineno": 1060,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid._get_shared_edge_information_for_two_elements": {
  "lineno": 976,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid._get_shared_vertex_information_for_two_elements": {
  "lineno": 963,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid._grid_scatter_worker": {
  "lineno": 1404,
  "symbols_in_volume": [
   "bempp.api.grid.grid.Grid",
   "bempp.api.log",
   "bempp.api.utils.pool.from_buffer",
   "bempp.api.utils.pool.get_id",
   "bempp.api.utils.pool.has_key",
   "bempp.api.utils.pool.insert_data"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid._numba_enumerate_edges": {
  "lineno": 1366,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.array",
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid._sort_values": {
  "lineno": 1092,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid._vertices_from_edge_index": {
  "lineno": 1100,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.barycentric_refinement": {
  "lineno": 1203,
  "symbols_in_volume": [
   "numpy.repeat"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.enumerate_vertex_adjacent_elements": {
  "lineno": 1277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.enumerate_vertex_adjacent_elements.sort_neighbors": {
  "lineno": 1300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.get_element_to_element_matrix": {
  "lineno": 898,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.grid.get_element_to_vertex_matrix": {
  "lineno": 881,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones",
   "numpy.ravel",
   "numpy.repeat",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.grid_from_segments": {
  "lineno": 1113,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.bool",
   "numpy.int",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.grid.grid.union": {
  "lineno": 1217,
  "symbols_in_volume": [
   "bempp.api.grid.grid.Grid",
   "numpy.empty"
  ],
  "type": "function"
 },
 "bempp.api.grid.io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.grid.io._transform_array": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.expand_dims",
   "numpy.imag",
   "numpy.log",
   "numpy.real",
   "numpy.sqrt",
   "numpy.squeeze",
   "numpy.sum"
  ],
  "type": "function"
 },
 "bempp.api.grid.io.export": {
  "lineno": 32,
  "symbols_in_volume": [
   "meshio.write_points_cells",
   "numpy.array",
   "numpy.imag",
   "numpy.iscomplexobj",
   "numpy.real",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "bempp.api.grid.io.import_grid": {
  "lineno": 6,
  "symbols_in_volume": [
   "bempp.api.grid.grid.Grid",
   "meshio.read"
  ],
  "type": "function"
 },
 "bempp.api.grid.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.grid.test.test_grid": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.grid.test.test_grid.test_as_array": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.test_edge_adjacency": {
  "lineno": 44,
  "symbols_in_volume": [
   "bempp.api.grid.grid.get_element_to_element_matrix",
   "numpy.count_nonzero",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.test_element_volume": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.test_grid_number_of_elements": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.test_integration_element": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.test_number_of_edges": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.test_number_of_vertices": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.test_vertex_adjacency": {
  "lineno": 78,
  "symbols_in_volume": [
   "bempp.api.grid.grid.get_element_to_element_matrix",
   "numpy.count_nonzero"
  ],
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.two_element_geometries": {
  "lineno": 9,
  "symbols_in_volume": [
   "pytest.fixture",
   "pytest.mark.usefixtures"
  ],
  "type": "function"
 },
 "bempp.api.integration": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.integration.duffy_collocation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.integration.duffy_collocation.duffy_rule_on_reference_triangle": {
  "lineno": 6,
  "symbols_in_volume": [
   "bempp.api.integration.gauss.rule",
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "bempp.api.integration.duffy_collocation.singular_collocation_rule_piecewise_const": {
  "lineno": 35,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.empty",
   "numpy.float64",
   "numpy.hstack",
   "numpy.linalg.det"
  ],
  "type": "function"
 },
 "bempp.api.integration.duffy_galerkin": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.integration.duffy_galerkin.number_of_quadrature_points": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.integration.duffy_galerkin.remap_points_shared_edge": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.require",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.integration.duffy_galerkin.remap_points_shared_vertex": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "bempp.api.integration.duffy_galerkin.rule": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "bempp.api.integration.gauss": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "bempp.api.integration.gauss.rule": {
  "lineno": 1040,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.integration.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.integration.test.test_duffy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.integration.test.test_duffy.test_number_of_quad_points_for_coincident_case": {
  "lineno": 7,
  "symbols_in_volume": [
   "bempp.api.integration.duffy_galerkin.number_of_quadrature_points"
  ],
  "type": "function"
 },
 "bempp.api.integration.test.test_duffy.test_number_of_quad_points_for_edge_adjacent_case": {
  "lineno": 16,
  "symbols_in_volume": [
   "bempp.api.integration.duffy_galerkin.number_of_quadrature_points"
  ],
  "type": "function"
 },
 "bempp.api.integration.test.test_duffy.test_number_of_quad_points_for_vertex_adjacent_case": {
  "lineno": 27,
  "symbols_in_volume": [
   "bempp.api.integration.duffy_galerkin.number_of_quadrature_points"
  ],
  "type": "function"
 },
 "bempp.api.integration.triangle_gauss": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "bempp.api.integration.triangle_gauss.rule": {
  "lineno": 2926,
  "symbols_in_volume": [
   "numpy.asfortranarray",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "bempp.api.linalg": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.linalg.direct_solvers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.linalg.direct_solvers.compute_lu_factors": {
  "lineno": 5,
  "symbols_in_volume": [
   "scipy.linalg.lu_factor"
  ],
  "type": "function"
 },
 "bempp.api.linalg.direct_solvers.lu": {
  "lineno": 19,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.assembly.blocked_operator.BlockedOperatorBase",
   "bempp.api.assembly.blocked_operator.grid_function_list_from_coefficients",
   "bempp.api.assembly.blocked_operator.projections_from_grid_functions_list",
   "scipy.linalg.lu_factor",
   "scipy.linalg.lu_solve",
   "scipy.linalg.solve"
  ],
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.linalg.iterative_solvers._gmres_block_op_imp": {
  "lineno": 225,
  "symbols_in_volume": [
   "bempp.api.assembly.blocked_operator.coefficients_from_grid_functions_list",
   "bempp.api.assembly.blocked_operator.grid_function_list_from_coefficients",
   "bempp.api.assembly.blocked_operator.projections_from_grid_functions_list",
   "time.time"
  ],
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers._gmres_single_op_imp": {
  "lineno": 163,
  "symbols_in_volume": [
   "bempp.api.assembly.grid_function.GridFunction",
   "time.time"
  ],
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers._it_counter": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.linalg.iterative_solvers._it_counter.__call__": {
  "lineno": 21,
  "symbols_in_volume": [
   "bempp.api.log",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers._it_counter.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers._it_counter.count": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers._it_counter.residuals": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers.cg": {
  "lineno": 94,
  "symbols_in_volume": [
   "bempp.api.assembly.boundary_operator.BoundaryOperator",
   "bempp.api.assembly.grid_function.GridFunction",
   "time.time"
  ],
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers.gmres": {
  "lineno": 45,
  "symbols_in_volume": [
   "bempp.api.assembly.blocked_operator.BlockedOperatorBase",
   "bempp.api.assembly.boundary_operator.BoundaryOperator"
  ],
  "type": "function"
 },
 "bempp.api.log": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.operators": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "bempp.api.operators._add_wavenumber": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.imag",
   "numpy.iscomplexobj",
   "numpy.real"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.boundary.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.boundary.common.create_multitrace_operator": {
  "lineno": 42,
  "symbols_in_volume": [
   "bempp.api.assembly.assembler",
   "bempp.api.assembly.assembler.AssemblerInterface",
   "bempp.api.assembly.blocked_operator.MultitraceOperatorFromAssembler",
   "bempp.api.default_device",
   "bempp.api.get_precision",
   "bempp.api.operators.MultitraceOperatorDescriptor"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.common.create_operator": {
  "lineno": 9,
  "symbols_in_volume": [
   "bempp.api.assembly.assembler",
   "bempp.api.assembly.assembler.AssemblerInterface",
   "bempp.api.assembly.boundary_operator.BoundaryOperatorWithAssembler",
   "bempp.api.default_device",
   "bempp.api.get_precision",
   "bempp.api.operators.OperatorDescriptor"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.helmholtz": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.boundary.helmholtz.adjoint_double_layer": {
  "lineno": 95,
  "symbols_in_volume": [
   "bempp.api.operators._add_wavenumber",
   "bempp.api.operators.boundary.common.create_operator",
   "numpy.imag",
   "numpy.real"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.helmholtz.double_layer": {
  "lineno": 51,
  "symbols_in_volume": [
   "bempp.api.operators._add_wavenumber",
   "bempp.api.operators.boundary.common.create_operator",
   "numpy.imag",
   "numpy.real"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.helmholtz.hypersingular": {
  "lineno": 144,
  "symbols_in_volume": [
   "bempp.api.operators._add_wavenumber",
   "bempp.api.operators.boundary.common.create_operator",
   "numpy.imag",
   "numpy.real"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.helmholtz.multitrace_operator": {
  "lineno": 188,
  "symbols_in_volume": [
   "bempp.api.assembly.blocked_operator.BlockedOperator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.helmholtz.single_layer": {
  "lineno": 7,
  "symbols_in_volume": [
   "bempp.api.operators._add_wavenumber",
   "bempp.api.operators.boundary.common.create_operator",
   "numpy.imag",
   "numpy.real"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.laplace": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.boundary.laplace.adjoint_double_layer": {
  "lineno": 53,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.laplace.double_layer": {
  "lineno": 29,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.laplace.hypersingular": {
  "lineno": 77,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.laplace.single_layer": {
  "lineno": 5,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.maxwell": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.boundary.maxwell._multitrace_operator_impl": {
  "lineno": 232,
  "symbols_in_volume": [
   "bempp.api.assembly.blocked_operator.BlockedOperator",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.maxwell.electric_field": {
  "lineno": 7,
  "symbols_in_volume": [
   "bempp.api.operators._add_wavenumber",
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.maxwell.magnetic_field": {
  "lineno": 43,
  "symbols_in_volume": [
   "bempp.api.operators._add_wavenumber",
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.maxwell.multitrace_operator": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.operators.boundary.modified_helmholtz": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.boundary.modified_helmholtz.adjoint_double_layer": {
  "lineno": 61,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.modified_helmholtz.double_layer": {
  "lineno": 33,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.modified_helmholtz.hypersingular": {
  "lineno": 89,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.modified_helmholtz.single_layer": {
  "lineno": 5,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.sparse": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.boundary.sparse._rwg0_rwg0_identity": {
  "lineno": 114,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.sparse._rwg0_snc0_identity": {
  "lineno": 85,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.sparse._snc0_rwg0_identity": {
  "lineno": 56,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.sparse._snc0_snc0_identity": {
  "lineno": 143,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.sparse.identity": {
  "lineno": 5,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.common.create_operator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.sparse.multitrace_identity": {
  "lineno": 172,
  "symbols_in_volume": [
   "bempp.api.assembly.blocked_operator.BlockedOperator"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.sparse.sigma_identity": {
  "lineno": 203,
  "symbols_in_volume": [
   "bempp.api.utils.helpers.assign_parameters"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_adj_double_layer_evaluator": {
  "lineno": 589,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.adjoint_double_layer",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_adjoint_double_layer_complex_wavenumber": {
  "lineno": 296,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.adjoint_double_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_adjoint_double_layer_p1_cont": {
  "lineno": 184,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.adjoint_double_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_double_layer_complex_wavenumber": {
  "lineno": 268,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.double_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_double_layer_evaluator": {
  "lineno": 542,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.double_layer",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_double_layer_p1_cont": {
  "lineno": 156,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.double_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_hypersingular": {
  "lineno": 212,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.hypersingular",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_hypersingular_complex_evaluator": {
  "lineno": 683,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.hypersingular",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_hypersingular_complex_wavenumber": {
  "lineno": 324,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.hypersingular",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_hypersingular_evaluator": {
  "lineno": 636,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.hypersingular",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_complex_wavenumber": {
  "lineno": 240,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_evaluator_complex": {
  "lineno": 493,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.single_layer",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_evaluator_p0_dp1": {
  "lineno": 399,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.single_layer",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_evaluator_p0_p0": {
  "lineno": 352,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.single_layer",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_evaluator_p0_p1": {
  "lineno": 446,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.single_layer",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_p0": {
  "lineno": 15,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_p0_p1": {
  "lineno": 99,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_p1_cont": {
  "lineno": 128,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_p1_disc": {
  "lineno": 43,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_p1_p0": {
  "lineno": 70,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_adjoint_double_layer_evaluator": {
  "lineno": 450,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.adjoint_double_layer",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_adjoint_double_layer_p1_cont": {
  "lineno": 175,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.adjoint_double_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_double_layer_evaluator": {
  "lineno": 412,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.double_layer",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_double_layer_p1_cont": {
  "lineno": 148,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.double_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_hypersingular": {
  "lineno": 202,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.hypersingular",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_hypersingular_evaluator": {
  "lineno": 488,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.hypersingular",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_evaluator_complex": {
  "lineno": 365,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.single_layer",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_evaluator_p0_dp1": {
  "lineno": 275,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.single_layer",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_evaluator_p0_p0": {
  "lineno": 230,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.single_layer",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_evaluator_p0_p1": {
  "lineno": 320,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.single_layer",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_p0": {
  "lineno": 12,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_p0_p1": {
  "lineno": 93,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_p1_cont": {
  "lineno": 121,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_p1_disc": {
  "lineno": 39,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_p1_p0": {
  "lineno": 65,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_electric_field_bc_sphere": {
  "lineno": 48,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.maxwell.electric_field",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_electric_field_complex_sphere": {
  "lineno": 133,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.maxwell.electric_field",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_electric_field_complex_sphere_evaluator": {
  "lineno": 369,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.maxwell.electric_field",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_electric_field_rbc_bc_sphere": {
  "lineno": 91,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.maxwell.electric_field",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_electric_field_screen": {
  "lineno": 168,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.maxwell.electric_field",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_electric_field_sphere": {
  "lineno": 14,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.maxwell.electric_field",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_electric_field_sphere_evaluator": {
  "lineno": 273,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.maxwell.electric_field",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_magnetic_field_complex_sphere": {
  "lineno": 238,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.maxwell.magnetic_field",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_magnetic_field_complex_sphere_evaluator": {
  "lineno": 417,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.maxwell.magnetic_field",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_magnetic_field_sphere": {
  "lineno": 203,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.maxwell.magnetic_field",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_magnetic_field_sphere_evaluator": {
  "lineno": 321,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.maxwell.magnetic_field",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_adj_double_layer_evaluator": {
  "lineno": 217,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.modified_helmholtz.adjoint_double_layer",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_adjoint_double_layer": {
  "lineno": 70,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.modified_helmholtz.adjoint_double_layer",
   "numpy.real",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_double_layer_evaluator": {
  "lineno": 171,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.modified_helmholtz.double_layer",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_double_layer_p1_cont": {
  "lineno": 42,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.modified_helmholtz.double_layer",
   "numpy.real",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_hypersingular": {
  "lineno": 98,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.modified_helmholtz.hypersingular",
   "numpy.real",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_hypersingular_evaluator": {
  "lineno": 262,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.modified_helmholtz.hypersingular",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_single_layer": {
  "lineno": 13,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.modified_helmholtz.single_layer",
   "numpy.real",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_single_layer_evaluator": {
  "lineno": 126,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.modified_helmholtz.single_layer",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_sparse": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.api.operators.boundary.test.test_sparse.test_sparse_identity_p0_p0": {
  "lineno": 12,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.sparse.identity",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_sparse.test_sparse_identity_p0_p1": {
  "lineno": 41,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.sparse.identity",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_sparse.test_sparse_identity_p1_p0": {
  "lineno": 71,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.sparse.identity",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_sparse.test_sparse_identity_p1_p1": {
  "lineno": 101,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.sparse.identity",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_sparse.test_sparse_identity_snc_bc": {
  "lineno": 163,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.sparse.identity",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_sparse.test_sparse_identity_snc_rwg": {
  "lineno": 129,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.sparse.identity",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.far_field": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.far_field.helmholtz": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.far_field.helmholtz.double_layer": {
  "lineno": 33,
  "symbols_in_volume": [
   "bempp.api.assembly.potential_operator.PotentialOperator",
   "bempp.api.operators.OperatorDescriptor",
   "bempp.api.operators._add_wavenumber",
   "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  ],
  "type": "function"
 },
 "bempp.api.operators.far_field.helmholtz.single_layer": {
  "lineno": 5,
  "symbols_in_volume": [
   "bempp.api.assembly.potential_operator.PotentialOperator",
   "bempp.api.operators.OperatorDescriptor",
   "bempp.api.operators._add_wavenumber",
   "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  ],
  "type": "function"
 },
 "bempp.api.operators.far_field.maxwell": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.far_field.maxwell.electric_field": {
  "lineno": 4,
  "symbols_in_volume": [
   "bempp.api.assembly.potential_operator.PotentialOperator",
   "bempp.api.operators.OperatorDescriptor",
   "bempp.api.operators._add_wavenumber",
   "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  ],
  "type": "function"
 },
 "bempp.api.operators.far_field.maxwell.magnetic_field": {
  "lineno": 31,
  "symbols_in_volume": [
   "bempp.api.assembly.potential_operator.PotentialOperator",
   "bempp.api.operators.OperatorDescriptor",
   "bempp.api.operators._add_wavenumber",
   "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  ],
  "type": "function"
 },
 "bempp.api.operators.far_field.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.test_helmholtz_double_layer_potential_p1": {
  "lineno": 44,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.far_field.helmholtz.double_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.test_helmholtz_far_field_complex_coeffs": {
  "lineno": 113,
  "symbols_in_volume": [
   "bempp.api.operators.far_field.helmholtz.double_layer",
   "bempp.api.operators.far_field.helmholtz.single_layer",
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.test_helmholtz_far_field_segments": {
  "lineno": 74,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.grid.grid.grid_from_segments",
   "bempp.api.operators.far_field.helmholtz.double_layer",
   "bempp.api.operators.far_field.helmholtz.single_layer",
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.test_helmholtz_far_field_segments_complex_coeffs": {
  "lineno": 152,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.grid.grid.grid_from_segments",
   "bempp.api.operators.far_field.helmholtz.double_layer",
   "bempp.api.operators.far_field.helmholtz.single_layer",
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.test_helmholtz_single_layer_far_field": {
  "lineno": 14,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.far_field.helmholtz.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.test_maxwell_electric_far_field": {
  "lineno": 14,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.far_field.maxwell.electric_field",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.test_maxwell_far_field_complex_coeffs": {
  "lineno": 113,
  "symbols_in_volume": [
   "bempp.api.operators.far_field.maxwell.electric_field",
   "bempp.api.operators.far_field.maxwell.magnetic_field",
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.test_maxwell_far_field_segments": {
  "lineno": 74,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.grid.grid.grid_from_segments",
   "bempp.api.operators.far_field.maxwell.electric_field",
   "bempp.api.operators.far_field.maxwell.magnetic_field",
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.test_maxwell_far_field_segments_complex_coeffs": {
  "lineno": 153,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.grid.grid.grid_from_segments",
   "bempp.api.operators.far_field.maxwell.electric_field",
   "bempp.api.operators.far_field.maxwell.magnetic_field",
   "numpy.linalg.norm",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.test_maxwell_magnetic_far_field": {
  "lineno": 44,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.far_field.maxwell.magnetic_field",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.potential.helmholtz": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.potential.helmholtz.double_layer": {
  "lineno": 33,
  "symbols_in_volume": [
   "bempp.api.assembly.potential_operator.PotentialOperator",
   "bempp.api.operators.OperatorDescriptor",
   "bempp.api.operators._add_wavenumber",
   "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.helmholtz.single_layer": {
  "lineno": 5,
  "symbols_in_volume": [
   "bempp.api.assembly.potential_operator.PotentialOperator",
   "bempp.api.operators.OperatorDescriptor",
   "bempp.api.operators._add_wavenumber",
   "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.laplace": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.potential.laplace.double_layer": {
  "lineno": 28,
  "symbols_in_volume": [
   "bempp.api.assembly.potential_operator.PotentialOperator",
   "bempp.api.operators.OperatorDescriptor",
   "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.laplace.single_layer": {
  "lineno": 4,
  "symbols_in_volume": [
   "bempp.api.assembly.potential_operator.PotentialOperator",
   "bempp.api.operators.OperatorDescriptor",
   "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.maxwell": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.potential.maxwell.electric_field": {
  "lineno": 4,
  "symbols_in_volume": [
   "bempp.api.assembly.potential_operator.PotentialOperator",
   "bempp.api.operators.OperatorDescriptor",
   "bempp.api.operators._add_wavenumber",
   "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.maxwell.magnetic_field": {
  "lineno": 31,
  "symbols_in_volume": [
   "bempp.api.assembly.potential_operator.PotentialOperator",
   "bempp.api.operators.OperatorDescriptor",
   "bempp.api.operators._add_wavenumber",
   "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.operators.potential.test.test_helmholtz": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.api.operators.potential.test.test_helmholtz.test_helmholtz_double_layer_potential_p1": {
  "lineno": 47,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.potential.helmholtz.double_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_helmholtz.test_helmholtz_potentials_segments": {
  "lineno": 119,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.grid.grid.grid_from_segments",
   "bempp.api.operators.potential.helmholtz.double_layer",
   "bempp.api.operators.potential.helmholtz.single_layer",
   "numpy.array",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_helmholtz.test_helmholtz_potentials_segments_complex_coeffs": {
  "lineno": 165,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.grid.grid.grid_from_segments",
   "bempp.api.operators.potential.helmholtz.double_layer",
   "bempp.api.operators.potential.helmholtz.single_layer",
   "numpy.array",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_helmholtz.test_helmholtz_single_layer_potential_p1": {
  "lineno": 14,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.potential.helmholtz.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_helmholtz.test_helmholtz_single_layer_potential_p1_complex_coeffs": {
  "lineno": 80,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.potential.helmholtz.single_layer",
   "numpy.imag",
   "numpy.random.rand",
   "numpy.real",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_laplace": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.api.operators.potential.test.test_laplace.test_laplace_double_layer_potential_p1": {
  "lineno": 76,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.potential.laplace.double_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_laplace.test_laplace_p1_segments": {
  "lineno": 146,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.potential.laplace.single_layer",
   "bempp.api.shapes.cube",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_laplace.test_laplace_p1_segments_complex_coeffs": {
  "lineno": 210,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.potential.laplace.single_layer",
   "bempp.api.shapes.cube",
   "numpy.ones",
   "numpy.random.RandomState",
   "numpy.random.rand",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_laplace.test_laplace_single_layer_potential_p0": {
  "lineno": 12,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.potential.laplace.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_laplace.test_laplace_single_layer_potential_p1": {
  "lineno": 44,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.potential.laplace.single_layer",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_laplace.test_laplace_single_layer_potential_p1_complex": {
  "lineno": 108,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.potential.laplace.single_layer",
   "numpy.imag",
   "numpy.random.rand",
   "numpy.real",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_maxwell": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.api.operators.potential.test.test_maxwell.test_maxwell_electric_field_potential_bc": {
  "lineno": 77,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.potential.maxwell.electric_field",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_maxwell.test_maxwell_electric_field_potential_complex": {
  "lineno": 15,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.potential.maxwell.electric_field",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_maxwell.test_maxwell_electric_field_potential_rwg": {
  "lineno": 46,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.potential.maxwell.electric_field",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_maxwell.test_maxwell_magnetic_field_potential_complex": {
  "lineno": 138,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.potential.maxwell.magnetic_field",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_maxwell.test_maxwell_magnetic_field_potential_rwg": {
  "lineno": 107,
  "symbols_in_volume": [
   "bempp.api.GridFunction",
   "bempp.api.function_space",
   "bempp.api.operators.potential.maxwell.magnetic_field",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_maxwell.test_maxwell_potentials_segments": {
  "lineno": 168,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.grid.grid.grid_from_segments",
   "bempp.api.operators.potential.maxwell.electric_field",
   "bempp.api.operators.potential.maxwell.magnetic_field",
   "numpy.array",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_maxwell.test_maxwell_potentials_segments_complex_coeffs": {
  "lineno": 206,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.grid.grid.grid_from_segments",
   "bempp.api.operators.potential.maxwell.electric_field",
   "bempp.api.operators.potential.maxwell.magnetic_field",
   "numpy.array",
   "numpy.random.RandomState",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.set_logging_level": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.shapes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.shapes.shapes": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.shapes.shapes.__generate_grid_from_geo_string": {
  "lineno": 44,
  "symbols_in_volume": [
   "os.remove"
  ],
  "type": "function"
 },
 "bempp.api.shapes.shapes.__generate_grid_from_geo_string.msh_from_string": {
  "lineno": 51,
  "symbols_in_volume": [
   "os.devnull",
   "os.remove",
   "subprocess.check_call"
  ],
  "type": "function"
 },
 "bempp.api.shapes.shapes.__generate_grid_from_gmsh_string": {
  "lineno": 26,
  "symbols_in_volume": [
   "os.fdopen",
   "os.remove",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "bempp.api.shapes.shapes.almond": {
  "lineno": 637,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.shapes.shapes.cube": {
  "lineno": 620,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.shapes.shapes.cuboid": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.shapes.shapes.ellipsoid": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.shapes.shapes.get_gmsh_file": {
  "lineno": 5,
  "symbols_in_volume": [
   "os.fdopen",
   "os.path.splitext",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "bempp.api.shapes.shapes.multitrace_cube": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.shapes.shapes.rectangle_with_hole": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.shapes.shapes.reentrant_cube": {
  "lineno": 456,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.shapes.shapes.reference_triangle": {
  "lineno": 301,
  "symbols_in_volume": [
   "bempp.api.grid.grid.Grid",
   "numpy.array"
  ],
  "type": "function"
 },
 "bempp.api.shapes.shapes.regular_sphere": {
  "lineno": 116,
  "symbols_in_volume": [
   "bempp.api.grid.grid.Grid",
   "numpy.load",
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath"
  ],
  "type": "function"
 },
 "bempp.api.shapes.shapes.screen": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.shapes.shapes.sphere": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.space.maxwell_spaces": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.space.maxwell_spaces._compute_rwg0_space_data": {
  "lineno": 629,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.flatnonzero",
   "numpy.float64",
   "numpy.int32",
   "numpy.ones",
   "numpy.uint32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.space.maxwell_spaces._numba_rwg0_evaluate": {
  "lineno": 776,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.empty",
   "numpy.float64",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "bempp.api.space.maxwell_spaces._numba_snc0_evaluate": {
  "lineno": 814,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.empty",
   "numpy.float64",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "bempp.api.space.maxwell_spaces.bc_function_space": {
  "lineno": 287,
  "symbols_in_volume": [
   "bempp.api.grid.grid.enumerate_vertex_adjacent_elements",
   "numpy.arange",
   "numpy.bool",
   "numpy.float64",
   "numpy.linalg.norm",
   "numpy.repeat",
   "numpy.tile",
   "numpy.zeros",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "bempp.api.space.maxwell_spaces.generate_bc_map": {
  "lineno": 445,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.uint32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.space.maxwell_spaces.generate_bc_map.find_position": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.maxwell_spaces.generate_bc_map.process_vertex": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.maxwell_spaces.generate_rwg0_map": {
  "lineno": 719,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.arange",
   "numpy.array",
   "numpy.empty",
   "numpy.float64",
   "numpy.linalg.norm",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "bempp.api.space.maxwell_spaces.rbc_function_space": {
  "lineno": 366,
  "symbols_in_volume": [
   "bempp.api.grid.grid.enumerate_vertex_adjacent_elements",
   "numpy.arange",
   "numpy.bool",
   "numpy.float64",
   "numpy.linalg.norm",
   "numpy.repeat",
   "numpy.tile",
   "numpy.zeros",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "bempp.api.space.maxwell_spaces.rwg0_barycentric_function_space": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.bool",
   "numpy.float64",
   "numpy.repeat",
   "numpy.tile",
   "numpy.zeros",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "bempp.api.space.maxwell_spaces.rwg0_function_space": {
  "lineno": 7,
  "symbols_in_volume": [
   "bempp.api.utils.helpers.serialise_list_of_lists"
  ],
  "type": "function"
 },
 "bempp.api.space.maxwell_spaces.snc0_barycentric_function_space": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.bool",
   "numpy.float64",
   "numpy.repeat",
   "numpy.tile",
   "numpy.zeros",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "bempp.api.space.maxwell_spaces.snc0_function_space": {
  "lineno": 147,
  "symbols_in_volume": [
   "bempp.api.utils.helpers.serialise_list_of_lists"
  ],
  "type": "function"
 },
 "bempp.api.space.scalar_dual_spaces": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.space.scalar_dual_spaces.dual0_function_space": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.bool",
   "numpy.float64",
   "numpy.repeat",
   "numpy.tile",
   "numpy.zeros",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "bempp.api.space.scalar_dual_spaces.generate_dual0_map": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.ones",
   "numpy.uint32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.space.scalar_spaces": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.space.scalar_spaces._compute_p1_dof_map": {
  "lineno": 143,
  "symbols_in_volume": [
   "bempp.helpers.timeit",
   "numba.njit",
   "numpy.arange",
   "numpy.bool_",
   "numpy.flatnonzero",
   "numpy.float64",
   "numpy.int32",
   "numpy.min",
   "numpy.ones",
   "numpy.uint32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.space.scalar_spaces._compute_p1_dof_map.find_index": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.scalar_spaces._numba_p0_surface_gradient": {
  "lineno": 237,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.space.scalar_spaces._numba_p1_surface_gradient": {
  "lineno": 250,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "bempp.api.space.scalar_spaces.p0_discontinuous_function_space": {
  "lineno": 9,
  "symbols_in_volume": [
   "bempp.helpers.timeit",
   "numpy.arange",
   "numpy.array",
   "numpy.expand_dims",
   "numpy.flatnonzero",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.space.scalar_spaces.p1_continuous_function_space": {
  "lineno": 85,
  "symbols_in_volume": [
   "bempp.helpers.timeit",
   "numpy.flatnonzero"
  ],
  "type": "function"
 },
 "bempp.api.space.scalar_spaces.p1_discontinuous_function_space": {
  "lineno": 48,
  "symbols_in_volume": [
   "bempp.helpers.timeit",
   "numpy.arange",
   "numpy.flatnonzero",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.space.shapesets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.space.shapesets.Shapeset": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.space.shapesets.Shapeset.__init__": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.shapesets.Shapeset.dimension": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.shapesets.Shapeset.evaluate": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.shapesets.Shapeset.gradient": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.shapesets.Shapeset.identifier": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.shapesets.Shapeset.number_of_shape_functions": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.shapesets._p0_shapeset_evaluate": {
  "lineno": 47,
  "symbols_in_volume": [
   "numba.float64",
   "numba.njit",
   "numpy.float64",
   "numpy.ones"
  ],
  "type": "function"
 },
 "bempp.api.space.shapesets._p0_shapeset_gradient": {
  "lineno": 53,
  "symbols_in_volume": [
   "numba.float64",
   "numba.njit",
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.space.shapesets._p1_disc_shapeset_evaluate": {
  "lineno": 59,
  "symbols_in_volume": [
   "numba.float64",
   "numba.njit",
   "numpy.expand_dims",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "bempp.api.space.shapesets._p1_disc_shapeset_gradient": {
  "lineno": 74,
  "symbols_in_volume": [
   "numba.float64",
   "numba.njit",
   "numpy.float64",
   "numpy.ones",
   "numpy.vstack",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.space.shapesets._rwg0_shapeset_evaluate": {
  "lineno": 95,
  "symbols_in_volume": [
   "numba.float64",
   "numba.njit",
   "numpy.float64",
   "numpy.vstack",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.space.shapesets._rwg0_shapeset_gradient": {
  "lineno": 108,
  "symbols_in_volume": [
   "numba.float64",
   "numba.njit",
   "numpy.float64",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.space.space": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.space.space.FunctionSpace": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.space.space.FunctionSpace.__eq__": {
  "lineno": 719,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.__init__": {
  "lineno": 298,
  "symbols_in_volume": [
   "bempp.api.utils.helpers.create_unique_id",
   "numpy.arange",
   "numpy.count_nonzero",
   "numpy.flatnonzero",
   "numpy.max",
   "numpy.repeat",
   "numpy.tile",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace._compute_color_map": {
  "lineno": 685,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace._generate_hash": {
  "lineno": 659,
  "symbols_in_volume": [
   "hashlib.md5"
  ],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace._set_id": {
  "lineno": 681,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace._sort_elements_by_color": {
  "lineno": 704,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.empty",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.barycentric_representation": {
  "lineno": 584,
  "symbols_in_volume": [
   "collections.abc.Callable"
  ],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.codomain_dimension": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.collocation_points": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.color_map": {
  "lineno": 511,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.dof_transformation": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.evaluate": {
  "lineno": 607,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.get_elements_by_color": {
  "lineno": 594,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.global2local": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.global_dof_count": {
  "lineno": 427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.grid": {
  "lineno": 412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.grid_dof_count": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.grid_id": {
  "lineno": 417,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.has_surface_gradient": {
  "lineno": 574,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.hash": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.id": {
  "lineno": 491,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.identifier": {
  "lineno": 481,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.inverse_mass_matrix": {
  "lineno": 646,
  "symbols_in_volume": [
   "bempp.api.assembly.discrete_boundary_operator.InverseSparseDiscreteBoundaryOperator"
  ],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.is_barycentric": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.is_compatible": {
  "lineno": 677,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.is_localised": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.local2global": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.local_multipliers": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.localised_space": {
  "lineno": 501,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.map_to_full_grid": {
  "lineno": 531,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.map_to_localised_space": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.mass_matrix": {
  "lineno": 636,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.sparse.identity"
  ],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.normal_multipliers": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.numba_evaluate": {
  "lineno": 562,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.numba_surface_gradient": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.number_of_shape_functions": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.number_of_support_elements": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.order": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.requires_dof_transformation": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.shapeset": {
  "lineno": 496,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.support": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.support_elements": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.surface_gradient": {
  "lineno": 625,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.space.space.SpaceBuilder.__init__": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.build": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.float64",
   "numpy.int32",
   "numpy.max",
   "numpy.ones",
   "scipy.sparse.identity"
  ],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_barycentric_representation": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_codomain_dimension": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_collocation_points": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_dof_transformation": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_global2local": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_identifier": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_is_barycentric": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_is_localised": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_local2global": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_local_multipliers": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_normal_multipliers": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_numba_evaluator": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_numba_surface_gradient": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_order": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_shapeset": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_support": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space._numba_evaluate": {
  "lineno": 877,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "bempp.api.space.space._process_segments": {
  "lineno": 754,
  "symbols_in_volume": [
   "numpy.full",
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.space.space._space_scatter_worker": {
  "lineno": 849,
  "symbols_in_volume": [
   "bempp.api.utils.pool.get_data",
   "bempp.api.utils.pool.get_id",
   "bempp.api.utils.pool.insert_data"
  ],
  "type": "function"
 },
 "bempp.api.space.space.check_if_compatible": {
  "lineno": 741,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.space.function_space": {
  "lineno": 10,
  "symbols_in_volume": [
   "bempp.api.utils.pool.execute",
   "bempp.api.utils.pool.is_initialised",
   "bempp.api.utils.pool.is_worker",
   "numpy.count_nonzero"
  ],
  "type": "function"
 },
 "bempp.api.space.space.invert_local2global": {
  "lineno": 788,
  "symbols_in_volume": [
   "numpy.max"
  ],
  "type": "function"
 },
 "bempp.api.space.space.make_localised_space": {
  "lineno": 807,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.space.space.return_compatible_representation": {
  "lineno": 724,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.space.test.test_barycentric_rwg": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.api.space.test.test_barycentric_rwg.test_rwg_barycentric": {
  "lineno": 10,
  "symbols_in_volume": [
   "math.isclose",
   "numpy.random.RandomState"
  ],
  "type": "function"
 },
 "bempp.api.space.test.test_space": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.api.space.test.test_space.test_dp1_closed_segment": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_p1_closed_segment": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_p1_color_map": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_p1_extended_segment": {
  "lineno": 90,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_p1_open_segment": {
  "lineno": 48,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_rwg_closed_segment": {
  "lineno": 200,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_rwg_color_map": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_rwg_open_segment": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_snc_closed_segment": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_snc_open_segment": {
  "lineno": 240,
  "symbols_in_volume": [
   "numpy.any"
  ],
  "type": "function"
 },
 "bempp.api.test": {
  "lineno": 158,
  "symbols_in_volume": [
   "pytest.main"
  ],
  "type": "function"
 },
 "bempp.api.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.utils.data_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.utils.data_types.check_type": {
  "lineno": 5,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "bempp.api.utils.data_types.combined_type": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.utils.helpers.MemProfiler": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.utils.helpers.MemProfiler.__enter__": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.helpers.MemProfiler.__exit__": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.helpers.MemProfiler.__init__": {
  "lineno": 80,
  "symbols_in_volume": [
   "os.getpid",
   "psutil.Process"
  ],
  "type": "function"
 },
 "bempp.api.utils.helpers.align_array": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.require"
  ],
  "type": "function"
 },
 "bempp.api.utils.helpers.assign_parameters": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.helpers.create_unique_id": {
  "lineno": 5,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "bempp.api.utils.helpers.promote_to_double_precision": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.helpers.serialise_list_of_lists": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.interpolation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.utils.interpolation.ChebychevInterpolation": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.utils.interpolation.ChebychevInterpolation.__init__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.interpolation.ChebychevInterpolation.differentiate": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.interpolation.ChebychevInterpolation.differentiation_matrix": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.interpolation.ChebychevInterpolation.evaluate": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.interpolation.ChebychevInterpolation.nodes": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.interpolation.ChebychevInterpolation.weights": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.interpolation.chebychev_differentiation_matrix": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.diag",
   "numpy.dot",
   "numpy.eye",
   "numpy.sum",
   "numpy.tile"
  ],
  "type": "function"
 },
 "bempp.api.utils.interpolation.chebychev_nodes_and_weights_second_kind": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.cos",
   "numpy.ones",
   "numpy.pi"
  ],
  "type": "function"
 },
 "bempp.api.utils.interpolation.chebychev_tensor_points_3d": {
  "lineno": 212,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "bempp.api.utils.interpolation.evaluate_interp_polynomial": {
  "lineno": 233,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.float64",
   "numpy.int32",
   "numpy.ones",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.utils.interpolation.evaluate_kernel_on_interpolation_points": {
  "lineno": 82,
  "symbols_in_volume": [
   "bempp.core.cl_helpers.DeviceBuffer",
   "bempp.core.cl_helpers.DeviceBuffer.from_array",
   "bempp.core.cl_helpers.Kernel",
   "bempp.core.cl_helpers.get_type",
   "bempp.core.cl_helpers.kernel_source_from_identifier"
  ],
  "type": "function"
 },
 "bempp.api.utils.interpolation.evaluate_tensor_interp_polynomial": {
  "lineno": 260,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.utils.octree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.utils.octree.Octree": {
  "lineno": 7,
  "symbols_in_volume": [
   "numba.float64",
   "numba.int32",
   "numba.jitclass",
   "numba.uint32"
  ],
  "type": "class"
 },
 "bempp.api.utils.octree.Octree.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree._assign_nodes": {
  "lineno": 187,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "numpy.concatenate",
   "numpy.empty",
   "numpy.uint32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree._compute_interaction_list": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree._compute_nearfields": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.empty",
   "numpy.int32"
  ],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.children": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.diameter": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.leaf_containing_point": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.fmax",
   "numpy.fmin",
   "numpy.int32"
  ],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.leaf_nodes_ptr": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.lower_bound": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.maximum_level": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.near_field_nodes": {
  "lineno": 115,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.near_field_nodes_ptr": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.uint32"
  ],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.neighbors": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.node_bounds": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.node_diameter": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.nodes_per_level": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.nodes_per_side": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.non_empty_leaf_nodes": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.non_empty_nodes_by_level": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.non_empty_nodes_ptr": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.parent": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.sorted_indices": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.upper_bound": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree.Octree.vertices": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.octree._contract": {
  "lineno": 363,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "bempp.api.utils.octree._dilate": {
  "lineno": 341,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "bempp.api.utils.octree._in_range": {
  "lineno": 295,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "bempp.api.utils.octree._make_unique": {
  "lineno": 284,
  "symbols_in_volume": [
   "numba.njit",
   "numpy.array",
   "numpy.sort"
  ],
  "type": "function"
 },
 "bempp.api.utils.octree._neighbors": {
  "lineno": 321,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "bempp.api.utils.octree.de_morton": {
  "lineno": 311,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "bempp.api.utils.octree.morton": {
  "lineno": 302,
  "symbols_in_volume": [
   "numba.njit"
  ],
  "type": "function"
 },
 "bempp.api.utils.parameters": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.utils.parameters.DefaultParameters": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.utils.parameters.DefaultParameters.__init__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.parameters._Assembly": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.utils.parameters._Assembly.__init__": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.parameters._DenseAssembly": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.utils.parameters._DenseAssembly.__init__": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.parameters._Fmm": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.utils.parameters._Fmm.__init__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.parameters._Output": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.utils.parameters._Output.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.parameters._Quadrature": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.utils.parameters._Quadrature.__init__": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.parameters._Verbosity": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.utils.parameters._Verbosity.__init__": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.utils.pool.Pool": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.utils.pool.Pool.__init__": {
  "lineno": 135,
  "symbols_in_volume": [
   "bempp.api.utils.pool._BUFFER",
   "bempp.api.utils.pool.worker",
   "multiprocessing.get_context"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool.Pool._map_impl": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool.Pool.map": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool.Pool.number_of_workers": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool.Pool.shutdown": {
  "lineno": 204,
  "symbols_in_volume": [
   "bempp.api.utils.pool.worker",
   "bempp.api.utils.pool.worker.join"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool.Pool.starmap": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool._assign_ids": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool._clear_data_worker": {
  "lineno": 417,
  "symbols_in_volume": [
   "bempp.api.utils.pool._DATA"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool._execute_function_without_arguments": {
  "lineno": 392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool._init_device_worker": {
  "lineno": 403,
  "symbols_in_volume": [
   "bempp.api.utils.pool.get_id",
   "bempp.core.cl_helpers.get_context_by_name"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool._raise_if_not_worker": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool._remove_key_worker": {
  "lineno": 397,
  "symbols_in_volume": [
   "bempp.api.utils.pool._DATA"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool.as_array": {
  "lineno": 59,
  "symbols_in_volume": [
   "bempp.api.utils.pool._BUFFER",
   "numpy.frombuffer",
   "numpy.prod"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool.clear_data": {
  "lineno": 242,
  "symbols_in_volume": [
   "bempp.api.utils.pool.execute"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool.create_device_pool": {
  "lineno": 281,
  "symbols_in_volume": [
   "bempp.core.cl_helpers.get_context_by_name"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool.create_pool": {
  "lineno": 338,
  "symbols_in_volume": [
   "bempp.api.utils.pool._NWORKERS",
   "bempp.api.utils.pool._POOL"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool.execute": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool.from_buffer": {
  "lineno": 102,
  "symbols_in_volume": [
   "bempp.api.utils.pool.as_array",
   "numpy.dtype",
   "numpy.prod"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool.get_data": {
  "lineno": 249,
  "symbols_in_volume": [
   "bempp.api.utils.pool._DATA"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool.get_id": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool.has_key": {
  "lineno": 269,
  "symbols_in_volume": [
   "bempp.api.utils.pool._DATA"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool.insert_data": {
  "lineno": 229,
  "symbols_in_volume": [
   "bempp.api.utils.pool._DATA"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool.is_initialised": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool.is_worker": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool.map": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool.number_of_workers": {
  "lineno": 219,
  "symbols_in_volume": [
   "bempp.api.utils.pool._POOL.number_of_workers"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool.nworkers": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool.remove_key": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool.shutdown": {
  "lineno": 381,
  "symbols_in_volume": [
   "bempp.api.utils.pool._NWORKERS",
   "bempp.api.utils.pool._POOL",
   "bempp.api.utils.pool._POOL.shutdown",
   "bempp.api.utils.pool._USE_THREADS"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool.starmap": {
  "lineno": 360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.pool.to_buffer": {
  "lineno": 82,
  "symbols_in_volume": [
   "bempp.api.utils.pool._BUFFER",
   "numpy.require"
  ],
  "type": "function"
 },
 "bempp.api.utils.pool.worker": {
  "lineno": 18,
  "symbols_in_volume": [
   "bempp.api.utils.pool._BUFFER",
   "bempp.api.utils.pool._IN_WORKER",
   "bempp.api.utils.pool._MY_ID",
   "bempp.api.utils.pool._NWORKERS",
   "traceback.print_exc"
  ],
  "type": "function"
 },
 "bempp.api.utils.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.utils.test.test_interpolation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.utils.test.test_interpolation.test_evaluation_of_laplace_kernel_on_interp_points": {
  "lineno": 9,
  "symbols_in_volume": [
   "bempp.api.utils.interpolation.chebychev_nodes_and_weights_second_kind",
   "bempp.api.utils.interpolation.chebychev_tensor_points_3d",
   "bempp.api.utils.interpolation.evaluate_kernel_on_interpolation_points",
   "numpy.array",
   "numpy.empty",
   "numpy.linalg.norm",
   "numpy.pi",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.api.utils.test.test_interpolation.test_evaluation_tensor_interp_polynomial": {
  "lineno": 40,
  "symbols_in_volume": [
   "bempp.api.utils.interpolation.chebychev_nodes_and_weights_second_kind",
   "bempp.api.utils.interpolation.evaluate_tensor_interp_polynomial",
   "numpy.cos",
   "numpy.linspace",
   "numpy.meshgrid",
   "numpy.testing.assert_allclose",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "bempp.api.utils.timing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.utils.timing.Timer": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.api.utils.timing.Timer.__enter__": {
  "lineno": 41,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "bempp.api.utils.timing.Timer.__exit__": {
  "lineno": 45,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "bempp.api.utils.timing.Timer.__init__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.timing.timeit": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.timing.timeit.timeit_impl": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.api.utils.timing.timeit.timeit_impl.timed_fun": {
  "lineno": 12,
  "symbols_in_volume": [
   "bempp.api.GLOBAL_PARAMETERS.verbosity.extended_verbosity",
   "bempp.api.log",
   "time.time"
  ],
  "type": "function"
 },
 "bempp.api.utils.which": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.api.utils.which.which": {
  "lineno": 7,
  "symbols_in_volume": [
   "os.environ.split",
   "os.path.join",
   "os.path.split",
   "os.pathsep"
  ],
  "type": "function"
 },
 "bempp.api.utils.which.which.is_exe": {
  "lineno": 11,
  "symbols_in_volume": [
   "os.X_OK",
   "os.access",
   "os.path.isfile"
  ],
  "type": "function"
 },
 "bempp.benchmarks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.benchmarks.benchmark_dense_assembly": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.benchmarks.benchmark_dense_assembly.helmholtz_single_layer_dense_p1_cont_large_benchmark": {
  "lineno": 74,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.helmholtz.single_layer"
  ],
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_assembly.laplace_single_layer_dense_benchmark": {
  "lineno": 10,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.single_layer"
  ],
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_assembly.laplace_single_layer_dense_large_benchmark": {
  "lineno": 26,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.single_layer"
  ],
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_assembly.laplace_single_layer_dense_p1_cont_benchmark": {
  "lineno": 58,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.single_layer"
  ],
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_assembly.laplace_single_layer_dense_p1_disc_benchmark": {
  "lineno": 42,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.laplace.single_layer"
  ],
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_assembly.maxwell_electric_field_dense_large_benchmark": {
  "lineno": 96,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.maxwell.electric_field"
  ],
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_assembly.maxwell_magnetic_field_dense_large_benchmark": {
  "lineno": 118,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.maxwell.magnetic_field"
  ],
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_potential": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.benchmarks.benchmark_dense_potential.helmholtz_potential_dense_large_p0_benchmark": {
  "lineno": 36,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.potential.helmholtz.single_layer",
   "numpy.cos",
   "numpy.linspace",
   "numpy.ones",
   "numpy.pi",
   "numpy.random.randn",
   "numpy.sin",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_potential.laplace_potential_dense_large_p0_benchmark": {
  "lineno": 10,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.potential.laplace.single_layer",
   "numpy.cos",
   "numpy.linspace",
   "numpy.ones",
   "numpy.pi",
   "numpy.random.randn",
   "numpy.sin",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "bempp.benchmarks.benchmark_sparse_assembly": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.usefixtures"
  ],
  "type": "module"
 },
 "bempp.benchmarks.benchmark_sparse_assembly.sparse_identity_benchmark": {
  "lineno": 8,
  "symbols_in_volume": [
   "bempp.api.function_space",
   "bempp.api.operators.boundary.sparse.identity"
  ],
  "type": "function"
 },
 "bempp.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.conftest.Helpers": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.conftest.Helpers.bempp_path": {
  "lineno": 133,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "bempp.conftest.Helpers.default_tolerance": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.conftest.Helpers.load_grid": {
  "lineno": 125,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "bempp.conftest.Helpers.load_npy_data": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.load",
   "os.path.join"
  ],
  "type": "function"
 },
 "bempp.conftest.Helpers.load_npz_data": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.load",
   "os.path.join"
  ],
  "type": "function"
 },
 "bempp.conftest.default_parameters": {
  "lineno": 68,
  "symbols_in_volume": [
   "bempp.api.utils.parameters.DefaultParameters",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "bempp.conftest.device_interface": {
  "lineno": 27,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "bempp.conftest.helpers": {
  "lineno": 100,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "bempp.conftest.laplace_slp_small_sphere": {
  "lineno": 88,
  "symbols_in_volume": [
   "bempp.api.operators.boundary.laplace.single_layer",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "bempp.conftest.precision": {
  "lineno": 42,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "bempp.conftest.pytest_addoption": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.conftest.set_device_options": {
  "lineno": 32,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "bempp.conftest.small_piecewise_const_space": {
  "lineno": 82,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "bempp.conftest.small_sphere": {
  "lineno": 62,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "bempp.conftest.two_element_grid": {
  "lineno": 50,
  "symbols_in_volume": [
   "bempp.api.grid.Grid",
   "numpy.array",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "bempp.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.core.cl_helpers": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "pyopencl.device_info.GLOBAL_MEM_SIZE",
   "pyopencl.device_info.MAX_MEM_ALLOC_SIZE"
  ],
  "type": "module"
 },
 "bempp.core.cl_helpers.Context": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.core.cl_helpers.Context.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.Context._populate_devices": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.Context.cl_context": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.Context.devices": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.Context.platform_name": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.core.cl_helpers.DeviceBuffer.__init__": {
  "lineno": 330,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer._get_mem_flags": {
  "lineno": 475,
  "symbols_in_volume": [
   "pyopencl.mem_flags"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer._initialize_buffer": {
  "lineno": 496,
  "symbols_in_volume": [
   "numpy.prod",
   "pyopencl.Buffer"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.access_mode": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.alloc_host_memory": {
  "lineno": 388,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.buffer": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.context": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.dtype": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.fill_buffer": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.from_array": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.get_host_copy": {
  "lineno": 455,
  "symbols_in_volume": [
   "numpy.copy"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.host_array": {
  "lineno": 408,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "pyopencl.enqueue_map_buffer",
   "pyopencl.map_flags.READ",
   "pyopencl.map_flags.WRITE"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.order": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.set_zero": {
  "lineno": 502,
  "symbols_in_volume": [
   "numpy.int8",
   "numpy.prod",
   "pyopencl.enqueue_fill_buffer"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.shape": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.core.cl_helpers.DeviceInterface.__init__": {
  "lineno": 61,
  "symbols_in_volume": [
   "pyopencl.CommandQueue",
   "pyopencl.command_queue_properties.PROFILING_ENABLE"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.__repr__": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface._device_property": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.cl_device": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.context": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.data_queue": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.default_precision": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.global_mem_size": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.kernel_queue": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.max_mem_alloc_size": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.name": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.native_vector_width": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.queue": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.type": {
  "lineno": 118,
  "symbols_in_volume": [
   "pyopencl.device_type.CPU",
   "pyopencl.device_type.GPU"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.Event": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.core.cl_helpers.Event.__init__": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.Event.cl_event": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.Event.finished": {
  "lineno": 557,
  "symbols_in_volume": [
   "pyopencl.command_execution_status.complete",
   "pyopencl.event_info.COMMAND_EXECUTION_STATUS"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.Event.runtime": {
  "lineno": 570,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.Event.wait": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.core.cl_helpers.Kernel.__del__": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel.__init__": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel._build": {
  "lineno": 199,
  "symbols_in_volume": [
   "pyopencl.Program"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel.context": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel.implementation": {
  "lineno": 214,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel.kernel_source": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel.optimal_workgroup_multiple": {
  "lineno": 268,
  "symbols_in_volume": [
   "pyopencl.kernel_work_group_info.PREFERRED_WORK_GROUP_SIZE_MULTIPLE"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel.run": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers._get_kernel_compile_options_from_parameters": {
  "lineno": 287,
  "symbols_in_volume": [
   "numbers.Integral",
   "numbers.Real"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.default_context": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.default_device": {
  "lineno": 591,
  "symbols_in_volume": [
   "os.environ",
   "pyopencl.create_some_context"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.find_cpu_driver": {
  "lineno": 616,
  "symbols_in_volume": [
   "pyopencl.Context",
   "pyopencl.context_properties.PLATFORM",
   "pyopencl.device_type.ALL",
   "pyopencl.get_platforms"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.get_context_by_name": {
  "lineno": 698,
  "symbols_in_volume": [
   "pyopencl.Context",
   "pyopencl.context_properties.PLATFORM",
   "pyopencl.device_type.ALL",
   "pyopencl.get_platforms"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.get_precision": {
  "lineno": 673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.get_type": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.kernel_source_from_file": {
  "lineno": 172,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.kernel_source_from_identifier": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.cl_helpers.set_default_device": {
  "lineno": 643,
  "symbols_in_volume": [
   "pyopencl.Context",
   "pyopencl.context_properties.PLATFORM",
   "pyopencl.get_platforms"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.show_available_platforms_and_devices": {
  "lineno": 684,
  "symbols_in_volume": [
   "pyopencl.device_info.NAME",
   "pyopencl.get_platforms",
   "pyopencl.platform_info.NAME"
  ],
  "type": "function"
 },
 "bempp.core.cl_helpers.wait_for_events": {
  "lineno": 576,
  "symbols_in_volume": [
   "pyopencl.wait_for_events"
  ],
  "type": "function"
 },
 "bempp.core.dense_assembler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.core.dense_assembler.DenseAssembler": {
  "lineno": 9,
  "symbols_in_volume": [
   "bempp.api.assembly.assembler.AssemblerBase"
  ],
  "type": "class"
 },
 "bempp.core.dense_assembler.DenseAssembler.__init__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_assembler.DenseAssembler.assemble": {
  "lineno": 17,
  "symbols_in_volume": [
   "bempp.api.assembly.discrete_boundary_operator.DenseDiscreteBoundaryOperator",
   "bempp.api.utils.helpers.promote_to_double_precision"
  ],
  "type": "function"
 },
 "bempp.core.dense_assembler._prepare_buffers": {
  "lineno": 206,
  "symbols_in_volume": [
   "bempp.core.cl_helpers.DeviceBuffer",
   "bempp.core.cl_helpers.DeviceBuffer.from_array",
   "bempp.core.cl_helpers.get_type",
   "numpy.int32",
   "numpy.uint32",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "bempp.core.dense_assembler.assemble_dense": {
  "lineno": 52,
  "symbols_in_volume": [
   "bempp.api.integration.triangle_gauss.rule",
   "bempp.api.log",
   "bempp.core.cl_helpers.DeviceBuffer.from_array",
   "bempp.core.cl_helpers.Kernel",
   "bempp.core.cl_helpers.kernel_source_from_identifier",
   "bempp.core.kernel_helpers.get_vectorization_information",
   "bempp.core.kernel_helpers.run_chunked_kernel",
   "bempp.core.singular_assembler.assemble_singular_part",
   "bempp.helpers.timeit",
   "numpy.add.at",
   "numpy.int32",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "bempp.core.dense_assembly_helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.core.dense_assembly_helpers.choose_source_name": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_assembly_helpers.choose_source_name_dense_evaluator": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_assembly_helpers.choose_source_name_dense_multitrace_evaluator": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_evaluator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorAssembler": {
  "lineno": 13,
  "symbols_in_volume": [
   "bempp.api.assembly.assembler.AssemblerBase"
  ],
  "type": "class"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorAssembler.__init__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorAssembler.assemble": {
  "lineno": 39,
  "symbols_in_volume": [
   "bempp.api.assembly.discrete_boundary_operator.GenericDiscreteBoundaryOperator",
   "bempp.api.space.space.return_compatible_representation",
   "bempp.api.utils.pool.execute",
   "bempp.api.utils.pool.is_initialised",
   "bempp.api.utils.pool.number_of_workers",
   "bempp.core.singular_assembler.SingularAssembler",
   "numpy.array_split",
   "numpy.complex128",
   "numpy.float64"
  ],
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorAssembler.dtype": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorAssembler.matvec": {
  "lineno": 101,
  "symbols_in_volume": [
   "bempp.api.utils.pool.is_initialised",
   "bempp.api.utils.pool.starmap",
   "bempp.helpers.timeit"
  ],
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorAssembler.shape": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorMultiprocessingInstance": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorMultiprocessingInstance.__init__": {
  "lineno": 126,
  "symbols_in_volume": [
   "bempp.api.space.space.return_compatible_representation",
   "bempp.api.utils.helpers.create_unique_id",
   "bempp.api.utils.pool.get_data",
   "bempp.api.utils.pool.insert_data",
   "bempp.api.utils.pool.is_worker"
  ],
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorMultiprocessingInstance.compile_kernel": {
  "lineno": 194,
  "symbols_in_volume": [
   "bempp.api.integration.triangle_gauss.rule",
   "bempp.core.cl_helpers.DeviceBuffer",
   "bempp.core.cl_helpers.DeviceBuffer.from_array",
   "bempp.core.cl_helpers.Kernel",
   "bempp.core.cl_helpers.get_type",
   "bempp.core.cl_helpers.kernel_source_from_identifier",
   "bempp.core.kernel_helpers.closest_multiple_to_number",
   "bempp.core.kernel_helpers.get_vectorization_information",
   "numpy.int32",
   "numpy.uint32",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorMultiprocessingInstance.compute": {
  "lineno": 391,
  "symbols_in_volume": [
   "numpy.uint32"
  ],
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorMultiprocessingInstance.id": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_evaluator._prepare_evaluator": {
  "lineno": 439,
  "symbols_in_volume": [
   "bempp.api.utils.pool.get_id",
   "bempp.core.dense_evaluator.DenseEvaluatorMultiprocessingInstance"
  ],
  "type": "function"
 },
 "bempp.core.dense_evaluator._worker": {
  "lineno": 464,
  "symbols_in_volume": [
   "bempp.api.utils.pool.get_data"
  ],
  "type": "function"
 },
 "bempp.core.dense_multitrace_evaluator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler": {
  "lineno": 8,
  "symbols_in_volume": [
   "bempp.api.assembly.assembler.AssemblerBase"
  ],
  "type": "class"
 },
 "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler.__init__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler._prepare_buffers": {
  "lineno": 242,
  "symbols_in_volume": [
   "bempp.api.integration.triangle_gauss.rule",
   "bempp.core.cl_helpers.DeviceBuffer",
   "bempp.core.cl_helpers.DeviceBuffer.from_array",
   "bempp.core.cl_helpers.get_type",
   "numpy.int32",
   "numpy.uint32",
   "numpy.uint8"
  ],
  "type": "function"
 },
 "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler.assemble": {
  "lineno": 53,
  "symbols_in_volume": [
   "bempp.api.assembly.blocked_operator.BlockedDiscreteOperator",
   "bempp.api.assembly.discrete_boundary_operator.GenericDiscreteBoundaryOperator",
   "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator",
   "bempp.api.integration.triangle_gauss.rule",
   "bempp.api.log",
   "bempp.core.cl_helpers.DeviceBuffer.from_array",
   "bempp.core.cl_helpers.Kernel",
   "bempp.core.cl_helpers.kernel_source_from_identifier",
   "bempp.core.kernel_helpers.closest_multiple_to_number",
   "bempp.core.kernel_helpers.get_vectorization_information",
   "numpy.array",
   "numpy.complex128",
   "numpy.complex64",
   "numpy.float32",
   "numpy.float64",
   "numpy.object",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler.dtype": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler.matvec": {
  "lineno": 361,
  "symbols_in_volume": [
   "bempp.api.log",
   "numpy.expand_dims",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler.shape": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_potential_assembler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.__init__": {
  "lineno": 12,
  "symbols_in_volume": [
   "bempp.api.assign_parameters",
   "bempp.api.default_device",
   "bempp.api.get_precision"
  ],
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.device_interface": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.evaluate": {
  "lineno": 95,
  "symbols_in_volume": [
   "bempp.api.integration.triangle_gauss.rule",
   "bempp.core.cl_helpers.DeviceBuffer",
   "bempp.core.cl_helpers.DeviceBuffer.from_array",
   "bempp.core.cl_helpers.Kernel",
   "bempp.core.cl_helpers.get_type",
   "bempp.core.cl_helpers.kernel_source_from_identifier",
   "bempp.core.kernel_helpers.closest_multiple_to_number",
   "bempp.core.kernel_helpers.get_vectorization_information",
   "numpy.int32",
   "numpy.iscomplexobj",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.kernel_dimension": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.operator_descriptor": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.parameters": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.points": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.precision": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.space": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.device_grid_interface": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.core.device_grid_interface.DeviceGridInterface": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.core.device_grid_interface.DeviceGridInterface.__init__": {
  "lineno": 7,
  "symbols_in_volume": [
   "bempp.core.cl_helpers.DeviceBuffer.from_array",
   "bempp.core.cl_helpers.get_type",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "bempp.core.device_grid_interface.DeviceGridInterface.buffer": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.device_grid_interface.DeviceGridInterface.device": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.device_grid_interface.DeviceGridInterface.elements_buffer": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.device_grid_interface.DeviceGridInterface.grid": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.device_grid_interface.DeviceGridInterface.grid_buffer": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.kernel_helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.core.kernel_helpers.closest_multiple_to_number": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.kernel_helpers.get_vectorization_information": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.kernel_helpers.run_2d_kernel": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.kernel_helpers.run_chunked_kernel": {
  "lineno": 5,
  "symbols_in_volume": [
   "bempp.core.cl_helpers.wait_for_events"
  ],
  "type": "function"
 },
 "bempp.core.near_field_assembler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler.__init__": {
  "lineno": 11,
  "symbols_in_volume": [
   "numpy.complex128",
   "numpy.complex64",
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler._prepare_buffers": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.diff",
   "numpy.max"
  ],
  "type": "function"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler._setup": {
  "lineno": 145,
  "symbols_in_volume": [
   "bempp.api.log"
  ],
  "type": "function"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler.as_linear_operator": {
  "lineno": 205,
  "symbols_in_volume": [
   "scipy.sparse.linalg.aslinearoperator"
  ],
  "type": "function"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler.dtype": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler.matvec": {
  "lineno": 182,
  "symbols_in_volume": [
   "bempp.api.log"
  ],
  "type": "function"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler.shape": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.near_field_assembler.process_near_field": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.concatenate",
   "numpy.int64"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "bempp.core.singular_assembler.SingularAssembler": {
  "lineno": 14,
  "symbols_in_volume": [
   "bempp.api.assembly.assembler.AssemblerBase"
  ],
  "type": "class"
 },
 "bempp.core.singular_assembler.SingularAssembler.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler.SingularAssembler.assemble": {
  "lineno": 22,
  "symbols_in_volume": [
   "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator",
   "bempp.api.space.space.return_compatible_representation",
   "bempp.api.utils.helpers.promote_to_double_precision",
   "scipy.sparse.coo_matrix",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation": {
  "lineno": 652,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.__init__": {
  "lineno": 655,
  "symbols_in_volume": [
   "bempp.api.integration.duffy_collocation.singular_collocation_rule_piecewise_const",
   "numpy.flatnonzero"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation._vectorize_indices": {
  "lineno": 781,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation._vectorize_offsets": {
  "lineno": 810,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation._vectorize_points": {
  "lineno": 801,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation._vectorize_weights": {
  "lineno": 806,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation._vectorized_local_number_of_integration_points": {
  "lineno": 791,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.coincident_rule": {
  "lineno": 692,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.grid": {
  "lineno": 697,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.index_count": {
  "lineno": 707,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.number_of_elements": {
  "lineno": 702,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.number_of_points": {
  "lineno": 722,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.order": {
  "lineno": 682,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.parameters": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.push_to_device": {
  "lineno": 726,
  "symbols_in_volume": [
   "bempp.core.cl_helpers.DeviceBuffer.from_array",
   "bempp.core.cl_helpers.get_type"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.test_indices": {
  "lineno": 712,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.trial_indices": {
  "lineno": 717,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "class"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.__init__": {
  "lineno": 269,
  "symbols_in_volume": [
   "bempp.api.integration.duffy_galerkin.rule",
   "numpy.flatnonzero"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._collect_remapped_quad_points_for_edge_adjacent_rule": {
  "lineno": 446,
  "symbols_in_volume": [
   "bempp.api.integration.duffy_galerkin.remap_points_shared_edge",
   "numpy.hstack"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._collect_remapped_quad_points_for_vertex_adjacent_rule": {
  "lineno": 472,
  "symbols_in_volume": [
   "bempp.api.integration.duffy_galerkin.remap_points_shared_vertex",
   "numpy.hstack"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._compute_edge_offsets": {
  "lineno": 492,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._compute_vertex_offsets": {
  "lineno": 510,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._vectorize_indices": {
  "lineno": 524,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._vectorize_offsets": {
  "lineno": 603,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._vectorize_points": {
  "lineno": 562,
  "symbols_in_volume": [
   "numpy.hstack"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._vectorize_weights": {
  "lineno": 591,
  "symbols_in_volume": [
   "numpy.hstack"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._vectorized_local_number_of_integration_points": {
  "lineno": 544,
  "symbols_in_volume": [
   "numpy.empty"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.coincident_rule": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.edge_adjacency": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.edge_adjacent_rule": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.grid": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.index_count": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.number_of_elements": {
  "lineno": 364,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.number_of_points": {
  "lineno": 384,
  "symbols_in_volume": [
   "bempp.api.integration.duffy_galerkin.number_of_quadrature_points"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.order": {
  "lineno": 324,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.parameters": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.push_to_device": {
  "lineno": 388,
  "symbols_in_volume": [
   "bempp.core.cl_helpers.DeviceBuffer.from_array",
   "bempp.core.cl_helpers.get_type"
  ],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.test_indices": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.trial_indices": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.vertex_adjacency": {
  "lineno": 359,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.vertex_adjacent_rule": {
  "lineno": 344,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.singular_assembler.assemble_singular_part": {
  "lineno": 90,
  "symbols_in_volume": [
   "bempp.core.cl_helpers.DeviceBuffer",
   "bempp.core.cl_helpers.DeviceBuffer.from_array",
   "bempp.core.cl_helpers.Kernel",
   "bempp.core.cl_helpers.get_type",
   "bempp.core.cl_helpers.kernel_source_from_identifier",
   "bempp.helpers.timeit",
   "numpy.arange",
   "numpy.int32",
   "numpy.repeat",
   "numpy.tile"
  ],
  "type": "function"
 },
 "bempp.core.sparse_assembler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.core.sparse_assembler.SparseAssembler": {
  "lineno": 8,
  "symbols_in_volume": [
   "bempp.api.assembly.assembler.AssemblerBase"
  ],
  "type": "class"
 },
 "bempp.core.sparse_assembler.SparseAssembler.__init__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.core.sparse_assembler.SparseAssembler.assemble": {
  "lineno": 16,
  "symbols_in_volume": [
   "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator",
   "bempp.api.space.space.return_compatible_representation",
   "bempp.api.utils.helpers.promote_to_double_precision",
   "scipy.sparse.coo_matrix"
  ],
  "type": "function"
 },
 "bempp.core.sparse_assembler._prepare_buffers": {
  "lineno": 151,
  "symbols_in_volume": [
   "bempp.core.cl_helpers.DeviceBuffer",
   "bempp.core.cl_helpers.DeviceBuffer.from_array",
   "bempp.core.cl_helpers.get_type",
   "numpy.flatnonzero",
   "numpy.int32",
   "numpy.uint32"
  ],
  "type": "function"
 },
 "bempp.core.sparse_assembler.assemble_sparse": {
  "lineno": 64,
  "symbols_in_volume": [
   "bempp.api.integration.triangle_gauss.rule",
   "bempp.core.cl_helpers.Kernel",
   "bempp.core.cl_helpers.kernel_source_from_identifier",
   "bempp.core.kernel_helpers.run_chunked_kernel",
   "numpy.arange",
   "numpy.flatnonzero",
   "numpy.repeat",
   "numpy.tile"
  ],
  "type": "function"
 },
 "bempp.core.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.core.test.test_cl_helpers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "bempp.core.test.test_cl_helpers.device_buffer": {
  "lineno": 12,
  "symbols_in_volume": [
   "bempp.core.cl_helpers.DeviceBuffer",
   "bempp.core.cl_helpers.default_device",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "bempp.core.test.test_cl_helpers.test_buffer_mapping": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.copy",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "bempp.helpers": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "bempp.helpers.timeit": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "bempp.helpers.timeit.timed_fun": {
  "lineno": 16,
  "symbols_in_volume": [
   "bempp.api.log",
   "functools.wraps",
   "time.time"
  ],
  "type": "function"
 },
 "bempp.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 }
}