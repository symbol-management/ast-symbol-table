{
 "bempp": {
  "data": {},
  "type": "module"
 },
 "bempp.api": {
  "data": {
   "symbols_in_volume": [
    "bempp.api.CRITICAL",
    "bempp.api.DEBUG",
    "bempp.api.ERROR",
    "bempp.api.INFO",
    "bempp.api.TIMING",
    "bempp.api.WARNING",
    "bempp.api._get_version",
    "bempp.api._gmsh_path",
    "bempp.api._init_logger",
    "bempp.api.utils.DefaultParameters",
    "bempp.api.warnings",
    "logging.CRITICAL",
    "logging.DEBUG",
    "logging.ERROR",
    "logging.INFO",
    "logging.WARNING",
    "numba.errors.NumbaDeprecationWarning",
    "numba.errors.NumbaPendingDeprecationWarning",
    "numba.errors.NumbaPerformanceWarning",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "os.path.realpath",
    "tempfile.mkdtemp"
   ]
  },
  "type": "module"
 },
 "bempp.api.ALL": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "bempp.api.BEMPP_PATH": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "bempp.api.BlockedOperator": {
  "data": {
   "shadows": "bempp.api.assembly.blocked_operator.BlockedOperator"
  },
  "type": "import"
 },
 "bempp.api.CONSOLE_LOGGING_HANDLER": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "bempp.api.CRITICAL": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "bempp.api.DEBUG": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "bempp.api.DEFAULT_LOGGING_FORMAT": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "bempp.api.DEVICE_PRECISION_CPU": {
  "data": {
   "lineno": 241
  },
  "type": "constant"
 },
 "bempp.api.DEVICE_PRECISION_GPU": {
  "data": {
   "lineno": 242
  },
  "type": "constant"
 },
 "bempp.api.DefaultParameters": {
  "data": {
   "shadows": "bempp.api.utils.DefaultParameters"
  },
  "type": "import"
 },
 "bempp.api.ERROR": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "bempp.api.GLOBAL_PARAMETERS": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "bempp.api.GMSH_PATH": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "bempp.api.GeneralizedBlockedOperator": {
  "data": {
   "shadows": "bempp.api.assembly.blocked_operator.GeneralizedBlockedOperator"
  },
  "type": "import"
 },
 "bempp.api.Grid": {
  "data": {
   "shadows": "bempp.api.grid.grid.Grid"
  },
  "type": "import"
 },
 "bempp.api.GridFunction": {
  "data": {
   "shadows": "bempp.api.assembly.grid_function.GridFunction"
  },
  "type": "import"
 },
 "bempp.api.INFO": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "bempp.api.LOGGER": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "bempp.api.LOG_LEVEL": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "bempp.api.MemProfiler": {
  "data": {
   "shadows": "bempp.api.utils.helpers.MemProfiler"
  },
  "type": "import"
 },
 "bempp.api.MultiplicationOperator": {
  "data": {
   "shadows": "bempp.api.assembly.boundary_operator.MultiplicationOperator"
  },
  "type": "import"
 },
 "bempp.api.NumbaDeprecationWarning": {
  "data": {
   "shadows": "numba.errors.NumbaDeprecationWarning"
  },
  "type": "import"
 },
 "bempp.api.NumbaPendingDeprecationWarning": {
  "data": {
   "shadows": "numba.errors.NumbaPendingDeprecationWarning"
  },
  "type": "import"
 },
 "bempp.api.NumbaPerformanceWarning": {
  "data": {
   "shadows": "numba.errors.NumbaPerformanceWarning"
  },
  "type": "import"
 },
 "bempp.api.PLOT_BACKEND": {
  "data": {
   "lineno": 243
  },
  "type": "constant"
 },
 "bempp.api.TIMING": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "bempp.api.TMP_PATH": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "bempp.api.Timer": {
  "data": {
   "lineno": 140
  },
  "type": "class"
 },
 "bempp.api.Timer.__enter__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "time.time"
   ]
  },
  "type": "function"
 },
 "bempp.api.Timer.__exit__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "time.time"
   ]
  },
  "type": "function"
 },
 "bempp.api.Timer.__init__": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "bempp.api.VECTORIZATION": {
  "data": {
   "lineno": 240
  },
  "type": "constant"
 },
 "bempp.api.WARNING": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "bempp.api.ZeroBoundaryOperator": {
  "data": {
   "shadows": "bempp.api.assembly.boundary_operator.ZeroBoundaryOperator"
  },
  "type": "import"
 },
 "bempp.api._DeviceInterface": {
  "data": {
   "shadows": "bempp.core.cl_helpers.DeviceInterface"
  },
  "type": "import"
 },
 "bempp.api.__version__": {
  "data": {
   "lineno": 238
  },
  "type": "constant"
 },
 "bempp.api._cl": {
  "data": {
   "shadows": "pyopencl"
  },
  "type": "import"
 },
 "bempp.api._get_version": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "bempp.version.__version__"
   ]
  },
  "type": "function"
 },
 "bempp.api._gmsh_path": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "bempp.api.utils.which",
    "os.name",
    "print"
   ]
  },
  "type": "function"
 },
 "bempp.api._init_logger": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "bempp.api.DEBUG",
    "logging.NullHandler",
    "logging.addLevelName",
    "logging.getLogger"
   ]
  },
  "type": "function"
 },
 "bempp.api._logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "bempp.api._os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bempp.api._tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "bempp.api._time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "bempp.api.as_matrix": {
  "data": {
   "shadows": "bempp.api.assembly.discrete_boundary_operator.as_matrix"
  },
  "type": "import"
 },
 "bempp.api.assembly": {
  "data": {},
  "type": "module"
 },
 "bempp.api.assembly.assembler": {
  "data": {},
  "type": "module"
 },
 "bempp.api.assembly.assembler.AssemblerBase": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.assembly.assembler.AssemblerBase.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "bempp.api.assign_parameters"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerBase.assemble": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerBase.domain": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerBase.dual_to_range": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerBase.parameters": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerInterface": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.assembly.assembler.AssemblerInterface.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "bempp.api.assembly.assembler._create_assembler",
    "bempp.api.assign_parameters",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerInterface.assemble": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerInterface.domain": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerInterface.dual_to_range": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.assembler.AssemblerInterface.parameters": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.assembler.DenseAssembler": {
  "data": {
   "shadows": "bempp.core.dense_assembler.DenseAssembler"
  },
  "type": "import"
 },
 "bempp.api.assembly.assembler.DenseEvaluatorAssembler": {
  "data": {
   "shadows": "bempp.core.dense_evaluator.DenseEvaluatorAssembler"
  },
  "type": "import"
 },
 "bempp.api.assembly.assembler.DenseMultitraceEvaluatorAssembler": {
  "data": {
   "shadows": "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler"
  },
  "type": "import"
 },
 "bempp.api.assembly.assembler.SingularAssembler": {
  "data": {
   "shadows": "bempp.core.singular_assembler.SingularAssembler"
  },
  "type": "import"
 },
 "bempp.api.assembly.assembler.SparseAssembler": {
  "data": {
   "shadows": "bempp.core.sparse_assembler.SparseAssembler"
  },
  "type": "import"
 },
 "bempp.api.assembly.assembler._api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.assembly.assembler._create_assembler": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "bempp.core.dense_assembler.DenseAssembler",
    "bempp.core.dense_evaluator.DenseEvaluatorAssembler",
    "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler",
    "bempp.core.singular_assembler.SingularAssembler",
    "bempp.core.sparse_assembler.SparseAssembler"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.assembler.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.assembly.grid_function": {
  "data": {},
  "type": "module"
 },
 "bempp.api.assembly.grid_function.GridFunction": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.assembly.grid_function.GridFunction.__add__": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.assembly.grid_function.GridFunction"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.__div__": {
  "data": {
   "lineno": 576
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.__init__": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.assembly.grid_function._project_function",
    "bempp.api.integration.triangle_gauss.rule",
    "bempp.api.space.space.return_compatible_representation",
    "bempp.api.utils.helpers.assign_parameters",
    "numpy.all",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.__mul__": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "NotImplemented",
    "bempp.api.assembly.grid_function.GridFunction",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.__neg__": {
  "data": {
   "lineno": 582
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.__rmul__": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "NotImplemented",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.__sub__": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.__truediv__": {
  "data": {
   "lineno": 579
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.coefficients": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "bempp.api.assembly.discrete_boundary_operator.InverseSparseDiscreteBoundaryOperator",
    "bempp.api.operators.boundary.sparse.identity",
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.component_count": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.dtype": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.dual_space": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.evaluate": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.tensordot"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.evaluate_on_element_centers": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.evaluate_on_vertices": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.bool",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.from_ones": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.from_random": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.from_zeros": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.grid_coefficients": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.imag": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.imag",
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.integrate": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "bempp.api.assembly.grid_function._integrate",
    "bempp.api.integration.triangle_gauss.rule"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.l2_norm": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.parameters": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.plot": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "bempp.api.external.viewers.visualize"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.project_to_space": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "bempp.api.assembly.grid_function.GridFunction",
    "bempp.api.operators.boundary.sparse.identity"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.projections": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.real": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "numpy.real",
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.representation": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.GridFunction.space": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.InverseSparseDiscreteBoundaryOperator": {
  "data": {
   "shadows": "bempp.api.assembly.discrete_boundary_operator.InverseSparseDiscreteBoundaryOperator"
  },
  "type": "import"
 },
 "bempp.api.assembly.grid_function._GridData": {
  "data": {
   "shadows": "bempp.api.grid.grid.GridData"
  },
  "type": "import"
 },
 "bempp.api.assembly.grid_function._integrate": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "evaluate_on_element",
    "numba.njit",
    "numpy.empty",
    "numpy.float64",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.assembly.grid_function._numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "bempp.api.assembly.grid_function._project_function": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "evaluate_on_element",
    "fun",
    "numba.njit",
    "numpy.empty",
    "numpy.float64",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.assign_parameters": {
  "data": {
   "shadows": "bempp.api.utils.helpers.assign_parameters"
  },
  "type": "import"
 },
 "bempp.api.assembly.grid_function.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.assembly.grid_function.complex_callable": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "numba.complex128",
    "numba.float64",
    "numba.njit",
    "numba.uint32",
    "numba.void"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.identity": {
  "data": {
   "shadows": "bempp.api.operators.boundary.sparse.identity"
  },
  "type": "import"
 },
 "bempp.api.assembly.grid_function.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.assembly.grid_function.ones": {
  "data": {
   "shadows": "numpy.ones"
  },
  "type": "import"
 },
 "bempp.api.assembly.grid_function.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "bempp.api.assembly.grid_function.real_callable": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numba.float64",
    "numba.njit",
    "numba.uint32",
    "numba.void"
   ]
  },
  "type": "function"
 },
 "bempp.api.assembly.grid_function.return_compatible_representation": {
  "data": {
   "shadows": "bempp.api.space.space.return_compatible_representation"
  },
  "type": "import"
 },
 "bempp.api.assembly.grid_function.rule": {
  "data": {
   "shadows": "bempp.api.integration.triangle_gauss.rule"
  },
  "type": "import"
 },
 "bempp.api.assembly.grid_function.visualize": {
  "data": {
   "shadows": "bempp.api.external.viewers.visualize"
  },
  "type": "import"
 },
 "bempp.api.assembly.grid_function.zeros": {
  "data": {
   "shadows": "numpy.zeros"
  },
  "type": "import"
 },
 "bempp.api.assign_parameters": {
  "data": {
   "shadows": "bempp.api.utils.helpers.assign_parameters"
  },
  "type": "import"
 },
 "bempp.api.benchmark": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "bempp.api.pytest",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "bempp.api.cg": {
  "data": {
   "shadows": "bempp.api.linalg.iterative_solvers.cg"
  },
  "type": "import"
 },
 "bempp.api.complex_callable": {
  "data": {
   "shadows": "bempp.api.assembly.grid_function.complex_callable"
  },
  "type": "import"
 },
 "bempp.api.compute_lu_factors": {
  "data": {
   "shadows": "bempp.api.linalg.direct_solvers.compute_lu_factors"
  },
  "type": "import"
 },
 "bempp.api.create_device_pool": {
  "data": {
   "shadows": "bempp.api.utils.pool.create_device_pool"
  },
  "type": "import"
 },
 "bempp.api.default_context": {
  "data": {
   "shadows": "bempp.core.cl_helpers.default_context"
  },
  "type": "import"
 },
 "bempp.api.default_device": {
  "data": {
   "shadows": "bempp.core.cl_helpers.default_device"
  },
  "type": "import"
 },
 "bempp.api.enable_console_logging": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "bempp.api.CONSOLE_LOGGING_HANDLER",
    "bempp.api.LOG_LEVEL",
    "bempp.api.utils.pool._MY_ID",
    "bempp.api.utils.pool.is_worker",
    "logging.Formatter",
    "logging.StreamHandler"
   ]
  },
  "type": "function"
 },
 "bempp.api.export": {
  "data": {
   "shadows": "bempp.api.grid.io.export"
  },
  "type": "import"
 },
 "bempp.api.external": {
  "data": {},
  "type": "module"
 },
 "bempp.api.external.fenics": {
  "data": {},
  "type": "module"
 },
 "bempp.api.external.fenics.FenicsOperator": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.external.fenics.FenicsOperator.__init__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "bempp.api.external.fenics.FenicsOperator.weak_form": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator",
    "dolfin.as_backend_type",
    "dolfin.assemble",
    "dolfin.parameters",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "bempp.api.external.fenics.SparseDiscreteBoundaryOperator": {
  "data": {
   "shadows": "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator"
  },
  "type": "import"
 },
 "bempp.api.external.fenics._dolfin": {
  "data": {
   "shadows": "dolfin"
  },
  "type": "import"
 },
 "bempp.api.external.fenics.as_backend_type": {
  "data": {
   "shadows": "dolfin.as_backend_type"
  },
  "type": "import"
 },
 "bempp.api.external.fenics.assemble": {
  "data": {
   "shadows": "dolfin.assemble"
  },
  "type": "import"
 },
 "bempp.api.external.fenics.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.external.fenics.boundary_grid_from_fenics_mesh": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "bempp.api.grid_from_element_data",
    "dolfin.BoundaryMesh"
   ]
  },
  "type": "function"
 },
 "bempp.api.external.fenics.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "bempp.api.external.fenics.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "bempp.api.external.fenics.dolfin": {
  "data": {
   "shadows": "dolfin"
  },
  "type": "import"
 },
 "bempp.api.external.fenics.fenics_space_info": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "bempp.api.external.fenics.fenics_to_bempp_trace_data": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NotImplementedError",
    "bempp.api.external.fenics.fenics_space_info",
    "bempp.api.external.fenics.p1_trace"
   ]
  },
  "type": "function"
 },
 "bempp.api.external.fenics.grid_from_element_data": {
  "data": {
   "shadows": "bempp.api.grid_from_element_data"
  },
  "type": "import"
 },
 "bempp.api.external.fenics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.external.fenics.p1_trace": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.external.fenics.dolfin",
    "bempp.api.external.fenics.fenics_space_info",
    "len",
    "numpy.arange",
    "numpy.int64",
    "numpy.ones",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "bempp.api.external.fenics.parameters": {
  "data": {
   "shadows": "dolfin.parameters"
  },
  "type": "import"
 },
 "bempp.api.external.viewers": {
  "data": {},
  "type": "module"
 },
 "bempp.api.external.viewers.GMSH_PATH": {
  "data": {
   "shadows": "bempp.api.GMSH_PATH"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.Grid": {
  "data": {
   "shadows": "bempp.api.grid.grid.Grid"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.GridFunction": {
  "data": {
   "shadows": "bempp.api.GridFunction"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.TMP_PATH": {
  "data": {
   "shadows": "bempp.api.TMP_PATH"
  },
  "type": "import"
 },
 "bempp.api.external.viewers._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.enable_gmsh_viewer": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "bempp.api.external.viewers.enable_jupyter_viewer": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "bempp.api.external.viewers.enable_paraview_viewer": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "bempp.api.external.viewers.export": {
  "data": {
   "shadows": "bempp.api.export"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.ff": {
  "data": {
   "shadows": "plotly.figure_factory"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.go": {
  "data": {
   "shadows": "plotly.graph_objs"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.plotly": {
  "data": {
   "shadows": "plotly"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "bempp.api.external.viewers.visualize": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "bempp.api.external.viewers.visualize_with_gmsh",
    "bempp.api.external.viewers.visualize_with_jupyter_notebook",
    "bempp.api.external.viewers.visualize_with_paraview",
    "numpy.abs",
    "numpy.imag",
    "numpy.log",
    "numpy.real",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bempp.api.external.viewers.visualize_with_gmsh": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "bempp.api.GMSH_PATH",
    "bempp.api.GridFunction",
    "bempp.api.TMP_PATH",
    "bempp.api.export",
    "bempp.api.external.viewers.subprocess",
    "bempp.api.external.viewers.tempfile",
    "bempp.api.grid.grid.Grid",
    "isinstance",
    "print",
    "transformation"
   ]
  },
  "type": "function"
 },
 "bempp.api.external.viewers.visualize_with_jupyter_notebook": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.external.viewers.plotly",
    "bempp.api.grid.grid.Grid",
    "cmap",
    "colorfun",
    "isinstance",
    "matplotlib.colors.Normalize",
    "matplotlib.pyplot.get_cmap",
    "norm",
    "numpy.array",
    "numpy.max",
    "numpy.min",
    "numpy.real",
    "numpy.rint",
    "numpy.zeros",
    "plotly.figure_factory.create_trisurf",
    "plotly.graph_objs.layout.Scene",
    "transformation"
   ]
  },
  "type": "function"
 },
 "bempp.api.external.viewers.visualize_with_paraview": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "EnvironmentError",
    "bempp.api.GridFunction",
    "bempp.api.TMP_PATH",
    "bempp.api.export",
    "bempp.api.external.viewers.os",
    "bempp.api.external.viewers.subprocess",
    "bempp.api.external.viewers.tempfile",
    "bempp.api.grid.grid.Grid",
    "bempp.api.utils.which",
    "isinstance",
    "transformation"
   ]
  },
  "type": "function"
 },
 "bempp.api.external.viewers.which": {
  "data": {
   "shadows": "bempp.api.utils.which"
  },
  "type": "import"
 },
 "bempp.api.flush_log": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "bempp.api.fmm": {
  "data": {},
  "type": "module"
 },
 "bempp.api.fmm.common": {
  "data": {},
  "type": "module"
 },
 "bempp.api.fmm.common.LeafNode": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.fmm.common.LeafNode.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.common.LeafNode.colleagues": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.common.LeafNode.identifier": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.common.LeafNode.source_ids": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.common.LeafNode.target_ids": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.common._abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "bempp.api.fmm.common._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.fmm.common._numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "bempp.api.fmm.common.aslinearoperator": {
  "data": {
   "shadows": "scipy.sparse.linalg.aslinearoperator"
  },
  "type": "import"
 },
 "bempp.api.fmm.common.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.fmm.common.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "bempp.api.fmm.common.grid_to_points": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "bempp.api.fmm.common.grid_to_points_impl"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.common.grid_to_points_impl": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numba.njit",
    "numpy.empty",
    "numpy.expand_dims",
    "numpy.float64",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.common.map_space_to_points": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "bempp.api.fmm.common.map_space_to_points_impl",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.linalg.aslinearoperator"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.common.map_space_to_points_impl": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "len",
    "numba.njit",
    "numba_evaluate",
    "numpy.arange",
    "numpy.empty",
    "numpy.float64",
    "numpy.int64",
    "numpy.repeat",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm": {
  "data": {},
  "type": "module"
 },
 "bempp.api.fmm.exafmm.Exafmm": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.fmm.exafmm.Exafmm.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm._compute_near_field_matrix": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "bempp.api.operators.boundary.laplace.single_layer",
    "bempp.core.near_field_assembler.NearFieldAssembler"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm._evaluate": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm._evaluate_far_field": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "bempp.api.fmm.exafmm.exafmm_laplace"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm._setup": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "LeafNode",
    "ValueError",
    "bempp.api.fmm.exafmm._NCRITICAL",
    "bempp.api.fmm.exafmm.compute_max_level",
    "bempp.api.fmm.exafmm.exafmm_laplace",
    "bempp.api.integration.triangle_gauss.rule",
    "exafmm_laplace.build_list",
    "exafmm_laplace.build_tree",
    "exafmm_laplace.init_sources",
    "exafmm_laplace.init_targets",
    "grid_to_points",
    "len",
    "map_space_to_points",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.as_linear_operator": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "numpy.float64",
    "scipy.sparse.linalg.LinearOperator"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.domain": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.dual_to_range": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.leaf_nodes": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.local_points": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.source_grid": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.source_transform": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.sources": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.target_grid": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.target_transform": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.Exafmm.targets": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.LinearOperator": {
  "data": {
   "shadows": "scipy.sparse.linalg.LinearOperator"
  },
  "type": "import"
 },
 "bempp.api.fmm.exafmm.NearFieldAssembler": {
  "data": {
   "shadows": "bempp.core.near_field_assembler.NearFieldAssembler"
  },
  "type": "import"
 },
 "bempp.api.fmm.exafmm._NCRITICAL": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "bempp.api.fmm.exafmm._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.fmm.exafmm.aslinearoperator": {
  "data": {
   "shadows": "scipy.sparse.linalg.aslinearoperator"
  },
  "type": "import"
 },
 "bempp.api.fmm.exafmm.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.fmm.exafmm.build_list": {
  "data": {
   "shadows": "exafmm_laplace.build_list"
  },
  "type": "import"
 },
 "bempp.api.fmm.exafmm.build_tree": {
  "data": {
   "shadows": "exafmm_laplace.build_tree"
  },
  "type": "import"
 },
 "bempp.api.fmm.exafmm.compute_max_level": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.log2",
    "numpy.max",
    "numpy.maximum",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "bempp.api.fmm.exafmm.exafmm_laplace": {
  "data": {
   "shadows": "exafmm_laplace"
  },
  "type": "import"
 },
 "bempp.api.fmm.exafmm.init_sources": {
  "data": {
   "shadows": "exafmm_laplace.init_sources"
  },
  "type": "import"
 },
 "bempp.api.fmm.exafmm.init_targets": {
  "data": {
   "shadows": "exafmm_laplace.init_targets"
  },
  "type": "import"
 },
 "bempp.api.fmm.exafmm.rule": {
  "data": {
   "shadows": "bempp.api.integration.triangle_gauss.rule"
  },
  "type": "import"
 },
 "bempp.api.fmm.exafmm.single_layer": {
  "data": {
   "shadows": "bempp.api.operators.boundary.laplace.single_layer"
  },
  "type": "import"
 },
 "bempp.api.function_space": {
  "data": {
   "shadows": "bempp.api.space.function_space"
  },
  "type": "import"
 },
 "bempp.api.get_context_by_name": {
  "data": {
   "shadows": "bempp.core.cl_helpers.get_context_by_name"
  },
  "type": "import"
 },
 "bempp.api.get_precision": {
  "data": {
   "shadows": "bempp.core.cl_helpers.get_precision"
  },
  "type": "import"
 },
 "bempp.api.gmres": {
  "data": {
   "shadows": "bempp.api.linalg.iterative_solvers.gmres"
  },
  "type": "import"
 },
 "bempp.api.grid": {
  "data": {},
  "type": "module"
 },
 "bempp.api.grid.io": {
  "data": {},
  "type": "module"
 },
 "bempp.api.grid.io.Grid": {
  "data": {
   "shadows": "bempp.api.grid.grid.Grid"
  },
  "type": "import"
 },
 "bempp.api.grid.io._meshio": {
  "data": {
   "shadows": "meshio"
  },
  "type": "import"
 },
 "bempp.api.grid.io._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.grid.io._transform_array": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "mode",
    "numpy.abs",
    "numpy.expand_dims",
    "numpy.imag",
    "numpy.log",
    "numpy.real",
    "numpy.sqrt",
    "numpy.squeeze",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "bempp.api.grid.io.export": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.grid.io._transform_array",
    "bempp.api.grid.io.os",
    "dict",
    "len",
    "meshio.write_points_cells",
    "numpy.array",
    "numpy.imag",
    "numpy.iscomplexobj",
    "numpy.real",
    "range",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "bempp.api.grid.io.import_grid": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "bempp.api.grid.grid.Grid",
    "meshio.read"
   ]
  },
  "type": "function"
 },
 "bempp.api.grid.io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bempp.api.grid.test": {
  "data": {},
  "type": "module"
 },
 "bempp.api.grid.test.test_grid": {
  "data": {},
  "type": "module"
 },
 "bempp.api.grid.test.test_grid.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.grid.test.test_grid.get_element_to_element_matrix": {
  "data": {
   "shadows": "bempp.api.grid.grid.get_element_to_element_matrix"
  },
  "type": "import"
 },
 "bempp.api.grid.test.test_grid.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.grid.test.test_grid.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.grid.test.test_grid.test_as_array": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.test_edge_adjacency": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bempp.api.grid.grid.get_element_to_element_matrix",
    "numpy.count_nonzero",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.test_element_volume": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "bempp.api.grid.test.test_grid.two_element_geometries",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.test_grid_number_of_elements": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.test_integration_element": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "bempp.api.grid.test.test_grid.two_element_geometries",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.test_number_of_edges": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.test_number_of_vertices": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.test_vertex_adjacency": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bempp.api.grid.grid.get_element_to_element_matrix",
    "numpy.count_nonzero"
   ]
  },
  "type": "function"
 },
 "bempp.api.grid.test.test_grid.two_element_geometries": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bempp.api.grid.test.test_grid.pytest"
   ]
  },
  "type": "function"
 },
 "bempp.api.import_grid": {
  "data": {
   "shadows": "bempp.api.grid.io.import_grid"
  },
  "type": "import"
 },
 "bempp.api.integration": {
  "data": {},
  "type": "module"
 },
 "bempp.api.integration.duffy_collocation": {
  "data": {},
  "type": "module"
 },
 "bempp.api.integration.duffy_collocation._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.integration.duffy_collocation.duffy_rule_on_reference_triangle": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "bempp.api.integration.gauss.rule",
    "len",
    "numpy.empty",
    "numpy.float64",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.integration.duffy_collocation.rule": {
  "data": {
   "shadows": "bempp.api.integration.gauss.rule"
  },
  "type": "import"
 },
 "bempp.api.integration.duffy_collocation.singular_collocation_rule_piecewise_const": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "bempp.api.integration.duffy_collocation.duffy_rule_on_reference_triangle",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.empty",
    "numpy.float64",
    "numpy.hstack",
    "numpy.linalg.det",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.integration.duffy_galerkin": {
  "data": {},
  "type": "module"
 },
 "bempp.api.integration.duffy_galerkin._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.integration.duffy_galerkin.gauss_rule": {
  "data": {
   "shadows": "rule"
  },
  "type": "import"
 },
 "bempp.api.integration.duffy_galerkin.number_of_quadrature_points": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bempp.api.integration.duffy_galerkin.remap_points_shared_edge": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "numpy.require",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.api.integration.duffy_galerkin.remap_points_shared_vertex": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "bempp.api.integration.duffy_galerkin.rule": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.integration.gauss": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "bempp.api.integration.gauss._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.integration.gauss.coords": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "bempp.api.integration.gauss.rule": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "bempp.api.integration.gauss.coords",
    "bempp.api.integration.gauss.weights"
   ]
  },
  "type": "function"
 },
 "bempp.api.integration.gauss.weights": {
  "data": {
   "lineno": 539
  },
  "type": "constant"
 },
 "bempp.api.integration.test": {
  "data": {},
  "type": "module"
 },
 "bempp.api.integration.test.test_duffy": {
  "data": {},
  "type": "module"
 },
 "bempp.api.integration.test.test_duffy._duffy": {
  "data": {
   "shadows": "bempp.api.integration.duffy_galerkin"
  },
  "type": "import"
 },
 "bempp.api.integration.test.test_duffy._order": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "bempp.api.integration.test.test_duffy.test_number_of_quad_points_for_coincident_case": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "bempp.api.integration.duffy_galerkin.number_of_quadrature_points",
    "bempp.api.integration.test.test_duffy._order"
   ]
  },
  "type": "function"
 },
 "bempp.api.integration.test.test_duffy.test_number_of_quad_points_for_edge_adjacent_case": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "bempp.api.integration.duffy_galerkin.number_of_quadrature_points",
    "bempp.api.integration.test.test_duffy._order"
   ]
  },
  "type": "function"
 },
 "bempp.api.integration.test.test_duffy.test_number_of_quad_points_for_vertex_adjacent_case": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bempp.api.integration.duffy_galerkin.number_of_quadrature_points",
    "bempp.api.integration.test.test_duffy._order"
   ]
  },
  "type": "function"
 },
 "bempp.api.integration.triangle_gauss": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "bempp.api.integration.triangle_gauss._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.integration.triangle_gauss.coords": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "bempp.api.integration.triangle_gauss.highest_order": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "bempp.api.integration.triangle_gauss.points_address": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "bempp.api.integration.triangle_gauss.points_per_order": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "bempp.api.integration.triangle_gauss.rule": {
  "data": {
   "lineno": 2926,
   "symbols_in_volume": [
    "bempp.api.integration.triangle_gauss.coords",
    "bempp.api.integration.triangle_gauss.points_address",
    "bempp.api.integration.triangle_gauss.points_per_order",
    "bempp.api.integration.triangle_gauss.weights",
    "numpy.asfortranarray",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "bempp.api.integration.triangle_gauss.weights": {
  "data": {
   "lineno": 2224
  },
  "type": "constant"
 },
 "bempp.api.linalg": {
  "data": {},
  "type": "module"
 },
 "bempp.api.linalg.direct_solvers": {
  "data": {},
  "type": "module"
 },
 "bempp.api.linalg.direct_solvers.BlockedOperatorBase": {
  "data": {
   "shadows": "bempp.api.assembly.blocked_operator.BlockedOperatorBase"
  },
  "type": "import"
 },
 "bempp.api.linalg.direct_solvers.GridFunction": {
  "data": {
   "shadows": "bempp.api.GridFunction"
  },
  "type": "import"
 },
 "bempp.api.linalg.direct_solvers.as_matrix": {
  "data": {
   "shadows": "bempp.api.as_matrix"
  },
  "type": "import"
 },
 "bempp.api.linalg.direct_solvers.compute_lu_factors": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "scipy.linalg.lu_factor"
   ]
  },
  "type": "function"
 },
 "bempp.api.linalg.direct_solvers.grid_function_list_from_coefficients": {
  "data": {
   "shadows": "bempp.api.assembly.blocked_operator.grid_function_list_from_coefficients"
  },
  "type": "import"
 },
 "bempp.api.linalg.direct_solvers.lu": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.assembly.blocked_operator.BlockedOperatorBase",
    "bempp.api.assembly.blocked_operator.grid_function_list_from_coefficients",
    "bempp.api.assembly.blocked_operator.projections_from_grid_functions_list",
    "isinstance",
    "scipy.linalg.lu_factor",
    "scipy.linalg.lu_solve",
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "bempp.api.linalg.direct_solvers.lu_factor": {
  "data": {
   "shadows": "scipy.linalg.lu_factor"
  },
  "type": "import"
 },
 "bempp.api.linalg.direct_solvers.lu_solve": {
  "data": {
   "shadows": "scipy.linalg.lu_solve"
  },
  "type": "import"
 },
 "bempp.api.linalg.direct_solvers.projections_from_grid_functions_list": {
  "data": {
   "shadows": "bempp.api.assembly.blocked_operator.projections_from_grid_functions_list"
  },
  "type": "import"
 },
 "bempp.api.linalg.direct_solvers.solve": {
  "data": {
   "shadows": "scipy.linalg.solve"
  },
  "type": "import"
 },
 "bempp.api.linalg.iterative_solvers": {
  "data": {},
  "type": "module"
 },
 "bempp.api.linalg.iterative_solvers.BlockedOperatorBase": {
  "data": {
   "shadows": "bempp.api.assembly.blocked_operator.BlockedOperatorBase"
  },
  "type": "import"
 },
 "bempp.api.linalg.iterative_solvers.BoundaryOperator": {
  "data": {
   "shadows": "bempp.api.assembly.boundary_operator.BoundaryOperator"
  },
  "type": "import"
 },
 "bempp.api.linalg.iterative_solvers.GridFunction": {
  "data": {
   "shadows": "bempp.api.assembly.grid_function.GridFunction"
  },
  "type": "import"
 },
 "bempp.api.linalg.iterative_solvers._gmres_block_op_imp": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "bempp.api.assembly.blocked_operator.coefficients_from_grid_functions_list",
    "bempp.api.assembly.blocked_operator.grid_function_list_from_coefficients",
    "bempp.api.assembly.blocked_operator.projections_from_grid_functions_list",
    "bempp.api.linalg.iterative_solvers._it_counter",
    "bempp.api.linalg.iterative_solvers.time"
   ]
  },
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers._gmres_single_op_imp": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.assembly.grid_function.GridFunction",
    "bempp.api.linalg.iterative_solvers._it_counter",
    "bempp.api.linalg.iterative_solvers.time",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers._it_counter": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.linalg.iterative_solvers._it_counter.__call__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "bempp.api.log",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers._it_counter.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers._it_counter.count": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers._it_counter.residuals": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.linalg.iterative_solvers.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.linalg.iterative_solvers.cg": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.assembly.boundary_operator.BoundaryOperator",
    "bempp.api.assembly.grid_function.GridFunction",
    "bempp.api.linalg.iterative_solvers._it_counter",
    "bempp.api.linalg.iterative_solvers.time",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers.coefficients_from_grid_functions_list": {
  "data": {
   "shadows": "bempp.api.assembly.blocked_operator.coefficients_from_grid_functions_list"
  },
  "type": "import"
 },
 "bempp.api.linalg.iterative_solvers.gmres": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.assembly.blocked_operator.BlockedOperatorBase",
    "bempp.api.assembly.boundary_operator.BoundaryOperator",
    "bempp.api.linalg.iterative_solvers._gmres_block_op_imp",
    "bempp.api.linalg.iterative_solvers._gmres_single_op_imp",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "bempp.api.linalg.iterative_solvers.grid_function_list_from_coefficients": {
  "data": {
   "shadows": "bempp.api.assembly.blocked_operator.grid_function_list_from_coefficients"
  },
  "type": "import"
 },
 "bempp.api.linalg.iterative_solvers.log": {
  "data": {
   "shadows": "bempp.api.log"
  },
  "type": "import"
 },
 "bempp.api.linalg.iterative_solvers.projections_from_grid_functions_list": {
  "data": {
   "shadows": "bempp.api.assembly.blocked_operator.projections_from_grid_functions_list"
  },
  "type": "import"
 },
 "bempp.api.linalg.iterative_solvers.scipy.sparse.linalg": {
  "data": {
   "shadows": "scipy.sparse.linalg"
  },
  "type": "import"
 },
 "bempp.api.linalg.iterative_solvers.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "bempp.api.log": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "bempp.api.LOG_LEVEL",
    "bempp.api.flush_log"
   ]
  },
  "type": "function"
 },
 "bempp.api.lu": {
  "data": {
   "shadows": "bempp.api.linalg.direct_solvers.lu"
  },
  "type": "import"
 },
 "bempp.api.operators": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "bempp.api.operators.MultitraceOperatorDescriptor": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "bempp.api.operators.OperatorDescriptor": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "bempp.api.operators._add_wavenumber": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.imag",
    "numpy.iscomplexobj",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators._collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "bempp.api.operators._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.boundary.common": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.boundary.common.MultitraceOperatorDescriptor": {
  "data": {
   "shadows": "bempp.api.operators.MultitraceOperatorDescriptor"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.common.OperatorDescriptor": {
  "data": {
   "shadows": "bempp.api.operators.OperatorDescriptor"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.common._assembler": {
  "data": {
   "shadows": "bempp.api.assembly.assembler"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.common._blocked_operator": {
  "data": {
   "shadows": "bempp.api.assembly.blocked_operator"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.common._boundary_operator": {
  "data": {
   "shadows": "bempp.api.assembly.boundary_operator"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.common._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.common.create_multitrace_operator": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "bempp.api.assembly.assembler",
    "bempp.api.assembly.assembler.AssemblerInterface",
    "bempp.api.assembly.blocked_operator.MultitraceOperatorFromAssembler",
    "bempp.api.default_device",
    "bempp.api.get_precision",
    "bempp.api.operators.MultitraceOperatorDescriptor"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.common.create_operator": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bempp.api.assembly.assembler",
    "bempp.api.assembly.assembler.AssemblerInterface",
    "bempp.api.assembly.boundary_operator.BoundaryOperatorWithAssembler",
    "bempp.api.default_device",
    "bempp.api.get_precision",
    "bempp.api.operators.OperatorDescriptor"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.common.default_device": {
  "data": {
   "shadows": "bempp.api.default_device"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.common.get_precision": {
  "data": {
   "shadows": "bempp.api.get_precision"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.helmholtz": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.boundary.helmholtz.BlockedOperator": {
  "data": {
   "shadows": "bempp.api.assembly.blocked_operator.BlockedOperator"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.helmholtz._add_wavenumber": {
  "data": {
   "shadows": "bempp.api.operators._add_wavenumber"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.helmholtz._common": {
  "data": {
   "shadows": "bempp.api.operators.boundary.common"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.helmholtz._hypersingular": {
  "data": {
   "shadows": "hypersingular"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.helmholtz._modified_adjoint_double_layer": {
  "data": {
   "shadows": "adjoint_double_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.helmholtz._modified_double_layer": {
  "data": {
   "shadows": "double_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.helmholtz._modified_single_layer": {
  "data": {
   "shadows": "single_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.helmholtz._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.helmholtz.adjoint_double_layer": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "bempp.api.operators._add_wavenumber",
    "bempp.api.operators.boundary.common.create_operator",
    "numpy.imag",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.helmholtz.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.helmholtz.double_layer": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bempp.api.operators._add_wavenumber",
    "bempp.api.operators.boundary.common.create_operator",
    "numpy.imag",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.helmholtz.hypersingular": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "bempp.api.operators._add_wavenumber",
    "bempp.api.operators.boundary.common.create_operator",
    "numpy.imag",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.helmholtz.multitrace_operator": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "bempp.api.assembly.blocked_operator.BlockedOperator",
    "bempp.api.operators.boundary.helmholtz.adjoint_double_layer",
    "bempp.api.operators.boundary.helmholtz.double_layer",
    "bempp.api.operators.boundary.helmholtz.hypersingular",
    "bempp.api.operators.boundary.helmholtz.single_layer"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.helmholtz.single_layer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "bempp.api.operators._add_wavenumber",
    "bempp.api.operators.boundary.common.create_operator",
    "numpy.imag",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.laplace": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.boundary.laplace._common": {
  "data": {
   "shadows": "bempp.api.operators.boundary.common"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.laplace.adjoint_double_layer": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.laplace.double_layer": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.laplace.hypersingular": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.laplace.single_layer": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.maxwell": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.boundary.maxwell.BlockedOperator": {
  "data": {
   "shadows": "bempp.api.assembly.blocked_operator.BlockedOperator"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.maxwell._add_wavenumber": {
  "data": {
   "shadows": "bempp.api.operators._add_wavenumber"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.maxwell._common": {
  "data": {
   "shadows": "bempp.api.operators.boundary.common"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.maxwell._multitrace_operator_impl": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "bempp.api.assembly.blocked_operator.BlockedOperator",
    "bempp.api.operators.boundary.maxwell.electric_field",
    "bempp.api.operators.boundary.maxwell.magnetic_field",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.maxwell._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.maxwell.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.maxwell.electric_field": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.operators._add_wavenumber",
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.maxwell.magnetic_field": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.operators._add_wavenumber",
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.maxwell.multitrace_operator": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.operators.boundary.maxwell._multitrace_operator_impl"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.modified_helmholtz": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.boundary.modified_helmholtz._common": {
  "data": {
   "shadows": "bempp.api.operators.boundary.common"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.modified_helmholtz.adjoint_double_layer": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.modified_helmholtz.double_layer": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.modified_helmholtz.hypersingular": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.modified_helmholtz.single_layer": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.sparse": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.boundary.sparse.BlockedOperator": {
  "data": {
   "shadows": "bempp.api.assembly.blocked_operator.BlockedOperator"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.sparse._common": {
  "data": {
   "shadows": "bempp.api.operators.boundary.common"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.sparse._rwg0_rwg0_identity": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.sparse._rwg0_snc0_identity": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.sparse._snc0_rwg0_identity": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.sparse._snc0_snc0_identity": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.sparse.assign_parameters": {
  "data": {
   "shadows": "bempp.api.utils.helpers.assign_parameters"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.sparse.identity": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.operators.boundary.common.create_operator"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.sparse.multitrace_identity": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "bempp.api.assembly.blocked_operator.BlockedOperator",
    "bempp.api.operators.boundary.sparse.identity"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.sparse.sigma_identity": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.operators.boundary.sparse.identity",
    "bempp.api.utils.helpers.assign_parameters"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary": {
  "data": {
   "symbols_in_volume": [
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER_COMPLEX": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.adjoint_double_layer": {
  "data": {
   "shadows": "bempp.api.operators.boundary.helmholtz.adjoint_double_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.double_layer": {
  "data": {
   "shadows": "bempp.api.operators.boundary.helmholtz.double_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.function_space": {
  "data": {
   "shadows": "bempp.api.function_space"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.hypersingular": {
  "data": {
   "shadows": "bempp.api.operators.boundary.helmholtz.hypersingular"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.pytestmark": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.single_layer": {
  "data": {
   "shadows": "bempp.api.operators.boundary.helmholtz.single_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_adj_double_layer_evaluator": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.adjoint_double_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_adjoint_double_layer_complex_wavenumber": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.adjoint_double_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER_COMPLEX",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_adjoint_double_layer_p1_cont": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.adjoint_double_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_double_layer_complex_wavenumber": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.double_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER_COMPLEX",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_double_layer_evaluator": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.double_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_double_layer_p1_cont": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.double_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_hypersingular": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.hypersingular",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_hypersingular_complex_evaluator": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.hypersingular",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER_COMPLEX",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_hypersingular_complex_wavenumber": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.hypersingular",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER_COMPLEX",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_hypersingular_evaluator": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.hypersingular",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_complex_wavenumber": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.single_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER_COMPLEX",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_evaluator_complex": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.single_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_evaluator_p0_dp1": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.single_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_evaluator_p0_p0": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.single_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_evaluator_p0_p1": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.single_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_p0": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.single_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_p0_p1": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.single_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_p1_cont": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.single_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_p1_disc": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.single_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_helmholtz_boundary.test_helmholtz_single_layer_p1_p0": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.single_layer",
    "bempp.api.operators.boundary.test.test_helmholtz_boundary.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary": {
  "data": {
   "symbols_in_volume": [
    "bempp.api.operators.boundary.test.test_laplace_boundary.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.adjoint_double_layer": {
  "data": {
   "shadows": "bempp.api.operators.boundary.laplace.adjoint_double_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.double_layer": {
  "data": {
   "shadows": "bempp.api.operators.boundary.laplace.double_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.function_space": {
  "data": {
   "shadows": "bempp.api.function_space"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.hypersingular": {
  "data": {
   "shadows": "bempp.api.operators.boundary.laplace.hypersingular"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.pytestmark": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.single_layer": {
  "data": {
   "shadows": "bempp.api.operators.boundary.laplace.single_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_adjoint_double_layer_evaluator": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.adjoint_double_layer",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_adjoint_double_layer_p1_cont": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.adjoint_double_layer",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_double_layer_evaluator": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.double_layer",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_double_layer_p1_cont": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.double_layer",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_hypersingular": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.hypersingular",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_hypersingular_evaluator": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.hypersingular",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_evaluator_complex": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.single_layer",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_evaluator_p0_dp1": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.single_layer",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_evaluator_p0_p0": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.single_layer",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_evaluator_p0_p1": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.single_layer",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_p0": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.single_layer",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_p0_p1": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.single_layer",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_p1_cont": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.single_layer",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_p1_disc": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.single_layer",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_laplace_boundary.test_laplace_single_layer_p1_p0": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.single_layer",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary": {
  "data": {
   "symbols_in_volume": [
    "bempp.api.operators.boundary.test.test_maxwell_boundary.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.electric_field": {
  "data": {
   "shadows": "bempp.api.operators.boundary.maxwell.electric_field"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.function_space": {
  "data": {
   "shadows": "bempp.api.function_space"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.get_precision": {
  "data": {
   "shadows": "bempp.api.get_precision"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.magnetic_field": {
  "data": {
   "shadows": "bempp.api.operators.boundary.maxwell.magnetic_field"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.pytestmark": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_electric_field_bc_sphere": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.maxwell.electric_field",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_electric_field_complex_sphere": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.maxwell.electric_field",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_electric_field_complex_sphere_evaluator": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.maxwell.electric_field",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_electric_field_rbc_bc_sphere": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.maxwell.electric_field",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_electric_field_screen": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.maxwell.electric_field",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_electric_field_sphere": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.maxwell.electric_field",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_electric_field_sphere_evaluator": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.maxwell.electric_field",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_magnetic_field_complex_sphere": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.maxwell.magnetic_field",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_magnetic_field_complex_sphere_evaluator": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.maxwell.magnetic_field",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_magnetic_field_sphere": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.maxwell.magnetic_field",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_maxwell_boundary.test_maxwell_magnetic_field_sphere_evaluator": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.maxwell.magnetic_field",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz": {
  "data": {
   "symbols_in_volume": [
    "bempp.api.operators.boundary.test.test_modified_helmholtz.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.OMEGA": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.adjoint_double_layer": {
  "data": {
   "shadows": "bempp.api.operators.boundary.modified_helmholtz.adjoint_double_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.double_layer": {
  "data": {
   "shadows": "bempp.api.operators.boundary.modified_helmholtz.double_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.function_space": {
  "data": {
   "shadows": "bempp.api.function_space"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.hypersingular": {
  "data": {
   "shadows": "bempp.api.operators.boundary.modified_helmholtz.hypersingular"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.pytestmark": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.single_layer": {
  "data": {
   "shadows": "bempp.api.operators.boundary.modified_helmholtz.single_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_adj_double_layer_evaluator": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.modified_helmholtz.adjoint_double_layer",
    "bempp.api.operators.boundary.test.test_modified_helmholtz.OMEGA",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_adjoint_double_layer": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.modified_helmholtz.adjoint_double_layer",
    "bempp.api.operators.boundary.test.test_modified_helmholtz.OMEGA",
    "numpy.real",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_double_layer_evaluator": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.modified_helmholtz.double_layer",
    "bempp.api.operators.boundary.test.test_modified_helmholtz.OMEGA",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_double_layer_p1_cont": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.modified_helmholtz.double_layer",
    "bempp.api.operators.boundary.test.test_modified_helmholtz.OMEGA",
    "numpy.real",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_hypersingular": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.modified_helmholtz.hypersingular",
    "bempp.api.operators.boundary.test.test_modified_helmholtz.OMEGA",
    "numpy.real",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_hypersingular_evaluator": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.modified_helmholtz.hypersingular",
    "bempp.api.operators.boundary.test.test_modified_helmholtz.OMEGA",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_single_layer": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.modified_helmholtz.single_layer",
    "bempp.api.operators.boundary.test.test_modified_helmholtz.OMEGA",
    "numpy.real",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_modified_helmholtz.test_modified_helmholtz_single_layer_evaluator": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.modified_helmholtz.single_layer",
    "bempp.api.operators.boundary.test.test_modified_helmholtz.OMEGA",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_sparse": {
  "data": {
   "symbols_in_volume": [
    "bempp.api.operators.boundary.test.test_sparse.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.api.operators.boundary.test.test_sparse._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_sparse.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_sparse.function_space": {
  "data": {
   "shadows": "bempp.api.function_space"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_sparse.identity": {
  "data": {
   "shadows": "bempp.api.operators.boundary.sparse.identity"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_sparse.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.operators.boundary.test.test_sparse.pytestmark": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "bempp.api.operators.boundary.test.test_sparse.test_sparse_identity_p0_p0": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.sparse.identity",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_sparse.test_sparse_identity_p0_p1": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.sparse.identity",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_sparse.test_sparse_identity_p1_p0": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.sparse.identity",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_sparse.test_sparse_identity_p1_p1": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.sparse.identity",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_sparse.test_sparse_identity_snc_bc": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.sparse.identity",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.boundary.test.test_sparse.test_sparse_identity_snc_rwg": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.sparse.identity",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.far_field": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.far_field.helmholtz": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.far_field.helmholtz.DensePotentialAssembler": {
  "data": {
   "shadows": "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.helmholtz.OperatorDescriptor": {
  "data": {
   "shadows": "bempp.api.operators.OperatorDescriptor"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.helmholtz.PotentialOperator": {
  "data": {
   "shadows": "bempp.api.assembly.potential_operator.PotentialOperator"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.helmholtz._add_wavenumber": {
  "data": {
   "shadows": "bempp.api.operators._add_wavenumber"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.helmholtz._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.helmholtz.double_layer": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bempp.api.assembly.potential_operator.PotentialOperator",
    "bempp.api.operators.OperatorDescriptor",
    "bempp.api.operators._add_wavenumber",
    "bempp.core.dense_potential_assembler.DensePotentialAssembler"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.far_field.helmholtz.single_layer": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "bempp.api.assembly.potential_operator.PotentialOperator",
    "bempp.api.operators.OperatorDescriptor",
    "bempp.api.operators._add_wavenumber",
    "bempp.core.dense_potential_assembler.DensePotentialAssembler"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.far_field.maxwell": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.far_field.maxwell.DensePotentialAssembler": {
  "data": {
   "shadows": "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.maxwell.OperatorDescriptor": {
  "data": {
   "shadows": "bempp.api.operators.OperatorDescriptor"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.maxwell.PotentialOperator": {
  "data": {
   "shadows": "bempp.api.assembly.potential_operator.PotentialOperator"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.maxwell._add_wavenumber": {
  "data": {
   "shadows": "bempp.api.operators._add_wavenumber"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.maxwell.electric_field": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "bempp.api.assembly.potential_operator.PotentialOperator",
    "bempp.api.operators.OperatorDescriptor",
    "bempp.api.operators._add_wavenumber",
    "bempp.core.dense_potential_assembler.DensePotentialAssembler"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.far_field.maxwell.magnetic_field": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "bempp.api.assembly.potential_operator.PotentialOperator",
    "bempp.api.operators.OperatorDescriptor",
    "bempp.api.operators._add_wavenumber",
    "bempp.core.dense_potential_assembler.DensePotentialAssembler"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.far_field.test": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field": {
  "data": {
   "symbols_in_volume": [
    "bempp.api.operators.far_field.test.test_helmholtz_far_field.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.GridFunction": {
  "data": {
   "shadows": "bempp.api.GridFunction"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.WAVENUMBER": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.double_layer": {
  "data": {
   "shadows": "bempp.api.operators.far_field.helmholtz.double_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.function_space": {
  "data": {
   "shadows": "bempp.api.function_space"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.grid_from_segments": {
  "data": {
   "shadows": "bempp.api.grid.grid.grid_from_segments"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.pytestmark": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.single_layer": {
  "data": {
   "shadows": "bempp.api.operators.far_field.helmholtz.single_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.test_helmholtz_double_layer_potential_p1": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.far_field.helmholtz.double_layer",
    "bempp.api.operators.far_field.test.test_helmholtz_far_field.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.test_helmholtz_far_field_complex_coeffs": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "bempp.api.operators.far_field.helmholtz.double_layer",
    "bempp.api.operators.far_field.helmholtz.single_layer",
    "bempp.api.operators.far_field.test.test_helmholtz_far_field.WAVENUMBER",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "op"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.test_helmholtz_far_field_segments": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.grid.grid.grid_from_segments",
    "bempp.api.operators.far_field.helmholtz.double_layer",
    "bempp.api.operators.far_field.helmholtz.single_layer",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "op",
    "zip"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.test_helmholtz_far_field_segments_complex_coeffs": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.grid.grid.grid_from_segments",
    "bempp.api.operators.far_field.helmholtz.double_layer",
    "bempp.api.operators.far_field.helmholtz.single_layer",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "op",
    "zip"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_helmholtz_far_field.test_helmholtz_single_layer_far_field": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.far_field.helmholtz.single_layer",
    "bempp.api.operators.far_field.test.test_helmholtz_far_field.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field": {
  "data": {
   "symbols_in_volume": [
    "bempp.api.operators.far_field.test.test_maxwell_far_field.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.GridFunction": {
  "data": {
   "shadows": "bempp.api.GridFunction"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.WAVENUMBER": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.electric_field": {
  "data": {
   "shadows": "bempp.api.operators.far_field.maxwell.electric_field"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.function_space": {
  "data": {
   "shadows": "bempp.api.function_space"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.grid_from_segments": {
  "data": {
   "shadows": "bempp.api.grid.grid.grid_from_segments"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.magnetic_field": {
  "data": {
   "shadows": "bempp.api.operators.far_field.maxwell.magnetic_field"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.pytestmark": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.test_maxwell_electric_far_field": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.far_field.maxwell.electric_field",
    "bempp.api.operators.far_field.test.test_maxwell_far_field.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.test_maxwell_far_field_complex_coeffs": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "bempp.api.operators.far_field.maxwell.electric_field",
    "bempp.api.operators.far_field.maxwell.magnetic_field",
    "bempp.api.operators.far_field.test.test_maxwell_far_field.WAVENUMBER",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "op"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.test_maxwell_far_field_segments": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.grid.grid.grid_from_segments",
    "bempp.api.operators.far_field.maxwell.electric_field",
    "bempp.api.operators.far_field.maxwell.magnetic_field",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "op",
    "zip"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.test_maxwell_far_field_segments_complex_coeffs": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.grid.grid.grid_from_segments",
    "bempp.api.operators.far_field.maxwell.electric_field",
    "bempp.api.operators.far_field.maxwell.magnetic_field",
    "numpy.linalg.norm",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "op",
    "zip"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.far_field.test.test_maxwell_far_field.test_maxwell_magnetic_far_field": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.far_field.maxwell.magnetic_field",
    "bempp.api.operators.far_field.test.test_maxwell_far_field.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.potential.helmholtz": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.potential.helmholtz.DensePotentialAssembler": {
  "data": {
   "shadows": "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.helmholtz.OperatorDescriptor": {
  "data": {
   "shadows": "bempp.api.operators.OperatorDescriptor"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.helmholtz.PotentialOperator": {
  "data": {
   "shadows": "bempp.api.assembly.potential_operator.PotentialOperator"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.helmholtz._add_wavenumber": {
  "data": {
   "shadows": "bempp.api.operators._add_wavenumber"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.helmholtz._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.helmholtz.double_layer": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bempp.api.assembly.potential_operator.PotentialOperator",
    "bempp.api.operators.OperatorDescriptor",
    "bempp.api.operators._add_wavenumber",
    "bempp.core.dense_potential_assembler.DensePotentialAssembler"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.helmholtz.single_layer": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "bempp.api.assembly.potential_operator.PotentialOperator",
    "bempp.api.operators.OperatorDescriptor",
    "bempp.api.operators._add_wavenumber",
    "bempp.core.dense_potential_assembler.DensePotentialAssembler"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.laplace": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.potential.laplace.DensePotentialAssembler": {
  "data": {
   "shadows": "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.laplace.OperatorDescriptor": {
  "data": {
   "shadows": "bempp.api.operators.OperatorDescriptor"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.laplace.PotentialOperator": {
  "data": {
   "shadows": "bempp.api.assembly.potential_operator.PotentialOperator"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.laplace.double_layer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "bempp.api.assembly.potential_operator.PotentialOperator",
    "bempp.api.operators.OperatorDescriptor",
    "bempp.core.dense_potential_assembler.DensePotentialAssembler"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.laplace.single_layer": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "bempp.api.assembly.potential_operator.PotentialOperator",
    "bempp.api.operators.OperatorDescriptor",
    "bempp.core.dense_potential_assembler.DensePotentialAssembler"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.maxwell": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.potential.maxwell.DensePotentialAssembler": {
  "data": {
   "shadows": "bempp.core.dense_potential_assembler.DensePotentialAssembler"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.maxwell.OperatorDescriptor": {
  "data": {
   "shadows": "bempp.api.operators.OperatorDescriptor"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.maxwell.PotentialOperator": {
  "data": {
   "shadows": "bempp.api.assembly.potential_operator.PotentialOperator"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.maxwell._add_wavenumber": {
  "data": {
   "shadows": "bempp.api.operators._add_wavenumber"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.maxwell.electric_field": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "bempp.api.assembly.potential_operator.PotentialOperator",
    "bempp.api.operators.OperatorDescriptor",
    "bempp.api.operators._add_wavenumber",
    "bempp.core.dense_potential_assembler.DensePotentialAssembler"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.maxwell.magnetic_field": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "bempp.api.assembly.potential_operator.PotentialOperator",
    "bempp.api.operators.OperatorDescriptor",
    "bempp.api.operators._add_wavenumber",
    "bempp.core.dense_potential_assembler.DensePotentialAssembler"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test": {
  "data": {},
  "type": "module"
 },
 "bempp.api.operators.potential.test.test_helmholtz": {
  "data": {
   "symbols_in_volume": [
    "bempp.api.operators.potential.test.test_helmholtz.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.api.operators.potential.test.test_helmholtz.GridFunction": {
  "data": {
   "shadows": "bempp.api.GridFunction"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_helmholtz.WAVENUMBER": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "bempp.api.operators.potential.test.test_helmholtz._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_helmholtz.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_helmholtz.double_layer": {
  "data": {
   "shadows": "bempp.api.operators.potential.helmholtz.double_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_helmholtz.function_space": {
  "data": {
   "shadows": "bempp.api.function_space"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_helmholtz.grid_from_segments": {
  "data": {
   "shadows": "bempp.api.grid.grid.grid_from_segments"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_helmholtz.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_helmholtz.pytestmark": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "bempp.api.operators.potential.test.test_helmholtz.single_layer": {
  "data": {
   "shadows": "bempp.api.operators.potential.helmholtz.single_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_helmholtz.test_helmholtz_double_layer_potential_p1": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.potential.helmholtz.double_layer",
    "bempp.api.operators.potential.test.test_helmholtz.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_helmholtz.test_helmholtz_potentials_segments": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.grid.grid.grid_from_segments",
    "bempp.api.operators.potential.helmholtz.double_layer",
    "bempp.api.operators.potential.helmholtz.single_layer",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "op",
    "zip"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_helmholtz.test_helmholtz_potentials_segments_complex_coeffs": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.grid.grid.grid_from_segments",
    "bempp.api.operators.potential.helmholtz.double_layer",
    "bempp.api.operators.potential.helmholtz.single_layer",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "op",
    "zip"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_helmholtz.test_helmholtz_single_layer_potential_p1": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.potential.helmholtz.single_layer",
    "bempp.api.operators.potential.test.test_helmholtz.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_helmholtz.test_helmholtz_single_layer_potential_p1_complex_coeffs": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.potential.helmholtz.single_layer",
    "bempp.api.operators.potential.test.test_helmholtz.WAVENUMBER",
    "numpy.imag",
    "numpy.random.rand",
    "numpy.real",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_laplace": {
  "data": {
   "symbols_in_volume": [
    "bempp.api.operators.potential.test.test_laplace.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.api.operators.potential.test.test_laplace.GridFunction": {
  "data": {
   "shadows": "bempp.api.GridFunction"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_laplace._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_laplace.cube": {
  "data": {
   "shadows": "bempp.api.shapes.cube"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_laplace.double_layer": {
  "data": {
   "shadows": "bempp.api.operators.potential.laplace.double_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_laplace.function_space": {
  "data": {
   "shadows": "bempp.api.function_space"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_laplace.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_laplace.pytestmark": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "bempp.api.operators.potential.test.test_laplace.single_layer": {
  "data": {
   "shadows": "bempp.api.operators.potential.laplace.single_layer"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_laplace.test_laplace_double_layer_potential_p1": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.potential.laplace.double_layer",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_laplace.test_laplace_p1_segments": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.potential.laplace.single_layer",
    "bempp.api.shapes.cube",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_laplace.test_laplace_p1_segments_complex_coeffs": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.potential.laplace.single_layer",
    "bempp.api.shapes.cube",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_laplace.test_laplace_single_layer_potential_p0": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.potential.laplace.single_layer",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_laplace.test_laplace_single_layer_potential_p1": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.potential.laplace.single_layer",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_laplace.test_laplace_single_layer_potential_p1_complex": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.potential.laplace.single_layer",
    "numpy.imag",
    "numpy.random.rand",
    "numpy.real",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_maxwell": {
  "data": {
   "symbols_in_volume": [
    "bempp.api.operators.potential.test.test_maxwell.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.api.operators.potential.test.test_maxwell.GridFunction": {
  "data": {
   "shadows": "bempp.api.GridFunction"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_maxwell.WAVENUMBER": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "bempp.api.operators.potential.test.test_maxwell.WAVENUMBER_COMPLEX": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "bempp.api.operators.potential.test.test_maxwell._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_maxwell.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_maxwell.electric_field": {
  "data": {
   "shadows": "bempp.api.operators.potential.maxwell.electric_field"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_maxwell.function_space": {
  "data": {
   "shadows": "bempp.api.function_space"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_maxwell.grid_from_segments": {
  "data": {
   "shadows": "bempp.api.grid.grid.grid_from_segments"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_maxwell.magnetic_field": {
  "data": {
   "shadows": "bempp.api.operators.potential.maxwell.magnetic_field"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_maxwell.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.operators.potential.test.test_maxwell.pytestmark": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "bempp.api.operators.potential.test.test_maxwell.test_maxwell_electric_field_potential_bc": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.potential.maxwell.electric_field",
    "bempp.api.operators.potential.test.test_maxwell.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_maxwell.test_maxwell_electric_field_potential_complex": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.potential.maxwell.electric_field",
    "bempp.api.operators.potential.test.test_maxwell.WAVENUMBER_COMPLEX",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_maxwell.test_maxwell_electric_field_potential_rwg": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.potential.maxwell.electric_field",
    "bempp.api.operators.potential.test.test_maxwell.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_maxwell.test_maxwell_magnetic_field_potential_complex": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.potential.maxwell.magnetic_field",
    "bempp.api.operators.potential.test.test_maxwell.WAVENUMBER_COMPLEX",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_maxwell.test_maxwell_magnetic_field_potential_rwg": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "bempp.api.GridFunction",
    "bempp.api.function_space",
    "bempp.api.operators.potential.maxwell.magnetic_field",
    "bempp.api.operators.potential.test.test_maxwell.WAVENUMBER",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_maxwell.test_maxwell_potentials_segments": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.grid.grid.grid_from_segments",
    "bempp.api.operators.potential.maxwell.electric_field",
    "bempp.api.operators.potential.maxwell.magnetic_field",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "op",
    "zip"
   ]
  },
  "type": "function"
 },
 "bempp.api.operators.potential.test.test_maxwell.test_maxwell_potentials_segments_complex_coeffs": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.grid.grid.grid_from_segments",
    "bempp.api.operators.potential.maxwell.electric_field",
    "bempp.api.operators.potential.maxwell.magnetic_field",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "op",
    "zip"
   ]
  },
  "type": "function"
 },
 "bempp.api.pool": {
  "data": {
   "shadows": "bempp.api.utils.pool"
  },
  "type": "import"
 },
 "bempp.api.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.real_callable": {
  "data": {
   "shadows": "bempp.api.assembly.grid_function.real_callable"
  },
  "type": "import"
 },
 "bempp.api.set_default_device": {
  "data": {
   "shadows": "bempp.core.cl_helpers.set_default_device"
  },
  "type": "import"
 },
 "bempp.api.set_logging_level": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "bempp.api.LOG_LEVEL"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes": {
  "data": {},
  "type": "module"
 },
 "bempp.api.shapes.shapes": {
  "data": {},
  "type": "module"
 },
 "bempp.api.shapes.shapes.Grid": {
  "data": {
   "shadows": "bempp.api.grid.grid.Grid"
  },
  "type": "import"
 },
 "bempp.api.shapes.shapes.__generate_grid_from_geo_string": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "bempp.api.shapes.shapes.os",
    "msh_from_string"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes.__generate_grid_from_geo_string.msh_from_string": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "RuntimeError",
    "bempp.api.shapes.shapes.get_gmsh_file",
    "bempp.api.shapes.shapes.os",
    "bempp.api.shapes.shapes.subprocess",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes.__generate_grid_from_gmsh_string": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "bempp.api.shapes.shapes.os",
    "bempp.api.shapes.shapes.tempfile"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes._almond_geo": {
  "data": {
   "lineno": 643
  },
  "type": "constant"
 },
 "bempp.api.shapes.shapes._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.shapes.shapes.almond": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "bempp.api.shapes.shapes.__generate_grid_from_geo_string"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.shapes.shapes.cube": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "bempp.api.shapes.shapes.cuboid"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes.cuboid": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "bempp.api.shapes.shapes.__generate_grid_from_geo_string",
    "str"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes.ellipsoid": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "bempp.api.shapes.shapes.__generate_grid_from_geo_string",
    "str"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes.get_gmsh_file": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "bempp.api.shapes.shapes.os",
    "bempp.api.shapes.shapes.tempfile"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes.multitrace_cube": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "bempp.api.shapes.shapes.__generate_grid_from_geo_string",
    "str"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.shapes.shapes.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bempp.api.shapes.shapes.rectangle_with_hole": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "bempp.api.shapes.shapes.__generate_grid_from_geo_string",
    "str"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes.reentrant_cube": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "bempp.api.shapes.shapes.__generate_grid_from_geo_string",
    "str"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes.reference_triangle": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "bempp.api.grid.grid.Grid",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes.regular_sphere": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.grid.grid.Grid",
    "bempp.api.shapes.shapes.os",
    "numpy.load",
    "str"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes.screen": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "bempp.api.shapes.shapes.__generate_grid_from_geo_string"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes.sphere": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "bempp.api.shapes.shapes.ellipsoid"
   ]
  },
  "type": "function"
 },
 "bempp.api.shapes.shapes.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "bempp.api.shapes.shapes.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "bempp.api.show_available_platforms_and_devices": {
  "data": {
   "shadows": "bempp.core.cl_helpers.show_available_platforms_and_devices"
  },
  "type": "import"
 },
 "bempp.api.space": {
  "data": {},
  "type": "module"
 },
 "bempp.api.space.scalar_dual_spaces": {
  "data": {},
  "type": "module"
 },
 "bempp.api.space.scalar_dual_spaces._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.space.scalar_dual_spaces._numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "bempp.api.space.scalar_dual_spaces.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "bempp.api.space.scalar_dual_spaces.dual0_function_space": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "SpaceBuilder",
    "bempp.api.space.scalar_dual_spaces.generate_dual0_map",
    "invert_local2global",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.bool",
    "numpy.float64",
    "numpy.repeat",
    "numpy.tile",
    "numpy.zeros",
    "p1_continuous_function_space",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.scalar_dual_spaces.generate_dual0_map": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "len",
    "numpy.float64",
    "numpy.ones",
    "numpy.uint32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.scalar_spaces": {
  "data": {},
  "type": "module"
 },
 "bempp.api.space.scalar_spaces._compute_p1_dof_map": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "bempp.helpers.timeit",
    "enumerate",
    "find_index",
    "len",
    "numba.njit",
    "numpy.arange",
    "numpy.bool_",
    "numpy.flatnonzero",
    "numpy.float64",
    "numpy.int32",
    "numpy.min",
    "numpy.ones",
    "numpy.uint32",
    "numpy.zeros",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.scalar_spaces._compute_p1_dof_map.find_index": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.scalar_spaces._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.space.scalar_spaces._numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "bempp.api.space.scalar_spaces._numba_p0_surface_gradient": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numba.njit",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.scalar_spaces._numba_p1_surface_gradient": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "numba.njit",
    "numpy.empty",
    "numpy.float64",
    "range",
    "shapeset_gradient"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.scalar_spaces._timeit": {
  "data": {
   "shadows": "bempp.helpers.timeit"
  },
  "type": "import"
 },
 "bempp.api.space.scalar_spaces.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.space.scalar_spaces.p0_discontinuous_function_space": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "SpaceBuilder",
    "_process_segments",
    "bempp.helpers.timeit",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.expand_dims",
    "numpy.flatnonzero",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.scalar_spaces.p1_continuous_function_space": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "SpaceBuilder",
    "_process_segments",
    "bempp.api.space.scalar_spaces._compute_p1_dof_map",
    "bempp.helpers.timeit",
    "len",
    "numpy.flatnonzero"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.scalar_spaces.p1_discontinuous_function_space": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "SpaceBuilder",
    "_process_segments",
    "bempp.helpers.timeit",
    "len",
    "numpy.arange",
    "numpy.flatnonzero",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.scalar_spaces.serialise_list_of_lists": {
  "data": {
   "shadows": "bempp.api.utils.helpers.serialise_list_of_lists"
  },
  "type": "import"
 },
 "bempp.api.space.shapesets": {
  "data": {
   "symbols_in_volume": [
    "bempp.api.space.shapesets._p0_shapeset_evaluate",
    "bempp.api.space.shapesets._p0_shapeset_gradient",
    "bempp.api.space.shapesets._p1_disc_shapeset_evaluate",
    "bempp.api.space.shapesets._p1_disc_shapeset_gradient",
    "bempp.api.space.shapesets._rwg0_shapeset_evaluate",
    "bempp.api.space.shapesets._rwg0_shapeset_gradient"
   ]
  },
  "type": "module"
 },
 "bempp.api.space.shapesets.Shapeset": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.space.shapesets.Shapeset.__init__": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "bempp.api.space.shapesets.Shapeset.dimension": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.shapesets.Shapeset.evaluate": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.shapesets.Shapeset.gradient": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.shapesets.Shapeset.identifier": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.shapesets.Shapeset.number_of_shape_functions": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.shapesets._SHAPESETS": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "bempp.api.space.shapesets._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.space.shapesets._numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "bempp.api.space.shapesets._p0_shapeset_evaluate": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "numba.float64",
    "numba.njit",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.shapesets._p0_shapeset_gradient": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numba.float64",
    "numba.njit",
    "numpy.float64",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.shapesets._p1_disc_shapeset_evaluate": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numba.float64",
    "numba.njit",
    "numpy.expand_dims",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.shapesets._p1_disc_shapeset_gradient": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "numba.float64",
    "numba.njit",
    "numpy.float64",
    "numpy.ones",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.shapesets._rwg0_shapeset_evaluate": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numba.float64",
    "numba.njit",
    "numpy.float64",
    "numpy.vstack",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.shapesets._rwg0_shapeset_gradient": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numba.float64",
    "numba.njit",
    "numpy.float64",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space": {
  "data": {},
  "type": "module"
 },
 "bempp.api.space.space.FunctionSpace": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.space.space.FunctionSpace.__eq__": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "bempp.api.space.space.check_if_compatible"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.__init__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "Shapeset",
    "bempp.api.space.space.make_localised_space",
    "bempp.api.utils.helpers.create_unique_id",
    "numpy.arange",
    "numpy.count_nonzero",
    "numpy.flatnonzero",
    "numpy.max",
    "numpy.repeat",
    "numpy.tile",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace._compute_color_map": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "list",
    "next",
    "numpy.int32",
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace._generate_hash": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "hashlib.md5"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace._set_id": {
  "data": {
   "lineno": 681
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace._sort_elements_by_color": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "max",
    "numpy.arange",
    "numpy.empty",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.barycentric_representation": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "bempp.api.space.space.collections",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.codomain_dimension": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.collocation_points": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.color_map": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.dof_transformation": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.evaluate": {
  "data": {
   "lineno": 607
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.get_elements_by_color": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.global2local": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "bempp.api.space.space.invert_local2global",
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.global_dof_count": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.grid": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.grid_dof_count": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.grid_id": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.has_surface_gradient": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.hash": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.id": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.identifier": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.inverse_mass_matrix": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "bempp.api.assembly.discrete_boundary_operator.InverseSparseDiscreteBoundaryOperator"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.is_barycentric": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.is_compatible": {
  "data": {
   "lineno": 677
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.is_localised": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.local2global": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.local_multipliers": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.localised_space": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.map_to_full_grid": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.map_to_localised_space": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.mass_matrix": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "bempp.api.operators.boundary.sparse.identity"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.normal_multipliers": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.numba_evaluate": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.numba_surface_gradient": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.number_of_shape_functions": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.number_of_support_elements": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.order": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.requires_dof_transformation": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.shapeset": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.support": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.support_elements": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.FunctionSpace.surface_gradient": {
  "data": {
   "lineno": 625
  },
  "type": "function"
 },
 "bempp.api.space.space.InverseSparseDiscreteBoundaryOperator": {
  "data": {
   "shadows": "bempp.api.assembly.discrete_boundary_operator.InverseSparseDiscreteBoundaryOperator"
  },
  "type": "import"
 },
 "bempp.api.space.space.SpaceBuilder": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.space.space.SpaceBuilder.__init__": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.build": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bool",
    "numpy.float64",
    "numpy.int32",
    "numpy.max",
    "numpy.ones",
    "scipy.sparse.identity"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_barycentric_representation": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_codomain_dimension": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_collocation_points": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_dof_transformation": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_global2local": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_identifier": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_is_barycentric": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_is_localised": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_local2global": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_local_multipliers": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_normal_multipliers": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_numba_evaluator": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_numba_surface_gradient": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_order": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_shapeset": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "bempp.api.space.space.SpaceBuilder.set_support": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "bempp.api.space.space._abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "bempp.api.space.space._namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "bempp.api.space.space._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.space.space._numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "bempp.api.space.space._numba_evaluate": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "numba.njit",
    "shapeset_evaluate"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space._process_segments": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "numpy.full",
    "numpy.int32",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space._space_scatter_worker": {
  "data": {
   "lineno": 849,
   "symbols_in_volume": [
    "bempp.api.utils.pool.get_data",
    "bempp.api.utils.pool.get_id",
    "bempp.api.utils.pool.insert_data"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.space.space.check_if_compatible": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "bempp.api.space.space.return_compatible_representation"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "bempp.api.space.space.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "bempp.api.space.space.create_unique_id": {
  "data": {
   "shadows": "bempp.api.utils.helpers.create_unique_id"
  },
  "type": "import"
 },
 "bempp.api.space.space.function_space": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.utils.pool.execute",
    "bempp.api.utils.pool.is_initialised",
    "bempp.api.utils.pool.is_worker",
    "numpy.count_nonzero"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.identity": {
  "data": {
   "shadows": "bempp.api.operators.boundary.sparse.identity"
  },
  "type": "import"
 },
 "bempp.api.space.space.invert_local2global": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.max",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.make_localised_space": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "bempp.api.space.space.SpaceBuilder",
    "bempp.api.space.space.invert_local2global",
    "numpy.arange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.space.md5": {
  "data": {
   "shadows": "hashlib.md5"
  },
  "type": "import"
 },
 "bempp.api.space.space.pool": {
  "data": {
   "shadows": "bempp.api.utils.pool"
  },
  "type": "import"
 },
 "bempp.api.space.space.return_compatible_representation": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "any"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.test": {
  "data": {},
  "type": "module"
 },
 "bempp.api.space.test.test_barycentric_rwg": {
  "data": {
   "symbols_in_volume": [
    "bempp.api.space.test.test_barycentric_rwg.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.api.space.test.test_barycentric_rwg._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.space.test.test_barycentric_rwg.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.space.test.test_barycentric_rwg.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "bempp.api.space.test.test_barycentric_rwg.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.space.test.test_barycentric_rwg.pytestmark": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "bempp.api.space.test.test_barycentric_rwg.test_rwg_barycentric": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "bempp.api.space.test.test_barycentric_rwg.math",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.test.test_space": {
  "data": {
   "symbols_in_volume": [
    "bempp.api.space.test.test_space.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.api.space.test.test_space._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.space.test.test_space.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.space.test.test_space.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.space.test.test_space.pytestmark": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "bempp.api.space.test.test_space.test_dp1_closed_segment": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "numpy.all",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_p1_closed_segment": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.any",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_p1_color_map": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_p1_extended_segment": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.where",
    "range",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_p1_open_segment": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "enumerate",
    "numpy.any",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_rwg_closed_segment": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "numpy.all",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_rwg_color_map": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_rwg_open_segment": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.any",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_snc_closed_segment": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "numpy.all",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.space.test.test_space.test_snc_open_segment": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.any",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.test": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "bempp.api.pytest"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils": {
  "data": {},
  "type": "module"
 },
 "bempp.api.utils.data_types": {
  "data": {},
  "type": "module"
 },
 "bempp.api.utils.data_types._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.utils.data_types.check_type": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.data_types.combined_type": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "bempp.api.utils.data_types.check_type"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.helpers": {
  "data": {},
  "type": "module"
 },
 "bempp.api.utils.helpers.MemProfiler": {
  "data": {
   "lineno": 77
  },
  "type": "class"
 },
 "bempp.api.utils.helpers.MemProfiler.__enter__": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "bempp.api.utils.helpers.MemProfiler.__exit__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "bempp.api.utils.helpers.MemProfiler.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "bempp.api.utils.helpers.os",
    "bempp.api.utils.helpers.psutil"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.helpers._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.utils.helpers.align_array": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "numpy.require"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.helpers.assign_parameters": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "bempp.api.utils.helpers.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.utils.helpers.create_unique_id": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "str",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.helpers.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "bempp.api.utils.helpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bempp.api.utils.helpers.promote_to_double_precision": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "bempp.api.utils.helpers.psutil": {
  "data": {
   "shadows": "psutil"
  },
  "type": "import"
 },
 "bempp.api.utils.helpers.serialise_list_of_lists": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.helpers.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "bempp.api.utils.interpolation": {
  "data": {},
  "type": "module"
 },
 "bempp.api.utils.interpolation.ChebychevInterpolation": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.utils.interpolation.ChebychevInterpolation.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bempp.api.utils.interpolation.chebychev_differentiation_matrix",
    "bempp.api.utils.interpolation.chebychev_nodes_and_weights_second_kind"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.interpolation.ChebychevInterpolation.differentiate": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "bempp.api.utils.interpolation.ChebychevInterpolation.differentiation_matrix": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.interpolation.ChebychevInterpolation.evaluate": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bempp.api.utils.interpolation.evaluate_interp_polynomial"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.interpolation.ChebychevInterpolation.nodes": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.interpolation.ChebychevInterpolation.weights": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.interpolation._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.utils.interpolation._numba": {
  "data": {
   "shadows": "numba"
  },
  "type": "import"
 },
 "bempp.api.utils.interpolation.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.api.utils.interpolation.chebychev_differentiation_matrix": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.sum",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.interpolation.chebychev_nodes_and_weights_second_kind": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.cos",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.interpolation.chebychev_tensor_points_3d": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "len",
    "numba.njit",
    "numpy.empty",
    "numpy.float64",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.interpolation.cl_helpers": {
  "data": {
   "shadows": "bempp.core.cl_helpers"
  },
  "type": "import"
 },
 "bempp.api.utils.interpolation.evaluate_interp_polynomial": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "len",
    "numba.njit",
    "numpy.float64",
    "numpy.int32",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.interpolation.evaluate_kernel_on_interpolation_points": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "bempp.core.cl_helpers.DeviceBuffer",
    "bempp.core.cl_helpers.DeviceBuffer.from_array",
    "bempp.core.cl_helpers.Kernel",
    "bempp.core.cl_helpers.get_type",
    "bempp.core.cl_helpers.kernel_source_from_identifier",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.interpolation.evaluate_tensor_interp_polynomial": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.empty",
    "numpy.float64",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.parameters": {
  "data": {},
  "type": "module"
 },
 "bempp.api.utils.parameters.DefaultParameters": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.utils.parameters.DefaultParameters.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "bempp.api.utils.parameters._Assembly",
    "bempp.api.utils.parameters._Fmm",
    "bempp.api.utils.parameters._Output",
    "bempp.api.utils.parameters._Quadrature",
    "bempp.api.utils.parameters._Verbosity"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.parameters._Assembly": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.utils.parameters._Assembly.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bempp.api.utils.parameters._DenseAssembly"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.parameters._DenseAssembly": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.utils.parameters._DenseAssembly.__init__": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "bempp.api.utils.parameters._Fmm": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.utils.parameters._Fmm.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "bempp.api.utils.parameters._Output": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.utils.parameters._Output.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "bempp.api.utils.parameters._Quadrature": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.utils.parameters._Quadrature.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "bempp.api.utils.parameters._Verbosity": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.api.utils.parameters._Verbosity.__init__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "bempp.api.utils.test": {
  "data": {},
  "type": "module"
 },
 "bempp.api.utils.test.test_interpolation": {
  "data": {},
  "type": "module"
 },
 "bempp.api.utils.test.test_interpolation.interpolation": {
  "data": {
   "shadows": "bempp.api.utils.interpolation"
  },
  "type": "import"
 },
 "bempp.api.utils.test.test_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.api.utils.test.test_interpolation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.api.utils.test.test_interpolation.test_evaluation_of_laplace_kernel_on_interp_points": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bempp.api.utils.interpolation.chebychev_nodes_and_weights_second_kind",
    "bempp.api.utils.interpolation.chebychev_tensor_points_3d",
    "bempp.api.utils.interpolation.evaluate_kernel_on_interpolation_points",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.linalg.norm",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.test.test_interpolation.test_evaluation_tensor_interp_polynomial": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "bempp.api.utils.interpolation.chebychev_nodes_and_weights_second_kind",
    "bempp.api.utils.interpolation.evaluate_tensor_interp_polynomial",
    "numpy.cos",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.testing.assert_allclose",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.timing": {
  "data": {},
  "type": "module"
 },
 "bempp.api.utils.timing.GLOBAL_PARAMETERS": {
  "data": {
   "shadows": "bempp.api.GLOBAL_PARAMETERS"
  },
  "type": "import"
 },
 "bempp.api.utils.timing.Timer": {
  "data": {
   "lineno": 32
  },
  "type": "class"
 },
 "bempp.api.utils.timing.Timer.__enter__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "time.time"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.timing.Timer.__exit__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "time.time"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.timing.Timer.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "bempp.api.utils.timing._time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "bempp.api.utils.timing.log": {
  "data": {
   "shadows": "bempp.api.log"
  },
  "type": "import"
 },
 "bempp.api.utils.timing.timeit": {
  "data": {
   "lineno": 6
  },
  "type": "function"
 },
 "bempp.api.utils.timing.timeit.timeit_impl": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "bempp.api.utils.timing.timeit.timeit_impl.timed_fun": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bempp.api.GLOBAL_PARAMETERS.verbosity.extended_verbosity",
    "bempp.api.log",
    "fun",
    "time.time"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.which": {
  "data": {},
  "type": "module"
 },
 "bempp.api.utils.which.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bempp.api.utils.which.which": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "bempp.api.utils.which.os",
    "is_exe"
   ]
  },
  "type": "function"
 },
 "bempp.api.utils.which.which.is_exe": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "bempp.api.utils.which.os"
   ]
  },
  "type": "function"
 },
 "bempp.api.version": {
  "data": {
   "shadows": "bempp.version"
  },
  "type": "import"
 },
 "bempp.api.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "bempp.api.which": {
  "data": {
   "shadows": "bempp.api.utils.which"
  },
  "type": "import"
 },
 "bempp.benchmarks": {
  "data": {},
  "type": "module"
 },
 "bempp.benchmarks.benchmark_dense_assembly": {
  "data": {
   "symbols_in_volume": [
    "bempp.benchmarks.benchmark_dense_assembly.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.benchmarks.benchmark_dense_assembly.PYTESTMARK": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "bempp.benchmarks.benchmark_dense_assembly.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_dense_assembly.electric_field": {
  "data": {
   "shadows": "bempp.api.operators.boundary.maxwell.electric_field"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_dense_assembly.function_space": {
  "data": {
   "shadows": "bempp.api.function_space"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_dense_assembly.helmholtz_single_layer_dense_p1_cont_large_benchmark": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.helmholtz.single_layer",
    "benchmark"
   ]
  },
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_assembly.laplace_single_layer_dense_benchmark": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.single_layer",
    "benchmark"
   ]
  },
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_assembly.laplace_single_layer_dense_large_benchmark": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.single_layer",
    "benchmark"
   ]
  },
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_assembly.laplace_single_layer_dense_p1_cont_benchmark": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.single_layer",
    "benchmark"
   ]
  },
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_assembly.laplace_single_layer_dense_p1_disc_benchmark": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.laplace.single_layer",
    "benchmark"
   ]
  },
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_assembly.magnetic_field": {
  "data": {
   "shadows": "bempp.api.operators.boundary.maxwell.magnetic_field"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_dense_assembly.maxwell_electric_field_dense_large_benchmark": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.maxwell.electric_field",
    "benchmark"
   ]
  },
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_assembly.maxwell_magnetic_field_dense_large_benchmark": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.maxwell.magnetic_field",
    "benchmark"
   ]
  },
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_assembly.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_dense_assembly.single_layer": {
  "data": {
   "shadows": "bempp.api.operators.boundary.helmholtz.single_layer"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_dense_potential": {
  "data": {
   "symbols_in_volume": [
    "bempp.benchmarks.benchmark_dense_potential.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.benchmarks.benchmark_dense_potential.PYTESTMARK": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "bempp.benchmarks.benchmark_dense_potential.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_dense_potential.function_space": {
  "data": {
   "shadows": "bempp.api.function_space"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_dense_potential.helmholtz_potential_dense_large_p0_benchmark": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.potential.helmholtz.single_layer",
    "benchmark",
    "numpy.cos",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.sin",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_potential.laplace_potential_dense_large_p0_benchmark": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.potential.laplace.single_layer",
    "benchmark",
    "numpy.cos",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.sin",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "bempp.benchmarks.benchmark_dense_potential.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_dense_potential.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_dense_potential.single_layer": {
  "data": {
   "shadows": "bempp.api.operators.potential.helmholtz.single_layer"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_sparse_assembly": {
  "data": {
   "symbols_in_volume": [
    "bempp.benchmarks.benchmark_sparse_assembly.pytest"
   ]
  },
  "type": "module"
 },
 "bempp.benchmarks.benchmark_sparse_assembly.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_sparse_assembly.function_space": {
  "data": {
   "shadows": "bempp.api.function_space"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_sparse_assembly.identity": {
  "data": {
   "shadows": "bempp.api.operators.boundary.sparse.identity"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_sparse_assembly.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.benchmarks.benchmark_sparse_assembly.pytestmark": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "bempp.benchmarks.benchmark_sparse_assembly.sparse_identity_benchmark": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "bempp.api.function_space",
    "bempp.api.operators.boundary.sparse.identity",
    "benchmark"
   ]
  },
  "type": "function"
 },
 "bempp.conftest": {
  "data": {},
  "type": "module"
 },
 "bempp.conftest.DefaultParameters": {
  "data": {
   "shadows": "bempp.api.utils.parameters.DefaultParameters"
  },
  "type": "import"
 },
 "bempp.conftest.Grid": {
  "data": {
   "shadows": "bempp.api.grid.Grid"
  },
  "type": "import"
 },
 "bempp.conftest.Helpers": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.conftest.Helpers.bempp_path": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "bempp.conftest.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "bempp.conftest.Helpers.default_tolerance": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "bempp.conftest.precision",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "bempp.conftest.Helpers.load_grid": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "bempp.conftest.Helpers",
    "bempp.conftest.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "bempp.conftest.Helpers.load_npy_data": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "bempp.conftest.Helpers",
    "bempp.conftest.os",
    "numpy.load",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "bempp.conftest.Helpers.load_npz_data": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "bempp.conftest.Helpers",
    "bempp.conftest.os",
    "numpy.load",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "bempp.conftest.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.conftest.bempp.core": {
  "data": {
   "shadows": "bempp.core"
  },
  "type": "import"
 },
 "bempp.conftest.default_parameters": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "bempp.api.utils.parameters.DefaultParameters",
    "bempp.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "bempp.conftest.device_interface": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "bempp.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "bempp.conftest.helpers": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "bempp.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "bempp.conftest.laplace_slp_small_sphere": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "bempp.api.operators.boundary.laplace.single_layer",
    "bempp.conftest.pytest",
    "bempp.conftest.small_piecewise_const_space"
   ]
  },
  "type": "function"
 },
 "bempp.conftest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bempp.conftest.precision": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "ValueError",
    "bempp.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "bempp.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.conftest.pytest_addoption": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "bempp.conftest.set_device_options": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "bempp.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "bempp.conftest.single_layer": {
  "data": {
   "shadows": "bempp.api.operators.boundary.laplace.single_layer"
  },
  "type": "import"
 },
 "bempp.conftest.small_piecewise_const_space": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bempp.conftest.pytest",
    "bempp.conftest.small_sphere"
   ]
  },
  "type": "function"
 },
 "bempp.conftest.small_sphere": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "bempp.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "bempp.conftest.two_element_grid": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "bempp.api.grid.Grid",
    "bempp.conftest.pytest",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "bempp.core": {
  "data": {},
  "type": "module"
 },
 "bempp.core.cl_helpers": {
  "data": {
   "symbols_in_volume": [
    "bempp.core.cl_helpers._CURRENT_PATH",
    "collections.namedtuple",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "os.path.realpath",
    "pyopencl.device_info.GLOBAL_MEM_SIZE",
    "pyopencl.device_info.MAX_MEM_ALLOC_SIZE"
   ]
  },
  "type": "module"
 },
 "bempp.core.cl_helpers.Context": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.core.cl_helpers.Context.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Context._populate_devices": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bempp.core.cl_helpers.DeviceInterface"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Context.cl_context": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Context.devices": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Context.platform_name": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.core.cl_helpers.DeviceBuffer.__init__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer._get_mem_flags": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "ValueError",
    "pyopencl.mem_flags"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer._initialize_buffer": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "numpy.prod",
    "pyopencl.Buffer"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.access_mode": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.alloc_host_memory": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.buffer": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.context": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.dtype": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.fill_buffer": {
  "data": {
   "lineno": 469
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.from_array": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.get_host_copy": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.host_array": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "ValueError",
    "contextlib.contextmanager",
    "pyopencl.enqueue_map_buffer",
    "pyopencl.map_flags.READ",
    "pyopencl.map_flags.WRITE"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.order": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.set_zero": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "numpy.int8",
    "numpy.prod",
    "pyopencl.enqueue_fill_buffer"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceBuffer.shape": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.core.cl_helpers.DeviceInterface.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pyopencl.CommandQueue",
    "pyopencl.command_queue_properties.PROFILING_ENABLE"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.__repr__": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface._device_property": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.cl_device": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.context": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.data_queue": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.default_precision": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.global_mem_size": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "bempp.core.cl_helpers._GLOBAL_MEM_SIZE",
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.kernel_queue": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.max_mem_alloc_size": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "bempp.core.cl_helpers._MAX_MEM_ALLOC_SIZE",
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.name": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.native_vector_width": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.queue": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.DeviceInterface.type": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "property",
    "pyopencl.device_type.CPU",
    "pyopencl.device_type.GPU"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Event": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.core.cl_helpers.Event.__init__": {
  "data": {
   "lineno": 548
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Event.cl_event": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Event.finished": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "property",
    "pyopencl.command_execution_status.complete",
    "pyopencl.event_info.COMMAND_EXECUTION_STATUS"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Event.runtime": {
  "data": {
   "lineno": 570
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Event.wait": {
  "data": {
   "lineno": 566
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.core.cl_helpers.Kernel.__del__": {
  "data": {
   "lineno": 275
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel.__init__": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel._build": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "bempp.core.cl_helpers._get_kernel_compile_options_from_parameters",
    "pyopencl.Program"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel.context": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel.implementation": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel.kernel_source": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel.optimal_workgroup_multiple": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "pyopencl.kernel_work_group_info.PREFERRED_WORK_GROUP_SIZE_MULTIPLE"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.Kernel.run": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "bempp.core.cl_helpers.Event",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.KernelSource": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "bempp.core.cl_helpers.TypeContainer": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "bempp.core.cl_helpers._CURRENT_PATH": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "bempp.core.cl_helpers._DEFAULT_CONTEXT": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "bempp.core.cl_helpers._DEFAULT_DEVICE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "bempp.core.cl_helpers._GLOBAL_MEM_SIZE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "bempp.core.cl_helpers._INCLUDE_PATH": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "bempp.core.cl_helpers._KERNEL_PATH": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "bempp.core.cl_helpers._MAX_MEM_ALLOC_SIZE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "bempp.core.cl_helpers._cl": {
  "data": {
   "shadows": "pyopencl"
  },
  "type": "import"
 },
 "bempp.core.cl_helpers._collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "bempp.core.cl_helpers._contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "bempp.core.cl_helpers._get_kernel_compile_options_from_parameters": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "bempp.core.cl_helpers._INCLUDE_PATH",
    "bempp.core.cl_helpers.numbers",
    "dict",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.core.cl_helpers._os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bempp.core.cl_helpers.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.core.cl_helpers.default_context": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "bempp.core.cl_helpers._DEFAULT_CONTEXT",
    "bempp.core.cl_helpers.default_device"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.default_device": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "bempp.core.cl_helpers.Context",
    "bempp.core.cl_helpers._DEFAULT_CONTEXT",
    "bempp.core.cl_helpers._DEFAULT_DEVICE",
    "bempp.core.cl_helpers.find_cpu_driver",
    "bempp.core.cl_helpers.os",
    "pyopencl.create_some_context"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.find_cpu_driver": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "bempp.core.cl_helpers.Context",
    "pyopencl.Context",
    "pyopencl.context_properties.PLATFORM",
    "pyopencl.device_type.ALL",
    "pyopencl.get_platforms"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.get_context_by_name": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "ValueError",
    "bempp.core.cl_helpers.Context",
    "enumerate",
    "pyopencl.Context",
    "pyopencl.context_properties.PLATFORM",
    "pyopencl.device_type.ALL",
    "pyopencl.get_platforms"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.get_precision": {
  "data": {
   "lineno": 673
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.get_type": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "ValueError",
    "bempp.core.cl_helpers.TypeContainer"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.kernel_source_from_file": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "bempp.core.cl_helpers.KernelSource",
    "bempp.core.cl_helpers._KERNEL_PATH",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.kernel_source_from_identifier": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "bempp.core.cl_helpers.kernel_source_from_file"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "bempp.core.cl_helpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "bempp.core.cl_helpers.set_default_device": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "bempp.core.cl_helpers.Context",
    "bempp.core.cl_helpers.DeviceInterface",
    "bempp.core.cl_helpers._DEFAULT_CONTEXT",
    "bempp.core.cl_helpers._DEFAULT_DEVICE",
    "pyopencl.Context",
    "pyopencl.context_properties.PLATFORM",
    "pyopencl.get_platforms"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.show_available_platforms_and_devices": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "enumerate",
    "print",
    "pyopencl.device_info.NAME",
    "pyopencl.get_platforms",
    "pyopencl.platform_info.NAME",
    "str"
   ]
  },
  "type": "function"
 },
 "bempp.core.cl_helpers.wait_for_events": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "pyopencl.wait_for_events"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_assembler": {
  "data": {},
  "type": "module"
 },
 "bempp.core.dense_assembler.DenseAssembler": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "bempp.api.assembly.assembler.AssemblerBase"
   ]
  },
  "type": "class"
 },
 "bempp.core.dense_assembler.DenseAssembler.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_assembler.DenseAssembler.assemble": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.assembly.discrete_boundary_operator.DenseDiscreteBoundaryOperator",
    "bempp.api.utils.helpers.promote_to_double_precision",
    "bempp.core.dense_assembler.assemble_dense",
    "choose_source_name"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_assembler.DenseDiscreteBoundaryOperator": {
  "data": {
   "shadows": "bempp.api.assembly.discrete_boundary_operator.DenseDiscreteBoundaryOperator"
  },
  "type": "import"
 },
 "bempp.core.dense_assembler._assembler": {
  "data": {
   "shadows": "bempp.api.assembly.assembler"
  },
  "type": "import"
 },
 "bempp.core.dense_assembler._cl_helpers": {
  "data": {
   "shadows": "bempp.core.cl_helpers"
  },
  "type": "import"
 },
 "bempp.core.dense_assembler._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.core.dense_assembler._prepare_buffers": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "bempp.core.cl_helpers.DeviceBuffer",
    "bempp.core.cl_helpers.DeviceBuffer.from_array",
    "bempp.core.cl_helpers.get_type",
    "numpy.int32",
    "numpy.uint32",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_assembler._timeit": {
  "data": {
   "shadows": "bempp.helpers.timeit"
  },
  "type": "import"
 },
 "bempp.core.dense_assembler.assemble_dense": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "bempp.api.integration.triangle_gauss.rule",
    "bempp.api.log",
    "bempp.core.cl_helpers.DeviceBuffer.from_array",
    "bempp.core.cl_helpers.Kernel",
    "bempp.core.cl_helpers.kernel_source_from_identifier",
    "bempp.core.dense_assembler._prepare_buffers",
    "bempp.core.kernel_helpers.get_vectorization_information",
    "bempp.core.kernel_helpers.run_chunked_kernel",
    "bempp.core.singular_assembler.assemble_singular_part",
    "bempp.helpers.timeit",
    "len",
    "numpy.add.at",
    "numpy.int32",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_assembler.assemble_singular_part": {
  "data": {
   "shadows": "bempp.core.singular_assembler.assemble_singular_part"
  },
  "type": "import"
 },
 "bempp.core.dense_assembler.kernel_helpers": {
  "data": {
   "shadows": "bempp.core.kernel_helpers"
  },
  "type": "import"
 },
 "bempp.core.dense_assembler.log": {
  "data": {
   "shadows": "bempp.api.log"
  },
  "type": "import"
 },
 "bempp.core.dense_assembler.promote_to_double_precision": {
  "data": {
   "shadows": "bempp.api.utils.helpers.promote_to_double_precision"
  },
  "type": "import"
 },
 "bempp.core.dense_assembler.regular_rule": {
  "data": {
   "shadows": "bempp.api.integration.triangle_gauss.rule"
  },
  "type": "import"
 },
 "bempp.core.dense_assembly_helpers": {
  "data": {},
  "type": "module"
 },
 "bempp.core.dense_assembly_helpers.choose_source_name": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_assembly_helpers.choose_source_name_dense_evaluator": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_assembly_helpers.choose_source_name_dense_multitrace_evaluator": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_evaluator": {
  "data": {},
  "type": "module"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorAssembler": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "bempp.api.assembly.assembler.AssemblerBase"
   ]
  },
  "type": "class"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorAssembler.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorAssembler.assemble": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "bempp.api.assembly.discrete_boundary_operator.GenericDiscreteBoundaryOperator",
    "bempp.api.space.space.return_compatible_representation",
    "bempp.api.utils.pool.execute",
    "bempp.api.utils.pool.is_initialised",
    "bempp.api.utils.pool.number_of_workers",
    "bempp.core.dense_evaluator.DenseEvaluatorMultiprocessingInstance",
    "bempp.core.singular_assembler.SingularAssembler",
    "numpy.array_split",
    "numpy.complex128",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorAssembler.dtype": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorAssembler.matvec": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "bempp.api.utils.pool.is_initialised",
    "bempp.api.utils.pool.starmap",
    "bempp.helpers.timeit",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorAssembler.shape": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorMultiprocessingInstance": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorMultiprocessingInstance.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "bempp.api.space.space.return_compatible_representation",
    "bempp.api.utils.helpers.create_unique_id",
    "bempp.api.utils.pool.get_data",
    "bempp.api.utils.pool.insert_data",
    "bempp.api.utils.pool.is_worker"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorMultiprocessingInstance.compile_kernel": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "bempp.api.integration.triangle_gauss.rule",
    "bempp.core.cl_helpers.DeviceBuffer",
    "bempp.core.cl_helpers.DeviceBuffer.from_array",
    "bempp.core.cl_helpers.Kernel",
    "bempp.core.cl_helpers.get_type",
    "bempp.core.cl_helpers.kernel_source_from_identifier",
    "bempp.core.dense_evaluator.WORKGROUP_SIZE",
    "bempp.core.kernel_helpers.closest_multiple_to_number",
    "bempp.core.kernel_helpers.get_vectorization_information",
    "choose_source_name_dense_evaluator",
    "len",
    "numpy.int32",
    "numpy.uint32",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorMultiprocessingInstance.compute": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "bempp.core.dense_evaluator.WORKGROUP_SIZE",
    "len",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_evaluator.DenseEvaluatorMultiprocessingInstance.id": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_evaluator.GenericDiscreteBoundaryOperator": {
  "data": {
   "shadows": "bempp.api.assembly.discrete_boundary_operator.GenericDiscreteBoundaryOperator"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator.SingularAssembler": {
  "data": {
   "shadows": "bempp.core.singular_assembler.SingularAssembler"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator.WORKGROUP_SIZE": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "bempp.core.dense_evaluator._assembler": {
  "data": {
   "shadows": "bempp.api.assembly.assembler"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator._cl_helpers": {
  "data": {
   "shadows": "bempp.core.cl_helpers"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator._evaluator": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "bempp.core.dense_evaluator._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator._prepare_evaluator": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "bempp.api.utils.pool.get_id",
    "bempp.core.dense_evaluator.DenseEvaluatorMultiprocessingInstance"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_evaluator._timeit": {
  "data": {
   "shadows": "bempp.helpers.timeit"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator._worker": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "bempp.api.utils.pool.get_data"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_evaluator.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator.cl_helpers": {
  "data": {
   "shadows": "bempp.core.cl_helpers"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator.dense_evaluator": {
  "data": {
   "shadows": "bempp.core.dense_evaluator"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator.get_context_by_name": {
  "data": {
   "shadows": "bempp.core.cl_helpers.get_context_by_name"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator.helpers": {
  "data": {
   "shadows": "bempp.api.utils.helpers"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator.kernel_helpers": {
  "data": {
   "shadows": "bempp.core.kernel_helpers"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator.log": {
  "data": {
   "shadows": "bempp.api.log"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator.mp": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator.pool": {
  "data": {
   "shadows": "bempp.api.utils.pool"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator.return_compatible_representation": {
  "data": {
   "shadows": "bempp.api.space.space.return_compatible_representation"
  },
  "type": "import"
 },
 "bempp.core.dense_evaluator.rule": {
  "data": {
   "shadows": "bempp.api.integration.triangle_gauss.rule"
  },
  "type": "import"
 },
 "bempp.core.dense_multitrace_evaluator": {
  "data": {},
  "type": "module"
 },
 "bempp.core.dense_multitrace_evaluator.BlockedDiscreteOperator": {
  "data": {
   "shadows": "bempp.api.assembly.blocked_operator.BlockedDiscreteOperator"
  },
  "type": "import"
 },
 "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "bempp.api.assembly.assembler.AssemblerBase"
   ]
  },
  "type": "class"
 },
 "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler._prepare_buffers": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "bempp.api.integration.triangle_gauss.rule",
    "bempp.core.cl_helpers.DeviceBuffer",
    "bempp.core.cl_helpers.DeviceBuffer.from_array",
    "bempp.core.cl_helpers.get_type",
    "numpy.int32",
    "numpy.uint32",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler.assemble": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "bempp.api.assembly.blocked_operator.BlockedDiscreteOperator",
    "bempp.api.assembly.discrete_boundary_operator.GenericDiscreteBoundaryOperator",
    "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator",
    "bempp.api.integration.triangle_gauss.rule",
    "bempp.api.log",
    "bempp.core.cl_helpers.DeviceBuffer.from_array",
    "bempp.core.cl_helpers.Kernel",
    "bempp.core.cl_helpers.kernel_source_from_identifier",
    "bempp.core.kernel_helpers.closest_multiple_to_number",
    "bempp.core.kernel_helpers.get_vectorization_information",
    "choose_source_name_dense_multitrace_evaluator",
    "len",
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.float32",
    "numpy.float64",
    "numpy.object",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler.dtype": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler.matvec": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "bempp.api.log",
    "numpy.expand_dims",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_multitrace_evaluator.DenseMultitraceEvaluatorAssembler.shape": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_multitrace_evaluator.GenericDiscreteBoundaryOperator": {
  "data": {
   "shadows": "bempp.api.assembly.discrete_boundary_operator.GenericDiscreteBoundaryOperator"
  },
  "type": "import"
 },
 "bempp.core.dense_multitrace_evaluator.SparseDiscreteBoundaryOperator": {
  "data": {
   "shadows": "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator"
  },
  "type": "import"
 },
 "bempp.core.dense_multitrace_evaluator._assembler": {
  "data": {
   "shadows": "bempp.api.assembly.assembler"
  },
  "type": "import"
 },
 "bempp.core.dense_multitrace_evaluator._cl_helpers": {
  "data": {
   "shadows": "bempp.core.cl_helpers"
  },
  "type": "import"
 },
 "bempp.core.dense_multitrace_evaluator._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.core.dense_multitrace_evaluator.kernel_helpers": {
  "data": {
   "shadows": "bempp.core.kernel_helpers"
  },
  "type": "import"
 },
 "bempp.core.dense_multitrace_evaluator.log": {
  "data": {
   "shadows": "bempp.api.log"
  },
  "type": "import"
 },
 "bempp.core.dense_multitrace_evaluator.promote_to_double_precision": {
  "data": {
   "shadows": "bempp.api.utils.helpers.promote_to_double_precision"
  },
  "type": "import"
 },
 "bempp.core.dense_multitrace_evaluator.rule": {
  "data": {
   "shadows": "bempp.api.integration.triangle_gauss.rule"
  },
  "type": "import"
 },
 "bempp.core.dense_potential_assembler": {
  "data": {},
  "type": "module"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.assign_parameters",
    "bempp.api.default_device",
    "bempp.api.get_precision"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.device_interface": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.evaluate": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "bempp.api.integration.triangle_gauss.rule",
    "bempp.core.cl_helpers.DeviceBuffer",
    "bempp.core.cl_helpers.DeviceBuffer.from_array",
    "bempp.core.cl_helpers.Kernel",
    "bempp.core.cl_helpers.get_type",
    "bempp.core.cl_helpers.kernel_source_from_identifier",
    "bempp.core.kernel_helpers.closest_multiple_to_number",
    "bempp.core.kernel_helpers.get_vectorization_information",
    "len",
    "numpy.int32",
    "numpy.iscomplexobj",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.kernel_dimension": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.operator_descriptor": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.parameters": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.points": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.precision": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_potential_assembler.DensePotentialAssembler.space": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.dense_potential_assembler._cl_helpers": {
  "data": {
   "shadows": "bempp.core.cl_helpers"
  },
  "type": "import"
 },
 "bempp.core.dense_potential_assembler._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.core.dense_potential_assembler.assign_parameters": {
  "data": {
   "shadows": "bempp.api.assign_parameters"
  },
  "type": "import"
 },
 "bempp.core.dense_potential_assembler.default_device": {
  "data": {
   "shadows": "bempp.api.default_device"
  },
  "type": "import"
 },
 "bempp.core.dense_potential_assembler.get_precision": {
  "data": {
   "shadows": "bempp.api.get_precision"
  },
  "type": "import"
 },
 "bempp.core.dense_potential_assembler.kernel_helpers": {
  "data": {
   "shadows": "bempp.core.kernel_helpers"
  },
  "type": "import"
 },
 "bempp.core.dense_potential_assembler.log": {
  "data": {
   "shadows": "bempp.api.log"
  },
  "type": "import"
 },
 "bempp.core.dense_potential_assembler.regular_rule": {
  "data": {
   "shadows": "bempp.api.integration.triangle_gauss.rule"
  },
  "type": "import"
 },
 "bempp.core.device_grid_interface": {
  "data": {},
  "type": "module"
 },
 "bempp.core.device_grid_interface.DeviceBuffer": {
  "data": {
   "shadows": "bempp.core.cl_helpers.DeviceBuffer"
  },
  "type": "import"
 },
 "bempp.core.device_grid_interface.DeviceGridInterface": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.core.device_grid_interface.DeviceGridInterface.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "bempp.core.cl_helpers.DeviceBuffer.from_array",
    "bempp.core.cl_helpers.get_type",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "bempp.core.device_grid_interface.DeviceGridInterface.buffer": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.device_grid_interface.DeviceGridInterface.device": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.device_grid_interface.DeviceGridInterface.elements_buffer": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.device_grid_interface.DeviceGridInterface.grid": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.device_grid_interface.DeviceGridInterface.grid_buffer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.device_grid_interface._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.core.device_grid_interface.get_type": {
  "data": {
   "shadows": "bempp.core.cl_helpers.get_type"
  },
  "type": "import"
 },
 "bempp.core.kernel_helpers": {
  "data": {},
  "type": "module"
 },
 "bempp.core.kernel_helpers._cl_helpers": {
  "data": {
   "shadows": "bempp.core.cl_helpers"
  },
  "type": "import"
 },
 "bempp.core.kernel_helpers.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.core.kernel_helpers.closest_multiple_to_number": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "bempp.core.kernel_helpers.get_vectorization_information": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "bempp.core.kernel_helpers.run_2d_kernel": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "bempp.core.kernel_helpers.closest_multiple_to_number",
    "events",
    "events.append"
   ]
  },
  "type": "function"
 },
 "bempp.core.kernel_helpers.run_chunked_kernel": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "bempp.core.cl_helpers.wait_for_events",
    "bempp.core.kernel_helpers.run_2d_kernel",
    "events",
    "len",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "bempp.core.near_field_assembler": {
  "data": {},
  "type": "module"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler._prepare_buffers": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "bempp.core.near_field_assembler.process_near_field",
    "len",
    "numpy.diff",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler._setup": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "bempp.api.log",
    "bempp.core.near_field_assembler._WORKGROUP_SIZE"
   ]
  },
  "type": "function"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler.as_linear_operator": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "scipy.sparse.linalg.aslinearoperator"
   ]
  },
  "type": "function"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler.dtype": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler.matvec": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "bempp.api.log",
    "bempp.core.near_field_assembler._WORKGROUP_SIZE"
   ]
  },
  "type": "function"
 },
 "bempp.core.near_field_assembler.NearFieldAssembler.shape": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.near_field_assembler._WORKGROUP_SIZE": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "bempp.core.near_field_assembler._cl_helpers": {
  "data": {
   "shadows": "cl_helpers"
  },
  "type": "import"
 },
 "bempp.core.near_field_assembler._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.core.near_field_assembler.aslinearoperator": {
  "data": {
   "shadows": "scipy.sparse.linalg.aslinearoperator"
  },
  "type": "import"
 },
 "bempp.core.near_field_assembler.log": {
  "data": {
   "shadows": "bempp.api.log"
  },
  "type": "import"
 },
 "bempp.core.near_field_assembler.process_near_field": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.concatenate",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "bempp.core.singular_assembler.DeviceBuffer": {
  "data": {
   "shadows": "bempp.core.cl_helpers.DeviceBuffer"
  },
  "type": "import"
 },
 "bempp.core.singular_assembler.SingularAssembler": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "bempp.api.assembly.assembler.AssemblerBase"
   ]
  },
  "type": "class"
 },
 "bempp.core.singular_assembler.SingularAssembler.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler.SingularAssembler.assemble": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator",
    "bempp.api.space.space.return_compatible_representation",
    "bempp.api.utils.helpers.promote_to_double_precision",
    "bempp.core.singular_assembler.assemble_singular_part",
    "choose_source_name",
    "scipy.sparse.coo_matrix",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler.SparseDiscreteBoundaryOperator": {
  "data": {
   "shadows": "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator"
  },
  "type": "import"
 },
 "bempp.core.singular_assembler.WORKGROUP_SIZE_COLLOCATION": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "bempp.core.singular_assembler.WORKGROUP_SIZE_GALERKIN": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "bempp.core.singular_assembler._SingularQuadratureRule": {
  "data": {
   "lineno": 247
  },
  "type": "constant"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.__init__": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "bempp.api.integration.duffy_collocation.singular_collocation_rule_piecewise_const",
    "len",
    "numpy.flatnonzero"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation._vectorize_indices": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation._vectorize_offsets": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation._vectorize_points": {
  "data": {
   "lineno": 801
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation._vectorize_weights": {
  "data": {
   "lineno": 806
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation._vectorized_local_number_of_integration_points": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.coincident_rule": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.grid": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.index_count": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.number_of_elements": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.number_of_points": {
  "data": {
   "lineno": 722
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.order": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.parameters": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.push_to_device": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "bempp.core.cl_helpers.DeviceBuffer.from_array",
    "bempp.core.cl_helpers.get_type",
    "bempp.core.singular_assembler._SingularityRuleDeviceBuffersCollocation",
    "zip"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.test_indices": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation.trial_indices": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "bempp.api.integration.duffy_galerkin.rule",
    "bempp.core.singular_assembler._SingularQuadratureRule",
    "len",
    "numpy.flatnonzero"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._collect_remapped_quad_points_for_edge_adjacent_rule": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "bempp.api.integration.duffy_galerkin.remap_points_shared_edge",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._collect_remapped_quad_points_for_vertex_adjacent_rule": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "bempp.api.integration.duffy_galerkin.remap_points_shared_vertex",
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._compute_edge_offsets": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._compute_vertex_offsets": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._vectorize_indices": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "numpy.empty",
    "zip"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._vectorize_offsets": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "numpy.empty",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._vectorize_points": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._vectorize_weights": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "numpy.hstack"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin._vectorized_local_number_of_integration_points": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.coincident_rule": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.edge_adjacency": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.edge_adjacent_rule": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.grid": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.index_count": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.number_of_elements": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.number_of_points": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "bempp.api.integration.duffy_galerkin.number_of_quadrature_points"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.order": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.parameters": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.push_to_device": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "bempp.core.cl_helpers.DeviceBuffer.from_array",
    "bempp.core.cl_helpers.get_type",
    "bempp.core.singular_assembler._SingularityRuleDeviceBuffers",
    "zip"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.test_indices": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.trial_indices": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.vertex_adjacency": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin.vertex_adjacent_rule": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler._SingularityRuleDeviceBuffers": {
  "data": {
   "lineno": 251
  },
  "type": "constant"
 },
 "bempp.core.singular_assembler._SingularityRuleDeviceBuffersCollocation": {
  "data": {
   "lineno": 258
  },
  "type": "constant"
 },
 "bempp.core.singular_assembler._assembler": {
  "data": {
   "shadows": "bempp.api.assembly.assembler"
  },
  "type": "import"
 },
 "bempp.core.singular_assembler._collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "bempp.core.singular_assembler._duffy_collocation": {
  "data": {
   "shadows": "bempp.api.integration.duffy_collocation"
  },
  "type": "import"
 },
 "bempp.core.singular_assembler._duffy_galerkin": {
  "data": {
   "shadows": "bempp.api.integration.duffy_galerkin"
  },
  "type": "import"
 },
 "bempp.core.singular_assembler._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.core.singular_assembler._timeit": {
  "data": {
   "shadows": "bempp.helpers.timeit"
  },
  "type": "import"
 },
 "bempp.core.singular_assembler.assemble_singular_part": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "bempp.core.cl_helpers.DeviceBuffer",
    "bempp.core.cl_helpers.DeviceBuffer.from_array",
    "bempp.core.cl_helpers.Kernel",
    "bempp.core.cl_helpers.get_type",
    "bempp.core.cl_helpers.kernel_source_from_identifier",
    "bempp.core.singular_assembler.WORKGROUP_SIZE_COLLOCATION",
    "bempp.core.singular_assembler.WORKGROUP_SIZE_GALERKIN",
    "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceCollocation",
    "bempp.core.singular_assembler._SingularQuadratureRuleInterfaceGalerkin",
    "bempp.helpers.timeit",
    "len",
    "numpy.arange",
    "numpy.int32",
    "numpy.repeat",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "bempp.core.singular_assembler.bempp.api": {
  "data": {
   "shadows": "bempp.api"
  },
  "type": "import"
 },
 "bempp.core.singular_assembler.cl_helpers": {
  "data": {
   "shadows": "bempp.core.cl_helpers"
  },
  "type": "import"
 },
 "bempp.core.singular_assembler.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "bempp.core.singular_assembler.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "bempp.core.singular_assembler.get_type": {
  "data": {
   "shadows": "bempp.core.cl_helpers.get_type"
  },
  "type": "import"
 },
 "bempp.core.singular_assembler.promote_to_double_precision": {
  "data": {
   "shadows": "bempp.api.utils.helpers.promote_to_double_precision"
  },
  "type": "import"
 },
 "bempp.core.singular_assembler.return_compatible_representation": {
  "data": {
   "shadows": "bempp.api.space.space.return_compatible_representation"
  },
  "type": "import"
 },
 "bempp.core.sparse_assembler": {
  "data": {},
  "type": "module"
 },
 "bempp.core.sparse_assembler.SparseAssembler": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "bempp.api.assembly.assembler.AssemblerBase"
   ]
  },
  "type": "class"
 },
 "bempp.core.sparse_assembler.SparseAssembler.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "bempp.core.sparse_assembler.SparseAssembler.assemble": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator",
    "bempp.api.space.space.return_compatible_representation",
    "bempp.api.utils.helpers.promote_to_double_precision",
    "bempp.core.sparse_assembler.assemble_sparse",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "bempp.core.sparse_assembler.SparseDiscreteBoundaryOperator": {
  "data": {
   "shadows": "bempp.api.assembly.discrete_boundary_operator.SparseDiscreteBoundaryOperator"
  },
  "type": "import"
 },
 "bempp.core.sparse_assembler._assembler": {
  "data": {
   "shadows": "bempp.api.assembly.assembler"
  },
  "type": "import"
 },
 "bempp.core.sparse_assembler._cl_helpers": {
  "data": {
   "shadows": "bempp.core.cl_helpers"
  },
  "type": "import"
 },
 "bempp.core.sparse_assembler._np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.core.sparse_assembler._prepare_buffers": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "bempp.core.cl_helpers.DeviceBuffer",
    "bempp.core.cl_helpers.DeviceBuffer.from_array",
    "bempp.core.cl_helpers.get_type",
    "len",
    "numpy.flatnonzero",
    "numpy.int32",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "bempp.core.sparse_assembler.assemble_sparse": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "bempp.api.integration.triangle_gauss.rule",
    "bempp.core.cl_helpers.Kernel",
    "bempp.core.cl_helpers.kernel_source_from_identifier",
    "bempp.core.kernel_helpers.run_chunked_kernel",
    "bempp.core.sparse_assembler._prepare_buffers",
    "len",
    "numpy.arange",
    "numpy.flatnonzero",
    "numpy.repeat",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "bempp.core.sparse_assembler.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "bempp.core.sparse_assembler.kernel_helpers": {
  "data": {
   "shadows": "bempp.core.kernel_helpers"
  },
  "type": "import"
 },
 "bempp.core.sparse_assembler.promote_to_double_precision": {
  "data": {
   "shadows": "bempp.api.utils.helpers.promote_to_double_precision"
  },
  "type": "import"
 },
 "bempp.core.sparse_assembler.regular_rule": {
  "data": {
   "shadows": "bempp.api.integration.triangle_gauss.rule"
  },
  "type": "import"
 },
 "bempp.core.sparse_assembler.return_compatible_representation": {
  "data": {
   "shadows": "bempp.api.space.space.return_compatible_representation"
  },
  "type": "import"
 },
 "bempp.core.test": {
  "data": {},
  "type": "module"
 },
 "bempp.core.test.test_cl_helpers": {
  "data": {},
  "type": "module"
 },
 "bempp.core.test.test_cl_helpers.DTYPE": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "bempp.core.test.test_cl_helpers.DeviceBuffer": {
  "data": {
   "shadows": "bempp.core.cl_helpers.DeviceBuffer"
  },
  "type": "import"
 },
 "bempp.core.test.test_cl_helpers.SHAPE": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "bempp.core.test.test_cl_helpers.default_device": {
  "data": {
   "shadows": "bempp.core.cl_helpers.default_device"
  },
  "type": "import"
 },
 "bempp.core.test.test_cl_helpers.device_buffer": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bempp.core.cl_helpers.DeviceBuffer",
    "bempp.core.cl_helpers.default_device",
    "bempp.core.test.test_cl_helpers.DTYPE",
    "bempp.core.test.test_cl_helpers.SHAPE",
    "bempp.core.test.test_cl_helpers.pytest"
   ]
  },
  "type": "function"
 },
 "bempp.core.test.test_cl_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "bempp.core.test.test_cl_helpers.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "bempp.core.test.test_cl_helpers.test_buffer_mapping": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "bempp.core.test.test_cl_helpers.SHAPE",
    "bempp.core.test.test_cl_helpers.device_buffer",
    "numpy.copy",
    "numpy.random.rand",
    "numpy.random.seed",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "bempp.helpers": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "bempp.helpers.IndexList": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "bempp.helpers._collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "bempp.helpers._functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "bempp.helpers._time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "bempp.helpers.log": {
  "data": {
   "shadows": "bempp.api.log"
  },
  "type": "import"
 },
 "bempp.helpers.timeit": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "bempp.helpers.timeit.timed_fun": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "bempp.api.log",
    "fun",
    "fun.__qualname__",
    "functools.wraps",
    "time.time"
   ]
  },
  "type": "function"
 },
 "bempp.version": {
  "data": {},
  "type": "module"
 },
 "bempp.version.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 }
}