{
 "benchmarks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "benchmarks._bench": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "benchmarks._bench.eigenpro_plot_mnist": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.show",
   "matplotlib.pyplot.subplot2grid",
   "matplotlib.pyplot.tight_layout",
   "matplotlib.ticker.ScalarFormatter",
   "numpy.int32",
   "numpy.random.RandomState",
   "numpy.sum",
   "sklearn.datasets.fetch_openml",
   "sklearn.svm.SVC",
   "sklearn_extra.kernel_methods.EigenProClassifier",
   "time.time"
  ],
  "type": "module"
 },
 "benchmarks._bench.eigenpro_plot_noisy_mnist": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.show",
   "matplotlib.pyplot.subplot2grid",
   "matplotlib.pyplot.tight_layout",
   "matplotlib.ticker.ScalarFormatter",
   "numpy.int32",
   "numpy.random.RandomState",
   "numpy.sum",
   "sklearn.datasets.fetch_openml",
   "sklearn.svm.SVC",
   "sklearn_extra.kernel_methods.EigenProClassifier",
   "time.time"
  ],
  "type": "module"
 },
 "benchmarks._bench.eigenpro_plot_synthetic": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.show",
   "matplotlib.pyplot.subplot2grid",
   "matplotlib.pyplot.tight_layout",
   "matplotlib.ticker.ScalarFormatter",
   "numpy.random.RandomState",
   "numpy.sum",
   "sklearn.datasets.make_classification",
   "sklearn.svm.SVC",
   "sklearn_extra.kernel_methods.EigenProClassifier",
   "time.time"
  ],
  "type": "module"
 },
 "benchmarks.bench_rbfsampler_fastfood": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.datetime.utcnow",
   "numpy.newaxis",
   "numpy.random.RandomState",
   "numpy.sqrt",
   "sklearn.kernel_approximation.Fastfood",
   "sklearn.kernel_approximation.RBFSampler",
   "sklearn.utils.testing.assert_greater"
  ],
  "type": "module"
 },
 "sklearn_extra": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn_extra._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn_extra.cluster": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn_extra.cluster._k_medoids": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn_extra.cluster._k_medoids.KMedoids": {
  "lineno": 25,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClusterMixin",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklearn_extra.cluster._k_medoids.KMedoids.__init__": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn_extra.cluster._k_medoids.KMedoids._check_init_args": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn_extra.cluster._k_medoids.KMedoids._check_nonnegative_int": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.integer"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster._k_medoids.KMedoids._compute_inertia": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.min",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster._k_medoids.KMedoids._initialize_medoids": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.argpartition",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster._k_medoids.KMedoids._kpp_init": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.log",
   "numpy.minimum",
   "numpy.searchsorted",
   "sklearn.utils.extmath.stable_cumsum"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster._k_medoids.KMedoids._update_medoid_idxs_in_place": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.argmax",
   "numpy.argmin",
   "numpy.newaxis",
   "numpy.sum",
   "numpy.where",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster._k_medoids.KMedoids.fit": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.argmin",
   "numpy.copy",
   "sklearn.exceptions.ConvergenceWarning",
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.utils.check_array",
   "sklearn.utils.check_random_state",
   "warnings.warn"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster._k_medoids.KMedoids.predict": {
  "lineno": 281,
  "symbols_in_volume": [
   "numpy.argmin",
   "sklearn.metrics.pairwise.pairwise_distances_argmin",
   "sklearn.utils.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster._k_medoids.KMedoids.transform": {
  "lineno": 256,
  "symbols_in_volume": [
   "sklearn.metrics.pairwise.pairwise_distances",
   "sklearn.utils.check_array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn_extra.cluster.tests.test_k_medoids": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_callable_distance_metric": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.utils.testing.assert_array_equal",
   "sklearn.utils.testing.assert_equal",
   "sklearn_extra.cluster.KMedoids"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_callable_distance_metric.my_metric": {
  "lineno": 280,
  "symbols_in_volume": [
   "numpy.power",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_heuristic_deterministic": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.datasets.load_iris",
   "sklearn.metrics.pairwise.euclidean_distances",
   "sklearn.utils.testing.assert_array_equal",
   "sklearn_extra.cluster.KMedoids"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_kmedoids_empty_clusters": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.utils.testing.assert_warns_message",
   "sklearn_extra.cluster.KMedoids"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_kmedoids_fit_naive": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.asarray",
   "sklearn.utils.testing.assert_array_equal",
   "sklearn_extra.cluster.KMedoids"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_kmedoids_fit_predict_transform": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.utils.testing.assert_array_equal",
   "sklearn.utils.testing.assert_equal",
   "sklearn_extra.cluster.KMedoids"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_kmedoids_input_validation_and_fit_check": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.utils.testing.assert_raise_message",
   "sklearn_extra.cluster.KMedoids"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_kmedoids_iris": {
  "lineno": 223,
  "symbols_in_volume": [
   "numpy.mean",
   "numpy.random.RandomState",
   "sklearn.cluster.KMeans",
   "sklearn.datasets.load_iris",
   "sklearn.metrics.pairwise.PAIRWISE_DISTANCE_FUNCTIONS",
   "sklearn.utils.testing.assert_allclose",
   "sklearn_extra.cluster.KMedoids"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_kmedoids_on_sparse_input": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "scipy.sparse.csc_matrix",
   "sklearn.utils.testing.assert_array_equal",
   "sklearn.utils.testing.assert_equal",
   "sklearn_extra.cluster.KMedoids"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_kmedoids_pp": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.random.RandomState",
   "sklearn.metrics.pairwise.euclidean_distances",
   "sklearn_extra.cluster.KMedoids"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_kpp_called": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.RandomState",
   "sklearn_extra.cluster.KMedoids",
   "unittest.mock.patch.object"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_max_iter": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.datasets.load_iris",
   "sklearn.utils.testing.assert_warns_message",
   "sklearn_extra.cluster.KMedoids"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_outlier_robustness": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.cluster.KMeans",
   "sklearn.utils.testing.assert_array_equal",
   "sklearn_extra.cluster.KMedoids"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_precomputed": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.metrics.pairwise.euclidean_distances",
   "sklearn.utils.testing.assert_allclose",
   "sklearn.utils.testing.assert_array_equal",
   "sklearn_extra.cluster.KMedoids"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_random_deterministic": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.random.RandomState",
   "sklearn.datasets.load_iris",
   "sklearn.metrics.pairwise.euclidean_distances",
   "sklearn.utils.testing.assert_array_equal",
   "sklearn_extra.cluster.KMedoids"
  ],
  "type": "function"
 },
 "sklearn_extra.cluster.tests.test_k_medoids.test_update_medoid_idxs_empty_cluster": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros",
   "sklearn.utils.testing.assert_array_equal",
   "sklearn_extra.cluster.KMedoids",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn_extra.kernel_approximation._fastfood": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn_extra.kernel_approximation._fastfood.Fastfood": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "sklearn_extra.kernel_approximation._fastfood.Fastfood.__init__": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation._fastfood.Fastfood._apply_approximate_gaussian_matrix": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.multiply",
   "numpy.ravel",
   "numpy.take"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation._fastfood.Fastfood._approx_fourier_transformation_multi_dim": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation._fastfood.Fastfood._enforce_dimensionality_constraints": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.floor",
   "numpy.log2",
   "numpy.power"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation._fastfood.Fastfood._is_number_power_of_two": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation._fastfood.Fastfood._l2norm_along_axis1": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.einsum",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation._fastfood.Fastfood._pad_with_zeros": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.pad",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation._fastfood.Fastfood._phi": {
  "lineno": 143,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.hstack",
   "numpy.sin",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation._fastfood.Fastfood._scale_transformed_data": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.multiply",
   "numpy.ravel",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation._fastfood.Fastfood._uniform_vector": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.pi"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation._fastfood.Fastfood.fit": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.hstack",
   "numpy.multiply",
   "scipy.stats.chi.rvs",
   "sklearn.utils.check_array",
   "sklearn.utils.check_random_state"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation._fastfood.Fastfood.transform": {
  "lineno": 206,
  "symbols_in_volume": [
   "numpy.float64",
   "sklearn.utils.check_array"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation.test_fastfood": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.newaxis",
   "numpy.random.RandomState"
  ],
  "type": "module"
 },
 "sklearn_extra.kernel_approximation.test_fastfood.test_fastfood": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sqrt",
   "sklearn.metrics.pairwise.rbf_kernel",
   "sklearn.utils.testing.assert_array_almost_equal",
   "sklearn_extra.kernel_approximation.Fastfood"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation.test_fastfood.test_fastfood_enforce_dimensionality_constraint": {
  "lineno": 19,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils.testing.assert_equal",
   "sklearn_extra.kernel_approximation.Fastfood._enforce_dimensionality_constraints"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_approximation.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn_extra.kernel_methods": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn_extra.kernel_methods._eigenpro": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn_extra.kernel_methods._eigenpro.BaseEigenPro": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "sklearn_extra.kernel_methods._eigenpro.BaseEigenPro.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn_extra.kernel_methods._eigenpro.BaseEigenPro._get_tags": {
  "lineno": 396,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn_extra.kernel_methods._eigenpro.BaseEigenPro._initialize_params": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.int32",
   "numpy.reshape",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods._eigenpro.BaseEigenPro._kernel": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.float32",
   "numpy.maximum",
   "numpy.sqrt",
   "sklearn.metrics.pairwise.euclidean_distances",
   "sklearn.metrics.pairwise.pairwise_kernels"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods._eigenpro.BaseEigenPro._nystrom_svd": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.fliplr",
   "numpy.flipud",
   "numpy.float32",
   "numpy.float64",
   "numpy.maximum",
   "numpy.sqrt",
   "scipy.linalg.LinAlgError",
   "scipy.linalg.eigh"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods._eigenpro.BaseEigenPro._raw_fit": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.array_split",
   "numpy.dot",
   "numpy.float32",
   "numpy.zeros",
   "sklearn.utils.check_random_state",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods._eigenpro.BaseEigenPro._raw_predict": {
  "lineno": 359,
  "symbols_in_volume": [
   "numpy.array_split",
   "numpy.asarray",
   "numpy.dot",
   "numpy.float64",
   "numpy.reshape",
   "numpy.vstack",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods._eigenpro.BaseEigenPro._setup": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.max",
   "numpy.power",
   "numpy.sum"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods._eigenpro.BaseEigenPro.validate_parameters": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn_extra.kernel_methods._eigenpro.EigenProClassifier": {
  "lineno": 513,
  "symbols_in_volume": [
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "sklearn_extra.kernel_methods._eigenpro.EigenProClassifier.__init__": {
  "lineno": 594,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn_extra.kernel_methods._eigenpro.EigenProClassifier.fit": {
  "lineno": 620,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.unique",
   "numpy.zeros",
   "sklearn.utils.multiclass.check_classification_targets",
   "sklearn.utils.validation.check_X_y"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods._eigenpro.EigenProClassifier.predict": {
  "lineno": 657,
  "symbols_in_volume": [
   "numpy.argmax"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods._eigenpro.EigenProRegressor": {
  "lineno": 400,
  "symbols_in_volume": [
   "sklearn.base.RegressorMixin"
  ],
  "type": "class"
 },
 "sklearn_extra.kernel_methods._eigenpro.EigenProRegressor.__init__": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn_extra.kernel_methods._eigenpro.EigenProRegressor.fit": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn_extra.kernel_methods._eigenpro.EigenProRegressor.predict": {
  "lineno": 509,
  "symbols_in_volume": [],
  "type": "function"
 },
 "sklearn_extra.kernel_methods.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn_extra.kernel_methods.tests.test_eigenpro": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn_extra.kernel_methods.tests.test_eigenpro.gen_classification": {
  "lineno": 18,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods.tests.test_eigenpro.gen_regression": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.datasets.make_regression"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods.tests.test_eigenpro.test_classifier_accuracy": {
  "lineno": 157,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils.testing.assert_allclose",
   "sklearn_extra.kernel_methods.EigenProClassifier"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods.tests.test_eigenpro.test_eigenpro_classification_conflict_data": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.concatenate",
   "sklearn.datasets.make_classification",
   "sklearn_extra.kernel_methods.EigenProClassifier"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods.tests.test_eigenpro.test_eigenpro_classification_duplicate_data": {
  "lineno": 231,
  "symbols_in_volume": [
   "sklearn.datasets.make_classification",
   "sklearn.utils.testing.assert_allclose",
   "sklearn_extra.kernel_methods.EigenProClassifier"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods.tests.test_eigenpro.test_eigenpro_regression_conflict_data": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.reshape",
   "sklearn.datasets.make_regression",
   "sklearn_extra.kernel_methods.EigenProRegressor"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods.tests.test_eigenpro.test_eigenpro_regression_duplicate_data": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.concatenate",
   "sklearn.datasets.make_regression",
   "sklearn.utils.testing.assert_allclose",
   "sklearn_extra.kernel_methods.EigenProRegressor"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods.tests.test_eigenpro.test_parameter_validation": {
  "lineno": 24,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "sklearn_extra.kernel_methods.EigenProClassifier",
   "sklearn_extra.kernel_methods.EigenProRegressor"
  ],
  "type": "function"
 },
 "sklearn_extra.kernel_methods.tests.test_eigenpro.test_regressor_accuracy": {
  "lineno": 54,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "sklearn.utils.testing.assert_allclose",
   "sklearn_extra.kernel_methods.EigenProRegressor"
  ],
  "type": "function"
 },
 "sklearn_extra.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "sklearn_extra.tests.test_common": {
  "lineno": null,
  "symbols_in_volume": [
   "sklearn.utils.estimator_checks",
   "sklearn_extra.cluster.KMedoids",
   "sklearn_extra.kernel_approximation.Fastfood",
   "sklearn_extra.kernel_methods.EigenProClassifier",
   "sklearn_extra.kernel_methods.EigenProRegressor"
  ],
  "type": "module"
 },
 "sklearn_extra.tests.test_common.test_all_estimators": {
  "lineno": 13,
  "symbols_in_volume": [
   "pytest.mark.xfail",
   "sklearn.utils.estimator_checks.parametrize_with_checks",
   "sklearn_extra.kernel_methods.EigenProClassifier"
  ],
  "type": "function"
 }
}