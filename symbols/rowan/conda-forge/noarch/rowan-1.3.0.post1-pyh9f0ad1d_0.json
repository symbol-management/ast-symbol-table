{
 "rowan": {
  "data": {},
  "type": "module"
 },
 "rowan.__all__": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "rowan.__version__": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "rowan.calculus": {
  "data": {},
  "type": "module"
 },
 "rowan.calculus.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "rowan.calculus.derivative": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_promote_vec",
    "_validate_unit",
    "multiply",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "rowan.calculus.integrate": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "_promote_vec",
    "_validate_unit",
    "exp",
    "multiply",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "rowan.calculus.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "rowan.functions": {
  "data": {},
  "type": "module"
 },
 "rowan.functions._normalize_vec": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.linalg.norm",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "rowan.functions._promote_vec": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "numpy.concatenate",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "rowan.functions._validate_unit": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "ValueError",
    "rowan.functions.is_unit"
   ]
  },
  "type": "function"
 },
 "rowan.functions._vector_bisector": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.any",
    "numpy.array",
    "numpy.broadcast_arrays",
    "numpy.cross",
    "numpy.dot",
    "numpy.empty",
    "numpy.isclose",
    "numpy.logical_not",
    "numpy.sum",
    "numpy.where",
    "rowan.functions._normalize_vec"
   ]
  },
  "type": "function"
 },
 "rowan.functions.allclose": {
  "data": {
   "lineno": 1184,
   "symbols_in_volume": [
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "rowan.functions.conjugate": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "rowan.functions.divide": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "rowan.functions.inverse",
    "rowan.functions.multiply"
   ]
  },
  "type": "function"
 },
 "rowan.functions.equal": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "rowan.functions.exp": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.asarray",
    "numpy.cos",
    "numpy.empty",
    "numpy.exp",
    "numpy.isclose",
    "numpy.linalg.norm",
    "numpy.logical_not",
    "numpy.newaxis",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "rowan.functions.exp10": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "rowan.functions.expb"
   ]
  },
  "type": "function"
 },
 "rowan.functions.expb": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.log",
    "rowan.functions.exp"
   ]
  },
  "type": "function"
 },
 "rowan.functions.from_axis_angle": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.broadcast",
    "numpy.broadcast_to",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.newaxis",
    "numpy.sin",
    "rowan.functions._normalize_vec"
   ]
  },
  "type": "function"
 },
 "rowan.functions.from_euler": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "from_axis_angle",
    "len",
    "numpy.array",
    "numpy.broadcast_arrays",
    "numpy.broadcast_to",
    "rowan.functions.multiply",
    "rowan.functions.rotate",
    "set"
   ]
  },
  "type": "function"
 },
 "rowan.functions.from_matrix": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "ValueError",
    "numpy.allclose",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.linalg.det",
    "numpy.linalg.eigh",
    "numpy.newaxis",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "rowan.functions.from_mirror_plane": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "numpy.broadcast_arrays",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "rowan.functions.inverse": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "float",
    "norm",
    "numpy.any",
    "numpy.array",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "rowan.functions.is_unit": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "numpy.allclose",
    "rowan.functions.norm"
   ]
  },
  "type": "function"
 },
 "rowan.functions.isclose": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isclose"
   ]
  },
  "type": "function"
 },
 "rowan.functions.isfinite": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "rowan.functions.isinf": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isinf"
   ]
  },
  "type": "function"
 },
 "rowan.functions.isnan": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "rowan.functions.log": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "norm",
    "numpy.any",
    "numpy.arccos",
    "numpy.asarray",
    "numpy.empty",
    "numpy.inf",
    "numpy.isclose",
    "numpy.linalg.norm",
    "numpy.log",
    "numpy.logical_not",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "rowan.functions.log10": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.asarray",
    "rowan.functions.logb"
   ]
  },
  "type": "function"
 },
 "rowan.functions.logb": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.log",
    "rowan.functions.log"
   ]
  },
  "type": "function"
 },
 "rowan.functions.multiply": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.broadcast",
    "numpy.cross",
    "numpy.empty",
    "numpy.newaxis",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "rowan.functions.norm": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "rowan.functions.normalize": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.newaxis",
    "rowan.functions.norm"
   ]
  },
  "type": "function"
 },
 "rowan.functions.not_equal": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "rowan.functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "rowan.functions.power": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.array",
    "numpy.asarray",
    "numpy.broadcast",
    "numpy.broadcast_to",
    "numpy.empty",
    "numpy.logical_not",
    "numpy.newaxis",
    "rowan.functions.exp",
    "rowan.functions.log"
   ]
  },
  "type": "function"
 },
 "rowan.functions.reflect": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "numpy.asarray",
    "rowan.functions._promote_vec",
    "rowan.functions.multiply"
   ]
  },
  "type": "function"
 },
 "rowan.functions.rotate": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "numpy.asarray",
    "rowan.functions._promote_vec",
    "rowan.functions.conjugate",
    "rowan.functions.multiply"
   ]
  },
  "type": "function"
 },
 "rowan.functions.to_axis_angle": {
  "data": {
   "lineno": 1052,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.newaxis",
    "numpy.sin",
    "numpy.where",
    "rowan.functions._validate_unit"
   ]
  },
  "type": "function"
 },
 "rowan.functions.to_euler": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.arccos",
    "numpy.arcsin",
    "numpy.arctan2",
    "numpy.asarray",
    "numpy.clip",
    "numpy.cos",
    "numpy.isclose",
    "numpy.sin",
    "numpy.stack",
    "numpy.where",
    "rowan.functions._validate_unit",
    "to_matrix"
   ]
  },
  "type": "function"
 },
 "rowan.functions.to_matrix": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "ValueError",
    "ZeroDivisionError",
    "numpy.allclose",
    "numpy.any",
    "numpy.asarray",
    "numpy.empty",
    "rowan.functions.norm"
   ]
  },
  "type": "function"
 },
 "rowan.functions.vector_vector_rotation": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "from_axis_angle",
    "numpy.asarray",
    "numpy.pi",
    "rowan.functions._vector_bisector"
   ]
  },
  "type": "function"
 },
 "rowan.geometry": {
  "data": {},
  "type": "module"
 },
 "rowan.geometry.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "rowan.geometry.angle": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "_validate_unit",
    "log",
    "norm"
   ]
  },
  "type": "function"
 },
 "rowan.geometry.distance": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "norm",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "rowan.geometry.intrinsic_distance": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "norm",
    "rowan.geometry.riemann_log_map"
   ]
  },
  "type": "function"
 },
 "rowan.geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "rowan.geometry.riemann_exp_map": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "exp",
    "multiply"
   ]
  },
  "type": "function"
 },
 "rowan.geometry.riemann_log_map": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "inverse",
    "log",
    "multiply"
   ]
  },
  "type": "function"
 },
 "rowan.geometry.sym_distance": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "norm",
    "numpy.asarray",
    "numpy.minimum"
   ]
  },
  "type": "function"
 },
 "rowan.geometry.sym_intrinsic_distance": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "norm",
    "numpy.asarray",
    "numpy.where",
    "rowan.geometry.riemann_log_map"
   ]
  },
  "type": "function"
 },
 "rowan.interpolate": {
  "data": {},
  "type": "module"
 },
 "rowan.interpolate.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "rowan.interpolate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "rowan.interpolate.slerp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "_validate_unit",
    "conjugate",
    "multiply",
    "numpy.array",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.clip",
    "numpy.sum",
    "power"
   ]
  },
  "type": "function"
 },
 "rowan.interpolate.slerp_prime": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "_validate_unit",
    "conjugate",
    "log",
    "multiply",
    "numpy.array",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.clip",
    "numpy.sum",
    "power"
   ]
  },
  "type": "function"
 },
 "rowan.interpolate.squad": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "_validate_unit",
    "numpy.clip",
    "rowan.interpolate.slerp"
   ]
  },
  "type": "function"
 },
 "rowan.mapping": {
  "data": {},
  "type": "module"
 },
 "rowan.mapping.__all__": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "rowan.mapping.davenport": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.argmax",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.empty",
    "numpy.eye",
    "numpy.linalg.eig",
    "numpy.mean",
    "numpy.trace",
    "rotate"
   ]
  },
  "type": "function"
 },
 "rowan.mapping.horn": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.argmax",
    "numpy.atleast_2d",
    "numpy.empty",
    "numpy.linalg.eig",
    "numpy.matmul",
    "numpy.mean",
    "numpy.sum",
    "rotate"
   ]
  },
  "type": "function"
 },
 "rowan.mapping.icp": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "ValueError",
    "__name__",
    "getattr",
    "len",
    "method",
    "numpy.abs",
    "numpy.argsort",
    "numpy.atleast_2d",
    "numpy.copy",
    "numpy.dot",
    "numpy.mean",
    "range",
    "rotate",
    "rowan.mapping.davenport",
    "rowan.mapping.kabsch",
    "rowan.mapping.sys",
    "scipy.optimize.linear_sum_assignment",
    "scipy.spatial.distance.cdist",
    "sklearn.neighbors.NearestNeighbors",
    "to_matrix"
   ]
  },
  "type": "function"
 },
 "rowan.mapping.kabsch": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.linalg.det",
    "numpy.linalg.svd",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "rowan.mapping.neighbors": {
  "data": {
   "shadows": "sklearn.neighbors"
  },
  "type": "import"
 },
 "rowan.mapping.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "rowan.mapping.optimize": {
  "data": {
   "shadows": "scipy.optimize"
  },
  "type": "import"
 },
 "rowan.mapping.procrustes": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "__name__",
    "angle",
    "from_matrix",
    "getattr",
    "len",
    "method",
    "method.__name__",
    "numpy.argmin",
    "numpy.atleast_2d",
    "rotate",
    "rowan.mapping.davenport",
    "rowan.mapping.kabsch",
    "rowan.mapping.sys"
   ]
  },
  "type": "function"
 },
 "rowan.mapping.spatial": {
  "data": {
   "shadows": "scipy.spatial"
  },
  "type": "import"
 },
 "rowan.mapping.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "rowan.random": {
  "data": {},
  "type": "module"
 },
 "rowan.random.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "rowan.random.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "rowan.random.rand": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "random_sample"
   ]
  },
  "type": "function"
 },
 "rowan.random.random_sample": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.pi",
    "numpy.random.random_sample",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.stack"
   ]
  },
  "type": "function"
 }
}