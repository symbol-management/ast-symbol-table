{
 "frosted": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "frosted.api": {
  "lineno": null,
  "symbols_in_volume": [
   "re.I",
   "re.compile"
  ],
  "type": "module"
 },
 "frosted.api._noqa_lines": {
  "lineno": 38,
  "symbols_in_volume": [
   "io.StringIO",
   "token.N_TOKENS",
   "tokenize.generate_tokens"
  ],
  "type": "function"
 },
 "frosted.api._should_skip": {
  "lineno": 51,
  "symbols_in_volume": [
   "os.path.split"
  ],
  "type": "function"
 },
 "frosted.api.check": {
  "lineno": 62,
  "symbols_in_volume": [
   "_ast.PyCF_ONLY_AST",
   "frosted.checker.Checker",
   "frosted.messages.FileSkipped",
   "frosted.messages.PythonSyntaxError",
   "frosted.reporter.Default",
   "frosted.reporter.flake",
   "frosted.reporter.unexpected_error",
   "frosted.settings.from_path",
   "os.getcwd",
   "os.path.abspath",
   "os.path.dirname",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "frosted.api.check_path": {
  "lineno": 121,
  "symbols_in_volume": [
   "frosted.reporter",
   "frosted.reporter.Default",
   "frosted.reporter.unexpected_error",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "frosted.api.check_recursive": {
  "lineno": 148,
  "symbols_in_volume": [
   "frosted.reporter",
   "frosted.reporter.Default"
  ],
  "type": "function"
 },
 "frosted.api.iter_source_code": {
  "lineno": 136,
  "symbols_in_volume": [
   "os.path.isdir",
   "os.path.join",
   "os.walk"
  ],
  "type": "function"
 },
 "frosted.checker": {
  "lineno": null,
  "symbols_in_volume": [
   "builtins",
   "os.environ.get",
   "sys.version_info"
  ],
  "type": "module"
 },
 "frosted.checker.Argument": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.checker.Assignment": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.checker.Binding": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.checker.Binding.__init__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Binding.__repr__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Binding.__str__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker": {
  "lineno": 237,
  "symbols_in_volume": [
   "doctest.DocTestParser"
  ],
  "type": "class"
 },
 "frosted.checker.Checker.ASSIGN": {
  "lineno": 842,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.AUGASSIGN": {
  "lineno": 847,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.CALL": {
  "lineno": 718,
  "symbols_in_volume": [
   "pies.ast.Name"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.CLASSDEF": {
  "lineno": 820,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.DICTCOMP": {
  "lineno": 668,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.EXCEPTHANDLER": {
  "lineno": 898,
  "symbols_in_volume": [
   "frosted.messages.BareExcept"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.FOR": {
  "lineno": 676,
  "symbols_in_volume": [
   "frosted.messages.ImportShadowedByLoopVar"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.FOR.collectLoopVars": {
  "lineno": 680,
  "symbols_in_volume": [
   "pies.ast.Name",
   "pies.ast.expr_context",
   "pies.ast.iter_child_nodes"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.FUNCTIONDEF": {
  "lineno": 731,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.GENERATOREXP": {
  "lineno": 658,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.GLOBAL": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.IMPORT": {
  "lineno": 852,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.IMPORTFROM": {
  "lineno": 858,
  "symbols_in_volume": [
   "frosted.messages.ImportStarUsed",
   "frosted.messages.LateFutureImport"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.LAMBDA": {
  "lineno": 739,
  "symbols_in_volume": [
   "frosted.messages.DuplicateArgument"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.LAMBDA.addArgs": {
  "lineno": 744,
  "symbols_in_volume": [
   "frosted.messages.DuplicateArgument",
   "pies.ast.Tuple"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.LAMBDA.runFunction": {
  "lineno": 788,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.LAMBDA.runFunction.checkReturnWithArgumentInsideGenerator": {
  "lineno": 808,
  "symbols_in_volume": [
   "frosted.messages.ReturnWithArgsInsideGenerator"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.LAMBDA.runFunction.checkUnusedAssignments": {
  "lineno": 801,
  "symbols_in_volume": [
   "frosted.messages.UnusedVariable"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.LISTCOMP": {
  "lineno": 652,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.NAME": {
  "lineno": 699,
  "symbols_in_volume": [
   "pies.ast.AugLoad",
   "pies.ast.AugStore",
   "pies.ast.Call",
   "pies.ast.Del",
   "pies.ast.Load",
   "pies.ast.Store"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.TRY": {
  "lineno": 877,
  "symbols_in_volume": [
   "pies.ast.Tuple",
   "pies.ast.iter_child_nodes"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.__init__": {
  "lineno": 245,
  "symbols_in_volume": [
   "builtins",
   "os.path.basename"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.add_binding": {
  "lineno": 390,
  "symbols_in_volume": [
   "frosted.messages.RedefinedInListComp",
   "frosted.messages.RedefinedWhileUnused",
   "pies.ast.For",
   "pies.ast.ListComp"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.check_dead_scopes": {
  "lineno": 303,
  "symbols_in_volume": [
   "frosted.messages.UndefinedExport",
   "frosted.messages.UnusedImport",
   "os.path.basename"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.defer_assignment": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.defer_function": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.descendant_of": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.different_forks": {
  "lineno": 372,
  "symbols_in_volume": [
   "pies.ast.If",
   "pies.ast.Try",
   "pies.ast.TryFinally"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.docstring": {
  "lineno": 528,
  "symbols_in_volume": [
   "pies.ast.Expr",
   "pies.ast.Str"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.find_return_with_argument": {
  "lineno": 588,
  "symbols_in_volume": [
   "pies.ast.FunctionDef",
   "pies.ast.Return"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.get_common_ancestor": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.get_node_handler": {
  "lineno": 430,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.handleNode": {
  "lineno": 537,
  "symbols_in_volume": [
   "pies.ast.ImportFrom"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.handle_children": {
  "lineno": 518,
  "symbols_in_volume": [
   "pies.ast.iter_child_nodes"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.handle_doctests": {
  "lineno": 561,
  "symbols_in_volume": [
   "frosted.messages.DoctestSyntaxError",
   "pies.ast.PyCF_ONLY_AST",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.handle_node_delete": {
  "lineno": 506,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.handle_node_load": {
  "lineno": 448,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName",
   "os.path.basename"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.handle_node_store": {
  "lineno": 474,
  "symbols_in_volume": [
   "frosted.messages.UndefinedLocal",
   "pies.ast.For",
   "pies.ast.List",
   "pies.ast.Tuple",
   "pies.ast.comprehension"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.has_parent": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.ignore": {
  "lineno": 618,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.is_docstring": {
  "lineno": 522,
  "symbols_in_volume": [
   "pies.ast.Expr",
   "pies.ast.Str"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.is_generator": {
  "lineno": 603,
  "symbols_in_volume": [
   "pies.ast.Assign",
   "pies.ast.Expr",
   "pies.ast.FunctionDef",
   "pies.ast.Yield"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.iter_visible_scopes": {
  "lineno": 438,
  "symbols_in_volume": [
   "itertools.islice"
  ],
  "type": "function"
 },
 "frosted.checker.Checker.on_fork": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.pop_scope": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.push_class_scope": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.push_function_scope": {
  "lineno": 326,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.push_scope": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.report": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.run_deferred": {
  "lineno": 289,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.Checker.scope": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.ClassDefinition": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.checker.ClassScope": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.checker.Definition": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.checker.ExportBinding": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.checker.ExportBinding.names": {
  "lineno": 127,
  "symbols_in_volume": [
   "pies.ast.List",
   "pies.ast.Str"
  ],
  "type": "function"
 },
 "frosted.checker.FunctionDefinition": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.checker.FunctionDefinition.__init__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.FunctionScope": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.checker.FunctionScope.__init__": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.FunctionScope.unusedAssignments": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.FunctionSignature": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.checker.FunctionSignature.__init__": {
  "lineno": 179,
  "symbols_in_volume": [
   "pies.ast.argument_names",
   "pies.ast.kw_only_argument_names",
   "pies.ast.kw_only_default_count"
  ],
  "type": "function"
 },
 "frosted.checker.FunctionSignature.checkCall": {
  "lineno": 194,
  "symbols_in_volume": [
   "frosted.messages.MultipleValuesForArgument",
   "frosted.messages.NeedKwOnlyArgument",
   "frosted.messages.TooFewArguments",
   "frosted.messages.TooManyArguments",
   "frosted.messages.UnexpectedArgument"
  ],
  "type": "function"
 },
 "frosted.checker.FunctionSignature.maxArgumentCount": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.FunctionSignature.min_argument_count": {
  "lineno": 188,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.GeneratorScope": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.checker.Importation": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.checker.Importation.__init__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.ModuleScope": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.checker.Scope": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.checker.Scope.__repr__": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.checker.node_name": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.main": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "frosted.main.main": {
  "lineno": 16,
  "symbols_in_volume": [
   "argparse.ArgumentParser",
   "frosted.__version__",
   "frosted.api.check",
   "frosted.api.check_path",
   "frosted.api.check_recursive",
   "sys.stdin.read"
  ],
  "type": "function"
 },
 "frosted.messages": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "frosted.messages.MessageType": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.messages.MessageType.Message": {
  "lineno": 36,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "frosted.messages.MessageType.Message.__str__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.messages.MessageType.__call__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.messages.MessageType.__new__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.messages.OffsetMessageType": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.messages.OffsetMessageType.__call__": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.messages.SyntaxErrorType": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "frosted.messages.SyntaxErrorType.__call__": {
  "lineno": 75,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "frosted.reporter": {
  "lineno": null,
  "symbols_in_volume": [
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "module"
 },
 "frosted.reporter.Reporter": {
  "lineno": 27,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "frosted.reporter.Reporter.flake": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.reporter.Reporter.unexpected_error": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.settings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "frosted.settings._get_config_data": {
  "lineno": 96,
  "symbols_in_volume": [
   "ConfigParser.SafeConfigParser",
   "pies.functools.lru_cache"
  ],
  "type": "function"
 },
 "frosted.settings._update_settings_with_config": {
  "lineno": 56,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.expanduser",
   "os.path.join",
   "os.path.split"
  ],
  "type": "function"
 },
 "frosted.settings._update_with_config_file": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.settings.from_path": {
  "lineno": 47,
  "symbols_in_volume": [
   "pies.functools.lru_cache"
  ],
  "type": "function"
 },
 "frosted.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "frosted.test.test_api": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "frosted.test.test_api.assert_contains_output": {
  "lineno": 108,
  "symbols_in_volume": [
   "frosted.api.check_path",
   "frosted.reporter.Reporter",
   "io.StringIO"
  ],
  "type": "function"
 },
 "frosted.test.test_api.get_errors": {
  "lineno": 118,
  "symbols_in_volume": [
   "frosted.api.check_path"
  ],
  "type": "function"
 },
 "frosted.test.test_api.make_temp_file": {
  "lineno": 97,
  "symbols_in_volume": [
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "frosted.test.test_api.test_check_pathNonExisting": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_api.test_check_recursive": {
  "lineno": 285,
  "symbols_in_volume": [
   "frosted.api.check_recursive",
   "frosted.messages.UnusedImport",
   "os.mkdir",
   "os.path.join",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "frosted.test.test_api.test_eofSyntaxError": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_api.test_flake": {
  "lineno": 84,
  "symbols_in_volume": [
   "frosted.messages.UnusedImport",
   "frosted.reporter.Reporter",
   "io.StringIO"
  ],
  "type": "function"
 },
 "frosted.test.test_api.test_frostedWarning": {
  "lineno": 254,
  "symbols_in_volume": [
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_api.test_invalidEscape": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_api.test_misencodedFileUTF16": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_api.test_misencodedFileUTF8": {
  "lineno": 262,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_api.test_missingTrailingNewline": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_api.test_multiLineSyntaxError": {
  "lineno": 61,
  "symbols_in_volume": [
   "frosted.messages.PythonSyntaxError",
   "frosted.reporter.Reporter",
   "io.StringIO"
  ],
  "type": "function"
 },
 "frosted.test.test_api.test_multilineSyntaxError": {
  "lineno": 143,
  "symbols_in_volume": [
   "sys.exc_info"
  ],
  "type": "function"
 },
 "frosted.test.test_api.test_multilineSyntaxError.evaluate": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_api.test_nonDefaultFollowsDefaultSyntaxError": {
  "lineno": 195,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "frosted.test.test_api.test_nonKeywordAfterKeywordSyntaxError": {
  "lineno": 215,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "frosted.test.test_api.test_permissionDenied": {
  "lineno": 245,
  "symbols_in_volume": [
   "os.chmod"
  ],
  "type": "function"
 },
 "frosted.test.test_api.test_syntax_error": {
  "lineno": 37,
  "symbols_in_volume": [
   "frosted.messages.PythonSyntaxError",
   "frosted.reporter.Reporter",
   "io.StringIO"
  ],
  "type": "function"
 },
 "frosted.test.test_api.test_syntax_errorNoOffset": {
  "lineno": 52,
  "symbols_in_volume": [
   "frosted.messages.PythonSyntaxError",
   "frosted.reporter.Reporter",
   "io.StringIO"
  ],
  "type": "function"
 },
 "frosted.test.test_api.test_unexpected_error": {
  "lineno": 76,
  "symbols_in_volume": [
   "frosted.reporter.Reporter",
   "io.StringIO"
  ],
  "type": "function"
 },
 "frosted.test.test_doctests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "frosted.test.test_doctests.doctestify": {
  "lineno": 13,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "frosted.test.test_doctests.test_doctestCanReferToClass": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_doctests.test_doctestCanReferToFunction": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_doctests.test_doubleNestingReportsClosestName": {
  "lineno": 37,
  "symbols_in_volume": [
   "frosted.messages.UndefinedLocal"
  ],
  "type": "function"
 },
 "frosted.test.test_doctests.test_ignoreErrorsByDefault": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_doctests.test_importBeforeAndInDoctest": {
  "lineno": 70,
  "symbols_in_volume": [
   "frosted.messages.Redefined",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_doctests.test_importBeforeDoctest": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_doctests.test_importInDoctestAndAfter": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_doctests.test_indentationErrorInDoctest": {
  "lineno": 169,
  "symbols_in_volume": [
   "frosted.messages.DoctestSyntaxError"
  ],
  "type": "function"
 },
 "frosted.test.test_doctests.test_noOffsetSyntaxErrorInDoctest": {
  "lineno": 222,
  "symbols_in_volume": [
   "frosted.messages.DoctestSyntaxError"
  ],
  "type": "function"
 },
 "frosted.test.test_doctests.test_offsetAfterDoctests": {
  "lineno": 134,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_doctests.test_offsetInDoctests": {
  "lineno": 98,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_doctests.test_offsetInLambdasInDoctests": {
  "lineno": 121,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_doctests.test_offsetWithMultiLineArgs": {
  "lineno": 181,
  "symbols_in_volume": [
   "frosted.messages.DoctestSyntaxError",
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_doctests.test_syntax_errorInDoctest": {
  "lineno": 149,
  "symbols_in_volume": [
   "frosted.messages.DoctestSyntaxError"
  ],
  "type": "function"
 },
 "frosted.test.test_function_calls": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "frosted.test.test_function_calls.test_compoundArguments": {
  "lineno": 155,
  "symbols_in_volume": [
   "frosted.messages.TooFewArguments",
   "frosted.messages.TooManyArguments",
   "frosted.messages.UnexpectedArgument"
  ],
  "type": "function"
 },
 "frosted.test.test_function_calls.test_kwOnlyArguments": {
  "lineno": 118,
  "symbols_in_volume": [
   "frosted.messages.NeedKwOnlyArgument"
  ],
  "type": "function"
 },
 "frosted.test.test_function_calls.test_multipleValuesForArgument": {
  "lineno": 81,
  "symbols_in_volume": [
   "frosted.messages.MultipleValuesForArgument"
  ],
  "type": "function"
 },
 "frosted.test.test_function_calls.test_noCheckDecorators": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_function_calls.test_ok": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_function_calls.test_tooFewArguments": {
  "lineno": 89,
  "symbols_in_volume": [
   "frosted.messages.TooFewArguments"
  ],
  "type": "function"
 },
 "frosted.test.test_function_calls.test_tooFewArgumentsVarArgs": {
  "lineno": 109,
  "symbols_in_volume": [
   "frosted.messages.TooFewArguments"
  ],
  "type": "function"
 },
 "frosted.test.test_function_calls.test_tooManyArguments": {
  "lineno": 40,
  "symbols_in_volume": [
   "frosted.messages.TooManyArguments"
  ],
  "type": "function"
 },
 "frosted.test.test_function_calls.test_tooManyArgumentsVarargs": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_function_calls.test_unexpectedArgument": {
  "lineno": 61,
  "symbols_in_volume": [
   "frosted.messages.UnexpectedArgument"
  ],
  "type": "function"
 },
 "frosted.test.test_imports": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "frosted.test.test_imports.test_aliasedImport": {
  "lineno": 19,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused",
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_assignRHSFirst": {
  "lineno": 618,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_differentSubmoduleImport": {
  "lineno": 601,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_duplicateSubmoduleImport": {
  "lineno": 584,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_functionNamesAreBoundNow": {
  "lineno": 653,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_functionsRunLater": {
  "lineno": 645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_futureImport": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_futureImportFirst": {
  "lineno": 696,
  "symbols_in_volume": [
   "frosted.messages.LateFutureImport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_ignoreNonImportRedefinitions": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_ignoredInClass": {
  "lineno": 718,
  "symbols_in_volume": [
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_ignoredInFunction": {
  "lineno": 709,
  "symbols_in_volume": [
   "frosted.messages.UnusedImport",
   "frosted.messages.UnusedVariable"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_importStar": {
  "lineno": 567,
  "symbols_in_volume": [
   "frosted.messages.ImportStarUsed"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_importStarExported": {
  "lineno": 761,
  "symbols_in_volume": [
   "frosted.messages.ImportStarUsed"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_importedInClass": {
  "lineno": 676,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_importingForImportError": {
  "lineno": 666,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_methodsDontUseClassScope": {
  "lineno": 539,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName",
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_nestedClassAndFunctionScope": {
  "lineno": 557,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_nestedFunctionsNestScope": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_newAssignment": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_nonGlobalDoesNotRedefine": {
  "lineno": 635,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_notUsedInNestedScope": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_packageImport": {
  "lineno": 571,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedByClass": {
  "lineno": 177,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedByExcept": {
  "lineno": 413,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused",
   "sys.version_info"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedByFor": {
  "lineno": 321,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedByFunction": {
  "lineno": 158,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedByGenExp": {
  "lineno": 775,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused",
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedByListComp": {
  "lineno": 468,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedBySubclass": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedIf": {
  "lineno": 38,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedIfElse": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedInClass": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedInNestedFunction": {
  "lineno": 166,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused",
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTry": {
  "lineno": 59,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTryElse": {
  "lineno": 106,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTryExcept": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTryExceptElse": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTryExceptElseFinally": {
  "lineno": 143,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTryExceptFinally": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTryExceptMulti": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTryNested": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedWhileUnused": {
  "lineno": 32,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_shadowedByFor": {
  "lineno": 329,
  "symbols_in_volume": [
   "frosted.messages.ImportShadowedByLoopVar"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_shadowedByForDeep": {
  "lineno": 339,
  "symbols_in_volume": [
   "frosted.messages.ImportShadowedByLoopVar"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_shadowedByLambda": {
  "lineno": 523,
  "symbols_in_volume": [
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_shadowedByParameter": {
  "lineno": 216,
  "symbols_in_volume": [
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_tryingMultipleImports": {
  "lineno": 625,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_unboundExported": {
  "lineno": 747,
  "symbols_in_volume": [
   "frosted.messages.UndefinedExport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_unrecognizable": {
  "lineno": 735,
  "symbols_in_volume": [
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_unusedImport": {
  "lineno": 14,
  "symbols_in_volume": [
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_unusedInNestedScope": {
  "lineno": 531,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName",
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_unusedPackageImport": {
  "lineno": 579,
  "symbols_in_volume": [
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedAsClassDecorator": {
  "lineno": 812,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedAsDecorator": {
  "lineno": 784,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedImport": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInAssert": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInAssignment": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInAttributeAssign": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInBackquote": {
  "lineno": 506,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInCall": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInClass": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInClassBase": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInDict": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInElifConditional": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInElse": {
  "lineno": 266,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInExcept": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInExec": {
  "lineno": 511,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInFor": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInForElse": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInFunction": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInGenExp": {
  "lineno": 769,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInGetattr": {
  "lineno": 235,
  "symbols_in_volume": [
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInGlobal": {
  "lineno": 499,
  "symbols_in_volume": [
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInIfBody": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInIfConditional": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInKeywordArg": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInLambda": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInList": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInListComp": {
  "lineno": 463,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInLogic": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInOperators": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInParameterDefault": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInRaise": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInReturn": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInSlice": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInSliceObj": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInSubscript": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInTry": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInTryFinally": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInTuple": {
  "lineno": 393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInWhile": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInYield": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_imports.test_warningSuppressed": {
  "lineno": 727,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_noqa": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "frosted.test.test_noqa.test_check_integration": {
  "lineno": 34,
  "symbols_in_volume": [
   "frosted.api.check"
  ],
  "type": "function"
 },
 "frosted.test.test_noqa.test_checker_ignore_lines": {
  "lineno": 21,
  "symbols_in_volume": [
   "frosted.messages.ImportStarUsed"
  ],
  "type": "function"
 },
 "frosted.test.test_noqa.test_noqa_lines": {
  "lineno": 28,
  "symbols_in_volume": [
   "frosted.api._noqa_lines"
  ],
  "type": "function"
 },
 "frosted.test.test_noqa.test_regex": {
  "lineno": 8,
  "symbols_in_volume": [
   "frosted.api._re_noqa.search"
  ],
  "type": "function"
 },
 "frosted.test.test_other": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "frosted.test.test_other.test_access_debug": {
  "lineno": 880,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_assignInForLoop": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_assignInListComprehension": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_assignToGlobal": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_assignToMember": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_assignToNonlocal": {
  "lineno": 477,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_assignmentInsideLoop": {
  "lineno": 535,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_attrAugmentedAssignment": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_augmentedAssignmentImportedFunctionCall": {
  "lineno": 850,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_bareExcept": {
  "lineno": 868,
  "symbols_in_volume": [
   "frosted.messages.BareExcept"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_classFunctionDecorator": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_classNameDefinedPreviously": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_classNameUndefinedInClassBody": {
  "lineno": 268,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_classRedefinedAsFunction": {
  "lineno": 312,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_classRedefinition": {
  "lineno": 292,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_closedOver": {
  "lineno": 568,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_comparison": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_containment": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_dictComprehension": {
  "lineno": 791,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_doubleAssignment": {
  "lineno": 322,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_doubleAssignmentConditionally": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_doubleAssignmentWithUse": {
  "lineno": 340,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_doubleClosedOver": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_duplicateArgs": {
  "lineno": 15,
  "symbols_in_volume": [
   "frosted.messages.DuplicateArgument"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_ellipsis": {
  "lineno": 395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_exceptWithoutNameInFunction": {
  "lineno": 822,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_exceptWithoutNameInFunctionTuple": {
  "lineno": 836,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_exceptionUsedInExcept": {
  "lineno": 808,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_extendedSlice": {
  "lineno": 402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_functionDecorator": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_functionRedefinedAsClass": {
  "lineno": 302,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_generatorExpression": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_identity": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_ifexp": {
  "lineno": 601,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_listUnpacking": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_localReferencedBeforeAssignment": {
  "lineno": 19,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_loopControl": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_modernProperty": {
  "lineno": 239,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedClassFunction": {
  "lineno": 147,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedElseInListComp": {
  "lineno": 206,
  "symbols_in_volume": [
   "frosted.messages.RedefinedInListComp"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedFunction": {
  "lineno": 139,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedIfElseFunction": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedIfElseInListComp": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedIfFunction": {
  "lineno": 166,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedInDictComprehension": {
  "lineno": 111,
  "symbols_in_volume": [
   "frosted.messages.UnusedVariable",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedInGenerator": {
  "lineno": 56,
  "symbols_in_volume": [
   "frosted.messages.UnusedVariable"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedInListComp": {
  "lineno": 29,
  "symbols_in_volume": [
   "frosted.messages.RedefinedInListComp"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedInSetComprehension": {
  "lineno": 83,
  "symbols_in_volume": [
   "frosted.messages.UnusedVariable",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedTryExceptFunction": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedTryFunction": {
  "lineno": 185,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_setComprehensionAndLiteral": {
  "lineno": 799,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_tracebackhideSpecialVariable": {
  "lineno": 592,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_tupleUnpacking": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_unaryPlus": {
  "lineno": 255,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_undefinedBaseClass": {
  "lineno": 260,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_unusedVariable": {
  "lineno": 434,
  "symbols_in_volume": [
   "frosted.messages.UnusedVariable"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_unusedVariableAsLocals": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_unusedVariableNoLocals": {
  "lineno": 451,
  "symbols_in_volume": [
   "frosted.messages.UnusedVariable"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_varAugmentedAssignment": {
  "lineno": 410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementAttributeName": {
  "lineno": 629,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementComplicatedTarget": {
  "lineno": 687,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementListNames": {
  "lineno": 673,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementNameDefinedInBody": {
  "lineno": 766,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementNoNames": {
  "lineno": 608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementSingleName": {
  "lineno": 619,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementSingleNameRedefined": {
  "lineno": 727,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementSingleNameUndefined": {
  "lineno": 704,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementSubscript": {
  "lineno": 639,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementSubscriptUndefined": {
  "lineno": 649,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementTupleNames": {
  "lineno": 659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementTupleNamesRedefined": {
  "lineno": 740,
  "symbols_in_volume": [
   "frosted.messages.RedefinedWhileUnused"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementTupleNamesUndefined": {
  "lineno": 714,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementUndefinedInExpression": {
  "lineno": 776,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementUndefinedInside": {
  "lineno": 754,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_other.test_yieldFromUndefined": {
  "lineno": 859,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_return_with_arguments_inside_generator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "frosted.test.test_return_with_arguments_inside_generator.test_no_false_positives_for_return_inside_generator": {
  "lineno": 63,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_return_with_arguments_inside_generator.test_return": {
  "lineno": 13,
  "symbols_in_volume": [
   "frosted.messages.ReturnWithArgsInsideGenerator",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_return_with_arguments_inside_generator.test_returnNone": {
  "lineno": 25,
  "symbols_in_volume": [
   "frosted.messages.ReturnWithArgsInsideGenerator",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_return_with_arguments_inside_generator.test_returnYieldExpression": {
  "lineno": 34,
  "symbols_in_volume": [
   "frosted.messages.ReturnWithArgsInsideGenerator",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_return_with_arguments_inside_generator.test_return_with_args_inside_generator_not_duplicated": {
  "lineno": 43,
  "symbols_in_volume": [
   "frosted.messages.ReturnWithArgsInsideGenerator",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_script": {
  "lineno": null,
  "symbols_in_volume": [
   "frosted.__file__",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "module"
 },
 "frosted.test.test_script.make_empty_file": {
  "lineno": 50,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "frosted.test.test_script.run_frosted": {
  "lineno": 103,
  "symbols_in_volume": [
   "os.environ",
   "os.pathsep.join",
   "subprocess.PIPE",
   "subprocess.Popen",
   "sys.executable",
   "sys.path"
  ],
  "type": "function"
 },
 "frosted.test.test_script.setup_function": {
  "lineno": 41,
  "symbols_in_volume": [
   "os.path.join",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "frosted.test.test_script.teardown_function": {
  "lineno": 46,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "frosted.test.test_script.test_emptyDirectory": {
  "lineno": 58,
  "symbols_in_volume": [
   "frosted.api.iter_source_code"
  ],
  "type": "function"
 },
 "frosted.test.test_script.test_errors": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_script.test_explicitFiles": {
  "lineno": 96,
  "symbols_in_volume": [
   "frosted.api.iter_source_code"
  ],
  "type": "function"
 },
 "frosted.test.test_script.test_fileWithFlakes": {
  "lineno": 135,
  "symbols_in_volume": [
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_script.test_goodFile": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_script.test_multipleDirectories": {
  "lineno": 85,
  "symbols_in_volume": [
   "frosted.api.iter_source_code",
   "os.mkdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "frosted.test.test_script.test_non_unicode_slash_u": {
  "lineno": 149,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_script.test_onlyPythonSource": {
  "lineno": 69,
  "symbols_in_volume": [
   "frosted.api.iter_source_code"
  ],
  "type": "function"
 },
 "frosted.test.test_script.test_print_statement_python2": {
  "lineno": 178,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_script.test_readFromStdin": {
  "lineno": 170,
  "symbols_in_volume": [
   "frosted.messages.UnusedImport"
  ],
  "type": "function"
 },
 "frosted.test.test_script.test_recurses": {
  "lineno": 75,
  "symbols_in_volume": [
   "frosted.api.iter_source_code",
   "os.mkdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "frosted.test.test_script.test_singleFile": {
  "lineno": 63,
  "symbols_in_volume": [
   "frosted.api.iter_source_code"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "frosted.test.test_undefined_names.test_annotationUndefined": {
  "lineno": 316,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_badNestedClass": {
  "lineno": 255,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_builtinWindowsError": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_builtins": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_definedAsStarArgs": {
  "lineno": 267,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_definedAsStarUnpack": {
  "lineno": 275,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_definedByGlobal": {
  "lineno": 94,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_definedInClass": {
  "lineno": 380,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_definedInGenExp": {
  "lineno": 340,
  "symbols_in_volume": [
   "sys.version_info"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_definedInListComp": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_del": {
  "lineno": 112,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_delGlobal": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_delUndefined": {
  "lineno": 128,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_doubleNestingReportsClosestName": {
  "lineno": 187,
  "symbols_in_volume": [
   "frosted.messages.UndefinedLocal"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_functionsNeedGlobalScope": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_globalFromNestedScope": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_globalImportStar": {
  "lineno": 71,
  "symbols_in_volume": [
   "frosted.messages.ImportStarUsed"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_globalInGlobalScope": {
  "lineno": 103,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_impossibleContext": {
  "lineno": 401,
  "symbols_in_volume": [
   "_ast.PyCF_ONLY_AST",
   "frosted.checker.Checker",
   "pytest.raises"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_intermediateClassScopeIgnored": {
  "lineno": 170,
  "symbols_in_volume": [
   "frosted.messages.UndefinedLocal"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_keywordOnlyArgs": {
  "lineno": 292,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_keywordOnlyArgsUndefined": {
  "lineno": 307,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_laterRedefinedGlobalFromNestedScope": {
  "lineno": 143,
  "symbols_in_volume": [
   "frosted.messages.UndefinedLocal"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_laterRedefinedGlobalFromNestedScope2": {
  "lineno": 155,
  "symbols_in_volume": [
   "frosted.messages.UndefinedLocal"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_laterRedefinedGlobalFromNestedScope3": {
  "lineno": 208,
  "symbols_in_volume": [
   "frosted.messages.UndefinedLocal"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_localImportStar": {
  "lineno": 76,
  "symbols_in_volume": [
   "frosted.messages.ImportStarUsed",
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_magicGlobalImport": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_magicGlobalsBuiltins": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_magicGlobalsFile": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_magicGlobalsName": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_magicGlobalsPath": {
  "lineno": 61,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_metaClassUndefined": {
  "lineno": 332,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_nestedClass": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_undefined": {
  "lineno": 15,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_undefinedAugmentedAssignment": {
  "lineno": 222,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName",
   "frosted.messages.UnusedVariable"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_undefinedWithErrorHandler": {
  "lineno": 347,
  "symbols_in_volume": [
   "frosted.messages.UndefinedName"
  ],
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_unpackedParameter": {
  "lineno": 85,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "frosted.test.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "frosted.test.utils.LoggingReporter": {
  "lineno": 39,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "frosted.test.utils.LoggingReporter.flake": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.utils.LoggingReporter.syntax_error": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.utils.LoggingReporter.unexpected_error": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.utils.Node": {
  "lineno": 32,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "frosted.test.utils.Node.__new__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "frosted.test.utils.flakes": {
  "lineno": 14,
  "symbols_in_volume": [
   "frosted.checker.Checker",
   "textwrap.dedent"
  ],
  "type": "function"
 }
}