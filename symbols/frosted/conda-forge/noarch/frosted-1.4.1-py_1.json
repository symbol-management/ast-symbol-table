{
 "*": {
  "data": {
   "imports": [
    "pies.overrides"
   ]
  },
  "type": "star-import"
 },
 "frosted": {
  "data": {},
  "type": "module"
 },
 "frosted.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "frosted.api": {
  "data": {
   "symbols_in_volume": [
    "frosted.api.re"
   ]
  },
  "type": "module"
 },
 "frosted.api.FileSkipped": {
  "data": {
   "shadows": "frosted.messages.FileSkipped"
  },
  "type": "import"
 },
 "frosted.api.N_TOKENS": {
  "data": {
   "shadows": "token.N_TOKENS"
  },
  "type": "import"
 },
 "frosted.api.PythonSyntaxError": {
  "data": {
   "shadows": "frosted.messages.PythonSyntaxError"
  },
  "type": "import"
 },
 "frosted.api.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "frosted.api.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "frosted.api._ast": {
  "data": {
   "shadows": "_ast"
  },
  "type": "import"
 },
 "frosted.api._noqa_lines": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "frosted.api._re_noqa",
    "frosted.api.tokenize",
    "io.StringIO",
    "str",
    "token.N_TOKENS"
   ]
  },
  "type": "function"
 },
 "frosted.api._re_noqa": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "frosted.api._should_skip": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "frosted.api.os"
   ]
  },
  "type": "function"
 },
 "frosted.api.check": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception",
    "SyntaxError",
    "compile",
    "frosted.api._ast",
    "frosted.api._noqa_lines",
    "frosted.api._should_skip",
    "frosted.api.os",
    "frosted.api.sys",
    "frosted.checker.Checker",
    "frosted.messages.FileSkipped",
    "frosted.messages.PythonSyntaxError",
    "frosted.reporter.Default",
    "frosted.reporter.flake",
    "frosted.reporter.unexpected_error",
    "frosted.settings.from_path",
    "itemsview",
    "len",
    "list",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "frosted.api.check_path": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "IOError",
    "UnicodeError",
    "frosted.api.check",
    "frosted.api.sys",
    "frosted.reporter",
    "frosted.reporter.Default",
    "frosted.reporter.unexpected_error",
    "open"
   ]
  },
  "type": "function"
 },
 "frosted.api.check_recursive": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "frosted.api.check_path",
    "frosted.api.iter_source_code",
    "frosted.reporter",
    "frosted.reporter.Default"
   ]
  },
  "type": "function"
 },
 "frosted.api.checker": {
  "data": {
   "shadows": "frosted.checker"
  },
  "type": "import"
 },
 "frosted.api.iter_source_code": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "frosted.api.os"
   ]
  },
  "type": "function"
 },
 "frosted.api.modReporter": {
  "data": {
   "shadows": "frosted.reporter"
  },
  "type": "import"
 },
 "frosted.api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "frosted.api.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "frosted.api.settings": {
  "data": {
   "shadows": "frosted.settings"
  },
  "type": "import"
 },
 "frosted.api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "frosted.api.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "frosted.checker": {
  "data": {
   "symbols_in_volume": [
    "dir",
    "frosted.checker.builtins",
    "frosted.checker.os",
    "frosted.checker.sys",
    "set"
   ]
  },
  "type": "module"
 },
 "frosted.checker.Argument": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "frosted.checker.Binding"
   ]
  },
  "type": "class"
 },
 "frosted.checker.Assignment": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "frosted.checker.Binding"
   ]
  },
  "type": "class"
 },
 "frosted.checker.Binding": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "frosted.checker.Binding.__init__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "frosted.checker.Binding.__repr__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Binding.__str__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "frosted.checker.Checker": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "frosted.checker.FROSTED_BUILTINS",
    "frosted.checker.doctest",
    "object"
   ]
  },
  "type": "class"
 },
 "frosted.checker.Checker.ASSIGN": {
  "data": {
   "lineno": 842
  },
  "type": "function"
 },
 "frosted.checker.Checker.AUGASSIGN": {
  "data": {
   "lineno": 847
  },
  "type": "function"
 },
 "frosted.checker.Checker.CALL": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "frosted.checker.FunctionDefinition",
    "isinstance",
    "pies.ast.Name"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.CLASSDEF": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "frosted.checker.ClassDefinition",
    "frosted.checker.ClassScope"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.DICTCOMP": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "frosted.checker.GeneratorScope"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.EXCEPTHANDLER": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "frosted.messages.BareExcept",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.FOR": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "collectLoopVars",
    "frosted.checker.Importation",
    "frosted.messages.ImportShadowedByLoopVar",
    "isinstance",
    "vars"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.FOR.collectLoopVars": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "collectLoopVars",
    "isinstance",
    "pies.ast.Name",
    "pies.ast.expr_context",
    "pies.ast.iter_child_nodes",
    "vars.append"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.FUNCTIONDEF": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "frosted.checker.FunctionDefinition"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.GENERATOREXP": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "frosted.checker.GeneratorScope"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.GLOBAL": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "frosted.checker.FunctionScope",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.IMPORT": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "frosted.checker.Importation"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.IMPORTFROM": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "frosted.checker.Importation",
    "frosted.messages.ImportStarUsed",
    "frosted.messages.LateFutureImport"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.LAMBDA": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "addArgs",
    "enumerate",
    "frosted.checker.PY34_GTE",
    "frosted.messages.DuplicateArgument",
    "getattr",
    "hasattr",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.LAMBDA.addArgs": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "addArgs",
    "frosted.messages.DuplicateArgument",
    "isinstance",
    "pies.ast.Tuple"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.LAMBDA.runFunction": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "frosted.checker.Argument",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.LAMBDA.runFunction.checkReturnWithArgumentInsideGenerator": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "frosted.messages.ReturnWithArgsInsideGenerator"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.LAMBDA.runFunction.checkUnusedAssignments": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "frosted.messages.UnusedVariable"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.LISTCOMP": {
  "data": {
   "lineno": 652
  },
  "type": "function"
 },
 "frosted.checker.Checker.NAME": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "RuntimeError",
    "frosted.checker.FunctionScope",
    "isinstance",
    "pies.ast.AugLoad",
    "pies.ast.AugStore",
    "pies.ast.Call",
    "pies.ast.Del",
    "pies.ast.Load",
    "pies.ast.Store"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.TRY": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "frosted.checker.node_name",
    "handler",
    "handler.type",
    "handler.type.elts",
    "isinstance",
    "pies.ast.Tuple",
    "pies.ast.iter_child_nodes"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.__init__": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "frosted.checker.ModuleScope",
    "frosted.checker.builtins",
    "frosted.checker.os"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.add_binding": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "frosted.checker.ClassScope",
    "frosted.checker.Definition",
    "frosted.checker.Importation",
    "frosted.messages.RedefinedInListComp",
    "frosted.messages.RedefinedWhileUnused",
    "isinstance",
    "pies.ast.For",
    "pies.ast.ListComp"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.check_dead_scopes": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "all",
    "frosted.checker.ExportBinding",
    "frosted.checker.Importation",
    "frosted.checker.os",
    "frosted.messages.UndefinedExport",
    "frosted.messages.UnusedImport",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.defer_assignment": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "callable"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.defer_function": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "callable"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.descendant_of": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "frosted.checker.Checker.different_forks": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "isinstance",
    "pies.ast.If",
    "pies.ast.Try",
    "pies.ast.TryFinally"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.docstring": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "isinstance",
    "pies.ast.Expr",
    "pies.ast.Str"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.find_return_with_argument": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "pies.ast.FunctionDef",
    "pies.ast.Return"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.get_common_ancestor": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.get_node_handler": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "KeyError",
    "getattr",
    "handler",
    "str"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.handleNode": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "getattr",
    "handler",
    "isinstance",
    "pies.ast.ImportFrom",
    "print"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.handle_children": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "pies.ast.iter_child_nodes"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.handle_doctests": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "IndexError",
    "SyntaxError",
    "ValueError",
    "compile",
    "frosted.checker.sys",
    "frosted.messages.DoctestSyntaxError",
    "pies.ast.PyCF_ONLY_AST"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.handle_node_delete": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "KeyError",
    "frosted.checker.FunctionScope",
    "frosted.checker.node_name",
    "frosted.messages.UndefinedName",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.handle_node_load": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "KeyError",
    "frosted.checker.node_name",
    "frosted.checker.os",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.handle_node_store": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "frosted.checker.Assignment",
    "frosted.checker.Binding",
    "frosted.checker.ExportBinding",
    "frosted.checker.FunctionScope",
    "frosted.checker.ModuleScope",
    "frosted.checker.node_name",
    "frosted.messages.UndefinedLocal",
    "getattr",
    "isinstance",
    "pies.ast.For",
    "pies.ast.List",
    "pies.ast.Tuple",
    "pies.ast.comprehension"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.has_parent": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.ignore": {
  "data": {
   "lineno": 618
  },
  "type": "function"
 },
 "frosted.checker.Checker.is_docstring": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "isinstance",
    "pies.ast.Expr",
    "pies.ast.Str"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.is_generator": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "list",
    "pies.ast.Assign",
    "pies.ast.Expr",
    "pies.ast.FunctionDef",
    "pies.ast.Yield"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.iter_visible_scopes": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "frosted.checker.FunctionScope",
    "frosted.checker.GeneratorScope",
    "frosted.checker.ModuleScope",
    "frosted.checker.itertools",
    "isinstance",
    "iter",
    "len",
    "reversed"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.on_fork": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "frosted.checker.Checker.pop_scope": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "frosted.checker.Checker.push_class_scope": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "frosted.checker.ClassScope"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.push_function_scope": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "frosted.checker.FunctionScope"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.push_scope": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "frosted.checker.FunctionScope",
    "scope_class"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.report": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "message_class",
    "str"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.run_deferred": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "handler"
   ]
  },
  "type": "function"
 },
 "frosted.checker.Checker.scope": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "frosted.checker.ClassDefinition": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "frosted.checker.Definition"
   ]
  },
  "type": "class"
 },
 "frosted.checker.ClassScope": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "frosted.checker.Scope"
   ]
  },
  "type": "class"
 },
 "frosted.checker.Definition": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "frosted.checker.Binding"
   ]
  },
  "type": "class"
 },
 "frosted.checker.ExportBinding": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "frosted.checker.Binding"
   ]
  },
  "type": "class"
 },
 "frosted.checker.ExportBinding.names": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "isinstance",
    "pies.ast.List",
    "pies.ast.Str"
   ]
  },
  "type": "function"
 },
 "frosted.checker.FROSTED_BUILTINS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "frosted.checker.FunctionDefinition": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "frosted.checker.Definition"
   ]
  },
  "type": "class"
 },
 "frosted.checker.FunctionDefinition.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "FunctionSignature",
    "frosted.checker.FunctionDefinition",
    "super"
   ]
  },
  "type": "function"
 },
 "frosted.checker.FunctionScope": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "frosted.checker.Scope",
    "set"
   ]
  },
  "type": "class"
 },
 "frosted.checker.FunctionScope.__init__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "frosted.checker.Scope"
   ]
  },
  "type": "function"
 },
 "frosted.checker.FunctionScope.unusedAssignments": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "frosted.checker.Assignment",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "frosted.checker.FunctionSignature": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "frosted.checker.FunctionSignature.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "any",
    "bool",
    "len",
    "pies.ast.argument_names",
    "pies.ast.kw_only_argument_names",
    "pies.ast.kw_only_default_count"
   ]
  },
  "type": "function"
 },
 "frosted.checker.FunctionSignature.checkCall": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "frosted.messages.MultipleValuesForArgument",
    "frosted.messages.NeedKwOnlyArgument",
    "frosted.messages.TooFewArguments",
    "frosted.messages.TooManyArguments",
    "frosted.messages.UnexpectedArgument",
    "len",
    "range",
    "repr",
    "set"
   ]
  },
  "type": "function"
 },
 "frosted.checker.FunctionSignature.maxArgumentCount": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "frosted.checker.FunctionSignature.min_argument_count": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "frosted.checker.GeneratorScope": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "frosted.checker.Scope"
   ]
  },
  "type": "class"
 },
 "frosted.checker.Importation": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "frosted.checker.Binding"
   ]
  },
  "type": "class"
 },
 "frosted.checker.Importation.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "frosted.checker.Importation",
    "super"
   ]
  },
  "type": "function"
 },
 "frosted.checker.ModuleScope": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "frosted.checker.Scope"
   ]
  },
  "type": "class"
 },
 "frosted.checker.PY34_GTE": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "frosted.checker.Scope": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "frosted.checker.Scope.__repr__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "dict.__repr__",
    "id"
   ]
  },
  "type": "function"
 },
 "frosted.checker.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.checker.ast": {
  "data": {
   "shadows": "pies.ast"
  },
  "type": "import"
 },
 "frosted.checker.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "frosted.checker.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.checker.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "frosted.checker.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "frosted.checker.messages": {
  "data": {
   "shadows": "frosted.messages"
  },
  "type": "import"
 },
 "frosted.checker.node_name": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "frosted.checker.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "frosted.checker.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.checker.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "frosted.checker.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "frosted.main": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "frosted.main.main"
   ]
  },
  "type": "module"
 },
 "frosted.main.__version__": {
  "data": {
   "shadows": "frosted.__version__"
  },
  "type": "import"
 },
 "frosted.main.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.main.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "frosted.main.check": {
  "data": {
   "shadows": "frosted.api.check"
  },
  "type": "import"
 },
 "frosted.main.check_path": {
  "data": {
   "shadows": "frosted.api.check_path"
  },
  "type": "import"
 },
 "frosted.main.check_recursive": {
  "data": {
   "shadows": "frosted.api.check_recursive"
  },
  "type": "import"
 },
 "frosted.main.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.main.main": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "IOError",
    "SystemExit",
    "dict",
    "frosted.__version__",
    "frosted.api.check",
    "frosted.api.check_path",
    "frosted.api.check_recursive",
    "frosted.main.argparse",
    "frosted.main.sys",
    "itemsview",
    "len",
    "print",
    "vars"
   ]
  },
  "type": "function"
 },
 "frosted.main.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "frosted.main.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "frosted.messages": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "frosted.messages.MessageType",
    "frosted.messages.OffsetMessageType",
    "frosted.messages.SyntaxErrorType"
   ]
  },
  "type": "module"
 },
 "frosted.messages.AbstractMessageType": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "frosted.messages.BY_CODE": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "frosted.messages.BareExcept": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "frosted.messages.DoctestSyntaxError": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "frosted.messages.DuplicateArgument": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "frosted.messages.FileSkipped": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "frosted.messages.ImportShadowedByLoopVar": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "frosted.messages.ImportStarUsed": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "frosted.messages.LateFutureImport": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "frosted.messages.Message": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "frosted.messages.MessageType": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "frosted.messages.AbstractMessageType"
   ]
  },
  "type": "class"
 },
 "frosted.messages.MessageType.Message": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "frosted.messages.MessageType.Message.__str__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "frosted.messages.MessageType.__call__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "frosted.messages.MessageType.__new__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "frosted.messages.AbstractMessageType",
    "frosted.messages.BY_CODE",
    "frosted.messages._ERROR_INDEX"
   ]
  },
  "type": "function"
 },
 "frosted.messages.MultipleValuesForArgument": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "frosted.messages.NeedKwOnlyArgument": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "frosted.messages.OffsetMessageType": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "frosted.messages.MessageType"
   ]
  },
  "type": "class"
 },
 "frosted.messages.OffsetMessageType.__call__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "frosted.messages.MessageType"
   ]
  },
  "type": "function"
 },
 "frosted.messages.PythonSyntaxError": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "frosted.messages.Redefined": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "frosted.messages.RedefinedInListComp": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "frosted.messages.RedefinedWhileUnused": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "frosted.messages.ReturnWithArgsInsideGenerator": {
  "data": {
   "lineno": 112
  },
  "type": "constant"
 },
 "frosted.messages.SyntaxErrorType": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "frosted.messages.MessageType"
   ]
  },
  "type": "class"
 },
 "frosted.messages.SyntaxErrorType.__call__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "frosted.messages.MessageType",
    "frosted.messages.re",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "frosted.messages.TooFewArguments": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "frosted.messages.TooManyArguments": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "frosted.messages.UndefinedExport": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "frosted.messages.UndefinedLocal": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "frosted.messages.UndefinedName": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "frosted.messages.UnexpectedArgument": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "frosted.messages.UnusedImport": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "frosted.messages.UnusedVariable": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "frosted.messages._ERROR_INDEX": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "frosted.messages.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.messages.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.messages.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "frosted.messages.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.messages.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "frosted.messages.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "frosted.reporter": {
  "data": {
   "symbols_in_volume": [
    "frosted.reporter.Reporter",
    "frosted.reporter.sys"
   ]
  },
  "type": "module"
 },
 "frosted.reporter.Default": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "frosted.reporter.Reporter": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "frosted.reporter.Reporter.flake": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "frosted.reporter.Reporter.unexpected_error": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "frosted.reporter.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.reporter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.reporter.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "frosted.reporter.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.reporter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "frosted.reporter.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "frosted.settings": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "frosted.settings.MAX_CONFIG_SEARCH_DEPTH": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "frosted.settings._get_config_data": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ConfigParser.SafeConfigParser",
    "dict",
    "open",
    "pies.functools.lru_cache"
   ]
  },
  "type": "function"
 },
 "frosted.settings._update_settings_with_config": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "_update_with_config_file",
    "frosted.settings.MAX_CONFIG_SEARCH_DEPTH",
    "frosted.settings.default",
    "frosted.settings.os",
    "native_str"
   ]
  },
  "type": "function"
 },
 "frosted.settings._update_with_config_file": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "_get_config_data",
    "bool",
    "existing_value_type",
    "frosted.settings.default",
    "list",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "frosted.settings.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.settings.configparser": {
  "data": {
   "shadows": "ConfigParser"
  },
  "type": "import"
 },
 "frosted.settings.default": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "frosted.settings.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.settings.from_path": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "_update_settings_with_config",
    "frosted.settings.default",
    "pies.functools.lru_cache"
   ]
  },
  "type": "function"
 },
 "frosted.settings.lru_cache": {
  "data": {
   "shadows": "pies.functools.lru_cache"
  },
  "type": "import"
 },
 "frosted.settings.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "frosted.settings.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.settings.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "frosted.test": {
  "data": {},
  "type": "module"
 },
 "frosted.test.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.test.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.test.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.test.test_api": {
  "data": {},
  "type": "module"
 },
 "frosted.test.test_api.PythonSyntaxError": {
  "data": {
   "shadows": "frosted.messages.PythonSyntaxError"
  },
  "type": "import"
 },
 "frosted.test.test_api.Reporter": {
  "data": {
   "shadows": "frosted.reporter.Reporter"
  },
  "type": "import"
 },
 "frosted.test.test_api.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "frosted.test.test_api.UnusedImport": {
  "data": {
   "shadows": "frosted.messages.UnusedImport"
  },
  "type": "import"
 },
 "frosted.test.test_api.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.test.test_api.assert_contains_output": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "frosted.api.check_path",
    "frosted.reporter.Reporter",
    "io.StringIO",
    "len"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.check_path": {
  "data": {
   "shadows": "frosted.api.check_path"
  },
  "type": "import"
 },
 "frosted.test.test_api.check_recursive": {
  "data": {
   "shadows": "frosted.api.check_recursive"
  },
  "type": "import"
 },
 "frosted.test.test_api.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.test.test_api.get_errors": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "LoggingReporter",
    "frosted.api.check_path"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.make_temp_file": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "frosted.test.test_api.tempfile",
    "hasattr",
    "open"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "frosted.test.test_api.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.test.test_api.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "frosted.test.test_api.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "frosted.test.test_api.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "frosted.test.test_api.test_check_pathNonExisting": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "frosted.test.test_api.get_errors"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_check_recursive": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "LoggingReporter",
    "Node",
    "frosted.api.check_recursive",
    "frosted.messages.UnusedImport",
    "frosted.test.test_api.os",
    "frosted.test.test_api.tempfile",
    "open",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_eofSyntaxError": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "frosted.test.test_api.assert_contains_output",
    "frosted.test.test_api.make_temp_file"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_flake": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "Node",
    "frosted.messages.UnusedImport",
    "frosted.reporter.Reporter",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_frostedWarning": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "Node",
    "frosted.messages.UnusedImport",
    "frosted.test.test_api.get_errors",
    "frosted.test.test_api.make_temp_file",
    "str"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_invalidEscape": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "frosted.test.test_api.assert_contains_output",
    "frosted.test.test_api.make_temp_file"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_misencodedFileUTF16": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "chr",
    "frosted.test.test_api.assert_contains_output",
    "frosted.test.test_api.make_temp_file"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_misencodedFileUTF8": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "chr",
    "frosted.test.test_api.assert_contains_output",
    "frosted.test.test_api.make_temp_file",
    "frosted.test.test_api.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_missingTrailingNewline": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "frosted.test.test_api.assert_contains_output",
    "frosted.test.test_api.make_temp_file"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_multiLineSyntaxError": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "frosted.messages.PythonSyntaxError",
    "frosted.reporter.Reporter",
    "io.StringIO",
    "len"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_multilineSyntaxError": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "SyntaxError",
    "evaluate",
    "frosted.test.test_api.assert_contains_output",
    "frosted.test.test_api.make_temp_file",
    "frosted.test.test_api.sys"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_multilineSyntaxError.evaluate": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "exec"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_nonDefaultFollowsDefaultSyntaxError": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "frosted.test.test_api.assert_contains_output",
    "frosted.test.test_api.make_temp_file",
    "frosted.test.test_api.sys"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_nonKeywordAfterKeywordSyntaxError": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "frosted.test.test_api.assert_contains_output",
    "frosted.test.test_api.make_temp_file",
    "frosted.test.test_api.sys"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_permissionDenied": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "frosted.test.test_api.get_errors",
    "frosted.test.test_api.make_temp_file",
    "frosted.test.test_api.os"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_syntax_error": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "frosted.messages.PythonSyntaxError",
    "frosted.reporter.Reporter",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_syntax_errorNoOffset": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "frosted.messages.PythonSyntaxError",
    "frosted.reporter.Reporter",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.test_unexpected_error": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "frosted.reporter.Reporter",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_api.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "frosted.test.test_doctests": {
  "data": {},
  "type": "module"
 },
 "frosted.test.test_doctests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.test.test_doctests.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.test.test_doctests.doctestify": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "frosted.test.test_doctests.textwrap",
    "input"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.m": {
  "data": {
   "shadows": "frosted.messages"
  },
  "type": "import"
 },
 "frosted.test.test_doctests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.test.test_doctests.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "frosted.test.test_doctests.test_doctestCanReferToClass": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.test_doctestCanReferToFunction": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.test_doubleNestingReportsClosestName": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedLocal"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.test_ignoreErrorsByDefault": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.test_importBeforeAndInDoctest": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.Redefined",
    "frosted.test.test_doctests.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.test_importBeforeDoctest": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.test_importInDoctestAndAfter": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.test_indentationErrorInDoctest": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.DoctestSyntaxError"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.test_noOffsetSyntaxErrorInDoctest": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.DoctestSyntaxError"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.test_offsetAfterDoctests": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.test_offsetInDoctests": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.test_offsetInLambdasInDoctests": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.test_offsetWithMultiLineArgs": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.DoctestSyntaxError",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.test_syntax_errorInDoctest": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.DoctestSyntaxError"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_doctests.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "frosted.test.test_doctests.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "frosted.test.test_function_calls": {
  "data": {},
  "type": "module"
 },
 "frosted.test.test_function_calls.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.test.test_function_calls.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.test.test_function_calls.m": {
  "data": {
   "shadows": "frosted.messages"
  },
  "type": "import"
 },
 "frosted.test.test_function_calls.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.test.test_function_calls.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "frosted.test.test_function_calls.test_compoundArguments": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.TooFewArguments",
    "frosted.messages.TooManyArguments",
    "frosted.messages.UnexpectedArgument"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_function_calls.test_kwOnlyArguments": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.NeedKwOnlyArgument"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_function_calls.test_multipleValuesForArgument": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.MultipleValuesForArgument"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_function_calls.test_noCheckDecorators": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_function_calls.test_ok": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_function_calls.test_tooFewArguments": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.TooFewArguments"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_function_calls.test_tooFewArgumentsVarArgs": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.TooFewArguments"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_function_calls.test_tooManyArguments": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.TooManyArguments"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_function_calls.test_tooManyArgumentsVarargs": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_function_calls.test_unexpectedArgument": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnexpectedArgument"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_function_calls.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "frosted.test.test_imports": {
  "data": {},
  "type": "module"
 },
 "frosted.test.test_imports.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.test.test_imports.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.test.test_imports.m": {
  "data": {
   "shadows": "frosted.messages"
  },
  "type": "import"
 },
 "frosted.test.test_imports.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.test.test_imports.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "frosted.test.test_imports.test_aliasedImport": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused",
    "frosted.messages.UnusedImport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_assignRHSFirst": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_differentSubmoduleImport": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_duplicateSubmoduleImport": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_functionNamesAreBoundNow": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_functionsRunLater": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_futureImport": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_futureImportFirst": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.LateFutureImport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_ignoreNonImportRedefinitions": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_ignoredInClass": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnusedImport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_ignoredInFunction": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnusedImport",
    "frosted.messages.UnusedVariable"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_importStar": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.ImportStarUsed"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_importStarExported": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.ImportStarUsed"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_importedInClass": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "flakes",
    "frosted.test.test_imports.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_importingForImportError": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "flakes",
    "frosted.test.test_imports.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_methodsDontUseClassScope": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName",
    "frosted.messages.UnusedImport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_nestedClassAndFunctionScope": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_nestedFunctionsNestScope": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_newAssignment": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_nonGlobalDoesNotRedefine": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_notUsedInNestedScope": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_packageImport": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedByClass": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedByExcept": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused",
    "sys.version_info"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedByFor": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedByFunction": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedByGenExp": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused",
    "frosted.messages.UnusedImport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedByListComp": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedBySubclass": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedIf": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedIfElse": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedInClass": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedInNestedFunction": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused",
    "frosted.messages.UnusedImport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTry": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTryElse": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTryExcept": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTryExceptElse": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTryExceptElseFinally": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTryExceptFinally": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTryExceptMulti": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedTryNested": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_redefinedWhileUnused": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_shadowedByFor": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.ImportShadowedByLoopVar"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_shadowedByForDeep": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.ImportShadowedByLoopVar"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_shadowedByLambda": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnusedImport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_shadowedByParameter": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnusedImport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_tryingMultipleImports": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_unboundExported": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedExport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_unrecognizable": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnusedImport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_unusedImport": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnusedImport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_unusedInNestedScope": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName",
    "frosted.messages.UnusedImport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_unusedPackageImport": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnusedImport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedAsClassDecorator": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedAsDecorator": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedImport": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInAssert": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInAssignment": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInAttributeAssign": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInBackquote": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "flakes",
    "frosted.test.test_imports.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInCall": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInClass": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInClassBase": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInDict": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInElifConditional": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInElse": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInExcept": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInExec": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "flakes",
    "sys.version_info"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInFor": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInForElse": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInFunction": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInGenExp": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInGetattr": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnusedImport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInGlobal": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnusedImport"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInIfBody": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInIfConditional": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInKeywordArg": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInLambda": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInList": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInListComp": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInLogic": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInOperators": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInParameterDefault": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInRaise": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInReturn": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInSlice": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInSliceObj": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInSubscript": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInTry": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInTryFinally": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInTuple": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInWhile": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_usedInYield": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.test_warningSuppressed": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_imports.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "frosted.test.test_imports.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "frosted.test.test_noqa": {
  "data": {},
  "type": "module"
 },
 "frosted.test.test_noqa.Reporter": {
  "data": {
   "shadows": "frosted.reporter.Reporter"
  },
  "type": "import"
 },
 "frosted.test.test_noqa._noqa_lines": {
  "data": {
   "shadows": "frosted.api._noqa_lines"
  },
  "type": "import"
 },
 "frosted.test.test_noqa._re_noqa": {
  "data": {
   "shadows": "frosted.api._re_noqa"
  },
  "type": "import"
 },
 "frosted.test.test_noqa.check": {
  "data": {
   "shadows": "frosted.api.check"
  },
  "type": "import"
 },
 "frosted.test.test_noqa.m": {
  "data": {
   "shadows": "frosted.messages"
  },
  "type": "import"
 },
 "frosted.test.test_noqa.test_check_integration": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "LoggingReporter",
    "frosted.api.check",
    "len"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_noqa.test_checker_ignore_lines": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.ImportStarUsed"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_noqa.test_noqa_lines": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "frosted.api._noqa_lines"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_noqa.test_regex": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "frosted.api._re_noqa.search"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other": {
  "data": {},
  "type": "module"
 },
 "frosted.test.test_other.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.test.test_other.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.test.test_other.m": {
  "data": {
   "shadows": "frosted.messages"
  },
  "type": "import"
 },
 "frosted.test.test_other.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.test.test_other.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "frosted.test.test_other.test_access_debug": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_assignInForLoop": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_assignInListComprehension": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_assignToGlobal": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_assignToMember": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_assignToNonlocal": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "flakes",
    "frosted.test.test_other.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_assignmentInsideLoop": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_attrAugmentedAssignment": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_augmentedAssignmentImportedFunctionCall": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_bareExcept": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.BareExcept"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_classFunctionDecorator": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_classNameDefinedPreviously": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_classNameUndefinedInClassBody": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_classRedefinedAsFunction": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_classRedefinition": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_closedOver": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_comparison": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_containment": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_dictComprehension": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "flakes",
    "frosted.test.test_other.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_doubleAssignment": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused",
    "frosted.test.test_other.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_doubleAssignmentConditionally": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_doubleAssignmentWithUse": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_doubleClosedOver": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_duplicateArgs": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.DuplicateArgument"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_ellipsis": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_exceptWithoutNameInFunction": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_exceptWithoutNameInFunctionTuple": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_exceptionUsedInExcept": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "flakes",
    "sys.version_info"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_extendedSlice": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_functionDecorator": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_functionRedefinedAsClass": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_generatorExpression": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_identity": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_ifexp": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_listUnpacking": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_localReferencedBeforeAssignment": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName",
    "frosted.test.test_other.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_loopControl": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_modernProperty": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "flakes",
    "frosted.test.test_other.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedClassFunction": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedElseInListComp": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedInListComp"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedFunction": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedIfElseFunction": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedIfElseInListComp": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedIfFunction": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedInDictComprehension": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnusedVariable",
    "frosted.test.test_other.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedInGenerator": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnusedVariable"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedInListComp": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedInListComp"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedInSetComprehension": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnusedVariable",
    "frosted.test.test_other.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedTryExceptFunction": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_redefinedTryFunction": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_setComprehensionAndLiteral": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "flakes",
    "frosted.test.test_other.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_tracebackhideSpecialVariable": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_tupleUnpacking": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_unaryPlus": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_undefinedBaseClass": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_unusedVariable": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnusedVariable"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_unusedVariableAsLocals": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_unusedVariableNoLocals": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UnusedVariable"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_varAugmentedAssignment": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementAttributeName": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementComplicatedTarget": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementListNames": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementNameDefinedInBody": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementNoNames": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementSingleName": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementSingleNameRedefined": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementSingleNameUndefined": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementSubscript": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementSubscriptUndefined": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementTupleNames": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementTupleNamesRedefined": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.RedefinedWhileUnused"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementTupleNamesUndefined": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementUndefinedInExpression": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_withStatementUndefinedInside": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.test_yieldFromUndefined": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName",
    "frosted.test.test_other.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_other.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "frosted.test.test_other.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "frosted.test.test_return_with_arguments_inside_generator": {
  "data": {},
  "type": "module"
 },
 "frosted.test.test_return_with_arguments_inside_generator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.test.test_return_with_arguments_inside_generator.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.test.test_return_with_arguments_inside_generator.m": {
  "data": {
   "shadows": "frosted.messages"
  },
  "type": "import"
 },
 "frosted.test.test_return_with_arguments_inside_generator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.test.test_return_with_arguments_inside_generator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "frosted.test.test_return_with_arguments_inside_generator.test_no_false_positives_for_return_inside_generator": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "flakes",
    "frosted.test.test_return_with_arguments_inside_generator.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_return_with_arguments_inside_generator.test_return": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.ReturnWithArgsInsideGenerator",
    "frosted.test.test_return_with_arguments_inside_generator.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_return_with_arguments_inside_generator.test_returnNone": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.ReturnWithArgsInsideGenerator",
    "frosted.test.test_return_with_arguments_inside_generator.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_return_with_arguments_inside_generator.test_returnYieldExpression": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.ReturnWithArgsInsideGenerator",
    "frosted.test.test_return_with_arguments_inside_generator.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_return_with_arguments_inside_generator.test_return_with_args_inside_generator_not_duplicated": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.ReturnWithArgsInsideGenerator",
    "frosted.test.test_return_with_arguments_inside_generator.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_return_with_arguments_inside_generator.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "frosted.test.test_return_with_arguments_inside_generator.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "frosted.test.test_script": {
  "data": {
   "symbols_in_volume": [
    "frosted.test.test_script.frosted",
    "frosted.test.test_script.os"
   ]
  },
  "type": "module"
 },
 "frosted.test.test_script.FROSTED_BINARY": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "frosted.test.test_script.UnusedImport": {
  "data": {
   "shadows": "frosted.messages.UnusedImport"
  },
  "type": "import"
 },
 "frosted.test.test_script.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.test.test_script.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.test.test_script.frosted": {
  "data": {
   "shadows": "frosted"
  },
  "type": "import"
 },
 "frosted.test.test_script.iter_source_code": {
  "data": {
   "shadows": "frosted.api.iter_source_code"
  },
  "type": "import"
 },
 "frosted.test.test_script.make_empty_file": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "frosted.test.test_script.os",
    "open"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "frosted.test.test_script.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.test.test_script.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "frosted.test.test_script.run_frosted": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "frosted.test.test_script.FROSTED_BINARY",
    "frosted.test.test_script.os",
    "frosted.test.test_script.subprocess",
    "frosted.test.test_script.sys",
    "native_dict"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.setup_function": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "frosted.test.test_script.os",
    "frosted.test.test_script.tempfile",
    "globals"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "frosted.test.test_script.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "frosted.test.test_script.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "frosted.test.test_script.teardown_function": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "frosted.test.test_script.shutil"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "frosted.test.test_script.test_emptyDirectory": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "frosted.api.iter_source_code",
    "list"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.test_errors": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "frosted.test.test_script.run_frosted"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.test_explicitFiles": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "frosted.api.iter_source_code",
    "frosted.test.test_script.make_empty_file",
    "list"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.test_fileWithFlakes": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "Node",
    "frosted.messages.UnusedImport",
    "frosted.test.test_script.run_frosted",
    "open"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.test_goodFile": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "frosted.test.test_script.run_frosted",
    "open"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.test_multipleDirectories": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "frosted.api.iter_source_code",
    "frosted.test.test_script.make_empty_file",
    "frosted.test.test_script.os",
    "sorted"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.test_non_unicode_slash_u": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "frosted.test.test_script.pytest",
    "frosted.test.test_script.run_frosted",
    "open"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.test_onlyPythonSource": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "frosted.api.iter_source_code",
    "frosted.test.test_script.make_empty_file",
    "list"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.test_print_statement_python2": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "frosted.test.test_script.pytest",
    "frosted.test.test_script.run_frosted"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.test_readFromStdin": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Node",
    "frosted.messages.UnusedImport",
    "frosted.test.test_script.run_frosted"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.test_recurses": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "frosted.api.iter_source_code",
    "frosted.test.test_script.make_empty_file",
    "frosted.test.test_script.os",
    "sorted"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_script.test_singleFile": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "frosted.api.iter_source_code",
    "frosted.test.test_script.make_empty_file",
    "list"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names": {
  "data": {},
  "type": "module"
 },
 "frosted.test.test_undefined_names.PyCF_ONLY_AST": {
  "data": {
   "shadows": "_ast.PyCF_ONLY_AST"
  },
  "type": "import"
 },
 "frosted.test.test_undefined_names.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.test.test_undefined_names.checker": {
  "data": {
   "shadows": "frosted.checker"
  },
  "type": "import"
 },
 "frosted.test.test_undefined_names.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.test.test_undefined_names.m": {
  "data": {
   "shadows": "frosted.messages"
  },
  "type": "import"
 },
 "frosted.test.test_undefined_names.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.test.test_undefined_names.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "frosted.test.test_undefined_names.test_annotationUndefined": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "flakes",
    "frosted.test.test_undefined_names.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_badNestedClass": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_builtinWindowsError": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_builtins": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_definedAsStarArgs": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_definedAsStarUnpack": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "flakes",
    "frosted.test.test_undefined_names.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_definedByGlobal": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "flakes",
    "frosted.test.test_undefined_names.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_definedInClass": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "flakes",
    "sys.version_info"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_definedInGenExp": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "flakes",
    "sys.version_info"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_definedInListComp": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_del": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_delGlobal": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_delUndefined": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_doubleNestingReportsClosestName": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedLocal",
    "str"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_functionsNeedGlobalScope": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_globalFromNestedScope": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_globalImportStar": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.ImportStarUsed"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_globalInGlobalScope": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_impossibleContext": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "RuntimeError",
    "_ast.PyCF_ONLY_AST",
    "compile",
    "frosted.checker.Checker",
    "frosted.test.test_undefined_names.pytest",
    "object"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_intermediateClassScopeIgnored": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedLocal"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_keywordOnlyArgs": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "flakes",
    "frosted.test.test_undefined_names.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_keywordOnlyArgsUndefined": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName",
    "frosted.test.test_undefined_names.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_laterRedefinedGlobalFromNestedScope": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedLocal"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_laterRedefinedGlobalFromNestedScope2": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedLocal"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_laterRedefinedGlobalFromNestedScope3": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedLocal"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_localImportStar": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.ImportStarUsed",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_magicGlobalImport": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_magicGlobalsBuiltins": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_magicGlobalsFile": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_magicGlobalsName": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_magicGlobalsPath": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_metaClassUndefined": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "flakes",
    "frosted.test.test_undefined_names.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_nestedClass": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "flakes"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_undefined": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_undefinedAugmentedAssignment": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName",
    "frosted.messages.UnusedVariable"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_undefinedWithErrorHandler": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "flakes",
    "frosted.messages.UndefinedName"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.test_unpackedParameter": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "flakes",
    "frosted.test.test_undefined_names.pytest"
   ]
  },
  "type": "function"
 },
 "frosted.test.test_undefined_names.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "frosted.test.test_undefined_names.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "frosted.test.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "frosted.test.utils": {
  "data": {},
  "type": "module"
 },
 "frosted.test.utils.LoggingReporter": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "frosted.test.utils.LoggingReporter.flake": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "frosted.test.utils.LoggingReporter.syntax_error": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "frosted.test.utils.LoggingReporter.unexpected_error": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "frosted.test.utils.Node": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "class"
 },
 "frosted.test.utils.Node.__new__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "frosted.test.utils.Node",
    "super"
   ]
  },
  "type": "function"
 },
 "frosted.test.utils.PyCF_ONLY_AST": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "frosted.test.utils.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "frosted.test.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "frosted.test.utils.checker": {
  "data": {
   "shadows": "frosted.checker"
  },
  "type": "import"
 },
 "frosted.test.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "frosted.test.utils.flakes": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "compile",
    "frosted.checker.Checker",
    "frosted.test.utils.PyCF_ONLY_AST",
    "frosted.test.utils.textwrap",
    "input",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "frosted.test.utils.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "frosted.test.utils.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "frosted.test.utils.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "frosted.test.utils.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 }
}