{
 "janitor": {
  "data": {},
  "type": "module"
 },
 "janitor.__version__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "janitor.biology": {
  "data": {},
  "type": "module"
 },
 "janitor.biology.SeqIO": {
  "data": {
   "shadows": "Bio.SeqIO"
  },
  "type": "import"
 },
 "janitor.biology.join_fasta": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "Bio.SeqIO.parse",
    "pandas.DataFrame",
    "pandas_flavor.register_dataframe_method",
    "str"
   ]
  },
  "type": "function"
 },
 "janitor.biology.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "janitor.biology.pf": {
  "data": {
   "shadows": "pandas_flavor"
  },
  "type": "import"
 },
 "janitor.errors": {
  "data": {},
  "type": "module"
 },
 "janitor.errors.JanitorError": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "janitor.finance": {
  "data": {},
  "type": "module"
 },
 "janitor.finance._check_currency": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "janitor.finance.currency_set"
   ]
  },
  "type": "function"
 },
 "janitor.finance._convert_currency": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ConnectionError",
    "ValueError",
    "datetime.date",
    "datetime.datetime",
    "functools.lru_cache",
    "isinstance",
    "janitor.check",
    "janitor.finance._check_currency",
    "janitor.finance.json",
    "janitor.finance.requests",
    "str"
   ]
  },
  "type": "function"
 },
 "janitor.finance.check": {
  "data": {
   "shadows": "janitor.check"
  },
  "type": "import"
 },
 "janitor.finance.convert_currency": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "bool",
    "datetime.date",
    "janitor.finance._convert_currency",
    "pandas_flavor.register_dataframe_method",
    "str"
   ]
  },
  "type": "function"
 },
 "janitor.finance.currency_set": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "janitor.finance.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "janitor.finance.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "janitor.finance.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "janitor.finance.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "janitor.finance.pf": {
  "data": {
   "shadows": "pandas_flavor"
  },
  "type": "import"
 },
 "janitor.finance.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "janitor.functions": {
  "data": {},
  "type": "module"
 },
 "janitor.functions.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "janitor.functions.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "janitor.functions.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "janitor.functions._strip_underscores": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "JanitorError"
   ]
  },
  "type": "function"
 },
 "janitor.functions.add_column": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "bytearray",
    "bytes",
    "check",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.ceil",
    "pandas_flavor.register_dataframe_method",
    "str"
   ]
  },
  "type": "function"
 },
 "janitor.functions.add_columns": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "bool",
    "pandas.DataFrame",
    "pandas_flavor.register_dataframe_method"
   ]
  },
  "type": "function"
 },
 "janitor.functions.change_type": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "pandas_flavor.register_dataframe_method",
    "str"
   ]
  },
  "type": "function"
 },
 "janitor.functions.check": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "janitor.functions.clean_names": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "bool",
    "janitor.functions._strip_underscores",
    "janitor.functions.re",
    "list",
    "pandas_flavor.register_dataframe_method",
    "str"
   ]
  },
  "type": "function"
 },
 "janitor.functions.clean_names._remove_special": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "janitor.functions.coalesce": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "functools.reduce",
    "pandas_flavor.register_dataframe_method"
   ]
  },
  "type": "function"
 },
 "janitor.functions.coalesce._coalesce": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "janitor.functions.collapse_levels": {
  "data": {
   "lineno": 1229,
   "symbols_in_volume": [
    "check",
    "isinstance",
    "pandas.DataFrame",
    "pandas_flavor.register_dataframe_method",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "janitor.functions.concatenate_columns": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pandas_flavor.register_dataframe_method",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "janitor.functions.convert_excel_date": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "datetime.datetime",
    "pandas.TimedeltaIndex",
    "pandas_flavor.register_dataframe_method"
   ]
  },
  "type": "function"
 },
 "janitor.functions.deconcatenate_column": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "len",
    "pandas_flavor.register_dataframe_method",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "janitor.functions.dt": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "janitor.functions.encode_categorical": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "JanitorError",
    "isinstance",
    "list",
    "pandas.Categorical",
    "pandas_flavor.register_dataframe_method",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "janitor.functions.expand_column": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "pandas_flavor.register_dataframe_method"
   ]
  },
  "type": "function"
 },
 "janitor.functions.fill_empty": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas_flavor.register_dataframe_method",
    "tuple"
   ]
  },
  "type": "function"
 },
 "janitor.functions.filter_on": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "pandas_flavor.register_dataframe_method"
   ]
  },
  "type": "function"
 },
 "janitor.functions.filter_string": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "bool",
    "filter_on",
    "pandas_flavor.register_dataframe_method",
    "str"
   ]
  },
  "type": "function"
 },
 "janitor.functions.get_dupes": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "pandas_flavor.register_dataframe_method"
   ]
  },
  "type": "function"
 },
 "janitor.functions.get_features_targets": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "pandas_flavor.register_dataframe_method",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "janitor.functions.label_encode": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "JanitorError",
    "isinstance",
    "list",
    "pandas_flavor.register_dataframe_method",
    "sklearn.preprocessing.LabelEncoder",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "janitor.functions.limit_column_characters": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "check",
    "dict",
    "enumerate",
    "int",
    "len",
    "pandas_flavor.register_dataframe_method",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "janitor.functions.min_max_scale": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "ValueError",
    "pandas_flavor.register_dataframe_method"
   ]
  },
  "type": "function"
 },
 "janitor.functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "janitor.functions.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "janitor.functions.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "janitor.functions.pf": {
  "data": {
   "shadows": "pandas_flavor"
  },
  "type": "import"
 },
 "janitor.functions.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "janitor.functions.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "janitor.functions.remove_columns": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas_flavor.register_dataframe_method",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "janitor.functions.remove_empty": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pandas_flavor.register_dataframe_method"
   ]
  },
  "type": "function"
 },
 "janitor.functions.rename_column": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "pandas_flavor.register_dataframe_method"
   ]
  },
  "type": "function"
 },
 "janitor.functions.reorder_columns": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "IndexError",
    "any",
    "check",
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas_flavor.register_dataframe_method",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "janitor.functions.round_to_fraction": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "check",
    "float",
    "functools.partial",
    "int",
    "numpy.inf",
    "pandas_flavor.register_dataframe_method",
    "str"
   ]
  },
  "type": "function"
 },
 "janitor.functions.round_to_fraction._round_to_fraction": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.isinf",
    "round"
   ]
  },
  "type": "function"
 },
 "janitor.functions.row_to_names": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "bool",
    "check",
    "int",
    "pandas_flavor.register_dataframe_method",
    "range"
   ]
  },
  "type": "function"
 },
 "janitor.functions.transform_column": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "pandas_flavor.register_dataframe_method",
    "str"
   ]
  },
  "type": "function"
 },
 "janitor.functions.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 }
}