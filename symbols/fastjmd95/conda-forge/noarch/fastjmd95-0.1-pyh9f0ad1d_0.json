{
 "fastjmd95": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fastjmd95._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fastjmd95._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "fastjmd95.jmd95numba": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "fastjmd95.jmd95numba._bulkmodjmd95": {
  "lineno": 72,
  "symbols_in_volume": [
   "numba.float32",
   "numba.float64",
   "numba.vectorize",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "fastjmd95.jmd95numba._rho_s": {
  "lineno": 116,
  "symbols_in_volume": [
   "numba.float32",
   "numba.float64",
   "numba.vectorize",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "fastjmd95.jmd95numba.drhods": {
  "lineno": 284,
  "symbols_in_volume": [
   "numba.float32",
   "numba.float64",
   "numba.vectorize",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "fastjmd95.jmd95numba.drhodt": {
  "lineno": 202,
  "symbols_in_volume": [
   "numba.float32",
   "numba.float64",
   "numba.vectorize",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "fastjmd95.jmd95numba.rho": {
  "lineno": 150,
  "symbols_in_volume": [
   "numba.float32",
   "numba.float64",
   "numba.vectorize"
  ],
  "type": "function"
 },
 "fastjmd95.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fastjmd95.test.reference_values": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "module"
 },
 "fastjmd95.test.test_jmd95": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "fastjmd95.test.test_jmd95.s_t_p": {
  "lineno": 9,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.arange",
   "numpy.array",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "fastjmd95.test.test_jmd95.test_drhos": {
  "lineno": 30,
  "symbols_in_volume": [
   "fastjmd95.drhods",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "fastjmd95.test.test_jmd95.test_drhot": {
  "lineno": 24,
  "symbols_in_volume": [
   "fastjmd95.drhodt",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "fastjmd95.test.test_jmd95.test_rho": {
  "lineno": 18,
  "symbols_in_volume": [
   "fastjmd95.rho",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 }
}