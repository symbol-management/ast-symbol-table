{
 "xesmf": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xesmf.backend": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xesmf.backend.add_corner": {
  "lineno": 149,
  "symbols_in_volume": [
   "ESMF.StaggerLoc.CORNER",
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "xesmf.backend.esmf_grid": {
  "lineno": 55,
  "symbols_in_volume": [
   "ESMF.CoordSys.SPH_DEG",
   "ESMF.Grid",
   "ESMF.StaggerLoc.CENTER",
   "numpy.array"
  ],
  "type": "function"
 },
 "xesmf.backend.esmf_locstream": {
  "lineno": 117,
  "symbols_in_volume": [
   "ESMF.CoordSys.SPH_DEG",
   "ESMF.LocStream",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "xesmf.backend.esmf_regrid_apply": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xesmf.backend.esmf_regrid_build": {
  "lineno": 191,
  "symbols_in_volume": [
   "ESMF.Field",
   "ESMF.Regrid",
   "ESMF.RegridMethod.BILINEAR",
   "ESMF.RegridMethod.CONSERVE",
   "ESMF.RegridMethod.NEAREST_DTOS",
   "ESMF.RegridMethod.NEAREST_STOD",
   "ESMF.RegridMethod.PATCH",
   "ESMF.UnmappedAction.IGNORE",
   "os.path.exists"
  ],
  "type": "function"
 },
 "xesmf.backend.esmf_regrid_finalize": {
  "lineno": 333,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xesmf.backend.warn_f_contiguous": {
  "lineno": 24,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "xesmf.backend.warn_lat_range": {
  "lineno": 40,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "xesmf.data": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xesmf.data.wave_smooth": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.pi"
  ],
  "type": "function"
 },
 "xesmf.frontend": {
  "lineno": null,
  "symbols_in_volume": [
   "dask.array.Array"
  ],
  "type": "module"
 },
 "xesmf.frontend.Regridder": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "class"
 },
 "xesmf.frontend.Regridder.A": {
  "lineno": 238,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "xesmf.frontend.Regridder.__call__": {
  "lineno": 315,
  "symbols_in_volume": [
   "numpy.ndarray",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "xesmf.frontend.Regridder.__init__": {
  "lineno": 106,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "xesmf.frontend.Regridder.__repr__": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xesmf.frontend.Regridder._get_default_filename": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "xesmf.frontend.Regridder._write_weight_file": {
  "lineno": 264,
  "symbols_in_volume": [
   "os.path.exists",
   "os.remove"
  ],
  "type": "function"
 },
 "xesmf.frontend.Regridder.clean_weight_file": {
  "lineno": 282,
  "symbols_in_volume": [
   "os.path.exists",
   "os.remove"
  ],
  "type": "function"
 },
 "xesmf.frontend.Regridder.regrid_dask": {
  "lineno": 375,
  "symbols_in_volume": [
   "dask.array.map_blocks"
  ],
  "type": "function"
 },
 "xesmf.frontend.Regridder.regrid_dataarray": {
  "lineno": 391,
  "symbols_in_volume": [
   "xarray.DataArray",
   "xarray.apply_ufunc"
  ],
  "type": "function"
 },
 "xesmf.frontend.Regridder.regrid_dataset": {
  "lineno": 448,
  "symbols_in_volume": [
   "xarray.DataArray",
   "xarray.apply_ufunc"
  ],
  "type": "function"
 },
 "xesmf.frontend.Regridder.regrid_numpy": {
  "lineno": 365,
  "symbols_in_volume": [
   "numpy.expand_dims"
  ],
  "type": "function"
 },
 "xesmf.frontend.as_2d_mesh": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.meshgrid"
  ],
  "type": "function"
 },
 "xesmf.frontend.ds_to_ESMFgrid": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "xesmf.frontend.ds_to_ESMFlocstream": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "xesmf.smm": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xesmf.smm.apply_weights": {
  "lineno": 44,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "xesmf.smm.read_weights": {
  "lineno": 10,
  "symbols_in_volume": [
   "scipy.sparse.coo_matrix",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "xesmf.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xesmf.tests.test_backend": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "xesmf.data.wave_smooth",
   "xesmf.util.grid_global"
  ],
  "type": "module"
 },
 "xesmf.tests.test_backend.test_esmf_build_bilinear": {
  "lineno": 99,
  "symbols_in_volume": [
   "ESMF.RegridMethod.BILINEAR",
   "ESMF.UnmappedAction.IGNORE",
   "xesmf.backend.esmf_grid",
   "xesmf.backend.esmf_regrid_build",
   "xesmf.backend.esmf_regrid_finalize"
  ],
  "type": "function"
 },
 "xesmf.tests.test_backend.test_esmf_grid_with_corner": {
  "lineno": 65,
  "symbols_in_volume": [
   "ESMF.CoordSys.SPH_DEG",
   "numpy.array",
   "numpy.testing.assert_equal",
   "xesmf.backend.add_corner",
   "xesmf.backend.esmf_grid"
  ],
  "type": "function"
 },
 "xesmf.tests.test_backend.test_esmf_locstream": {
  "lineno": 212,
  "symbols_in_volume": [
   "ESMF.LocStream",
   "numpy.arange",
   "numpy.meshgrid",
   "pytest.raises",
   "xesmf.backend.esmf_locstream"
  ],
  "type": "function"
 },
 "xesmf.tests.test_backend.test_regrid": {
  "lineno": 115,
  "symbols_in_volume": [
   "ESMF.RegridMethod.CONSERVE",
   "numpy.abs",
   "numpy.max",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "os.path.exists",
   "os.remove",
   "pytest.raises",
   "xesmf.backend.add_corner",
   "xesmf.backend.esmf_grid",
   "xesmf.backend.esmf_regrid_apply",
   "xesmf.backend.esmf_regrid_build",
   "xesmf.backend.esmf_regrid_finalize",
   "xesmf.smm.apply_weights",
   "xesmf.smm.read_weights"
  ],
  "type": "function"
 },
 "xesmf.tests.test_backend.test_regrid_periodic_correct": {
  "lineno": 194,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "xesmf.backend.esmf_grid",
   "xesmf.backend.esmf_regrid_apply",
   "xesmf.backend.esmf_regrid_build",
   "xesmf.backend.esmf_regrid_finalize"
  ],
  "type": "function"
 },
 "xesmf.tests.test_backend.test_regrid_periodic_wrong": {
  "lineno": 175,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "xesmf.backend.esmf_grid",
   "xesmf.backend.esmf_regrid_apply",
   "xesmf.backend.esmf_regrid_build",
   "xesmf.backend.esmf_regrid_finalize"
  ],
  "type": "function"
 },
 "xesmf.tests.test_backend.test_warn_f_on_array": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.zeros",
   "pytest.warns",
   "xesmf.backend.warn_f_contiguous"
  ],
  "type": "function"
 },
 "xesmf.tests.test_backend.test_warn_f_on_grid": {
  "lineno": 50,
  "symbols_in_volume": [
   "pytest.warns",
   "xesmf.backend.esmf_grid"
  ],
  "type": "function"
 },
 "xesmf.tests.test_backend.test_warn_lat_range": {
  "lineno": 56,
  "symbols_in_volume": [
   "pytest.warns",
   "xesmf.backend.warn_lat_range",
   "xesmf.util.grid_2d"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "xarray.DataArray",
   "xarray.Dataset",
   "xesmf.data.wave_smooth",
   "xesmf.util.grid_global"
  ],
  "type": "module"
 },
 "xesmf.tests.test_frontend.ds_2d_to_1d": {
  "lineno": 143,
  "symbols_in_volume": [
   "xarray.merge"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_as_2d_mesh": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.raises",
   "xesmf.frontend.as_2d_mesh"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_build_regridder": {
  "lineno": 52,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_build_regridder_from_dict": {
  "lineno": 105,
  "symbols_in_volume": [
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_conservative_without_bounds": {
  "lineno": 100,
  "symbols_in_volume": [
   "pytest.raises",
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_ds_to_ESMFlocstream": {
  "lineno": 390,
  "symbols_in_volume": [
   "ESMF.LocStream",
   "pytest.raises",
   "xesmf.frontend.ds_to_ESMFlocstream"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_existing_weights": {
  "lineno": 81,
  "symbols_in_volume": [
   "os.path.exists",
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_dask": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_dask_from_locstream": {
  "lineno": 281,
  "symbols_in_volume": [
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_dask_to_locstream": {
  "lineno": 269,
  "symbols_in_volume": [
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_dataarray": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "xarray.testing.assert_identical",
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_dataarray_dask": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "xarray.testing.assert_identical",
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_dataarray_dask_from_locstream": {
  "lineno": 330,
  "symbols_in_volume": [
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_dataarray_dask_to_locstream": {
  "lineno": 318,
  "symbols_in_volume": [
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_dataarray_from_locstream": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.raises",
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_dataarray_to_locstream": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.testing.assert_equal",
   "pytest.raises",
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_dataset": {
  "lineno": 341,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_equal",
   "xarray.testing.assert_identical",
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_dataset_from_locstream": {
  "lineno": 381,
  "symbols_in_volume": [
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_dataset_to_locstream": {
  "lineno": 372,
  "symbols_in_volume": [
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_periodic_correct": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_periodic_wrong": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_frontend.test_regrid_with_1d_grid": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.max",
   "numpy.testing.assert_equal",
   "xesmf.Regridder"
  ],
  "type": "function"
 },
 "xesmf.tests.test_util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xesmf.tests.test_util.test_grid_global": {
  "lineno": 5,
  "symbols_in_volume": [
   "xesmf.util.grid_global"
  ],
  "type": "function"
 },
 "xesmf.tests.test_util.test_grid_global_bad_resolution": {
  "lineno": 16,
  "symbols_in_volume": [
   "pytest.warns",
   "xesmf.util.grid_global"
  ],
  "type": "function"
 },
 "xesmf.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "xesmf.util._grid_1d": {
  "lineno": 6,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "xesmf.util.grid_2d": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.meshgrid",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "xesmf.util.grid_global": {
  "lineno": 72,
  "symbols_in_volume": [
   "numpy.isclose",
   "warnings.warn"
  ],
  "type": "function"
 }
}