{
 "*": {
  "data": {
   "imports": [
    "LFPy.test.common"
   ]
  },
  "type": "star-import"
 },
 "LFPy": {
  "data": {},
  "type": "module"
 },
 "LFPy.__version__": {
  "data": {
   "shadows": "version"
  },
  "type": "import"
 },
 "LFPy.alias_method": {
  "data": {},
  "type": "module"
 },
 "LFPy.alias_method.alias_method": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "AssertionError",
    "ae",
    "alias_setup",
    "int",
    "numpy.floor",
    "numpy.random.rand",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.alias_method.alias_setup": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "int",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.alias_method.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.cell": {
  "data": {
   "symbols_in_volume": [
    "AssertionError",
    "LFPy.cell.neuron",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "LFPy.cell.Cell": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "LFPy.cell.Cell.__del__": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "LFPy.cell.Cell.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "AssertionError",
    "DeprecationWarning",
    "Exception",
    "LFPy.cell.neuron",
    "LFPy.cell.os",
    "LFPy.cell.posixpath",
    "LFPy.cell.sys",
    "ValueError",
    "dict",
    "hasattr",
    "isinstance",
    "numpy.arange",
    "print",
    "str",
    "sum",
    "type",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._calc_icap": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._calc_imem": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._calc_ipas": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._calc_midpoints": {
  "data": {
   "lineno": 709
  },
  "type": "function"
 },
 "LFPy.cell.Cell._calc_totnsegs": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "LFPy.cell.Cell._check_currents": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_geometry": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "Exception",
    "_collect_geometry_neuron",
    "hasattr",
    "numpy.array",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_istim": {
  "data": {
   "lineno": 1175
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_isyn": {
  "data": {
   "lineno": 1155
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_pt3d": {
  "data": {
   "lineno": 1840,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "int",
    "len",
    "numpy.zeros",
    "range",
    "sec"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_rec_variables": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "numpy.array",
    "print"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_tvec": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_vmem": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_vstim": {
  "data": {
   "lineno": 1185
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_vsyn": {
  "data": {
   "lineno": 1165
  },
  "type": "function"
 },
 "LFPy.cell.Cell._create_polygon": {
  "data": {
   "lineno": 1999,
   "symbols_in_volume": [
    "getattr",
    "numpy.arctan2",
    "numpy.cos",
    "numpy.diff",
    "numpy.r_",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._create_sectionlists": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._create_segment_polygon": {
  "data": {
   "lineno": 2097,
   "symbols_in_volume": [
    "getattr",
    "numpy.arctan2",
    "numpy.cos",
    "numpy.diff",
    "numpy.r_",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._get_idx": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "bool",
    "numpy.array",
    "numpy.empty",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._get_rotation": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "LFPy.cell.os",
    "float",
    "open",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._load_geometry": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "Exception",
    "LFPy.cell.neuron",
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._loadspikes": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "float",
    "hasattr",
    "int",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._parent_and_segment_current": {
  "data": {
   "lineno": 2466,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "len",
    "numpy.take",
    "numpy.where",
    "range",
    "sec",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._real_positions": {
  "data": {
   "lineno": 1660
  },
  "type": "function"
 },
 "LFPy.cell.Cell._real_pt3d_positions": {
  "data": {
   "lineno": 1987,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._rel_positions": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._rel_pt3d_positions": {
  "data": {
   "lineno": 1979,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._run_custom_codes": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "Exception",
    "LFPy.cell.neuron",
    "LFPy.cell.os",
    "LFPy.cell.posixpath",
    "LFPy.cell.sys",
    "RuntimeError",
    "exec",
    "fun",
    "globals"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_current_dipole_moment_array": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_extracellular": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_icap_recorders": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "int",
    "sec"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_imem_recorders": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "int",
    "sec"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_ipas_recorders": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "int",
    "sec"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_ipointprocess_recorders": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "enumerate",
    "int"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_isyn_recorders": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "enumerate",
    "int"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_nsegs": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_nsegs_fixed_length": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_nsegs_lambda100": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_nsegs_lambda_f": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "int",
    "print"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_passive": {
  "data": {
   "lineno": 521
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_pt3d_pos": {
  "data": {
   "lineno": 1892,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_pt3d_rotation": {
  "data": {
   "lineno": 1904,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.cos",
    "numpy.dot",
    "numpy.sin",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_ra_and_cm": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_soma_volt_recorder": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "divmod",
    "int",
    "sec",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_time_recorders": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "int"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_variable_recorders": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "AttributeError",
    "LFPy.cell.neuron",
    "NameError",
    "getattr",
    "int",
    "print",
    "sec",
    "sec.name"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_voltage_recorders": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "int",
    "sec"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_vpointprocess_recorders": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "enumerate",
    "int"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_vsyn_recorders": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "enumerate",
    "int"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._squeeze_me_macaroni": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._update_pt3d": {
  "data": {
   "lineno": 1875,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "enumerate",
    "int",
    "range",
    "sec"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell._update_synapse_positions": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.cellpickler": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "LFPy.cell.pickle",
    "open"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.chiral_morphology": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "Exception",
    "print"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.distort_geometry": {
  "data": {
   "lineno": 2541,
   "symbols_in_volume": [
    "AssertionError",
    "abs",
    "getattr",
    "numpy.c_",
    "numpy.sqrt",
    "setattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.enable_extracellular_stimulation": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "int",
    "len",
    "list",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.newaxis",
    "numpy.zeros",
    "print",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_axial_currents_from_vmem": {
  "data": {
   "lineno": 2262,
   "symbols_in_volume": [
    "AttributeError",
    "LFPy.cell.neuron",
    "hasattr",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.c_",
    "sec",
    "sec.name",
    "sec.nseg"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_axial_resistance": {
  "data": {
   "lineno": 2401,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "numpy.zeros",
    "sec"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_closest_idx": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "numpy.argmin"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_dict_of_children_idx": {
  "data": {
   "lineno": 2428,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "int",
    "sec",
    "sec.name"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_dict_parent_connections": {
  "data": {
   "lineno": 2449,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "enumerate",
    "sec",
    "sec.name"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "list",
    "numpy.arange",
    "numpy.inf",
    "print",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx_children": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "numpy.array",
    "numpy.where",
    "numpy.zeros",
    "sec",
    "sec.name"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx_name": {
  "data": {
   "lineno": 1806,
   "symbols_in_volume": [
    "Exception",
    "int",
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.int64",
    "numpy.where",
    "object",
    "sec",
    "sec.name",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx_parent_children": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "sec",
    "sec.name"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx_polygons": {
  "data": {
   "lineno": 2135,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_intersegment_distance": {
  "data": {
   "lineno": 1729,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_intersegment_vector": {
  "data": {
   "lineno": 1708,
   "symbols_in_volume": [
    "Exception",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_multi_current_dipole_moments": {
  "data": {
   "lineno": 2594,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.newaxis",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_pt3d_polygons": {
  "data": {
   "lineno": 2049,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_rand_idx_area_and_distribution_norm": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "alias_method",
    "dict",
    "dir",
    "f",
    "fun",
    "getattr",
    "len",
    "list",
    "numpy.array",
    "numpy.ndarray",
    "numpy.zeros",
    "print",
    "str",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_rand_idx_area_norm": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "alias_method",
    "numpy.array",
    "print"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_rand_prob_area_norm": {
  "data": {
   "lineno": 1676,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_rand_prob_area_norm_from_idx": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": [
    "numpy.array",
    "sum"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.insert_v_ext": {
  "data": {
   "lineno": 2185,
   "symbols_in_volume": [
    "Exception",
    "LFPy.cell.neuron",
    "ValueError",
    "sec"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.set_point_process": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "Exception",
    "LFPy.cell.neuron",
    "SyntaxError",
    "eval",
    "exec",
    "globals",
    "hasattr",
    "list",
    "locals"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.set_pos": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.set_rotation": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "len",
    "numpy.array",
    "numpy.cos",
    "numpy.dot",
    "numpy.sin",
    "print",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.set_synapse": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "eval",
    "globals",
    "hasattr",
    "list",
    "locals",
    "setattr"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.simulate": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "AttributeError",
    "DeprecationWarning",
    "Exception",
    "LFPy.cell.neuron",
    "_run_simulation",
    "_run_simulation_with_electrode",
    "hasattr",
    "len",
    "numpy.array",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.Cell.strip_hoc_objects": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "LFPy.cell.neuron",
    "getattr",
    "isinstance",
    "print",
    "setattr",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.cell.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.cell.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.cell.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.cell.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "LFPy.cell.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "LFPy.cell.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "LFPy.cell.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "LFPy.cell.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "LFPy.eegmegcalc": {
  "data": {},
  "type": "module"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.__init__": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "float",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_c1n": {
  "data": {
   "lineno": 1008
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_c2n": {
  "data": {
   "lineno": 1013
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_c3n": {
  "data": {
   "lineno": 1025
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_c4n": {
  "data": {
   "lineno": 1037
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_csf_term1": {
  "data": {
   "lineno": 1048
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_csf_term2": {
  "data": {
   "lineno": 1055
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_d2n": {
  "data": {
   "lineno": 1020
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_d3n": {
  "data": {
   "lineno": 1032
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_d4n": {
  "data": {
   "lineno": 1044
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_rad_potential": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.norm",
    "numpy.pi",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_tan_potential": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "len",
    "numpy.linalg.norm",
    "numpy.pi",
    "numpy.sin",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_vn": {
  "data": {
   "lineno": 984
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_yn": {
  "data": {
   "lineno": 993
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_zn": {
  "data": {
   "lineno": 1003
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._check_params": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "any"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._decompose_dipole": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.expand_dims"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_brain_rad": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "leg_consts",
    "numpy.cos",
    "numpy.insert",
    "numpy.polynomial.legendre.Legendre"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_brain_tan": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cos",
    "numpy.sum",
    "scipy.special.lpmv",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_csf_rad": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "leg_consts",
    "numpy.cos",
    "numpy.insert",
    "numpy.polynomial.legendre.Legendre"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_csf_tan": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cos",
    "numpy.sum",
    "scipy.special.lpmv",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_scalp_rad": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": [
    "leg_consts",
    "numpy.cos",
    "numpy.insert",
    "numpy.polynomial.legendre.Legendre"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_scalp_tan": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cos",
    "numpy.sum",
    "scipy.special.lpmv",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_skull_rad": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "leg_consts",
    "numpy.cos",
    "numpy.insert",
    "numpy.polynomial.legendre.Legendre"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_skull_tan": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.cos",
    "numpy.sum",
    "scipy.special.lpmv",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._rz_params": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "numpy.sqrt",
    "numpy.sum",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._sign_rad_dipole": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.calc_phi": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.abs",
    "numpy.arccos",
    "numpy.cross",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.ones",
    "numpy.outer",
    "numpy.pi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.calc_potential": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.calc_potential_from_multi_dipoles": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.calc_theta": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "numpy.arccos",
    "numpy.dot",
    "numpy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.InfiniteVolumeConductor": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "LFPy.eegmegcalc.InfiniteVolumeConductor.__init__": {
  "data": {
   "lineno": 1089
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.InfiniteVolumeConductor.get_dipole_potential": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.InfiniteVolumeConductor.get_multi_dipole_potential": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.MEG": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "LFPy.eegmegcalc.MEG.__init__": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.MEG.calculate_H": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "AssertionError",
    "enumerate",
    "numpy.allclose",
    "numpy.cross",
    "numpy.empty",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.MEG.calculate_H_from_iaxial": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": [
    "enumerate",
    "numpy.cross",
    "numpy.dot",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.OneSphereVolumeConductor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "LFPy.eegmegcalc.OneSphereVolumeConductor.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "AssertionError",
    "float",
    "int",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.OneSphereVolumeConductor.calc_mapping": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arccos",
    "numpy.arctan2",
    "numpy.array",
    "numpy.copy",
    "numpy.sqrt",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.OneSphereVolumeConductor.calc_potential": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "AssertionError",
    "abs",
    "enumerate",
    "float",
    "int",
    "numpy.all",
    "numpy.cos",
    "numpy.dot",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.isreal",
    "numpy.ndarray",
    "numpy.pi",
    "numpy.polynomial.legendre.Legendre",
    "numpy.shape",
    "numpy.sqrt",
    "numpy.where",
    "numpy.zeros",
    "poly_i",
    "poly_o",
    "range",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.get_current_dipole_moment": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.lpmv": {
  "data": {
   "shadows": "scipy.special.lpmv"
  },
  "type": "import"
 },
 "LFPy.eegmegcalc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.eegmegcalc.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "LFPy.inputgenerators": {
  "data": {},
  "type": "module"
 },
 "LFPy.inputgenerators.get_activation_times_from_distribution": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AssertionError",
    "StopIteration",
    "dict",
    "hasattr",
    "iter",
    "numpy.r_",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.inputgenerators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.inputgenerators.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "LFPy.inputgenerators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "LFPy.lfpcalc": {
  "data": {},
  "type": "module"
 },
 "LFPy.lfpcalc._anisotropic_line_source_case_i": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc._anisotropic_line_source_case_iia": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc._anisotropic_line_source_case_iib": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.log",
    "numpy.sign",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc._anisotropic_line_source_case_iii": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc._anisotropic_line_source_case_iiii": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "numpy.arcsinh",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc._check_rlimit_point": {
  "data": {
   "lineno": 559
  },
  "type": "function"
 },
 "LFPy.lfpcalc._deltaS_calc": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc._h_calc": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc._linesource_calc_case1": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc._linesource_calc_case2": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc._linesource_calc_case3": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc._r2_calc": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc._r_soma_calc": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_linesource": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "_deltaS_calc",
    "_h_calc",
    "_linesource_calc_case1",
    "_linesource_calc_case2",
    "_linesource_calc_case3",
    "_r2_calc",
    "len",
    "numpy.pi",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_linesource_anisotropic": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "LFPy.lfpcalc.return_dist_from_segments",
    "RuntimeError",
    "_anisotropic_line_source_case_i",
    "_anisotropic_line_source_case_iia",
    "_anisotropic_line_source_case_iib",
    "_anisotropic_line_source_case_iii",
    "_anisotropic_line_source_case_iiii",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.bitwise_and",
    "numpy.isnan",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_linesource_moi": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "LFPy.lfpcalc._deltaS_calc",
    "LFPy.lfpcalc.return_dist_from_segments",
    "RuntimeError",
    "_omega",
    "numpy.abs",
    "numpy.array",
    "numpy.pi",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_linesource_moi._omega": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.log",
    "numpy.sqrt",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_pointsource": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "_check_rlimit_point",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_pointsource_anisotropic": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_pointsource_moi": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "_omega",
    "numpy.arange",
    "numpy.pi",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_pointsource_moi._omega": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_soma_as_point": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "Exception",
    "_deltaS_calc",
    "_h_calc",
    "_linesource_calc_case1",
    "_linesource_calc_case2",
    "_linesource_calc_case3",
    "_r2_calc",
    "_r_soma_calc",
    "numpy.any",
    "numpy.pi",
    "numpy.where",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_soma_as_point_anisotropic": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "Exception",
    "LFPy.lfpcalc.return_dist_from_segments",
    "RuntimeError",
    "_anisotropic_line_source_case_i",
    "_anisotropic_line_source_case_iia",
    "_anisotropic_line_source_case_iib",
    "_anisotropic_line_source_case_iii",
    "_anisotropic_line_source_case_iiii",
    "len",
    "numpy.abs",
    "numpy.array",
    "numpy.bitwise_and",
    "numpy.isnan",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "print"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_soma_as_point_moi": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "Exception",
    "LFPy.lfpcalc._deltaS_calc",
    "LFPy.lfpcalc.return_dist_from_segments",
    "RuntimeError",
    "_omega",
    "numpy.abs",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.pi",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_soma_as_point_moi._omega": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.lfpcalc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.lfpcalc.return_dist_from_segments": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "LFPy.network": {
  "data": {
   "symbols_in_volume": [
    "LFPy.network.COMM",
    "mpi4py.MPI.COMM_WORLD"
   ]
  },
  "type": "module"
 },
 "LFPy.network.COMM": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "LFPy.network.DummyCell": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "LFPy.network.DummyCell.__init__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.network.DummyCell.get_idx": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "LFPy.network.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "LFPy.network.Network": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "LFPy.network.Network.__init__": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "LFPy.network.neuron",
    "dict"
   ]
  },
  "type": "function"
 },
 "LFPy.network.Network._create_network_dummycell": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "LFPy.network.DummyCell",
    "enumerate",
    "int",
    "numpy.array",
    "numpy.eye",
    "numpy.r_",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "LFPy.network.Network.connect": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "LFPy.network.COMM",
    "LFPy.network.RANK",
    "LFPy.network.flattenlist",
    "LFPy.network.h5py",
    "LFPy.network.neuron",
    "LFPy.network.os",
    "delayfun",
    "dict",
    "enumerate",
    "float",
    "int",
    "len",
    "list",
    "mpi4py.MPI.SUM",
    "multapsefun",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.random.normal",
    "numpy.where",
    "print",
    "scipy.stats.norm",
    "syntype",
    "weightfun",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.network.Network.create_population": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "AssertionError",
    "Cell",
    "LFPy.network.NetworkCell",
    "LFPy.network.NetworkPopulation",
    "LFPy.network.RANK",
    "LFPy.network.neuron",
    "dict",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.network.Network.enable_extracellular_stimulation": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "LFPy.network.Network.get_connectivity_rand": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "LFPy.network.SIZE",
    "bool",
    "int",
    "numpy.array",
    "numpy.c_",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.where",
    "numpy.zeros",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "LFPy.network.Network.simulate": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "Exception",
    "LFPy.network.COMM",
    "LFPy.network.RANK",
    "LFPy.network.SIZE",
    "LFPy.network.h5py",
    "LFPy.network.neuron",
    "LFPy.network.os",
    "NotImplementedError",
    "ReduceStructArray",
    "_run_simulation",
    "_run_simulation_with_electrode",
    "dict",
    "enumerate",
    "hasattr",
    "len",
    "list",
    "mpi4py.MPI.SUM",
    "numpy.array",
    "numpy.float",
    "numpy.zeros",
    "print",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "LFPy.network.NetworkCell": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "LFPy.network.NetworkCell.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "LFPy.network.neuron",
    "sec"
   ]
  },
  "type": "function"
 },
 "LFPy.network.NetworkCell.create_spike_detector": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "LFPy.network.neuron",
    "sec"
   ]
  },
  "type": "function"
 },
 "LFPy.network.NetworkCell.create_synapse": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "AssertionError",
    "LFPy.network.neuron",
    "dict",
    "exec",
    "getattr",
    "hasattr",
    "numpy.random.randint",
    "numpy.testing.assert_almost_equal",
    "sec",
    "syntype"
   ]
  },
  "type": "function"
 },
 "LFPy.network.NetworkPopulation": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "LFPy.network.NetworkPopulation.__init__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "AssertionError",
    "Cell",
    "LFPy.network.COMM",
    "LFPy.network.NetworkCell",
    "LFPy.network.RANK",
    "LFPy.network.SIZE",
    "LFPy.network.flattenlist",
    "LFPy.network.h5py",
    "LFPy.network.os",
    "dict",
    "enumerate",
    "float",
    "len",
    "numpy.empty",
    "numpy.pi",
    "numpy.random.uniform",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.network.NetworkPopulation.draw_rand_pos": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "float",
    "len",
    "list",
    "numpy.all",
    "numpy.empty",
    "numpy.float",
    "numpy.float32",
    "numpy.float64",
    "numpy.random.normal",
    "numpy.random.rand",
    "numpy.sqrt",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.network.RANK": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "LFPy.network.ReduceStructArray": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "LFPy.network.COMM",
    "LFPy.network.RANK",
    "len",
    "list",
    "mpi4py.MPI.SUM",
    "numpy.array",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.network.SIZE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "LFPy.network._run_simulation": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "LFPy.network.RANK",
    "LFPy.network.neuron",
    "print"
   ]
  },
  "type": "function"
 },
 "LFPy.network._run_simulation_with_electrode": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "IndexError",
    "LFPy.network.RANK",
    "LFPy.network.h5py",
    "LFPy.network.neuron",
    "LFPy.network.os",
    "enumerate",
    "hasattr",
    "int",
    "len",
    "list",
    "numpy.arange",
    "numpy.c_",
    "numpy.dot",
    "numpy.float",
    "numpy.zeros",
    "print",
    "sec",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.network.flattenlist": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "LFPy.network.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "LFPy.network.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.network.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.network.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.network.ss": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "LFPy.network.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "LFPy.pointprocess": {
  "data": {},
  "type": "module"
 },
 "LFPy.pointprocess.PointProcess": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "LFPy.pointprocess.PointProcess.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "DeprecationWarning"
   ]
  },
  "type": "function"
 },
 "LFPy.pointprocess.PointProcess.update_pos": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "LFPy.pointprocess.StimIntElectrode": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "LFPy.pointprocess.PointProcess"
   ]
  },
  "type": "class"
 },
 "LFPy.pointprocess.StimIntElectrode.__init__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "LFPy.pointprocess.PointProcess",
    "int"
   ]
  },
  "type": "function"
 },
 "LFPy.pointprocess.StimIntElectrode.collect_current": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.pointprocess.StimIntElectrode.collect_potential": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.pointprocess.Synapse": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "LFPy.pointprocess.PointProcess"
   ]
  },
  "type": "class"
 },
 "LFPy.pointprocess.Synapse.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "LFPy.pointprocess.PointProcess",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.pointprocess.Synapse.collect_current": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Exception",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.pointprocess.Synapse.collect_potential": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "Exception",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.pointprocess.Synapse.set_spike_times": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.ndarray",
    "numpy.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.pointprocess.Synapse.set_spike_times_w_netstim": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "LFPy.pointprocess.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.recextelectrode": {
  "data": {},
  "type": "module"
 },
 "LFPy.recextelectrode.RecExtElectrode": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "LFPy.recextelectrode.RecExtElectrode.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "LFPy.recextelectrode.sys",
    "MEAutility.MEA",
    "MEAutility.core.MEA",
    "RuntimeError",
    "ValueError",
    "copy.deepcopy",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.ndarray",
    "print",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._lfp_el_pos_calc_dist": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "enumerate",
    "loop_over_points",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._lfp_el_pos_calc_dist.loop_over_points": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._loop_over_contacts": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._test_imem_sum": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "DeprecationWarning",
    "LFPy.recextelectrode.warnings",
    "abs",
    "dict",
    "list",
    "numpy.all",
    "numpy.eye",
    "numpy.where",
    "print",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode.calc_lfp": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode.calc_mapping": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "ValueError",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode.set_cell": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "LFPy.recextelectrode.RecExtElectrode"
   ]
  },
  "type": "class"
 },
 "LFPy.recextelectrode.RecMEAElectrode.__init__": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "LFPy.recextelectrode.RecExtElectrode",
    "NotImplementedError",
    "ValueError",
    "numpy.abs",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode._return_comp_outside_slice": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode._squeeze_cell_in_depth_direction": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode.calc_lfp": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode.calc_mapping": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "ValueError",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode.test_cell_extent": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.max",
    "numpy.min",
    "print"
   ]
  },
  "type": "function"
 },
 "LFPy.recextelectrode.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "LFPy.recextelectrode.mu": {
  "data": {
   "shadows": "MEAutility"
  },
  "type": "import"
 },
 "LFPy.recextelectrode.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.recextelectrode.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "LFPy.recextelectrode.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "LFPy.run_simulation": {
  "data": {},
  "type": "module"
 },
 "LFPy.run_simulation.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "LFPy.run_simulation._collect_geometry_neuron": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "LFPy.run_simulation.neuron",
    "enumerate",
    "int",
    "numpy.interp",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.run_simulation._run_simulation": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "LFPy.run_simulation.neuron",
    "print",
    "time.time"
   ]
  },
  "type": "function"
 },
 "LFPy.run_simulation._run_simulation_with_electrode": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "LFPy.run_simulation.h5py",
    "LFPy.run_simulation.neuron",
    "enumerate",
    "hasattr",
    "int",
    "len",
    "list",
    "numpy.array",
    "numpy.c_",
    "numpy.dot",
    "numpy.hstack",
    "numpy.newaxis",
    "numpy.zeros",
    "pathlib.Path",
    "print",
    "time.time",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.run_simulation.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "LFPy.run_simulation.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.run_simulation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.run_simulation.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "LFPy.run_tests": {
  "data": {
   "shadows": "_test"
  },
  "type": "import"
 },
 "LFPy.templatecell": {
  "data": {},
  "type": "module"
 },
 "LFPy.templatecell.Cell": {
  "data": {
   "shadows": "LFPy.Cell"
  },
  "type": "import"
 },
 "LFPy.templatecell.RecExtElectrode": {
  "data": {
   "shadows": "LFPy.RecExtElectrode"
  },
  "type": "import"
 },
 "LFPy.templatecell.TemplateCell": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "LFPy.Cell"
   ]
  },
  "type": "class"
 },
 "LFPy.templatecell.TemplateCell.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "LFPy.Cell.__init__",
    "LFPy.templatecell.neuron",
    "LFPy.templatecell.os",
    "LFPy.templatecell.posixpath",
    "LFPy.templatecell.sys",
    "hasattr",
    "list",
    "print",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.templatecell.TemplateCell._create_sectionlists": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "LFPy.templatecell.neuron"
   ]
  },
  "type": "function"
 },
 "LFPy.templatecell.TemplateCell._load_geometry": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Exception",
    "LFPy.templatecell.neuron",
    "ValueError",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "LFPy.templatecell._run_simulation": {
  "data": {
   "shadows": "LFPy.run_simulation._run_simulation"
  },
  "type": "import"
 },
 "LFPy.templatecell._run_simulation_with_electrode": {
  "data": {
   "shadows": "LFPy.run_simulation._run_simulation_with_electrode"
  },
  "type": "import"
 },
 "LFPy.templatecell.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.templatecell.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.templatecell.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.templatecell.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "LFPy.templatecell.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "LFPy.templatecell.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "LFPy.test": {
  "data": {},
  "type": "module"
 },
 "LFPy.test._test": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "LFPy.test.unittest",
    "print"
   ]
  },
  "type": "function"
 },
 "LFPy.test.common": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.common.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.common.analytical_LFP": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "complex_quadrature",
    "numpy.empty",
    "numpy.exp",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.tanh"
   ]
  },
  "type": "function"
 },
 "LFPy.test.common.analytical_LFP.f_to_integrate": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "i_mem",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.test.common.analytical_LFP.i_mem": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.cosh"
   ]
  },
  "type": "function"
 },
 "LFPy.test.common.complex_quadrature": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "scipy.integrate.quad"
   ]
  },
  "type": "function"
 },
 "LFPy.test.common.complex_quadrature.imag_func": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "func",
    "numpy.imag"
   ]
  },
  "type": "function"
 },
 "LFPy.test.common.complex_quadrature.real_func": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "func",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "LFPy.test.common.imag": {
  "data": {
   "shadows": "numpy.imag"
  },
  "type": "import"
 },
 "LFPy.test.common.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.test.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.common.quad": {
  "data": {
   "shadows": "scipy.integrate.quad"
  },
  "type": "import"
 },
 "LFPy.test.common.real": {
  "data": {
   "shadows": "numpy.real"
  },
  "type": "import"
 },
 "LFPy.test.common.stickSimulation": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "LFPy.test.common.LFPy",
    "LFPy.test.common.os",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.common.stickSimulationAveragingElectrode": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "LFPy.test.common.LFPy",
    "LFPy.test.common.os",
    "numpy.empty",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.test.common.stickSimulationDotprodcoeffs": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "LFPy.test.common.LFPy",
    "LFPy.test.common.os",
    "numpy.arange",
    "numpy.eye",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_alias_method": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_alias_method.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_alias_method.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_alias_method.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_alias_method.testAliasMethod": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "LFPy.test.test_alias_method.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_00": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "LFPy.test.test_alias_method.LFPy",
    "float",
    "numpy.arange",
    "numpy.histogram"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_01": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "LFPy.test.test_alias_method.LFPy",
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.corrcoef",
    "numpy.histogram"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_02": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "LFPy.test.test_alias_method.LFPy",
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.corrcoef",
    "numpy.histogram"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_03": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "LFPy.test.test_alias_method.LFPy",
    "float",
    "numpy.arange",
    "numpy.corrcoef",
    "numpy.histogram"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_04": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "LFPy.test.test_alias_method.LFPy",
    "float",
    "numpy.arange",
    "numpy.histogram"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_alias_method.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_cell": {
  "data": {
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.neuron",
    "LFPy.test.test_cell.os",
    "LFPy.test.test_cell.posixpath",
    "LFPy.test.test_cell.pth",
    "LFPy.test.test_cell.sys"
   ]
  },
  "type": "module"
 },
 "LFPy.test.test_cell.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_cell.cell_w_synapse_from_sections": {
  "data": {
   "lineno": 1881,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "LFPy.test.test_cell.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.test.test_cell.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_cell.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_cell.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "LFPy.test.test_cell.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "LFPy.test.test_cell.pth": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "LFPy.test.test_cell.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "LFPy.test.test_cell.stickSimulationTesttvec": {
  "data": {
   "lineno": 1873,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "LFPy.test.test_cell.testCell": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "LFPy.test.test_cell.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_cell.testCell.test_cell_cellpickler_00": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "LFPy.test.test_cell.pickle",
    "dir",
    "getattr",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_chiral_morphology_00": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_chiral_morphology_01": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_chiral_morphology_02": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_distort_geometry_01": {
  "data": {
   "lineno": 1852,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "getattr",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_00": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "copy.copy",
    "dend1",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_01": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "copy.copy",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_02": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "copy.copy",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_03": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "LFPy.test.test_cell.random",
    "cell_w_synapse_from_sections",
    "copy.copy",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_04": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "copy.copy",
    "dend1",
    "dend1.connect",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_05": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "copy.copy",
    "dend1",
    "dend1.connect",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_06": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "copy.copy",
    "dend1",
    "dend1.connect",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_07": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "copy.copy",
    "dend1",
    "dend1.connect",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_08": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "copy.copy",
    "dend1",
    "dend1.connect",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_09": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "dend1",
    "dend1.connect",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_10": {
  "data": {
   "lineno": 910,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "dend1",
    "dend1.connect",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_11": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "copy.copy",
    "dend1",
    "dend1.connect",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_12": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "cell_w_synapse_from_sections",
    "copy.copy",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_13": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "cell_w_synapse_from_sections",
    "copy.copy",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_14": {
  "data": {
   "lineno": 988,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "dend1",
    "dend1.connect",
    "enumerate",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "range",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_15": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "dend1",
    "dend1.connect",
    "enumerate",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "range",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_16": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "copy.copy",
    "dend1",
    "dend1.connect",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_closest_idx_00": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_closest_idx_01": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_idx_00": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_idx_children_00": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_idx_name_00": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_idx_parent_children_00": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_intersegment_distance_00": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_intersegment_vector_00": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_rand_idx_area_norm_00": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.arange",
    "numpy.corrcoef",
    "numpy.histogram"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_rand_prob_area_norm_00": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_rand_prob_area_norm_from_idx": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_rand_prob_area_norm_from_idx_00": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_point_process_00": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_pos_00": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_pos_01": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_pos_02": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_pos_03": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_pos_04": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_pos_05": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_pos_06": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_rotation_00": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_rotation_01": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_rotation_02": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_rotation_03": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_rotation_04": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_rotation_05": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_rotation_06": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_synapse_00": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_current_dipole_moment_00": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.c_",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_current_dipole_moment_01": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.c_",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_current_dipole_moment_02": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.array",
    "numpy.c_",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_cvode_00": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_dotprodcoeffs_00": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.eye",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_dotprodcoeffs_01": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.eye",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_recorder_00": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_recorder_01": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_recorder_02": {
  "data": {
   "lineno": 1148,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_recorder_03": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_recorder_04": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_recorder_05": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_strip_hoc_objects_00": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "dir",
    "getattr",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tstart_00": {
  "data": {
   "lineno": 1463,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_00": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_01": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_02": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_03": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_04": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_05": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_06": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_07": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_08": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "AssertionError",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_09": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "AssertionError",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_with_recextelectrode_00": {
  "data": {
   "lineno": 1507,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_with_recextelectrode_01": {
  "data": {
   "lineno": 1557,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_with_recextelectrode_02": {
  "data": {
   "lineno": 1606,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_with_recextelectrode_03": {
  "data": {
   "lineno": 1655,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_with_recextelectrode_and_cvode_00": {
  "data": {
   "lineno": 1704,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "numpy.linspace",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_get_multi_current_dipole_moments_00": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "dend1",
    "dend1.connect",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_get_multi_current_dipole_moments_01": {
  "data": {
   "lineno": 1772,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "dend1",
    "dend1.connect",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_get_multi_current_dipole_moments_02": {
  "data": {
   "lineno": 1794,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "dend1",
    "dend2",
    "numpy.sum",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_get_multi_current_dipole_moments_03": {
  "data": {
   "lineno": 1814,
   "symbols_in_volume": [
    "LFPy.test.test_cell.neuron",
    "cell_w_synapse_from_sections",
    "dend1",
    "dend1.connect",
    "dend2",
    "dend2.connect",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_get_multi_current_dipole_moments_04": {
  "data": {
   "lineno": 1840,
   "symbols_in_volume": [
    "LFPy.test.test_cell.LFPy",
    "LFPy.test.test_cell.os",
    "cell_w_synapse_from_sections",
    "numpy.sum",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_cell.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_eegmegcalc": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_eegmegcalc.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_eegmegcalc.cell_w_synapse_from_sections": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.cell_w_synapse_from_sections_w_electrode": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.decompose_dipole": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.make_class_object",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.make_class_object": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.make_simple_class_object": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.test.test_eegmegcalc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_eegmegcalc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_phi01": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "make_class_object",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_phi02": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "numpy.array",
    "numpy.isnan",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_potential": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_potential01": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "LFPy.test.test_eegmegcalc.os",
    "len",
    "numpy.abs",
    "numpy.load",
    "numpy.max",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_potential02": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "len",
    "numpy.array",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_potential_from_multi_dipoles_00": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "LFPy.test.test_eegmegcalc.neuron",
    "cell_w_synapse_from_sections",
    "dend1",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_potential_from_multi_dipoles_01": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "LFPy.test.test_eegmegcalc.neuron",
    "cell_w_synapse_from_sections",
    "dend1",
    "dend1.connect",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "range",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_theta": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "make_class_object",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_vn": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "make_simple_class_object",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_yn": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "make_simple_class_object",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_zn": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "make_simple_class_object",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_check_params00": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "RuntimeError",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_check_params01": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "RuntimeError",
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_check_params02": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "ValueError",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_decompose_dipole01": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "decompose_dipole",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_decompose_dipole02": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_rad_dipole": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "decompose_dipole",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_rad_sign": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "make_class_object",
    "numpy.array",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_rz_params": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "RuntimeError",
    "numpy.array",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_tan_dipole": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "decompose_dipole",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testInfiniteVolumeConductor": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_eegmegcalc.testInfiniteVolumeConductor.test_get_dipole_potential": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testInfiniteVolumeConductor.test_get_multi_dipole_potential_00": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "LFPy.test.test_eegmegcalc.neuron",
    "cell_w_synapse_from_sections_w_electrode",
    "dend1",
    "dend1.connect",
    "dend2",
    "dend3",
    "dend4",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "soma"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testInfiniteVolumeConductor.test_get_multi_dipole_potential_01": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "LFPy.test.test_eegmegcalc.os",
    "cell_w_synapse_from_sections_w_electrode",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testInfiniteVolumeConductor.test_get_multi_dipole_potential_02": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "LFPy.test.test_eegmegcalc.os",
    "cell_w_synapse_from_sections_w_electrode",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testMEG": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_eegmegcalc.testMEG.test_MEG_00": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "numpy.eye",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testMEG.test_MEG_01": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "numpy.eye",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testMEG.test_MEG_02": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "numpy.eye",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testMEG.test_MEG_03": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "numpy.eye",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testMEG.test_MEG_04": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "numpy.eye",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testMEG.test_MEG_05": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "numpy.eye",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testOneSphereVolumeConductor": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_eegmegcalc.testOneSphereVolumeConductor.test_OneSphereVolumeConductor_00": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "abs",
    "numpy.arange",
    "numpy.array",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testOneSphereVolumeConductor.test_OneSphereVolumeConductor_01": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "abs",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testOneSphereVolumeConductor.test_OneSphereVolumeConductor_02": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "LFPy.test.test_eegmegcalc.LFPy",
    "LFPy.test.test_eegmegcalc.os",
    "abs",
    "enumerate",
    "numpy.arange",
    "numpy.array",
    "numpy.pi",
    "numpy.r_",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_imem": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_imem.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_imem.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "LFPy.test.test_imem.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_imem.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_imem.test_imem": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "LFPy.test.test_imem.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_imem.test_imem.test_cell_v_init_00": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "LFPy.test.test_imem.LFPy",
    "LFPy.test.test_imem.os",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_imem.test_imem.test_cell_v_init_01": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "LFPy.test.test_imem.LFPy",
    "LFPy.test.test_imem.os",
    "dict",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_imem.test_imem.test_cell_v_init_02": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "LFPy.test.test_imem.LFPy",
    "LFPy.test.test_imem.os",
    "dict",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_imem.test_imem.test_cell_v_init_03": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "LFPy.test.test_imem.LFPy",
    "LFPy.test.test_imem.os",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_imem.test_imem.test_cell_v_init_04": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "LFPy.test.test_imem.LFPy",
    "LFPy.test.test_imem.os",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_imem.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_inputgenerators": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_inputgenerators.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_inputgenerators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_inputgenerators.st": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "LFPy.test.test_inputgenerators.testInputGenerators": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "LFPy.test.test_inputgenerators.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_inputgenerators.testInputGenerators.test_get_activation_times_from_distribution": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "LFPy.test.test_inputgenerators.LFPy",
    "dict",
    "len",
    "scipy.stats.expon"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_inputgenerators.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_lfpcalc": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_lfpcalc.DummyCell": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_lfpcalc.DummyCell.__init__": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "len",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.DummyCell.get_idx": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.lfpcalc": {
  "data": {
   "shadows": "LFPy.lfpcalc"
  },
  "type": "import"
 },
 "LFPy.test.test_lfpcalc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "LFPy.test.test_lfpcalc.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_linesource_moi_20steps": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_linesource_moi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_linesource_moi_doubling": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_linesource",
    "LFPy.lfpcalc.calc_lfp_linesource_moi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_linesource_moi_infinite_slice": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_linesource_moi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_linesource_moi_saline_effect": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_linesource_moi",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_linesource_moi_too_close": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_linesource",
    "LFPy.lfpcalc.calc_lfp_linesource_moi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_linesource_too_close": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_linesource",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_moi_ecog": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_pointsource_moi",
    "numpy.abs",
    "numpy.pi",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_pointsource",
    "numpy.pi",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource_anisotropic": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_pointsource_anisotropic",
    "numpy.array",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource_moi_20steps": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_pointsource_moi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource_moi_doubling": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_pointsource",
    "LFPy.lfpcalc.calc_lfp_pointsource_moi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource_moi_homogeneous": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_pointsource",
    "LFPy.lfpcalc.calc_lfp_pointsource_moi",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource_moi_infinite_slice": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_pointsource_moi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource_moi_saline_effect": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_pointsource_moi",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource_moi_too_close": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_pointsource",
    "LFPy.lfpcalc.calc_lfp_pointsource_moi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_soma_as_point_moi_20steps": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_soma_as_point_moi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_soma_as_point_moi_doubling": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_soma_as_point",
    "LFPy.lfpcalc.calc_lfp_soma_as_point_moi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_soma_as_point_moi_infinite_slice": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_soma_as_point_moi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_soma_as_point_moi_saline_effect": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_soma_as_point_moi",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_soma_as_point_moi_too_close": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.calc_lfp_soma_as_point",
    "LFPy.lfpcalc.calc_lfp_soma_as_point_moi",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_deltaS_calc": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc._deltaS_calc",
    "numpy.sqrt",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_return_dist_from_segment": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "DummyCell",
    "LFPy.lfpcalc.return_dist_from_segments",
    "numpy.sqrt",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_misc": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_misc.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.test.test_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_misc.testMisc": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "LFPy.test.test_misc.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_00": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "LFPy.test.test_misc.neuron",
    "initialize",
    "integrate",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_00.collect_i_membrane": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_00.initialize": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "LFPy.test.test_misc.neuron"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_00.integrate": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "LFPy.test.test_misc.neuron",
    "collect_i_membrane"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_01": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "LFPy.test.test_misc.neuron",
    "initialize",
    "integrate",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_01.collect_i_membrane": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_01.initialize": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "LFPy.test.test_misc.neuron"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_01.integrate": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "LFPy.test.test_misc.neuron",
    "collect_i_membrane"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_misc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_morphology_import": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_morphology_import.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_morphology_import.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_morphology_import.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_morphology_import.testMorphologyImport": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "LFPy.test.test_morphology_import.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_morphology_import.testMorphologyImport.test_morphology_import_00": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "LFPy.test.test_morphology_import.LFPy",
    "LFPy.test.test_morphology_import.os",
    "numpy.array",
    "numpy.c_",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_morphology_import.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_network": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_network.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_network.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "LFPy.test.test_network.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.test.test_network.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_network.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_network.ss": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "LFPy.test.test_network.testNetwork": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "LFPy.test.test_network.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_network.testNetwork.test_Network_00": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "LFPy.test.test_network.LFPy",
    "LFPy.test.test_network.neuron",
    "LFPy.test.test_network.os",
    "dict",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.sqrt",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_01": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "LFPy.test.test_network.LFPy",
    "LFPy.test.test_network.neuron",
    "LFPy.test.test_network.os",
    "dict",
    "len",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_02": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "LFPy.test.test_network.LFPy",
    "LFPy.test.test_network.neuron",
    "LFPy.test.test_network.os",
    "dict",
    "numpy.all",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_03": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "LFPy.test.test_network.LFPy",
    "LFPy.test.test_network.h5py",
    "LFPy.test.test_network.neuron",
    "LFPy.test.test_network.os",
    "dict",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.sqrt",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_04": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "LFPy.test.test_network.LFPy",
    "LFPy.test.test_network.neuron",
    "LFPy.test.test_network.os",
    "dict",
    "numpy.array",
    "numpy.greater",
    "numpy.testing.assert_equal",
    "range",
    "scipy.signal.argrelextrema"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_05": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "LFPy.test.test_network.LFPy",
    "LFPy.test.test_network.h5py",
    "LFPy.test.test_network.neuron",
    "LFPy.test.test_network.os",
    "dict",
    "len",
    "numpy.all",
    "numpy.arange",
    "numpy.sqrt",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_network.testNetworkPopulation": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "LFPy.test.test_network.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_network.testNetworkPopulation.test_NetworkPopulation_00": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "LFPy.test.test_network.LFPy",
    "LFPy.test.test_network.neuron",
    "LFPy.test.test_network.os",
    "dict",
    "len",
    "numpy.arange",
    "numpy.sqrt",
    "numpy.testing.assert_equal",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_network.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_networkcell": {
  "data": {
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.neuron",
    "LFPy.test.test_networkcell.os",
    "LFPy.test.test_networkcell.posixpath",
    "LFPy.test.test_networkcell.pth",
    "LFPy.test.test_networkcell.sys"
   ]
  },
  "type": "module"
 },
 "LFPy.test.test_networkcell.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_networkcell.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.test.test_networkcell.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_networkcell.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_networkcell.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "LFPy.test.test_networkcell.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "LFPy.test.test_networkcell.pth": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "LFPy.test.test_networkcell.stickSimulationTesttvec": {
  "data": {
   "lineno": 1343,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "LFPy.test.test_networkcell.testNetworkCell": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_cellpickler_00": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "LFPy.test.test_networkcell.pickle",
    "dir",
    "getattr",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_chiral_morphology_00": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_chiral_morphology_01": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_chiral_morphology_02": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_distort_geometry_01": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "getattr",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_closest_idx_00": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_idx_00": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_idx_children_00": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_idx_name_00": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_idx_parent_children_00": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_intersegment_distance_00": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_intersegment_vector_00": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_rand_idx_area_norm_00": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.arange",
    "numpy.corrcoef",
    "numpy.histogram"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_rand_prob_area_norm_00": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_rand_prob_area_norm_from_idx": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_rand_prob_area_norm_from_idx_00": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_point_process_00": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_pos_00": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_pos_01": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_pos_02": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_pos_03": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_pos_04": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_pos_05": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_pos_06": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_rotation_00": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_rotation_01": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_rotation_02": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_rotation_03": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_rotation_04": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_rotation_05": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_rotation_06": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_synapse_00": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_current_dipole_moment_00": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.c_",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_current_dipole_moment_01": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.c_",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_current_dipole_moment_02": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.array",
    "numpy.c_",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_recorder_00": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_recorder_01": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_recorder_02": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_recorder_03": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_recorder_04": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_recorder_05": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_strip_hoc_objects_00": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "dir",
    "getattr",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tstart_00": {
  "data": {
   "lineno": 1061,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_00": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_01": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_02": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_03": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_04": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_05": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_06": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_07": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_08": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "AssertionError",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_09": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "AssertionError",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_with_recextelectrode_00": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_with_recextelectrode_01": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_with_recextelectrode_02": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_with_recextelectrode_03": {
  "data": {
   "lineno": 1265,
   "symbols_in_volume": [
    "LFPy.test.test_networkcell.LFPy",
    "LFPy.test.test_networkcell.os",
    "int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_networkcell.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_pointprocess": {
  "data": {
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.LFPy",
    "LFPy.test.test_pointprocess.neuron",
    "LFPy.test.test_pointprocess.os",
    "LFPy.test.test_pointprocess.posixpath",
    "LFPy.test.test_pointprocess.pth",
    "LFPy.test.test_pointprocess.sys"
   ]
  },
  "type": "module"
 },
 "LFPy.test.test_pointprocess.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_pointprocess.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.test.test_pointprocess.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_pointprocess.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_pointprocess.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "LFPy.test.test_pointprocess.pth": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "LFPy.test.test_pointprocess.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "LFPy.test.test_pointprocess.testPointProcess": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_pointprocess.testPointProcess.test_PointProcess_00": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.LFPy",
    "LFPy.test.test_pointprocess.os",
    "numpy.alltrue",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode.test_StimIntElectrode_00": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.LFPy",
    "LFPy.test.test_pointprocess.os",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode.test_StimIntElectrode_01": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.LFPy",
    "LFPy.test.test_pointprocess.os",
    "dict",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode.test_StimIntElectrode_02": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.LFPy",
    "LFPy.test.test_pointprocess.os",
    "dict",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode.test_StimIntElectrode_03": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.LFPy",
    "LFPy.test.test_pointprocess.os",
    "hasattr",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_00": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.LFPy",
    "LFPy.test.test_pointprocess.os",
    "numpy.arange",
    "numpy.array",
    "numpy.exp",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_01": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.LFPy",
    "LFPy.test.test_pointprocess.os",
    "hasattr",
    "numpy.arange",
    "numpy.array",
    "numpy.exp",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_02": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.LFPy",
    "LFPy.test.test_pointprocess.os",
    "numpy.arange",
    "numpy.array",
    "numpy.exp",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_03": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.LFPy",
    "LFPy.test.test_pointprocess.os",
    "numpy.arange",
    "numpy.exp",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_04": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.LFPy",
    "LFPy.test.test_pointprocess.os",
    "numpy.arange",
    "numpy.array",
    "numpy.exp",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_05": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "LFPy.test.test_pointprocess.LFPy",
    "LFPy.test.test_pointprocess.os",
    "numpy.arange",
    "numpy.array",
    "numpy.exp",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_recextelectrode": {
  "data": {
   "symbols_in_volume": [
    "LFPy.test.test_recextelectrode.LFPy",
    "LFPy.test.test_recextelectrode.neuron",
    "LFPy.test.test_recextelectrode.os",
    "LFPy.test.test_recextelectrode.posixpath",
    "LFPy.test.test_recextelectrode.pth",
    "LFPy.test.test_recextelectrode.sys"
   ]
  },
  "type": "module"
 },
 "LFPy.test.test_recextelectrode.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_recextelectrode.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.test.test_recextelectrode.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_recextelectrode.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_recextelectrode.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "LFPy.test.test_recextelectrode.pth": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "LFPy.test.test_recextelectrode.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "LFPy.test.test_recextelectrode.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_bad_cell_position_in_slice": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "LFPy.test.test_recextelectrode.LFPy",
    "LFPy.test.test_recextelectrode.os",
    "RuntimeError",
    "numpy.linspace",
    "numpy.pi",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_compare_anisotropic_lfp_methods": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "AssertionError",
    "LFPy.test.test_recextelectrode.LFPy",
    "LFPy.test.test_recextelectrode.os",
    "numpy.array",
    "numpy.pi",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_electrical_stimulation": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "LFPy.test.test_recextelectrode.LFPy",
    "LFPy.test.test_recextelectrode.os",
    "numpy.array",
    "numpy.testing.assert_almost_equal",
    "numpy.zeros",
    "sim1",
    "sim2"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_electrical_stimulation.sim1": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "LFPy.test.test_recextelectrode.LFPy",
    "LFPy.test.test_recextelectrode.neuron"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_electrical_stimulation.sim2": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "LFPy.test.test_recextelectrode.LFPy",
    "LFPy.test.test_recextelectrode.neuron"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_isotropic_version_of_anisotropic_methods": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "LFPy.test.test_recextelectrode.LFPy",
    "LFPy.test.test_recextelectrode.os",
    "numpy.linspace",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_linesource": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "abs",
    "analytical_LFP",
    "numpy.empty",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "range",
    "stickSimulation"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_linesource_contact_average_r10n100": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "abs",
    "analytical_LFP",
    "numpy.empty",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "range",
    "stickSimulationAveragingElectrode"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_linesource_dotprodcoeffs": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "abs",
    "analytical_LFP",
    "numpy.empty",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "range",
    "stickSimulationDotprodcoeffs"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_pointsource": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "abs",
    "analytical_LFP",
    "numpy.empty",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "range",
    "stickSimulation"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_pointsource_contact_average_r10n100": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "abs",
    "analytical_LFP",
    "numpy.empty",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "range",
    "stickSimulationAveragingElectrode"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_pointsource_dotprodcoeffs": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "abs",
    "analytical_LFP",
    "numpy.empty",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "range",
    "stickSimulationDotprodcoeffs"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_soma_as_point": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "abs",
    "analytical_LFP",
    "numpy.empty",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "range",
    "stickSimulation"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_soma_as_point_contact_average_r10n100": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "abs",
    "analytical_LFP",
    "numpy.empty",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "range",
    "stickSimulationAveragingElectrode"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_soma_as_point_dotprodcoeffs": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "abs",
    "analytical_LFP",
    "numpy.empty",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "range",
    "stickSimulationDotprodcoeffs"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_position_shifted_slice": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "LFPy.test.test_recextelectrode.LFPy",
    "LFPy.test.test_recextelectrode.os",
    "numpy.linspace",
    "numpy.pi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_return_comp_outside_slice": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "LFPy.test.test_recextelectrode.LFPy",
    "LFPy.test.test_recextelectrode.os",
    "RuntimeError",
    "numpy.array",
    "numpy.linspace",
    "numpy.pi",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_sigma_inputs": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "LFPy.test.test_recextelectrode.LFPy",
    "LFPy.test.test_recextelectrode.os",
    "ValueError",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_slice_shift_invariance_pointsource": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "LFPy.test.test_recextelectrode.LFPy",
    "LFPy.test.test_recextelectrode.os",
    "numpy.linspace",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_sqeeze_cell_and_bad_position": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "LFPy.test.test_recextelectrode.LFPy",
    "LFPy.test.test_recextelectrode.os",
    "RuntimeError",
    "numpy.linspace",
    "numpy.pi",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_templatecell": {
  "data": {
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.neuron",
    "LFPy.test.test_templatecell.os",
    "LFPy.test.test_templatecell.posixpath",
    "LFPy.test.test_templatecell.pth",
    "LFPy.test.test_templatecell.sys"
   ]
  },
  "type": "module"
 },
 "LFPy.test.test_templatecell.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_templatecell.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.test.test_templatecell.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_templatecell.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_templatecell.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "LFPy.test.test_templatecell.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "LFPy.test.test_templatecell.pth": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "LFPy.test.test_templatecell.stickSimulationTesttvec": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "LFPy.test.test_templatecell.testTemplateCell": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_cellpickler_00": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "LFPy.test.test_templatecell.pickle",
    "dir",
    "getattr",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_chiral_morphology_00": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_chiral_morphology_01": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_chiral_morphology_02": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_distort_geometry_01": {
  "data": {
   "lineno": 1318,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "getattr",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_closest_idx_00": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_idx_00": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_idx_children_00": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_idx_name_00": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_idx_parent_children_00": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_intersegment_distance_00": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_intersegment_vector_00": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_rand_idx_area_norm_00": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.arange",
    "numpy.corrcoef",
    "numpy.histogram"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_rand_prob_area_norm_00": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_rand_prob_area_norm_from_idx": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_rand_prob_area_norm_from_idx_00": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_point_process_00": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_pos_00": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_pos_01": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_pos_02": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_pos_03": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_pos_04": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_pos_05": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_pos_06": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_rotation_00": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_rotation_01": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_rotation_02": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_rotation_03": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_rotation_04": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_rotation_05": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_rotation_06": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_synapse_00": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_current_dipole_moment_00": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.c_",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_current_dipole_moment_01": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.c_",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_current_dipole_moment_02": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.array",
    "numpy.c_",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_recorder_00": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_recorder_01": {
  "data": {
   "lineno": 800,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_recorder_02": {
  "data": {
   "lineno": 828,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_recorder_03": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_recorder_04": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_recorder_05": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_strip_hoc_objects_00": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "dir",
    "getattr",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tstart_00": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_00": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_01": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_02": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_03": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_04": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_05": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_06": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_07": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "int",
    "numpy.linspace",
    "numpy.testing.assert_allclose",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_08": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "AssertionError",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_09": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "AssertionError",
    "stickSimulationTesttvec"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_with_recextelectrode_00": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_with_recextelectrode_01": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_with_recextelectrode_02": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_with_recextelectrode_03": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "LFPy.test.test_templatecell.LFPy",
    "LFPy.test.test_templatecell.os",
    "int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_templatecell.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_tools": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_tools.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_tools.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_tools.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "LFPy.test.test_tools.testTools": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "LFPy.test.test_tools.unittest"
   ]
  },
  "type": "class"
 },
 "LFPy.test.test_tools.testTools.test_tools_load_00": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "LFPy.test.test_tools.LFPy",
    "LFPy.test.test_tools.os",
    "LFPy.test.test_tools.pickle",
    "isinstance",
    "object",
    "open"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_tools.testTools.test_tools_noise_brown": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "LFPy.test.test_tools.LFPy"
   ]
  },
  "type": "function"
 },
 "LFPy.test.test_tools.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.tools": {
  "data": {},
  "type": "module"
 },
 "LFPy.tools.load": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "LFPy.tools.pickle",
    "open"
   ]
  },
  "type": "function"
 },
 "LFPy.tools.noise_brown": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "filter",
    "list",
    "numpy.random.normal",
    "numpy.zeros",
    "range",
    "rms_flat",
    "scipy.signal.lfilter"
   ]
  },
  "type": "function"
 },
 "LFPy.tools.noise_brown.rms_flat": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.absolute",
    "numpy.mean",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "LFPy.tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.tools.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "LFPy.tools.ss": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "LFPy.version": {
  "data": {},
  "type": "module"
 },
 "LFPy.version.version": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 }
}