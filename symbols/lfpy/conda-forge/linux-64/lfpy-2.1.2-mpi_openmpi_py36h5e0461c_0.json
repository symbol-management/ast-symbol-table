{
 "*": {
  "data": {
   "imports": [
    "LFPy.test.common"
   ]
  },
  "type": "star-import"
 },
 "LFPy": {
  "data": {},
  "type": "module"
 },
 "LFPy.__version__": {
  "data": {
   "shadows": "version"
  },
  "type": "import"
 },
 "LFPy.alias_method": {
  "data": {},
  "type": "module"
 },
 "LFPy.alias_method.alias_method": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      28
     ]
    },
    "LFPy.alias_method.alias_setup": {
     "line number": [
      32
     ]
    },
    "ae": {
     "line number": [
      29
     ]
    },
    "int": {
     "line number": [
      35,
      43
     ]
    },
    "numpy.floor": {
     "line number": [
      43
     ]
    },
    "numpy.random.rand": {
     "line number": [
      38
     ]
    },
    "numpy.zeros": {
     "line number": [
      35
     ]
    },
    "range": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.alias_method.alias_setup": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "int": {
     "line number": [
      71,
      75,
      76
     ]
    },
    "numpy.zeros": {
     "line number": [
      71,
      75,
      76
     ]
    },
    "range": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.alias_method.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.cell": {
  "data": {
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      34
     ]
    },
    "LFPy.cell.neuron": {
     "line number": [
      31,
      35
     ]
    },
    "warnings.warn": {
     "line number": [
      33,
      35
     ]
    }
   }
  },
  "type": "module"
 },
 "LFPy.cell.Cell": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "object": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.cell.Cell.__del__": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "LFPy.cell.Cell.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      163,
      164,
      168,
      169,
      190,
      191,
      206,
      217,
      218,
      222,
      228
     ]
    },
    "DeprecationWarning": {
     "line number": [
      146,
      148,
      150,
      152,
      154
     ]
    },
    "Exception": {
     "line number": [
      200,
      207
     ]
    },
    "LFPy.cell.neuron": {
     "line number": [
      171,
      172,
      173,
      176,
      179,
      180,
      182,
      183,
      203,
      210,
      294,
      296,
      297,
      300
     ]
    },
    "LFPy.cell.os": {
     "line number": [
      194,
      197
     ]
    },
    "LFPy.cell.posixpath": {
     "line number": [
      194
     ]
    },
    "LFPy.cell.sys": {
     "line number": [
      192
     ]
    },
    "ValueError": {
     "line number": [
      158
     ]
    },
    "dict": {
     "line number": [
      118,
      162
     ]
    },
    "hasattr": {
     "line number": [
      171,
      286
     ]
    },
    "isinstance": {
     "line number": [
      176,
      182
     ]
    },
    "numpy.arange": {
     "line number": [
      221
     ]
    },
    "print": {
     "line number": [
      178,
      225,
      255,
      267,
      273,
      290,
      295
     ]
    },
    "str": {
     "line number": [
      192,
      196
     ]
    },
    "sum": {
     "line number": [
      179,
      183
     ]
    },
    "type": {
     "line number": [
      162,
      176,
      182,
      192,
      196,
      203,
      203
     ]
    },
    "warnings.warn": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._calc_icap": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1141
     ]
    },
    "range": {
     "line number": [
      1142
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._calc_imem": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1123
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._calc_ipas": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1131
     ]
    },
    "range": {
     "line number": [
      1132
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._calc_midpoints": {
  "data": {
   "lineno": 709
  },
  "type": "function"
 },
 "LFPy.cell.Cell._calc_totnsegs": {
  "data": {
   "lineno": 500
  },
  "type": "function"
 },
 "LFPy.cell.Cell._check_currents": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      511
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_geometry": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      707
     ]
    },
    "_collect_geometry_neuron": {
     "line number": [
      679
     ]
    },
    "hasattr": {
     "line number": [
      668
     ]
    },
    "numpy.array": {
     "line number": [
      701
     ]
    },
    "numpy.zeros": {
     "line number": [
      688,
      693,
      702
     ]
    },
    "print": {
     "line number": [
      699,
      700
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_istim": {
  "data": {
   "lineno": 1175
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_isyn": {
  "data": {
   "lineno": 1155
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_pt3d": {
  "data": {
   "lineno": 1840,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      1848,
      1852,
      1853,
      1854,
      1855
     ]
    },
    "int": {
     "line number": [
      1848
     ]
    },
    "len": {
     "line number": [
      1864,
      1868
     ]
    },
    "numpy.zeros": {
     "line number": [
      1849,
      1849,
      1849,
      1850
     ]
    },
    "range": {
     "line number": [
      1851,
      1868
     ]
    },
    "sec": {
     "line number": [
      1847,
      1848,
      1852,
      1853,
      1854,
      1855
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_rec_variables": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1203
     ]
    },
    "print": {
     "line number": [
      1205
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_tvec": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1114
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_vmem": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1151
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_vstim": {
  "data": {
   "lineno": 1185
  },
  "type": "function"
 },
 "LFPy.cell.Cell._collect_vsyn": {
  "data": {
   "lineno": 1165
  },
  "type": "function"
 },
 "LFPy.cell.Cell._create_polygon": {
  "data": {
   "lineno": 1999,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      2001,
      2002
     ]
    },
    "numpy.arctan2": {
     "line number": [
      2010
     ]
    },
    "numpy.cos": {
     "line number": [
      2020,
      2026,
      2026,
      2030,
      2035,
      2041,
      2041,
      2045
     ]
    },
    "numpy.diff": {
     "line number": [
      2008,
      2009
     ]
    },
    "numpy.r_": {
     "line number": [
      2012,
      2013,
      2015,
      2016
     ]
    },
    "numpy.sin": {
     "line number": [
      2019,
      2024,
      2024,
      2029,
      2034,
      2039,
      2039,
      2044
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._create_sectionlists": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      433,
      434,
      435,
      440,
      445,
      446
     ]
    },
    "isinstance": {
     "line number": [
      433
     ]
    },
    "type": {
     "line number": [
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._create_segment_polygon": {
  "data": {
   "lineno": 2097,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      2100,
      2101,
      2102,
      2103
     ]
    },
    "numpy.arctan2": {
     "line number": [
      2111
     ]
    },
    "numpy.cos": {
     "line number": [
      2118,
      2122,
      2127,
      2131
     ]
    },
    "numpy.diff": {
     "line number": [
      2109,
      2110
     ]
    },
    "numpy.r_": {
     "line number": [
      2113,
      2114
     ]
    },
    "numpy.sin": {
     "line number": [
      2117,
      2121,
      2126,
      2130
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._get_idx": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      455
     ]
    },
    "bool": {
     "line number": [
      456,
      458
     ]
    },
    "numpy.array": {
     "line number": [
      463
     ]
    },
    "numpy.empty": {
     "line number": [
      464
     ]
    },
    "numpy.ones": {
     "line number": [
      456
     ]
    },
    "numpy.zeros": {
     "line number": [
      458
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._get_rotation": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "LFPy.cell.os": {
     "line number": [
      413,
      414
     ]
    },
    "float": {
     "line number": [
      421
     ]
    },
    "open": {
     "line number": [
      416
     ]
    },
    "str": {
     "line number": [
      412,
      421
     ]
    },
    "type": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._load_geometry": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      343,
      347,
      351
     ]
    },
    "LFPy.cell.neuron": {
     "line number": [
      322,
      324,
      326,
      330,
      332,
      342,
      345,
      349,
      352,
      354
     ]
    },
    "ValueError": {
     "line number": [
      334
     ]
    },
    "hasattr": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._loadspikes": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": {
    "float": {
     "line number": [
      1217
     ]
    },
    "hasattr": {
     "line number": [
      1213
     ]
    },
    "int": {
     "line number": [
      1215,
      1216
     ]
    },
    "len": {
     "line number": [
      1214,
      1214
     ]
    },
    "range": {
     "line number": [
      1215,
      1216
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._parent_and_segment_current": {
  "data": {
   "lineno": 2466,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      2512
     ]
    },
    "len": {
     "line number": [
      2522
     ]
    },
    "numpy.take": {
     "line number": [
      2519
     ]
    },
    "numpy.where": {
     "line number": [
      2520
     ]
    },
    "range": {
     "line number": [
      2522
     ]
    },
    "sec": {
     "line number": [
      2512
     ]
    },
    "zip": {
     "line number": [
      2526
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._real_positions": {
  "data": {
   "lineno": 1660
  },
  "type": "function"
 },
 "LFPy.cell.Cell._real_pt3d_positions": {
  "data": {
   "lineno": 1987,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1993,
      1994,
      1995
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._rel_positions": {
  "data": {
   "lineno": 1647,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1651,
      1654
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._rel_pt3d_positions": {
  "data": {
   "lineno": 1979,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1981
     ]
    },
    "numpy.transpose": {
     "line number": [
      1981
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._run_custom_codes": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      375,
      382
     ]
    },
    "LFPy.cell.neuron": {
     "line number": [
      366,
      392
     ]
    },
    "LFPy.cell.os": {
     "line number": [
      363
     ]
    },
    "LFPy.cell.posixpath": {
     "line number": [
      363
     ]
    },
    "LFPy.cell.sys": {
     "line number": [
      362,
      377
     ]
    },
    "RuntimeError": {
     "line number": [
      367
     ]
    },
    "exec": {
     "line number": [
      378,
      380
     ]
    },
    "fun": {
     "line number": [
      388
     ]
    },
    "globals": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_current_dipole_moment_array": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1419
     ]
    },
    "numpy.zeros": {
     "line number": [
      1419
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_extracellular": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_icap_recorders": {
  "data": {
   "lineno": 1308,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      1312,
      1316,
      1319
     ]
    },
    "int": {
     "line number": [
      1316
     ]
    },
    "sec": {
     "line number": [
      1313,
      1314
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_imem_recorders": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      1271,
      1275,
      1278
     ]
    },
    "int": {
     "line number": [
      1275
     ]
    },
    "sec": {
     "line number": [
      1272,
      1273
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_ipas_recorders": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      1297,
      1301,
      1304
     ]
    },
    "int": {
     "line number": [
      1301
     ]
    },
    "sec": {
     "line number": [
      1298,
      1299
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_ipointprocess_recorders": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      1327,
      1332,
      1335,
      1338
     ]
    },
    "enumerate": {
     "line number": [
      1328
     ]
    },
    "int": {
     "line number": [
      1332
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_isyn_recorders": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      1364,
      1369,
      1372,
      1375
     ]
    },
    "enumerate": {
     "line number": [
      1365
     ]
    },
    "int": {
     "line number": [
      1369
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_nsegs": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": {
    "print": {
     "line number": [
      407
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_nsegs_fixed_length": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "int": {
     "line number": [
      498
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_nsegs_lambda100": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_nsegs_lambda_f": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      485,
      487
     ]
    },
    "int": {
     "line number": [
      487
     ]
    },
    "print": {
     "line number": [
      489
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_passive": {
  "data": {
   "lineno": 521
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_pt3d_pos": {
  "data": {
   "lineno": 1892,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1897
     ]
    },
    "range": {
     "line number": [
      1897
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_pt3d_rotation": {
  "data": {
   "lineno": 1904,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1926,
      1945,
      1964
     ]
    },
    "numpy.array": {
     "line number": [
      1923,
      1942,
      1961
     ]
    },
    "numpy.cos": {
     "line number": [
      1924,
      1925,
      1942,
      1944,
      1961,
      1962
     ]
    },
    "numpy.dot": {
     "line number": [
      1930,
      1949,
      1968
     ]
    },
    "numpy.sin": {
     "line number": [
      1924,
      1925,
      1942,
      1944,
      1961,
      1962
     ]
    },
    "print": {
     "line number": [
      1935,
      1938,
      1954,
      1957,
      1973,
      1976
     ]
    },
    "range": {
     "line number": [
      1926,
      1945,
      1964
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_ra_and_cm": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_soma_volt_recorder": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      1228,
      1232,
      1237,
      1252
     ]
    },
    "divmod": {
     "line number": [
      1239,
      1254
     ]
    },
    "int": {
     "line number": [
      1228,
      1237
     ]
    },
    "sec": {
     "line number": [
      1230,
      1233,
      1234,
      1241,
      1242,
      1256,
      1257
     ]
    },
    "warnings.warn": {
     "line number": [
      1224
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_time_recorders": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      1287,
      1288,
      1290,
      1291
     ]
    },
    "int": {
     "line number": [
      1287
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_variable_recorders": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      1445
     ]
    },
    "LFPy.cell.neuron": {
     "line number": [
      1429,
      1431,
      1436,
      1438
     ]
    },
    "NameError": {
     "line number": [
      1445
     ]
    },
    "getattr": {
     "line number": [
      1441,
      1444
     ]
    },
    "int": {
     "line number": [
      1436
     ]
    },
    "print": {
     "line number": [
      1446
     ]
    },
    "sec": {
     "line number": [
      1433,
      1434
     ]
    },
    "sec.name": {
     "line number": [
      1447
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_voltage_recorders": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      1401,
      1405,
      1408
     ]
    },
    "int": {
     "line number": [
      1405
     ]
    },
    "sec": {
     "line number": [
      1402,
      1403
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_vpointprocess_recorders": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      1345,
      1351,
      1354,
      1357
     ]
    },
    "enumerate": {
     "line number": [
      1346
     ]
    },
    "int": {
     "line number": [
      1351
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._set_vsyn_recorders": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      1382,
      1388,
      1391,
      1394
     ]
    },
    "enumerate": {
     "line number": [
      1383
     ]
    },
    "int": {
     "line number": [
      1388
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._squeeze_me_macaroni": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1638,
      1639,
      1641,
      1642,
      1644,
      1645
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._update_pt3d": {
  "data": {
   "lineno": 1875,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      1880,
      1882,
      1888
     ]
    },
    "enumerate": {
     "line number": [
      1879
     ]
    },
    "int": {
     "line number": [
      1880
     ]
    },
    "range": {
     "line number": [
      1881
     ]
    },
    "sec": {
     "line number": [
      1879,
      1880,
      1886
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell._update_synapse_positions": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": {
    "len": {
     "line number": [
      1520
     ]
    },
    "range": {
     "line number": [
      1520
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.cellpickler": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": {
    "LFPy.cell.pickle": {
     "line number": [
      1487,
      1508,
      1510,
      1513,
      1514
     ]
    },
    "open": {
     "line number": [
      1509
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.chiral_morphology": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1626
     ]
    },
    "print": {
     "line number": [
      1629
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.distort_geometry": {
  "data": {
   "lineno": 2541,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      2565,
      2566,
      2569,
      2570
     ]
    },
    "abs": {
     "line number": [
      2564
     ]
    },
    "getattr": {
     "line number": [
      2573,
      2574,
      2575
     ]
    },
    "numpy.c_": {
     "line number": [
      2573
     ]
    },
    "numpy.sqrt": {
     "line number": [
      2590
     ]
    },
    "setattr": {
     "line number": [
      2585,
      2586,
      2587
     ]
    },
    "zip": {
     "line number": [
      2572
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.enable_extracellular_stimulation": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": {
    "int": {
     "line number": [
      938,
      953
     ]
    },
    "len": {
     "line number": [
      945,
      948,
      948,
      950,
      956
     ]
    },
    "list": {
     "line number": [
      925
     ]
    },
    "numpy.any": {
     "line number": [
      936,
      936,
      952,
      952
     ]
    },
    "numpy.arange": {
     "line number": [
      939
     ]
    },
    "numpy.array": {
     "line number": [
      937,
      961
     ]
    },
    "numpy.newaxis": {
     "line number": [
      957
     ]
    },
    "numpy.zeros": {
     "line number": [
      950
     ]
    },
    "print": {
     "line number": [
      930,
      942
     ]
    },
    "type": {
     "line number": [
      925
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_axial_currents_from_vmem": {
  "data": {
   "lineno": 2262,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      2297
     ]
    },
    "LFPy.cell.neuron": {
     "line number": [
      2311,
      2331
     ]
    },
    "hasattr": {
     "line number": [
      2296
     ]
    },
    "len": {
     "line number": [
      2335
     ]
    },
    "numpy.abs": {
     "line number": [
      2346
     ]
    },
    "numpy.array": {
     "line number": [
      2345,
      2370,
      2384,
      2388,
      2399,
      2399,
      2399
     ]
    },
    "numpy.c_": {
     "line number": [
      2302,
      2305
     ]
    },
    "sec": {
     "line number": [
      2310,
      2311,
      2331,
      2350,
      2363
     ]
    },
    "sec.name": {
     "line number": [
      2337,
      2349
     ]
    },
    "sec.nseg": {
     "line number": [
      2312
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_axial_resistance": {
  "data": {
   "lineno": 2401,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      2423
     ]
    },
    "numpy.zeros": {
     "line number": [
      2419
     ]
    },
    "sec": {
     "line number": [
      2421,
      2422,
      2423
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_closest_idx": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": {
    "numpy.argmin": {
     "line number": [
      773
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_dict_of_children_idx": {
  "data": {
   "lineno": 2428,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      2442
     ]
    },
    "int": {
     "line number": [
      2444
     ]
    },
    "sec": {
     "line number": [
      2440,
      2442
     ]
    },
    "sec.name": {
     "line number": [
      2441,
      2444
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_dict_parent_connections": {
  "data": {
   "lineno": 2449,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      2462
     ]
    },
    "enumerate": {
     "line number": [
      2461
     ]
    },
    "sec": {
     "line number": [
      2461,
      2462
     ]
    },
    "sec.name": {
     "line number": [
      2462
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      735,
      737
     ]
    },
    "list": {
     "line number": [
      742
     ]
    },
    "numpy.arange": {
     "line number": [
      753
     ]
    },
    "numpy.inf": {
     "line number": [
      715,
      715
     ]
    },
    "print": {
     "line number": [
      749
     ]
    },
    "str": {
     "line number": [
      738,
      749
     ]
    },
    "type": {
     "line number": [
      738,
      742
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx_children": {
  "data": {
   "lineno": 1748,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      1767
     ]
    },
    "numpy.array": {
     "line number": [
      1783
     ]
    },
    "numpy.where": {
     "line number": [
      1780
     ]
    },
    "numpy.zeros": {
     "line number": [
      1756
     ]
    },
    "sec": {
     "line number": [
      1760,
      1761,
      1765,
      1767,
      1770,
      1774,
      1776
     ]
    },
    "sec.name": {
     "line number": [
      1762,
      1766,
      1769,
      1771
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx_name": {
  "data": {
   "lineno": 1806,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1828
     ]
    },
    "int": {
     "line number": [
      1806,
      1818,
      1823
     ]
    },
    "len": {
     "line number": [
      1820
     ]
    },
    "numpy.any": {
     "line number": [
      1826
     ]
    },
    "numpy.array": {
     "line number": [
      1806,
      1819,
      1823,
      1838
     ]
    },
    "numpy.int64": {
     "line number": [
      1818
     ]
    },
    "numpy.where": {
     "line number": [
      1827
     ]
    },
    "object": {
     "line number": [
      1838
     ]
    },
    "sec": {
     "line number": [
      1833,
      1834
     ]
    },
    "sec.name": {
     "line number": [
      1835
     ]
    },
    "str": {
     "line number": [
      1828
     ]
    },
    "type": {
     "line number": [
      1818
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx_parent_children": {
  "data": {
   "lineno": 1785,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      1798
     ]
    },
    "sec": {
     "line number": [
      1796,
      1798,
      1801
     ]
    },
    "sec.name": {
     "line number": [
      1797,
      1802
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx_polygons": {
  "data": {
   "lineno": 2135,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      2168,
      2177
     ]
    },
    "len": {
     "line number": [
      2167
     ]
    },
    "numpy.arange": {
     "line number": [
      2180
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_intersegment_distance": {
  "data": {
   "lineno": 1729,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1746
     ]
    },
    "numpy.array": {
     "line number": [
      1742
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1743
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_intersegment_vector": {
  "data": {
   "lineno": 1708,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      1720
     ]
    },
    "ValueError": {
     "line number": [
      1727
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_multi_current_dipole_moments": {
  "data": {
   "lineno": 2594,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      2633
     ]
    },
    "numpy.newaxis": {
     "line number": [
      2633
     ]
    },
    "range": {
     "line number": [
      2633
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_pt3d_polygons": {
  "data": {
   "lineno": 2049,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      2089,
      2090
     ]
    },
    "ValueError": {
     "line number": [
      2076,
      2085
     ]
    },
    "len": {
     "line number": [
      2075,
      2092
     ]
    },
    "range": {
     "line number": [
      2092
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_rand_idx_area_and_distribution_norm": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": {
    "alias_method": {
     "line number": [
      880
     ]
    },
    "dict": {
     "line number": [
      807
     ]
    },
    "dir": {
     "line number": [
      868,
      874
     ]
    },
    "f": {
     "line number": [
      870
     ]
    },
    "fun": {
     "line number": [
      862,
      865,
      865,
      867,
      874,
      874,
      875,
      875,
      876
     ]
    },
    "getattr": {
     "line number": [
      869,
      875
     ]
    },
    "len": {
     "line number": [
      865,
      865,
      865,
      865
     ]
    },
    "list": {
     "line number": [
      862,
      863,
      864
     ]
    },
    "numpy.array": {
     "line number": [
      855,
      858
     ]
    },
    "numpy.ndarray": {
     "line number": [
      862,
      863,
      864
     ]
    },
    "numpy.zeros": {
     "line number": [
      866
     ]
    },
    "print": {
     "line number": [
      854,
      857
     ]
    },
    "str": {
     "line number": [
      868,
      874
     ]
    },
    "tuple": {
     "line number": [
      862,
      863,
      864
     ]
    },
    "type": {
     "line number": [
      862,
      863,
      864,
      868,
      874
     ]
    },
    "zip": {
     "line number": [
      867
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_rand_idx_area_norm": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": {
    "alias_method": {
     "line number": [
      801
     ]
    },
    "numpy.array": {
     "line number": [
      794,
      797
     ]
    },
    "print": {
     "line number": [
      793,
      796
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_rand_prob_area_norm": {
  "data": {
   "lineno": 1676,
   "symbols_in_volume": {
    "sum": {
     "line number": [
      1692
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.get_rand_prob_area_norm_from_idx": {
  "data": {
   "lineno": 1695,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      1695
     ]
    },
    "sum": {
     "line number": [
      1705
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.insert_v_ext": {
  "data": {
   "lineno": 2185,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      2246
     ]
    },
    "LFPy.cell.neuron": {
     "line number": [
      2249,
      2252
     ]
    },
    "ValueError": {
     "line number": [
      2239,
      2241,
      2243
     ]
    },
    "sec": {
     "line number": [
      2255,
      2256
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.set_point_process": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      646
     ]
    },
    "LFPy.cell.neuron": {
     "line number": [
      622
     ]
    },
    "SyntaxError": {
     "line number": [
      640
     ]
    },
    "eval": {
     "line number": [
      636
     ]
    },
    "exec": {
     "line number": [
      639
     ]
    },
    "globals": {
     "line number": [
      636
     ]
    },
    "hasattr": {
     "line number": [
      621,
      623,
      625
     ]
    },
    "list": {
     "line number": [
      637
     ]
    },
    "locals": {
     "line number": [
      636
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.set_pos": {
  "data": {
   "lineno": 1451,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      1469
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.set_rotation": {
  "data": {
   "lineno": 1523,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      1540,
      1542,
      1544
     ]
    },
    "hasattr": {
     "line number": [
      1602
     ]
    },
    "len": {
     "line number": [
      1543
     ]
    },
    "numpy.array": {
     "line number": [
      1549,
      1567,
      1585
     ]
    },
    "numpy.cos": {
     "line number": [
      1550,
      1551,
      1567,
      1569,
      1585,
      1586
     ]
    },
    "numpy.dot": {
     "line number": [
      1555,
      1556,
      1573,
      1574,
      1591,
      1592
     ]
    },
    "numpy.sin": {
     "line number": [
      1550,
      1551,
      1567,
      1569,
      1585,
      1586
     ]
    },
    "print": {
     "line number": [
      1560,
      1563,
      1578,
      1581,
      1596,
      1599
     ]
    },
    "str": {
     "line number": [
      1539
     ]
    },
    "type": {
     "line number": [
      1539
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.set_synapse": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      558,
      564,
      566,
      568,
      585,
      588
     ]
    },
    "eval": {
     "line number": [
      576
     ]
    },
    "globals": {
     "line number": [
      576
     ]
    },
    "hasattr": {
     "line number": [
      557,
      559,
      561,
      563,
      565,
      567
     ]
    },
    "list": {
     "line number": [
      577
     ]
    },
    "locals": {
     "line number": [
      576
     ]
    },
    "setattr": {
     "line number": [
      579
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.simulate": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      1029
     ]
    },
    "DeprecationWarning": {
     "line number": [
      1021
     ]
    },
    "Exception": {
     "line number": [
      1030
     ]
    },
    "LFPy.cell.neuron": {
     "line number": [
      1026
     ]
    },
    "_run_simulation": {
     "line number": [
      1071
     ]
    },
    "_run_simulation_with_electrode": {
     "line number": [
      1075
     ]
    },
    "hasattr": {
     "line number": [
      1050,
      1053,
      1056,
      1059,
      1096,
      1098,
      1100,
      1102,
      1106
     ]
    },
    "len": {
     "line number": [
      1048,
      1051,
      1054,
      1057,
      1060,
      1104
     ]
    },
    "numpy.array": {
     "line number": [
      1083
     ]
    },
    "print": {
     "line number": [
      1069
     ]
    },
    "str": {
     "line number": [
      1070
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.Cell.strip_hoc_objects": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "LFPy.cell.neuron": {
     "line number": [
      310,
      310,
      311,
      311
     ]
    },
    "getattr": {
     "line number": [
      312
     ]
    },
    "isinstance": {
     "line number": [
      312
     ]
    },
    "print": {
     "line number": [
      315
     ]
    },
    "setattr": {
     "line number": [
      313
     ]
    },
    "type": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.cell.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.cell.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.cell.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.cell.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "LFPy.cell.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "LFPy.cell.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "LFPy.cell.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "LFPy.cell.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "LFPy.eegmegcalc": {
  "data": {},
  "type": "module"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "object": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.__init__": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": {
    "float": {
     "line number": [
      354,
      355,
      356,
      357,
      359,
      360,
      361,
      362
     ]
    },
    "numpy.sqrt": {
     "line number": [
      379
     ]
    },
    "numpy.sum": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_c1n": {
  "data": {
   "lineno": 1008
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_c2n": {
  "data": {
   "lineno": 1013
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_c3n": {
  "data": {
   "lineno": 1025
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_c4n": {
  "data": {
   "lineno": 1037
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_csf_term1": {
  "data": {
   "lineno": 1048
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_csf_term2": {
  "data": {
   "lineno": 1055
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_d2n": {
  "data": {
   "lineno": 1020
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_d3n": {
  "data": {
   "lineno": 1032
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_d4n": {
  "data": {
   "lineno": 1044
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_rad_potential": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": {
    "len": {
     "line number": [
      576,
      576,
      577
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      573
     ]
    },
    "numpy.pi": {
     "line number": [
      575
     ]
    },
    "numpy.zeros": {
     "line number": [
      576
     ]
    },
    "range": {
     "line number": [
      577
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_tan_potential": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": {
    "len": {
     "line number": [
      615,
      616
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      613
     ]
    },
    "numpy.pi": {
     "line number": [
      614,
      621
     ]
    },
    "numpy.sin": {
     "line number": [
      614
     ]
    },
    "numpy.zeros": {
     "line number": [
      615
     ]
    },
    "range": {
     "line number": [
      616
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_vn": {
  "data": {
   "lineno": 984
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_yn": {
  "data": {
   "lineno": 993
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_zn": {
  "data": {
   "lineno": 1003
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._check_params": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      387,
      393
     ]
    },
    "ValueError": {
     "line number": [
      397
     ]
    },
    "any": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._decompose_dipole": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      551,
      551
     ]
    },
    "numpy.expand_dims": {
     "line number": [
      550
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_brain_rad": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": {
    "leg_consts": {
     "line number": [
      752
     ]
    },
    "numpy.cos": {
     "line number": [
      752
     ]
    },
    "numpy.insert": {
     "line number": [
      750
     ]
    },
    "numpy.polynomial.legendre.Legendre": {
     "line number": [
      751
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_brain_tan": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      885
     ]
    },
    "numpy.cos": {
     "line number": [
      885
     ]
    },
    "numpy.sum": {
     "line number": [
      885
     ]
    },
    "scipy.special.lpmv": {
     "line number": [
      885
     ]
    },
    "zip": {
     "line number": [
      885
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_csf_rad": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": {
    "leg_consts": {
     "line number": [
      785,
      786
     ]
    },
    "numpy.cos": {
     "line number": [
      786
     ]
    },
    "numpy.insert": {
     "line number": [
      784
     ]
    },
    "numpy.polynomial.legendre.Legendre": {
     "line number": [
      785
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_csf_tan": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      917
     ]
    },
    "numpy.cos": {
     "line number": [
      917
     ]
    },
    "numpy.sum": {
     "line number": [
      917
     ]
    },
    "scipy.special.lpmv": {
     "line number": [
      917
     ]
    },
    "zip": {
     "line number": [
      917
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_scalp_rad": {
  "data": {
   "lineno": 823,
   "symbols_in_volume": {
    "leg_consts": {
     "line number": [
      853,
      854
     ]
    },
    "numpy.cos": {
     "line number": [
      854
     ]
    },
    "numpy.insert": {
     "line number": [
      852
     ]
    },
    "numpy.polynomial.legendre.Legendre": {
     "line number": [
      853
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_scalp_tan": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      981
     ]
    },
    "numpy.cos": {
     "line number": [
      981
     ]
    },
    "numpy.sum": {
     "line number": [
      981
     ]
    },
    "scipy.special.lpmv": {
     "line number": [
      981
     ]
    },
    "zip": {
     "line number": [
      981
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_skull_rad": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": {
    "leg_consts": {
     "line number": [
      819,
      820
     ]
    },
    "numpy.cos": {
     "line number": [
      820
     ]
    },
    "numpy.insert": {
     "line number": [
      818
     ]
    },
    "numpy.polynomial.legendre.Legendre": {
     "line number": [
      819
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_skull_tan": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      949
     ]
    },
    "numpy.cos": {
     "line number": [
      949
     ]
    },
    "numpy.sum": {
     "line number": [
      949
     ]
    },
    "scipy.special.lpmv": {
     "line number": [
      949
     ]
    },
    "zip": {
     "line number": [
      949
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._rz_params": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      408,
      413,
      424
     ]
    },
    "any": {
     "line number": [
      423
     ]
    },
    "numpy.sqrt": {
     "line number": [
      405
     ]
    },
    "numpy.sum": {
     "line number": [
      405
     ]
    },
    "warnings.warn": {
     "line number": [
      416,
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._sign_rad_dipole": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      719
     ]
    },
    "numpy.sign": {
     "line number": [
      719
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.calc_phi": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      681
     ]
    },
    "len": {
     "line number": [
      679,
      679,
      683
     ]
    },
    "numpy.abs": {
     "line number": [
      684
     ]
    },
    "numpy.arccos": {
     "line number": [
      692
     ]
    },
    "numpy.cross": {
     "line number": [
      677
     ]
    },
    "numpy.dot": {
     "line number": [
      688,
      696
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      684,
      688,
      689
     ]
    },
    "numpy.ones": {
     "line number": [
      681
     ]
    },
    "numpy.outer": {
     "line number": [
      688
     ]
    },
    "numpy.pi": {
     "line number": [
      683
     ]
    },
    "numpy.zeros": {
     "line number": [
      679,
      683,
      686
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.calc_potential": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "numpy.linalg.norm": {
     "line number": [
      458,
      463,
      468
     ]
    },
    "numpy.zeros": {
     "line number": [
      461,
      462,
      466,
      471
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.calc_potential_from_multi_dipoles": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      526
     ]
    },
    "range": {
     "line number": [
      527
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.calc_theta": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": {
    "numpy.arccos": {
     "line number": [
      648
     ]
    },
    "numpy.dot": {
     "line number": [
      647
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      647,
      647
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.InfiniteVolumeConductor": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1064
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.eegmegcalc.InfiniteVolumeConductor.__init__": {
  "data": {
   "lineno": 1089
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.InfiniteVolumeConductor.get_dipole_potential": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      1113
     ]
    },
    "numpy.linalg.norm": {
     "line number": [
      1114
     ]
    },
    "numpy.pi": {
     "line number": [
      1115
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.InfiniteVolumeConductor.get_multi_dipole_potential": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": {
    "numpy.zeros": {
     "line number": [
      1173
     ]
    },
    "range": {
     "line number": [
      1174
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.MEG": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": {
    "object": {
     "line number": [
      1242
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.eegmegcalc.MEG.__init__": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      1311,
      1312,
      1315,
      1316
     ]
    },
    "numpy.pi": {
     "line number": [
      1305
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.MEG.calculate_H": {
  "data": {
   "lineno": 1323,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      1350,
      1351,
      1354,
      1355,
      1358,
      1359,
      1372,
      1373
     ]
    },
    "enumerate": {
     "line number": [
      1367
     ]
    },
    "numpy.allclose": {
     "line number": [
      1371
     ]
    },
    "numpy.cross": {
     "line number": [
      1374
     ]
    },
    "numpy.empty": {
     "line number": [
      1363
     ]
    },
    "numpy.pi": {
     "line number": [
      1375
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1375
     ]
    },
    "numpy.zeros": {
     "line number": [
      1371
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.MEG.calculate_H_from_iaxial": {
  "data": {
   "lineno": 1380,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      1434
     ]
    },
    "numpy.cross": {
     "line number": [
      1438
     ]
    },
    "numpy.dot": {
     "line number": [
      1437
     ]
    },
    "numpy.pi": {
     "line number": [
      1439
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1439
     ]
    },
    "numpy.zeros": {
     "line number": [
      1432
     ]
    },
    "zip": {
     "line number": [
      1435
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.OneSphereVolumeConductor": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "object": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.eegmegcalc.OneSphereVolumeConductor.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      82,
      83,
      86,
      87,
      90,
      91
     ]
    },
    "float": {
     "line number": [
      85
     ]
    },
    "int": {
     "line number": [
      85
     ]
    },
    "type": {
     "line number": [
      85,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.OneSphereVolumeConductor.calc_mapping": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      289
     ]
    },
    "numpy.arccos": {
     "line number": [
      274
     ]
    },
    "numpy.arctan2": {
     "line number": [
      275
     ]
    },
    "numpy.array": {
     "line number": [
      290
     ]
    },
    "numpy.copy": {
     "line number": [
      280
     ]
    },
    "numpy.sqrt": {
     "line number": [
      273
     ]
    },
    "numpy.zeros": {
     "line number": [
      286
     ]
    },
    "zip": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.OneSphereVolumeConductor.calc_potential": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      127,
      128,
      131,
      132,
      177,
      178,
      185,
      186
     ]
    },
    "abs": {
     "line number": [
      126
     ]
    },
    "enumerate": {
     "line number": [
      144,
      154
     ]
    },
    "float": {
     "line number": [
      125,
      130
     ]
    },
    "int": {
     "line number": [
      125,
      130
     ]
    },
    "numpy.all": {
     "line number": [
      174,
      175
     ]
    },
    "numpy.cos": {
     "line number": [
      149,
      159,
      164,
      166
     ]
    },
    "numpy.dot": {
     "line number": [
      180
     ]
    },
    "numpy.float64": {
     "line number": [
      125,
      130
     ]
    },
    "numpy.isfinite": {
     "line number": [
      174,
      184
     ]
    },
    "numpy.isreal": {
     "line number": [
      175
     ]
    },
    "numpy.ndarray": {
     "line number": [
      172
     ]
    },
    "numpy.pi": {
     "line number": [
      181,
      187
     ]
    },
    "numpy.polynomial.legendre.Legendre": {
     "line number": [
      148,
      158
     ]
    },
    "numpy.shape": {
     "line number": [
      184
     ]
    },
    "numpy.sqrt": {
     "line number": [
      164,
      166
     ]
    },
    "numpy.where": {
     "line number": [
      149,
      159
     ]
    },
    "numpy.zeros": {
     "line number": [
      143,
      145,
      153,
      155
     ]
    },
    "poly_i": {
     "line number": [
      149
     ]
    },
    "poly_o": {
     "line number": [
      159
     ]
    },
    "range": {
     "line number": [
      146,
      156
     ]
    },
    "type": {
     "line number": [
      125,
      130,
      172
     ]
    },
    "zip": {
     "line number": [
      144,
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.get_current_dipole_moment": {
  "data": {
   "lineno": 1181,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      1238
     ]
    },
    "numpy.sqrt": {
     "line number": [
      1239
     ]
    },
    "numpy.sum": {
     "line number": [
      1239
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.eegmegcalc.lpmv": {
  "data": {
   "shadows": "scipy.special.lpmv"
  },
  "type": "import"
 },
 "LFPy.eegmegcalc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.eegmegcalc.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "LFPy.inputgenerators": {
  "data": {},
  "type": "module"
 },
 "LFPy.inputgenerators.get_activation_times_from_distribution": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      86,
      87
     ]
    },
    "StopIteration": {
     "line number": [
      102
     ]
    },
    "dict": {
     "line number": [
      23
     ]
    },
    "hasattr": {
     "line number": [
      85
     ]
    },
    "iter": {
     "line number": [
      96,
      97,
      99,
      101
     ]
    },
    "numpy.r_": {
     "line number": [
      98
     ]
    },
    "range": {
     "line number": [
      91,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.inputgenerators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.inputgenerators.scipy.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "LFPy.inputgenerators.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "LFPy.network": {
  "data": {
   "symbols_in_volume": {
    "LFPy.network.COMM": {
     "line number": [
      30,
      31
     ]
    },
    "mpi4py.MPI.COMM_WORLD": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "module"
 },
 "LFPy.network.COMM": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "LFPy.network.DummyCell": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "object": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.network.DummyCell.__init__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      244,
      245,
      245,
      245,
      246,
      246,
      246,
      247,
      247,
      247,
      248,
      248,
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.DummyCell.get_idx": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.MPI": {
  "data": {
   "shadows": "mpi4py.MPI"
  },
  "type": "import"
 },
 "LFPy.network.Network": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": {
    "object": {
     "line number": [
      488
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.network.Network.__init__": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": {
    "LFPy.network.neuron": {
     "line number": [
      527,
      531
     ]
    },
    "dict": {
     "line number": [
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.Network._create_network_dummycell": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": {
    "LFPy.network.DummyCell": {
     "line number": [
      1132
     ]
    },
    "enumerate": {
     "line number": [
      1090,
      1093
     ]
    },
    "int": {
     "line number": [
      1094,
      1110
     ]
    },
    "numpy.array": {
     "line number": [
      1094,
      1098,
      1099,
      1100,
      1101,
      1102,
      1103,
      1104,
      1105,
      1106,
      1107,
      1108,
      1110
     ]
    },
    "numpy.eye": {
     "line number": [
      1097
     ]
    },
    "numpy.r_": {
     "line number": [
      1115,
      1116,
      1117,
      1118,
      1119,
      1120,
      1121,
      1122,
      1123,
      1124,
      1125,
      1127
     ]
    },
    "numpy.sum": {
     "line number": [
      1093
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.Network.connect": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      847,
      848
     ]
    },
    "Exception": {
     "line number": [
      775
     ]
    },
    "LFPy.network.COMM": {
     "line number": [
      815,
      816,
      829,
      852,
      854
     ]
    },
    "LFPy.network.RANK": {
     "line number": [
      763,
      818,
      828
     ]
    },
    "LFPy.network.flattenlist": {
     "line number": [
      829
     ]
    },
    "LFPy.network.h5py": {
     "line number": [
      840
     ]
    },
    "LFPy.network.neuron": {
     "line number": [
      678
     ]
    },
    "LFPy.network.os": {
     "line number": [
      840
     ]
    },
    "delayfun": {
     "line number": [
      789,
      793
     ]
    },
    "dict": {
     "line number": [
      679,
      681,
      684,
      687,
      688,
      690
     ]
    },
    "enumerate": {
     "line number": [
      758,
      795,
      834
     ]
    },
    "float": {
     "line number": [
      832,
      832,
      832
     ]
    },
    "int": {
     "line number": [
      750,
      772
     ]
    },
    "len": {
     "line number": [
      833
     ]
    },
    "list": {
     "line number": [
      798
     ]
    },
    "mpi4py.MPI.SUM": {
     "line number": [
      815,
      816
     ]
    },
    "multapsefun": {
     "line number": [
      772
     ]
    },
    "numpy.any": {
     "line number": [
      784,
      791
     ]
    },
    "numpy.arange": {
     "line number": [
      747
     ]
    },
    "numpy.array": {
     "line number": [
      798
     ]
    },
    "numpy.empty": {
     "line number": [
      833
     ]
    },
    "numpy.random.normal": {
     "line number": [
      680,
      683,
      686
     ]
    },
    "numpy.where": {
     "line number": [
      798
     ]
    },
    "print": {
     "line number": [
      763,
      819
     ]
    },
    "scipy.stats.norm": {
     "line number": [
      689
     ]
    },
    "syntype": {
     "line number": [
      799
     ]
    },
    "weightfun": {
     "line number": [
      782,
      786
     ]
    },
    "zip": {
     "line number": [
      758,
      795
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.Network.create_population": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      579,
      580
     ]
    },
    "Cell": {
     "line number": [
      590
     ]
    },
    "LFPy.network.NetworkCell": {
     "line number": [
      543
     ]
    },
    "LFPy.network.NetworkPopulation": {
     "line number": [
      589
     ]
    },
    "LFPy.network.RANK": {
     "line number": [
      599
     ]
    },
    "LFPy.network.neuron": {
     "line number": [
      610
     ]
    },
    "dict": {
     "line number": [
      545,
      545,
      546
     ]
    },
    "zip": {
     "line number": [
      602
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.Network.enable_extracellular_stimulation": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      857
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.Network.get_connectivity_rand": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": {
    "LFPy.network.SIZE": {
     "line number": [
      657,
      664
     ]
    },
    "bool": {
     "line number": [
      667,
      669,
      674
     ]
    },
    "int": {
     "line number": [
      647
     ]
    },
    "numpy.array": {
     "line number": [
      647
     ]
    },
    "numpy.c_": {
     "line number": [
      665
     ]
    },
    "numpy.ones": {
     "line number": [
      667
     ]
    },
    "numpy.random.rand": {
     "line number": [
      652
     ]
    },
    "numpy.where": {
     "line number": [
      655
     ]
    },
    "numpy.zeros": {
     "line number": [
      674
     ]
    },
    "scipy.sparse.csr_matrix": {
     "line number": [
      667
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.Network.simulate": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      947,
      948
     ]
    },
    "AttributeError": {
     "line number": [
      940
     ]
    },
    "Exception": {
     "line number": [
      941
     ]
    },
    "LFPy.network.COMM": {
     "line number": [
      1029,
      1030,
      1035,
      1037,
      1059
     ]
    },
    "LFPy.network.RANK": {
     "line number": [
      1020,
      1043,
      1045,
      1052,
      1055,
      1060,
      1063
     ]
    },
    "LFPy.network.ReduceStructArray": {
     "line number": [
      1074,
      1076
     ]
    },
    "LFPy.network.SIZE": {
     "line number": [
      1028
     ]
    },
    "LFPy.network._run_simulation": {
     "line number": [
      976
     ]
    },
    "LFPy.network._run_simulation_with_electrode": {
     "line number": [
      980
     ]
    },
    "LFPy.network.h5py": {
     "line number": [
      1044,
      1046
     ]
    },
    "LFPy.network.neuron": {
     "line number": [
      937
     ]
    },
    "LFPy.network.os": {
     "line number": [
      1043,
      1046,
      1065
     ]
    },
    "NotImplementedError": {
     "line number": [
      979
     ]
    },
    "dict": {
     "line number": [
      1069,
      1077
     ]
    },
    "enumerate": {
     "line number": [
      1023
     ]
    },
    "hasattr": {
     "line number": [
      1012
     ]
    },
    "len": {
     "line number": [
      968,
      1010,
      1018,
      1073
     ]
    },
    "list": {
     "line number": [
      1048
     ]
    },
    "mpi4py.MPI.SUM": {
     "line number": [
      1042
     ]
    },
    "numpy.array": {
     "line number": [
      995,
      1019
     ]
    },
    "numpy.float": {
     "line number": [
      1049,
      1056,
      1059
     ]
    },
    "numpy.zeros": {
     "line number": [
      1053,
      1056
     ]
    },
    "print": {
     "line number": [
      975
     ]
    },
    "range": {
     "line number": [
      1018,
      1028,
      1073
     ]
    },
    "str": {
     "line number": [
      1049
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.NetworkCell": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "LFPy.network.NetworkCell.__init__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "LFPy.network.neuron": {
     "line number": [
      141,
      151
     ]
    },
    "sec": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.NetworkCell.create_spike_detector": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "LFPy.network.neuron": {
     "line number": [
      234
     ]
    },
    "sec": {
     "line number": [
      233,
      234,
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.NetworkCell.create_synapse": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      205,
      206
     ]
    },
    "LFPy.network.neuron": {
     "line number": [
      156,
      191
     ]
    },
    "dict": {
     "line number": [
      157
     ]
    },
    "exec": {
     "line number": [
      200
     ]
    },
    "getattr": {
     "line number": [
      204,
      207
     ]
    },
    "hasattr": {
     "line number": [
      189
     ]
    },
    "numpy.random.randint": {
     "line number": [
      193,
      193
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      204
     ]
    },
    "sec": {
     "line number": [
      188,
      197
     ]
    },
    "syntype": {
     "line number": [
      188,
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.NetworkPopulation": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": {
    "object": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.network.NetworkPopulation.__init__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      409,
      410
     ]
    },
    "Cell": {
     "line number": [
      363,
      366
     ]
    },
    "LFPy.network.COMM": {
     "line number": [
      351,
      386,
      414,
      417
     ]
    },
    "LFPy.network.NetworkCell": {
     "line number": [
      298
     ]
    },
    "LFPy.network.RANK": {
     "line number": [
      348,
      357,
      385
     ]
    },
    "LFPy.network.SIZE": {
     "line number": [
      357
     ]
    },
    "LFPy.network.flattenlist": {
     "line number": [
      386
     ]
    },
    "LFPy.network.h5py": {
     "line number": [
      402
     ]
    },
    "LFPy.network.os": {
     "line number": [
      349,
      350,
      362,
      362,
      364,
      402
     ]
    },
    "dict": {
     "line number": [
      300,
      300,
      301
     ]
    },
    "enumerate": {
     "line number": [
      369,
      375,
      392
     ]
    },
    "float": {
     "line number": [
      389,
      389,
      389,
      390,
      390,
      390
     ]
    },
    "len": {
     "line number": [
      368,
      373,
      391
     ]
    },
    "numpy.empty": {
     "line number": [
      391
     ]
    },
    "numpy.pi": {
     "line number": [
      373,
      397
     ]
    },
    "numpy.random.uniform": {
     "line number": [
      373
     ]
    },
    "range": {
     "line number": [
      357
     ]
    },
    "zip": {
     "line number": [
      379,
      386,
      414
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.NetworkPopulation.draw_rand_pos": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      472,
      473
     ]
    },
    "Exception": {
     "line number": [
      479
     ]
    },
    "float": {
     "line number": [
      464,
      473,
      479
     ]
    },
    "len": {
     "line number": [
      471
     ]
    },
    "list": {
     "line number": [
      469
     ]
    },
    "numpy.all": {
     "line number": [
      465,
      474
     ]
    },
    "numpy.empty": {
     "line number": [
      453,
      454,
      455
     ]
    },
    "numpy.float": {
     "line number": [
      464
     ]
    },
    "numpy.float32": {
     "line number": [
      464
     ]
    },
    "numpy.float64": {
     "line number": [
      464
     ]
    },
    "numpy.random.normal": {
     "line number": [
      462,
      467,
      476
     ]
    },
    "numpy.random.rand": {
     "line number": [
      457,
      458,
      460,
      461
     ]
    },
    "numpy.sqrt": {
     "line number": [
      459
     ]
    },
    "range": {
     "line number": [
      456,
      482
     ]
    },
    "type": {
     "line number": [
      464,
      469
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.RANK": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "LFPy.network.ReduceStructArray": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": {
    "LFPy.network.COMM": {
     "line number": [
      1617,
      1618,
      1631
     ]
    },
    "LFPy.network.RANK": {
     "line number": [
      1611,
      1620,
      1627,
      1632
     ]
    },
    "len": {
     "line number": [
      1623
     ]
    },
    "list": {
     "line number": [
      1622
     ]
    },
    "mpi4py.MPI.SUM": {
     "line number": [
      1600
     ]
    },
    "numpy.array": {
     "line number": [
      1631
     ]
    },
    "numpy.zeros": {
     "line number": [
      1621,
      1628
     ]
    },
    "range": {
     "line number": [
      1623
     ]
    },
    "zip": {
     "line number": [
      1622
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.SIZE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "LFPy.network._run_simulation": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": {
    "LFPy.network.RANK": {
     "line number": [
      1190
     ]
    },
    "LFPy.network.neuron": {
     "line number": [
      1160,
      1170,
      1176,
      1177,
      1180,
      1187,
      1188,
      1189,
      1191
     ]
    },
    "print": {
     "line number": [
      1191
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network._run_simulation_with_electrode": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": {
    "IndexError": {
     "line number": [
      1589
     ]
    },
    "LFPy.network.RANK": {
     "line number": [
      1402,
      1506
     ]
    },
    "LFPy.network.h5py": {
     "line number": [
      1401
     ]
    },
    "LFPy.network.neuron": {
     "line number": [
      1332,
      1342,
      1351,
      1352,
      1355,
      1424,
      1425,
      1504,
      1505,
      1507
     ]
    },
    "LFPy.network.os": {
     "line number": [
      1401
     ]
    },
    "enumerate": {
     "line number": [
      1403,
      1459,
      1470,
      1479,
      1495,
      1544,
      1555,
      1564,
      1580
     ]
    },
    "hasattr": {
     "line number": [
      1443,
      1529
     ]
    },
    "int": {
     "line number": [
      1381,
      1390,
      1410
     ]
    },
    "len": {
     "line number": [
      1373,
      1392
     ]
    },
    "list": {
     "line number": [
      1281,
      1290,
      1372,
      1391
     ]
    },
    "numpy.arange": {
     "line number": [
      1453,
      1473,
      1498,
      1539,
      1558,
      1583
     ]
    },
    "numpy.c_": {
     "line number": [
      1418
     ]
    },
    "numpy.dot": {
     "line number": [
      1454,
      1460,
      1462,
      1464,
      1466,
      1467,
      1474,
      1481,
      1484,
      1487,
      1490,
      1492,
      1500,
      1540,
      1545,
      1547,
      1549,
      1551,
      1552,
      1559,
      1566,
      1569,
      1572,
      1575,
      1577,
      1585
     ]
    },
    "numpy.float": {
     "line number": [
      1368,
      1369,
      1370,
      1371,
      1371,
      1373,
      1392
     ]
    },
    "numpy.zeros": {
     "line number": [
      1380,
      1390,
      1410,
      1413
     ]
    },
    "print": {
     "line number": [
      1507
     ]
    },
    "sec": {
     "line number": [
      1432,
      1433,
      1518,
      1519
     ]
    },
    "type": {
     "line number": [
      1281,
      1290
     ]
    },
    "zip": {
     "line number": [
      1372,
      1391,
      1442,
      1452,
      1472,
      1497,
      1528,
      1538,
      1557,
      1582
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.network.flattenlist": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "LFPy.network.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "LFPy.network.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.network.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.network.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.network.ss": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "LFPy.network.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "LFPy.pointprocess": {
  "data": {},
  "type": "module"
 },
 "LFPy.pointprocess.PointProcess": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "object": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.pointprocess.PointProcess.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.pointprocess.PointProcess.update_pos": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "LFPy.pointprocess.StimIntElectrode": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "LFPy.pointprocess.PointProcess": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.pointprocess.StimIntElectrode.__init__": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "LFPy.pointprocess.PointProcess": {
     "line number": [
      278
     ]
    },
    "int": {
     "line number": [
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.pointprocess.StimIntElectrode.collect_current": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.pointprocess.StimIntElectrode.collect_potential": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      295
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.pointprocess.Synapse": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "LFPy.pointprocess.PointProcess": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.pointprocess.Synapse.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "LFPy.pointprocess.PointProcess": {
     "line number": [
      121
     ]
    },
    "int": {
     "line number": [
      125,
      129
     ]
    },
    "numpy.array": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.pointprocess.Synapse.collect_current": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      174
     ]
    },
    "numpy.array": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.pointprocess.Synapse.collect_potential": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      181
     ]
    },
    "numpy.array": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.pointprocess.Synapse.set_spike_times": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      138,
      139
     ]
    },
    "numpy.ndarray": {
     "line number": [
      137
     ]
    },
    "numpy.zeros": {
     "line number": [
      134
     ]
    },
    "type": {
     "line number": [
      137,
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.pointprocess.Synapse.set_spike_times_w_netstim": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "LFPy.pointprocess.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.recextelectrode": {
  "data": {},
  "type": "module"
 },
 "LFPy.recextelectrode.RecExtElectrode": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "object": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.recextelectrode.RecExtElectrode.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      253,
      254
     ]
    },
    "Exception": {
     "line number": [
      270
     ]
    },
    "LFPy.recextelectrode.sys": {
     "line number": [
      263
     ]
    },
    "MEAutility.MEA": {
     "line number": [
      291
     ]
    },
    "MEAutility.core.MEA": {
     "line number": [
      293
     ]
    },
    "RuntimeError": {
     "line number": [
      335
     ]
    },
    "ValueError": {
     "line number": [
      227,
      282,
      324,
      348
     ]
    },
    "copy.deepcopy": {
     "line number": [
      294
     ]
    },
    "float": {
     "line number": [
      239,
      243,
      247
     ]
    },
    "int": {
     "line number": [
      239,
      243,
      247
     ]
    },
    "isinstance": {
     "line number": [
      293
     ]
    },
    "len": {
     "line number": [
      285
     ]
    },
    "list": {
     "line number": [
      224
     ]
    },
    "numpy.array": {
     "line number": [
      225,
      240,
      242,
      244,
      246,
      248,
      250,
      257,
      259,
      285,
      288,
      298
     ]
    },
    "numpy.ndarray": {
     "line number": [
      224
     ]
    },
    "print": {
     "line number": [
      261,
      263
     ]
    },
    "str": {
     "line number": [
      317
     ]
    },
    "type": {
     "line number": [
      224,
      239,
      243,
      247,
      257,
      317,
      317,
      319,
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._lfp_el_pos_calc_dist": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      505,
      510
     ]
    },
    "loop_over_points": {
     "line number": [
      507
     ]
    },
    "numpy.array": {
     "line number": [
      518
     ]
    },
    "zip": {
     "line number": [
      510
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._lfp_el_pos_calc_dist.loop_over_points": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": {
    "range": {
     "line number": [
      486
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._loop_over_contacts": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "range": {
     "line number": [
      465
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._test_imem_sum": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": {
    "DeprecationWarning": {
     "line number": [
      374
     ]
    },
    "LFPy.recextelectrode.warnings": {
     "line number": [
      383
     ]
    },
    "abs": {
     "line number": [
      382,
      384
     ]
    },
    "dict": {
     "line number": [
      373
     ]
    },
    "list": {
     "line number": [
      373
     ]
    },
    "numpy.all": {
     "line number": [
      379
     ]
    },
    "numpy.eye": {
     "line number": [
      379
     ]
    },
    "numpy.where": {
     "line number": [
      384
     ]
    },
    "print": {
     "line number": [
      387
     ]
    },
    "type": {
     "line number": [
      373,
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode.calc_lfp": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      459
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode.calc_mapping": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      418
     ]
    },
    "print": {
     "line number": [
      425,
      430
     ]
    },
    "str": {
     "line number": [
      425,
      426,
      430,
      431
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode.set_cell": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": {
    "len": {
     "line number": [
      368
     ]
    },
    "numpy.zeros": {
     "line number": [
      368
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": {
    "LFPy.recextelectrode.RecExtElectrode": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.recextelectrode.RecMEAElectrode.__init__": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": {
    "LFPy.recextelectrode.RecExtElectrode": {
     "line number": [
      655
     ]
    },
    "NotImplementedError": {
     "line number": [
      684,
      689,
      696,
      701
     ]
    },
    "ValueError": {
     "line number": [
      707
     ]
    },
    "numpy.abs": {
     "line number": [
      683,
      688,
      695,
      700
     ]
    },
    "numpy.array": {
     "line number": [
      649,
      649,
      649
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode._return_comp_outside_slice": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      754
     ]
    },
    "len": {
     "line number": [
      746,
      748,
      750,
      752
     ]
    },
    "numpy.where": {
     "line number": [
      741,
      742,
      743,
      744
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode._squeeze_cell_in_depth_direction": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      725
     ]
    },
    "numpy.max": {
     "line number": [
      718
     ]
    },
    "numpy.min": {
     "line number": [
      719
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode.calc_lfp": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": {
    "numpy.dot": {
     "line number": [
      869
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode.calc_mapping": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      823
     ]
    },
    "print": {
     "line number": [
      830,
      835
     ]
    },
    "str": {
     "line number": [
      830,
      831,
      835,
      836
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode.test_cell_extent": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      765,
      775,
      782
     ]
    },
    "numpy.max": {
     "line number": [
      767
     ]
    },
    "numpy.min": {
     "line number": [
      768
     ]
    },
    "print": {
     "line number": [
      771,
      785,
      788
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.recextelectrode.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "LFPy.recextelectrode.mu": {
  "data": {
   "shadows": "MEAutility"
  },
  "type": "import"
 },
 "LFPy.recextelectrode.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.recextelectrode.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "LFPy.recextelectrode.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "LFPy.run_simulation": {
  "data": {},
  "type": "module"
 },
 "LFPy.run_simulation.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "LFPy.run_simulation._collect_geometry_neuron": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "LFPy.run_simulation.neuron": {
     "line number": [
      311,
      321,
      322,
      323,
      324,
      350
     ]
    },
    "enumerate": {
     "line number": [
      331
     ]
    },
    "int": {
     "line number": [
      311
     ]
    },
    "numpy.interp": {
     "line number": [
      339,
      340,
      342,
      343,
      345,
      346
     ]
    },
    "numpy.zeros": {
     "line number": [
      296,
      297,
      298,
      300,
      301,
      302,
      303,
      304,
      305,
      316,
      317,
      318,
      319,
      330
     ]
    },
    "range": {
     "line number": [
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.run_simulation._run_simulation": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "LFPy.run_simulation.neuron": {
     "line number": [
      29,
      40,
      46,
      47,
      50,
      57,
      63,
      64,
      67,
      69,
      72
     ]
    },
    "print": {
     "line number": [
      69
     ]
    },
    "time.time": {
     "line number": [
      56,
      67,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.run_simulation._run_simulation_with_electrode": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "LFPy.run_simulation.h5py": {
     "line number": [
      187
     ]
    },
    "LFPy.run_simulation.neuron": {
     "line number": [
      130,
      141,
      147,
      149,
      152,
      161,
      200,
      201,
      229,
      232,
      234,
      237
     ]
    },
    "enumerate": {
     "line number": [
      215,
      225,
      254,
      261,
      274
     ]
    },
    "hasattr": {
     "line number": [
      276,
      282
     ]
    },
    "int": {
     "line number": [
      178,
      190
     ]
    },
    "len": {
     "line number": [
      112,
      240
     ]
    },
    "list": {
     "line number": [
      104,
      117
     ]
    },
    "numpy.array": {
     "line number": [
      265
     ]
    },
    "numpy.c_": {
     "line number": [
      196
     ]
    },
    "numpy.dot": {
     "line number": [
      210,
      212,
      217,
      220,
      222,
      227,
      249,
      251,
      256,
      258,
      262
     ]
    },
    "numpy.hstack": {
     "line number": [
      222,
      258
     ]
    },
    "numpy.newaxis": {
     "line number": [
      220,
      222,
      258
     ]
    },
    "numpy.zeros": {
     "line number": [
      168,
      177,
      190
     ]
    },
    "pathlib.Path": {
     "line number": [
      183
     ]
    },
    "print": {
     "line number": [
      88,
      93,
      100,
      234
     ]
    },
    "time.time": {
     "line number": [
      160,
      232,
      236
     ]
    },
    "type": {
     "line number": [
      104,
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.run_simulation.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "LFPy.run_simulation.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.run_simulation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.run_simulation.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "LFPy.run_tests": {
  "data": {
   "shadows": "_test"
  },
  "type": "import"
 },
 "LFPy.templatecell": {
  "data": {},
  "type": "module"
 },
 "LFPy.templatecell.Cell": {
  "data": {
   "shadows": "LFPy.Cell"
  },
  "type": "import"
 },
 "LFPy.templatecell.RecExtElectrode": {
  "data": {
   "shadows": "LFPy.RecExtElectrode"
  },
  "type": "import"
 },
 "LFPy.templatecell.TemplateCell": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "LFPy.Cell": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.templatecell.TemplateCell.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "LFPy.Cell.__init__": {
     "line number": [
      150
     ]
    },
    "LFPy.templatecell.neuron": {
     "line number": [
      131,
      132,
      133,
      137,
      142,
      147
     ]
    },
    "LFPy.templatecell.os": {
     "line number": [
      125,
      146
     ]
    },
    "LFPy.templatecell.posixpath": {
     "line number": [
      125,
      146
     ]
    },
    "LFPy.templatecell.sys": {
     "line number": [
      124,
      145
     ]
    },
    "hasattr": {
     "line number": [
      131,
      137
     ]
    },
    "list": {
     "line number": [
      143
     ]
    },
    "print": {
     "line number": [
      139
     ]
    },
    "str": {
     "line number": [
      124,
      141
     ]
    },
    "type": {
     "line number": [
      124,
      141,
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.templatecell.TemplateCell._create_sectionlists": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "LFPy.templatecell.neuron": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.templatecell.TemplateCell._load_geometry": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      184,
      188,
      192,
      200
     ]
    },
    "LFPy.templatecell.neuron": {
     "line number": [
      155,
      168,
      172,
      174,
      183,
      186,
      190,
      205,
      208
     ]
    },
    "ValueError": {
     "line number": [
      176
     ]
    },
    "getattr": {
     "line number": [
      155
     ]
    },
    "hasattr": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.templatecell._run_simulation": {
  "data": {
   "shadows": "LFPy.run_simulation._run_simulation"
  },
  "type": "import"
 },
 "LFPy.templatecell._run_simulation_with_electrode": {
  "data": {
   "shadows": "LFPy.run_simulation._run_simulation_with_electrode"
  },
  "type": "import"
 },
 "LFPy.templatecell.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.templatecell.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.templatecell.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.templatecell.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "LFPy.templatecell.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "LFPy.templatecell.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "LFPy.test": {
  "data": {},
  "type": "module"
 },
 "LFPy.test._test": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "LFPy.test.unittest": {
     "line number": [
      55,
      56,
      59,
      60,
      63,
      64,
      67,
      68,
      71,
      72,
      75,
      76,
      79,
      80,
      83,
      84,
      87,
      88,
      91,
      92,
      95,
      96,
      99,
      100,
      103,
      104,
      107,
      108,
      111,
      112,
      115,
      116
     ]
    },
    "print": {
     "line number": [
      54,
      58,
      62,
      66,
      70,
      74,
      78,
      82,
      86,
      90,
      94,
      98,
      102,
      106,
      110,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.common": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.common.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.common.analytical_LFP": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "LFPy.test.common.complex_quadrature": {
     "line number": [
      254
     ]
    },
    "numpy.empty": {
     "line number": [
      243,
      244
     ]
    },
    "numpy.exp": {
     "line number": [
      259,
      261
     ]
    },
    "numpy.linspace": {
     "line number": [
      181
     ]
    },
    "numpy.pi": {
     "line number": [
      227,
      228,
      234,
      257,
      259,
      261
     ]
    },
    "numpy.sqrt": {
     "line number": [
      230,
      238,
      257
     ]
    },
    "numpy.tanh": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.common.analytical_LFP.f_to_integrate": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "i_mem": {
     "line number": [
      250
     ]
    },
    "numpy.pi": {
     "line number": [
      250
     ]
    },
    "numpy.sqrt": {
     "line number": [
      251
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.common.analytical_LFP.i_mem": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "numpy.cosh": {
     "line number": [
      247,
      247
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.common.complex_quadrature": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "scipy.integrate.quad": {
     "line number": [
      279,
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.common.complex_quadrature.imag_func": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "func": {
     "line number": [
      278
     ]
    },
    "numpy.imag": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.common.complex_quadrature.real_func": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "func": {
     "line number": [
      276
     ]
    },
    "numpy.real": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.common.imag": {
  "data": {
   "shadows": "numpy.imag"
  },
  "type": "import"
 },
 "LFPy.test.common.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.test.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.common.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.common.quad": {
  "data": {
   "shadows": "scipy.integrate.quad"
  },
  "type": "import"
 },
 "LFPy.test.common.real": {
  "data": {
   "shadows": "numpy.real"
  },
  "type": "import"
 },
 "LFPy.test.common.stickSimulation": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "LFPy.test.common.LFPy": {
     "line number": [
      27,
      61,
      63,
      66
     ]
    },
    "LFPy.test.common.os": {
     "line number": [
      27
     ]
    },
    "numpy.linspace": {
     "line number": [
      45
     ]
    },
    "numpy.ones": {
     "line number": [
      43
     ]
    },
    "numpy.pi": {
     "line number": [
      55
     ]
    },
    "numpy.zeros": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.common.stickSimulationAveragingElectrode": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "LFPy.test.common.LFPy": {
     "line number": [
      74,
      113,
      115,
      118
     ]
    },
    "LFPy.test.common.os": {
     "line number": [
      74
     ]
    },
    "numpy.empty": {
     "line number": [
      88
     ]
    },
    "numpy.linspace": {
     "line number": [
      94
     ]
    },
    "numpy.ones": {
     "line number": [
      92
     ]
    },
    "numpy.pi": {
     "line number": [
      107
     ]
    },
    "numpy.zeros": {
     "line number": [
      93
     ]
    },
    "range": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.common.stickSimulationDotprodcoeffs": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "LFPy.test.common.LFPy": {
     "line number": [
      126,
      161,
      168,
      173
     ]
    },
    "LFPy.test.common.os": {
     "line number": [
      126
     ]
    },
    "numpy.arange": {
     "line number": [
      166
     ]
    },
    "numpy.eye": {
     "line number": [
      165
     ]
    },
    "numpy.linspace": {
     "line number": [
      144
     ]
    },
    "numpy.ones": {
     "line number": [
      142
     ]
    },
    "numpy.pi": {
     "line number": [
      154
     ]
    },
    "numpy.zeros": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_alias_method": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_alias_method.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_alias_method.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_alias_method.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_alias_method.testAliasMethod": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "LFPy.test.test_alias_method.unittest": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_00": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "LFPy.test.test_alias_method.LFPy": {
     "line number": [
      37
     ]
    },
    "float": {
     "line number": [
      33
     ]
    },
    "numpy.arange": {
     "line number": [
      32,
      33,
      35
     ]
    },
    "numpy.histogram": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_01": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "LFPy.test.test_alias_method.LFPy": {
     "line number": [
      49
     ]
    },
    "float": {
     "line number": [
      54
     ]
    },
    "numpy.arange": {
     "line number": [
      44,
      47
     ]
    },
    "numpy.array": {
     "line number": [
      45
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      54
     ]
    },
    "numpy.histogram": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_02": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "LFPy.test.test_alias_method.LFPy": {
     "line number": [
      63
     ]
    },
    "float": {
     "line number": [
      68
     ]
    },
    "numpy.arange": {
     "line number": [
      58,
      61
     ]
    },
    "numpy.array": {
     "line number": [
      59
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      68
     ]
    },
    "numpy.histogram": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_03": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "LFPy.test.test_alias_method.LFPy": {
     "line number": [
      79
     ]
    },
    "float": {
     "line number": [
      74,
      84
     ]
    },
    "numpy.arange": {
     "line number": [
      73,
      74,
      77
     ]
    },
    "numpy.corrcoef": {
     "line number": [
      84
     ]
    },
    "numpy.histogram": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_04": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "LFPy.test.test_alias_method.LFPy": {
     "line number": [
      94
     ]
    },
    "float": {
     "line number": [
      90
     ]
    },
    "numpy.arange": {
     "line number": [
      89,
      90,
      92
     ]
    },
    "numpy.histogram": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_alias_method.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_imem": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_imem.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_imem.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "LFPy.test.test_imem.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_imem.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_imem.test_imem": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "LFPy.test.test_imem.unittest": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.test.test_imem.test_imem.test_cell_v_init_00": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "LFPy.test.test_imem.LFPy": {
     "line number": [
      24,
      24
     ]
    },
    "LFPy.test.test_imem.os": {
     "line number": [
      24
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      32,
      35
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_imem.test_imem.test_cell_v_init_01": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "LFPy.test.test_imem.LFPy": {
     "line number": [
      38,
      38
     ]
    },
    "LFPy.test.test_imem.os": {
     "line number": [
      38
     ]
    },
    "dict": {
     "line number": [
      44
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      48,
      51
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_imem.test_imem.test_cell_v_init_02": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "LFPy.test.test_imem.LFPy": {
     "line number": [
      54,
      54
     ]
    },
    "LFPy.test.test_imem.os": {
     "line number": [
      54
     ]
    },
    "dict": {
     "line number": [
      60
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      64,
      67
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_imem.test_imem.test_cell_v_init_03": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "LFPy.test.test_imem.LFPy": {
     "line number": [
      70,
      70
     ]
    },
    "LFPy.test.test_imem.os": {
     "line number": [
      70
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      78,
      81
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_imem.test_imem.test_cell_v_init_04": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "LFPy.test.test_imem.LFPy": {
     "line number": [
      84,
      84
     ]
    },
    "LFPy.test.test_imem.os": {
     "line number": [
      84
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      93,
      96
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_imem.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_inputgenerators": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_inputgenerators.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_inputgenerators.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_inputgenerators.st": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "LFPy.test.test_inputgenerators.testInputGenerators": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "LFPy.test.test_inputgenerators.unittest": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.test.test_inputgenerators.testInputGenerators.test_get_activation_times_from_distribution": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "LFPy.test.test_inputgenerators.LFPy": {
     "line number": [
      36
     ]
    },
    "dict": {
     "line number": [
      35
     ]
    },
    "len": {
     "line number": [
      39
     ]
    },
    "scipy.stats.expon": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_inputgenerators.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_misc": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_misc.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.test.test_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_misc.testMisc": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "LFPy.test.test_misc.unittest": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_00": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "LFPy.test.test_misc.neuron": {
     "line number": [
      32,
      33,
      56,
      61,
      66,
      70,
      78,
      84
     ]
    },
    "initialize": {
     "line number": [
      105
     ]
    },
    "integrate": {
     "line number": [
      106
     ]
    },
    "numpy.array": {
     "line number": [
      108,
      109
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_00.collect_i_membrane": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_00.initialize": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "LFPy.test.test_misc.neuron": {
     "line number": [
      89,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_00.integrate": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "LFPy.test.test_misc.neuron": {
     "line number": [
      100,
      102
     ]
    },
    "collect_i_membrane": {
     "line number": [
      101,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_01": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "LFPy.test.test_misc.neuron": {
     "line number": [
      118,
      119,
      142,
      147,
      152,
      156,
      164,
      170
     ]
    },
    "initialize": {
     "line number": [
      193
     ]
    },
    "integrate": {
     "line number": [
      194
     ]
    },
    "numpy.array": {
     "line number": [
      196,
      197
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_01.collect_i_membrane": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_01.initialize": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "LFPy.test.test_misc.neuron": {
     "line number": [
      175,
      176,
      177,
      178
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_01.integrate": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": {
    "LFPy.test.test_misc.neuron": {
     "line number": [
      188,
      190
     ]
    },
    "collect_i_membrane": {
     "line number": [
      189,
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_misc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_morphology_import": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_morphology_import.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_morphology_import.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_morphology_import.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_morphology_import.testMorphologyImport": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "LFPy.test.test_morphology_import.unittest": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.test.test_morphology_import.testMorphologyImport.test_morphology_import_00": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "LFPy.test.test_morphology_import.LFPy": {
     "line number": [
      30,
      30
     ]
    },
    "LFPy.test.test_morphology_import.os": {
     "line number": [
      30
     ]
    },
    "numpy.array": {
     "line number": [
      36
     ]
    },
    "numpy.c_": {
     "line number": [
      33
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_morphology_import.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_network": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_network.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_network.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "LFPy.test.test_network.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.test.test_network.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_network.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_network.ss": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "LFPy.test.test_network.testNetwork": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "LFPy.test.test_network.unittest": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.test.test_network.testNetwork.test_Network_00": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "LFPy.test.test_network.LFPy": {
     "line number": [
      82,
      83,
      95,
      114,
      122
     ]
    },
    "LFPy.test.test_network.neuron": {
     "line number": [
      147
     ]
    },
    "LFPy.test.test_network.os": {
     "line number": [
      82,
      83,
      143
     ]
    },
    "dict": {
     "line number": [
      81,
      92,
      97,
      101,
      105
     ]
    },
    "len": {
     "line number": [
      120
     ]
    },
    "numpy.all": {
     "line number": [
      140
     ]
    },
    "numpy.arange": {
     "line number": [
      128
     ]
    },
    "numpy.sqrt": {
     "line number": [
      127
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      128,
      130,
      131
     ]
    },
    "numpy.zeros": {
     "line number": [
      131
     ]
    },
    "type": {
     "line number": [
      122
     ]
    },
    "zip": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_01": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "LFPy.test.test_network.LFPy": {
     "line number": [
      152,
      153,
      165,
      184
     ]
    },
    "LFPy.test.test_network.neuron": {
     "line number": [
      206
     ]
    },
    "LFPy.test.test_network.os": {
     "line number": [
      152,
      153,
      202
     ]
    },
    "dict": {
     "line number": [
      151,
      162,
      167,
      171,
      175
     ]
    },
    "len": {
     "line number": [
      199
     ]
    },
    "numpy.all": {
     "line number": [
      195,
      197
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_02": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "LFPy.test.test_network.LFPy": {
     "line number": [
      211,
      212,
      224,
      254,
      269
     ]
    },
    "LFPy.test.test_network.neuron": {
     "line number": [
      284
     ]
    },
    "LFPy.test.test_network.os": {
     "line number": [
      211,
      212,
      280
     ]
    },
    "dict": {
     "line number": [
      210,
      221,
      226,
      230,
      234,
      263
     ]
    },
    "numpy.all": {
     "line number": [
      259,
      277
     ]
    },
    "numpy.eye": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_03": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "LFPy.test.test_network.LFPy": {
     "line number": [
      289,
      290,
      302,
      327,
      335,
      347
     ]
    },
    "LFPy.test.test_network.h5py": {
     "line number": [
      359
     ]
    },
    "LFPy.test.test_network.neuron": {
     "line number": [
      369
     ]
    },
    "LFPy.test.test_network.os": {
     "line number": [
      289,
      290,
      359,
      365
     ]
    },
    "dict": {
     "line number": [
      288,
      299,
      304,
      308,
      312,
      320
     ]
    },
    "len": {
     "line number": [
      333
     ]
    },
    "numpy.all": {
     "line number": [
      357
     ]
    },
    "numpy.arange": {
     "line number": [
      322,
      323,
      324,
      341
     ]
    },
    "numpy.sqrt": {
     "line number": [
      340
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      341,
      343,
      344,
      360
     ]
    },
    "numpy.zeros": {
     "line number": [
      344
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      360
     ]
    },
    "type": {
     "line number": [
      335
     ]
    },
    "zip": {
     "line number": [
      334
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_04": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "LFPy.test.test_network.LFPy": {
     "line number": [
      374,
      375,
      390,
      409,
      418
     ]
    },
    "LFPy.test.test_network.neuron": {
     "line number": [
      432
     ]
    },
    "LFPy.test.test_network.os": {
     "line number": [
      374,
      375,
      428
     ]
    },
    "dict": {
     "line number": [
      373,
      384,
      387,
      392,
      396,
      400
     ]
    },
    "numpy.array": {
     "line number": [
      419
     ]
    },
    "numpy.greater": {
     "line number": [
      424
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      424
     ]
    },
    "range": {
     "line number": [
      417
     ]
    },
    "scipy.signal.argrelextrema": {
     "line number": [
      424
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_05": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "LFPy.test.test_network.LFPy": {
     "line number": [
      437,
      438,
      450,
      475,
      486,
      500
     ]
    },
    "LFPy.test.test_network.h5py": {
     "line number": [
      512
     ]
    },
    "LFPy.test.test_network.neuron": {
     "line number": [
      522
     ]
    },
    "LFPy.test.test_network.os": {
     "line number": [
      437,
      438,
      512,
      518
     ]
    },
    "dict": {
     "line number": [
      436,
      447,
      452,
      456,
      460,
      468
     ]
    },
    "len": {
     "line number": [
      482
     ]
    },
    "numpy.all": {
     "line number": [
      510
     ]
    },
    "numpy.arange": {
     "line number": [
      470,
      471,
      472,
      492
     ]
    },
    "numpy.sqrt": {
     "line number": [
      491
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      492,
      494,
      496,
      513
     ]
    },
    "numpy.zeros": {
     "line number": [
      497
     ]
    },
    "type": {
     "line number": [
      486
     ]
    },
    "zip": {
     "line number": [
      483
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_network.testNetworkPopulation": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "LFPy.test.test_network.unittest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.test.test_network.testNetworkPopulation.test_NetworkPopulation_00": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "LFPy.test.test_network.LFPy": {
     "line number": [
      32,
      33,
      45,
      57,
      61
     ]
    },
    "LFPy.test.test_network.neuron": {
     "line number": [
      73
     ]
    },
    "LFPy.test.test_network.os": {
     "line number": [
      32,
      33,
      70
     ]
    },
    "dict": {
     "line number": [
      31,
      42,
      47,
      51
     ]
    },
    "len": {
     "line number": [
      59
     ]
    },
    "numpy.arange": {
     "line number": [
      67
     ]
    },
    "numpy.sqrt": {
     "line number": [
      66
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      67
     ]
    },
    "type": {
     "line number": [
      61
     ]
    },
    "zip": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_network.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_pointprocess": {
  "data": {
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.LFPy": {
     "line number": [
      27,
      33
     ]
    },
    "LFPy.test.test_pointprocess.neuron": {
     "line number": [
      29,
      30,
      31,
      33
     ]
    },
    "LFPy.test.test_pointprocess.os": {
     "line number": [
      27,
      28,
      33
     ]
    },
    "LFPy.test.test_pointprocess.posixpath": {
     "line number": [
      28
     ]
    },
    "LFPy.test.test_pointprocess.pth": {
     "line number": [
      29,
      30,
      31
     ]
    },
    "LFPy.test.test_pointprocess.sys": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "LFPy.test.test_pointprocess.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_pointprocess.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.test.test_pointprocess.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_pointprocess.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_pointprocess.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "LFPy.test.test_pointprocess.pth": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "LFPy.test.test_pointprocess.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "LFPy.test.test_pointprocess.testPointProcess": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.unittest": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.test.test_pointprocess.testPointProcess.test_PointProcess_00": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.LFPy": {
     "line number": [
      41,
      41,
      43
     ]
    },
    "LFPy.test.test_pointprocess.os": {
     "line number": [
      41
     ]
    },
    "numpy.alltrue": {
     "line number": [
      44
     ]
    },
    "numpy.array": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.unittest": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode.test_StimIntElectrode_00": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.LFPy": {
     "line number": [
      253,
      253,
      255
     ]
    },
    "LFPy.test.test_pointprocess.os": {
     "line number": [
      253
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      262,
      263
     ]
    },
    "numpy.zeros": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode.test_StimIntElectrode_01": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.LFPy": {
     "line number": [
      266,
      266,
      274
     ]
    },
    "LFPy.test.test_pointprocess.os": {
     "line number": [
      266
     ]
    },
    "dict": {
     "line number": [
      272
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      288
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      289
     ]
    },
    "numpy.zeros": {
     "line number": [
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode.test_StimIntElectrode_02": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.LFPy": {
     "line number": [
      292,
      292,
      300
     ]
    },
    "LFPy.test.test_pointprocess.os": {
     "line number": [
      292
     ]
    },
    "dict": {
     "line number": [
      298
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      314
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      315
     ]
    },
    "numpy.zeros": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode.test_StimIntElectrode_03": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.LFPy": {
     "line number": [
      319,
      319,
      321,
      326,
      331,
      336
     ]
    },
    "LFPy.test.test_pointprocess.os": {
     "line number": [
      319
     ]
    },
    "hasattr": {
     "line number": [
      348,
      350,
      351,
      352,
      353,
      355
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      345,
      346
     ]
    },
    "numpy.zeros": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.unittest": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_00": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.LFPy": {
     "line number": [
      53,
      53,
      55
     ]
    },
    "LFPy.test.test_pointprocess.os": {
     "line number": [
      53
     ]
    },
    "numpy.arange": {
     "line number": [
      62
     ]
    },
    "numpy.array": {
     "line number": [
      58
     ]
    },
    "numpy.exp": {
     "line number": [
      62
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      64
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      65
     ]
    },
    "numpy.zeros": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_01": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.LFPy": {
     "line number": [
      70,
      70,
      72,
      77,
      82,
      87
     ]
    },
    "LFPy.test.test_pointprocess.os": {
     "line number": [
      70
     ]
    },
    "hasattr": {
     "line number": [
      100,
      103,
      106,
      107,
      109,
      110
     ]
    },
    "numpy.arange": {
     "line number": [
      95,
      102
     ]
    },
    "numpy.array": {
     "line number": [
      75,
      80,
      85,
      90
     ]
    },
    "numpy.exp": {
     "line number": [
      95,
      102
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      97,
      104
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      98
     ]
    },
    "numpy.zeros": {
     "line number": [
      94,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_02": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.LFPy": {
     "line number": [
      115,
      115,
      120,
      125
     ]
    },
    "LFPy.test.test_pointprocess.os": {
     "line number": [
      115
     ]
    },
    "numpy.arange": {
     "line number": [
      133,
      136
     ]
    },
    "numpy.array": {
     "line number": [
      128
     ]
    },
    "numpy.exp": {
     "line number": [
      133,
      136
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      138,
      141
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      139,
      142
     ]
    },
    "numpy.zeros": {
     "line number": [
      132,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_03": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.LFPy": {
     "line number": [
      147,
      147,
      152,
      157
     ]
    },
    "LFPy.test.test_pointprocess.os": {
     "line number": [
      147
     ]
    },
    "numpy.arange": {
     "line number": [
      165,
      168
     ]
    },
    "numpy.exp": {
     "line number": [
      165,
      168
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      170,
      173
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      171,
      174
     ]
    },
    "numpy.zeros": {
     "line number": [
      164,
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_04": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.LFPy": {
     "line number": [
      181,
      181,
      186,
      190
     ]
    },
    "LFPy.test.test_pointprocess.os": {
     "line number": [
      181
     ]
    },
    "numpy.arange": {
     "line number": [
      200,
      203
     ]
    },
    "numpy.array": {
     "line number": [
      195
     ]
    },
    "numpy.exp": {
     "line number": [
      200,
      203
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      205,
      208
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      206,
      209
     ]
    },
    "numpy.zeros": {
     "line number": [
      199,
      202
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_05": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "LFPy.test.test_pointprocess.LFPy": {
     "line number": [
      214,
      214,
      219,
      223
     ]
    },
    "LFPy.test.test_pointprocess.os": {
     "line number": [
      214
     ]
    },
    "numpy.arange": {
     "line number": [
      233,
      236
     ]
    },
    "numpy.array": {
     "line number": [
      227
     ]
    },
    "numpy.exp": {
     "line number": [
      233,
      236
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      238,
      241
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      239,
      242
     ]
    },
    "numpy.zeros": {
     "line number": [
      232,
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_pointprocess.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_recextelectrode": {
  "data": {
   "symbols_in_volume": {
    "LFPy.test.test_recextelectrode.LFPy": {
     "line number": [
      28,
      34
     ]
    },
    "LFPy.test.test_recextelectrode.neuron": {
     "line number": [
      30,
      31,
      32,
      34
     ]
    },
    "LFPy.test.test_recextelectrode.os": {
     "line number": [
      28,
      29,
      34
     ]
    },
    "LFPy.test.test_recextelectrode.posixpath": {
     "line number": [
      29
     ]
    },
    "LFPy.test.test_recextelectrode.pth": {
     "line number": [
      30,
      31,
      32
     ]
    },
    "LFPy.test.test_recextelectrode.sys": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "LFPy.test.test_recextelectrode.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_recextelectrode.neuron": {
  "data": {
   "shadows": "neuron"
  },
  "type": "import"
 },
 "LFPy.test.test_recextelectrode.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_recextelectrode.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_recextelectrode.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "LFPy.test.test_recextelectrode.pth": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "LFPy.test.test_recextelectrode.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "LFPy.test.test_recextelectrode.unittest": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_bad_cell_position_in_slice": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "LFPy.test.test_recextelectrode.LFPy": {
     "line number": [
      232,
      242,
      247,
      251
     ]
    },
    "LFPy.test.test_recextelectrode.os": {
     "line number": [
      232
     ]
    },
    "RuntimeError": {
     "line number": [
      248,
      252
     ]
    },
    "numpy.linspace": {
     "line number": [
      225
     ]
    },
    "numpy.pi": {
     "line number": [
      243
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      248,
      252
     ]
    },
    "numpy.zeros": {
     "line number": [
      226,
      227
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_compare_anisotropic_lfp_methods": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      584,
      587
     ]
    },
    "LFPy.test.test_recextelectrode.LFPy": {
     "line number": [
      527,
      564,
      565,
      566,
      568,
      571
     ]
    },
    "LFPy.test.test_recextelectrode.os": {
     "line number": [
      527
     ]
    },
    "numpy.array": {
     "line number": [
      550
     ]
    },
    "numpy.pi": {
     "line number": [
      543
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      577,
      580
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      584,
      587
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      584,
      587
     ]
    },
    "numpy.zeros": {
     "line number": [
      551,
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_electrical_stimulation": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": {
    "LFPy.test.test_recextelectrode.LFPy": {
     "line number": [
      592
     ]
    },
    "LFPy.test.test_recextelectrode.os": {
     "line number": [
      592
     ]
    },
    "numpy.array": {
     "line number": [
      605
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      644,
      646,
      648
     ]
    },
    "numpy.zeros": {
     "line number": [
      606,
      607
     ]
    },
    "sim1": {
     "line number": [
      640
     ]
    },
    "sim2": {
     "line number": [
      641
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_electrical_stimulation.sim1": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": {
    "LFPy.test.test_recextelectrode.LFPy": {
     "line number": [
      611,
      612
     ]
    },
    "LFPy.test.test_recextelectrode.neuron": {
     "line number": [
      622
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_electrical_stimulation.sim2": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": {
    "LFPy.test.test_recextelectrode.LFPy": {
     "line number": [
      626,
      627
     ]
    },
    "LFPy.test.test_recextelectrode.neuron": {
     "line number": [
      637
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_isotropic_version_of_anisotropic_methods": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "LFPy.test.test_recextelectrode.LFPy": {
     "line number": [
      474,
      511,
      512,
      514,
      517
     ]
    },
    "LFPy.test.test_recextelectrode.os": {
     "line number": [
      474
     ]
    },
    "numpy.linspace": {
     "line number": [
      499
     ]
    },
    "numpy.ones": {
     "line number": [
      497
     ]
    },
    "numpy.pi": {
     "line number": [
      490
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      522
     ]
    },
    "numpy.zeros": {
     "line number": [
      498
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_linesource": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      71
     ]
    },
    "analytical_LFP": {
     "line number": [
      68
     ]
    },
    "numpy.empty": {
     "line number": [
      66
     ]
    },
    "numpy.linspace": {
     "line number": [
      62,
      64
     ]
    },
    "numpy.ones": {
     "line number": [
      63
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      70
     ]
    },
    "range": {
     "line number": [
      67
     ]
    },
    "stickSimulation": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_linesource_contact_average_r10n100": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      176
     ]
    },
    "analytical_LFP": {
     "line number": [
      173
     ]
    },
    "numpy.empty": {
     "line number": [
      171
     ]
    },
    "numpy.linspace": {
     "line number": [
      167,
      169
     ]
    },
    "numpy.ones": {
     "line number": [
      168
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      175
     ]
    },
    "range": {
     "line number": [
      172
     ]
    },
    "stickSimulationAveragingElectrode": {
     "line number": [
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_linesource_dotprodcoeffs": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      123
     ]
    },
    "analytical_LFP": {
     "line number": [
      120
     ]
    },
    "numpy.empty": {
     "line number": [
      118
     ]
    },
    "numpy.linspace": {
     "line number": [
      114,
      116
     ]
    },
    "numpy.ones": {
     "line number": [
      115
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      122
     ]
    },
    "range": {
     "line number": [
      119
     ]
    },
    "stickSimulationDotprodcoeffs": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_pointsource": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      55
     ]
    },
    "analytical_LFP": {
     "line number": [
      52
     ]
    },
    "numpy.empty": {
     "line number": [
      50
     ]
    },
    "numpy.linspace": {
     "line number": [
      46,
      48
     ]
    },
    "numpy.ones": {
     "line number": [
      47
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      54
     ]
    },
    "range": {
     "line number": [
      51
     ]
    },
    "stickSimulation": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_pointsource_contact_average_r10n100": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      158
     ]
    },
    "analytical_LFP": {
     "line number": [
      155
     ]
    },
    "numpy.empty": {
     "line number": [
      153
     ]
    },
    "numpy.linspace": {
     "line number": [
      149,
      151
     ]
    },
    "numpy.ones": {
     "line number": [
      150
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      157
     ]
    },
    "range": {
     "line number": [
      154
     ]
    },
    "stickSimulationAveragingElectrode": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_pointsource_dotprodcoeffs": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      106
     ]
    },
    "analytical_LFP": {
     "line number": [
      103
     ]
    },
    "numpy.empty": {
     "line number": [
      101
     ]
    },
    "numpy.linspace": {
     "line number": [
      97,
      99
     ]
    },
    "numpy.ones": {
     "line number": [
      98
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      105
     ]
    },
    "range": {
     "line number": [
      102
     ]
    },
    "stickSimulationDotprodcoeffs": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_soma_as_point": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      88
     ]
    },
    "analytical_LFP": {
     "line number": [
      85
     ]
    },
    "numpy.empty": {
     "line number": [
      83
     ]
    },
    "numpy.linspace": {
     "line number": [
      79,
      81
     ]
    },
    "numpy.ones": {
     "line number": [
      80
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      87
     ]
    },
    "range": {
     "line number": [
      84
     ]
    },
    "stickSimulation": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_soma_as_point_contact_average_r10n100": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      194
     ]
    },
    "analytical_LFP": {
     "line number": [
      191
     ]
    },
    "numpy.empty": {
     "line number": [
      189
     ]
    },
    "numpy.linspace": {
     "line number": [
      185,
      187
     ]
    },
    "numpy.ones": {
     "line number": [
      186
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      193
     ]
    },
    "range": {
     "line number": [
      190
     ]
    },
    "stickSimulationAveragingElectrode": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_soma_as_point_dotprodcoeffs": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      140
     ]
    },
    "analytical_LFP": {
     "line number": [
      137
     ]
    },
    "numpy.empty": {
     "line number": [
      135
     ]
    },
    "numpy.linspace": {
     "line number": [
      131,
      133
     ]
    },
    "numpy.ones": {
     "line number": [
      132
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      139
     ]
    },
    "range": {
     "line number": [
      136
     ]
    },
    "stickSimulationDotprodcoeffs": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_position_shifted_slice": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": {
    "LFPy.test.test_recextelectrode.LFPy": {
     "line number": [
      382,
      391,
      395
     ]
    },
    "LFPy.test.test_recextelectrode.os": {
     "line number": [
      382
     ]
    },
    "numpy.linspace": {
     "line number": [
      374
     ]
    },
    "numpy.pi": {
     "line number": [
      392
     ]
    },
    "numpy.zeros": {
     "line number": [
      375,
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_return_comp_outside_slice": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "LFPy.test.test_recextelectrode.LFPy": {
     "line number": [
      325,
      335,
      339
     ]
    },
    "LFPy.test.test_recextelectrode.os": {
     "line number": [
      325
     ]
    },
    "RuntimeError": {
     "line number": [
      340
     ]
    },
    "numpy.array": {
     "line number": [
      341
     ]
    },
    "numpy.linspace": {
     "line number": [
      317
     ]
    },
    "numpy.pi": {
     "line number": [
      336
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      345,
      346,
      351,
      352,
      357,
      358,
      363,
      364
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      340
     ]
    },
    "numpy.zeros": {
     "line number": [
      318,
      319
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_sigma_inputs": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "LFPy.test.test_recextelectrode.LFPy": {
     "line number": [
      198,
      208,
      217
     ]
    },
    "LFPy.test.test_recextelectrode.os": {
     "line number": [
      198
     ]
    },
    "ValueError": {
     "line number": [
      217
     ]
    },
    "numpy.linspace": {
     "line number": [
      214
     ]
    },
    "numpy.ones": {
     "line number": [
      212
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      217
     ]
    },
    "numpy.zeros": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_slice_shift_invariance_pointsource": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "LFPy.test.test_recextelectrode.LFPy": {
     "line number": [
      437,
      446,
      449,
      462,
      466
     ]
    },
    "LFPy.test.test_recextelectrode.os": {
     "line number": [
      437
     ]
    },
    "numpy.linspace": {
     "line number": [
      409,
      421
     ]
    },
    "numpy.pi": {
     "line number": [
      432,
      447
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      469
     ]
    },
    "numpy.zeros": {
     "line number": [
      410,
      411,
      422,
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_sqeeze_cell_and_bad_position": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "LFPy.test.test_recextelectrode.LFPy": {
     "line number": [
      268,
      278,
      283,
      287,
      303,
      307
     ]
    },
    "LFPy.test.test_recextelectrode.os": {
     "line number": [
      268
     ]
    },
    "RuntimeError": {
     "line number": [
      284,
      288,
      304,
      308
     ]
    },
    "numpy.linspace": {
     "line number": [
      260,
      295
     ]
    },
    "numpy.pi": {
     "line number": [
      279
     ]
    },
    "numpy.testing.assert_raises": {
     "line number": [
      284,
      288,
      304,
      308
     ]
    },
    "numpy.zeros": {
     "line number": [
      261,
      262,
      296,
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.test_tools": {
  "data": {},
  "type": "module"
 },
 "LFPy.test.test_tools.LFPy": {
  "data": {
   "shadows": "LFPy"
  },
  "type": "import"
 },
 "LFPy.test.test_tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.test.test_tools.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "LFPy.test.test_tools.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "LFPy.test.test_tools.testTools": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "LFPy.test.test_tools.unittest": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "class"
 },
 "LFPy.test.test_tools.testTools.test_tools_load_00": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "LFPy.test.test_tools.LFPy": {
     "line number": [
      34
     ]
    },
    "LFPy.test.test_tools.os": {
     "line number": [
      35
     ]
    },
    "LFPy.test.test_tools.pickle": {
     "line number": [
      32
     ]
    },
    "isinstance": {
     "line number": [
      34
     ]
    },
    "object": {
     "line number": [
      30,
      34
     ]
    },
    "open": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_tools.testTools.test_tools_noise_brown": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": {
    "LFPy.test.test_tools.LFPy": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.test.test_tools.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.test.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "LFPy.tools": {
  "data": {},
  "type": "module"
 },
 "LFPy.tools.load": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "LFPy.tools.pickle": {
     "line number": [
      26
     ]
    },
    "open": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.tools.noise_brown": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "filter": {
     "line number": [
      47,
      48,
      53
     ]
    },
    "list": {
     "line number": [
      48
     ]
    },
    "numpy.random.normal": {
     "line number": [
      52
     ]
    },
    "numpy.zeros": {
     "line number": [
      50
     ]
    },
    "range": {
     "line number": [
      51
     ]
    },
    "rms_flat": {
     "line number": [
      56
     ]
    },
    "scipy.signal.lfilter": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.tools.noise_brown.rms_flat": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "numpy.absolute": {
     "line number": [
      45
     ]
    },
    "numpy.mean": {
     "line number": [
      45
     ]
    },
    "numpy.sqrt": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "LFPy.tools.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "LFPy.tools.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "LFPy.tools.ss": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "LFPy.version": {
  "data": {},
  "type": "module"
 },
 "LFPy.version.version": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 }
}