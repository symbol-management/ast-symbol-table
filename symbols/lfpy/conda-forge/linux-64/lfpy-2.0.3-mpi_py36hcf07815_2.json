{
 "LFPy": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.alias_method": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.alias_method.alias_method": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.floor",
   "numpy.random.rand",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.alias_method.alias_setup": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.cell": {
  "lineno": null,
  "symbols_in_volume": [
   "neuron.version",
   "warnings.warn"
  ],
  "type": "module"
 },
 "LFPy.cell.Cell": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.cell.Cell.__init__": {
  "lineno": 119,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.SectionList",
   "neuron.h.allsec",
   "neuron.h.celsius",
   "neuron.h.define_shape",
   "neuron.h.finitialize",
   "neuron.h.load_file",
   "numpy.arange",
   "os.path.isfile",
   "os.sep",
   "posixpath.sep",
   "sys.platform",
   "warnings.warn"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._calc_icap": {
  "lineno": 1091,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._calc_imem": {
  "lineno": 1072,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._calc_ipas": {
  "lineno": 1081,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._calc_midpoints": {
  "lineno": 765,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._calc_totnsegs": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._check_currents": {
  "lineno": 532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._collect_geometry": {
  "lineno": 721,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._collect_istim": {
  "lineno": 1129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._collect_isyn": {
  "lineno": 1109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._collect_pt3d": {
  "lineno": 1690,
  "symbols_in_volume": [
   "neuron.h.diam3d",
   "neuron.h.n3d",
   "neuron.h.x3d",
   "neuron.h.y3d",
   "neuron.h.z3d",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._collect_rec_variables": {
  "lineno": 1149,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._collect_tvec": {
  "lineno": 1066,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._collect_vmem": {
  "lineno": 1101,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._collect_vstim": {
  "lineno": 1139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._collect_vsyn": {
  "lineno": 1119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._create_polygon": {
  "lineno": 1852,
  "symbols_in_volume": [
   "numpy.arctan2",
   "numpy.cos",
   "numpy.diff",
   "numpy.r_",
   "numpy.sin"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._create_sectionlists": {
  "lineno": 437,
  "symbols_in_volume": [
   "neuron.h.SectionList",
   "neuron.h.allsec"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._create_sectionlists_from_morphology_value": {
  "lineno": 455,
  "symbols_in_volume": [
   "neuron.h.SectionList"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._create_segment_polygon": {
  "lineno": 1953,
  "symbols_in_volume": [
   "numpy.arctan2",
   "numpy.cos",
   "numpy.diff",
   "numpy.r_",
   "numpy.sin"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._get_idx": {
  "lineno": 474,
  "symbols_in_volume": [
   "neuron.h.allsec",
   "numpy.array",
   "numpy.empty",
   "numpy.ones",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._get_rotation": {
  "lineno": 417,
  "symbols_in_volume": [
   "os.path.isfile",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._load_geometry": {
  "lineno": 319,
  "symbols_in_volume": [
   "neuron",
   "neuron.__path__",
   "neuron.h",
   "neuron.h.Import3d_GUI",
   "neuron.h.Import3d_MorphML",
   "neuron.h.Import3d_Neurolucida3",
   "neuron.h.Import3d_SWC_read",
   "neuron.h.define_shape",
   "neuron.h.load_file",
   "neuron.h.sec_counted",
   "neuron.h.this"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._loadspikes": {
  "lineno": 1163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._parent_and_segment_current": {
  "lineno": 2337,
  "symbols_in_volume": [
   "neuron.h.ri",
   "numpy.array",
   "numpy.int64",
   "numpy.take",
   "numpy.where"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._real_positions": {
  "lineno": 1507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._real_pt3d_positions": {
  "lineno": 1840,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._rel_positions": {
  "lineno": 1494,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._rel_pt3d_positions": {
  "lineno": 1832,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._run_custom_codes": {
  "lineno": 365,
  "symbols_in_volume": [
   "neuron.h.define_shape",
   "neuron.h.xopen",
   "os.sep",
   "posixpath.sep",
   "sys.platform",
   "sys.version"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._set_current_dipole_moment_array": {
  "lineno": 1245,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._set_extracellular": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._set_icap_recorders": {
  "lineno": 1223,
  "symbols_in_volume": [
   "neuron.h.List",
   "neuron.h.Vector"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._set_imem_recorders": {
  "lineno": 1200,
  "symbols_in_volume": [
   "neuron.h.List",
   "neuron.h.Vector"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._set_ipas_recorders": {
  "lineno": 1212,
  "symbols_in_volume": [
   "neuron.h.List",
   "neuron.h.Vector"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._set_nsegs": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._set_nsegs_fixed_length": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._set_nsegs_lambda100": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._set_nsegs_lambda_f": {
  "lineno": 499,
  "symbols_in_volume": [
   "neuron.h.lambda_f"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._set_passive": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._set_pt3d_pos": {
  "lineno": 1742,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell._set_pt3d_rotation": {
  "lineno": 1754,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cos",
   "numpy.dot",
   "numpy.sin"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._set_soma_volt_recorder": {
  "lineno": 1173,
  "symbols_in_volume": [
   "neuron.h.Vector",
   "warnings.warn"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._set_variable_recorders": {
  "lineno": 1253,
  "symbols_in_volume": [
   "neuron.h.List",
   "neuron.h.Vector"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._set_voltage_recorders": {
  "lineno": 1234,
  "symbols_in_volume": [
   "neuron.h.List",
   "neuron.h.Vector"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._squeeze_me_macaroni": {
  "lineno": 1481,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._update_pt3d": {
  "lineno": 1725,
  "symbols_in_volume": [
   "neuron.h.define_shape",
   "neuron.h.n3d",
   "neuron.h.pt3dchange"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell._update_synapse_positions": {
  "lineno": 1358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell.cellpickler": {
  "lineno": 1322,
  "symbols_in_volume": [
   "pickle.dump",
   "pickle.dumps"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.chiral_morphology": {
  "lineno": 1450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell.distort_geometry": {
  "lineno": 2410,
  "symbols_in_volume": [
   "numpy.c_",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_axial_currents_from_vmem": {
  "lineno": 2131,
  "symbols_in_volume": [
   "neuron.h.SectionRef",
   "numpy.abs",
   "numpy.array",
   "numpy.c_"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_axial_resistance": {
  "lineno": 2270,
  "symbols_in_volume": [
   "neuron.h.ri",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_closest_idx": {
  "lineno": 814,
  "symbols_in_volume": [
   "numpy.argmin"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_dict_of_children_idx": {
  "lineno": 2298,
  "symbols_in_volume": [
   "neuron.h.SectionRef"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_dict_parent_connections": {
  "lineno": 2320,
  "symbols_in_volume": [
   "neuron.h.parent_connection"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx": {
  "lineno": 771,
  "symbols_in_volume": [
   "neuron.h.SectionList",
   "neuron.h.allsec",
   "numpy.arange",
   "numpy.inf"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx_children": {
  "lineno": 1604,
  "symbols_in_volume": [
   "neuron.h.SectionRef",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx_name": {
  "lineno": 1654,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.int64",
   "numpy.where"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx_parent_children": {
  "lineno": 1636,
  "symbols_in_volume": [
   "neuron.h.SectionRef"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_idx_polygons": {
  "lineno": 1991,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_intersegment_distance": {
  "lineno": 1582,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_intersegment_vector": {
  "lineno": 1559,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell.get_multi_current_dipole_moments": {
  "lineno": 2465,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.newaxis"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_pt3d_polygons": {
  "lineno": 1902,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell.get_rand_idx_area_and_distribution_norm": {
  "lineno": 867,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_rand_idx_area_norm": {
  "lineno": 836,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.get_rand_prob_area_norm": {
  "lineno": 1523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell.get_rand_prob_area_norm_from_idx": {
  "lineno": 1544,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.insert_v_ext": {
  "lineno": 2046,
  "symbols_in_volume": [
   "neuron.h.Vector"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.set_point_process": {
  "lineno": 642,
  "symbols_in_volume": [
   "neuron.h.List",
   "neuron.h.Vector",
   "sys.version"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.set_pos": {
  "lineno": 1276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.cell.Cell.set_rotation": {
  "lineno": 1365,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.cos",
   "numpy.dot",
   "numpy.sin"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.set_synapse": {
  "lineno": 554,
  "symbols_in_volume": [
   "neuron.h.List",
   "neuron.h.NetCon",
   "neuron.h.NetStim",
   "neuron.h.Vector",
   "sys.version"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.simulate": {
  "lineno": 950,
  "symbols_in_volume": [
   "neuron.h.CVode",
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.cell.Cell.strip_hoc_objects": {
  "lineno": 1314,
  "symbols_in_volume": [
   "neuron.h.List"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.__init__": {
  "lineno": 346,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_c1n": {
  "lineno": 1005,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_c2n": {
  "lineno": 1010,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_c3n": {
  "lineno": 1022,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_c4n": {
  "lineno": 1034,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_csf_term1": {
  "lineno": 1045,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_csf_term2": {
  "lineno": 1052,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_d2n": {
  "lineno": 1017,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_d3n": {
  "lineno": 1029,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_d4n": {
  "lineno": 1041,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_rad_potential": {
  "lineno": 550,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.pi",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_tan_potential": {
  "lineno": 590,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.pi",
   "numpy.sin",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_vn": {
  "lineno": 981,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_yn": {
  "lineno": 990,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._calc_zn": {
  "lineno": 1000,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._check_params": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._decompose_dipole": {
  "lineno": 526,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_brain_rad": {
  "lineno": 715,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.insert",
   "numpy.polynomial.legendre.Legendre"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_brain_tan": {
  "lineno": 854,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cos",
   "numpy.sum",
   "scipy.special.lpmv"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_csf_rad": {
  "lineno": 749,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.insert",
   "numpy.polynomial.legendre.Legendre"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_csf_tan": {
  "lineno": 885,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cos",
   "numpy.sum",
   "scipy.special.lpmv"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_scalp_rad": {
  "lineno": 819,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.insert",
   "numpy.polynomial.legendre.Legendre"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_scalp_tan": {
  "lineno": 949,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cos",
   "numpy.sum",
   "scipy.special.lpmv"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_skull_rad": {
  "lineno": 784,
  "symbols_in_volume": [
   "numpy.cos",
   "numpy.insert",
   "numpy.polynomial.legendre.Legendre"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._potential_skull_tan": {
  "lineno": 917,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.cos",
   "numpy.sum",
   "scipy.special.lpmv"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._rz_params": {
  "lineno": 395,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.sum",
   "warnings.warn"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor._sign_rad_dipole": {
  "lineno": 693,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sign"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.calc_phi": {
  "lineno": 646,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.arccos",
   "numpy.cross",
   "numpy.dot",
   "numpy.linalg.norm",
   "numpy.ones",
   "numpy.outer",
   "numpy.pi",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.calc_potential": {
  "lineno": 425,
  "symbols_in_volume": [
   "numpy.linalg.norm",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.calc_potential_from_multi_dipoles": {
  "lineno": 470,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.FourSphereVolumeConductor.calc_theta": {
  "lineno": 630,
  "symbols_in_volume": [
   "numpy.arccos",
   "numpy.dot",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.InfiniteVolumeConductor": {
  "lineno": 1061,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.eegmegcalc.InfiniteVolumeConductor.__init__": {
  "lineno": 1086,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.InfiniteVolumeConductor.get_dipole_potential": {
  "lineno": 1090,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.linalg.norm",
   "numpy.pi"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.InfiniteVolumeConductor.get_multi_dipole_potential": {
  "lineno": 1115,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.MEG": {
  "lineno": 1239,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.eegmegcalc.MEG.__init__": {
  "lineno": 1302,
  "symbols_in_volume": [
   "numpy.pi"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.MEG.calculate_H": {
  "lineno": 1320,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.cross",
   "numpy.empty",
   "numpy.pi",
   "numpy.sqrt",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.MEG.calculate_H_from_iaxial": {
  "lineno": 1377,
  "symbols_in_volume": [
   "numpy.cross",
   "numpy.dot",
   "numpy.pi",
   "numpy.sqrt",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.OneSphereVolumeConductor": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.eegmegcalc.OneSphereVolumeConductor.__init__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.eegmegcalc.OneSphereVolumeConductor.calc_mapping": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.arccos",
   "numpy.arctan2",
   "numpy.array",
   "numpy.copy",
   "numpy.sqrt",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.OneSphereVolumeConductor.calc_potential": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.cos",
   "numpy.dot",
   "numpy.float64",
   "numpy.isfinite",
   "numpy.isreal",
   "numpy.ndarray",
   "numpy.pi",
   "numpy.polynomial.legendre.Legendre",
   "numpy.shape",
   "numpy.sqrt",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.eegmegcalc.get_current_dipole_moment": {
  "lineno": 1178,
  "symbols_in_volume": [
   "numpy.dot",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "LFPy.inputgenerators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.inputgenerators.get_activation_times_from_distribution": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.r_"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.lfpcalc._anisotropic_line_source_case_i": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc._anisotropic_line_source_case_iia": {
  "lineno": 281,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.log",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc._anisotropic_line_source_case_iib": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.log",
   "numpy.sign",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc._anisotropic_line_source_case_iii": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.log",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc._anisotropic_line_source_case_iiii": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.arcsinh",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc._check_rlimit_point": {
  "lineno": 559,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.lfpcalc._deltaS_calc": {
  "lineno": 459,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc._h_calc": {
  "lineno": 466,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sum"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc._linesource_calc_case1": {
  "lineno": 435,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc._linesource_calc_case2": {
  "lineno": 443,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc._linesource_calc_case3": {
  "lineno": 451,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc._r2_calc": {
  "lineno": 475,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.lfpcalc._r_soma_calc": {
  "lineno": 481,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_linesource": {
  "lineno": 299,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_linesource_anisotropic": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.bitwise_and",
   "numpy.isnan",
   "numpy.pi",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_linesource_moi": {
  "lineno": 625,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.pi",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_linesource_moi._omega": {
  "lineno": 689,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.log",
   "numpy.sqrt",
   "numpy.where"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_pointsource": {
  "lineno": 487,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_pointsource_anisotropic": {
  "lineno": 513,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_pointsource_moi": {
  "lineno": 566,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.pi",
   "numpy.sum",
   "numpy.where"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_pointsource_moi._omega": {
  "lineno": 604,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_soma_as_point": {
  "lineno": 356,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.pi",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_soma_as_point_anisotropic": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.bitwise_and",
   "numpy.isnan",
   "numpy.pi",
   "numpy.sqrt",
   "numpy.sum",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_soma_as_point_moi": {
  "lineno": 721,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.any",
   "numpy.arange",
   "numpy.array",
   "numpy.pi",
   "numpy.sum",
   "numpy.where",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc.calc_lfp_soma_as_point_moi._omega": {
  "lineno": 834,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.lfpcalc.return_dist_from_segments": {
  "lineno": 21,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sqrt",
   "numpy.sum"
  ],
  "type": "function"
 },
 "LFPy.network": {
  "lineno": null,
  "symbols_in_volume": [
   "mpi4py.MPI.COMM_WORLD"
  ],
  "type": "module"
 },
 "LFPy.network.DummyCell": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.network.DummyCell.__init__": {
  "lineno": 243,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.network.DummyCell.get_idx": {
  "lineno": 290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.network.Network": {
  "lineno": 488,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.network.Network.__init__": {
  "lineno": 489,
  "symbols_in_volume": [
   "neuron.h.List",
   "neuron.h.ParallelContext"
  ],
  "type": "function"
 },
 "LFPy.network.Network._create_network_dummycell": {
  "lineno": 1073,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.eye",
   "numpy.r_",
   "numpy.sum"
  ],
  "type": "function"
 },
 "LFPy.network.Network.connect": {
  "lineno": 677,
  "symbols_in_volume": [
   "h5py.File",
   "mpi4py.MPI.SUM",
   "neuron.h.ExpSyn",
   "numpy.any",
   "numpy.arange",
   "numpy.array",
   "numpy.empty",
   "numpy.random.normal",
   "numpy.where",
   "os.path.join",
   "scipy.stats.norm"
  ],
  "type": "function"
 },
 "LFPy.network.Network.create_population": {
  "lineno": 543,
  "symbols_in_volume": [
   "neuron.h.Vector"
  ],
  "type": "function"
 },
 "LFPy.network.Network.get_connectivity_rand": {
  "lineno": 620,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.c_",
   "numpy.ones",
   "numpy.random.rand",
   "numpy.where",
   "numpy.zeros",
   "scipy.sparse.csr_matrix"
  ],
  "type": "function"
 },
 "LFPy.network.Network.simulate": {
  "lineno": 857,
  "symbols_in_volume": [
   "h5py.File",
   "mpi4py.MPI.SUM",
   "neuron.h.CVode",
   "numpy.array",
   "numpy.float",
   "numpy.zeros",
   "os.path.join",
   "os.remove"
  ],
  "type": "function"
 },
 "LFPy.network.NetworkCell": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.network.NetworkCell.__init__": {
  "lineno": 133,
  "symbols_in_volume": [
   "neuron.h.List",
   "neuron.h.Vector"
  ],
  "type": "function"
 },
 "LFPy.network.NetworkCell.create_spike_detector": {
  "lineno": 211,
  "symbols_in_volume": [
   "neuron.h.NetCon"
  ],
  "type": "function"
 },
 "LFPy.network.NetworkCell.create_synapse": {
  "lineno": 156,
  "symbols_in_volume": [
   "neuron.h.ExpSyn",
   "neuron.h.Random",
   "numpy.random.randint",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.network.NetworkPopulation": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.network.NetworkPopulation.__init__": {
  "lineno": 298,
  "symbols_in_volume": [
   "h5py.File",
   "numpy.empty",
   "numpy.pi",
   "numpy.random.uniform",
   "os.chdir",
   "os.mkdir",
   "os.path.isdir",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.network.NetworkPopulation.draw_rand_pos": {
  "lineno": 420,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.empty",
   "numpy.float",
   "numpy.float32",
   "numpy.float64",
   "numpy.random.normal",
   "numpy.random.rand",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.network.ReduceStructArray": {
  "lineno": 1593,
  "symbols_in_volume": [
   "mpi4py.MPI.SUM",
   "numpy.array",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.network._run_simulation": {
  "lineno": 1133,
  "symbols_in_volume": [
   "neuron.h.dt",
   "neuron.h.fadvance",
   "neuron.h.fcurrent",
   "neuron.h.finitialize",
   "neuron.h.frecord_init",
   "neuron.h.t"
  ],
  "type": "function"
 },
 "LFPy.network._run_simulation_with_electrode": {
  "lineno": 1189,
  "symbols_in_volume": [
   "h5py.File",
   "neuron.h.dt",
   "neuron.h.fadvance",
   "neuron.h.fcurrent",
   "neuron.h.finitialize",
   "neuron.h.frecord_init",
   "neuron.h.t",
   "numpy.arange",
   "numpy.c_",
   "numpy.dot",
   "numpy.float",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.pointprocess": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.pointprocess.PointProcess": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.pointprocess.PointProcess.__init__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.pointprocess.PointProcess.update_pos": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.pointprocess.StimIntElectrode": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.pointprocess.StimIntElectrode.__init__": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.pointprocess.StimIntElectrode.collect_current": {
  "lineno": 290,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.pointprocess.StimIntElectrode.collect_potential": {
  "lineno": 294,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.pointprocess.Synapse": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.pointprocess.Synapse.__init__": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.pointprocess.Synapse.collect_current": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.pointprocess.Synapse.collect_potential": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.pointprocess.Synapse.set_spike_times": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.ndarray",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.pointprocess.Synapse.set_spike_times_w_netstim": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.recextelectrode": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.recextelectrode.RecExtElectrode": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.recextelectrode.RecExtElectrode.__init__": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._lfp_el_pos_calc_dist": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._lfp_el_pos_calc_dist.calc_xyz_n": {
  "lineno": 455,
  "symbols_in_volume": [
   "numpy.cross",
   "numpy.random.rand",
   "numpy.random.seed",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._lfp_el_pos_calc_dist.create_crcl": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.cross",
   "numpy.random.rand",
   "numpy.sqrt",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._lfp_el_pos_calc_dist.create_sqr": {
  "lineno": 440,
  "symbols_in_volume": [
   "numpy.cross",
   "numpy.linalg.norm",
   "numpy.random.rand",
   "numpy.sqrt",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._lfp_el_pos_calc_dist.loop_over_points": {
  "lineno": 492,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._loop_over_contacts": {
  "lineno": 398,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode._test_imem_sum": {
  "lineno": 306,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.eye",
   "numpy.where",
   "warnings.warn"
  ],
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode.calc_lfp": {
  "lineno": 371,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode.calc_mapping": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.recextelectrode.RecExtElectrode.set_cell": {
  "lineno": 287,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode": {
  "lineno": 555,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.recextelectrode.RecMEAElectrode.__init__": {
  "lineno": 679,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode._return_comp_outside_slice": {
  "lineno": 759,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode._squeeze_cell_in_depth_direction": {
  "lineno": 743,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode.calc_lfp": {
  "lineno": 878,
  "symbols_in_volume": [
   "numpy.dot"
  ],
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode.calc_mapping": {
  "lineno": 823,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.recextelectrode.RecMEAElectrode.test_cell_extent": {
  "lineno": 789,
  "symbols_in_volume": [
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "LFPy.run_simulation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.run_simulation._collect_geometry_neuron": {
  "lineno": 257,
  "symbols_in_volume": [
   "neuron.h.arc3d",
   "neuron.h.area",
   "neuron.h.n3d",
   "neuron.h.x3d",
   "neuron.h.y3d",
   "neuron.h.z3d",
   "numpy.interp",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.run_simulation._run_simulation": {
  "lineno": 23,
  "symbols_in_volume": [
   "neuron.h.dt",
   "neuron.h.fadvance",
   "neuron.h.fcurrent",
   "neuron.h.finitialize",
   "neuron.h.frecord_init",
   "neuron.h.t",
   "time.time"
  ],
  "type": "function"
 },
 "LFPy.run_simulation._run_simulation_with_electrode": {
  "lineno": 72,
  "symbols_in_volume": [
   "h5py.File",
   "neuron.h.dt",
   "neuron.h.fadvance",
   "neuron.h.fcurrent",
   "neuron.h.finitialize",
   "neuron.h.frecord_init",
   "neuron.h.t",
   "numpy.c_",
   "numpy.dot",
   "numpy.zeros",
   "time.time"
  ],
  "type": "function"
 },
 "LFPy.templatecell": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.templatecell.TemplateCell": {
  "lineno": 26,
  "symbols_in_volume": [
   "LFPy.Cell"
  ],
  "type": "class"
 },
 "LFPy.templatecell.TemplateCell.__init__": {
  "lineno": 114,
  "symbols_in_volume": [
   "LFPy.Cell.__init__",
   "neuron.h",
   "neuron.h.load_file",
   "os.sep",
   "posixpath.sep",
   "sys.platform"
  ],
  "type": "function"
 },
 "LFPy.templatecell.TemplateCell._create_sectionlists": {
  "lineno": 216,
  "symbols_in_volume": [
   "neuron.h.SectionList"
  ],
  "type": "function"
 },
 "LFPy.templatecell.TemplateCell._load_geometry": {
  "lineno": 152,
  "symbols_in_volume": [
   "neuron",
   "neuron.__path__",
   "neuron.h",
   "neuron.h.Import3d_GUI",
   "neuron.h.Import3d_MorphML",
   "neuron.h.Import3d_Neurolucida3",
   "neuron.h.Import3d_SWC_read",
   "neuron.h.define_shape",
   "neuron.h.execute",
   "neuron.h.sec_counted"
  ],
  "type": "function"
 },
 "LFPy.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.test._test": {
  "lineno": 17,
  "symbols_in_volume": [
   "unittest.TestLoader",
   "unittest.TextTestRunner"
  ],
  "type": "function"
 },
 "LFPy.test.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.test.common.analytical_LFP": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.exp",
   "numpy.linspace",
   "numpy.pi",
   "numpy.sqrt",
   "numpy.tanh"
  ],
  "type": "function"
 },
 "LFPy.test.common.analytical_LFP.f_to_integrate": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "LFPy.test.common.analytical_LFP.i_mem": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.cosh"
  ],
  "type": "function"
 },
 "LFPy.test.common.complex_quadrature": {
  "lineno": 271,
  "symbols_in_volume": [
   "scipy.integrate.quad"
  ],
  "type": "function"
 },
 "LFPy.test.common.complex_quadrature.imag_func": {
  "lineno": 277,
  "symbols_in_volume": [
   "scipy.imag"
  ],
  "type": "function"
 },
 "LFPy.test.common.complex_quadrature.real_func": {
  "lineno": 275,
  "symbols_in_volume": [
   "scipy.real"
  ],
  "type": "function"
 },
 "LFPy.test.common.stickSimulation": {
  "lineno": 25,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.pi",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.common.stickSimulationAveragingElectrode": {
  "lineno": 72,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.empty",
   "numpy.linspace",
   "numpy.ones",
   "numpy.pi",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.common.stickSimulationDotprodcoeffs": {
  "lineno": 124,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.arange",
   "numpy.eye",
   "numpy.linspace",
   "numpy.ones",
   "numpy.pi",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_alias_method": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.test.test_alias_method.testAliasMethod": {
  "lineno": 24,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_00": {
  "lineno": 30,
  "symbols_in_volume": [
   "LFPy.alias_method.alias_method",
   "numpy.arange",
   "numpy.histogram"
  ],
  "type": "function"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_01": {
  "lineno": 42,
  "symbols_in_volume": [
   "LFPy.alias_method.alias_method",
   "numpy.arange",
   "numpy.array",
   "numpy.corrcoef",
   "numpy.histogram"
  ],
  "type": "function"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_02": {
  "lineno": 56,
  "symbols_in_volume": [
   "LFPy.alias_method.alias_method",
   "numpy.arange",
   "numpy.array",
   "numpy.corrcoef",
   "numpy.histogram"
  ],
  "type": "function"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_03": {
  "lineno": 70,
  "symbols_in_volume": [
   "LFPy.alias_method.alias_method",
   "numpy.arange",
   "numpy.corrcoef",
   "numpy.histogram"
  ],
  "type": "function"
 },
 "LFPy.test.test_alias_method.testAliasMethod.test_alias_method_04": {
  "lineno": 87,
  "symbols_in_volume": [
   "LFPy.alias_method.alias_method",
   "numpy.arange",
   "numpy.histogram"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell": {
  "lineno": null,
  "symbols_in_volume": [
   "LFPy.__path__",
   "neuron.h.nrn_load_dll",
   "neuron.load_mechanisms",
   "neuron.nrn_dll_loaded",
   "neuron.nrn_dll_loaded.append",
   "os.path.join",
   "os.sep",
   "posixpath.sep",
   "sys.platform"
  ],
  "type": "module"
 },
 "LFPy.test.test_cell.cell_w_synapse_from_sections": {
  "lineno": 1524,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.Synapse",
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.stickSimulationTesttvec": {
  "lineno": 1516,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell": {
  "lineno": 39,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_cell.testCell.get_multi_current_dipole_moments00": {
  "lineno": 1468,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.sum",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.get_multi_current_dipole_moments01": {
  "lineno": 1485,
  "symbols_in_volume": [
   "LFPy.__path__",
   "numpy.sum",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_cellpickler_00": {
  "lineno": 638,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "os.path.join",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_chiral_morphology_00": {
  "lineno": 397,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_chiral_morphology_01": {
  "lineno": 426,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_chiral_morphology_02": {
  "lineno": 454,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_distort_geometry_01": {
  "lineno": 1496,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_00": {
  "lineno": 651,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_01": {
  "lineno": 668,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_02": {
  "lineno": 685,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_03": {
  "lineno": 704,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "random.uniform"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_04": {
  "lineno": 724,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_05": {
  "lineno": 745,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_06": {
  "lineno": 764,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_07": {
  "lineno": 785,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_08": {
  "lineno": 806,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_09": {
  "lineno": 825,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_10": {
  "lineno": 842,
  "symbols_in_volume": [
   "neuron.h.Section",
   "neuron.h.SectionList"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_11": {
  "lineno": 859,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_12": {
  "lineno": 878,
  "symbols_in_volume": [
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_13": {
  "lineno": 888,
  "symbols_in_volume": [
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_14": {
  "lineno": 899,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "neuron.h.allsec",
   "neuron.h.define_shape",
   "neuron.h.pt3dchange",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_axial_currents_from_vmem_15": {
  "lineno": 932,
  "symbols_in_volume": [
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "neuron.h.allsec",
   "neuron.h.define_shape",
   "neuron.h.pt3dchange",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_closest_idx_00": {
  "lineno": 549,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_idx_00": {
  "lineno": 532,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_idx_children_00": {
  "lineno": 560,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.testing.assert_array_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_idx_name_00": {
  "lineno": 576,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_idx_parent_children_00": {
  "lineno": 568,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.testing.assert_array_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_intersegment_distance_00": {
  "lineno": 521,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.array",
   "numpy.sqrt",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_intersegment_vector_00": {
  "lineno": 508,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_rand_idx_area_norm_00": {
  "lineno": 584,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.arange",
   "numpy.corrcoef",
   "numpy.histogram",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_rand_prob_area_norm_00": {
  "lineno": 483,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_rand_prob_area_norm_from_idx": {
  "lineno": 493,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_get_rand_prob_area_norm_from_idx_00": {
  "lineno": 500,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.array",
   "numpy.testing.assert_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_point_process_00": {
  "lineno": 619,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_pos_00": {
  "lineno": 172,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_pos_01": {
  "lineno": 178,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_pos_02": {
  "lineno": 185,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_pos_03": {
  "lineno": 193,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_pos_04": {
  "lineno": 202,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_pos_05": {
  "lineno": 213,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_pos_06": {
  "lineno": 221,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_rotation_00": {
  "lineno": 230,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_rotation_01": {
  "lineno": 253,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_rotation_02": {
  "lineno": 276,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_rotation_03": {
  "lineno": 297,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_rotation_04": {
  "lineno": 321,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_rotation_05": {
  "lineno": 345,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_rotation_06": {
  "lineno": 368,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_set_synapse_00": {
  "lineno": 603,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_current_dipole_moment_00": {
  "lineno": 1124,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.c_",
   "numpy.dot",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_current_dipole_moment_01": {
  "lineno": 1159,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.c_",
   "numpy.dot",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_current_dipole_moment_02": {
  "lineno": 1194,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.Synapse",
   "LFPy.__path__",
   "numpy.array",
   "numpy.c_",
   "numpy.dot",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_recorder_00": {
  "lineno": 969,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_recorder_01": {
  "lineno": 996,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_recorder_02": {
  "lineno": 1021,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_recorder_03": {
  "lineno": 1046,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_recorder_04": {
  "lineno": 1073,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_simulate_recorder_05": {
  "lineno": 1098,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_strip_hoc_objects_00": {
  "lineno": 630,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tstart_00": {
  "lineno": 1227,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_00": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_01": {
  "lineno": 57,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_02": {
  "lineno": 70,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_03": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_04": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_05": {
  "lineno": 109,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_06": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_07": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_08": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_tvec_09": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_with_recextelectrode_00": {
  "lineno": 1271,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_with_recextelectrode_01": {
  "lineno": 1321,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_with_recextelectrode_02": {
  "lineno": 1370,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_cell.testCell.test_cell_with_recextelectrode_03": {
  "lineno": 1419,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.test.test_eegmegcalc.cell_w_synapse_from_sections": {
  "lineno": 588,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.Synapse",
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.cell_w_synapse_from_sections_w_electrode": {
  "lineno": 618,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecExtElectrode",
   "LFPy.Synapse",
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.decompose_dipole": {
  "lineno": 580,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.make_class_object": {
  "lineno": 562,
  "symbols_in_volume": [
   "LFPy.FourSphereVolumeConductor"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.make_simple_class_object": {
  "lineno": 570,
  "symbols_in_volume": [
   "LFPy.FourSphereVolumeConductor",
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor": {
  "lineno": 140,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_phi": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_potential": {
  "lineno": 279,
  "symbols_in_volume": [
   "LFPy.FourSphereVolumeConductor",
   "LFPy.InfiniteVolumeConductor",
   "numpy.array",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_potential01": {
  "lineno": 302,
  "symbols_in_volume": [
   "LFPy.FourSphereVolumeConductor",
   "LFPy.__path__",
   "numpy.abs",
   "numpy.load",
   "numpy.max",
   "numpy.testing.assert_array_less",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_potential_from_multi_dipoles00": {
  "lineno": 319,
  "symbols_in_volume": [
   "LFPy.FourSphereVolumeConductor",
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_potential_from_multi_dipoles01": {
  "lineno": 356,
  "symbols_in_volume": [
   "LFPy.FourSphereVolumeConductor",
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_theta": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.pi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_vn": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_yn": {
  "lineno": 265,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_calc_zn": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_check_params00": {
  "lineno": 161,
  "symbols_in_volume": [
   "LFPy.FourSphereVolumeConductor",
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_check_params01": {
  "lineno": 179,
  "symbols_in_volume": [
   "LFPy.FourSphereVolumeConductor",
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_check_params02": {
  "lineno": 197,
  "symbols_in_volume": [
   "LFPy.FourSphereVolumeConductor",
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_decompose_dipole": {
  "lineno": 209,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_rad_dipole": {
  "lineno": 215,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_rad_sign": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_rz_params": {
  "lineno": 145,
  "symbols_in_volume": [
   "LFPy.FourSphereVolumeConductor",
   "numpy.array",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testFourSphereVolumeConductor.test_tan_dipole": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testInfiniteVolumeConductor": {
  "lineno": 395,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_eegmegcalc.testInfiniteVolumeConductor.test_get_dipole_potential": {
  "lineno": 399,
  "symbols_in_volume": [
   "LFPy.InfiniteVolumeConductor",
   "numpy.array",
   "numpy.pi",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testInfiniteVolumeConductor.test_get_multi_dipole_potential00": {
  "lineno": 407,
  "symbols_in_volume": [
   "LFPy.InfiniteVolumeConductor",
   "neuron.h",
   "neuron.h.Section",
   "neuron.h.SectionList",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testInfiniteVolumeConductor.test_get_multi_dipole_potential01": {
  "lineno": 434,
  "symbols_in_volume": [
   "LFPy.InfiniteVolumeConductor",
   "LFPy.__path__",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testInfiniteVolumeConductor.test_get_multi_dipole_potential02": {
  "lineno": 448,
  "symbols_in_volume": [
   "LFPy.InfiniteVolumeConductor",
   "LFPy.__path__",
   "numpy.array",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_almost_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testMEG": {
  "lineno": 25,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_eegmegcalc.testMEG.test_MEG_00": {
  "lineno": 30,
  "symbols_in_volume": [
   "LFPy.MEG",
   "numpy.eye",
   "numpy.pi",
   "numpy.r_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testMEG.test_MEG_01": {
  "lineno": 48,
  "symbols_in_volume": [
   "LFPy.MEG",
   "numpy.eye",
   "numpy.pi",
   "numpy.r_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testMEG.test_MEG_02": {
  "lineno": 66,
  "symbols_in_volume": [
   "LFPy.MEG",
   "numpy.eye",
   "numpy.pi",
   "numpy.r_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testMEG.test_MEG_03": {
  "lineno": 85,
  "symbols_in_volume": [
   "LFPy.MEG",
   "numpy.eye",
   "numpy.pi",
   "numpy.r_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testMEG.test_MEG_04": {
  "lineno": 103,
  "symbols_in_volume": [
   "LFPy.MEG",
   "numpy.eye",
   "numpy.pi",
   "numpy.r_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testMEG.test_MEG_05": {
  "lineno": 121,
  "symbols_in_volume": [
   "LFPy.MEG",
   "numpy.eye",
   "numpy.pi",
   "numpy.r_",
   "numpy.testing.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testOneSphereVolumeConductor": {
  "lineno": 463,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_eegmegcalc.testOneSphereVolumeConductor.test_OneSphereVolumeConductor_00": {
  "lineno": 467,
  "symbols_in_volume": [
   "LFPy.OneSphereVolumeConductor",
   "numpy.arange",
   "numpy.array",
   "numpy.pi",
   "numpy.r_",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testOneSphereVolumeConductor.test_OneSphereVolumeConductor_01": {
  "lineno": 496,
  "symbols_in_volume": [
   "LFPy.OneSphereVolumeConductor",
   "numpy.arange",
   "numpy.array",
   "numpy.ones",
   "numpy.pi",
   "numpy.r_",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "LFPy.test.test_eegmegcalc.testOneSphereVolumeConductor.test_OneSphereVolumeConductor_02": {
  "lineno": 525,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.OneSphereVolumeConductor",
   "LFPy.__path__",
   "numpy.arange",
   "numpy.array",
   "numpy.pi",
   "numpy.r_",
   "numpy.testing.assert_almost_equal",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_inputgenerators": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.test.test_inputgenerators.testInputGenerators": {
  "lineno": 24,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_inputgenerators.testInputGenerators.test_get_activation_times_from_distribution": {
  "lineno": 28,
  "symbols_in_volume": [
   "LFPy.inputgenerators.get_activation_times_from_distribution",
   "scipy.stats.expon"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.test.test_lfpcalc.DummyCell": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "class"
 },
 "LFPy.test.test_lfpcalc.DummyCell.__init__": {
  "lineno": 566,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.DummyCell.get_idx": {
  "lineno": 580,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc": {
  "lineno": 21,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_linesource_moi_20steps": {
  "lineno": 394,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_linesource_moi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_linesource_moi_doubling": {
  "lineno": 232,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_linesource",
   "LFPy.lfpcalc.calc_lfp_linesource_moi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_linesource_moi_infinite_slice": {
  "lineno": 474,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_linesource_moi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_linesource_moi_saline_effect": {
  "lineno": 312,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_linesource_moi",
   "numpy.testing.assert_array_less"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_linesource_moi_too_close": {
  "lineno": 140,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_linesource",
   "LFPy.lfpcalc.calc_lfp_linesource_moi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_linesource_too_close": {
  "lineno": 191,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_linesource",
   "numpy.testing.assert_array_less"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_moi_ecog": {
  "lineno": 78,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_pointsource_moi",
   "numpy.abs",
   "numpy.pi",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource": {
  "lineno": 42,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_pointsource",
   "numpy.pi",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource_anisotropic": {
  "lineno": 530,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_pointsource_anisotropic",
   "numpy.array",
   "numpy.pi",
   "numpy.sqrt",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource_moi_20steps": {
  "lineno": 369,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_pointsource_moi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource_moi_doubling": {
  "lineno": 206,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_pointsource",
   "LFPy.lfpcalc.calc_lfp_pointsource_moi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource_moi_homogeneous": {
  "lineno": 52,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_pointsource",
   "LFPy.lfpcalc.calc_lfp_pointsource_moi",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource_moi_infinite_slice": {
  "lineno": 446,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_pointsource_moi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource_moi_saline_effect": {
  "lineno": 285,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_pointsource_moi",
   "numpy.testing.assert_array_less"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_pointsource_moi_too_close": {
  "lineno": 115,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_pointsource",
   "LFPy.lfpcalc.calc_lfp_pointsource_moi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_soma_as_point_moi_20steps": {
  "lineno": 420,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_soma_as_point_moi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_soma_as_point_moi_doubling": {
  "lineno": 258,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_soma_as_point",
   "LFPy.lfpcalc.calc_lfp_soma_as_point_moi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_soma_as_point_moi_infinite_slice": {
  "lineno": 501,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_soma_as_point_moi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_soma_as_point_moi_saline_effect": {
  "lineno": 340,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_soma_as_point_moi",
   "numpy.testing.assert_array_less"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_calc_lfp_soma_as_point_moi_too_close": {
  "lineno": 165,
  "symbols_in_volume": [
   "LFPy.lfpcalc.calc_lfp_soma_as_point",
   "LFPy.lfpcalc.calc_lfp_soma_as_point_moi",
   "numpy.testing.assert_almost_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_deltaS_calc": {
  "lineno": 546,
  "symbols_in_volume": [
   "LFPy.lfpcalc._deltaS_calc",
   "numpy.sqrt",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_lfpcalc.testLfpCalc.test_return_dist_from_segment": {
  "lineno": 25,
  "symbols_in_volume": [
   "LFPy.lfpcalc.return_dist_from_segments",
   "numpy.sqrt",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_misc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.test.test_misc.testMisc": {
  "lineno": 23,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_00": {
  "lineno": 28,
  "symbols_in_volume": [
   "neuron.h.CVode",
   "neuron.h.ExpSyn",
   "neuron.h.NetCon",
   "neuron.h.NetStim",
   "neuron.h.Section",
   "neuron.h.Vector",
   "neuron.h.dt",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_00.collect_i_membrane": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_00.initialize": {
  "lineno": 88,
  "symbols_in_volume": [
   "neuron.h.fcurrent",
   "neuron.h.finitialize"
  ],
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_00.integrate": {
  "lineno": 99,
  "symbols_in_volume": [
   "neuron.h.fadvance",
   "neuron.h.t"
  ],
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_01": {
  "lineno": 114,
  "symbols_in_volume": [
   "neuron.h.CVode",
   "neuron.h.ExpSyn",
   "neuron.h.NetCon",
   "neuron.h.NetStim",
   "neuron.h.Section",
   "neuron.h.Vector",
   "neuron.h.dt",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_01.collect_i_membrane": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_01.initialize": {
  "lineno": 174,
  "symbols_in_volume": [
   "neuron.h.fcurrent",
   "neuron.h.finitialize",
   "neuron.h.frecord_init",
   "neuron.h.t"
  ],
  "type": "function"
 },
 "LFPy.test.test_misc.testMisc.test_neuron_record_i_membrane_methods_01.integrate": {
  "lineno": 187,
  "symbols_in_volume": [
   "neuron.h.fadvance",
   "neuron.h.t"
  ],
  "type": "function"
 },
 "LFPy.test.test_network": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.test.test_network.testNetwork": {
  "lineno": 74,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_network.testNetwork.test_Network_00": {
  "lineno": 78,
  "symbols_in_volume": [
   "LFPy.Network",
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "neuron.h",
   "numpy.all",
   "numpy.arange",
   "numpy.sqrt",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "os.path.join",
   "os.system"
  ],
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_01": {
  "lineno": 145,
  "symbols_in_volume": [
   "LFPy.Network",
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "neuron.h",
   "numpy.all",
   "os.path.join",
   "os.system"
  ],
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_02": {
  "lineno": 201,
  "symbols_in_volume": [
   "LFPy.Network",
   "LFPy.NetworkCell",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "neuron.h",
   "numpy.all",
   "numpy.eye",
   "os.path.join",
   "os.system"
  ],
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_03": {
  "lineno": 276,
  "symbols_in_volume": [
   "LFPy.Network",
   "LFPy.NetworkCell",
   "LFPy.RecExtElectrode",
   "LFPy.__path__",
   "h5py.File",
   "neuron.h",
   "numpy.all",
   "numpy.arange",
   "numpy.sqrt",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "numpy.zeros_like",
   "os.path.join",
   "os.system"
  ],
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_04": {
  "lineno": 358,
  "symbols_in_volume": [
   "LFPy.Network",
   "LFPy.NetworkCell",
   "LFPy.Synapse",
   "LFPy.__path__",
   "neuron.h",
   "numpy.array",
   "numpy.greater",
   "numpy.testing.assert_equal",
   "os.path.join",
   "os.system",
   "scipy.signal.argrelextrema"
  ],
  "type": "function"
 },
 "LFPy.test.test_network.testNetwork.test_Network_05": {
  "lineno": 418,
  "symbols_in_volume": [
   "LFPy.Network",
   "LFPy.NetworkCell",
   "LFPy.RecExtElectrode",
   "LFPy.__path__",
   "h5py.File",
   "neuron.h",
   "numpy.all",
   "numpy.arange",
   "numpy.sqrt",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "os.path.join",
   "os.system"
  ],
  "type": "function"
 },
 "LFPy.test.test_network.testNetworkPopulation": {
  "lineno": 26,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_network.testNetworkPopulation.test_NetworkPopulation_00": {
  "lineno": 30,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.NetworkPopulation",
   "LFPy.__path__",
   "neuron.h",
   "numpy.arange",
   "numpy.sqrt",
   "numpy.testing.assert_equal",
   "os.path.join",
   "os.system"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell": {
  "lineno": null,
  "symbols_in_volume": [
   "LFPy.__path__",
   "neuron.h.nrn_load_dll",
   "neuron.load_mechanisms",
   "neuron.nrn_dll_loaded",
   "neuron.nrn_dll_loaded.append",
   "os.path.join",
   "os.sep",
   "posixpath.sep",
   "sys.platform"
  ],
  "type": "module"
 },
 "LFPy.test.test_networkcell.stickSimulationTesttvec": {
  "lineno": 1336,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell": {
  "lineno": 38,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_cellpickler_00": {
  "lineno": 753,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "os.path.join",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_chiral_morphology_00": {
  "lineno": 445,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_chiral_morphology_01": {
  "lineno": 478,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_chiral_morphology_02": {
  "lineno": 510,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_distort_geometry_01": {
  "lineno": 1310,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_closest_idx_00": {
  "lineno": 633,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_idx_00": {
  "lineno": 613,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_idx_children_00": {
  "lineno": 647,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.testing.assert_array_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_idx_name_00": {
  "lineno": 671,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_idx_parent_children_00": {
  "lineno": 659,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.testing.assert_array_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_intersegment_distance_00": {
  "lineno": 598,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.array",
   "numpy.sqrt",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_intersegment_vector_00": {
  "lineno": 581,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_rand_idx_area_norm_00": {
  "lineno": 683,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.arange",
   "numpy.corrcoef",
   "numpy.histogram",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_rand_prob_area_norm_00": {
  "lineno": 544,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_rand_prob_area_norm_from_idx": {
  "lineno": 558,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_get_rand_prob_area_norm_from_idx_00": {
  "lineno": 569,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.array",
   "numpy.testing.assert_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_point_process_00": {
  "lineno": 726,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_pos_00": {
  "lineno": 170,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_pos_01": {
  "lineno": 180,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_pos_02": {
  "lineno": 191,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_pos_03": {
  "lineno": 202,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_pos_04": {
  "lineno": 215,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_pos_05": {
  "lineno": 229,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_pos_06": {
  "lineno": 241,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_rotation_00": {
  "lineno": 253,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_rotation_01": {
  "lineno": 280,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_rotation_02": {
  "lineno": 307,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_rotation_03": {
  "lineno": 332,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_rotation_04": {
  "lineno": 359,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_rotation_05": {
  "lineno": 386,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_rotation_06": {
  "lineno": 412,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_set_synapse_00": {
  "lineno": 706,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_current_dipole_moment_00": {
  "lineno": 942,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.c_",
   "numpy.dot",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_current_dipole_moment_01": {
  "lineno": 980,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.c_",
   "numpy.dot",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_current_dipole_moment_02": {
  "lineno": 1018,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.Synapse",
   "LFPy.__path__",
   "numpy.array",
   "numpy.c_",
   "numpy.dot",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_recorder_00": {
  "lineno": 770,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_recorder_01": {
  "lineno": 800,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_recorder_02": {
  "lineno": 828,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_recorder_03": {
  "lineno": 856,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_recorder_04": {
  "lineno": 886,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_simulate_recorder_05": {
  "lineno": 914,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_strip_hoc_objects_00": {
  "lineno": 741,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tstart_00": {
  "lineno": 1054,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_00": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_01": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_02": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_03": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_04": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_05": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_06": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_07": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_08": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_tvec_09": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_with_recextelectrode_00": {
  "lineno": 1101,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_with_recextelectrode_01": {
  "lineno": 1154,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_with_recextelectrode_02": {
  "lineno": 1206,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_networkcell.testNetworkCell.test_cell_with_recextelectrode_03": {
  "lineno": 1258,
  "symbols_in_volume": [
   "LFPy.NetworkCell",
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_pointprocess": {
  "lineno": null,
  "symbols_in_volume": [
   "LFPy.__path__",
   "neuron.h.nrn_load_dll",
   "neuron.load_mechanisms",
   "neuron.nrn_dll_loaded",
   "neuron.nrn_dll_loaded.append",
   "os.path.join",
   "os.sep",
   "posixpath.sep",
   "sys.platform"
  ],
  "type": "module"
 },
 "LFPy.test.test_pointprocess.testPointProcess": {
  "lineno": 36,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_pointprocess.testPointProcess.test_PointProcess_00": {
  "lineno": 40,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.PointProcess",
   "LFPy.__path__",
   "numpy.alltrue",
   "numpy.array",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode": {
  "lineno": 238,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode.test_StimIntElectrode_00": {
  "lineno": 242,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode.test_StimIntElectrode_01": {
  "lineno": 255,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode.test_StimIntElectrode_02": {
  "lineno": 281,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testStimIntElectrode.test_StimIntElectrode_03": {
  "lineno": 308,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse": {
  "lineno": 48,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_00": {
  "lineno": 52,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.Synapse",
   "LFPy.__path__",
   "numpy.arange",
   "numpy.array",
   "numpy.exp",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_01": {
  "lineno": 68,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.Synapse",
   "LFPy.__path__",
   "numpy.arange",
   "numpy.array",
   "numpy.exp",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_02": {
  "lineno": 112,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.Synapse",
   "LFPy.__path__",
   "numpy.arange",
   "numpy.array",
   "numpy.exp",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_03": {
  "lineno": 143,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.Synapse",
   "LFPy.__path__",
   "numpy.arange",
   "numpy.exp",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_04": {
  "lineno": 174,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.Synapse",
   "LFPy.__path__",
   "numpy.arange",
   "numpy.array",
   "numpy.exp",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_pointprocess.testSynapse.test_Synapse_05": {
  "lineno": 206,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.Synapse",
   "LFPy.__path__",
   "numpy.arange",
   "numpy.array",
   "numpy.exp",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_equal",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode": {
  "lineno": null,
  "symbols_in_volume": [
   "LFPy.__path__",
   "neuron.h.nrn_load_dll",
   "neuron.load_mechanisms",
   "neuron.nrn_dll_loaded",
   "neuron.nrn_dll_loaded.append",
   "os.path.join",
   "os.sep",
   "posixpath.sep",
   "sys.platform"
  ],
  "type": "module"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode": {
  "lineno": 37,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_bad_cell_position_in_slice": {
  "lineno": 221,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecMEAElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.pi",
   "numpy.testing.assert_raises",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_compare_anisotropic_lfp_methods": {
  "lineno": 532,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.array",
   "numpy.pi",
   "numpy.testing.assert_almost_equal",
   "numpy.testing.assert_array_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_isotropic_version_of_anisotropic_methods": {
  "lineno": 478,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_linesource": {
  "lineno": 58,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_linesource_contact_average_r10n100": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_linesource_dotprodcoeffs": {
  "lineno": 110,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_pointsource": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_pointsource_contact_average_r10n100": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_pointsource_dotprodcoeffs": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_soma_as_point": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_soma_as_point_contact_average_r10n100": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_method_soma_as_point_dotprodcoeffs": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_position_shifted_slice": {
  "lineno": 372,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecMEAElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.pi",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_return_comp_outside_slice": {
  "lineno": 315,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecMEAElectrode",
   "LFPy.__path__",
   "numpy.array",
   "numpy.linspace",
   "numpy.pi",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_sigma_inputs": {
  "lineno": 197,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecExtElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_raises",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_slice_shift_invariance_pointsource": {
  "lineno": 404,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecMEAElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_recextelectrode.testRecExtElectrode.test_sqeeze_cell_and_bad_position": {
  "lineno": 257,
  "symbols_in_volume": [
   "LFPy.Cell",
   "LFPy.RecMEAElectrode",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.pi",
   "numpy.testing.assert_raises",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell": {
  "lineno": null,
  "symbols_in_volume": [
   "LFPy.__path__",
   "neuron.h.nrn_load_dll",
   "neuron.load_mechanisms",
   "neuron.nrn_dll_loaded",
   "neuron.nrn_dll_loaded.append",
   "os.path.join",
   "os.sep",
   "posixpath.sep",
   "sys.platform"
  ],
  "type": "module"
 },
 "LFPy.test.test_templatecell.stickSimulationTesttvec": {
  "lineno": 1339,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell": {
  "lineno": 38,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_cellpickler_00": {
  "lineno": 753,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "os.path.join",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_chiral_morphology_00": {
  "lineno": 445,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_chiral_morphology_01": {
  "lineno": 478,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_chiral_morphology_02": {
  "lineno": 510,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_distort_geometry_01": {
  "lineno": 1310,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_closest_idx_00": {
  "lineno": 633,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_idx_00": {
  "lineno": 613,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_idx_children_00": {
  "lineno": 647,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.testing.assert_array_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_idx_name_00": {
  "lineno": 671,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.array",
   "numpy.testing.assert_array_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_idx_parent_children_00": {
  "lineno": 659,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.testing.assert_array_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_intersegment_distance_00": {
  "lineno": 598,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.array",
   "numpy.sqrt",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_intersegment_vector_00": {
  "lineno": 581,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_rand_idx_area_norm_00": {
  "lineno": 683,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.arange",
   "numpy.corrcoef",
   "numpy.histogram",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_rand_prob_area_norm_00": {
  "lineno": 544,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_rand_prob_area_norm_from_idx": {
  "lineno": 558,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_get_rand_prob_area_norm_from_idx_00": {
  "lineno": 569,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.array",
   "numpy.testing.assert_equal",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_point_process_00": {
  "lineno": 726,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_pos_00": {
  "lineno": 170,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_pos_01": {
  "lineno": 180,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_pos_02": {
  "lineno": 191,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_pos_03": {
  "lineno": 202,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_pos_04": {
  "lineno": 215,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_pos_05": {
  "lineno": 229,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_pos_06": {
  "lineno": 241,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_rotation_00": {
  "lineno": 253,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_rotation_01": {
  "lineno": 280,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_rotation_02": {
  "lineno": 307,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_rotation_03": {
  "lineno": 332,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_rotation_04": {
  "lineno": 359,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_rotation_05": {
  "lineno": 386,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_rotation_06": {
  "lineno": 412,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.pi",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_set_synapse_00": {
  "lineno": 706,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_current_dipole_moment_00": {
  "lineno": 942,
  "symbols_in_volume": [
   "LFPy.StimIntElectrode",
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.c_",
   "numpy.dot",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_current_dipole_moment_01": {
  "lineno": 980,
  "symbols_in_volume": [
   "LFPy.StimIntElectrode",
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.c_",
   "numpy.dot",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_current_dipole_moment_02": {
  "lineno": 1018,
  "symbols_in_volume": [
   "LFPy.Synapse",
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.array",
   "numpy.c_",
   "numpy.dot",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_recorder_00": {
  "lineno": 770,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_recorder_01": {
  "lineno": 800,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_recorder_02": {
  "lineno": 828,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_recorder_03": {
  "lineno": 856,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_recorder_04": {
  "lineno": 886,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_simulate_recorder_05": {
  "lineno": 914,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.all",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_strip_hoc_objects_00": {
  "lineno": 741,
  "symbols_in_volume": [
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tstart_00": {
  "lineno": 1054,
  "symbols_in_volume": [
   "LFPy.StimIntElectrode",
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_00": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_01": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_02": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_03": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_04": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_05": {
  "lineno": 107,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_06": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_07": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.linspace",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_08": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_tvec_09": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_with_recextelectrode_00": {
  "lineno": 1101,
  "symbols_in_volume": [
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_with_recextelectrode_01": {
  "lineno": 1154,
  "symbols_in_volume": [
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_with_recextelectrode_02": {
  "lineno": 1206,
  "symbols_in_volume": [
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_templatecell.testTemplateCell.test_cell_with_recextelectrode_03": {
  "lineno": 1258,
  "symbols_in_volume": [
   "LFPy.RecExtElectrode",
   "LFPy.StimIntElectrode",
   "LFPy.TemplateCell",
   "LFPy.__path__",
   "numpy.linspace",
   "numpy.ones",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "os.path.join"
  ],
  "type": "function"
 },
 "LFPy.test.test_tools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.test.test_tools.testTools": {
  "lineno": 24,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "LFPy.test.test_tools.testTools.test_tools_load_00": {
  "lineno": 28,
  "symbols_in_volume": [
   "LFPy.tools.load",
   "os.remove",
   "pickle.dump"
  ],
  "type": "function"
 },
 "LFPy.test.test_tools.testTools.test_tools_noise_brown": {
  "lineno": 38,
  "symbols_in_volume": [
   "LFPy.tools.noise_brown"
  ],
  "type": "function"
 },
 "LFPy.tools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "LFPy.tools.load": {
  "lineno": 21,
  "symbols_in_volume": [
   "pickle.load"
  ],
  "type": "function"
 },
 "LFPy.tools.noise_brown": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.random.normal",
   "numpy.zeros",
   "scipy.signal.lfilter"
  ],
  "type": "function"
 },
 "LFPy.tools.noise_brown.rms_flat": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.absolute",
   "numpy.mean",
   "numpy.sqrt"
  ],
  "type": "function"
 }
}