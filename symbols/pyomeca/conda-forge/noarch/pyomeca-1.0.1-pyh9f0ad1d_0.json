{
 "pyomeca": {
  "data": {},
  "type": "module"
 },
 "pyomeca.analogs": {
  "data": {},
  "type": "module"
 },
 "pyomeca.analogs.Analogs": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "pyomeca.analogs.Analogs.__new__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.ndarray",
    "pandas.Series",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.analogs.Analogs._get_requested_channels_from_pandas": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "list",
    "staticmethod",
    "str",
    "type",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pyomeca.analogs.Analogs._reshape_flat_array": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.ndarray",
    "staticmethod",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.analogs.Analogs.from_c3d": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "int",
    "pathlib.Path",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.analogs.Analogs.from_csv": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "int",
    "pathlib.Path",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.analogs.Analogs.from_excel": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "int",
    "pathlib.Path",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.analogs.Analogs.from_mot": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "pathlib.Path",
    "str",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.analogs.Analogs.from_random_data": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "classmethod",
    "getattr",
    "numpy.random",
    "pyomeca.analogs.Analogs",
    "str",
    "tuple",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.analogs.Analogs.from_sto": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "bool",
    "classmethod",
    "pathlib.Path",
    "str",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.analogs.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pyomeca.analogs.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyomeca.analogs.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pyomeca.analogs.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pyomeca.analogs.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyomeca.analogs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyomeca.analogs.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyomeca.analogs.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyomeca.angles": {
  "data": {},
  "type": "module"
 },
 "pyomeca.angles.Angles": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "pyomeca.angles.Angles.__new__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.ndarray",
    "pandas.Series",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.angles.Angles.from_random_data": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "classmethod",
    "getattr",
    "numpy.random",
    "pyomeca.angles.Angles",
    "str",
    "tuple",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.angles.Angles.from_rototrans": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.angles.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyomeca.angles.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyomeca.angles.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyomeca.angles.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyomeca.angles.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyomeca.dataarray_accessor": {
  "data": {},
  "type": "module"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object",
    "xarray.register_dataarray_accessor"
   ]
  },
  "type": "class"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.abs": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.band_pass": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "filter.band_pass",
    "float",
    "int",
    "list",
    "numpy.array",
    "tuple",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.band_stop": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "filter.band_stop",
    "float",
    "int",
    "list",
    "numpy.array",
    "tuple",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.center": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.detect_onset": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.detect_outliers": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "int",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.fft": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "bool",
    "float",
    "int",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.high_pass": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "filter.high_pass",
    "float",
    "int",
    "numpy.array",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.low_pass": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "filter.low_pass",
    "float",
    "int",
    "numpy.array",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.matmul": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.norm": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "int",
    "list",
    "ord",
    "str",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.normalize": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.rms": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.rotation": {
  "data": {
   "lineno": 747
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.sqrt": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.square": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.time_normalize": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.array",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.to_csv": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "bool",
    "pathlib.Path",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.to_matlab": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pathlib.Path",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.to_wide_dataframe": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.DataArrayAccessor.translation": {
  "data": {
   "lineno": 755
  },
  "type": "function"
 },
 "pyomeca.dataarray_accessor.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyomeca.dataarray_accessor.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pyomeca.dataarray_accessor.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyomeca.dataarray_accessor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyomeca.dataarray_accessor.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyomeca.dataarray_accessor.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyomeca.io": {
  "data": {},
  "type": "module"
 },
 "pyomeca.io.read": {
  "data": {},
  "type": "module"
 },
 "pyomeca.io.read.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pyomeca.io.read.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pyomeca.io.read.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyomeca.io.read.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pyomeca.io.read.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyomeca.io.read.ezc3d": {
  "data": {
   "shadows": "ezc3d"
  },
  "type": "import"
 },
 "pyomeca.io.read.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyomeca.io.read.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyomeca.io.read.read_c3d": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "caller",
    "col_spliter",
    "dict",
    "get_data_function",
    "getattr",
    "int",
    "isinstance",
    "numpy.arange",
    "pathlib.Path",
    "pyomeca.io.read.ezc3d",
    "str",
    "type",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.io.read.read_csv_or_excel": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "caller",
    "caller._get_requested_channels_from_pandas",
    "caller._reshape_flat_array",
    "dict",
    "int",
    "isinstance",
    "numpy.arange",
    "pandas.read_csv",
    "pandas.read_excel",
    "pathlib.Path",
    "str",
    "type",
    "typing.Callable",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyomeca.io.read.read_sto_or_mot": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "caller.from_csv",
    "find_end_header_in_opensim_file",
    "int",
    "pathlib.Path",
    "str",
    "typing.Callable",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyomeca.io.read.read_trc": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "caller.from_csv",
    "pathlib.Path",
    "str",
    "typing.Callable",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "pyomeca.io.read.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyomeca.io.utils": {
  "data": {},
  "type": "module"
 },
 "pyomeca.io.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyomeca.io.utils.col_spliter": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "pyomeca.io.utils.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "pyomeca.io.utils.find_end_header_in_opensim_file": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "IndexError",
    "enumerate",
    "int",
    "open",
    "pyomeca.io.utils.csv",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "pyomeca.io.write": {
  "data": {},
  "type": "module"
 },
 "pyomeca.io.write.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyomeca.io.write.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pyomeca.io.write.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyomeca.io.write.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyomeca.io.write.savemat": {
  "data": {
   "shadows": "scipy.io.savemat"
  },
  "type": "import"
 },
 "pyomeca.io.write.to_wide_dataframe": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.io.write.write_csv": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "bool",
    "pathlib.Path",
    "str",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.io.write.write_matlab": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pathlib.Path",
    "scipy.io.savemat",
    "str",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.io.write.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyomeca.markers": {
  "data": {},
  "type": "module"
 },
 "pyomeca.markers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "pyomeca.markers.Markers": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "pyomeca.markers.Markers.__new__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "numpy.insert",
    "numpy.ndarray",
    "pandas.Series",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.markers.Markers._get_requested_channels_from_pandas": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "list",
    "staticmethod",
    "str",
    "type",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "pyomeca.markers.Markers._reshape_flat_array": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "IndexError",
    "int",
    "numpy.array",
    "numpy.ndarray",
    "staticmethod",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.markers.Markers.from_c3d": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "int",
    "pathlib.Path",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.markers.Markers.from_csv": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "int",
    "pathlib.Path",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.markers.Markers.from_excel": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "int",
    "pathlib.Path",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.markers.Markers.from_random_data": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "classmethod",
    "getattr",
    "numpy.random",
    "pyomeca.markers.Markers",
    "str",
    "tuple",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.markers.Markers.from_rototrans": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "classmethod",
    "markers_from_rototrans",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.markers.Markers.from_trc": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "classmethod",
    "pathlib.Path",
    "str",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.markers.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyomeca.markers.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pyomeca.markers.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "pyomeca.markers.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyomeca.markers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyomeca.markers.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyomeca.markers.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyomeca.processing": {
  "data": {},
  "type": "module"
 },
 "pyomeca.processing.angles": {
  "data": {},
  "type": "module"
 },
 "pyomeca.processing.angles.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pyomeca.processing.angles.angles_from_rototrans": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "caller",
    "len",
    "numpy.arccos",
    "numpy.arcsin",
    "numpy.arctan2",
    "numpy.ndarray",
    "str",
    "typing.Callable",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.angles.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyomeca.processing.angles.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyomeca.processing.filter": {
  "data": {},
  "type": "module"
 },
 "pyomeca.processing.filter.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyomeca.processing.filter.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyomeca.processing.filter._base_filter": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "list",
    "numpy.array",
    "scipy.signal.butter",
    "scipy.signal.filtfilt",
    "str",
    "tuple",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray",
    "xarray.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.filter.band_pass": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "float",
    "int",
    "list",
    "numpy.array",
    "pyomeca.processing.filter._base_filter",
    "tuple",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.filter.band_stop": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "float",
    "int",
    "list",
    "numpy.array",
    "pyomeca.processing.filter._base_filter",
    "tuple",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.filter.butter": {
  "data": {
   "shadows": "scipy.signal.butter"
  },
  "type": "import"
 },
 "pyomeca.processing.filter.filtfilt": {
  "data": {
   "shadows": "scipy.signal.filtfilt"
  },
  "type": "import"
 },
 "pyomeca.processing.filter.high_pass": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "pyomeca.processing.filter._base_filter",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.filter.low_pass": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "pyomeca.processing.filter._base_filter",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.filter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyomeca.processing.filter.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyomeca.processing.interp": {
  "data": {},
  "type": "module"
 },
 "pyomeca.processing.interp.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyomeca.processing.interp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyomeca.processing.interp.time_normalize": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "bool",
    "int",
    "numpy.array",
    "numpy.linspace",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.interp.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyomeca.processing.markers": {
  "data": {},
  "type": "module"
 },
 "pyomeca.processing.markers.markers_from_rototrans": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.einsum",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.markers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyomeca.processing.markers.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyomeca.processing.matrix": {
  "data": {},
  "type": "module"
 },
 "pyomeca.processing.matrix.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyomeca.processing.matrix.abs_": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.abs",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.matrix.center": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.matrix.matmul": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.matrix.norm": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "isinstance",
    "list",
    "numpy.linalg.norm",
    "ord",
    "str",
    "typing.Union",
    "xarray.DataArray",
    "xarray.apply_ufunc"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.matrix.normalize": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyomeca.processing.matrix.rms": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.matrix.sqrt": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.sqrt",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.matrix.square": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.square",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.matrix.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyomeca.processing.misc": {
  "data": {},
  "type": "module"
 },
 "pyomeca.processing.misc.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyomeca.processing.misc.detect_onset": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "float",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.count_nonzero",
    "numpy.diff",
    "numpy.hstack",
    "numpy.inf",
    "numpy.isnan",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.vstack",
    "range",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.misc.detect_outliers": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "int",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.misc.fft": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.abs",
    "numpy.floor",
    "scipy.fftpack.fft",
    "scipy.fftpack.fftfreq",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.misc.fftpack": {
  "data": {
   "shadows": "scipy.fftpack"
  },
  "type": "import"
 },
 "pyomeca.processing.misc.has_correct_name": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "str",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyomeca.processing.misc.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyomeca.processing.rototrans": {
  "data": {},
  "type": "module"
 },
 "pyomeca.processing.rototrans.Angles": {
  "data": {
   "shadows": "pyomeca.Angles"
  },
  "type": "import"
 },
 "pyomeca.processing.rototrans.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "pyomeca.processing.rototrans.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyomeca.processing.rototrans.least_squares": {
  "data": {
   "shadows": "scipy.optimize.least_squares"
  },
  "type": "import"
 },
 "pyomeca.processing.rototrans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyomeca.processing.rototrans.rotation_getter": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.rototrans.rotation_setter": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.rototrans.rototrans_from_averaged_rototrans": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "caller.from_euler_angles",
    "numpy.ndarray",
    "pyomeca.Angles",
    "pyomeca.Angles.from_rototrans",
    "scipy.optimize.least_squares",
    "typing.Callable",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.rototrans.rototrans_from_averaged_rototrans.objective_function": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "caller.from_euler_angles",
    "numpy.ravel"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.rototrans.rototrans_from_euler_angles": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "caller",
    "len",
    "numpy.cos",
    "numpy.einsum",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.repeat",
    "numpy.sin",
    "numpy.zeros",
    "pyomeca.Angles",
    "range",
    "str",
    "typing.Callable",
    "typing.Optional",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.rototrans.rototrans_from_markers": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "caller",
    "numpy.cross",
    "numpy.linalg.norm",
    "numpy.zeros",
    "sorted",
    "str",
    "typing.Callable",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.rototrans.rototrans_from_transposed_rototrans": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "caller",
    "numpy.einsum",
    "numpy.zeros",
    "typing.Callable",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.rototrans.translation_getter": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.rototrans.translation_setter": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.processing.rototrans.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pyomeca.rototrans": {
  "data": {},
  "type": "module"
 },
 "pyomeca.rototrans.Angles": {
  "data": {
   "shadows": "pyomeca.Angles"
  },
  "type": "import"
 },
 "pyomeca.rototrans.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "pyomeca.rototrans.Rototrans": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "pyomeca.rototrans.Rototrans.__new__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "list",
    "numpy.alltrue",
    "numpy.array",
    "numpy.eye",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.random.choice",
    "pandas.Series",
    "typing.Optional",
    "typing.Union",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.rototrans.Rototrans.from_averaged_rototrans": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "classmethod",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.rototrans.Rototrans.from_euler_angles": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "typing.Optional",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.rototrans.Rototrans.from_markers": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "classmethod",
    "str",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.rototrans.Rototrans.from_random_data": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "classmethod",
    "pyomeca.Angles.from_random_data",
    "pyomeca.rototrans.Rototrans",
    "str",
    "tuple",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.rototrans.Rototrans.from_transposed_rototrans": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "classmethod",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "pyomeca.rototrans.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "pyomeca.rototrans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyomeca.rototrans.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyomeca.rototrans.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests._constants": {
  "data": {
   "symbols_in_volume": [
    "eval",
    "matplotlib.pyplot.style.use",
    "matplotlib.rcParams",
    "pandas.read_csv",
    "pathlib.Path",
    "pyomeca.Analogs.from_c3d",
    "pyomeca.Markers.from_c3d",
    "restart_seed",
    "tests._constants.DATA_FOLDER",
    "tests._constants.EXPECTED_VALUES_CSV",
    "tests._constants.MARKERS_ANALOGS_C3D"
   ]
  },
  "type": "module"
 },
 "tests._constants.ANALOGS_CSV": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "tests._constants.ANALOGS_DATA": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "tests._constants.ANALOGS_MOT": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tests._constants.ANALOGS_STO": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "tests._constants.ANALOGS_XLSX": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "tests._constants.Analogs": {
  "data": {
   "shadows": "pyomeca.Analogs"
  },
  "type": "import"
 },
 "tests._constants.DATA_FOLDER": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "tests._constants.EXPECTED_VALUES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "tests._constants.EXPECTED_VALUES_CSV": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tests._constants.MARKERS_ANALOGS_C3D": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tests._constants.MARKERS_CSV": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tests._constants.MARKERS_CSV_WITHOUT_HEADER": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "tests._constants.MARKERS_DATA": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "tests._constants.MARKERS_TRC": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tests._constants.MARKERS_XLSX": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "tests._constants.Markers": {
  "data": {
   "shadows": "pyomeca.Markers"
  },
  "type": "import"
 },
 "tests._constants.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "tests._constants.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "tests._constants.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests._constants.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests._constants.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "tests.test_docstrings": {
  "data": {
   "symbols_in_volume": [
    "tests.test_docstrings.generate_doc_files",
    "tests.test_docstrings.pyomeca",
    "tests.utils.do_we_generate_doc_files",
    "tests.utils.generate_api_json",
    "tests.utils.get_available_methods"
   ]
  },
  "type": "module"
 },
 "tests.test_docstrings.DocStringError": {
  "data": {
   "shadows": "tests.utils.DocStringError"
  },
  "type": "import"
 },
 "tests.test_docstrings.black": {
  "data": {
   "shadows": "black"
  },
  "type": "import"
 },
 "tests.test_docstrings.do_we_generate_doc_files": {
  "data": {
   "shadows": "tests.utils.do_we_generate_doc_files"
  },
  "type": "import"
 },
 "tests.test_docstrings.extract_code_blocks_from_md": {
  "data": {
   "shadows": "tests.utils.extract_code_blocks_from_md"
  },
  "type": "import"
 },
 "tests.test_docstrings.function_has_return": {
  "data": {
   "shadows": "tests.utils.function_has_return"
  },
  "type": "import"
 },
 "tests.test_docstrings.generate_api_json": {
  "data": {
   "shadows": "tests.utils.generate_api_json"
  },
  "type": "import"
 },
 "tests.test_docstrings.generate_doc_files": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tests.test_docstrings.get_available_methods": {
  "data": {
   "shadows": "tests.utils.get_available_methods"
  },
  "type": "import"
 },
 "tests.test_docstrings.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tests.test_docstrings.methods": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "tests.test_docstrings.pyomeca": {
  "data": {
   "shadows": "pyomeca"
  },
  "type": "import"
 },
 "tests.test_docstrings.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_docstrings.test_docstring_example": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "exec",
    "tests.test_docstrings.generate_doc_files",
    "tests.test_docstrings.methods",
    "tests.test_docstrings.pytest",
    "tests.utils.extract_code_blocks_from_md"
   ]
  },
  "type": "function"
 },
 "tests.test_docstrings.test_docstring_has_example": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "tests.test_docstrings.methods",
    "tests.test_docstrings.pytest",
    "tests.utils.DocStringError"
   ]
  },
  "type": "function"
 },
 "tests.test_docstrings.test_docstring_lint_code_blocks": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "tests.test_docstrings.black",
    "tests.test_docstrings.methods",
    "tests.test_docstrings.pytest",
    "tests.utils.extract_code_blocks_from_md"
   ]
  },
  "type": "function"
 },
 "tests.test_docstrings.test_docstring_parameters": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "tests.test_docstrings.inspect",
    "tests.test_docstrings.methods",
    "tests.test_docstrings.pytest",
    "tests.utils.DocStringError"
   ]
  },
  "type": "function"
 },
 "tests.test_docstrings.test_docstring_return": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "tests.test_docstrings.inspect",
    "tests.test_docstrings.methods",
    "tests.test_docstrings.pytest",
    "tests.utils.DocStringError",
    "tests.utils.function_has_return"
   ]
  },
  "type": "function"
 },
 "tests.test_docstrings.test_has_docstring": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "tests.test_docstrings.methods",
    "tests.test_docstrings.pytest",
    "tests.utils.DocStringError"
   ]
  },
  "type": "function"
 },
 "tests.test_documentation_code_blocks": {
  "data": {
   "symbols_in_volume": [
    "open",
    "pathlib.Path",
    "tests.test_documentation_code_blocks.doc_files",
    "tests.test_documentation_code_blocks.doc_files_string",
    "tests.test_documentation_code_blocks.docs_path"
   ]
  },
  "type": "module"
 },
 "tests.test_documentation_code_blocks.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "tests.test_documentation_code_blocks.black": {
  "data": {
   "shadows": "black"
  },
  "type": "import"
 },
 "tests.test_documentation_code_blocks.doc_files": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "tests.test_documentation_code_blocks.doc_files_string": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "tests.test_documentation_code_blocks.docs_path": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "tests.test_documentation_code_blocks.extract_code_blocks_from_md": {
  "data": {
   "shadows": "tests.utils.extract_code_blocks_from_md"
  },
  "type": "import"
 },
 "tests.test_documentation_code_blocks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_documentation_code_blocks.test_code_blocks": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "exec",
    "tests.test_documentation_code_blocks.doc_files",
    "tests.test_documentation_code_blocks.doc_files_string",
    "tests.test_documentation_code_blocks.pytest",
    "tests.utils.extract_code_blocks_from_md"
   ]
  },
  "type": "function"
 },
 "tests.test_documentation_code_blocks.test_lint_code_blocks": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "tests.test_documentation_code_blocks.black",
    "tests.test_documentation_code_blocks.doc_files",
    "tests.test_documentation_code_blocks.doc_files_string",
    "tests.test_documentation_code_blocks.pytest",
    "tests.utils.extract_code_blocks_from_md"
   ]
  },
  "type": "function"
 },
 "tests.test_ezc3d": {
  "data": {},
  "type": "module"
 },
 "tests.test_ezc3d.ezc3d": {
  "data": {
   "shadows": "ezc3d"
  },
  "type": "import"
 },
 "tests.test_ezc3d.test_ezc3d": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "is_expected_array",
    "tests.test_ezc3d.ezc3d",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.test_ezc3d.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "tests.test_fileio_read_csv_c3d": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "tests._constants.ANALOGS_CSV",
    "tests._constants.EXPECTED_VALUES",
    "tests._constants.MARKERS_CSV"
   ]
  },
  "type": "module"
 },
 "tests.test_fileio_read_csv_c3d.ANALOGS_CSV": {
  "data": {
   "shadows": "tests._constants.ANALOGS_CSV"
  },
  "type": "import"
 },
 "tests.test_fileio_read_csv_c3d.ANALOGS_XLSX": {
  "data": {
   "shadows": "tests._constants.ANALOGS_XLSX"
  },
  "type": "import"
 },
 "tests.test_fileio_read_csv_c3d.Analogs": {
  "data": {
   "shadows": "pyomeca.Analogs"
  },
  "type": "import"
 },
 "tests.test_fileio_read_csv_c3d.EXPECTED_VALUES": {
  "data": {
   "shadows": "tests._constants.EXPECTED_VALUES"
  },
  "type": "import"
 },
 "tests.test_fileio_read_csv_c3d.MARKERS_ANALOGS_C3D": {
  "data": {
   "shadows": "tests._constants.MARKERS_ANALOGS_C3D"
  },
  "type": "import"
 },
 "tests.test_fileio_read_csv_c3d.MARKERS_CSV": {
  "data": {
   "shadows": "tests._constants.MARKERS_CSV"
  },
  "type": "import"
 },
 "tests.test_fileio_read_csv_c3d.MARKERS_CSV_WITHOUT_HEADER": {
  "data": {
   "shadows": "tests._constants.MARKERS_CSV_WITHOUT_HEADER"
  },
  "type": "import"
 },
 "tests.test_fileio_read_csv_c3d.MARKERS_XLSX": {
  "data": {
   "shadows": "tests._constants.MARKERS_XLSX"
  },
  "type": "import"
 },
 "tests.test_fileio_read_csv_c3d.Markers": {
  "data": {
   "shadows": "pyomeca.Markers"
  },
  "type": "import"
 },
 "tests.test_fileio_read_csv_c3d._analogs_cases": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "tests.test_fileio_read_csv_c3d._extensions": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tests.test_fileio_read_csv_c3d._markers_cases": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "tests.test_fileio_read_csv_c3d.analogs_csv_kwargs": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "tests.test_fileio_read_csv_c3d.is_expected_array": {
  "data": {
   "shadows": "tests.utils.is_expected_array"
  },
  "type": "import"
 },
 "tests.test_fileio_read_csv_c3d.markers_csv_kwargs": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "tests.test_fileio_read_csv_c3d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_fileio_read_csv_c3d.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_fileio_read_csv_c3d.test_csv_edge_cases": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_array_equal",
    "pyomeca.Analogs.from_csv",
    "tests.test_fileio_read_csv_c3d.analogs_csv_kwargs",
    "tests.test_fileio_read_csv_c3d.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_fileio_read_csv_c3d.test_csv_trailing_columns": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pyomeca.Analogs.from_csv",
    "tests.test_fileio_read_csv_c3d.analogs_csv_kwargs"
   ]
  },
  "type": "function"
 },
 "tests.test_fileio_read_csv_c3d.test_csv_without_header": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pyomeca.Analogs.from_csv",
    "pyomeca.Markers.from_csv",
    "tests._constants.ANALOGS_CSV",
    "tests._constants.EXPECTED_VALUES",
    "tests._constants.MARKERS_CSV_WITHOUT_HEADER",
    "tests.utils.is_expected_array"
   ]
  },
  "type": "function"
 },
 "tests.test_fileio_read_csv_c3d.test_read_analogs": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.testing.assert_array_equal",
    "pyomeca.Analogs.from_c3d",
    "pyomeca.Analogs.from_csv",
    "str",
    "tests._constants.MARKERS_ANALOGS_C3D",
    "tests.test_fileio_read_csv_c3d._analogs_cases",
    "tests.test_fileio_read_csv_c3d._extensions",
    "tests.test_fileio_read_csv_c3d.analogs_csv_kwargs",
    "tests.test_fileio_read_csv_c3d.pytest",
    "tests.utils.is_expected_array"
   ]
  },
  "type": "function"
 },
 "tests.test_fileio_read_csv_c3d.test_read_catch_error": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "getattr",
    "pyomeca.Analogs.from_c3d",
    "pyomeca.Analogs.from_csv",
    "pyomeca.Markers",
    "pyomeca.Markers.from_csv",
    "reader",
    "tests._constants.MARKERS_ANALOGS_C3D",
    "tests._constants.MARKERS_CSV",
    "tests.test_fileio_read_csv_c3d._extensions",
    "tests.test_fileio_read_csv_c3d.analogs_csv_kwargs",
    "tests.test_fileio_read_csv_c3d.markers_csv_kwargs",
    "tests.test_fileio_read_csv_c3d.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_fileio_read_csv_c3d.test_read_markers": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.testing.assert_array_equal",
    "pyomeca.Markers.from_c3d",
    "pyomeca.Markers.from_csv",
    "str",
    "tests._constants.MARKERS_ANALOGS_C3D",
    "tests.test_fileio_read_csv_c3d._extensions",
    "tests.test_fileio_read_csv_c3d._markers_cases",
    "tests.test_fileio_read_csv_c3d.markers_csv_kwargs",
    "tests.test_fileio_read_csv_c3d.pytest",
    "tests.utils.is_expected_array"
   ]
  },
  "type": "function"
 },
 "tests.test_fileio_read_csv_c3d.test_read_xlsx": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "dict",
    "pyomeca.Analogs.from_excel",
    "pyomeca.Markers.from_excel",
    "tests._constants.ANALOGS_XLSX",
    "tests._constants.EXPECTED_VALUES",
    "tests._constants.MARKERS_XLSX",
    "tests.test_fileio_read_csv_c3d.analogs_csv_kwargs",
    "tests.test_fileio_read_csv_c3d.markers_csv_kwargs",
    "tests.utils.is_expected_array"
   ]
  },
  "type": "function"
 },
 "tests.test_fileio_read_other_formats": {
  "data": {},
  "type": "module"
 },
 "tests.test_fileio_read_other_formats.Analogs": {
  "data": {
   "shadows": "pyomeca.Analogs"
  },
  "type": "import"
 },
 "tests.test_fileio_read_other_formats.Markers": {
  "data": {
   "shadows": "pyomeca.Markers"
  },
  "type": "import"
 },
 "tests.test_fileio_read_other_formats.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_fileio_read_other_formats.test_read_mot": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "is_expected_array",
    "pyomeca.Analogs.from_mot"
   ]
  },
  "type": "function"
 },
 "tests.test_fileio_read_other_formats.test_read_sto": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "IndexError",
    "is_expected_array",
    "pyomeca.Analogs.from_sto",
    "tests.test_fileio_read_other_formats.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_fileio_read_other_formats.test_read_trc": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "is_expected_array",
    "pyomeca.Markers.from_trc"
   ]
  },
  "type": "function"
 },
 "tests.test_fileio_write": {
  "data": {},
  "type": "module"
 },
 "tests.test_fileio_write.ANALOGS_DATA": {
  "data": {
   "shadows": "tests._constants.ANALOGS_DATA"
  },
  "type": "import"
 },
 "tests.test_fileio_write.MARKERS_DATA": {
  "data": {
   "shadows": "tests._constants.MARKERS_DATA"
  },
  "type": "import"
 },
 "tests.test_fileio_write.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "tests.test_fileio_write.loadmat": {
  "data": {
   "shadows": "scipy.io.loadmat"
  },
  "type": "import"
 },
 "tests.test_fileio_write.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_fileio_write.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_fileio_write.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_fileio_write.test_write_csv": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "bool",
    "numpy.testing.assert_array_almost_equal",
    "pandas.read_csv",
    "pathlib.Path",
    "tests._constants.ANALOGS_DATA",
    "tests._constants.MARKERS_DATA",
    "tests.test_fileio_write.pytest",
    "xarray.DataArray",
    "xarray.align"
   ]
  },
  "type": "function"
 },
 "tests.test_fileio_write.test_write_matlab": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal",
    "pathlib.Path",
    "scipy.io.loadmat",
    "tests._constants.ANALOGS_DATA",
    "tests._constants.MARKERS_DATA",
    "tests.test_fileio_write.pytest",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.test_fileio_write.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "tests.test_object_creation": {
  "data": {},
  "type": "module"
 },
 "tests.test_object_creation.Analogs": {
  "data": {
   "shadows": "pyomeca.Analogs"
  },
  "type": "import"
 },
 "tests.test_object_creation.Angles": {
  "data": {
   "shadows": "pyomeca.Angles"
  },
  "type": "import"
 },
 "tests.test_object_creation.Markers": {
  "data": {
   "shadows": "pyomeca.Markers"
  },
  "type": "import"
 },
 "tests.test_object_creation.Rototrans": {
  "data": {
   "shadows": "pyomeca.Rototrans"
  },
  "type": "import"
 },
 "tests.test_object_creation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_object_creation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_object_creation.test_analogs_creation": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "is_expected_array",
    "numpy.testing.assert_array_equal",
    "pyomeca.Analogs",
    "pyomeca.Analogs.from_random_data",
    "tests.test_object_creation.pytest",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.test_object_creation.test_angles_creation": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "is_expected_array",
    "numpy.testing.assert_array_equal",
    "pyomeca.Angles",
    "pyomeca.Angles.from_random_data",
    "tests.test_object_creation.pytest",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.test_object_creation.test_markers_creation": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "is_expected_array",
    "numpy.testing.assert_array_equal",
    "pyomeca.Markers",
    "pyomeca.Markers.from_random_data",
    "tests.test_object_creation.pytest",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.test_object_creation.test_rototrans_creation": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "is_expected_array",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.testing.assert_array_equal",
    "pyomeca.Angles",
    "pyomeca.Markers",
    "pyomeca.Rototrans",
    "pyomeca.Rototrans.from_markers",
    "pyomeca.Rototrans.from_random_data",
    "tests.test_object_creation.pytest",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.test_object_creation.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "tests.test_processing_algebra": {
  "data": {},
  "type": "module"
 },
 "tests.test_processing_algebra.ANALOGS_DATA": {
  "data": {
   "shadows": "tests._constants.ANALOGS_DATA"
  },
  "type": "import"
 },
 "tests.test_processing_algebra.Analogs": {
  "data": {
   "shadows": "pyomeca.Analogs"
  },
  "type": "import"
 },
 "tests.test_processing_algebra.EXPECTED_VALUES": {
  "data": {
   "shadows": "tests._constants.EXPECTED_VALUES"
  },
  "type": "import"
 },
 "tests.test_processing_algebra.MARKERS_DATA": {
  "data": {
   "shadows": "tests._constants.MARKERS_DATA"
  },
  "type": "import"
 },
 "tests.test_processing_algebra.Markers": {
  "data": {
   "shadows": "pyomeca.Markers"
  },
  "type": "import"
 },
 "tests.test_processing_algebra.is_expected_array": {
  "data": {
   "shadows": "tests.utils.is_expected_array"
  },
  "type": "import"
 },
 "tests.test_processing_algebra.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_processing_algebra.restart_seed": {
  "data": {
   "shadows": "tests.utils.restart_seed"
  },
  "type": "import"
 },
 "tests.test_processing_algebra.test_proc_abs": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "tests._constants.ANALOGS_DATA.meca.abs",
    "tests._constants.EXPECTED_VALUES",
    "tests._constants.MARKERS_DATA.meca.abs",
    "tests.utils.is_expected_array"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_algebra.test_proc_center": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "tests._constants.ANALOGS_DATA.isel",
    "tests._constants.ANALOGS_DATA.meca.center",
    "tests._constants.EXPECTED_VALUES",
    "tests._constants.MARKERS_DATA.isel",
    "tests._constants.MARKERS_DATA.meca.center",
    "tests.utils.is_expected_array"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_algebra.test_proc_matmul": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyomeca.Markers.from_random_data",
    "tests.utils.restart_seed"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_algebra.test_proc_norm": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.random.rand",
    "numpy.testing.assert_almost_equal",
    "pyomeca.Markers",
    "tests._constants.ANALOGS_DATA.meca.norm",
    "tests._constants.EXPECTED_VALUES",
    "tests._constants.MARKERS_DATA.meca.norm",
    "tests.utils.is_expected_array"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_algebra.test_proc_norm_marker": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.ndarray",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal",
    "pyomeca.Markers.from_random_data",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_algebra.test_proc_normalize": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tests._constants.ANALOGS_DATA.meca.normalize",
    "tests._constants.ANALOGS_DATA.sel",
    "tests._constants.EXPECTED_VALUES",
    "tests._constants.MARKERS_DATA.meca.normalize",
    "tests._constants.MARKERS_DATA.sel",
    "tests.utils.is_expected_array"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_algebra.test_proc_rms": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "tests._constants.ANALOGS_DATA.meca.rms",
    "tests._constants.MARKERS_DATA.meca.rms"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_algebra.test_proc_square_sqrt": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "tests._constants.ANALOGS_DATA.meca.square",
    "tests._constants.EXPECTED_VALUES",
    "tests._constants.MARKERS_DATA.meca.square",
    "tests.utils.is_expected_array"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_filter": {
  "data": {},
  "type": "module"
 },
 "tests.test_processing_filter.ANALOGS_DATA": {
  "data": {
   "shadows": "tests._constants.ANALOGS_DATA"
  },
  "type": "import"
 },
 "tests.test_processing_filter.Analogs": {
  "data": {
   "shadows": "pyomeca.Analogs"
  },
  "type": "import"
 },
 "tests.test_processing_filter.EXPECTED_VALUES": {
  "data": {
   "shadows": "tests._constants.EXPECTED_VALUES"
  },
  "type": "import"
 },
 "tests.test_processing_filter.MARKERS_DATA": {
  "data": {
   "shadows": "tests._constants.MARKERS_DATA"
  },
  "type": "import"
 },
 "tests.test_processing_filter.is_expected_array": {
  "data": {
   "shadows": "tests.utils.is_expected_array"
  },
  "type": "import"
 },
 "tests.test_processing_filter.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_processing_filter.test_proc_filters": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "pyomeca.Analogs.from_random_data",
    "tests._constants.ANALOGS_DATA.meca.band_pass",
    "tests._constants.ANALOGS_DATA.meca.band_stop",
    "tests._constants.ANALOGS_DATA.meca.high_pass",
    "tests._constants.ANALOGS_DATA.meca.low_pass",
    "tests._constants.ANALOGS_DATA.rate",
    "tests._constants.EXPECTED_VALUES",
    "tests._constants.MARKERS_DATA.meca.band_pass",
    "tests._constants.MARKERS_DATA.meca.band_stop",
    "tests._constants.MARKERS_DATA.meca.high_pass",
    "tests._constants.MARKERS_DATA.meca.low_pass",
    "tests._constants.MARKERS_DATA.rate",
    "tests.test_processing_filter.pytest",
    "tests.utils.is_expected_array"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_interp": {
  "data": {},
  "type": "module"
 },
 "tests.test_processing_interp.ANALOGS_DATA": {
  "data": {
   "shadows": "tests._constants.ANALOGS_DATA"
  },
  "type": "import"
 },
 "tests.test_processing_interp.EXPECTED_VALUES": {
  "data": {
   "shadows": "tests._constants.EXPECTED_VALUES"
  },
  "type": "import"
 },
 "tests.test_processing_interp.MARKERS_DATA": {
  "data": {
   "shadows": "tests._constants.MARKERS_DATA"
  },
  "type": "import"
 },
 "tests.test_processing_interp.is_expected_array": {
  "data": {
   "shadows": "tests.utils.is_expected_array"
  },
  "type": "import"
 },
 "tests.test_processing_interp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_processing_interp.test_proc_time_normalize": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "numpy.linspace",
    "tests._constants.ANALOGS_DATA.meca.time_normalize",
    "tests._constants.ANALOGS_DATA.time",
    "tests._constants.EXPECTED_VALUES",
    "tests._constants.MARKERS_DATA.meca.time_normalize",
    "tests._constants.MARKERS_DATA.time",
    "tests.utils.is_expected_array"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_marker": {
  "data": {},
  "type": "module"
 },
 "tests.test_processing_marker.Angles": {
  "data": {
   "shadows": "pyomeca.Angles"
  },
  "type": "import"
 },
 "tests.test_processing_marker.Markers": {
  "data": {
   "shadows": "pyomeca.Markers"
  },
  "type": "import"
 },
 "tests.test_processing_marker.Rototrans": {
  "data": {
   "shadows": "pyomeca.Rototrans"
  },
  "type": "import"
 },
 "tests.test_processing_marker.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_processing_marker.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_processing_marker.test_rotate": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot",
    "numpy.ndarray",
    "numpy.testing.assert_array_almost_equal",
    "pyomeca.Angles.from_random_data",
    "pyomeca.Markers.from_random_data",
    "pyomeca.Markers.from_rototrans",
    "pyomeca.Rototrans.from_euler_angles",
    "range",
    "tests.test_processing_marker.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_misc": {
  "data": {},
  "type": "module"
 },
 "tests.test_processing_misc.ANALOGS_DATA": {
  "data": {
   "shadows": "tests._constants.ANALOGS_DATA"
  },
  "type": "import"
 },
 "tests.test_processing_misc.EXPECTED_VALUES": {
  "data": {
   "shadows": "tests._constants.EXPECTED_VALUES"
  },
  "type": "import"
 },
 "tests.test_processing_misc.MARKERS_DATA": {
  "data": {
   "shadows": "tests._constants.MARKERS_DATA"
  },
  "type": "import"
 },
 "tests.test_processing_misc.is_expected_array": {
  "data": {
   "shadows": "tests.utils.is_expected_array"
  },
  "type": "import"
 },
 "tests.test_processing_misc.misc": {
  "data": {
   "shadows": "pyomeca.processing.misc"
  },
  "type": "import"
 },
 "tests.test_processing_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_processing_misc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_processing_misc.test_has_correct_name": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "pyomeca.processing.misc.has_correct_name",
    "tests._constants.MARKERS_DATA",
    "tests.test_processing_misc.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_misc.test_proc_detect_onset": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_array_equal",
    "tests._constants.EXPECTED_VALUES",
    "tests._constants.MARKERS_DATA",
    "tests._constants.MARKERS_DATA.meca.detect_onset",
    "tests.test_processing_misc.pytest",
    "tests.utils.is_expected_array",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_misc.test_proc_detect_outliers": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "tests._constants.ANALOGS_DATA.meca.detect_outliers",
    "tests._constants.EXPECTED_VALUES",
    "tests._constants.MARKERS_DATA.meca.detect_outliers",
    "tests.utils.is_expected_array"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_misc.test_proc_fft": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "tests._constants.ANALOGS_DATA.meca.fft",
    "tests._constants.ANALOGS_DATA.rate",
    "tests._constants.EXPECTED_VALUES",
    "tests._constants.MARKERS_DATA.meca.fft",
    "tests.utils.is_expected_array"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_misc.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "tests.test_processing_rt": {
  "data": {
   "symbols_in_volume": [
    "itertools.permutations",
    "numpy.random.rand",
    "pyomeca.Angles",
    "range"
   ]
  },
  "type": "module"
 },
 "tests.test_processing_rt.ANGLES": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "tests.test_processing_rt.Angles": {
  "data": {
   "shadows": "pyomeca.Angles"
  },
  "type": "import"
 },
 "tests.test_processing_rt.EPSILON": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "tests.test_processing_rt.Markers": {
  "data": {
   "shadows": "pyomeca.Markers"
  },
  "type": "import"
 },
 "tests.test_processing_rt.Rototrans": {
  "data": {
   "shadows": "pyomeca.Rototrans"
  },
  "type": "import"
 },
 "tests.test_processing_rt.SEQ": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "tests.test_processing_rt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_processing_rt.permutations": {
  "data": {
   "shadows": "itertools.permutations"
  },
  "type": "import"
 },
 "tests.test_processing_rt.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_processing_rt.test_average_rt": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.testing.assert_almost_equal",
    "pyomeca.Angles.from_random_data",
    "pyomeca.Angles.from_rototrans",
    "pyomeca.Rototrans.from_averaged_rototrans",
    "pyomeca.Rototrans.from_euler_angles",
    "restart_seed"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_rt.test_construct_rt": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "numpy.arange",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.random.rand",
    "numpy.repeat",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "pyomeca.Angles",
    "pyomeca.Rototrans",
    "pyomeca.Rototrans.from_euler_angles",
    "tests.test_processing_rt.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_rt.test_euler2rot_rot2euleur": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_array_less",
    "pyomeca.Angles.from_rototrans",
    "pyomeca.Rototrans.from_euler_angles",
    "tests.test_processing_rt.ANGLES",
    "tests.test_processing_rt.EPSILON",
    "tests.test_processing_rt.SEQ",
    "tests.test_processing_rt.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_rt.test_rt_from_markers": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "numpy.array",
    "numpy.newaxis",
    "numpy.testing.assert_array_equal",
    "pyomeca.Markers",
    "pyomeca.Markers.from_random_data",
    "pyomeca.Rototrans",
    "pyomeca.Rototrans.from_markers",
    "slice",
    "tests.test_processing_rt.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_processing_rt.test_rt_transpose": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "pyomeca.Rototrans.from_random_data",
    "pyomeca.Rototrans.from_transposed_rototrans",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.utils": {
  "data": {},
  "type": "module"
 },
 "tests.utils.BeautifulSoup": {
  "data": {
   "shadows": "bs4.BeautifulSoup"
  },
  "type": "import"
 },
 "tests.utils.DocStringError": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "tests.utils.do_we_generate_doc_files": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ModuleNotFoundError",
    "tests.utils.mkdocs_server",
    "tests.utils.requests"
   ]
  },
  "type": "function"
 },
 "tests.utils.extract_code_blocks_from_md": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "str",
    "tests.utils.inspect",
    "tests.utils.re"
   ]
  },
  "type": "function"
 },
 "tests.utils.function_has_return": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "any",
    "tests.utils.inspect"
   ]
  },
  "type": "function"
 },
 "tests.utils.generate_api_json": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "open",
    "tests.utils.get_method_generated_docstring",
    "tests.utils.inspect",
    "tests.utils.is_function_or_method_or_new",
    "tests.utils.json"
   ]
  },
  "type": "function"
 },
 "tests.utils.get_available_methods": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "tests.utils.inspect",
    "tests.utils.is_function_or_method_or_new"
   ]
  },
  "type": "function"
 },
 "tests.utils.get_method_generated_docstring": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "bs4.BeautifulSoup",
    "tests.utils.mkdocs_server",
    "tests.utils.requests"
   ]
  },
  "type": "function"
 },
 "tests.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "tests.utils.is_expected_array": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "tests.utils.is_function_or_method_or_new": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "tests.utils.inspect"
   ]
  },
  "type": "function"
 },
 "tests.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "tests.utils.mkdocs_server": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "tests.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.utils.print_expected_values": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "print",
    "xarray.DataArray"
   ]
  },
  "type": "function"
 },
 "tests.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tests.utils.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "tests.utils.restart_seed": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "int",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "tests.utils.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 }
}