{
 "mne": {
  "data": {
   "symbols_in_volume": [
    "set_log_file",
    "set_log_level"
   ]
  },
  "type": "module"
 },
 "mne.__version__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.annotations": {
  "data": {},
  "type": "module"
 },
 "mne.annotations.Annotations": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.annotations.Annotations.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "datetime.datetime",
    "float",
    "isinstance",
    "len",
    "mne.annotations.time",
    "numpy.array",
    "numpy.isscalar",
    "numpy.repeat",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.annotations.Annotations.__len__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.annotations.Annotations.__repr__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "_pl",
    "len",
    "set",
    "sorted",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.annotations.Annotations.append": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.append"
   ]
  },
  "type": "function"
 },
 "mne.annotations.Annotations.delete": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "numpy.delete"
   ]
  },
  "type": "function"
 },
 "mne.annotations._annotations_starts_stops": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "any",
    "enumerate",
    "int",
    "isinstance",
    "list",
    "mne.annotations._sync_onset",
    "numpy.argsort",
    "numpy.array",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.annotations._combine_annotations": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "any",
    "len",
    "list",
    "mne.annotations.Annotations",
    "mne.annotations._handle_meas_date",
    "numpy.concatenate",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.annotations._handle_meas_date": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "mne.annotations._sync_onset": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "mne.annotations._handle_meas_date"
   ]
  },
  "type": "function"
 },
 "mne.annotations.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.annotations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.annotations.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.baseline": {
  "data": {},
  "type": "module"
 },
 "mne.baseline._log_rescale": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "mne.baseline.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.baseline.rescale": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "mne.baseline._log_rescale",
    "numpy.log10",
    "numpy.mean",
    "numpy.std",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.beamformer": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer._dics": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer._dics._apply_dics": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "_make_stc",
    "_prepare_beamformer_input",
    "_reg_pinv",
    "_subject_from_forward",
    "combine_xyz",
    "enumerate",
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.dot",
    "numpy.iscomplexobj",
    "numpy.ndarray",
    "numpy.sqrt",
    "range",
    "scipy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._dics.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.beamformer._dics.dics": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "_check_reference",
    "_setup_picks",
    "mne.beamformer._dics._apply_dics"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._dics.dics_epochs": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "_check_reference",
    "_setup_picks",
    "list",
    "mne.beamformer._dics._apply_dics"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._dics.dics_source_power": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError",
    "_make_stc",
    "_prepare_beamformer_input",
    "_reg_pinv",
    "_setup_picks",
    "_subject_from_forward",
    "any",
    "csd_shapes",
    "enumerate",
    "isinstance",
    "len",
    "max",
    "numpy.abs",
    "numpy.allclose",
    "numpy.dot",
    "numpy.mean",
    "numpy.zeros",
    "range",
    "scipy.linalg.pinv",
    "set",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._dics.dics_source_power.csd_shapes": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._dics.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.beamformer._dics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer._dics.tf_dics": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "ValueError",
    "_check_reference",
    "_make_stc",
    "any",
    "copy.deepcopy",
    "csd_epochs",
    "enumerate",
    "int",
    "len",
    "mne.beamformer._dics.dics_source_power",
    "numpy.array",
    "numpy.mean",
    "range",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer._lcmv._apply_lcmv": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "_make_stc",
    "_subject_from_forward",
    "combine_xyz",
    "enumerate",
    "isinstance",
    "len",
    "mne.beamformer._lcmv._check_proj_match",
    "numpy.abs",
    "numpy.dot",
    "numpy.ndarray",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._check_cov_matrix": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._check_one_ch_type": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "_contains_ch_type",
    "pick_info",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._check_proj_match": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ValueError",
    "make_projector",
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._compare_ch_names": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._deprecate_picks": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pick_info",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._eig_inv": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.newaxis",
    "numpy.zeros",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._lcmv_source_power": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "SourceEstimate",
    "ValueError",
    "_subject_from_forward",
    "compute_whitener",
    "max",
    "mne.beamformer._lcmv._prepare_beamformer_input",
    "mne.beamformer._lcmv._reg_pinv",
    "numpy.dot",
    "numpy.zeros",
    "pick_channels_cov",
    "pick_info",
    "pick_types",
    "range",
    "scipy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._pick_channels_spatial_filter": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._prepare_beamformer_input": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "ValueError",
    "_get_vertno",
    "label_src_vertno_sel",
    "make_projector",
    "numpy.c_",
    "numpy.dot",
    "numpy.ix_",
    "pick_channels_forward"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._reg_pinv": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "estimate_rank",
    "len",
    "numpy.trace",
    "scipy.linalg.pinv",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._setup_picks": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "len",
    "mne.beamformer._lcmv._compare_ch_names",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv._subject_from_filter": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.apply_lcmv": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "_check_reference",
    "mne.beamformer._lcmv._apply_lcmv",
    "mne.beamformer._lcmv._pick_channels_spatial_filter"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.apply_lcmv_epochs": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "_check_reference",
    "mne.beamformer._lcmv._apply_lcmv",
    "mne.beamformer._lcmv._pick_channels_spatial_filter"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.apply_lcmv_raw": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "_check_reference",
    "mne.beamformer._lcmv._apply_lcmv",
    "mne.beamformer._lcmv._pick_channels_spatial_filter"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.beamformer._lcmv.lcmv": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "mne.beamformer._lcmv._check_cov_matrix",
    "mne.beamformer._lcmv._deprecate_picks",
    "mne.beamformer._lcmv.apply_lcmv",
    "mne.beamformer._lcmv.make_lcmv"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.lcmv_epochs": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "mne.beamformer._lcmv._check_cov_matrix",
    "mne.beamformer._lcmv._deprecate_picks",
    "mne.beamformer._lcmv.apply_lcmv_epochs",
    "mne.beamformer._lcmv.make_lcmv"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.lcmv_raw": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "mne.beamformer._lcmv._check_cov_matrix",
    "mne.beamformer._lcmv._deprecate_picks",
    "mne.beamformer._lcmv.apply_lcmv_raw",
    "mne.beamformer._lcmv.make_lcmv"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.beamformer._lcmv.make_lcmv": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "bool",
    "compute_whitener",
    "copy.deepcopy",
    "dict",
    "estimate_rank",
    "isinstance",
    "len",
    "max",
    "mne.beamformer._lcmv._check_one_ch_type",
    "mne.beamformer._lcmv._eig_inv",
    "mne.beamformer._lcmv._prepare_beamformer_input",
    "mne.beamformer._lcmv._reg_pinv",
    "mne.beamformer._lcmv._setup_picks",
    "numpy.all",
    "numpy.dot",
    "numpy.iscomplex",
    "numpy.linalg.linalg.LinAlgError",
    "numpy.sqrt",
    "numpy.sum",
    "pick_channels_cov",
    "range",
    "scipy.linalg.eig",
    "scipy.linalg.eigh",
    "scipy.linalg.inv",
    "scipy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._lcmv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer._lcmv.tf_lcmv": {
  "data": {
   "lineno": 1081,
   "symbols_in_volume": [
    "Epochs",
    "SourceEstimate",
    "ValueError",
    "_check_reference",
    "any",
    "compute_covariance",
    "dict",
    "enumerate",
    "int",
    "len",
    "mne.beamformer._lcmv._check_one_ch_type",
    "mne.beamformer._lcmv._deprecate_picks",
    "mne.beamformer._lcmv._lcmv_source_power",
    "mne.beamformer._lcmv._setup_picks",
    "numpy.array",
    "numpy.mean",
    "range",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._rap_music": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer._rap_music._apply_rap_music": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "_prepare_beamformer_input",
    "compute_whitener",
    "mne.beamformer._rap_music._compute_proj",
    "mne.beamformer._rap_music._compute_subcorr",
    "mne.beamformer._rap_music._make_dipoles",
    "numpy.dot",
    "numpy.empty",
    "numpy.sum",
    "range",
    "scipy.linalg.eigh",
    "scipy.linalg.lstsq",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._rap_music._compute_proj": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.identity",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._rap_music._compute_subcorr": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.dot",
    "numpy.sum",
    "numpy.zeros",
    "scipy.linalg.norm",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._rap_music._make_dipoles": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "Dipole",
    "len",
    "numpy.array",
    "numpy.newaxis.repeat",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.beamformer._rap_music.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.beamformer._rap_music.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer._rap_music.rap_music": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "_deprecate_picks",
    "_setup_picks",
    "mne.beamformer._rap_music._apply_rap_music",
    "pick_channels_evoked"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests": {
  "data": {},
  "type": "module"
 },
 "mne.beamformer.tests.test_dics": {
  "data": {
   "symbols_in_volume": [
    "mne.beamformer.tests.test_dics.data_path",
    "mne.beamformer.tests.test_dics.warnings",
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.beamformer.tests.test_dics._get_data": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "dict",
    "events",
    "mne.beamformer.tests.test_dics._read_forward_solution_meg",
    "mne.beamformer.tests.test_dics.fname_event",
    "mne.beamformer.tests.test_dics.fname_fwd",
    "mne.beamformer.tests.test_dics.fname_fwd_vol",
    "mne.beamformer.tests.test_dics.fname_label",
    "mne.beamformer.tests.test_dics.fname_raw",
    "mne.beamformer.tests.test_dics.mne",
    "mne.time_frequency.csd_epochs"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics._read_forward_solution_meg": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mne.beamformer.tests.test_dics.mne"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.advance_iterator": {
  "data": {
   "shadows": "mne.externals.six.advance_iterator"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.csd_epochs": {
  "data": {
   "shadows": "mne.time_frequency.csd_epochs"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.data_path": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.dics": {
  "data": {
   "shadows": "mne.beamformer.dics"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.dics_epochs": {
  "data": {
   "shadows": "mne.beamformer.dics_epochs"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.dics_source_power": {
  "data": {
   "shadows": "mne.beamformer.dics_source_power"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.fname_event": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.fname_fwd": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.fname_fwd_vol": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.fname_label": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.fname_raw": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_dics.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.test_dics": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.beamformer.dics",
    "mne.beamformer.dics_epochs",
    "mne.beamformer.tests.test_dics._get_data",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.advance_iterator",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.argmax",
    "numpy.max",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.test_dics_source_power": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "copy.deepcopy",
    "len",
    "mne.beamformer.dics_source_power",
    "mne.beamformer.tests.test_dics._get_data",
    "mne.beamformer.tests.test_dics.warnings",
    "mne.datasets.testing.requires_testing_data",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.argmax",
    "numpy.max",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.test_tf_dics": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.beamformer.dics_source_power",
    "mne.beamformer.tests.test_dics._get_data",
    "mne.beamformer.tf_dics",
    "mne.datasets.testing.requires_testing_data",
    "mne.time_frequency.csd_epochs",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros_like",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_dics.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.tf_dics": {
  "data": {
   "shadows": "mne.beamformer.tf_dics"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_dics.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv": {
  "data": {
   "symbols_in_volume": [
    "mne.beamformer.tests.test_lcmv.data_path",
    "mne.beamformer.tests.test_lcmv.warnings",
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.beamformer.tests.test_lcmv._eig_inv": {
  "data": {
   "shadows": "mne.beamformer._lcmv._eig_inv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv._get_data": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "dict",
    "events",
    "mne.beamformer.tests.test_lcmv._read_forward_solution_meg",
    "mne.beamformer.tests.test_lcmv.fname_cov",
    "mne.beamformer.tests.test_lcmv.fname_event",
    "mne.beamformer.tests.test_lcmv.fname_fwd",
    "mne.beamformer.tests.test_lcmv.fname_fwd_vol",
    "mne.beamformer.tests.test_lcmv.fname_label",
    "mne.beamformer.tests.test_lcmv.fname_raw",
    "mne.beamformer.tests.test_lcmv.mne",
    "mne.beamformer.tests.test_lcmv.warnings"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv._lcmv_source_power": {
  "data": {
   "shadows": "mne.beamformer._lcmv._lcmv_source_power"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv._read_forward_solution_meg": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mne.beamformer.tests.test_lcmv.mne"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv._reg_pinv": {
  "data": {
   "shadows": "mne.beamformer._lcmv._reg_pinv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.advance_iterator": {
  "data": {
   "shadows": "mne.externals.six.advance_iterator"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.apply_lcmv": {
  "data": {
   "shadows": "mne.beamformer.apply_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.apply_lcmv_raw": {
  "data": {
   "shadows": "mne.beamformer.apply_lcmv_raw"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.compute_covariance": {
  "data": {
   "shadows": "mne.compute_covariance"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.data_path": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.fname_cov": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_event": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_fwd": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_fwd_vol": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_label": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.fname_raw": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_lcmv.lcmv": {
  "data": {
   "shadows": "mne.beamformer.lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.lcmv_epochs": {
  "data": {
   "shadows": "mne.beamformer.lcmv_epochs"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.lcmv_raw": {
  "data": {
   "shadows": "mne.beamformer.lcmv_raw"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.make_lcmv": {
  "data": {
   "shadows": "mne.beamformer.make_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.test_eig_inv": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "mne.beamformer._lcmv._eig_inv",
    "numpy.array",
    "numpy.linalg.pinv",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "copy.deepcopy",
    "len",
    "mne.beamformer.apply_lcmv",
    "mne.beamformer.apply_lcmv_raw",
    "mne.beamformer.lcmv",
    "mne.beamformer.lcmv_epochs",
    "mne.beamformer.make_lcmv",
    "mne.beamformer.tests.test_lcmv._get_data",
    "mne.beamformer.tests.test_lcmv.fname_label",
    "mne.beamformer.tests.test_lcmv.mne",
    "mne.beamformer.tests.test_lcmv.pytest",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.advance_iterator",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.argmax",
    "numpy.concatenate",
    "numpy.corrcoef",
    "numpy.max",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_raw": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "len",
    "mne.beamformer.lcmv_raw",
    "mne.beamformer.tests.test_lcmv._get_data",
    "mne.beamformer.tests.test_lcmv.mne",
    "mne.datasets.testing.requires_testing_data",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.intersect1d",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_lcmv_source_power": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "ValueError",
    "mne.beamformer._lcmv._lcmv_source_power",
    "mne.beamformer.tests.test_lcmv._get_data",
    "mne.datasets.testing.requires_testing_data",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.argmax",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_reg_pinv": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "any",
    "mne.beamformer._lcmv._reg_pinv",
    "mne.beamformer.tests.test_lcmv.warnings",
    "nose.tools.assert_true",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.test_tf_lcmv": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "len",
    "mne.beamformer._lcmv._lcmv_source_power",
    "mne.beamformer.tests.test_lcmv.fname_event",
    "mne.beamformer.tests.test_lcmv.fname_fwd",
    "mne.beamformer.tests.test_lcmv.fname_label",
    "mne.beamformer.tests.test_lcmv.fname_raw",
    "mne.beamformer.tests.test_lcmv.mne",
    "mne.beamformer.tests.test_lcmv.warnings",
    "mne.beamformer.tf_lcmv",
    "mne.compute_covariance",
    "mne.datasets.testing.requires_testing_data",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros_like",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_lcmv.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.tf_lcmv": {
  "data": {
   "shadows": "mne.beamformer.tf_lcmv"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_lcmv.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music": {
  "data": {
   "symbols_in_volume": [
    "mne.beamformer.tests.test_rap_music.data_path",
    "mne.beamformer.tests.test_rap_music.warnings",
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.beamformer.tests.test_rap_music._check_dipoles": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "len",
    "mne.beamformer.tests.test_rap_music.mne",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.array",
    "numpy.dot",
    "numpy.max",
    "numpy.where",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music._get_data": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mne.beamformer.tests.test_rap_music.fname_ave",
    "mne.beamformer.tests.test_rap_music.fname_cov",
    "mne.beamformer.tests.test_rap_music.mne",
    "mne.cov.regularize"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.data_path": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_rap_music.fname_ave": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_rap_music.fname_cov": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_rap_music.fname_fwd": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.beamformer.tests.test_rap_music.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.rap_music": {
  "data": {
   "shadows": "mne.beamformer.rap_music"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.regularize": {
  "data": {
   "shadows": "mne.cov.regularize"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.simu_data": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "mne.beamformer.tests.test_rap_music.mne",
    "numpy.array",
    "numpy.exp",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music.test_rap_music_simulated": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "mne.beamformer.rap_music",
    "mne.beamformer.tests.test_rap_music._check_dipoles",
    "mne.beamformer.tests.test_rap_music._get_data",
    "mne.beamformer.tests.test_rap_music.fname_fwd",
    "mne.beamformer.tests.test_rap_music.mne",
    "mne.beamformer.tests.test_rap_music.simu_data",
    "mne.datasets.testing.requires_testing_data",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music.test_rap_music_sphere": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "mne.beamformer.rap_music",
    "mne.beamformer.tests.test_rap_music._get_data",
    "mne.beamformer.tests.test_rap_music.mne",
    "mne.datasets.testing.requires_testing_data",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.array",
    "numpy.dot",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "mne.beamformer.tests.test_rap_music.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.beamformer.tests.test_rap_music.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.channels": {
  "data": {},
  "type": "module"
 },
 "mne.channels.channels": {
  "data": {},
  "type": "module"
 },
 "mne.channels.channels.ContainsMixin": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.channels.channels.ContainsMixin.__contains__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "mne.channels.channels._contains_ch_type"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.ContainsMixin.compensation_grade": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "get_current_comp",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.Delaunay": {
  "data": {
   "shadows": "scipy.spatial.Delaunay"
  },
  "type": "import"
 },
 "mne.channels.channels.InterpolationMixin": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.channels.channels.InterpolationMixin.interpolate_bads": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "ValueError",
    "_interpolate_bads_eeg",
    "_interpolate_bads_meg",
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.channels.channels.SetChannelsMixin._get_channel_positions": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.array",
    "numpy.sum",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin._set_channel_positions": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray",
    "numpy.float",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.anonymize": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "anonymize_info",
    "copy_function_doc_to_method_doc"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.plot_sensors": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "plot_sensors"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.rename_channels": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "mne.channels.channels.rename_channels"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.set_channel_types": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "list",
    "mne.channels.channels._check_set",
    "mne.channels.channels._human2fiff",
    "mne.channels.channels._human2unit",
    "mne.channels.channels._unit2human",
    "sorted",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.set_eeg_reference": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "set_eeg_reference"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.SetChannelsMixin.set_montage": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "_set_montage"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.channels.channels.UpdateChannelsMixin._pick_drop_channels": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "_check_preload",
    "getattr",
    "hasattr",
    "isinstance",
    "pick_info"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.add_channels": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "AssertionError",
    "_merge_info",
    "all",
    "getattr",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.concatenate",
    "range",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.drop_channels": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.setdiff1d",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.pick_channels": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "_check_excludes_includes"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.UpdateChannelsMixin.pick_types": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._ch_neighbor_connectivity": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "bool",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.eye",
    "scipy.sparse.csr_matrix",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._check_set": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.channels.channels._human2fiff"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._compute_ch_connectivity": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "RuntimeError",
    "_auto_topomap_coords",
    "_pair_grad_sensors",
    "_picks_by_type",
    "bool",
    "dict",
    "len",
    "numpy.eye",
    "numpy.repeat",
    "numpy.unique",
    "range",
    "scipy.sparse.csr_matrix",
    "scipy.sparse.lil_matrix",
    "scipy.spatial.Delaunay",
    "spatial_tris_connectivity",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._contains_ch_type": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "channel_type",
    "isinstance",
    "range",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._get_T1T2_mag_inds": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._get_ch_info": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "any",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._get_ch_type": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "mne.channels.channels._contains_ch_type"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._get_meg_system": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._human2fiff": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "mne.channels.channels._human2unit": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "mne.channels.channels._recursive_flatten": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels._unit2human": {
  "data": {
   "lineno": 223
  },
  "type": "constant"
 },
 "mne.channels.channels.equalize_channels": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "list",
    "numpy.argmax",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.find_ch_connectivity": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "ValueError",
    "channel_indices_by_type",
    "channel_type",
    "len",
    "mne.channels.channels._compute_ch_connectivity",
    "mne.channels.channels._get_ch_info",
    "mne.channels.channels.read_ch_connectivity",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.fix_mag_coil_types": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "len",
    "mne.channels.channels._get_T1T2_mag_inds",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.loadmat": {
  "data": {
   "shadows": "scipy.io.loadmat"
  },
  "type": "import"
 },
 "mne.channels.channels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.channels.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.channels.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.channels.channels.read_ch_connectivity": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "mne.channels.channels._ch_neighbor_connectivity",
    "mne.channels.channels._recursive_flatten",
    "mne.channels.channels.os",
    "os.path.dirname",
    "os.path.isabs",
    "os.path.join",
    "os.path.realpath",
    "scipy.io.loadmat"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.rename_channels": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "callable",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mapping",
    "numpy.array",
    "numpy.unique",
    "sorted",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.channels.channels.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.channels.data.neighbors": {
  "data": {},
  "type": "module"
 },
 "mne.channels.interpolation": {
  "data": {},
  "type": "module"
 },
 "mne.channels.interpolation._calc_g": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.polynomial.legendre.legval",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.channels.interpolation._do_interp_dots": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.einsum",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.channels.interpolation._interpolate_bads_eeg": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "_fit_sphere",
    "len",
    "mne.channels.interpolation._do_interp_dots",
    "mne.channels.interpolation._make_interpolation_matrix",
    "numpy.abs",
    "numpy.bool",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "pick_types",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.channels.interpolation._interpolate_bads_meg": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "_map_meg_channels",
    "len",
    "mne.channels.interpolation._do_interp_dots",
    "pick_channels",
    "pick_info",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.channels.interpolation._make_interpolation_matrix": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "_normalize_vectors",
    "len",
    "mne.channels.interpolation._calc_g",
    "numpy.c_",
    "numpy.c_.dot",
    "numpy.ones",
    "numpy.r_",
    "scipy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "mne.channels.interpolation.legval": {
  "data": {
   "shadows": "numpy.polynomial.legendre.legval"
  },
  "type": "import"
 },
 "mne.channels.interpolation.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.channels.interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.montage": {
  "data": {},
  "type": "module"
 },
 "mne.channels.montage.DigMontage": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.channels.montage.DigMontage.__init__": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.Iterable",
    "isinstance",
    "len",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.__repr__": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage._get_dig": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "_make_dig_points"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.compute_dev_head_t": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "RuntimeError",
    "fit_matched_points"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.plot": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_montage"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.save": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "RuntimeError",
    "write_dig"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.DigMontage.transform_to_head": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "apply_trans",
    "bool",
    "enumerate",
    "get_ras_to_neuromag_trans",
    "len",
    "numpy.array",
    "numpy.ones",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.ElementTree": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "mne.channels.montage.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "mne.channels.montage.Montage": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.channels.montage.Montage.__init__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "mne.channels.montage.Montage.__repr__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.Montage.get_pos2d": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "_cart_to_sph",
    "_pol_to_cart"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.Montage.plot": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_montage"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage._cardinal_ident_mapping": {
  "data": {
   "lineno": 541
  },
  "type": "constant"
 },
 "mne.channels.montage._check_frame": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage._set_montage": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "_clean_names",
    "_contains_ch_type",
    "_make_dig_points",
    "bool",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mne.channels.montage.DigMontage",
    "mne.channels.montage.Montage",
    "numpy.concatenate",
    "numpy.r_",
    "numpy.setdiff1d",
    "numpy.where",
    "numpy.zeros",
    "pick_types",
    "set",
    "str",
    "type",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.get_builtin_montages": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "mne.channels.montage.os",
    "os.path.dirname",
    "os.path.join",
    "os.path.splitext",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.montage.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.montage.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.channels.montage.read_dig_montage": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "ValueError",
    "_check_fname",
    "_read_dig_fif",
    "_read_dig_points",
    "all",
    "dict",
    "fiff_open",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.channels.montage.DigMontage",
    "mne.channels.montage._cardinal_ident_mapping",
    "mne.channels.montage._check_frame",
    "numpy.array",
    "os.path.splitext",
    "read_mrk",
    "sorted",
    "warn",
    "xml.etree.ElementTree.parse"
   ]
  },
  "type": "function"
 },
 "mne.channels.montage.read_montage": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "_sph_to_cart",
    "_topo_to_sph",
    "apply_trans",
    "dict",
    "enumerate",
    "float",
    "get_ras_to_neuromag_trans",
    "len",
    "list",
    "map",
    "mne.channels.montage.Montage",
    "mne.channels.montage.os",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.deg2rad",
    "numpy.dtype",
    "numpy.genfromtxt",
    "numpy.loadtxt",
    "numpy.ones",
    "numpy.pi",
    "numpy.vstack",
    "open",
    "os.path.dirname",
    "os.path.isabs",
    "os.path.join",
    "os.path.split",
    "os.path.splitext",
    "set",
    "str",
    "xml.etree.ElementTree.parse",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests": {
  "data": {},
  "type": "module"
 },
 "mne.channels.tests.test_channels": {
  "data": {
   "symbols_in_volume": [
    "mne.channels.tests.test_channels.base_dir",
    "mne.channels.tests.test_channels.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.channels.tests.test_channels.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels._ch_neighbor_connectivity": {
  "data": {
   "shadows": "mne.channels.channels._ch_neighbor_connectivity"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels._compute_ch_connectivity": {
  "data": {
   "shadows": "mne.channels.channels._compute_ch_connectivity"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.base_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.channels.tests.test_channels.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.find_ch_connectivity": {
  "data": {
   "shadows": "mne.channels.find_ch_connectivity"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.raw_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.channels.tests.test_channels.read_ch_connectivity": {
  "data": {
   "shadows": "mne.channels.read_ch_connectivity"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.rename_channels": {
  "data": {
   "shadows": "mne.channels.rename_channels"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.savemat": {
  "data": {
   "shadows": "scipy.io.savemat"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.test_find_ch_connectivity": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.channels.channels._compute_ch_connectivity",
    "mne.channels.find_ch_connectivity",
    "mne.channels.tests.test_channels.raw_fname",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_bti",
    "mne.io.read_raw_ctf",
    "mne.io.read_raw_fif",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_get_set_sensor_positions": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "mne.channels.tests.test_channels.raw_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_read_ch_connectivity": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "a",
    "dict",
    "functools.partial",
    "len",
    "mne.channels.channels._ch_neighbor_connectivity",
    "mne.channels.read_ch_connectivity",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "os.path.join",
    "scipy.io.savemat"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_rename_channels": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "copy.deepcopy",
    "mne.channels.rename_channels",
    "mne.channels.tests.test_channels.raw_fname",
    "mne.io.read_info",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.test_set_channel_types": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "all",
    "len",
    "mne.channels.tests.test_channels.raw_fname",
    "mne.channels.tests.test_channels.warnings",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG",
    "mne.io.constants.FIFF.FIFFV_COIL_FNIRS_HBO",
    "mne.io.constants.FIFF.FIFFV_COIL_NONE",
    "mne.io.constants.FIFF.FIFFV_ECG_CH",
    "mne.io.constants.FIFF.FIFFV_ECOG_CH",
    "mne.io.constants.FIFF.FIFFV_EEG_CH",
    "mne.io.constants.FIFF.FIFFV_EOG_CH",
    "mne.io.constants.FIFF.FIFFV_FNIRS_CH",
    "mne.io.constants.FIFF.FIFFV_SEEG_CH",
    "mne.io.constants.FIFF.FIFF_UNIT_MOL",
    "mne.io.constants.FIFF.FIFF_UNIT_V",
    "mne.io.read_raw_fif",
    "mne.pick_channels",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_channels.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.channels.tests.test_channels.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation": {
  "data": {
   "symbols_in_volume": [
    "mne.channels.tests.test_interpolation.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.channels.tests.test_interpolation.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation._load_data": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "dict",
    "events",
    "mne.Epochs",
    "mne.channels.tests.test_interpolation.event_name",
    "mne.channels.tests.test_interpolation.raw_fname",
    "mne.channels.tests.test_interpolation.warnings",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation._make_interpolation_matrix": {
  "data": {
   "shadows": "mne.channels.interpolation._make_interpolation_matrix"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.base_dir": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.channels.tests.test_interpolation.event_id_2": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.channels.tests.test_interpolation.event_name": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.channels.tests.test_interpolation.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.raw_fname": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.channels.tests.test_interpolation.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.channels.tests.test_interpolation.test_interpolation": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "hasattr",
    "len",
    "mne.channels.interpolation._make_interpolation_matrix",
    "mne.channels.tests.test_interpolation._load_data",
    "mne.channels.tests.test_interpolation.pytest",
    "mne.channels.tests.test_interpolation.warnings",
    "mne.io.RawArray",
    "mne.pick_channels",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.corrcoef",
    "numpy.dot",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_interpolation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout": {
  "data": {
   "symbols_in_volume": [
    "mne.channels.tests.test_layout.io_dir",
    "mne.channels.tests.test_layout.matplotlib",
    "mne.channels.tests.test_layout.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.channels.tests.test_layout.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._auto_topomap_coords": {
  "data": {
   "shadows": "mne.channels.layout._auto_topomap_coords"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._box_size": {
  "data": {
   "shadows": "mne.channels.layout._box_size"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._empty_info": {
  "data": {
   "shadows": "mne.io._empty_info"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout._get_test_info": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mne.io._empty_info",
    "numpy.array",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.bti_dir": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.fif_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.find_layout": {
  "data": {
   "shadows": "mne.channels.find_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.fit_sphere_to_headshape": {
  "data": {
   "shadows": "mne.bem.fit_sphere_to_headshape"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.fname_ctf_raw": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.fname_kit_157": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.fname_kit_umd": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.generate_2d_layout": {
  "data": {
   "shadows": "mne.channels.layout.generate_2d_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.io_dir": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.lout_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.channels.tests.test_layout.make_eeg_layout": {
  "data": {
   "shadows": "mne.channels.make_eeg_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.make_grid_layout": {
  "data": {
   "shadows": "mne.channels.make_grid_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.read_layout": {
  "data": {
   "shadows": "mne.channels.read_layout"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.channels.tests.test_layout.test_auto_topomap_coords": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "mne.bem.fit_sphere_to_headshape",
    "mne.channels.layout._auto_topomap_coords",
    "mne.channels.tests.test_layout.fif_fname",
    "mne.io.constants.FIFF.FIFFV_POINT_CARDINAL",
    "mne.io.constants.FIFF.FIFFV_POINT_EEG",
    "mne.io.constants.FIFF.FIFFV_POINT_EXTRA",
    "mne.io.read_info",
    "mne.pick_types",
    "nose.tools.assert_raises",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_box_size": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "mne.channels.layout._box_size",
    "nose.tools.assert_true",
    "numpy.c_",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_find_layout": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "enumerate",
    "matplotlib.pyplot.close",
    "mne.channels.find_layout",
    "mne.channels.tests.test_layout._get_test_info",
    "mne.channels.tests.test_layout.bti_dir",
    "mne.channels.tests.test_layout.copy",
    "mne.channels.tests.test_layout.fif_fname",
    "mne.channels.tests.test_layout.fname_ctf_raw",
    "mne.channels.tests.test_layout.fname_kit_157",
    "mne.channels.tests.test_layout.fname_kit_umd",
    "mne.io.read_info",
    "mne.io.read_raw_kit",
    "mne.pick_info",
    "mne.pick_types",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_generate_2d_layout": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "float",
    "len",
    "mne.channels.layout.generate_2d_layout",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.errstate",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_io_layout_lay": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mne.channels.read_layout",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_io_layout_lout": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "mne.channels.read_layout",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_make_eeg_layout": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.channels.make_eeg_layout",
    "mne.channels.read_layout",
    "mne.channels.tests.test_layout.fif_fname",
    "mne.channels.tests.test_layout.lout_path",
    "mne.io.read_info",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.test_make_grid_layout": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "mne.channels.make_grid_layout",
    "mne.channels.read_layout",
    "mne.channels.tests.test_layout._get_test_info",
    "mne.channels.tests.test_layout.lout_path",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.channels.tests.test_layout.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.chpi": {
  "data": {},
  "type": "module"
 },
 "mne.chpi._calculate_chpi_coil_locs": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "apply_trans",
    "dict",
    "enumerate",
    "int",
    "invert_transform",
    "len",
    "max",
    "min",
    "mne.chpi._fit_cHPI_amplitudes",
    "mne.chpi._fit_magnetic_dipole",
    "mne.chpi._get_hpi_initial_fit",
    "mne.chpi._setup_hpi_struct",
    "numpy.arange",
    "numpy.array",
    "numpy.corrcoef",
    "round",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.chpi._calculate_chpi_positions": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "_angle_between_quats",
    "apply_trans",
    "bool",
    "dict",
    "int",
    "invert_transform",
    "len",
    "map",
    "max",
    "min",
    "mne.chpi._fit_cHPI_amplitudes",
    "mne.chpi._fit_chpi_quat",
    "mne.chpi._fit_magnetic_dipole",
    "mne.chpi._get_hpi_initial_fit",
    "mne.chpi._setup_hpi_struct",
    "mne.chpi._time_prefix",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.array",
    "numpy.concatenate",
    "numpy.corrcoef",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "quat_to_rot",
    "range",
    "rot_to_quat",
    "round",
    "scipy.spatial.distance.cdist",
    "slice",
    "tuple",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.chpi._chpi_objective": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.dot",
    "quat_to_rot"
   ]
  },
  "type": "function"
 },
 "mne.chpi._fit_cHPI_amplitudes": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "bool",
    "mne.chpi._time_prefix",
    "numpy.dot",
    "numpy.int",
    "numpy.linalg.svd",
    "numpy.mean",
    "numpy.newaxis.astype",
    "numpy.outer",
    "numpy.round",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.tile",
    "numpy.vstack",
    "numpy.zeros",
    "range",
    "scipy.linalg.pinv",
    "use_log_level"
   ]
  },
  "type": "function"
 },
 "mne.chpi._fit_chpi_quat": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "functools.partial",
    "mne.chpi._chpi_objective",
    "mne.chpi._unit_quat_constraint",
    "numpy.mean",
    "numpy.sum",
    "objective",
    "scipy.optimize.fmin_cobyla"
   ]
  },
  "type": "function"
 },
 "mne.chpi._fit_coil_order_dev_head_trans": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "len",
    "mne.chpi._fit_chpi_quat",
    "mne.chpi.itertools",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.newaxis",
    "quat_to_rot",
    "rot_to_quat"
   ]
  },
  "type": "function"
 },
 "mne.chpi._fit_device_hpi_positions": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "mne.chpi._fit_cHPI_amplitudes",
    "mne.chpi._fit_magnetic_dipole",
    "mne.chpi._setup_hpi_struct",
    "numpy.array",
    "range",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.chpi._fit_magnetic_dipole": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "functools.partial",
    "mne.chpi._magnetic_dipole_objective",
    "numpy.dot",
    "objective",
    "scipy.optimize.fmin_cobyla"
   ]
  },
  "type": "function"
 },
 "mne.chpi._get_hpi_info": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "RuntimeError",
    "float",
    "int",
    "len",
    "numpy.array",
    "pick_channels",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.chpi._get_hpi_initial_fit": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "apply_trans",
    "enumerate",
    "len",
    "numpy.array",
    "numpy.sqrt",
    "sorted",
    "str",
    "tuple",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.chpi._magnetic_dipole_objective": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "_magnetic_dipole_field_vec",
    "_sss_basis",
    "dict",
    "numpy.dot",
    "numpy.newaxis",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.chpi._setup_hpi_struct": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "RuntimeError",
    "_concatenate_coils",
    "_create_meg_coils",
    "_prep_mf_coils",
    "_read_coil_defs",
    "bool",
    "compute_whitener",
    "dict",
    "enumerate",
    "len",
    "make_ad_hoc_cov",
    "mne.chpi._get_hpi_info",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.cos",
    "numpy.float64",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.pi",
    "numpy.sin",
    "numpy.zeros",
    "pick_types",
    "scipy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "mne.chpi._time_prefix": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "mne.chpi._unit_quat_constraint": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "mne.chpi.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.chpi.filter_chpi": {
  "data": {
   "lineno": 902,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "enumerate",
    "float",
    "int",
    "len",
    "list",
    "max",
    "min",
    "mne.chpi._setup_hpi_struct",
    "numpy.arange",
    "numpy.ceil",
    "numpy.dot",
    "numpy.inf",
    "pick_types",
    "round",
    "scipy.linalg.pinv",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.chpi.fmin_cobyla": {
  "data": {
   "shadows": "scipy.optimize.fmin_cobyla"
  },
  "type": "import"
 },
 "mne.chpi.head_pos_to_trans_rot_t": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "quat_to_rot"
   ]
  },
  "type": "function"
 },
 "mne.chpi.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.chpi.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.chpi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.chpi.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.chpi.read_head_pos": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "RuntimeError",
    "_check_fname",
    "numpy.isnan",
    "numpy.loadtxt"
   ]
  },
  "type": "function"
 },
 "mne.chpi.write_head_pos": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "_check_fname",
    "numpy.array",
    "numpy.float64",
    "open",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.commands": {
  "data": {},
  "type": "module"
 },
 "mne.commands.mne_browse_raw": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_browse_raw.is_main",
    "mne.commands.mne_browse_raw.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_browse_raw.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_browse_raw.is_main": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "mne.commands.mne_browse_raw.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_browse_raw.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.commands.mne_browse_raw.run": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "RuntimeError",
    "events",
    "len",
    "matplotlib.pyplot.show",
    "mne.commands.mne_browse_raw.mne",
    "mne.commands.mne_browse_raw.sys",
    "mne.commands.utils.get_optparser"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_browse_raw.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_bti2fiff": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_bti2fiff.is_main",
    "mne.commands.mne_bti2fiff.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_bti2fiff.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_bti2fiff.is_main": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "mne.commands.mne_bti2fiff.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.commands.mne_bti2fiff.run": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mne.commands.mne_bti2fiff.sys",
    "mne.commands.utils.get_optparser",
    "mne.io.read_raw_bti"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_bti2fiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_clean_eog_ecg": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_clean_eog_ecg.is_main",
    "mne.commands.mne_clean_eog_ecg.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_clean_eog_ecg.clean_ecg_eog": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "mne.commands.mne_clean_eog_ecg.mne",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_clean_eog_ecg.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_clean_eog_ecg.is_main": {
  "data": {
   "lineno": 140
  },
  "type": "constant"
 },
 "mne.commands.mne_clean_eog_ecg.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_clean_eog_ecg.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.commands.mne_clean_eog_ecg.run": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "mne.commands.mne_clean_eog_ecg.clean_ecg_eog",
    "mne.commands.mne_clean_eog_ecg.sys",
    "mne.commands.utils.get_optparser"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_clean_eog_ecg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_compare_fiff": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_compare_fiff.is_main",
    "mne.commands.mne_compare_fiff.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_compare_fiff.is_main": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.commands.mne_compare_fiff.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_compare_fiff.run": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "len",
    "mne.commands.mne_compare_fiff.mne",
    "mne.commands.mne_compare_fiff.sys"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_compare_fiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_ecg": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_compute_proj_ecg.is_main",
    "mne.commands.mne_compute_proj_ecg.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_compute_proj_ecg.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_ecg.is_main": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "mne.commands.mne_compute_proj_ecg.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_ecg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_ecg.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_ecg.run": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "float",
    "isinstance",
    "mne.commands.mne_compute_proj_ecg.mne",
    "mne.commands.mne_compute_proj_ecg.os",
    "mne.commands.mne_compute_proj_ecg.sys",
    "mne.commands.utils.get_optparser",
    "mne.externals.six.string_types",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_compute_proj_ecg.string_types": {
  "data": {
   "shadows": "mne.externals.six.string_types"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_ecg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_eog": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_compute_proj_eog.is_main",
    "mne.commands.mne_compute_proj_eog.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_compute_proj_eog.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_eog.is_main": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "mne.commands.mne_compute_proj_eog.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_eog.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_eog.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_eog.run": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dict",
    "events",
    "float",
    "isinstance",
    "mne.commands.mne_compute_proj_eog.mne",
    "mne.commands.mne_compute_proj_eog.os",
    "mne.commands.mne_compute_proj_eog.sys",
    "mne.commands.utils.get_optparser",
    "mne.externals.six.string_types",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_compute_proj_eog.string_types": {
  "data": {
   "shadows": "mne.externals.six.string_types"
  },
  "type": "import"
 },
 "mne.commands.mne_compute_proj_eog.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_coreg.is_main",
    "mne.commands.mne_coreg.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_coreg.ETSContext": {
  "data": {
   "shadows": "mne.utils.ETSContext"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg.is_main": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "mne.commands.mne_coreg.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_coreg.run": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mne.commands.mne_coreg.mne",
    "mne.commands.mne_coreg.sys",
    "mne.commands.utils.get_optparser",
    "mne.utils.ETSContext"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_coreg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_flash_bem": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_flash_bem.is_main",
    "mne.commands.mne_flash_bem.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_flash_bem.convert_flash_mris": {
  "data": {
   "shadows": "mne.bem.convert_flash_mris"
  },
  "type": "import"
 },
 "mne.commands.mne_flash_bem.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_flash_bem.is_main": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "mne.commands.mne_flash_bem.make_flash_bem": {
  "data": {
   "shadows": "mne.bem.make_flash_bem"
  },
  "type": "import"
 },
 "mne.commands.mne_flash_bem.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.commands.mne_flash_bem.run": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.bem.convert_flash_mris",
    "mne.bem.make_flash_bem",
    "mne.commands.utils.get_optparser"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_freeview_bem_surfaces": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_freeview_bem_surfaces.is_main",
    "mne.commands.mne_freeview_bem_surfaces.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_freeview_bem_surfaces.freeview_bem_surfaces": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.commands.mne_freeview_bem_surfaces.os",
    "mne.commands.mne_freeview_bem_surfaces.sys",
    "mne.utils.get_subjects_dir",
    "mne.utils.run_subprocess",
    "os.path.join",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_freeview_bem_surfaces.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.get_subjects_dir": {
  "data": {
   "shadows": "mne.utils.get_subjects_dir"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.is_main": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "mne.commands.mne_freeview_bem_surfaces.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.run": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "mne.commands.mne_freeview_bem_surfaces.freeview_bem_surfaces",
    "mne.commands.mne_freeview_bem_surfaces.os",
    "mne.commands.utils.get_optparser",
    "mne.utils.get_subjects_dir"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_freeview_bem_surfaces.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.commands.mne_freeview_bem_surfaces.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_kit2fiff.is_main",
    "mne.commands.mne_kit2fiff.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_kit2fiff.ETSContext": {
  "data": {
   "shadows": "mne.utils.ETSContext"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff.is_main": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "mne.commands.mne_kit2fiff.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.commands.mne_kit2fiff.run": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "map",
    "mne.commands.mne_kit2fiff.mne",
    "mne.commands.mne_kit2fiff.sys",
    "mne.commands.utils.get_optparser",
    "mne.io.read_raw_kit",
    "mne.utils.ETSContext",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_kit2fiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_make_scalp_surfaces.is_main",
    "mne.commands.mne_make_scalp_surfaces.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_make_scalp_surfaces.ETSContext": {
  "data": {
   "shadows": "mne.utils.ETSContext"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces._check_file": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "IOError",
    "os.path.isfile"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_make_scalp_surfaces._run": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "RuntimeError",
    "check_seghead",
    "dict",
    "enumerate",
    "len",
    "mne.commands.mne_make_scalp_surfaces._check_file",
    "mne.commands.mne_make_scalp_surfaces.copy",
    "mne.commands.mne_make_scalp_surfaces.mne",
    "mne.commands.mne_make_scalp_surfaces.os",
    "mne.utils.ETSContext",
    "mne.utils.get_subjects_dir",
    "mne.utils.logger.info",
    "mne.utils.run_subprocess",
    "mne.utils.verbose",
    "os.path.exists",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_make_scalp_surfaces._run.check_seghead": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_make_scalp_surfaces.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.get_subjects_dir": {
  "data": {
   "shadows": "mne.utils.get_subjects_dir"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.is_main": {
  "data": {
   "lineno": 128
  },
  "type": "constant"
 },
 "mne.commands.mne_make_scalp_surfaces.logger": {
  "data": {
   "shadows": "mne.utils.logger"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.run": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mne.commands.mne_make_scalp_surfaces._run",
    "mne.commands.mne_make_scalp_surfaces.mne",
    "mne.commands.mne_make_scalp_surfaces.os",
    "mne.commands.mne_make_scalp_surfaces.sys",
    "mne.commands.utils.get_optparser",
    "print",
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_make_scalp_surfaces.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_make_scalp_surfaces.verbose": {
  "data": {
   "shadows": "mne.utils.verbose"
  },
  "type": "import"
 },
 "mne.commands.mne_maxfilter": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_maxfilter.is_main",
    "mne.commands.mne_maxfilter.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_maxfilter.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_maxfilter.is_main": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "mne.commands.mne_maxfilter.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_maxfilter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.mne_maxfilter.run": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "mne.commands.mne_maxfilter.mne",
    "mne.commands.mne_maxfilter.os",
    "mne.commands.mne_maxfilter.sys",
    "mne.commands.utils.get_optparser",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_maxfilter.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_report": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_report.is_main",
    "mne.commands.mne_report.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_report.Report": {
  "data": {
   "shadows": "mne.report.Report"
  },
  "type": "import"
 },
 "mne.commands.mne_report.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_report.is_main": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "mne.commands.mne_report.log_elapsed": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "mne.utils.logger.info",
    "mne.utils.verbose",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_report.logger": {
  "data": {
   "shadows": "mne.utils.logger"
  },
  "type": "import"
 },
 "mne.commands.mne_report.run": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "float",
    "int",
    "mne.commands.mne_report.log_elapsed",
    "mne.commands.mne_report.sys",
    "mne.commands.mne_report.time",
    "mne.commands.utils.get_optparser",
    "mne.report.Report",
    "mne.utils.verbose"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_report.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_report.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.commands.mne_report.verbose": {
  "data": {
   "shadows": "mne.utils.verbose"
  },
  "type": "import"
 },
 "mne.commands.mne_show_fiff": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_show_fiff.is_main",
    "mne.commands.mne_show_fiff.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_show_fiff.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "mne.commands.mne_show_fiff.is_main": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.commands.mne_show_fiff.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_show_fiff.run": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "UTF8Writer",
    "int",
    "len",
    "mne.commands.mne_show_fiff.codecs",
    "mne.commands.mne_show_fiff.mne",
    "mne.commands.mne_show_fiff.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_show_fiff.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_show_info": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_show_info.is_main",
    "mne.commands.mne_show_info.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_show_info.is_main": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.commands.mne_show_info.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_show_info.run": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.commands.mne_show_info.mne",
    "mne.commands.mne_show_info.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_show_info.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_surf2bem": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_surf2bem.is_main",
    "mne.commands.mne_surf2bem.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_surf2bem.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_surf2bem.is_main": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.commands.mne_surf2bem.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.mne_surf2bem.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.commands.mne_surf2bem.run": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "int",
    "mne.commands.mne_surf2bem.mne",
    "mne.commands.mne_surf2bem.sys",
    "mne.commands.utils.get_optparser",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_surf2bem.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.commands.mne_watershed_bem.is_main",
    "mne.commands.mne_watershed_bem.run"
   ]
  },
  "type": "module"
 },
 "mne.commands.mne_watershed_bem.get_optparser": {
  "data": {
   "shadows": "mne.commands.utils.get_optparser"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem.is_main": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mne.commands.mne_watershed_bem.make_watershed_bem": {
  "data": {
   "shadows": "mne.bem.make_watershed_bem"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.commands.mne_watershed_bem.run": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "mne.bem.make_watershed_bem",
    "mne.commands.mne_watershed_bem.sys",
    "mne.commands.utils.get_optparser"
   ]
  },
  "type": "function"
 },
 "mne.commands.mne_watershed_bem.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.commands.tests": {
  "data": {},
  "type": "module"
 },
 "mne.commands.tests.test_commands": {
  "data": {
   "symbols_in_volume": [
    "mne.commands.tests.test_commands.base_dir",
    "mne.commands.tests.test_commands.warnings",
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.commands.tests.test_commands.ArgvSetter": {
  "data": {
   "shadows": "mne.utils.ArgvSetter"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.base_dir": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.commands.tests.test_commands.check_usage": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "SystemExit",
    "mne.utils.ArgvSetter",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.concatenate_raws": {
  "data": {
   "shadows": "mne.concatenate_raws"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_browse_raw": {
  "data": {
   "shadows": "mne.commands.mne_browse_raw"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_bti2fiff": {
  "data": {
   "shadows": "mne.commands.mne_bti2fiff"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_clean_eog_ecg": {
  "data": {
   "shadows": "mne.commands.mne_clean_eog_ecg"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_compare_fiff": {
  "data": {
   "shadows": "mne.commands.mne_compare_fiff"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_compute_proj_ecg": {
  "data": {
   "shadows": "mne.commands.mne_compute_proj_ecg"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_compute_proj_eog": {
  "data": {
   "shadows": "mne.commands.mne_compute_proj_eog"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_coreg": {
  "data": {
   "shadows": "mne.commands.mne_coreg"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_flash_bem": {
  "data": {
   "shadows": "mne.commands.mne_flash_bem"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_kit2fiff": {
  "data": {
   "shadows": "mne.commands.mne_kit2fiff"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_make_scalp_surfaces": {
  "data": {
   "shadows": "mne.commands.mne_make_scalp_surfaces"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_maxfilter": {
  "data": {
   "shadows": "mne.commands.mne_maxfilter"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_report": {
  "data": {
   "shadows": "mne.commands.mne_report"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_show_fiff": {
  "data": {
   "shadows": "mne.commands.mne_show_fiff"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_show_info": {
  "data": {
   "shadows": "mne.commands.mne_show_info"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_surf2bem": {
  "data": {
   "shadows": "mne.commands.mne_surf2bem"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.mne_watershed_bem": {
  "data": {
   "shadows": "mne.commands.mne_watershed_bem"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.raw_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.commands.tests.test_commands.read_bem_surfaces": {
  "data": {
   "shadows": "mne.read_bem_surfaces"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_PIL": {
  "data": {
   "shadows": "mne.utils.requires_PIL"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_freesurfer": {
  "data": {
   "shadows": "mne.utils.requires_freesurfer"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.requires_tvtk": {
  "data": {
   "shadows": "mne.utils.requires_tvtk"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.sample": {
  "data": {
   "shadows": "mne.datasets.sample"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.subjects_dir": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.commands.tests.test_commands.test_browse_raw": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mne.commands.mne_browse_raw",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.pytest"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_bti2fiff": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mne.commands.mne_bti2fiff",
    "mne.commands.tests.test_commands.check_usage"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_clean_eog_ecg": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "len",
    "mne.commands.mne_clean_eog_ecg",
    "mne.commands.mne_clean_eog_ecg.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.glob",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.concatenate_raws",
    "mne.io.read_raw_fif",
    "mne.utils.ArgvSetter",
    "mne.utils._TempDir",
    "mne.utils.requires_mne",
    "nose.tools.assert_true",
    "os.path.basename",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_compare_fiff": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mne.commands.mne_compare_fiff",
    "mne.commands.tests.test_commands.check_usage"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_compute_proj_ecg_eog": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "mne.commands.mne_compute_proj_ecg",
    "mne.commands.mne_compute_proj_eog",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.glob",
    "mne.commands.tests.test_commands.pytest",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.commands.tests.test_commands.shutil",
    "mne.commands.tests.test_commands.warnings",
    "mne.utils.ArgvSetter",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "open",
    "os.path.basename",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_coreg": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "hasattr",
    "mne.commands.mne_coreg",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_flash_bem": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "mne.commands.mne_flash_bem",
    "mne.commands.mne_flash_bem.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.glob",
    "mne.commands.tests.test_commands.os",
    "mne.commands.tests.test_commands.pytest",
    "mne.commands.tests.test_commands.shutil",
    "mne.commands.tests.test_commands.subjects_dir",
    "mne.datasets.sample.data_path",
    "mne.datasets.sample.requires_sample_data",
    "mne.utils.ArgvSetter",
    "mne.utils._TempDir",
    "mne.utils.requires_freesurfer",
    "os.path.basename",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_kit2fiff": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "mne.commands.mne_kit2fiff",
    "mne.commands.tests.test_commands.check_usage"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_make_scalp_surfaces": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "len",
    "mne.commands.mne_make_scalp_surfaces",
    "mne.commands.mne_make_scalp_surfaces.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.os",
    "mne.commands.tests.test_commands.shutil",
    "mne.commands.tests.test_commands.subjects_dir",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_bem_surfaces",
    "mne.utils.ArgvSetter",
    "mne.utils._TempDir",
    "mne.utils.requires_tvtk",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.isfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_maxfilter": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len",
    "mne.commands.mne_maxfilter",
    "mne.commands.mne_maxfilter.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.os",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.commands.tests.test_commands.warnings",
    "mne.utils.ArgvSetter",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_report": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "len",
    "mne.commands.mne_report",
    "mne.commands.mne_report.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.glob",
    "mne.commands.tests.test_commands.pytest",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.commands.tests.test_commands.shutil",
    "mne.commands.tests.test_commands.subjects_dir",
    "mne.datasets.testing.requires_testing_data",
    "mne.utils.ArgvSetter",
    "mne.utils._TempDir",
    "mne.utils.requires_PIL",
    "mne.utils.requires_mayavi",
    "nose.tools.assert_true",
    "os.path.basename",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_show_fiff": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mne.commands.mne_show_fiff",
    "mne.commands.mne_show_fiff.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.utils.ArgvSetter"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_show_info": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "mne.commands.mne_show_info",
    "mne.commands.mne_show_info.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.raw_fname",
    "mne.utils.ArgvSetter"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_surf2bem": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "mne.commands.mne_surf2bem",
    "mne.commands.tests.test_commands.check_usage"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.test_watershed_bem": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "mne.commands.mne_watershed_bem",
    "mne.commands.mne_watershed_bem.run",
    "mne.commands.tests.test_commands.check_usage",
    "mne.commands.tests.test_commands.os",
    "mne.commands.tests.test_commands.pytest",
    "mne.commands.tests.test_commands.shutil",
    "mne.commands.tests.test_commands.subjects_dir",
    "mne.datasets.testing.requires_testing_data",
    "mne.utils.ArgvSetter",
    "mne.utils._TempDir",
    "mne.utils.requires_freesurfer",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.commands.tests.test_commands.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.commands.tests.test_commands.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.commands.utils": {
  "data": {},
  "type": "module"
 },
 "mne.commands.utils.OptionParser": {
  "data": {
   "shadows": "optparse.OptionParser"
  },
  "type": "import"
 },
 "mne.commands.utils.SourceFileLoader": {
  "data": {
   "shadows": "importlib.machinery.SourceFileLoader"
  },
  "type": "import"
 },
 "mne.commands.utils.SourcelessFileLoader": {
  "data": {
   "shadows": "importlib.machinery.SourcelessFileLoader"
  },
  "type": "import"
 },
 "mne.commands.utils.get_optparser": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "len",
    "mne.commands.utils.load_module",
    "mne.commands.utils.mne",
    "mne.commands.utils.os",
    "mne.commands.utils.re",
    "optparse.OptionParser",
    "optparse.OptionParser.format_epilog"
   ]
  },
  "type": "function"
 },
 "mne.commands.utils.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "mne.commands.utils.load_module": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "importlib.machinery.SourceFileLoader",
    "importlib.machinery.SourcelessFileLoader",
    "importlib.util.module_from_spec",
    "importlib.util.spec_from_file_location",
    "mne.commands.utils.imp",
    "mne.commands.utils.sys"
   ]
  },
  "type": "function"
 },
 "mne.commands.utils.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.commands.utils.module_from_spec": {
  "data": {
   "shadows": "importlib.util.module_from_spec"
  },
  "type": "import"
 },
 "mne.commands.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.commands.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.commands.utils.spec_from_file_location": {
  "data": {
   "shadows": "importlib.util.spec_from_file_location"
  },
  "type": "import"
 },
 "mne.commands.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.connectivity": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.effective": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.effective.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.connectivity.effective.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.effective.phase_slope_index": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_freqs_dep",
    "enumerate",
    "len",
    "list",
    "mne.connectivity.effective.copy",
    "numpy.asarray",
    "numpy.complex128",
    "numpy.conj",
    "numpy.empty",
    "numpy.float",
    "numpy.imag",
    "numpy.inf",
    "numpy.pi",
    "numpy.where",
    "numpy.zeros",
    "slice",
    "spectral_connectivity",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral": {
  "data": {
   "symbols_in_volume": [
    "mne.connectivity.spectral._CohEst",
    "mne.connectivity.spectral._CohyEst",
    "mne.connectivity.spectral._ImCohEst",
    "mne.connectivity.spectral._PLIEst",
    "mne.connectivity.spectral._PLIUnbiasedEst",
    "mne.connectivity.spectral._PLVEst",
    "mne.connectivity.spectral._PPCEst",
    "mne.connectivity.spectral._WPLIDebiasedEst",
    "mne.connectivity.spectral._WPLIEst"
   ]
  },
  "type": "module"
 },
 "mne.connectivity.spectral._AbstractConEstBase": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._AbstractConEstBase.accumulate": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._AbstractConEstBase.combine": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._AbstractConEstBase.compute_con": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._AbstractConEstBase.start_epoch": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._CON_METHOD_MAP": {
  "data": {
   "lineno": 521
  },
  "type": "constant"
 },
 "mne.connectivity.spectral._CohEst": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "mne.connectivity.spectral._CohEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._CohEst.compute_con": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._CohEstBase": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "mne.connectivity.spectral._EpochMeanConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._CohEstBase.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "mne.connectivity.spectral._CohEstBase",
    "numpy.complex128",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._CohEstBase.accumulate": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "mne.connectivity.spectral._CohyEst": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "mne.connectivity.spectral._CohEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._CohyEst.compute_con": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.complex128",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._EpochMeanConEstBase": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mne.connectivity.spectral._AbstractConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._EpochMeanConEstBase.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "mne.connectivity.spectral._EpochMeanConEstBase.combine": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "mne.connectivity.spectral._EpochMeanConEstBase.start_epoch": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "mne.connectivity.spectral._ImCohEst": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mne.connectivity.spectral._CohEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._ImCohEst.compute_con": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.imag",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLIEst": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "mne.connectivity.spectral._EpochMeanConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._PLIEst.__init__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "mne.connectivity.spectral._PLIEst",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLIEst.accumulate": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.imag",
    "numpy.sign"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLIEst.compute_con": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLIUnbiasedEst": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "mne.connectivity.spectral._PLIEst"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._PLIUnbiasedEst.compute_con": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLVEst": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "mne.connectivity.spectral._EpochMeanConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._PLVEst.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "mne.connectivity.spectral._PLVEst",
    "numpy.complex128",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLVEst.accumulate": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PLVEst.compute_con": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PPCEst": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "mne.connectivity.spectral._EpochMeanConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._PPCEst.__init__": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "mne.connectivity.spectral._PPCEst",
    "numpy.complex128",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PPCEst.accumulate": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._PPCEst.compute_con": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "numpy.conj",
    "numpy.real",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIDebiasedEst": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "mne.connectivity.spectral._EpochMeanConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._WPLIDebiasedEst.__init__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "mne.connectivity.spectral._WPLIDebiasedEst",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIDebiasedEst.accumulate": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.imag"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIDebiasedEst.compute_con": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIEst": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "mne.connectivity.spectral._EpochMeanConEstBase"
   ]
  },
  "type": "class"
 },
 "mne.connectivity.spectral._WPLIEst.__init__": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "mne.connectivity.spectral._WPLIEst",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIEst.accumulate": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.imag"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._WPLIEst.compute_con": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._assemble_spectral_params": {
  "data": {
   "lineno": 1049,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "dpss_windows",
    "float",
    "int",
    "len",
    "morlet",
    "numpy.asarray",
    "numpy.hanning",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._check_estimators": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "ValueError",
    "_get_args",
    "any",
    "isinstance",
    "len",
    "list",
    "mne.connectivity.spectral._CON_METHOD_MAP",
    "mne.connectivity.spectral._check_method",
    "mtype",
    "mtype.compute_con"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._check_method": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "inspect.getmembers",
    "mne.connectivity.spectral._AbstractConEstBase"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._epoch_spectral_connectivity": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "RuntimeError",
    "_csd_from_mt",
    "_mt_spectra",
    "_psd_from_mt",
    "_psd_from_mt_adaptive",
    "cwt",
    "enumerate",
    "functools.partial",
    "isinstance",
    "len",
    "list",
    "mtype",
    "numpy.array",
    "numpy.concatenate",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._get_and_verify_data_sizes": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "isinstance",
    "list",
    "numpy.any",
    "tuple",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._get_n_epochs": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral._prepare_connectivity": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "ValueError",
    "_time_mask",
    "any",
    "check_indices",
    "enumerate",
    "float",
    "len",
    "mne.connectivity.spectral._get_and_verify_data_sizes",
    "numpy.bool",
    "numpy.fft.rfftfreq",
    "numpy.float",
    "numpy.inf",
    "numpy.linspace",
    "numpy.tril_indices",
    "numpy.where",
    "numpy.zeros",
    "range",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.spectral.getmembers": {
  "data": {
   "shadows": "inspect.getmembers"
  },
  "type": "import"
 },
 "mne.connectivity.spectral.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.spectral.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.connectivity.spectral.spectral_connectivity": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_freqs_dep",
    "dict",
    "isinstance",
    "len",
    "list",
    "mne.connectivity.spectral._assemble_spectral_params",
    "mne.connectivity.spectral._check_estimators",
    "mne.connectivity.spectral._epoch_spectral_connectivity",
    "mne.connectivity.spectral._get_and_verify_data_sizes",
    "mne.connectivity.spectral._get_n_epochs",
    "mne.connectivity.spectral._prepare_connectivity",
    "mtype",
    "my_epoch_spectral_connectivity",
    "numpy.any",
    "numpy.asarray",
    "numpy.empty",
    "numpy.inf",
    "numpy.mean",
    "numpy.pi",
    "numpy.r_",
    "numpy.searchsorted",
    "numpy.unique",
    "numpy.zeros",
    "parallel",
    "parallel_func",
    "range",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.tests": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.tests.test_effective": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.tests.test_effective.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_effective.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_effective.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_effective.phase_slope_index": {
  "data": {
   "shadows": "mne.connectivity.phase_slope_index"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_effective.test_psi": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "mne.connectivity.phase_slope_index",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_spectral": {
  "data": {
   "symbols_in_volume": [
    "mne.connectivity.tests.test_spectral.warnings",
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.connectivity.tests.test_spectral.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral._CohEst": {
  "data": {
   "shadows": "mne.connectivity.spectral._CohEst"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral._get_n_epochs": {
  "data": {
   "shadows": "mne.connectivity.spectral._get_n_epochs"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral._stc_gen": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "float",
    "mne.SourceEstimate",
    "numpy.arange",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_spectral.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.filter_data": {
  "data": {
   "shadows": "mne.filter.filter_data"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.spectral_connectivity": {
  "data": {
   "shadows": "mne.connectivity.spectral_connectivity"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_spectral.test_spectral_connectivity": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "len",
    "list",
    "mne.connectivity.spectral._CohEst",
    "mne.connectivity.spectral._get_n_epochs",
    "mne.connectivity.spectral_connectivity",
    "mne.connectivity.tests.test_spectral._stc_gen",
    "mne.connectivity.tests.test_spectral.pytest",
    "mne.filter.filter_data",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.imag",
    "numpy.linspace",
    "numpy.mean",
    "numpy.ones",
    "numpy.random.RandomState",
    "numpy.searchsorted",
    "numpy.testing.assert_array_almost_equal",
    "numpy.transpose",
    "numpy.tril_indices",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.tests.test_spectral.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.tests.test_utils.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_utils.seed_target_indices": {
  "data": {
   "shadows": "mne.connectivity.seed_target_indices"
  },
  "type": "import"
 },
 "mne.connectivity.tests.test_utils.test_indices": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "len",
    "mne.connectivity.seed_target_indices",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.utils": {
  "data": {},
  "type": "module"
 },
 "mne.connectivity.utils.check_indices": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.connectivity.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.connectivity.utils.seed_target_indices": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "mne.coreg": {
  "data": {
   "symbols_in_volume": [
    "mne.coreg.bem_dirname",
    "mne.coreg.bem_fname",
    "mne.coreg.head_bem_fname",
    "mne.coreg.os",
    "mne.coreg.subject_dirname",
    "mne.coreg.surf_dirname",
    "pformat"
   ]
  },
  "type": "module"
 },
 "mne.coreg.BallTree": {
  "data": {
   "shadows": "sklearn.neighbors.BallTree"
  },
  "type": "import"
 },
 "mne.coreg._decimate_points": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "enumerate",
    "numpy.arange",
    "numpy.argmin",
    "numpy.array",
    "numpy.asarray",
    "numpy.empty",
    "numpy.histogramdd",
    "numpy.logical_and",
    "numpy.nonzero",
    "numpy.sum",
    "scipy.spatial.distance.cdist",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.coreg._find_fiducials_files": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "glob.iglob",
    "mne.coreg.fid_fname",
    "mne.coreg.fid_fname_general",
    "mne.coreg.os",
    "mne.coreg.re",
    "pformat"
   ]
  },
  "type": "function"
 },
 "mne.coreg._find_head_bem": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "mne.coreg._head_fnames",
    "mne.coreg._high_res_head_fnames",
    "mne.coreg.os"
   ]
  },
  "type": "function"
 },
 "mne.coreg._find_label_paths": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "get_subjects_dir",
    "glob.iglob",
    "mne.coreg.fnmatch",
    "mne.coreg.os"
   ]
  },
  "type": "function"
 },
 "mne.coreg._find_mri_paths": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "IOError",
    "get_subjects_dir",
    "glob.iglob",
    "len",
    "mne.coreg._find_fiducials_files",
    "mne.coreg.bem_dirname",
    "mne.coreg.bem_fname",
    "mne.coreg.fnmatch",
    "mne.coreg.head_bem_fname",
    "mne.coreg.os",
    "mne.coreg.re",
    "mne.coreg.surf_dirname",
    "pformat"
   ]
  },
  "type": "function"
 },
 "mne.coreg._head_fnames": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.coreg._high_res_head_fnames": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.coreg._is_mri_subject": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "bool",
    "get_subjects_dir",
    "mne.coreg._find_head_bem"
   ]
  },
  "type": "function"
 },
 "mne.coreg._is_scaled_mri_subject": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "get_subjects_dir",
    "mne.coreg._is_mri_subject",
    "mne.coreg.os"
   ]
  },
  "type": "function"
 },
 "mne.coreg._make_writable": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mne.coreg.os",
    "mne.coreg.stat"
   ]
  },
  "type": "function"
 },
 "mne.coreg._make_writable_recursive": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mne.coreg._make_writable",
    "mne.coreg.os",
    "mne.coreg.sys"
   ]
  },
  "type": "function"
 },
 "mne.coreg._mri_subject_has_bem": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "bool",
    "get_subjects_dir",
    "glob.glob",
    "len",
    "mne.coreg.bem_fname"
   ]
  },
  "type": "function"
 },
 "mne.coreg._point_cloud_error": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "mne.coreg._point_cloud_error_balltree": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "mne.coreg._scale_params": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "get_subjects_dir",
    "mne.coreg.read_mri_cfg",
    "numpy.asarray",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.coreg._trans_from_params": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "functools.reduce",
    "numpy.dot",
    "rotation",
    "scaling",
    "translation"
   ]
  },
  "type": "function"
 },
 "mne.coreg._write_mri_config": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.isscalar",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.coreg.bem_dirname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.coreg.bem_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.coreg.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.coreg.coregister_fiducials": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Transform",
    "ValueError",
    "_fiducial_coords",
    "isinstance",
    "len",
    "mne.coreg.fit_matched_points",
    "read_fiducials",
    "read_info"
   ]
  },
  "type": "function"
 },
 "mne.coreg.create_default_subject": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "get_config",
    "get_subjects_dir",
    "mne.coreg._make_writable_recursive",
    "mne.coreg.os",
    "mne.coreg.shutil"
   ]
  },
  "type": "function"
 },
 "mne.coreg.dot": {
  "data": {
   "shadows": "numpy.dot"
  },
  "type": "import"
 },
 "mne.coreg.fid_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.coreg.fid_fname_general": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.coreg.fit_matched_points": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "ValueError",
    "bool",
    "int",
    "len",
    "mne.coreg._trans_from_params",
    "numpy.any",
    "numpy.atleast_2d",
    "numpy.dot",
    "numpy.hstack",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.optimize.leastsq"
   ]
  },
  "type": "function"
 },
 "mne.coreg.fit_matched_points.error": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "functools.reduce",
    "numpy.dot",
    "rotation",
    "scaling",
    "translation"
   ]
  },
  "type": "function"
 },
 "mne.coreg.fit_point_cloud": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "ImportError",
    "NotImplementedError",
    "ValueError",
    "bool",
    "int",
    "len",
    "mne.coreg._point_cloud_error",
    "mne.coreg._point_cloud_error_balltree",
    "mne.coreg._trans_from_params",
    "numpy.atleast_2d",
    "numpy.hstack",
    "numpy.ones",
    "scipy.optimize.leastsq",
    "sklearn.neighbors.BallTree",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "mne.coreg.fit_point_cloud.error": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "errfunc",
    "numpy.dot",
    "rotation",
    "translation"
   ]
  },
  "type": "function"
 },
 "mne.coreg.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "mne.coreg.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "mne.coreg.head_bem_fname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.coreg.iglob": {
  "data": {
   "shadows": "glob.iglob"
  },
  "type": "import"
 },
 "mne.coreg.leastsq": {
  "data": {
   "shadows": "scipy.optimize.leastsq"
  },
  "type": "import"
 },
 "mne.coreg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.coreg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.coreg.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.coreg.read_mri_cfg": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "float",
    "get_subjects_dir",
    "mne.coreg.os",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.coreg.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "mne.coreg.scale_bem": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "IOError",
    "_normalize_vectors",
    "len",
    "mne.coreg._scale_params",
    "mne.coreg.bem_fname",
    "mne.coreg.os",
    "read_bem_surfaces",
    "write_bem_surfaces"
   ]
  },
  "type": "function"
 },
 "mne.coreg.scale_labels": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "Label",
    "get_subjects_dir",
    "mne.coreg._find_label_paths",
    "mne.coreg.os",
    "mne.coreg.read_mri_cfg",
    "read_label"
   ]
  },
  "type": "function"
 },
 "mne.coreg.scale_mri": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "IOError",
    "get_subjects_dir",
    "glob.iglob",
    "mne.coreg._find_mri_paths",
    "mne.coreg._write_mri_config",
    "mne.coreg.os",
    "mne.coreg.scale_bem",
    "mne.coreg.scale_labels",
    "mne.coreg.scale_source_space",
    "mne.coreg.shutil",
    "mne.coreg.subject_dirname",
    "numpy.asarray",
    "read_fiducials",
    "read_surface",
    "write_fiducials",
    "write_surface"
   ]
  },
  "type": "function"
 },
 "mne.coreg.scale_source_space": {
  "data": {
   "lineno": 1118,
   "symbols_in_volume": [
    "_normalize_vectors",
    "add_source_space_distances",
    "mne.coreg._scale_params",
    "mne.coreg.bem_dirname",
    "mne.coreg.os",
    "mne.coreg.re",
    "mne.coreg.src_fname",
    "numpy.asscalar",
    "read_source_spaces",
    "write_source_spaces"
   ]
  },
  "type": "function"
 },
 "mne.coreg.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.coreg.src_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.coreg.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "mne.coreg.subject_dirname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.coreg.surf_dirname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.coreg.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.coreg.trans_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.coreg.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.cuda": {
  "data": {},
  "type": "module"
 },
 "mne.cuda.ElementwiseKernel": {
  "data": {
   "shadows": "pycuda.elementwise.ElementwiseKernel"
  },
  "type": "import"
 },
 "mne.cuda._cuda_capable": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.cuda._get_cudafft": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ImportError",
    "scikits.cuda.fft"
   ]
  },
  "type": "function"
 },
 "mne.cuda._smart_pad": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "max",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.pad",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.cuda.driver": {
  "data": {
   "shadows": "pycuda.driver"
  },
  "type": "import"
 },
 "mne.cuda.fft": {
  "data": {
   "shadows": "scikits.cuda.fft"
  },
  "type": "import"
 },
 "mne.cuda.fft_multiply_repeated": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "_multiply_inplace_c128",
    "dict",
    "mne.cuda._get_cudafft",
    "numpy.array",
    "numpy.float64",
    "numpy.real",
    "scikits.cuda.fft",
    "scipy.fftpack.ifft"
   ]
  },
  "type": "function"
 },
 "mne.cuda.fft_resample": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "_multiply_inplace_c128",
    "dict",
    "func",
    "int",
    "len",
    "max",
    "min",
    "mne.cuda._get_cudafft",
    "mne.cuda._smart_pad",
    "numpy.arange",
    "numpy.compress",
    "numpy.concatenate",
    "numpy.float64",
    "numpy.ones",
    "numpy.zeros",
    "scipy.fftpack.irfft",
    "scipy.fftpack.rfft",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.cuda.get_cuda_memory": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mne.cuda._cuda_capable",
    "pycuda.driver.mem_get_info",
    "sizeof_fmt",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.cuda.gpuarray": {
  "data": {
   "shadows": "pycuda.gpuarray"
  },
  "type": "import"
 },
 "mne.cuda.ifft": {
  "data": {
   "shadows": "scipy.fftpack.ifft"
  },
  "type": "import"
 },
 "mne.cuda.init_cuda": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "_explain_exception",
    "get_config",
    "mne.cuda._cuda_capable",
    "mne.cuda._get_cudafft",
    "mne.cuda.get_cuda_memory",
    "numpy.complex128",
    "numpy.float64",
    "pycuda.elementwise.ElementwiseKernel",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.cuda.irfft": {
  "data": {
   "shadows": "scipy.fftpack.irfft"
  },
  "type": "import"
 },
 "mne.cuda.mem_get_info": {
  "data": {
   "shadows": "pycuda.driver.mem_get_info"
  },
  "type": "import"
 },
 "mne.cuda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.cuda.pycuda.autoinit": {
  "data": {
   "shadows": "pycuda.autoinit"
  },
  "type": "import"
 },
 "mne.cuda.rfft": {
  "data": {
   "shadows": "scipy.fftpack.rfft"
  },
  "type": "import"
 },
 "mne.cuda.setup_cuda_fft_multiply_repeated": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "int",
    "len",
    "mne.cuda._cuda_capable",
    "mne.cuda._get_cudafft",
    "mne.cuda.init_cuda",
    "numpy.complex128",
    "numpy.float64",
    "pycuda.gpuarray.empty",
    "pycuda.gpuarray.to_gpu",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.cuda.setup_cuda_fft_resample": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "int",
    "len",
    "max",
    "mne.cuda._cuda_capable",
    "mne.cuda._get_cudafft",
    "mne.cuda.init_cuda",
    "numpy.complex128",
    "numpy.float64",
    "pycuda.gpuarray.empty",
    "pycuda.gpuarray.to_gpu",
    "pycuda.gpuarray.zeros"
   ]
  },
  "type": "function"
 },
 "mne.data": {
  "data": {},
  "type": "module"
 },
 "mne.datasets": {
  "data": {},
  "type": "module"
 },
 "mne.datasets._fake": {
  "data": {},
  "type": "module"
 },
 "mne.datasets._fake._fake": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets._fake._fake.data_path",
    "mne.datasets._fake._fake.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets._fake._fake.data_path": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets._fake._fake.get_version": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_auditory": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.brainstorm.bst_auditory._data_path_doc",
    "mne.datasets.brainstorm.bst_auditory.data_path",
    "mne.datasets.brainstorm.bst_auditory.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_auditory._data_path_doc": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_auditory._description": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_auditory.data_path": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_auditory.description": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "mne.datasets.brainstorm.bst_auditory._description",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_auditory.get_version": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_auditory.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_auditory.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.brainstorm.bst_phantom_ctf._data_path_doc",
    "mne.datasets.brainstorm.bst_phantom_ctf.data_path",
    "mne.datasets.brainstorm.bst_phantom_ctf.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf._data_path_doc": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf._description": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.data_path": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.description": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "mne.datasets.brainstorm.bst_phantom_ctf._description",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.get_version": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_ctf.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.brainstorm.bst_phantom_elekta._data_path_doc",
    "mne.datasets.brainstorm.bst_phantom_elekta.data_path",
    "mne.datasets.brainstorm.bst_phantom_elekta.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta._data_path_doc": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta._description": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.data_path": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.description": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "mne.datasets.brainstorm.bst_phantom_elekta._description",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.get_version": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_phantom_elekta.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm.bst_raw": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.brainstorm.bst_raw._data_path_doc",
    "mne.datasets.brainstorm.bst_raw.data_path",
    "mne.datasets.brainstorm.bst_raw.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_raw._data_path_doc": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_raw._description": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_raw.data_path": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_raw.description": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mne.datasets.brainstorm.bst_raw._description",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_raw.get_version": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_raw.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_raw.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.brainstorm.bst_resting": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.brainstorm.bst_resting._data_path_doc",
    "mne.datasets.brainstorm.bst_resting.data_path",
    "mne.datasets.brainstorm.bst_resting.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.brainstorm.bst_resting._data_path_doc": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_resting._description": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_resting.data_path": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_resting.description": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "mne.datasets.brainstorm.bst_resting._description",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_resting.get_version": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.brainstorm.bst_resting.has_brainstorm_data": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.brainstorm.bst_resting.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.eegbci": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.eegbci.eegbci": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.eegbci.eegbci.EEGMI_URL": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.datasets.eegbci.eegbci.data_path": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "_do_path_update",
    "_fetch_file",
    "_get_path",
    "_url_to_local_path",
    "mne.datasets.eegbci.eegbci.os",
    "os.path",
    "os.path.dirname",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets.eegbci.eegbci.load_data": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "hasattr",
    "mne.datasets.eegbci.eegbci.EEGMI_URL",
    "mne.datasets.eegbci.eegbci.data_path",
    "os.path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.eegbci.eegbci.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.eegbci.eegbci.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.fieldtrip_cmc": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.conf_name",
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_name",
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_path",
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.conf_name": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_name": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_path": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "_data_path",
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_name"
   ]
  },
  "type": "function"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.get_version": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "_get_version",
    "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.data_name"
   ]
  },
  "type": "function"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.has_mtrf_data": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.datasets.fieldtrip_cmc.fieldtrip_cmc.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.hf_sef": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.hf_sef.hf_sef": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.hf_sef.hf_sef.data_path": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "_do_path_update",
    "_fetch_file",
    "_get_path",
    "any",
    "dict",
    "mne.datasets.hf_sef.hf_sef.os",
    "mne.datasets.hf_sef.hf_sef.tarfile",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets.hf_sef.hf_sef.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.hf_sef.hf_sef.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.hf_sef.hf_sef.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "mne.datasets.megsim": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.megsim.megsim": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.megsim.megsim.data_path": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "_do_path_update",
    "_fetch_file",
    "_get_path",
    "_url_to_local_path",
    "len",
    "mne.datasets.megsim.megsim.os",
    "mne.datasets.megsim.megsim.zipfile",
    "os.path",
    "os.path.dirname",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join",
    "os.path.split",
    "os.path.splitext",
    "sys.stdout.write"
   ]
  },
  "type": "function"
 },
 "mne.datasets.megsim.megsim.load_data": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "mne.datasets.megsim.megsim.data_path",
    "os.path",
    "url_match"
   ]
  },
  "type": "function"
 },
 "mne.datasets.megsim.megsim.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.megsim.megsim.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.megsim.megsim.stdout": {
  "data": {
   "shadows": "sys.stdout"
  },
  "type": "import"
 },
 "mne.datasets.megsim.megsim.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "mne.datasets.megsim.urls": {
  "data": {
   "symbols_in_volume": [
    "list",
    "mne.datasets.megsim.urls.conditions",
    "mne.datasets.megsim.urls.data_formats",
    "mne.datasets.megsim.urls.data_types",
    "numpy.atleast_1d",
    "set"
   ]
  },
  "type": "module"
 },
 "mne.datasets.megsim.urls._load_all_data": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "data_path",
    "mne.datasets.megsim.urls.url_root",
    "mne.datasets.megsim.urls.urls"
   ]
  },
  "type": "function"
 },
 "mne.datasets.megsim.urls.conditions": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "mne.datasets.megsim.urls.data_formats": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "mne.datasets.megsim.urls.data_types": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "mne.datasets.megsim.urls.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.megsim.urls.subjects": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "mne.datasets.megsim.urls.url_match": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "list",
    "mne.datasets.megsim.urls.conditions",
    "mne.datasets.megsim.urls.data_formats",
    "mne.datasets.megsim.urls.data_types",
    "mne.datasets.megsim.urls.url_root",
    "mne.datasets.megsim.urls.urls",
    "numpy.logical_and"
   ]
  },
  "type": "function"
 },
 "mne.datasets.megsim.urls.url_root": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mne.datasets.megsim.urls.urls": {
  "data": {
   "lineno": 149
  },
  "type": "constant"
 },
 "mne.datasets.megsim.urls.valid_conditions": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "mne.datasets.megsim.urls.valid_data_formats": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "mne.datasets.megsim.urls.valid_data_types": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "mne.datasets.misc": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.misc._misc": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.misc._misc.data_path"
   ]
  },
  "type": "module"
 },
 "mne.datasets.misc._misc.data_path": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.mtrf": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.mtrf.mtrf": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.mtrf.mtrf.data_name",
    "mne.datasets.mtrf.mtrf.data_path",
    "mne.datasets.mtrf.mtrf.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.mtrf.mtrf.data_name": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.datasets.mtrf.mtrf.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_data_path",
    "mne.datasets.mtrf.mtrf.data_name"
   ]
  },
  "type": "function"
 },
 "mne.datasets.mtrf.mtrf.get_version": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_get_version",
    "mne.datasets.mtrf.mtrf.data_name"
   ]
  },
  "type": "function"
 },
 "mne.datasets.mtrf.mtrf.has_mtrf_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.mtrf.mtrf.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.multimodal": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.multimodal.multimodal": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.multimodal.multimodal.data_path",
    "mne.datasets.multimodal.multimodal.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.multimodal.multimodal.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.multimodal.multimodal.get_version": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.multimodal.multimodal.has_multimodal_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.multimodal.multimodal.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.sample": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.sample.sample": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.sample.sample._skip_sample_data",
    "mne.datasets.sample.sample.data_path",
    "mne.datasets.sample.sample.get_version",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "module"
 },
 "mne.datasets.sample.sample._skip_sample_data": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "get_config",
    "mne.datasets.sample.sample.has_sample_data"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sample.sample.data_path": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sample.sample.get_version": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.sample.sample.has_sample_data": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.datasets.sample.sample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.sample.sample.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.sample.sample.requires_sample_data": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.datasets.somato": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.somato.somato": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.somato.somato.data_path",
    "mne.datasets.somato.somato.get_version"
   ]
  },
  "type": "module"
 },
 "mne.datasets.somato.somato.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.somato.somato.get_version": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.somato.somato.has_somato_data": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.datasets.somato.somato.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.spm_face": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.spm_face.spm_data": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.spm_face.spm_data._skip_spm_data",
    "mne.datasets.spm_face.spm_data.data_path",
    "mne.datasets.spm_face.spm_data.get_version",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "module"
 },
 "mne.datasets.spm_face.spm_data._skip_spm_data": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "get_config",
    "mne.datasets.spm_face.spm_data.has_spm_data"
   ]
  },
  "type": "function"
 },
 "mne.datasets.spm_face.spm_data.data_path": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.spm_face.spm_data.get_version": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.spm_face.spm_data.has_spm_data": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.datasets.spm_face.spm_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.spm_face.spm_data.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.spm_face.spm_data.requires_spm_data": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.datasets.testing": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.testing._testing": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.testing._testing._skip_testing_data",
    "mne.datasets.testing._testing.data_path",
    "mne.datasets.testing._testing.get_version",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "module"
 },
 "mne.datasets.testing._testing._skip_testing_data": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "get_config",
    "mne.datasets.testing._testing.has_testing_data"
   ]
  },
  "type": "function"
 },
 "mne.datasets.testing._testing.data_path": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "RuntimeError",
    "_data_path",
    "get_config"
   ]
  },
  "type": "function"
 },
 "mne.datasets.testing._testing.get_version": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.testing._testing.has_testing_data": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.datasets.testing._testing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.testing._testing.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.testing._testing.requires_testing_data": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.tests.test_datasets": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.datasets.tests.test_datasets._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.datasets": {
  "data": {
   "shadows": "mne.datasets"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.requires_good_network": {
  "data": {
   "shadows": "mne.utils.requires_good_network"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.string_types": {
  "data": {
   "shadows": "mne.externals.six.string_types"
  },
  "type": "import"
 },
 "mne.datasets.tests.test_datasets.test_datasets": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "mne.datasets",
    "mne.datasets.brainstorm",
    "mne.datasets.tests.test_datasets.os",
    "mne.datasets.utils._get_path",
    "mne.externals.six.string_types",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets.tests.test_datasets.test_downloads": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "mne.datasets._fake.data_path",
    "mne.datasets._fake.get_version",
    "mne.utils._TempDir",
    "mne.utils.requires_good_network",
    "nose.tools.assert_true",
    "os.path",
    "os.path.isfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets.tests.test_datasets.test_megsim": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "mne.datasets.megsim.load_data",
    "mne.utils._TempDir",
    "mne.utils.requires_good_network",
    "nose.tools.assert_equal",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.utils.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.datasets.utils.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.datasets.utils._bst_license_text": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "mne.datasets.utils._data_path": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "any",
    "dict",
    "distutils.version.LooseVersion",
    "input",
    "isinstance",
    "len",
    "list",
    "mne.datasets.utils._bst_license_text",
    "mne.datasets.utils._dataset_version",
    "mne.datasets.utils._do_path_update",
    "mne.datasets.utils._download",
    "mne.datasets.utils._extract",
    "mne.datasets.utils._get_path",
    "mne.datasets.utils.os",
    "mne.datasets.utils.sys",
    "os.path.abspath",
    "os.path.exists",
    "os.path.join",
    "set",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._data_path_doc": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.datasets.utils._dataset_version": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._do_path_update": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "get_config",
    "input",
    "mne.datasets.utils.sys",
    "os.path.abspath",
    "set_config"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._download": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "_fetch_file",
    "input",
    "md5sum",
    "mne.datasets.utils.os",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._download_all_example_data": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "mne.datasets.utils.fetch_hcp_mmp_parcellation",
    "mne.datasets.utils.sys"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._extract": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "mne.datasets.utils.shutil",
    "mne.datasets.utils.tarfile",
    "mne.datasets.utils.zipfile",
    "os.path.exists",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._extract.onerror": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "func",
    "mne.datasets.utils.os",
    "mne.datasets.utils.stat",
    "os.path.dirname"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._get_path": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "OSError",
    "ValueError",
    "get_config",
    "isinstance",
    "mne.datasets.utils.os",
    "os.path.exists",
    "os.path.expanduser",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._get_version": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "mne.datasets.utils._data_path",
    "mne.datasets.utils.has_dataset"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils._hcp_mmp_license_text": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "mne.datasets.utils._version_doc": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.datasets.utils.fetch_hcp_mmp_parcellation": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "Label",
    "RuntimeError",
    "_fetch_file",
    "all",
    "bool",
    "collections.OrderedDict",
    "enumerate",
    "float",
    "get_subjects_dir",
    "input",
    "len",
    "list",
    "mne.datasets.utils._hcp_mmp_license_text",
    "mne.datasets.utils.sys",
    "numpy.array",
    "numpy.dot",
    "numpy.zeros",
    "os.path.isfile",
    "os.path.join",
    "read_labels_from_annot",
    "sum",
    "write_labels_to_annot"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils.has_dataset": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "dict",
    "mne.datasets.utils._data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.utils.mne_version": {
  "data": {
   "shadows": "__version__"
  },
  "type": "import"
 },
 "mne.datasets.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.datasets.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.datasets.utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.datasets.utils.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "mne.datasets.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.datasets.utils.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "mne.datasets.utils.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "mne.datasets.visual_92_categories": {
  "data": {},
  "type": "module"
 },
 "mne.datasets.visual_92_categories.visual_92_categories": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.datasets.visual_92_categories.visual_92_categories._skip_visual_92_categories_data",
    "mne.datasets.visual_92_categories.visual_92_categories.data_path",
    "mne.datasets.visual_92_categories.visual_92_categories.get_version",
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "module"
 },
 "mne.datasets.visual_92_categories.visual_92_categories._skip_visual_92_categories_data": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "get_config",
    "mne.datasets.visual_92_categories.visual_92_categories.has_visual_92_categories_data"
   ]
  },
  "type": "function"
 },
 "mne.datasets.visual_92_categories.visual_92_categories.data_path": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "_data_path"
   ]
  },
  "type": "function"
 },
 "mne.datasets.visual_92_categories.visual_92_categories.get_version": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "_get_version"
   ]
  },
  "type": "function"
 },
 "mne.datasets.visual_92_categories.visual_92_categories.has_visual_92_categories_data": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.datasets.visual_92_categories.visual_92_categories.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.datasets.visual_92_categories.visual_92_categories.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.datasets.visual_92_categories.visual_92_categories.requires_visual_92_categories_data": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "mne.decoding": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.base": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.base.KFold": {
  "data": {
   "shadows": "sklearn.cross_validation.KFold"
  },
  "type": "import"
 },
 "mne.decoding.base.LinearModel": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "mne.decoding.base.LinearModel.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "getattr",
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.decision_function": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.filters_": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.fit": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.cov",
    "numpy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.fit_transform": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.predict": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.predict_proba": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.score": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "mne.decoding.base.LinearModel.transform": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "mne.decoding.base.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "mne.decoding.base.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.cross_validation.StratifiedKFold"
  },
  "type": "import"
 },
 "mne.decoding.base._check_estimator": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base._fit_and_score": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "mne.decoding.base._score",
    "mne.decoding.base.numbers",
    "mne.decoding.base.time",
    "print",
    "sklearn.model_selection._validation._index_param_value",
    "sklearn.utils.metaestimators._safe_split",
    "sklearn.utils.validation._num_samples",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base._get_inverse_funcs": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "hasattr",
    "list"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base._index_param_value": {
  "data": {
   "shadows": "sklearn.model_selection._validation._index_param_value"
  },
  "type": "import"
 },
 "mne.decoding.base._num_samples": {
  "data": {
   "shadows": "sklearn.utils.validation._num_samples"
  },
  "type": "import"
 },
 "mne.decoding.base._safe_split": {
  "data": {
   "shadows": "sklearn.utils.metaestimators._safe_split"
  },
  "type": "import"
 },
 "mne.decoding.base._score": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "scorer"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base._set_cv": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "XFold",
    "check_version",
    "cv",
    "cv.__name__",
    "cv.split",
    "getattr",
    "hasattr",
    "int",
    "is_classifier",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.int",
    "numpy.zeros_like",
    "sklearn.cross_validation",
    "sklearn.cross_validation.KFold",
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.cross_validation.check_cv",
    "sklearn.model_selection",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.StratifiedKFold",
    "sklearn.model_selection.check_cv",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base.check_cv": {
  "data": {
   "shadows": "sklearn.model_selection._split.check_cv"
  },
  "type": "import"
 },
 "mne.decoding.base.check_scoring": {
  "data": {
   "shadows": "sklearn.metrics.scorer.check_scoring"
  },
  "type": "import"
 },
 "mne.decoding.base.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mne.decoding.base.cross_val_multiscore": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "cv",
    "cv.split",
    "is_classifier",
    "list",
    "numpy.array",
    "p_func",
    "parallel",
    "parallel_func",
    "sklearn.base.clone",
    "sklearn.metrics.scorer.check_scoring",
    "sklearn.model_selection._split.check_cv",
    "sklearn.utils.indexable"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base.get_coef": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "hasattr",
    "inverse_func",
    "list",
    "mne.decoding.base._get_inverse_funcs",
    "numpy.array",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "mne.decoding.base.indexable": {
  "data": {
   "shadows": "sklearn.utils.indexable"
  },
  "type": "import"
 },
 "mne.decoding.base.models": {
  "data": {
   "shadows": "sklearn.cross_validation"
  },
  "type": "import"
 },
 "mne.decoding.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.base.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "mne.decoding.base.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.decoding.csp": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.csp.CSP": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "mne.decoding.csp.CSP.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "bool",
    "float",
    "int",
    "isinstance",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP._check_Xy": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP.fit": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "_regularized_covariance",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mne.decoding.csp._ajd_pham",
    "numpy.abs",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.average",
    "numpy.dot",
    "numpy.log",
    "numpy.mean",
    "numpy.ndarray",
    "numpy.sqrt",
    "numpy.trace",
    "numpy.transpose",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "scipy.linalg.eigh",
    "scipy.linalg.pinv",
    "sum",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP.plot_filters": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "EvokedArray",
    "copy.deepcopy",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP.plot_patterns": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "EvokedArray",
    "copy.deepcopy",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.CSP.transform": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "isinstance",
    "numpy.asarray",
    "numpy.dot",
    "numpy.log",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.SPoC": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "mne.decoding.csp.CSP"
   ]
  },
  "type": "class"
 },
 "mne.decoding.csp.SPoC.__init__": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "delattr",
    "mne.decoding.csp.SPoC",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.SPoC.fit": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "ValueError",
    "_regularized_covariance",
    "enumerate",
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.dot",
    "numpy.empty",
    "numpy.float64",
    "numpy.mean",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.unique",
    "scipy.linalg.eigh",
    "scipy.linalg.pinv",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.SPoC.transform": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "mne.decoding.csp.SPoC",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp._ajd_pham": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "max",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.concatenate",
    "numpy.conj",
    "numpy.dot",
    "numpy.eye",
    "numpy.imag",
    "numpy.mean",
    "numpy.real",
    "numpy.reshape",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.decoding.csp.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.decoding.csp.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.decoding.csp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.ems": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.ems.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "mne.decoding.ems.EMS": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "mne.decoding.ems.EMS.__repr__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.decoding.ems.EMS.fit": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.linalg.norm",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mne.decoding.ems.EMS.transform": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.decoding.ems._ems_diff": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.decoding.ems._run_ems": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.intersect1d",
    "numpy.sqrt",
    "numpy.sum",
    "objective_function"
   ]
  },
  "type": "function"
 },
 "mne.decoding.ems.compute_ems": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "_set_cv",
    "collections.Counter",
    "len",
    "list",
    "numpy.array",
    "numpy.mean",
    "numpy.std",
    "numpy.where",
    "p_func",
    "parallel",
    "parallel_func",
    "pick_info",
    "pick_types",
    "set",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.decoding.ems.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.mixin": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.mixin.EstimatorMixin": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.decoding.mixin.EstimatorMixin.get_params": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "mne.decoding.mixin.EstimatorMixin.set_params": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.decoding.mixin.TransformerMixin": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.decoding.mixin.TransformerMixin.fit_transform": {
  "data": {
   "lineno": 7
  },
  "type": "function"
 },
 "mne.decoding.tests": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.tests.test_base.BaseEstimator": {
  "data": {
   "shadows": "sklearn.base.BaseEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.LinearModel": {
  "data": {
   "shadows": "mne.decoding.base.LinearModel"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.LinearRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LinearRegression"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.Scaler": {
  "data": {
   "shadows": "mne.decoding.Scaler"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.SlidingEstimator": {
  "data": {
   "shadows": "mne.decoding.search_light.SlidingEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base._get_inverse_funcs": {
  "data": {
   "shadows": "mne.decoding.base._get_inverse_funcs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base._make_data": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.eye",
    "numpy.random.multivariate_normal",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.cross_val_multiscore": {
  "data": {
   "shadows": "mne.decoding.base.cross_val_multiscore"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.cross_val_score": {
  "data": {
   "shadows": "sklearn.model_selection.cross_val_score"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.get_coef": {
  "data": {
   "shadows": "mne.decoding.base.get_coef"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.is_classifier": {
  "data": {
   "shadows": "mne.fixes.is_classifier"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.is_regressor": {
  "data": {
   "shadows": "mne.fixes.is_regressor"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_base.test_cross_val_multiscore": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "mne.decoding.base.cross_val_multiscore",
    "mne.decoding.search_light.SlidingEstimator",
    "mne.utils.requires_version",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.random.rand",
    "numpy.shape",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.model_selection.KFold",
    "sklearn.model_selection.cross_val_score"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Clf",
    "Inv",
    "NoInv",
    "hasattr",
    "len",
    "list",
    "mne.decoding.Scaler",
    "mne.decoding.base.LinearModel",
    "mne.decoding.base._get_inverse_funcs",
    "mne.decoding.base.get_coef",
    "mne.decoding.search_light.SlidingEstimator",
    "mne.decoding.tests.test_base._make_data",
    "mne.fixes.is_classifier",
    "mne.fixes.is_regressor",
    "mne.utils.requires_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.transpose",
    "sklearn.linear_model.LinearRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.pipeline.make_pipeline",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef.Clf": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "sklearn.base.BaseEstimator"
   ]
  },
  "type": "class"
 },
 "mne.decoding.tests.test_base.test_get_coef.Clf.fit": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef.Inv": {
  "data": {
   "lineno": 84
  },
  "type": "class"
 },
 "mne.decoding.tests.test_base.test_get_coef.Inv.inverse_transform": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef.NoInv": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "mne.decoding.tests.test_base.test_get_coef.NoInv.fit": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_get_coef.NoInv.transform": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "mne.decoding.tests.test_base.test_linearmodel": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "mne.decoding.base.LinearModel",
    "mne.utils.requires_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.random.rand",
    "numpy.random.seed",
    "sklearn.linear_model.LinearRegression"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.decoding.tests.test_csp.data_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.decoding.tests.test_csp.CSP": {
  "data": {
   "shadows": "mne.decoding.csp.CSP"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.Pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.Pipeline"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.SPoC": {
  "data": {
   "shadows": "mne.decoding.csp.SPoC"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp._ajd_pham": {
  "data": {
   "shadows": "mne.decoding.csp._ajd_pham"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.assert_greater": {
  "data": {
   "shadows": "nose.tools.assert_greater"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.data_dir": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_csp.event_id": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_csp.event_name": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_csp.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.raw_fname": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_csp.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_csp.simulate_data": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.atleast_2d",
    "numpy.dot",
    "numpy.linalg.svd",
    "numpy.random.RandomState",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_ajd": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "mne.decoding.csp._ajd_pham",
    "numpy.atleast_2d",
    "numpy.diag",
    "numpy.dot",
    "numpy.empty",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_csp": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "len",
    "mne.Epochs",
    "mne.decoding.csp.CSP",
    "mne.decoding.tests.test_csp.event_id",
    "mne.decoding.tests.test_csp.event_name",
    "mne.decoding.tests.test_csp.pytest",
    "mne.decoding.tests.test_csp.raw_fname",
    "mne.decoding.tests.test_csp.simulate_data",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "nose.tools.assert_equal",
    "nose.tools.assert_greater",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.corrcoef",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "plot",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_csp_pipeline": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "mne.decoding.csp.CSP",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_true",
    "sklearn.pipeline.Pipeline",
    "sklearn.svm.SVC"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_regularized_csp": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.decoding.csp.CSP",
    "mne.decoding.tests.test_csp.event_id",
    "mne.decoding.tests.test_csp.event_name",
    "mne.decoding.tests.test_csp.raw_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_csp.test_spoc": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "mne.decoding.csp.SPoC",
    "mne.decoding.tests.test_csp.simulate_data",
    "nose.tools.assert_greater",
    "nose.tools.assert_raises",
    "numpy.abs",
    "numpy.corrcoef",
    "numpy.random.RandomState",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_ems": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.decoding.tests.test_ems.data_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.decoding.tests.test_ems.EMS": {
  "data": {
   "shadows": "mne.decoding.EMS"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.cross_validation.StratifiedKFold"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.compute_ems": {
  "data": {
   "shadows": "mne.decoding.compute_ems"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.curdir": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.data_dir": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.event_id": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.event_name": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.raw_fname": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_ems.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_ems.test_ems": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict",
    "events",
    "len",
    "list",
    "mne.Epochs",
    "mne.decoding.EMS",
    "mne.decoding.compute_ems",
    "mne.decoding.tests.test_ems.event_id",
    "mne.decoding.tests.test_ems.event_name",
    "mne.decoding.tests.test_ems.raw_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.utils.check_version",
    "mne.utils.requires_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.atleast_1d",
    "numpy.mean",
    "numpy.setdiff1d",
    "numpy.std",
    "numpy.testing.assert_array_almost_equal",
    "numpy.vstack",
    "range",
    "set",
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.model_selection.StratifiedKFold",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.decoding.tests.test_receptive_field.data_dir",
    "mne.decoding.tests.test_receptive_field.raw",
    "mne.decoding.tests.test_receptive_field.raw_fname",
    "mne.decoding.tests.test_receptive_field.warnings",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.utils.run_tests_if_main",
    "numpy.random.RandomState",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.decoding.tests.test_receptive_field.ReceptiveField": {
  "data": {
   "shadows": "mne.decoding.ReceptiveField"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.TimeDelayingRidge": {
  "data": {
   "shadows": "mne.decoding.TimeDelayingRidge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._SCORERS": {
  "data": {
   "shadows": "mne.decoding.receptive_field._SCORERS"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._compute_corrs": {
  "data": {
   "shadows": "mne.decoding.time_delaying_ridge._compute_corrs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._compute_reg_neighbors": {
  "data": {
   "shadows": "mne.decoding.time_delaying_ridge._compute_reg_neighbors"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._delay_time_series": {
  "data": {
   "shadows": "mne.decoding.receptive_field._delay_time_series"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._delays_to_slice": {
  "data": {
   "shadows": "mne.decoding.receptive_field._delays_to_slice"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field._times_to_delays": {
  "data": {
   "shadows": "mne.decoding.receptive_field._times_to_delays"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.data_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.event_id": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.event_name": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.picks": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.raw": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.raw_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.rng": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_receptive_field.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_receptive_field.test_compute_reg_neighbors": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "mne.decoding.time_delaying_ridge._compute_reg_neighbors",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_inverse_coef": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "any",
    "int",
    "len",
    "make_data",
    "mne.decoding.ReceptiveField",
    "mne.decoding.TimeDelayingRidge",
    "mne.decoding.tests.test_receptive_field.rng",
    "mne.decoding.tests.test_receptive_field.warnings",
    "mne.utils.requires_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.dot",
    "numpy.eye",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "sklearn.linear_model.Ridge",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_inverse_coef.make_data": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "int",
    "mne.decoding.receptive_field._delay_time_series",
    "mne.decoding.tests.test_receptive_field.rng",
    "numpy.concatenate",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_rank_deficiency": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "mne.decoding.ReceptiveField",
    "mne.decoding.tests.test_receptive_field.rng",
    "mne.utils.requires_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.apply_along_axis",
    "numpy.convolve",
    "numpy.corrcoef",
    "numpy.fft.irfft",
    "numpy.fft.rfft",
    "numpy.hanning",
    "numpy.random.RandomState",
    "sklearn.linear_model.Ridge"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_receptive_field": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "mne.decoding.ReceptiveField",
    "mne.decoding.TimeDelayingRidge",
    "mne.decoding.receptive_field._SCORERS",
    "mne.decoding.receptive_field._SCORERS.items",
    "mne.decoding.receptive_field._delay_time_series",
    "mne.decoding.tests.test_receptive_field.rng",
    "mne.utils.requires_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.tile",
    "sklearn.linear_model.Ridge",
    "str",
    "val"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_receptive_field_1d": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "float",
    "len",
    "mne.decoding.ReceptiveField",
    "mne.decoding.TimeDelayingRidge",
    "mne.decoding.tests.test_receptive_field.rng",
    "mne.utils.requires_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range",
    "sklearn.linear_model.Ridge"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_receptive_field_nd": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "ValueError",
    "mne.decoding.ReceptiveField",
    "mne.decoding.TimeDelayingRidge",
    "mne.decoding.tests.test_receptive_field.rng",
    "mne.utils.requires_version",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "range",
    "repr",
    "sklearn.linear_model.Ridge",
    "val"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_time_delay": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "mne.decoding.receptive_field._delay_time_series",
    "mne.decoding.receptive_field._delays_to_slice",
    "mne.decoding.receptive_field._times_to_delays",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.complex",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "numpy.where",
    "range",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.test_time_delaying_fast_calc": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "mne.decoding.receptive_field._delay_time_series",
    "mne.decoding.tests.test_receptive_field.rng",
    "mne.decoding.time_delaying_ridge._compute_corrs",
    "numpy.array",
    "numpy.convolve",
    "numpy.dot",
    "numpy.einsum",
    "numpy.empty",
    "numpy.mean",
    "numpy.random.RandomState",
    "numpy.reshape",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_receptive_field.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.tests.test_search_light.BaggingClassifier": {
  "data": {
   "shadows": "sklearn.ensemble.BaggingClassifier"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.GeneralizingEstimator": {
  "data": {
   "shadows": "mne.decoding.search_light.GeneralizingEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.Ridge": {
  "data": {
   "shadows": "sklearn.linear_model.Ridge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.SlidingEstimator": {
  "data": {
   "shadows": "mne.decoding.search_light.SlidingEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.Vectorizer": {
  "data": {
   "shadows": "mne.decoding.transformer.Vectorizer"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.make_data": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.rand",
    "numpy.random.randn",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.make_pipeline": {
  "data": {
   "shadows": "sklearn.pipeline.make_pipeline"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.make_scorer": {
  "data": {
   "shadows": "sklearn.metrics.make_scorer"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_search_light.test_generalization_light": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "len",
    "list",
    "mne.decoding.search_light.GeneralizingEstimator",
    "mne.decoding.tests.test_search_light.make_data",
    "mne.decoding.transformer.Vectorizer",
    "mne.utils.requires_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.arange",
    "numpy.ones_like",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "repr",
    "scoring",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.metrics.roc_auc_score",
    "sklearn.pipeline.make_pipeline"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_search_light": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_LogRegTransformer",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.decoding.search_light.SlidingEstimator",
    "mne.decoding.tests.test_search_light.make_data",
    "mne.decoding.transformer.Vectorizer",
    "mne.utils.requires_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.arange",
    "numpy.ones_like",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "scoring",
    "sklearn.ensemble.BaggingClassifier",
    "sklearn.linear_model.LogisticRegression",
    "sklearn.linear_model.Ridge",
    "sklearn.metrics.make_scorer",
    "sklearn.metrics.roc_auc_score",
    "sklearn.pipeline.make_pipeline",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_search_light.test_search_light._LogRegTransformer": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression"
   ]
  },
  "type": "class"
 },
 "mne.decoding.tests.test_search_light.test_search_light._LogRegTransformer.transform": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_time_frequency": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.tests.test_time_frequency.TimeFrequency": {
  "data": {
   "shadows": "mne.decoding.time_frequency.TimeFrequency"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.clone": {
  "data": {
   "shadows": "sklearn.base.clone"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_frequency.test_timefrequency": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "mne.decoding.time_frequency.TimeFrequency",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_raises",
    "numpy.linspace",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal",
    "sklearn.base.clone"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_time_gen": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.decoding.tests.test_time_gen.data_dir",
    "mne.decoding.tests.test_time_gen.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.decoding.tests.test_time_gen.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.GeneralizationAcrossTime": {
  "data": {
   "shadows": "mne.decoding.GeneralizationAcrossTime"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.KFold": {
  "data": {
   "shadows": "sklearn.cross_validation.KFold"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.KernelRidge": {
  "data": {
   "shadows": "sklearn.kernel_ridge.KernelRidge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.LabelEncoder": {
  "data": {
   "shadows": "sklearn.preprocessing.LabelEncoder"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.LeaveOneGroupOut": {
  "data": {
   "shadows": "sklearn.model_selection.LeaveOneGroupOut"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.LeaveOneLabelOut": {
  "data": {
   "shadows": "sklearn.cross_validation.LeaveOneLabelOut"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.SVC": {
  "data": {
   "shadows": "sklearn.svm.SVC"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.SVR": {
  "data": {
   "shadows": "sklearn.svm.SVR"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.ShuffleSplit": {
  "data": {
   "shadows": "sklearn.cross_validation.ShuffleSplit"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.StratifiedKFold": {
  "data": {
   "shadows": "sklearn.cross_validation.StratifiedKFold"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.TimeDecoding": {
  "data": {
   "shadows": "mne.decoding.TimeDecoding"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.data_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_time_gen.event_id": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_time_gen.event_id_gen": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_time_gen.event_name": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_time_gen.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.is_classifier": {
  "data": {
   "shadows": "mne.fixes.is_classifier"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.make_epochs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.decoding.tests.test_time_gen.event_id",
    "mne.decoding.tests.test_time_gen.event_name",
    "mne.decoding.tests.test_time_gen.raw_fname",
    "mne.decoding.tests.test_time_gen.warnings",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_time_gen.mean_squared_error": {
  "data": {
   "shadows": "sklearn.metrics.mean_squared_error"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.raw_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_time_gen.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.roc_auc_score": {
  "data": {
   "shadows": "sklearn.metrics.roc_auc_score"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.test_decoding_time": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "hasattr",
    "len",
    "mne.decoding.TimeDecoding",
    "mne.decoding.tests.test_time_gen.make_epochs",
    "mne.decoding.tests.test_time_gen.warnings",
    "mne.utils.check_version",
    "mne.utils.requires_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.random.rand",
    "numpy.shape",
    "numpy.testing.assert_array_equal",
    "sklearn.cross_validation.KFold",
    "sklearn.svm.SVR"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_time_gen.test_generalization_across_time": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "ValueError",
    "any",
    "dict",
    "hasattr",
    "isinstance",
    "len",
    "mne.decoding.GeneralizationAcrossTime",
    "mne.decoding.tests.test_time_gen.copy",
    "mne.decoding.tests.test_time_gen.make_epochs",
    "mne.decoding.tests.test_time_gen.pytest",
    "mne.decoding.tests.test_time_gen.warnings",
    "mne.fixes.is_classifier",
    "mne.utils.check_version",
    "mne.utils.requires_version",
    "mne.utils.use_log_level",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.empty",
    "numpy.hstack",
    "numpy.max",
    "numpy.min",
    "numpy.ndarray",
    "numpy.shape",
    "numpy.testing.assert_array_equal",
    "sklearn.cross_validation.KFold",
    "sklearn.cross_validation.LeaveOneLabelOut",
    "sklearn.cross_validation.ShuffleSplit",
    "sklearn.cross_validation.StratifiedKFold",
    "sklearn.kernel_ridge.KernelRidge",
    "sklearn.metrics.mean_squared_error",
    "sklearn.model_selection.LeaveOneGroupOut",
    "sklearn.model_selection.ShuffleSplit",
    "sklearn.preprocessing.LabelEncoder",
    "sklearn.svm.SVC",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_time_gen.test_generalization_across_time.scorer_proba": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "sklearn.metrics.roc_auc_score"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_time_gen.use_log_level": {
  "data": {
   "shadows": "mne.utils.use_log_level"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_time_gen.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.decoding.tests.test_transformer.data_dir",
    "mne.decoding.tests.test_transformer.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.decoding.tests.test_transformer.DEFAULTS": {
  "data": {
   "shadows": "mne.defaults.DEFAULTS"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.FilterEstimator": {
  "data": {
   "shadows": "mne.decoding.FilterEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.KernelRidge": {
  "data": {
   "shadows": "sklearn.kernel_ridge.KernelRidge"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.PSDEstimator": {
  "data": {
   "shadows": "mne.decoding.PSDEstimator"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.Scaler": {
  "data": {
   "shadows": "mne.decoding.Scaler"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.TemporalFilter": {
  "data": {
   "shadows": "mne.decoding.TemporalFilter"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.UnsupervisedSpatialFilter": {
  "data": {
   "shadows": "mne.decoding.UnsupervisedSpatialFilter"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.Vectorizer": {
  "data": {
   "shadows": "mne.decoding.Vectorizer"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.data_dir": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_transformer.event_id": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_transformer.event_name": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_transformer.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.raw_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.decoding.tests.test_transformer.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.decoding.tests.test_transformer.test_filterestimator": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.decoding.FilterEstimator",
    "mne.decoding.tests.test_transformer.event_id",
    "mne.decoding.tests.test_transformer.event_name",
    "mne.decoding.tests.test_transformer.raw_fname",
    "mne.decoding.tests.test_transformer.warnings",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_psdestimator": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.decoding.PSDEstimator",
    "mne.decoding.tests.test_transformer.event_id",
    "mne.decoding.tests.test_transformer.event_name",
    "mne.decoding.tests.test_transformer.raw_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.inf",
    "numpy.pi",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_scaler": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "dict",
    "events",
    "isinstance",
    "len",
    "mne.Epochs",
    "mne.decoding.Scaler",
    "mne.decoding.tests.test_transformer.event_id",
    "mne.decoding.tests.test_transformer.event_name",
    "mne.decoding.tests.test_transformer.raw_fname",
    "mne.defaults.DEFAULTS",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.utils.check_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.array",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.percentile",
    "numpy.std",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_temporal_filter": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "mne.decoding.TemporalFilter",
    "mne.decoding.tests.test_transformer.warnings",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_unsupervised_spatial_filter": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.decoding.UnsupervisedSpatialFilter",
    "mne.decoding.tests.test_transformer.event_id",
    "mne.decoding.tests.test_transformer.event_name",
    "mne.decoding.tests.test_transformer.raw_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.utils.requires_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_almost_equal",
    "sklearn.decomposition.PCA",
    "sklearn.kernel_ridge.KernelRidge"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.test_vectorizer": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "mne.decoding.Vectorizer",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.random.rand",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.decoding.tests.test_transformer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.decoding.time_delaying_ridge": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge": {
  "data": {
   "lineno": 208
  },
  "type": "class"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge._smax": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "int",
    "property",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge._smin": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "int",
    "property",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge.fit": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "mne.decoding.time_delaying_ridge._compute_corrs",
    "mne.decoding.time_delaying_ridge._fit_corrs",
    "numpy.dot",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.TimeDelayingRidge.predict": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "len",
    "max",
    "numpy.convolve",
    "numpy.newaxis",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge._compute_corrs": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "max",
    "min",
    "next_fast_len",
    "numpy.fft.irfft",
    "numpy.fft.rfft",
    "numpy.newaxis",
    "numpy.newaxis.conj",
    "numpy.reshape",
    "numpy.zeros",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge._compute_reg_neighbors": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.array_equal",
    "numpy.diag",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.linalg.block_diag",
    "scipy.sparse.csgraph.laplacian"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge._fit_corrs": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "mne.decoding.time_delaying_ridge._compute_reg_neighbors",
    "mne.decoding.time_delaying_ridge.warnings",
    "numpy.linalg.LinAlgError",
    "scipy.linalg.lstsq",
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_delaying_ridge.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.decoding.time_delaying_ridge.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.time_delaying_ridge.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.decoding.time_delaying_ridge.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.decoding.time_frequency": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.time_frequency.TimeFrequency": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "mne.decoding.time_frequency.TimeFrequency.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "_check_tfr_param"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_frequency.TimeFrequency.fit": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "mne.decoding.time_frequency.TimeFrequency.fit_transform": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "mne.decoding.time_frequency.TimeFrequency.frequencies": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "DeprecationWarning",
    "property",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_frequency.TimeFrequency.transform": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "_compute_tfr",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mne.decoding.time_frequency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.decoding.transformer": {
  "data": {},
  "type": "module"
 },
 "mne.decoding.transformer.FilterEstimator": {
  "data": {
   "lineno": 424
  },
  "type": "class"
 },
 "mne.decoding.transformer.FilterEstimator.__init__": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "_check_type_picks"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.FilterEstimator.fit": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "numpy.ndarray",
    "pick_types",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.FilterEstimator.transform": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "ValueError",
    "filter_data",
    "isinstance",
    "numpy.atleast_3d",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.PSDEstimator": {
  "data": {
   "lineno": 329
  },
  "type": "class"
 },
 "mne.decoding.transformer.PSDEstimator.__init__": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.PSDEstimator.fit": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.PSDEstimator.transform": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray",
    "psd_array_multitaper",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.RobustScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.RobustScaler"
  },
  "type": "import"
 },
 "mne.decoding.transformer.Scaler": {
  "data": {
   "lineno": 69
  },
  "type": "class"
 },
 "mne.decoding.transformer.Scaler.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "check_version",
    "dict",
    "isinstance",
    "mne.decoding.transformer._ConstantScaler",
    "sklearn.preprocessing.RobustScaler",
    "sklearn.preprocessing.StandardScaler",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.Scaler.fit": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "mne.decoding.transformer._sklearn_reshape_apply"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.Scaler.fit_transform": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "mne.decoding.transformer.Scaler.inverse_transform": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "mne.decoding.transformer._sklearn_reshape_apply"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.Scaler.transform": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "DeprecationWarning",
    "mne.decoding.transformer._sklearn_reshape_apply",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "mne.decoding.transformer.TemporalFilter": {
  "data": {
   "lineno": 707
  },
  "type": "class"
 },
 "mne.decoding.transformer.TemporalFilter.__init__": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "method",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.TemporalFilter.fit": {
  "data": {
   "lineno": 817
  },
  "type": "function"
 },
 "mne.decoding.transformer.TemporalFilter.transform": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "ValueError",
    "_triage_filter_params",
    "filter_data",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter": {
  "data": {
   "lineno": 584
  },
  "type": "class"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.__init__": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "hasattr",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter._apply_method": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "getattr",
    "method",
    "numpy.reshape",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.fit": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.fit_transform": {
  "data": {
   "lineno": 635
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.inverse_transform": {
  "data": {
   "lineno": 667
  },
  "type": "function"
 },
 "mne.decoding.transformer.UnsupervisedSpatialFilter.transform": {
  "data": {
   "lineno": 652
  },
  "type": "function"
 },
 "mne.decoding.transformer.Vectorizer": {
  "data": {
   "lineno": 227
  },
  "type": "class"
 },
 "mne.decoding.transformer.Vectorizer.fit": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.Vectorizer.fit_transform": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "mne.decoding.transformer.Vectorizer.inverse_transform": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.Vectorizer.transform": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "mne.decoding.transformer._ConstantScaler.__init__": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler.fit": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "_check_scalings_user",
    "_pick_data_channels",
    "_picks_by_type",
    "len",
    "numpy.ones",
    "numpy.zeros_like",
    "pick_info",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler.fit_transform": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler.inverse_transform": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "mne.decoding.transformer._ConstantScaler.transform": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "mne.decoding.transformer._sklearn_reshape_apply": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "func",
    "isinstance",
    "numpy.atleast_3d",
    "numpy.ndarray",
    "numpy.reshape",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.decoding.transformer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.defaults": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "mne.defaults.DEFAULTS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mne.defaults._handle_default": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "copy.deepcopy",
    "dict",
    "isinstance",
    "mne.defaults.DEFAULTS"
   ]
  },
  "type": "function"
 },
 "mne.defaults.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.dipole": {
  "data": {},
  "type": "module"
 },
 "mne.dipole.Dipole": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.dipole.Dipole.__getitem__": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "dict",
    "int",
    "isinstance",
    "mne.dipole.Dipole"
   ]
  },
  "type": "function"
 },
 "mne.dipole.Dipole.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "copy.deepcopy",
    "dict",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.dipole.Dipole.__len__": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "mne.dipole.Dipole.__repr__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "mne.dipole.Dipole.copy": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "mne.dipole.Dipole.crop": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "_time_mask",
    "getattr",
    "len",
    "numpy.diff",
    "numpy.median",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.dipole.Dipole.plot_amplitudes": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "plot_dipole_amplitudes"
   ]
  },
  "type": "function"
 },
 "mne.dipole.Dipole.plot_locations": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "plot_dipole_locations"
   ]
  },
  "type": "function"
 },
 "mne.dipole.Dipole.save": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "numpy.concatenate",
    "numpy.newaxis",
    "numpy.savetxt",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.dipole.DipoleFixed.__init__": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed.__repr__": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed.ch_names": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed.plot": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "_plot_evoked"
   ]
  },
  "type": "function"
 },
 "mne.dipole.DipoleFixed.save": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "_write_evokeds",
    "check_fname"
   ]
  },
  "type": "function"
 },
 "mne.dipole._compute_residual": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.dipole._concatenate_dipoles": {
  "data": {
   "lineno": 1372,
   "symbols_in_volume": [
    "mne.dipole.Dipole",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "mne.dipole._dipole_forwards": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "_compute_forwards_meeg",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "mne.dipole._dipole_gof": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.dipole._fit_Q": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "len",
    "mne.dipole._compute_residual",
    "mne.dipole._dipole_forwards",
    "mne.dipole._dipole_gof",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.newaxis",
    "numpy.sum",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.dipole._fit_confidence": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "mne.dipole._dipole_forwards",
    "numpy.allclose",
    "numpy.array",
    "numpy.concatenate",
    "numpy.cross",
    "numpy.diag",
    "numpy.diff",
    "numpy.dot",
    "numpy.empty",
    "numpy.eye",
    "numpy.linalg.norm",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.prod",
    "numpy.sqrt",
    "range",
    "scipy.linalg.eigh",
    "scipy.linalg.pinvh"
   ]
  },
  "type": "function"
 },
 "mne.dipole._fit_dipole": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "_compute_nearest",
    "enumerate",
    "functools.partial",
    "mne.dipole._fit_Q",
    "mne.dipole._fit_confidence",
    "mne.dipole._fit_eval",
    "mne.dipole._sphere_constraint",
    "mne.dipole._surface_constraint",
    "numpy.argmin",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.zeros",
    "scipy.optimize.fmin_cobyla",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.dipole._fit_dipole_fixed": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "mne.dipole._fit_Q",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.zeros",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.dipole._fit_dipoles": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "enumerate",
    "numpy.array",
    "p_fun",
    "parallel",
    "parallel_func",
    "scipy.optimize.fmin_cobyla",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.dipole._fit_eval": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "mne.dipole._dipole_forwards",
    "mne.dipole._dipole_gof",
    "numpy.newaxis",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.dipole._make_guesses": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "SourceSpaces",
    "_bem_explain_surface",
    "_coord_frame_name",
    "_make_volume_source_space",
    "dict",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.dipole._read_dipole_fixed": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "_read_evoked",
    "mne.dipole.DipoleFixed"
   ]
  },
  "type": "function"
 },
 "mne.dipole._read_dipole_text": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "dict",
    "enumerate",
    "float",
    "len",
    "list",
    "mne.dipole.Dipole",
    "mne.dipole.re",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.diff",
    "numpy.newaxis",
    "open",
    "set",
    "sorted",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.dipole._sphere_constraint": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.dipole._surface_constraint": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "_compute_nearest",
    "_points_outside_surface",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mne.dipole.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.dipole.fit_dipole": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "RuntimeError",
    "Transform",
    "ValueError",
    "_bem_find_surface",
    "_fit_sphere",
    "_get_trans",
    "_needs_eeg_average_ref_proj",
    "_pl",
    "_prep_eeg_channels",
    "_prep_field_computation",
    "_prep_meg_channels",
    "_print_coord_trans",
    "_setup_bem",
    "apply_trans",
    "channel_type",
    "compute_whitener",
    "copy.deepcopy",
    "dict",
    "float",
    "isinstance",
    "len",
    "list",
    "make_projector",
    "max",
    "mne.dipole.Dipole",
    "mne.dipole.DipoleFixed",
    "mne.dipole._dipole_forwards",
    "mne.dipole._fit_dipole",
    "mne.dipole._fit_dipole_fixed",
    "mne.dipole._fit_dipoles",
    "mne.dipole._make_guesses",
    "mne.dipole._sphere_constraint",
    "mne.dipole._surface_constraint",
    "numpy.array",
    "numpy.array_split",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.hstack",
    "numpy.isclose",
    "numpy.isfinite",
    "numpy.min",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "pick_types",
    "range",
    "read_cov",
    "repr",
    "scipy.linalg.inv",
    "scipy.linalg.svd",
    "transform_surface_to",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.dipole.fmin_cobyla": {
  "data": {
   "shadows": "scipy.optimize.fmin_cobyla"
  },
  "type": "import"
 },
 "mne.dipole.get_phantom_dipoles": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.linalg.norm",
    "numpy.setdiff1d",
    "numpy.vstack",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.dipole.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.dipole.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.dipole.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.dipole.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.dipole.read_dipole": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "_check_fname",
    "mne.dipole._read_dipole_fixed",
    "mne.dipole._read_dipole_text"
   ]
  },
  "type": "function"
 },
 "mne.evoked": {
  "data": {
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "module"
 },
 "mne.evoked.Evoked": {
  "data": {
   "lineno": 46
  },
  "type": "class"
 },
 "mne.evoked.Evoked.__init__": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "mne.evoked._aspect_rev",
    "mne.evoked._read_evoked",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.__neg__": {
  "data": {
   "lineno": 526
  },
  "type": "function"
 },
 "mne.evoked.Evoked.__repr__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "sizeof_fmt"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.animate_topomap": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "_animate_evoked_topomap"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.apply_baseline": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "rescale"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.as_type": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "_as_meg_type_evoked"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.ch_names": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.copy": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.crop": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "_time_mask",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.data": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "mne.evoked.Evoked.decimate": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "int",
    "mne.evoked._check_decim",
    "round",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.detrend": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "_pick_data_channels",
    "detrend"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.get_peak": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_merge_grad_data",
    "_pair_grad_sensors",
    "_pick_data_channels",
    "channel_type",
    "len",
    "mne.evoked._get_peak",
    "pick_types",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_evoked"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_field": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_evoked_field"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_image": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_evoked_image"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_joint": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_evoked_joint"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_topo": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_evoked_topo"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_topomap": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_evoked_topomap"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.plot_white": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "_plot_evoked_white"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.save": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "mne.evoked.write_evokeds"
   ]
  },
  "type": "function"
 },
 "mne.evoked.Evoked.shift_time": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "mne.evoked.EvokedArray": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "mne.evoked.Evoked"
   ]
  },
  "type": "class"
 },
 "mne.evoked.EvokedArray.__init__": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "int",
    "isinstance",
    "len",
    "mne.evoked._aspect_dict",
    "numpy.any",
    "numpy.arange",
    "numpy.asanyarray",
    "numpy.complex128",
    "numpy.float",
    "numpy.float64",
    "numpy.iscomplex",
    "numpy.shape",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.evoked._aspect_dict": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.evoked._aspect_rev": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.evoked._check_decim": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.evoked._get_aspect": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "_check_maxshield",
    "dir_tree_find",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.evoked._get_entries": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "list",
    "mne.evoked._aspect_rev",
    "mne.evoked._get_aspect",
    "numpy.atleast_1d",
    "range",
    "read_tag",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.evoked._get_evoked_node": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "dir_tree_find",
    "fiff_open",
    "read_meas_info"
   ]
  },
  "type": "function"
 },
 "mne.evoked._get_peak": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "ValueError",
    "maxfun",
    "numpy.abs",
    "numpy.any",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.bool",
    "numpy.ma.array",
    "numpy.ones_like",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "mne.evoked._read_evoked": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "dir_tree_find",
    "fiff_open",
    "float",
    "int",
    "isinstance",
    "len",
    "mne.evoked._aspect_dict",
    "mne.evoked._get_aspect",
    "mne.evoked._get_entries",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float",
    "numpy.in1d",
    "numpy.newaxis",
    "numpy.where",
    "range",
    "read_meas_info",
    "read_tag",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.evoked._write_evokeds": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "check_fname",
    "end_block",
    "end_file",
    "isinstance",
    "len",
    "list",
    "numpy.zeros",
    "range",
    "start_block",
    "start_file",
    "write_float_matrix",
    "write_id",
    "write_int",
    "write_meas_info",
    "write_string"
   ]
  },
  "type": "function"
 },
 "mne.evoked.combine_evoked": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "numpy.abs",
    "numpy.array",
    "numpy.max",
    "round",
    "set",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.evoked.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.evoked.grand_average": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "equalize_channels",
    "isinstance",
    "len",
    "mne.evoked.Evoked",
    "mne.evoked.combine_evoked"
   ]
  },
  "type": "function"
 },
 "mne.evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.evoked.read_evokeds": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "check_fname",
    "isinstance",
    "len",
    "list",
    "mne.evoked.Evoked",
    "mne.evoked._get_evoked_node",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.evoked.write_evokeds": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "mne.evoked._write_evokeds"
   ]
  },
  "type": "function"
 },
 "mne.externals": {
  "data": {},
  "type": "module"
 },
 "mne.externals.FieldTrip": {
  "data": {},
  "type": "module"
 },
 "mne.externals.FieldTrip.CHUNK_ASCII_KEYVAL": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_CHANNEL_FLAGS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_CHANNEL_NAMES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_CTF_RES4": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_NEUROMAG_FIF": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_NIFTI1": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_RESOLUTIONS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_SIEMENS_AP": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.CHUNK_UNSPECIFIED": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.Chunk": {
  "data": {
   "lineno": 100
  },
  "type": "class"
 },
 "mne.externals.FieldTrip.Chunk.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client": {
  "data": {
   "lineno": 208
  },
  "type": "class"
 },
 "mne.externals.FieldTrip.Client.__init__": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.connect": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "mne.externals.FieldTrip.socket"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.disconnect": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.getData": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "IOError",
    "int",
    "len",
    "mne.externals.FieldTrip.GET_DAT",
    "mne.externals.FieldTrip.GET_ERR",
    "mne.externals.FieldTrip.GET_OK",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.numpy",
    "mne.externals.FieldTrip.numpyType",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.getEvents": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "IOError",
    "int",
    "mne.externals.FieldTrip.Event",
    "mne.externals.FieldTrip.GET_ERR",
    "mne.externals.FieldTrip.GET_EVT",
    "mne.externals.FieldTrip.GET_OK",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.getHeader": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "IOError",
    "len",
    "mne.externals.FieldTrip.CHUNK_CHANNEL_NAMES",
    "mne.externals.FieldTrip.GET_ERR",
    "mne.externals.FieldTrip.GET_HDR",
    "mne.externals.FieldTrip.GET_OK",
    "mne.externals.FieldTrip.Header",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.poll": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "IOError",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.WAIT_DAT",
    "mne.externals.FieldTrip.WAIT_OK",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.putData": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "isinstance",
    "len",
    "mne.externals.FieldTrip.PUT_DAT",
    "mne.externals.FieldTrip.PUT_OK",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.dataType",
    "mne.externals.FieldTrip.numpy",
    "mne.externals.FieldTrip.serialize",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.putEvents": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "IOError",
    "isinstance",
    "mne.externals.FieldTrip.Event",
    "mne.externals.FieldTrip.PUT_EVT",
    "mne.externals.FieldTrip.PUT_OK"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.putHeader": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "len",
    "mne.externals.FieldTrip.CHUNK_CHANNEL_NAMES",
    "mne.externals.FieldTrip.PUT_HDR",
    "mne.externals.FieldTrip.PUT_OK",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.dataType",
    "mne.externals.FieldTrip.struct",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.receiveResponse": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "IOError",
    "len",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.sendRaw": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "IOError",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.sendRequest": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "len",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Client.wait": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "IOError",
    "int",
    "mne.externals.FieldTrip.VERSION",
    "mne.externals.FieldTrip.WAIT_DAT",
    "mne.externals.FieldTrip.WAIT_OK",
    "mne.externals.FieldTrip.struct"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.DATATYPE_CHAR": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_FLOAT32": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_FLOAT64": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_INT16": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_INT32": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_INT64": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_INT8": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UINT16": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UINT32": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UINT64": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UINT8": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.DATATYPE_UNKNOWN": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.Event": {
  "data": {
   "lineno": 128
  },
  "type": "class"
 },
 "mne.externals.FieldTrip.Event.__init__": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Event.__str__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Event.deserialize": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "IOError",
    "len",
    "mne.externals.FieldTrip.numpy",
    "mne.externals.FieldTrip.numpyType",
    "mne.externals.FieldTrip.struct",
    "mne.externals.FieldTrip.wordSize"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Event.serialize": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "int",
    "len",
    "mne.externals.FieldTrip.DATATYPE_UNKNOWN",
    "mne.externals.FieldTrip.serialize",
    "mne.externals.FieldTrip.struct",
    "mne.externals.FieldTrip.wordSize"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.FLUSH_DAT": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.FLUSH_ERR": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.FLUSH_EVT": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.FLUSH_HDR": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.FLUSH_OK": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_DAT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_ERR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_EVT": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_HDR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.GET_OK": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.Header": {
  "data": {
   "lineno": 108
  },
  "type": "class"
 },
 "mne.externals.FieldTrip.Header.__init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.Header.__str__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "mne.externals.FieldTrip.numpyType"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.PUT_DAT": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.PUT_ERR": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.PUT_EVT": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.PUT_HDR": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.PUT_OK": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.VERSION": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.WAIT_DAT": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.WAIT_ERR": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.WAIT_OK": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.dataType": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.externals.FieldTrip.numpyType": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.externals.FieldTrip.serialize": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "len",
    "mne.externals.FieldTrip.DATATYPE_FLOAT64",
    "mne.externals.FieldTrip.DATATYPE_INT32",
    "mne.externals.FieldTrip.DATATYPE_UNKNOWN",
    "mne.externals.FieldTrip.dataType",
    "mne.externals.FieldTrip.numpy",
    "mne.externals.FieldTrip.struct",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.FieldTrip.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "mne.externals.FieldTrip.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mne.externals.FieldTrip.wordSize": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.externals.decorator": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "contextlib.GeneratorContextManager",
    "contextlib._GeneratorContextManager",
    "dict",
    "mne.externals.decorator.ContextManager",
    "mne.externals.decorator.__call__",
    "mne.externals.decorator.__init__",
    "mne.externals.decorator.decorator",
    "mne.externals.decorator.re",
    "mne.externals.decorator.sys",
    "type"
   ]
  },
  "type": "module"
 },
 "mne.externals.decorator.ContextManager": {
  "data": {
   "lineno": 249
  },
  "type": "constant"
 },
 "mne.externals.decorator.DEF": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "mne.externals.decorator.FunctionMaker": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.decorator.FunctionMaker.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "getattr",
    "hasattr",
    "inspect.getfullargspec",
    "list",
    "mne.externals.decorator.inspect",
    "mne.externals.decorator.sys",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.FunctionMaker.create": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.FunctionMaker.make": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "NameError",
    "SyntaxError",
    "compile",
    "exec",
    "mne.externals.decorator.DEF",
    "mne.externals.decorator.sys",
    "print",
    "set",
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.FunctionMaker.update": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "getattr",
    "mne.externals.decorator.sys"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.GeneratorContextManager": {
  "data": {
   "shadows": "contextlib.GeneratorContextManager"
  },
  "type": "import"
 },
 "mne.externals.decorator._GeneratorContextManager": {
  "data": {
   "shadows": "contextlib._GeneratorContextManager"
  },
  "type": "import"
 },
 "mne.externals.decorator.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.externals.decorator.__call__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "dict",
    "mne.externals.decorator.FunctionMaker"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.__init__": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "contextlib.GeneratorContextManager.__init__",
    "f"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.__version__": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.externals.decorator.contextmanager": {
  "data": {
   "lineno": 253
  },
  "type": "constant"
 },
 "mne.externals.decorator.decorator": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "inspect.getfullargspec",
    "mne.externals.decorator.FunctionMaker",
    "mne.externals.decorator.get_init",
    "mne.externals.decorator.inspect"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.get_init": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "mne.externals.decorator.getfullargspec": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.decorator.getfullargspec.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "mne.externals.decorator.inspect"
   ]
  },
  "type": "function"
 },
 "mne.externals.decorator.getfullargspec.__iter__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "mne.externals.decorator.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.externals.decorator.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.externals.decorator.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.externals.decorator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.funcsigs": {
  "data": {
   "symbols_in_volume": [
    "all.__call__",
    "mne.externals.funcsigs._MethodWrapper",
    "mne.externals.funcsigs._ParameterKind",
    "mne.externals.funcsigs._WrapperDescriptor",
    "mne.externals.funcsigs.types",
    "type",
    "type.__call__"
   ]
  },
  "type": "module"
 },
 "mne.externals.funcsigs.BoundArguments": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.funcsigs.BoundArguments.__eq__": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "issubclass",
    "mne.externals.funcsigs.BoundArguments"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.BoundArguments.__hash__": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.BoundArguments.__init__": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "mne.externals.funcsigs.signature"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.BoundArguments.__ne__": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "mne.externals.funcsigs.BoundArguments.args": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "KeyError",
    "mne.externals.funcsigs._KEYWORD_ONLY",
    "mne.externals.funcsigs._VAR_KEYWORD",
    "mne.externals.funcsigs._VAR_POSITIONAL",
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.BoundArguments.kwargs": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "KeyError",
    "mne.externals.funcsigs._KEYWORD_ONLY",
    "mne.externals.funcsigs._VAR_KEYWORD",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.BoundArguments.signature": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "mne.externals.funcsigs.Parameter": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "mne.externals.funcsigs._KEYWORD_ONLY",
    "mne.externals.funcsigs._POSITIONAL_ONLY",
    "mne.externals.funcsigs._POSITIONAL_OR_KEYWORD",
    "mne.externals.funcsigs._VAR_KEYWORD",
    "mne.externals.funcsigs._VAR_POSITIONAL",
    "mne.externals.funcsigs._empty",
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.funcsigs.Parameter.__eq__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "issubclass",
    "mne.externals.funcsigs.Parameter"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Parameter.__hash__": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Parameter.__init__": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "mne.externals.funcsigs._KEYWORD_ONLY",
    "mne.externals.funcsigs._POSITIONAL_ONLY",
    "mne.externals.funcsigs._POSITIONAL_OR_KEYWORD",
    "mne.externals.funcsigs._VAR_KEYWORD",
    "mne.externals.funcsigs._VAR_POSITIONAL",
    "mne.externals.funcsigs._empty",
    "mne.externals.funcsigs.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Parameter.__ne__": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Parameter.__repr__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Parameter.__str__": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "mne.externals.funcsigs._POSITIONAL_ONLY",
    "mne.externals.funcsigs._VAR_KEYWORD",
    "mne.externals.funcsigs._VAR_POSITIONAL",
    "mne.externals.funcsigs._empty",
    "mne.externals.funcsigs.formatannotation",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Parameter.annotation": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Parameter.default": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Parameter.kind": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Parameter.name": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Parameter.replace": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "mne.externals.funcsigs._void",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Signature": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "mne.externals.funcsigs.BoundArguments",
    "mne.externals.funcsigs.Parameter",
    "mne.externals.funcsigs._empty",
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.funcsigs.Signature.__eq__": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "enumerate",
    "issubclass",
    "len",
    "mne.externals.funcsigs.Signature",
    "mne.externals.funcsigs._KEYWORD_ONLY",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Signature.__hash__": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Signature.__init__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "enumerate",
    "mne.externals.funcsigs._POSITIONAL_ONLY",
    "mne.externals.funcsigs._empty",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Signature.__ne__": {
  "data": {
   "lineno": 642
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Signature.__str__": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "enumerate",
    "mne.externals.funcsigs._KEYWORD_ONLY",
    "mne.externals.funcsigs._VAR_POSITIONAL",
    "mne.externals.funcsigs._empty",
    "mne.externals.funcsigs.formatannotation",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Signature._bind": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "KeyError",
    "StopIteration",
    "TypeError",
    "collections.OrderedDict",
    "iter",
    "mne.externals.funcsigs._KEYWORD_ONLY",
    "mne.externals.funcsigs._POSITIONAL_ONLY",
    "mne.externals.funcsigs._VAR_KEYWORD",
    "mne.externals.funcsigs._VAR_POSITIONAL",
    "mne.externals.funcsigs._empty",
    "mne.externals.funcsigs.itertools",
    "next",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Signature.bind": {
  "data": {
   "lineno": 773
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Signature.bind_partial": {
  "data": {
   "lineno": 780
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Signature.from_function": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "TypeError",
    "classmethod",
    "cls",
    "enumerate",
    "getattr",
    "isinstance",
    "len",
    "mne.externals.funcsigs.Parameter",
    "mne.externals.funcsigs._KEYWORD_ONLY",
    "mne.externals.funcsigs._POSITIONAL_OR_KEYWORD",
    "mne.externals.funcsigs._VAR_KEYWORD",
    "mne.externals.funcsigs._VAR_POSITIONAL",
    "mne.externals.funcsigs._empty",
    "mne.externals.funcsigs.types",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Signature.parameters": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "AttributeError",
    "collections.OrderedDict",
    "mne.externals.funcsigs.types",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Signature.replace": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "mne.externals.funcsigs._void",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.Signature.return_annotation": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs._KEYWORD_ONLY": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "mne.externals.funcsigs._MethodWrapper": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.externals.funcsigs._NonUserDefinedCallables": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.externals.funcsigs._POSITIONAL_ONLY": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "mne.externals.funcsigs._POSITIONAL_OR_KEYWORD": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "mne.externals.funcsigs._ParameterKind": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "class"
 },
 "mne.externals.funcsigs._ParameterKind.__new__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "int.__new__"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs._ParameterKind.__repr__": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "mne.externals.funcsigs._ParameterKind.__str__": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "mne.externals.funcsigs._VAR_KEYWORD": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "mne.externals.funcsigs._VAR_POSITIONAL": {
  "data": {
   "lineno": 199
  },
  "type": "constant"
 },
 "mne.externals.funcsigs._WrapperDescriptor": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.externals.funcsigs.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.externals.funcsigs.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.externals.funcsigs._empty": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.funcsigs._get_user_defined_method": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "isinstance",
    "mne.externals.funcsigs._NonUserDefinedCallables",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs._void": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.funcsigs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "mne.externals.funcsigs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "mne.externals.funcsigs.formatannotation": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "mne.externals.funcsigs.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.externals.funcsigs.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.externals.funcsigs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.externals.funcsigs.signature": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "callable",
    "collections.OrderedDict",
    "isinstance",
    "mne.externals.funcsigs._NonUserDefinedCallables",
    "mne.externals.funcsigs._get_user_defined_method",
    "mne.externals.funcsigs.functools",
    "mne.externals.funcsigs.types",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.funcsigs.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "mne.externals.h5io": {
  "data": {},
  "type": "module"
 },
 "mne.externals.h5io.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "mne.externals.h5io._h5io.PY3",
    "mne.externals.h5io._h5io.sys",
    "scipy.sparse",
    "str"
   ]
  },
  "type": "module"
 },
 "mne.externals.h5io._h5io.DataFrame": {
  "data": {
   "shadows": "pandas.DataFrame"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.PY3": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.Series": {
  "data": {
   "shadows": "pandas.Series"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io._TempDir": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "class"
 },
 "mne.externals.h5io._h5io._TempDir.__del__": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "shutil.rmtree"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._TempDir.__init__": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._TempDir.__new__": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "mne.externals.h5io._h5io.tempfile",
    "str.__new__"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._check_h5py": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ImportError",
    "mne.externals.h5io._h5io.h5py"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._create_pandas_dataset": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "mne.externals.h5io._h5io._check_h5py",
    "mne.externals.h5io._h5io.h5py"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._create_titled_dataset": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._create_titled_group": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._sort_keys": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "list",
    "numpy.argsort",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._triage_read": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "bytes",
    "cast",
    "dict",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.externals.h5io._h5io._check_h5py",
    "mne.externals.h5io._h5io.h5py",
    "mne.externals.h5io._h5io.special_chars",
    "mne.externals.h5io._h5io.text_type",
    "numpy.array",
    "numpy.bool_",
    "pandas.read_hdf",
    "scipy.sparse",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io._triage_write": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ImportError",
    "TypeError",
    "ValueError",
    "dict",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "list",
    "mne.externals.h5io._h5io._create_titled_dataset",
    "mne.externals.h5io._h5io._create_titled_group",
    "mne.externals.h5io._h5io.special_chars",
    "mne.externals.h5io._h5io.string_types",
    "mne.externals.h5io._h5io.text_type",
    "numpy.atleast_1d",
    "numpy.bool_",
    "numpy.fromstring",
    "numpy.ndarray",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.Series",
    "scipy.sparse",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.object_diff": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "bytes",
    "dict",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.externals.h5io._h5io._sort_keys",
    "mne.externals.h5io._h5io.string_types",
    "numpy.array_equal",
    "numpy.ndarray",
    "numpy.sum",
    "pandas.DataFrame",
    "pandas.Series",
    "repr",
    "scipy.sparse",
    "scipy.sparse.isspmatrix",
    "set",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.read_hdf": {
  "data": {
   "shadows": "pandas.read_hdf"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.read_hdf5": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "isinstance",
    "mne.externals.h5io._h5io._check_h5py",
    "mne.externals.h5io._h5io._triage_read",
    "mne.externals.h5io._h5io.h5py",
    "mne.externals.h5io._h5io.string_types",
    "os.path.isfile"
   ]
  },
  "type": "function"
 },
 "mne.externals.h5io._h5io.rmtree": {
  "data": {
   "shadows": "shutil.rmtree"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.sparse": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.special_chars": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.string_types": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "mne.externals.h5io._h5io.text_type": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.externals.h5io._h5io.write_hdf5": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "dict",
    "isinstance",
    "list",
    "mne.externals.h5io._h5io._check_h5py",
    "mne.externals.h5io._h5io._create_pandas_dataset",
    "mne.externals.h5io._h5io._triage_write",
    "mne.externals.h5io._h5io.h5py",
    "mne.externals.h5io._h5io.string_types",
    "os.path.isfile",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.externals.jdcal": {
  "data": {},
  "type": "module"
 },
 "mne.externals.jdcal.MJD_0": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.externals.jdcal.ipart": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.modf"
   ]
  },
  "type": "function"
 },
 "mne.externals.jdcal.jcal2jd": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "int",
    "mne.externals.jdcal.ipart"
   ]
  },
  "type": "function"
 },
 "mne.externals.jdcal.jd2jcal": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "int",
    "mne.externals.jdcal.ipart"
   ]
  },
  "type": "function"
 },
 "mne.externals.jdcal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.externals.tempita": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "mne.externals.tempita._Empty",
    "mne.externals.tempita.fill_command",
    "mne.externals.tempita.lex",
    "mne.externals.tempita.parse",
    "mne.externals.tempita.re",
    "mne.externals.tempita.trim_lex"
   ]
  },
  "type": "module"
 },
 "mne.externals.tempita.Empty": {
  "data": {
   "lineno": 637
  },
  "type": "constant"
 },
 "mne.externals.tempita.HTMLTemplate": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "dict",
    "mne.externals.tempita.Template",
    "mne.externals.tempita.attr",
    "mne.externals.tempita.html",
    "mne.externals.tempita.html_quote",
    "mne.externals.tempita.url"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.HTMLTemplate._repr": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "hasattr",
    "mne.externals.tempita.Template",
    "mne.externals.tempita.html_quote"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.StringIO": {
  "data": {
   "shadows": "cStringIO"
  },
  "type": "import"
 },
 "mne.externals.tempita.Template": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "classmethod",
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.Template.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "globals",
    "is_unicode",
    "isinstance",
    "len",
    "mne.externals.tempita.parse",
    "mne.externals.tempita.sys"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template.__repr__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "hex",
    "id"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._add_line_info": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._eval": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "SyntaxError",
    "coerce_text",
    "eval",
    "getattr",
    "mne.externals.tempita.sys"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._exec": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "exec",
    "mne.externals.tempita.sys"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_code": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "func",
    "mne.externals.tempita.TemplateDef",
    "mne.externals.tempita._TemplateBreak",
    "mne.externals.tempita._TemplateContinue",
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_codes": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_for": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.externals.tempita._TemplateBreak",
    "mne.externals.tempita._TemplateContinue",
    "vars",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_if": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._interpret_inherit": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.TemplateObject",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template._repr": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "UnicodeEncodeError",
    "bytes",
    "coerce_text",
    "is_unicode",
    "isinstance",
    "mne.externals.tempita.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template.from_filename": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "cls",
    "mne.externals.tempita.get_file_template",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.Template.substitute": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.TemplateDef.__call__": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "self._body",
    "self._bound_self",
    "self._ns.copy",
    "self._parse_signature",
    "self._template._interpret_codes"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef.__get__": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "self",
    "self.__class__",
    "self._body",
    "self._func_name",
    "self._func_signature",
    "self._ns",
    "self._pos",
    "self._template"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef.__init__": {
  "data": {
   "lineno": 513
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef.__repr__": {
  "data": {
   "lineno": 523
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef.__str__": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "self"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateDef._parse_signature": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "repr",
    "self._func_signature",
    "self._ns",
    "self._pos",
    "self._template._eval",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateError": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.TemplateError.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Exception.__init__"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateError.__str__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObject": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.TemplateObject.__init__": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "mne.externals.tempita.TemplateObjectGetter",
    "self",
    "self.__name",
    "self.get"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObject.__repr__": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "self.__class__.__name__",
    "self.__name"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObjectGetter": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.TemplateObjectGetter.__getattr__": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "getattr",
    "mne.externals.tempita.attr",
    "self.__template_obj"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObjectGetter.__init__": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "self.__template_obj"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.TemplateObjectGetter.__repr__": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "self.__class__.__name__",
    "self.__template_obj"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "mne.externals.tempita.sys",
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita._Empty.__bool__": {
  "data": {
   "lineno": 631
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__call__": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "self"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__iter__": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__repr__": {
  "data": {
   "lineno": 619
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__str__": {
  "data": {
   "lineno": 616
  },
  "type": "function"
 },
 "mne.externals.tempita._Empty.__unicode__": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "str",
    "unicode"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._TemplateBreak": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita._TemplateContinue": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.__all__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.externals.tempita._fill_command_usage": {
  "data": {
   "lineno": 1230
  },
  "type": "constant"
 },
 "mne.externals.tempita._looper": {
  "data": {},
  "type": "module"
 },
 "mne.externals.tempita._looper.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.externals.tempita._looper.loop_pos": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mne.externals.tempita._looper.sys",
    "next",
    "object",
    "property"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita._looper.loop_pos.__init__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.__next__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.__repr__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos._compare_group": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "getattr",
    "getter",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.even": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.first": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.first_group": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.index": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.item": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.last": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.last_group": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.length": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.number": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.odd": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.loop_pos.previous": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita._looper.looper.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper.__iter__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mne.externals.tempita._looper.looper_iter"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper.__repr__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper_iter": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "mne.externals.tempita._looper.sys",
    "next",
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita._looper.looper_iter.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper_iter.__iter__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.looper_iter.__next__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "StopIteration",
    "len",
    "mne.externals.tempita._looper.loop_pos"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita._looper.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.tempita.attr": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "list",
    "mne.externals.tempita.html",
    "mne.externals.tempita.html_quote"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.bunch.__getattr__": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch.__getitem__": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "KeyError",
    "dict.__getitem__"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch.__init__": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch.__repr__": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "mne.externals.tempita.bunch.__setattr__": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "mne.externals.tempita.cgi": {
  "data": {
   "shadows": "cgi"
  },
  "type": "import"
 },
 "mne.externals.tempita.fill_command": {
  "data": {
   "lineno": 1238,
   "symbols_in_volume": [
    "TemplateClass",
    "coerce_text",
    "eval",
    "len",
    "mne.externals.tempita.HTMLTemplate",
    "mne.externals.tempita.Template",
    "mne.externals.tempita._fill_command_usage",
    "mne.externals.tempita.optparse",
    "mne.externals.tempita.os",
    "mne.externals.tempita.pkg_resources",
    "mne.externals.tempita.sys",
    "open",
    "print",
    "vars",
    "vars.update"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.find_position": {
  "data": {
   "lineno": 803
  },
  "type": "function"
 },
 "mne.externals.tempita.get_file_template": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "mne.externals.tempita.os"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.html": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.externals.tempita.html.__html__": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "mne.externals.tempita.html.__init__": {
  "data": {
   "lineno": 431
  },
  "type": "function"
 },
 "mne.externals.tempita.html.__repr__": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "mne.externals.tempita.html.__str__": {
  "data": {
   "lineno": 434
  },
  "type": "function"
 },
 "mne.externals.tempita.html_quote": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "bytes",
    "coerce_text",
    "hasattr",
    "is_unicode",
    "isinstance",
    "mne.externals.tempita.cgi",
    "mne.externals.tempita.sys",
    "mne.externals.tempita.warnings"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.in_re": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.externals.tempita.isolate_expression": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.lead_whitespace_re": {
  "data": {
   "lineno": 731
  },
  "type": "constant"
 },
 "mne.externals.tempita.lex": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "mne.externals.tempita.Template",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.find_position",
    "mne.externals.tempita.re",
    "mne.externals.tempita.trim_lex"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.optparse": {
  "data": {
   "shadows": "optparse"
  },
  "type": "import"
 },
 "mne.externals.tempita.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.externals.tempita.parse": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "mne.externals.tempita.Template",
    "mne.externals.tempita.lex",
    "mne.externals.tempita.parse_expr"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_cond": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "isinstance",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.parse_one_cond",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_def": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "isinstance",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.parse_expr",
    "mne.externals.tempita.parse_signature",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_default": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "len",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.var_re"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_expr": {
  "data": {
   "lineno": 940,
   "symbols_in_volume": [
    "isinstance",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.parse_cond",
    "mne.externals.tempita.parse_def",
    "mne.externals.tempita.parse_default",
    "mne.externals.tempita.parse_for",
    "mne.externals.tempita.parse_inherit"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_for": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "isinstance",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.in_re",
    "mne.externals.tempita.parse_expr",
    "tuple",
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_inherit": {
  "data": {
   "lineno": 1091
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_one_cond": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "isinstance",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.parse_expr",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_signature": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "get_token",
    "mne.externals.tempita.TemplateError",
    "mne.externals.tempita.isolate_expression",
    "mne.externals.tempita.tokenize"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.parse_signature.get_token": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "StopIteration",
    "mne.externals.tempita.tokenize",
    "next"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.paste_script_template_renderer": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "mne.externals.tempita.Template",
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "mne.externals.tempita.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.externals.tempita.single_statements": {
  "data": {
   "lineno": 729
  },
  "type": "constant"
 },
 "mne.externals.tempita.statement_re": {
  "data": {
   "lineno": 728
  },
  "type": "constant"
 },
 "mne.externals.tempita.sub": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "mne.externals.tempita.Template"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.sub_html": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "mne.externals.tempita.HTMLTemplate"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.externals.tempita.tokenize": {
  "data": {
   "shadows": "tokenize"
  },
  "type": "import"
 },
 "mne.externals.tempita.trail_whitespace_re": {
  "data": {
   "lineno": 730
  },
  "type": "constant"
 },
 "mne.externals.tempita.trim_lex": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mne.externals.tempita.lead_whitespace_re",
    "mne.externals.tempita.single_statements",
    "mne.externals.tempita.statement_re",
    "mne.externals.tempita.trail_whitespace_re",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.url": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "coerce_text",
    "is_unicode"
   ]
  },
  "type": "function"
 },
 "mne.externals.tempita.url_quote": {
  "data": {
   "shadows": "quote"
  },
  "type": "import"
 },
 "mne.externals.tempita.var_re": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.externals.tempita.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.fixes": {
  "data": {
   "symbols_in_volume": [
    "hasattr",
    "mne.fixes.inspect"
   ]
  },
  "type": "module"
 },
 "mne.fixes.BaseEstimator": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.fixes.BaseEstimator.__repr__": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "len",
    "sklearn.base._pprint"
   ]
  },
  "type": "function"
 },
 "mne.fixes.BaseEstimator._get_param_names": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "classmethod",
    "getattr",
    "inspect.signature",
    "object.__init__",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.fixes.BaseEstimator.get_params": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "DeprecationWarning",
    "dict",
    "getattr",
    "hasattr",
    "len",
    "mne.fixes.warnings"
   ]
  },
  "type": "function"
 },
 "mne.fixes.BaseEstimator.set_params": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "ValueError",
    "iteritems",
    "len",
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.fixes.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.fixes._fft_helper": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "detrend_func",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.newaxis",
    "scipy.fftpack.fft"
   ]
  },
  "type": "function"
 },
 "mne.fixes._get_args": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "mne.fixes.inspect"
   ]
  },
  "type": "function"
 },
 "mne.fixes._get_read_geometry": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "nibabel.__version__",
    "nibabel.freesurfer.read_geometry"
   ]
  },
  "type": "function"
 },
 "mne.fixes._get_sph_harm": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "distutils.version.LooseVersion",
    "mne.fixes._sph_harm",
    "scipy.__version__",
    "scipy.special.sph_harm"
   ]
  },
  "type": "function"
 },
 "mne.fixes._pprint": {
  "data": {
   "shadows": "sklearn.base._pprint"
  },
  "type": "import"
 },
 "mne.fixes._read_geometry": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "_fread3",
    "_fread3_many",
    "dict",
    "len",
    "mne.fixes._read_volume_info",
    "mne.fixes.warnings",
    "numpy.float",
    "numpy.fromfile",
    "numpy.int",
    "numpy.zeros",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.fixes._read_volume_info": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "IOError",
    "dict",
    "float",
    "int",
    "len",
    "mne.fixes.warnings",
    "numpy.array",
    "numpy.array_equal",
    "numpy.concatenate",
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.fixes._safe_svd": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "mne.fixes._get_args",
    "numpy.linalg.LinAlgError",
    "scipy.linalg.svd",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.fixes._serialize_volume_info": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "mne.fixes.warnings",
    "numpy.array",
    "numpy.array_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.fixes._sosfiltfilt": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "min",
    "mne.fixes._validate_pad",
    "mne.fixes._validate_sos",
    "mne.fixes.axis_reverse",
    "mne.fixes.axis_slice",
    "mne.fixes.sosfilt",
    "mne.fixes.sosfilt_zi"
   ]
  },
  "type": "function"
 },
 "mne.fixes._spectral_helper": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "ValueError",
    "detrend",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "list",
    "min",
    "mne.fixes._fft_helper",
    "mne.fixes.warnings",
    "numpy.absolute",
    "numpy.angle",
    "numpy.arange",
    "numpy.asarray",
    "numpy.broadcast",
    "numpy.complex64",
    "numpy.concatenate",
    "numpy.conjugate",
    "numpy.empty",
    "numpy.iscomplexobj",
    "numpy.result_type",
    "numpy.rollaxis",
    "numpy.unwrap",
    "numpy.zeros",
    "scipy.fftpack.fftfreq",
    "scipy.signal.windows.get_window",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.fixes._spectral_helper.detrend_func": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "detrend",
    "len",
    "numpy.rollaxis"
   ]
  },
  "type": "function"
 },
 "mne.fixes._spectrogram": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "mne.fixes._spectral_helper"
   ]
  },
  "type": "function"
 },
 "mne.fixes._sph_harm": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "ValueError",
    "_sph_harm_norm",
    "numpy.abs",
    "numpy.asarray",
    "numpy.cos",
    "numpy.exp",
    "numpy.pi.any",
    "scipy.special.lpmv"
   ]
  },
  "type": "function"
 },
 "mne.fixes._validate_pad": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError",
    "mne.fixes.const_ext",
    "mne.fixes.even_ext",
    "mne.fixes.odd_ext"
   ]
  },
  "type": "function"
 },
 "mne.fixes._validate_sos": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ValueError",
    "numpy.atleast_2d"
   ]
  },
  "type": "function"
 },
 "mne.fixes.assert_is": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "mne.fixes.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.fixes.assert_is_not": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "mne.fixes.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.fixes.assert_raises_regex": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "AttributeError",
    "callable_obj",
    "mne.fixes.assert_raises_regex_impl",
    "mne.fixes.nose"
   ]
  },
  "type": "function"
 },
 "mne.fixes.assert_raises_regex._AssertRaisesContext": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.fixes.assert_raises_regex._AssertRaisesContext.__enter__": {
  "data": {
   "lineno": 966
  },
  "type": "function"
 },
 "mne.fixes.assert_raises_regex._AssertRaisesContext.__exit__": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "AttributeError",
    "isinstance",
    "issubclass",
    "mne.fixes.re",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.fixes.assert_raises_regex._AssertRaisesContext.__init__": {
  "data": {
   "lineno": 959
  },
  "type": "function"
 },
 "mne.fixes.assert_raises_regex._AssertRaisesContext.failureException": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "mne.fixes.assert_raises_regex.impl": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "_AssertRaisesContext",
    "callable_obj"
   ]
  },
  "type": "function"
 },
 "mne.fixes.assert_raises_regex_impl": {
  "data": {
   "lineno": 928
  },
  "type": "constant"
 },
 "mne.fixes.assert_true": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "mne.fixes.axis_reverse": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "mne.fixes.axis_slice"
   ]
  },
  "type": "function"
 },
 "mne.fixes.axis_slice": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.fixes.const_ext": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "mne.fixes.axis_slice",
    "numpy.concatenate",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "mne.fixes.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "mne.fixes.even_ext": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "ValueError",
    "mne.fixes.axis_slice",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "mne.fixes.fft": {
  "data": {
   "shadows": "scipy.fftpack.fft"
  },
  "type": "import"
 },
 "mne.fixes.fftpack": {
  "data": {
   "shadows": "scipy.fftpack"
  },
  "type": "import"
 },
 "mne.fixes.get_sosfiltfilt": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "ImportError",
    "mne.fixes._sosfiltfilt",
    "scipy.signal.sosfiltfilt"
   ]
  },
  "type": "function"
 },
 "mne.fixes.get_spectrogram": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "check_version",
    "mne.fixes._spectrogram",
    "scipy.signal.spectrogram"
   ]
  },
  "type": "function"
 },
 "mne.fixes.get_window": {
  "data": {
   "shadows": "scipy.signal.windows.get_window"
  },
  "type": "import"
 },
 "mne.fixes.ifft": {
  "data": {
   "shadows": "scipy.fftpack.ifft"
  },
  "type": "import"
 },
 "mne.fixes.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.fixes.is_classifier": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.fixes.is_regressor": {
  "data": {
   "lineno": 1083,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.fixes.lfilter": {
  "data": {
   "shadows": "scipy.signal.lfilter"
  },
  "type": "import"
 },
 "mne.fixes.lfilter_zi": {
  "data": {
   "shadows": "scipy.signal.lfilter_zi"
  },
  "type": "import"
 },
 "mne.fixes.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.fixes.lpmv": {
  "data": {
   "shadows": "scipy.special.lpmv"
  },
  "type": "import"
 },
 "mne.fixes.minimum_phase": {
  "data": {
   "shadows": "scipy.signal.minimum_phase",
   "symbols_in_volume": [
    "Exception",
    "RuntimeWarning",
    "ValueError",
    "int",
    "len",
    "mne.fixes.warnings",
    "numpy.abs",
    "numpy.allclose",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.exp",
    "numpy.iscomplexobj",
    "numpy.log",
    "numpy.log2",
    "numpy.zeros",
    "scipy.fftpack.fft",
    "scipy.fftpack.ifft",
    "scipy.signal.minimum_phase"
   ]
  },
  "type": "import"
 },
 "mne.fixes.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.fixes.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "mne.fixes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.fixes.odd_ext": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ValueError",
    "mne.fixes.axis_slice",
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "mne.fixes.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.fixes.read_geometry": {
  "data": {
   "shadows": "nibabel.freesurfer.read_geometry"
  },
  "type": "import"
 },
 "mne.fixes.signaltools": {
  "data": {
   "shadows": "scipy.signal.signaltools"
  },
  "type": "import"
 },
 "mne.fixes.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "mne.fixes.sosfilt": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.zeros_like",
    "range",
    "scipy.signal.lfilter",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.fixes.sosfilt_zi": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asarray",
    "numpy.empty",
    "range",
    "scipy.signal.lfilter_zi"
   ]
  },
  "type": "function"
 },
 "mne.fixes.sosfiltfilt": {
  "data": {
   "shadows": "scipy.signal.sosfiltfilt"
  },
  "type": "import"
 },
 "mne.fixes.sp_version": {
  "data": {
   "shadows": "scipy.__version__"
  },
  "type": "import"
 },
 "mne.fixes.spectrogram": {
  "data": {
   "shadows": "scipy.signal.spectrogram"
  },
  "type": "import"
 },
 "mne.fixes.sph_harm": {
  "data": {
   "shadows": "scipy.special.sph_harm"
  },
  "type": "import"
 },
 "mne.fixes.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.forward": {
  "data": {},
  "type": "module"
 },
 "mne.forward._compute_forward": {
  "data": {},
  "type": "module"
 },
 "mne.forward._compute_forward._MAG_FACTOR": {
  "data": {
   "lineno": 284
  },
  "type": "constant"
 },
 "mne.forward._compute_forward._bem_inf_fields": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.newaxis",
    "numpy.rollaxis",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._bem_inf_pots": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.einsum",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._bem_pot_or_field": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "mne.forward._compute_forward._MAG_FACTOR",
    "nas",
    "numpy.array_split",
    "numpy.concatenate",
    "numpy.sum",
    "p_fun",
    "parallel",
    "parallel_func",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._bem_specify_coils": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len",
    "mne.forward._compute_forward._check_coil_frame",
    "mne.forward._compute_forward._concatenate_coils",
    "mne.forward._compute_forward._lin_field_coeff",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.dot",
    "numpy.r_",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._bem_specify_els": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "_project_onto_surface",
    "apply_trans",
    "enumerate",
    "len",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.einsum",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._check_coil_frame": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.forward._compute_forward._dup_coil_set"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._compute_forwards": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "dict",
    "mne.forward._compute_forward._compute_forwards_meeg",
    "mne.forward._compute_forward._prep_field_computation"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._compute_forwards_meeg": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "_pl",
    "apply_trans",
    "fun",
    "len",
    "list",
    "max",
    "min",
    "numpy.dot",
    "numpy.zeros",
    "pick_types",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._concatenate_coils": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._do_inf_pots": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "len",
    "mne.forward._compute_forward._bem_inf_pots",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._do_lin_field_coeff": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "fast_cross_3d",
    "len",
    "numpy.array",
    "numpy.bincount",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._do_prim_curr": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "mne.forward._compute_forward._bem_inf_fields",
    "numpy.empty",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._dup_coil_set": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "RuntimeError",
    "apply_trans",
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._eeg_spherepot_coil": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "mne.forward._compute_forward._concatenate_coils",
    "numpy.array",
    "numpy.bincount",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._lin_field_coeff": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "nas",
    "numpy.array_split",
    "numpy.sum",
    "p_fun",
    "parallel",
    "parallel_func",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._magnetic_dipole_field_vec": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "isinstance",
    "len",
    "mne.forward._compute_forward._concatenate_coils",
    "numpy.bincount",
    "numpy.empty",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._make_ctf_comp_coils": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "get_current_comp",
    "len",
    "make_compensator",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._prep_field_computation": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "RuntimeError",
    "apply_trans",
    "dict",
    "len",
    "mne.forward._compute_forward._bem_pot_or_field",
    "mne.forward._compute_forward._bem_specify_coils",
    "mne.forward._compute_forward._bem_specify_els",
    "mne.forward._compute_forward._make_ctf_comp_coils",
    "mne.forward._compute_forward._sphere_pot_or_field",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.repeat",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._sphere_field": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "enumerate",
    "fast_cross_3d",
    "len",
    "mne.forward._compute_forward._MAG_FACTOR",
    "mne.forward._compute_forward._concatenate_coils",
    "numpy.array",
    "numpy.bincount",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward._sphere_pot_or_field": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "numpy.array_split",
    "numpy.concatenate",
    "p_fun",
    "parallel",
    "parallel_func"
   ]
  },
  "type": "function"
 },
 "mne.forward._compute_forward.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.forward._compute_forward.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward._field_interpolation": {
  "data": {},
  "type": "module"
 },
 "mne.forward._field_interpolation._ad_hoc_noise": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool",
    "dict",
    "len",
    "mne.forward._field_interpolation._is_axial_coil",
    "numpy.array",
    "numpy.empty",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._as_meg_type_evoked": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.forward._field_interpolation._map_meg_channels",
    "numpy.dot",
    "pick_info",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._compute_mapping_matrix": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "NotImplementedError",
    "_has_eeg_average_ref_proj",
    "len",
    "list",
    "make_projector",
    "numpy.cumsum",
    "numpy.diag",
    "numpy.dot",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.where",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._is_axial_coil": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._make_surface_mapping": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "ValueError",
    "_check_origin",
    "_create_eeg_els",
    "_create_meg_coils",
    "_do_self_dots",
    "_do_surface_dots",
    "all",
    "check_n_jobs",
    "copy.deepcopy",
    "dict",
    "len",
    "mne.forward._field_interpolation._compute_mapping_matrix",
    "mne.forward._field_interpolation._setup_dots",
    "numpy.arange",
    "pick_info",
    "pick_types",
    "transform_surface_to"
   ]
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._map_meg_channels": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "_check_origin",
    "_create_meg_coils",
    "_do_cross_dots",
    "_do_self_dots",
    "_read_coil_defs",
    "dict",
    "len",
    "mne.forward._field_interpolation._compute_mapping_matrix",
    "mne.forward._field_interpolation._setup_dots"
   ]
  },
  "type": "function"
 },
 "mne.forward._field_interpolation._setup_dots": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "_get_legen_table",
    "mne.forward._field_interpolation._ad_hoc_noise",
    "numpy.linspace",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "mne.forward._field_interpolation.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.forward._field_interpolation.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.forward._field_interpolation.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.forward._field_interpolation.make_field_map": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_ensure_trans",
    "_find_trans",
    "get_head_surf",
    "get_meg_helmet_surf",
    "isinstance",
    "len",
    "list",
    "mne.forward._field_interpolation._make_surface_mapping",
    "read_trans",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._field_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward._lead_dots": {
  "data": {
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "mne.forward._lead_dots._comp_sum_eeg": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "lut_fun",
    "max",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.cumprod",
    "numpy.dot",
    "numpy.empty",
    "numpy.newaxis",
    "numpy.tile",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._comp_sums_meg": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "len",
    "lut_fun",
    "max",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.cumprod",
    "numpy.einsum",
    "numpy.empty",
    "numpy.newaxis",
    "numpy.tile",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_cross_dots": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "len",
    "mne.forward._lead_dots._fast_sphere_dot_r0",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_self_dots": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array_split",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "p_fun",
    "parallel",
    "parallel_func",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_self_dots_subset": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "len",
    "mne.forward._lead_dots._fast_sphere_dot_r0",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_surface_dots": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.array_split",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "p_fun",
    "parallel",
    "parallel_func",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._do_surface_dots_subset": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "NotImplementedError",
    "mne.forward._lead_dots._fast_sphere_dot_r0"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._eeg_const": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "mne.forward._lead_dots._fast_sphere_dot_r0": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "mne.forward._lead_dots._comp_sum_eeg",
    "mne.forward._lead_dots._comp_sums_meg",
    "mne.forward._lead_dots._eeg_const",
    "mne.forward._lead_dots._meg_const",
    "numpy.clip",
    "numpy.concatenate",
    "numpy.einsum",
    "numpy.empty",
    "numpy.newaxis",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._get_legen": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.polynomial.legendre.legvander"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._get_legen_der": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len",
    "mne.forward._lead_dots._next_legen_der",
    "numpy.empty",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._get_legen_table": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "RuntimeError",
    "_get_extra_data_path",
    "float",
    "leg_fun",
    "list",
    "mne.forward._lead_dots._get_legen",
    "mne.forward._lead_dots._get_legen_der",
    "mne.forward._lead_dots.os",
    "numpy.arange",
    "numpy.array",
    "numpy.ascontiguousarray",
    "numpy.float32",
    "numpy.fromfile",
    "numpy.linspace",
    "open",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.forward._lead_dots._meg_const": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "mne.forward._lead_dots._next_legen_der": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "mne.forward._lead_dots.legendre": {
  "data": {
   "shadows": "numpy.polynomial.legendre"
  },
  "type": "import"
 },
 "mne.forward._lead_dots.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward._lead_dots.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward._lead_dots.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.forward._make_forward": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "mne.forward._make_forward._accuracy_dict": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.forward._make_forward._coil_register": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "mne.forward._make_forward._create_eeg_el": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "RuntimeError",
    "Transform",
    "_loc_to_eeg_loc",
    "_normalize_vectors",
    "apply_trans",
    "dict",
    "mne.forward._make_forward._accuracy_dict",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._create_eeg_els": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "mne.forward._make_forward._create_eeg_el"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._create_meg_coil": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "RuntimeError",
    "_loc_to_coil_trans",
    "apply_trans",
    "dict",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._create_meg_coils": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "isinstance",
    "mne.forward._make_forward._accuracy_dict",
    "mne.forward._make_forward._create_meg_coil",
    "mne.forward._make_forward._read_coil_defs",
    "mne.forward._make_forward._transform_orig_meg_coils"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._prep_eeg_channels": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "mne.forward._make_forward._create_eeg_els",
    "pick_info",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._prep_meg_channels": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "_has_kit_refs",
    "_print_coord_trans",
    "len",
    "mne.forward._make_forward._create_meg_coils",
    "mne.forward._make_forward._read_coil_defs",
    "pick_info",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._prepare_for_forward": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "Info",
    "RuntimeError",
    "_bem_find_surface",
    "_coord_frame_name",
    "_ensure_src",
    "_filter_source_spaces",
    "_print_coord_trans",
    "dict",
    "len",
    "mne.forward._make_forward._prep_eeg_channels",
    "mne.forward._make_forward._prep_meg_channels",
    "mne.forward._make_forward._setup_bem",
    "mne.forward._make_forward.os",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.int32",
    "numpy.tile",
    "numpy.zeros",
    "pick_info",
    "pick_types",
    "str",
    "sum",
    "transform_surface_to"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._read_coil_def_file": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "RuntimeError",
    "copy.deepcopy",
    "dict",
    "int",
    "len",
    "list",
    "mne.forward._make_forward._coil_register",
    "numpy.any",
    "numpy.array",
    "numpy.fromstring",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._read_coil_defs": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "list",
    "mne.forward._make_forward._read_coil_def_file",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._setup_bem": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "_ensure_trans",
    "isinstance",
    "len",
    "os.path.split",
    "read_bem_solution"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._to_forward_dict": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "Forward",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward._transform_orig_meg_coils": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "apply_trans",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.forward._make_forward.make_forward_dipole": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "SourceSpaces",
    "ValueError",
    "VolSourceEstimate",
    "_make_discrete_source_space",
    "convert_forward_solution",
    "dict",
    "enumerate",
    "len",
    "mne.forward._make_forward.make_forward_solution",
    "numpy.allclose",
    "numpy.bool",
    "numpy.diff",
    "numpy.in1d",
    "numpy.logical_not",
    "numpy.newaxis",
    "numpy.unique",
    "numpy.zeros",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward.make_forward_solution": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "Info",
    "TypeError",
    "_compute_forwards",
    "_coord_frame_name",
    "_get_trans",
    "_merge_meg_eeg_fwds",
    "check_n_jobs",
    "dict",
    "isinstance",
    "mne.forward._make_forward._prepare_for_forward",
    "mne.forward._make_forward._to_forward_dict",
    "os.path.split",
    "read_info"
   ]
  },
  "type": "function"
 },
 "mne.forward._make_forward.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward._make_forward.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward._make_forward.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.forward.tests": {
  "data": {},
  "type": "module"
 },
 "mne.forward.tests.test_field_interpolation": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.forward.tests.test_field_interpolation.base_dir",
    "mne.forward.tests.test_field_interpolation.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.forward.tests.test_field_interpolation._comp_sum_eeg": {
  "data": {
   "shadows": "mne.forward._lead_dots._comp_sum_eeg"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._comp_sums_meg": {
  "data": {
   "shadows": "mne.forward._lead_dots._comp_sums_meg"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._create_meg_coils": {
  "data": {
   "shadows": "mne.forward._make_forward._create_meg_coils"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._do_cross_dots": {
  "data": {
   "shadows": "mne.forward._lead_dots._do_cross_dots"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._get_legen_table": {
  "data": {
   "shadows": "mne.forward._lead_dots._get_legen_table"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._make_surface_mapping": {
  "data": {
   "shadows": "mne.forward._make_surface_mapping"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation._setup_args": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "dict",
    "lut_fun",
    "mne.forward._field_interpolation._setup_dots",
    "mne.forward._make_forward._create_meg_coils",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation._setup_dots": {
  "data": {
   "shadows": "mne.forward._field_interpolation._setup_dots"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.base_dir": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.data_path": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.evoked_fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.get_head_surf": {
  "data": {
   "shadows": "mne.surface.get_head_surf"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.get_meg_helmet_surf": {
  "data": {
   "shadows": "mne.surface.get_meg_helmet_surf"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.legendre": {
  "data": {
   "shadows": "numpy.polynomial.legendre"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.make_field_map": {
  "data": {
   "shadows": "mne.forward.make_field_map"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.subjects_dir": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.test_as_meg_type_evoked": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward._lead_dots._do_cross_dots",
    "mne.forward.tests.test_field_interpolation._setup_args",
    "mne.forward.tests.test_field_interpolation.evoked_fname",
    "mne.read_evokeds",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.corrcoef",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_legendre_table": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "mne.forward._lead_dots._get_legen_table",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_legendre_val": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "float",
    "lut_fun",
    "mne.externals.six.moves.zip",
    "mne.forward._lead_dots._comp_sum_eeg",
    "mne.forward._lead_dots._comp_sums_meg",
    "mne.forward._lead_dots._get_legen_table",
    "numpy.arange",
    "numpy.cumprod",
    "numpy.empty",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.polynomial.legendre.legval",
    "numpy.polynomial.legendre.legvander",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_make_field_map_eeg": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward._make_surface_mapping",
    "mne.forward.make_field_map",
    "mne.forward.tests.test_field_interpolation.evoked_fname",
    "mne.forward.tests.test_field_interpolation.subjects_dir",
    "mne.forward.tests.test_field_interpolation.trans_fname",
    "mne.read_evokeds",
    "mne.surface.get_head_surf",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_make_field_map_meeg": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.moves.zip",
    "mne.forward.make_field_map",
    "mne.forward.tests.test_field_interpolation.evoked_fname",
    "mne.forward.tests.test_field_interpolation.subjects_dir",
    "mne.forward.tests.test_field_interpolation.trans_fname",
    "mne.pick_types",
    "mne.read_evokeds",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.test_make_field_map_meg": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward._make_surface_mapping",
    "mne.forward.make_field_map",
    "mne.forward.tests.test_field_interpolation.evoked_fname",
    "mne.forward.tests.test_field_interpolation.pytest",
    "mne.forward.tests.test_field_interpolation.subjects_dir",
    "mne.forward.tests.test_field_interpolation.trans_fname",
    "mne.read_evokeds",
    "mne.surface.get_meg_helmet_surf",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_field_interpolation.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.forward.tests.test_field_interpolation.trans_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.forward.tests.test_field_interpolation.zip": {
  "data": {
   "shadows": "mne.externals.six.moves.zip"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.forward.tests.test_forward.data_path",
    "mne.forward.tests.test_forward.os",
    "mne.forward.tests.test_forward.subjects_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.forward.tests.test_forward.Forward": {
  "data": {
   "shadows": "mne.forward.Forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.apply_forward": {
  "data": {
   "shadows": "mne.apply_forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.apply_forward_raw": {
  "data": {
   "shadows": "mne.apply_forward_raw"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_naming": {
  "data": {
   "shadows": "mne.tests.common.assert_naming"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.average_forward_solutions": {
  "data": {
   "shadows": "mne.average_forward_solutions"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.compare_forwards": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.data_path": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.fname_evoked": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.fname_meeg": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.fname_meeg_grad": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.fname_mri": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.fname_raw": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.fname_src": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.is_fixed_orient": {
  "data": {
   "shadows": "mne.forward.is_fixed_orient"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.read_label": {
  "data": {
   "shadows": "mne.label.read_label"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.restrict_forward_to_label": {
  "data": {
   "shadows": "mne.forward.restrict_forward_to_label"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.restrict_forward_to_stc": {
  "data": {
   "shadows": "mne.forward.restrict_forward_to_stc"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.subjects_dir": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.forward.tests.test_forward.test_apply_forward": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mne.SourceEstimate",
    "mne.apply_forward",
    "mne.apply_forward_raw",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.Forward",
    "mne.forward.tests.test_forward.fname_evoked",
    "mne.forward.tests.test_forward.fname_meeg",
    "mne.forward.tests.test_forward.warnings",
    "mne.pick_types_forward",
    "mne.read_evokeds",
    "mne.read_forward_solution",
    "nose.tools.assert_true",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_average_forward_solution": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "mne.average_forward_solutions",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.Forward",
    "mne.forward.tests.test_forward.compare_forwards",
    "mne.forward.tests.test_forward.fname_meeg",
    "mne.forward.tests.test_forward.fname_meeg_grad",
    "mne.read_forward_solution",
    "mne.utils._TempDir",
    "mne.utils.requires_mne",
    "mne.utils.run_subprocess",
    "mne.write_forward_solution",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_convert_forward": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "isinstance",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.Forward",
    "mne.forward.is_fixed_orient",
    "mne.forward.tests.test_forward.compare_forwards",
    "mne.forward.tests.test_forward.fname_meeg_grad",
    "mne.forward.tests.test_forward.gc",
    "mne.forward.tests.test_forward.warnings",
    "mne.read_forward_solution",
    "nose.tools.assert_true",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_io_forward": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.Forward",
    "mne.forward.is_fixed_orient",
    "mne.forward.tests.test_forward.compare_forwards",
    "mne.forward.tests.test_forward.fname_meeg",
    "mne.forward.tests.test_forward.fname_meeg_grad",
    "mne.forward.tests.test_forward.pytest",
    "mne.forward.tests.test_forward.warnings",
    "mne.read_forward_solution",
    "mne.tests.common.assert_naming",
    "mne.utils._TempDir",
    "mne.write_forward_solution",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_restrict_forward_to_label": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "len",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.restrict_forward_to_label",
    "mne.forward.tests.test_forward.compare_forwards",
    "mne.forward.tests.test_forward.data_path",
    "mne.forward.tests.test_forward.fname_meeg",
    "mne.label.read_label",
    "mne.pick_types_forward",
    "mne.read_forward_solution",
    "mne.utils._TempDir",
    "mne.write_forward_solution",
    "numpy.intersect1d",
    "numpy.searchsorted",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.test_restrict_forward_to_stc": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mne.SourceEstimate",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.Forward",
    "mne.forward.restrict_forward_to_stc",
    "mne.forward.tests.test_forward.compare_forwards",
    "mne.forward.tests.test_forward.fname_meeg",
    "mne.forward.tests.test_forward.warnings",
    "mne.pick_types_forward",
    "mne.read_forward_solution",
    "mne.utils._TempDir",
    "mne.write_forward_solution",
    "nose.tools.assert_true",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_forward.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.forward.tests.test_forward.write_forward_solution": {
  "data": {
   "shadows": "mne.write_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.forward.tests.test_make_forward.data_path",
    "mne.forward.tests.test_make_forward.os",
    "mne.forward.tests.test_make_forward.subjects_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.forward.tests.test_make_forward.Dipole": {
  "data": {
   "shadows": "mne.dipole.Dipole"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.Forward": {
  "data": {
   "shadows": "mne.forward.Forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.Transform": {
  "data": {
   "shadows": "mne.Transform"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.VolSourceEstimate": {
  "data": {
   "shadows": "mne.source_estimate.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward._compare_forwards": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "itertools.product",
    "len",
    "mne.convert_forward_solution",
    "mne.source_space._compare_source_spaces",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward._compare_source_spaces": {
  "data": {
   "shadows": "mne.source_space._compare_source_spaces"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward._create_meg_coils": {
  "data": {
   "shadows": "mne.forward._make_forward._create_meg_coils"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward._do_forward_solution": {
  "data": {
   "shadows": "mne.forward._do_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward._magnetic_dipole_field_vec": {
  "data": {
   "shadows": "mne.forward._compute_forward._magnetic_dipole_field_vec"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.data_path": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fit_dipole": {
  "data": {
   "shadows": "mne.dipole.fit_dipole"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.fname_aseg": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_bem": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_bem_meg": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_cov": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_dip": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_evo": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_meeg": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_raw": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_src": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.fname_trans": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.get_volume_labels_from_aseg": {
  "data": {
   "shadows": "mne.source_space.get_volume_labels_from_aseg"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.make_forward_dipole": {
  "data": {
   "shadows": "mne.forward._make_forward.make_forward_dipole"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.make_forward_solution": {
  "data": {
   "shadows": "mne.make_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_dipole": {
  "data": {
   "shadows": "mne.read_dipole"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.setup_source_space": {
  "data": {
   "shadows": "mne.source_space.setup_source_space"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.simulate_evoked": {
  "data": {
   "shadows": "mne.simulation.simulate_evoked"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.subjects_dir": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.forward.tests.test_make_forward.test_forward_mixed_source_space": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.tests.test_make_forward.fname_aseg",
    "mne.forward.tests.test_make_forward.fname_bem",
    "mne.forward.tests.test_make_forward.fname_raw",
    "mne.forward.tests.test_make_forward.fname_src",
    "mne.forward.tests.test_make_forward.fname_trans",
    "mne.forward.tests.test_make_forward.pytest",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD.all",
    "mne.make_forward_solution",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space",
    "mne.source_space.get_volume_labels_from_aseg",
    "mne.utils._TempDir",
    "mne.utils.requires_nibabel",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.random.rand",
    "os.path.join",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_magnetic_dipole": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "mne.Transform",
    "mne.forward._compute_forward._magnetic_dipole_field_vec",
    "mne.forward._make_forward._create_meg_coils",
    "mne.forward.tests.test_make_forward.fname_raw",
    "mne.io.read_info",
    "mne.pick_info",
    "mne.pick_types",
    "numpy.array",
    "numpy.median",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_dipole": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "isinstance",
    "issubclass",
    "len",
    "list",
    "mne.datasets.testing.requires_testing_data",
    "mne.dipole.Dipole",
    "mne.dipole.fit_dipole",
    "mne.forward._make_forward.make_forward_dipole",
    "mne.forward.tests.test_make_forward.fname_bem",
    "mne.forward.tests.test_make_forward.fname_cov",
    "mne.forward.tests.test_make_forward.fname_dip",
    "mne.forward.tests.test_make_forward.fname_evo",
    "mne.forward.tests.test_make_forward.fname_trans",
    "mne.forward.tests.test_make_forward.pytest",
    "mne.forward.tests.test_make_forward.warnings",
    "mne.make_sphere_model",
    "mne.pick_types",
    "mne.read_cov",
    "mne.read_dipole",
    "mne.read_evokeds",
    "mne.simulation.simulate_evoked",
    "mne.source_estimate.VolSourceEstimate",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.arccos",
    "numpy.array",
    "numpy.corrcoef",
    "numpy.eye",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "numpy.sort",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_solution": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "isinstance",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.Forward",
    "mne.forward.tests.test_make_forward._compare_forwards",
    "mne.forward.tests.test_make_forward.fname_bem",
    "mne.forward.tests.test_make_forward.fname_meeg",
    "mne.forward.tests.test_make_forward.fname_raw",
    "mne.forward.tests.test_make_forward.fname_src",
    "mne.forward.tests.test_make_forward.fname_trans",
    "mne.forward.tests.test_make_forward.pytest",
    "mne.make_forward_solution",
    "mne.read_forward_solution",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_solution_kit": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.Forward",
    "mne.forward._do_forward_solution",
    "mne.forward.tests.test_make_forward._compare_forwards",
    "mne.forward.tests.test_make_forward.fname_bem_meg",
    "mne.forward.tests.test_make_forward.fname_trans",
    "mne.forward.tests.test_make_forward.subjects_dir",
    "mne.forward.tests.test_make_forward.warnings",
    "mne.io.read_raw_bti",
    "mne.io.read_raw_fif",
    "mne.io.read_raw_kit",
    "mne.make_forward_solution",
    "mne.pick_info",
    "mne.pick_types",
    "mne.source_space.setup_source_space",
    "mne.source_space.write_source_spaces",
    "mne.utils._TempDir",
    "mne.utils.requires_mne",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.test_make_forward_solution_sphere": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.forward.tests.test_make_forward._compare_forwards",
    "mne.forward.tests.test_make_forward.fname_raw",
    "mne.forward.tests.test_make_forward.fname_trans",
    "mne.forward.tests.test_make_forward.subjects_dir",
    "mne.make_forward_solution",
    "mne.make_sphere_model",
    "mne.pick_types_forward",
    "mne.read_forward_solution",
    "mne.source_space.setup_source_space",
    "mne.source_space.write_source_spaces",
    "mne.utils._TempDir",
    "mne.utils.requires_mne",
    "mne.utils.run_subprocess",
    "numpy.corrcoef",
    "numpy.testing.assert_allclose",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.forward.tests.test_make_forward.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.forward.tests.test_make_forward.write_source_spaces": {
  "data": {
   "shadows": "mne.source_space.write_source_spaces"
  },
  "type": "import"
 },
 "mne.gui": {
  "data": {},
  "type": "module"
 },
 "mne.gui._backend": {
  "data": {},
  "type": "module"
 },
 "mne.gui._backend._check_backend": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ImportError",
    "_check_pyface_backend",
    "pyface.api.warning"
   ]
  },
  "type": "function"
 },
 "mne.gui._backend._testing_mode": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mne.gui._backend.os"
   ]
  },
  "type": "function"
 },
 "mne.gui._backend.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._backend.warning": {
  "data": {
   "shadows": "pyface.api.warning"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui": {
  "data": {
   "symbols_in_volume": [
    "float",
    "traitsui.api.TextEditor"
   ]
  },
  "type": "module"
 },
 "mne.gui._coreg_gui.Action": {
  "data": {
   "shadows": "traitsui.menu.Action"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.CANCEL": {
  "data": {
   "shadows": "pyface.api.CANCEL"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.CancelButton": {
  "data": {
   "shadows": "traitsui.menu.CancelButton"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.CoregFrame": {
  "data": {
   "lineno": 1277,
   "symbols_in_volume": [
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "mne.gui._coreg_gui.CoregModel",
    "mne.gui._coreg_gui.CoregPanel",
    "mne.gui._coreg_gui.ViewOptionsPanel",
    "mne.gui._coreg_gui._make_view",
    "object",
    "traits.api.Bool",
    "traits.api.Button",
    "traits.api.DelegatesTo",
    "traits.api.Float",
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traits.api.Property",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.CoregFrame.__init__": {
  "data": {
   "lineno": 1350,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "any",
    "mne.gui._coreg_gui.CoregFrame",
    "mne.gui._coreg_gui.os",
    "pyface.api.error",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._coreg_panel_default": {
  "data": {
   "lineno": 1344,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.CoregPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._fid_panel_default": {
  "data": {
   "lineno": 1341,
   "symbols_in_volume": [
    "FiducialsPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._get_hsp_visible": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._get_omitted_info": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._headview_default": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "HeadViewController"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._init_plot": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": [
    "PointObject",
    "SurfaceObject",
    "_toggle_mlab_render",
    "mne.gui._coreg_gui.ViewOptionsPanel",
    "mne.gui._coreg_gui.defaults",
    "on_pick",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._model_default": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.CoregModel"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._omit_points_fired": {
  "data": {
   "lineno": 1505
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._on_fid_file_loaded": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._on_mri_src_change": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._reset_omit_points_fired": {
  "data": {
   "lineno": 1509
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._set_title": {
  "data": {
   "lineno": 1391,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._subject_panel_default": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "SubjectSelectorPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame._view_options_fired": {
  "data": {
   "lineno": 1532
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrame.save_config": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": [
    "set_config",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrameHandler": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "traitsui.api.Handler"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.CoregFrameHandler.close": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "Exception",
    "mne.gui._coreg_gui.warnings",
    "pyface.api.information"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregFrameHandler.object_title_changed": {
  "data": {
   "lineno": 590
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "traits.api.Bool",
    "traits.api.DelegatesTo",
    "traits.api.Enum",
    "traits.api.Float",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traits.api.Property"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.CoregModel._get_can_prepare_bem_model": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_can_save": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.eye",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_fid_eval_str": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_eeg_data": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_fid_data": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_has_pts_data": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_head_mri_trans": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.eye",
    "rotation",
    "traits.api.cached_property",
    "translation"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_lpa_distance": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.ravel",
    "numpy.sqrt",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_mri_origin": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_mri_scale_trans": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "scaling",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_nasion_distance": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.ravel",
    "numpy.sqrt",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_point_distance": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "len",
    "numpy.min",
    "scipy.spatial.distance.cdist",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_points_eval_str": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.std",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_processed_mri_points": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "len",
    "pyface.api.error",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_raw_subject": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_rpa_distance": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.ravel",
    "numpy.sqrt",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_scale": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.array",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_lpa": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_nasion": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_points": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_hsp_rpa": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_mri_lpa": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_mri_nasion": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_mri_points": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._get_transformed_mri_rpa": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel._on_raw_subject_change": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.fit_auricular_points": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "fit_matched_points",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.fit_fiducials": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "fit_matched_points",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.fit_hsp_points": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "fit_point_cloud"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.fit_scale_auricular_points": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "fit_matched_points",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.fit_scale_fiducials": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "fit_matched_points",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.fit_scale_hsp_points": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "fit_point_cloud"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.get_scaling_job": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.os",
    "mne.gui._coreg_gui.re"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.load_trans": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "read_trans"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.omit_hsp_points": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "_point_cloud_error",
    "float",
    "len",
    "mne.gui._coreg_gui.warnings",
    "numpy.bool8",
    "numpy.ones",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.reset": {
  "data": {
   "lineno": 542
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.save_trans": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "RuntimeError",
    "Transform",
    "write_trans"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregModel.set_trans": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "numpy.dot",
    "rotation_angles",
    "translation"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.CoregModel",
    "mne.gui._coreg_gui._make_view_coreg_panel",
    "traits.api.Button",
    "traits.api.DelegatesTo",
    "traits.api.Float",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traits.api.Int",
    "traits.api.Property",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.CoregPanel.__init__": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.CoregPanel",
    "super",
    "threading.Thread"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel.__init__.worker": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "Exception",
    "make_bem_solution",
    "mne.gui._coreg_gui.traceback",
    "scale_mri",
    "write_bem_solution"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fit_ap_fired": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "pyface.api.GUI.set_busy"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fit_fid_fired": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "pyface.api.GUI.set_busy"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fit_hsp_points_fired": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "pyface.api.GUI.set_busy"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fits_ap_fired": {
  "data": {
   "lineno": 947,
   "symbols_in_volume": [
    "pyface.api.GUI.set_busy"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fits_fid_fired": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "pyface.api.GUI.set_busy"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._fits_hsp_points_fired": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "pyface.api.GUI.set_busy"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._get_queue_len_str": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._get_rotation": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "numpy.array",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._get_src_fid": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._get_src_pts": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._get_tgt_fid": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._get_tgt_origin": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._get_tgt_pts": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._get_translation": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "numpy.array",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._load_trans_fired": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "Exception",
    "mne.gui._coreg_gui.os",
    "pyface.api.FileDialog",
    "pyface.api.OK",
    "pyface.api.error"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._reset_params_fired": {
  "data": {
   "lineno": 962
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_x_dec_fired": {
  "data": {
   "lineno": 965
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_x_inc_fired": {
  "data": {
   "lineno": 968
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_y_dec_fired": {
  "data": {
   "lineno": 971
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_y_inc_fired": {
  "data": {
   "lineno": 974
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_z_dec_fired": {
  "data": {
   "lineno": 977
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._rot_z_inc_fired": {
  "data": {
   "lineno": 980
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._save_fired": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "_find_fiducials_files",
    "mne.gui._coreg_gui.NewMriDialog",
    "mne.gui._coreg_gui.os",
    "pyface.api.CANCEL",
    "pyface.api.FileDialog",
    "pyface.api.NO",
    "pyface.api.OK",
    "pyface.api.YES",
    "pyface.api.confirm",
    "pyface.api.error",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_x_dec_fired": {
  "data": {
   "lineno": 1071
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_x_inc_fired": {
  "data": {
   "lineno": 1074
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_y_dec_fired": {
  "data": {
   "lineno": 1077
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_y_inc_fired": {
  "data": {
   "lineno": 1080
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_z_dec_fired": {
  "data": {
   "lineno": 1083
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._scale_z_inc_fired": {
  "data": {
   "lineno": 1086
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_x_dec_fired": {
  "data": {
   "lineno": 1089
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_x_inc_fired": {
  "data": {
   "lineno": 1092
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_y_dec_fired": {
  "data": {
   "lineno": 1095
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_y_inc_fired": {
  "data": {
   "lineno": 1098
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_z_dec_fired": {
  "data": {
   "lineno": 1101
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.CoregPanel._trans_z_inc_fired": {
  "data": {
   "lineno": 1104
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.DelegatesTo": {
  "data": {
   "shadows": "traits.api.DelegatesTo"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Directory": {
  "data": {
   "shadows": "traits.api.Directory"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.EnumEditor": {
  "data": {
   "shadows": "traitsui.api.EnumEditor"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.FileDialog": {
  "data": {
   "shadows": "pyface.api.FileDialog"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Float": {
  "data": {
   "shadows": "traits.api.Float"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.GUI": {
  "data": {
   "shadows": "pyface.api.GUI"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Group": {
  "data": {
   "shadows": "traitsui.api.Group"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Handler": {
  "data": {
   "shadows": "traitsui.api.Handler"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.InstanceEditor": {
  "data": {
   "shadows": "traitsui.api.InstanceEditor"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Int": {
  "data": {
   "shadows": "traits.api.Int"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Label": {
  "data": {
   "shadows": "traitsui.api.Label"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.MayaviScene": {
  "data": {
   "shadows": "mayavi.core.ui.mayavi_scene.MayaviScene"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.NO": {
  "data": {
   "shadows": "pyface.api.NO"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.NewMriDialog": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "traits.api.Bool",
    "traits.api.Directory",
    "traits.api.HasPrivateTraits",
    "traits.api.Property",
    "traits.api.Str",
    "traitsui.api.Item",
    "traitsui.api.View",
    "traitsui.menu.Action",
    "traitsui.menu.CancelButton"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.NewMriDialog._can_overwrite_changed": {
  "data": {
   "lineno": 1133
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.NewMriDialog._get_subject_to_dir": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.os",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.NewMriDialog._get_subject_to_exists": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.os",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.NewMriDialog.update_dialog": {
  "data": {
   "lineno": 1150,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.NoButtons": {
  "data": {
   "shadows": "traitsui.menu.NoButtons"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.SceneEditor": {
  "data": {
   "shadows": "tvtk.pyface.scene_editor.SceneEditor"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Spring": {
  "data": {
   "shadows": "traitsui.api.Spring"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.TextEditor": {
  "data": {
   "shadows": "traitsui.api.TextEditor"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.UndoButton": {
  "data": {
   "shadows": "traitsui.menu.UndoButton"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.VGrid": {
  "data": {
   "shadows": "traitsui.api.VGrid"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.ViewOptionsPanel": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._coreg_gui.YES": {
  "data": {
   "shadows": "pyface.api.YES"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui._make_view": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "mayavi.core.ui.mayavi_scene.MayaviScene",
    "mne.gui._coreg_gui.CoregFrameHandler",
    "mne.gui._coreg_gui._make_view_coreg_panel",
    "traitsui.api.EnumEditor",
    "traitsui.api.Group",
    "traitsui.api.HGroup",
    "traitsui.api.InstanceEditor",
    "traitsui.api.Item",
    "traitsui.api.Label",
    "traitsui.api.VGroup",
    "traitsui.api.View",
    "traitsui.menu.NoButtons",
    "tvtk.pyface.scene_editor.SceneEditor"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui._make_view_coreg_panel": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "mne.gui._coreg_gui.laggy_float_editor",
    "traitsui.api.EnumEditor",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.Label",
    "traitsui.api.Spring",
    "traitsui.api.VGrid",
    "traitsui.api.VGroup",
    "traitsui.api.View",
    "traitsui.menu.UndoButton"
   ]
  },
  "type": "function"
 },
 "mne.gui._coreg_gui.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.confirm": {
  "data": {
   "shadows": "pyface.api.confirm"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.defaults": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mne.gui._coreg_gui.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.information": {
  "data": {
   "shadows": "pyface.api.information"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.laggy_float_editor": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "mne.gui._coreg_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "mne.gui._coreg_gui.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui": {
  "data": {
   "symbols_in_volume": [
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "module"
 },
 "mne.gui._fiducials_gui.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.ArrayEditor": {
  "data": {
   "shadows": "traitsui.api.ArrayEditor"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.DelegatesTo": {
  "data": {
   "shadows": "traits.api.DelegatesTo"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Event": {
  "data": {
   "shadows": "traits.api.Event"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.FiducialsFrame": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "float",
    "mayavi.core.ui.mayavi_scene.MayaviScene",
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "mne.gui._fiducials_gui.FiducialsPanel",
    "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel",
    "mne.gui._fiducials_gui.defaults",
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View",
    "traitsui.menu.NoButtons",
    "tvtk.pyface.scene_editor.SceneEditor"
   ]
  },
  "type": "class"
 },
 "mne.gui._fiducials_gui.FiducialsFrame.__init__": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "get_subjects_dir",
    "mne.gui._fiducials_gui.FiducialsFrame",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._headview_default": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "HeadViewController"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._init_plot": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "PointObject",
    "SurfaceObject",
    "_toggle_mlab_render",
    "mne.gui._fiducials_gui.defaults",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._on_mri_src_change": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._panel_default": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "mne.gui._fiducials_gui.FiducialsPanel",
    "mne.gui._fiducials_gui.view2"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsFrame._spanel_default": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "SubjectSelectorPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "float",
    "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel",
    "mne.gui._fiducials_gui._mm_fmt",
    "object",
    "set",
    "traits.api.Array",
    "traits.api.Button",
    "traits.api.DelegatesTo",
    "traits.api.Enum",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traitsui.api.ArrayEditor",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._fiducials_gui.FiducialsPanel.__init__": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "mne.gui._fiducials_gui.FiducialsPanel",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._on_pick": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "map",
    "mne.gui._fiducials_gui.os",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._on_pick.round_": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "round"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._on_set_change": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._reset_fid_fired": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._save_as_fired": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "mne.gui._fiducials_gui.os",
    "pyface.api.FileDialog",
    "pyface.api.OK",
    "pyface.api.YES",
    "pyface.api.confirm"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FiducialsPanel._save_fired": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.FileDialog": {
  "data": {
   "shadows": "pyface.api.FileDialog"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "float",
    "traits.api.Array",
    "traits.api.Bool",
    "traits.api.DelegatesTo",
    "traits.api.Event",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traits.api.Property"
   ]
  },
  "type": "class"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_can_reset": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_can_save": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_can_save_as": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.all",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_default_fid_fname": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._get_fid_ok": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "all",
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._reset_fired": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel._subject_changed": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "_find_fiducials_files",
    "_find_head_bem",
    "len",
    "pyface.api.error",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel.reset_fiducials": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel.save": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.array",
    "write_fiducials"
   ]
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.MayaviScene": {
  "data": {
   "shadows": "mayavi.core.ui.mayavi_scene.MayaviScene"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.NoButtons": {
  "data": {
   "shadows": "traitsui.menu.NoButtons"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.SceneEditor": {
  "data": {
   "shadows": "tvtk.pyface.scene_editor.SceneEditor"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.YES": {
  "data": {
   "shadows": "pyface.api.YES"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui._mm_fmt": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "mne.gui._fiducials_gui.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.confirm": {
  "data": {
   "shadows": "pyface.api.confirm"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.defaults": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.gui._fiducials_gui.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._fiducials_gui.view2": {
  "data": {
   "lineno": 356
  },
  "type": "constant"
 },
 "mne.gui._file_traits": {
  "data": {},
  "type": "module"
 },
 "mne.gui._file_traits.Any": {
  "data": {
   "shadows": "traits.api.Any"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._file_traits.DelegatesTo": {
  "data": {
   "shadows": "traits.api.DelegatesTo"
  },
  "type": "import"
 },
 "mne.gui._file_traits.DigSource": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "traits.api.Any",
    "traits.api.File",
    "traits.api.HasPrivateTraits",
    "traits.api.Int",
    "traits.api.Property",
    "traits.api.Str",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._file_traits.DigSource._cardinal_point": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._file_changed": {
  "data": {
   "lineno": 399
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get__hsp_points": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.zeros",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get__info": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "_empty_info",
    "_fiducial_coords",
    "all",
    "dir_tree_find",
    "enumerate",
    "fiff_open",
    "isinstance",
    "len",
    "list",
    "mne.gui._file_traits._append_fiducials",
    "pyface.api.error",
    "read_dig_montage",
    "read_info",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_eeg_points": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_inst_dir": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "os.path.dirname",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_inst_fname": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "os.path.basename",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_lpa": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_n_omitted": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "numpy.sum",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_nasion": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_points": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.DigSource._get_rpa": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.Directory": {
  "data": {
   "shadows": "traits.api.Directory"
  },
  "type": "import"
 },
 "mne.gui._file_traits.DirectoryDialog": {
  "data": {
   "shadows": "pyface.api.DirectoryDialog"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Event": {
  "data": {
   "shadows": "traits.api.Event"
  },
  "type": "import"
 },
 "mne.gui._file_traits.FiducialsSource": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "mne.gui._file_traits.fid_wildcard",
    "traits.api.File",
    "traits.api.HasTraits",
    "traits.api.Property"
   ]
  },
  "type": "class"
 },
 "mne.gui._file_traits.FiducialsSource._get_fname": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "os.path.basename",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.FiducialsSource._get_points": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "Exception",
    "_fiducial_coords",
    "os.path.exists",
    "pyface.api.error",
    "read_fiducials",
    "str",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.File": {
  "data": {
   "shadows": "traits.api.File"
  },
  "type": "import"
 },
 "mne.gui._file_traits.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._file_traits.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._file_traits.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Int": {
  "data": {
   "shadows": "traits.api.Int"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Label": {
  "data": {
   "shadows": "traitsui.api.Label"
  },
  "type": "import"
 },
 "mne.gui._file_traits.List": {
  "data": {
   "shadows": "traits.api.List"
  },
  "type": "import"
 },
 "mne.gui._file_traits.MRISubjectSource": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "traits.api.Bool",
    "traits.api.Directory",
    "traits.api.Enum",
    "traits.api.Event",
    "traits.api.HasPrivateTraits",
    "traits.api.List",
    "traits.api.Property",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._file_traits.MRISubjectSource._emit_subject": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource._get_can_create_fsaverage": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "os.path.exists",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource._get_mri_dir": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "os.path.join",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource._get_subject_has_bem": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "_mri_subject_has_bem",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource._get_subjects": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "_is_mri_subject",
    "len",
    "mne.gui._file_traits.os",
    "os.path.isdir",
    "sorted",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.MRISubjectSource.create_fsaverage": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "RuntimeError",
    "create_default_subject",
    "mne.gui._file_traits.get_fs_home"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._file_traits.ProgressDialog": {
  "data": {
   "shadows": "pyface.api.ProgressDialog"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._file_traits.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._file_traits.SubjectSelectorPanel": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "mne.gui._file_traits.MRISubjectSource",
    "traits.api.Button",
    "traits.api.DelegatesTo",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.Label",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._file_traits.SubjectSelectorPanel._create_fsaverage_fired": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "Exception",
    "pyface.api.ProgressDialog",
    "pyface.api.error",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.SubjectSelectorPanel._subjects_dir_changed": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "pyface.api.information"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.SurfaceSource": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.empty",
    "traits.api.Array",
    "traits.api.File",
    "traits.api.HasTraits"
   ]
  },
  "type": "class"
 },
 "mne.gui._file_traits.SurfaceSource.read_file": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "Exception",
    "numpy.empty",
    "os.path.exists",
    "pyface.api.error",
    "read_bem_surfaces",
    "read_surface",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._file_traits.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._file_traits._append_fiducials": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "mne.gui._file_traits._expand_path": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "os.path.abspath",
    "os.path.expanduser",
    "os.path.expandvars"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits._fs_home_problem": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits._get_root_home": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "check_fun",
    "get_config",
    "pyface.api.DirectoryDialog",
    "pyface.api.OK",
    "pyface.api.information",
    "set_config"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits._mne_root_problem": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._file_traits.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._file_traits.fid_wildcard": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.gui._file_traits.get_fs_home": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mne.gui._file_traits._get_root_home"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.information": {
  "data": {
   "shadows": "pyface.api.information"
  },
  "type": "import"
 },
 "mne.gui._file_traits.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._file_traits.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._file_traits.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.gui._file_traits.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._file_traits.set_fs_home": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "mne.gui._file_traits.get_fs_home",
    "mne.gui._file_traits.os"
   ]
  },
  "type": "function"
 },
 "mne.gui._file_traits.trans_wildcard": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.gui._help": {
  "data": {},
  "type": "module"
 },
 "mne.gui._help.TextWrapper": {
  "data": {
   "shadows": "textwrap.TextWrapper"
  },
  "type": "import"
 },
 "mne.gui._help.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "mne.gui._help.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._help.read_tooltips": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "dict",
    "format_",
    "mne.gui._help.json",
    "mne.gui._help.os",
    "open",
    "textwrap.TextWrapper"
   ]
  },
  "type": "function"
 },
 "mne.gui._initialize_gui": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "_testing_mode"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui": {
  "data": {
   "symbols_in_volume": [
    "mne.gui._kit2fiff_gui.backend_is_wx",
    "mne.gui._kit2fiff_gui.sys",
    "range",
    "read_tooltips",
    "str",
    "traitsui.api.CheckListEditor"
   ]
  },
  "type": "module"
 },
 "mne.gui._kit2fiff_gui.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.CheckListEditor": {
  "data": {
   "shadows": "traitsui.api.CheckListEditor"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.DelegatesTo": {
  "data": {
   "shadows": "traits.api.DelegatesTo"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.ETSConfig": {
  "data": {
   "shadows": "traits.trait_base.ETSConfig"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.EnumEditor": {
  "data": {
   "shadows": "traitsui.api.EnumEditor"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.File": {
  "data": {
   "shadows": "traits.api.File"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.FileDialog": {
  "data": {
   "shadows": "pyface.api.FileDialog"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Float": {
  "data": {
   "shadows": "traits.api.Float"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Handler": {
  "data": {
   "shadows": "traitsui.api.Handler"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Int": {
  "data": {
   "shadows": "traits.api.Int"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "mayavi.core.ui.mayavi_scene.MayaviScene",
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "mne.gui._kit2fiff_gui.Kit2FiffFrameHandler",
    "mne.gui._kit2fiff_gui.Kit2FiffModel",
    "mne.gui._kit2fiff_gui.Kit2FiffPanel",
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View",
    "traitsui.menu.NoButtons",
    "tvtk.pyface.scene_editor.SceneEditor"
   ]
  },
  "type": "class"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame.__init__": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "traits.api.HasTraits.__init__",
    "traits.trait_base.ETSConfig.toolkit"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame._headview_default": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "HeadViewController"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame._kit2fiff_panel_default": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "mne.gui._kit2fiff_gui.Kit2FiffPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame._marker_panel_default": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "CombineMarkersPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame._model_default": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "get_config",
    "mne.gui._kit2fiff_gui.Kit2FiffModel",
    "mne.gui._kit2fiff_gui.os",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrame.save_config": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "set_config",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrameHandler": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "traitsui.api.Handler"
   ]
  },
  "type": "class"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffFrameHandler.close": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "Exception",
    "pyface.api.information",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "list",
    "mne.gui._kit2fiff_gui.elp_wildcard",
    "mne.gui._kit2fiff_gui.hsp_wildcard",
    "mne.gui._kit2fiff_gui.kit_con_wildcard",
    "range",
    "traits.api.Array",
    "traits.api.Bool",
    "traits.api.Enum",
    "traits.api.File",
    "traits.api.Float",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traits.api.List",
    "traits.api.Property",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_can_save": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_can_test_stim": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_dev_head_trans": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "fit_matched_points",
    "len",
    "numpy.any",
    "numpy.eye",
    "pyface.api.error",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_elp": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "apply_trans",
    "numpy.empty",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_elp_raw": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "_read_dig_points",
    "len",
    "pyface.api.error",
    "str",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_fid": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "apply_trans",
    "numpy.empty",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_fid_fname": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "mne.gui._kit2fiff_gui.os",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_head_dev_trans": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "scipy.linalg.inv",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_hsp": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "apply_trans",
    "numpy.any",
    "numpy.empty",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_hsp_fname": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "mne.gui._kit2fiff_gui.os",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_hsp_raw": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "Exception",
    "_decimate_points",
    "_read_dig_points",
    "len",
    "pyface.api.error",
    "pyface.api.information",
    "str",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_misc_chs": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "enumerate",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_misc_chs_desc": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.diff",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_misc_data": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "Exception",
    "pyface.api.ProgressDialog",
    "pyface.api.error",
    "str",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_mrk": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "apply_trans",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_polhemus_neuromag_trans": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "apply_trans",
    "get_ras_to_neuromag_trans",
    "numpy.dot",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_raw": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "Exception",
    "RawKIT",
    "pyface.api.error",
    "pyface.api.warning",
    "str",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_sqd_fname": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "mne.gui._kit2fiff_gui.os",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_stim_chs_array": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "TypeError",
    "_default_stim_chs",
    "eval",
    "numpy",
    "traits.api.cached_property",
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_stim_chs_comment": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "len",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel._get_stim_chs_ok": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel.clear_all": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel.get_event_info": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "_find_events",
    "_make_stim_channel",
    "collections.Counter",
    "events"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffModel.get_raw": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "RawKIT",
    "RuntimeError",
    "Transform",
    "ValueError",
    "_make_dig_points",
    "numpy.any"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "mne.gui._kit2fiff_gui.Kit2FiffModel",
    "mne.gui._kit2fiff_gui.tooltips",
    "mne.gui._kit2fiff_gui.use_editor",
    "pyface.api.error",
    "traits.api.Button",
    "traits.api.DelegatesTo",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traits.api.Int",
    "traits.api.Property",
    "traits.api.Str",
    "traitsui.api.EnumEditor",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.TextEditor",
    "traitsui.api.VGroup",
    "traitsui.api.View",
    "traitsui.api.spring"
   ]
  },
  "type": "class"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel.__init__": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "PointObject",
    "getattr",
    "mne.gui._kit2fiff_gui.Kit2FiffPanel",
    "super",
    "threading.Thread"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel.__init__.worker": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "Exception",
    "mne.gui._kit2fiff_gui.os",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._clear_all_fired": {
  "data": {
   "lineno": 591
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._get_queue_len_str": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._plot_raw_fired": {
  "data": {
   "lineno": 601
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._reset_dig_fired": {
  "data": {
   "lineno": 604
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._save_as_fired": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "Exception",
    "mne.gui._kit2fiff_gui.os",
    "pyface.api.FileDialog",
    "pyface.api.OK",
    "pyface.api.YES",
    "pyface.api.confirm",
    "pyface.api.error",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.Kit2FiffPanel._test_stim_fired": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "Exception",
    "events",
    "len",
    "pyface.api.error",
    "pyface.api.information",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.gui._kit2fiff_gui.List": {
  "data": {
   "shadows": "traits.api.List"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.MayaviScene": {
  "data": {
   "shadows": "mayavi.core.ui.mayavi_scene.MayaviScene"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.NoButtons": {
  "data": {
   "shadows": "traitsui.menu.NoButtons"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.ProgressDialog": {
  "data": {
   "shadows": "pyface.api.ProgressDialog"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.SceneEditor": {
  "data": {
   "shadows": "tvtk.pyface.scene_editor.SceneEditor"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.TextEditor": {
  "data": {
   "shadows": "traitsui.api.TextEditor"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.Thread": {
  "data": {
   "shadows": "threading.Thread"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.YES": {
  "data": {
   "shadows": "pyface.api.YES"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.backend_is_wx": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.confirm": {
  "data": {
   "shadows": "pyface.api.confirm"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.elp_wildcard": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.hsp_wildcard": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.information": {
  "data": {
   "shadows": "pyface.api.information"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.inv": {
  "data": {
   "shadows": "scipy.linalg.inv"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.kit_con_wildcard": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.spring": {
  "data": {
   "shadows": "traitsui.api.spring"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.tooltips": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.use_editor": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.gui._kit2fiff_gui.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.gui._kit2fiff_gui.warning": {
  "data": {
   "shadows": "pyface.api.warning"
  },
  "type": "import"
 },
 "mne.gui._marker_gui": {
  "data": {
   "symbols_in_volume": [
    "mne.gui._marker_gui.backend_is_wx",
    "mne.gui._marker_gui.sys",
    "mne.gui._marker_gui.use_editor_h",
    "mne.gui._marker_gui.use_editor_v",
    "range",
    "str",
    "traitsui.api.CheckListEditor",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "module"
 },
 "mne.gui._marker_gui.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.CheckListEditor": {
  "data": {
   "shadows": "traitsui.api.CheckListEditor"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.CombineMarkersFrame": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "mayavi.core.ui.mayavi_scene.MayaviScene",
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "mne.gui._marker_gui.CombineMarkersModel",
    "mne.gui._marker_gui.CombineMarkersPanel",
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View",
    "traitsui.menu.NoButtons",
    "tvtk.pyface.scene_editor.SceneEditor"
   ]
  },
  "type": "class"
 },
 "mne.gui._marker_gui.CombineMarkersFrame._headview_default": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "HeadViewController"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersFrame._panel_default": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "mne.gui._marker_gui.CombineMarkersPanel"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "mne.gui._marker_gui.MarkerPointDest",
    "mne.gui._marker_gui.MarkerPointSource",
    "traits.api.Button",
    "traits.api.File",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traits.api.Property",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._marker_gui.CombineMarkersModel._clear_fired": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._get_distance": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "numpy.any",
    "numpy.sqrt",
    "numpy.sum",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk1_default": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "mne.gui._marker_gui.MarkerPointSource"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk1_file_default": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk2_default": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "mne.gui._marker_gui.MarkerPointSource"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk2_file_default": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersModel._mrk3_default": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "mne.gui._marker_gui.MarkerPointDest"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "mne.gui._marker_gui.CombineMarkersModel",
    "mne.gui._marker_gui.MarkerPointDest",
    "mne.gui._marker_gui.MarkerPointSource",
    "traits.api.Array",
    "traits.api.Float",
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traits.api.Str",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._marker_gui.CombineMarkersPanel.__init__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "PointObject",
    "mne.gui._marker_gui.CombineMarkersPanel",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._mrk1_default": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._mrk2_default": {
  "data": {
   "lineno": 373
  },
  "type": "function"
 },
 "mne.gui._marker_gui.CombineMarkersPanel._mrk3_default": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "mne.gui._marker_gui.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.File": {
  "data": {
   "shadows": "traits.api.File"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.FileDialog": {
  "data": {
   "shadows": "pyface.api.FileDialog"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Float": {
  "data": {
   "shadows": "traits.api.Float"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.List": {
  "data": {
   "shadows": "traits.api.List"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.MarkerPointDest": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "dir",
    "float",
    "mne.gui._marker_gui.MarkerPointSource",
    "mne.gui._marker_gui.MarkerPoints",
    "traits.api.Array",
    "traits.api.Bool",
    "traits.api.Enum",
    "traits.api.Instance",
    "traits.api.Property",
    "traits.api.Str",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._marker_gui.MarkerPointDest._get_dir": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointDest._get_enabled": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointDest._get_name": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "len",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointDest._get_points": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "apply_trans",
    "fit_matched_points",
    "len",
    "numpy.array",
    "numpy.dot",
    "numpy.intersect1d",
    "numpy.setdiff1d",
    "numpy.union1d",
    "numpy.zeros",
    "pyface.api.error",
    "rotation",
    "traits.api.cached_property",
    "translation"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "dir",
    "list",
    "mne.gui._marker_gui.MarkerPoints",
    "mne.gui._marker_gui.mrk_view_basic",
    "mne.gui._marker_gui.mrk_wildcard",
    "range",
    "traits.api.Bool",
    "traits.api.Button",
    "traits.api.File",
    "traits.api.List",
    "traits.api.Property",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._marker_gui.MarkerPointSource._clear_fired": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._edit_fired": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "mne.gui._marker_gui.mrk_view_edit"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._get_dir": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "mne.gui._marker_gui.os",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._get_enabled": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource._get_name": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "mne.gui._marker_gui.os",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPointSource.load": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "Exception",
    "pyface.api.error",
    "read_mrk",
    "str",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPoints": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "float",
    "traits.api.Array",
    "traits.api.Button",
    "traits.api.HasPrivateTraits",
    "traits.api.Property",
    "traitsui.api.Item",
    "traitsui.api.VGroup",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._marker_gui.MarkerPoints._get_can_save": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.any",
    "traits.api.cached_property"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPoints._save_as_fired": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.gui._marker_gui.mrk_out_wildcard",
    "mne.gui._marker_gui.os",
    "mne.gui._marker_gui.out_ext",
    "pyface.api.FileDialog",
    "pyface.api.OK",
    "pyface.api.YES",
    "pyface.api.confirm"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MarkerPoints.save": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "_write_dig_points"
   ]
  },
  "type": "function"
 },
 "mne.gui._marker_gui.MayaviScene": {
  "data": {
   "shadows": "mayavi.core.ui.mayavi_scene.MayaviScene"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.NoButtons": {
  "data": {
   "shadows": "traitsui.menu.NoButtons"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.OK": {
  "data": {
   "shadows": "pyface.api.OK"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Property": {
  "data": {
   "shadows": "traits.api.Property"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.SceneEditor": {
  "data": {
   "shadows": "tvtk.pyface.scene_editor.SceneEditor"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.YES": {
  "data": {
   "shadows": "pyface.api.YES"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.backend_is_wx": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.cached_property": {
  "data": {
   "shadows": "traits.api.cached_property"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.confirm": {
  "data": {
   "shadows": "pyface.api.confirm"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.mrk_out_wildcard": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.mrk_view_basic": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.mrk_view_edit": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.mrk_view_editable": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.mrk_wildcard": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.out_ext": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.gui._marker_gui.use_editor_h": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.gui._marker_gui.use_editor_v": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.gui._viewer": {
  "data": {
   "symbols_in_volume": [
    "traitsui.api.Item",
    "traitsui.api.VGroup"
   ]
  },
  "type": "module"
 },
 "mne.gui._viewer.Array": {
  "data": {
   "shadows": "traits.api.Array"
  },
  "type": "import"
 },
 "mne.gui._viewer.Bool": {
  "data": {
   "shadows": "traits.api.Bool"
  },
  "type": "import"
 },
 "mne.gui._viewer.Button": {
  "data": {
   "shadows": "traits.api.Button"
  },
  "type": "import"
 },
 "mne.gui._viewer.Enum": {
  "data": {
   "shadows": "traits.api.Enum"
  },
  "type": "import"
 },
 "mne.gui._viewer.Float": {
  "data": {
   "shadows": "traits.api.Float"
  },
  "type": "import"
 },
 "mne.gui._viewer.Glyph": {
  "data": {
   "shadows": "mayavi.modules.glyph.Glyph"
  },
  "type": "import"
 },
 "mne.gui._viewer.HGroup": {
  "data": {
   "shadows": "traitsui.api.HGroup"
  },
  "type": "import"
 },
 "mne.gui._viewer.HasPrivateTraits": {
  "data": {
   "shadows": "traits.api.HasPrivateTraits"
  },
  "type": "import"
 },
 "mne.gui._viewer.HasTraits": {
  "data": {
   "shadows": "traits.api.HasTraits"
  },
  "type": "import"
 },
 "mne.gui._viewer.HeadViewController": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "traits.api.Button",
    "traits.api.Enum",
    "traits.api.Float",
    "traits.api.HasTraits",
    "traits.api.Instance",
    "traitsui.api.Item",
    "traitsui.api.VGrid",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._viewer.HeadViewController._init_view": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.HeadViewController.on_set_interaction": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "traits.api.on_trait_change",
    "tvtk.api.tvtk.InteractorStyleTerrain"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.HeadViewController.on_set_view": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "SilenceStdout",
    "ValueError",
    "dict",
    "traits.api.on_trait_change",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.Instance": {
  "data": {
   "shadows": "traits.api.Instance"
  },
  "type": "import"
 },
 "mne.gui._viewer.Int": {
  "data": {
   "shadows": "traits.api.Int"
  },
  "type": "import"
 },
 "mne.gui._viewer.Item": {
  "data": {
   "shadows": "traitsui.api.Item"
  },
  "type": "import"
 },
 "mne.gui._viewer.List": {
  "data": {
   "shadows": "traits.api.List"
  },
  "type": "import"
 },
 "mne.gui._viewer.MlabSceneModel": {
  "data": {
   "shadows": "mayavi.tools.mlab_scene_model.MlabSceneModel"
  },
  "type": "import"
 },
 "mne.gui._viewer.Object": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "float",
    "mayavi.sources.vtk_data_source.VTKDataSource",
    "mayavi.tools.mlab_scene_model.MlabSceneModel",
    "traits.api.Array",
    "traits.api.Bool",
    "traits.api.Float",
    "traits.api.HasPrivateTraits",
    "traits.api.Instance",
    "traits.api.RGBColor",
    "traits.api.Range",
    "traits.api.Str"
   ]
  },
  "type": "class"
 },
 "mne.gui._viewer.Object._update_points": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "apply_trans",
    "hasattr",
    "numpy.any",
    "numpy.dot",
    "pyface.api.error",
    "str",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "mayavi.mlab.text3d",
    "mayavi.modules.glyph.Glyph",
    "mne.gui._viewer.Object",
    "traits.api.Bool",
    "traits.api.Instance",
    "traits.api.Int",
    "traits.api.List",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._viewer.PointObject.__init__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "mne.gui._viewer.PointObject",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._on_hide": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._plot_points": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "_testing_mode",
    "_toggle_mlab_render",
    "hasattr",
    "mayavi.mlab.pipeline.glyph",
    "mayavi.mlab.pipeline.scalar_scatter",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._resolution_changed": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject._show_labels": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "_toggle_mlab_render",
    "enumerate",
    "mayavi.mlab.text3d",
    "numpy.array",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.PointObject.default_traits_view": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "ValueError",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.View"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.RGBColor": {
  "data": {
   "shadows": "traits.api.RGBColor"
  },
  "type": "import"
 },
 "mne.gui._viewer.Range": {
  "data": {
   "shadows": "traits.api.Range"
  },
  "type": "import"
 },
 "mne.gui._viewer.Str": {
  "data": {
   "shadows": "traits.api.Str"
  },
  "type": "import"
 },
 "mne.gui._viewer.Surface": {
  "data": {
   "shadows": "mayavi.modules.surface.Surface"
  },
  "type": "import"
 },
 "mne.gui._viewer.SurfaceObject": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "int",
    "mayavi.modules.surface.Surface",
    "mne.gui._viewer.Object",
    "traits.api.Array",
    "traits.api.Enum",
    "traits.api.Instance",
    "traitsui.api.HGroup",
    "traitsui.api.Item",
    "traitsui.api.View"
   ]
  },
  "type": "class"
 },
 "mne.gui._viewer.SurfaceObject._update_points": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "mne.gui._viewer.Object",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.SurfaceObject.clear": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.SurfaceObject.plot": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "_create_mesh_surf",
    "complete_surface_info",
    "dict",
    "mayavi.mlab.pipeline.surface",
    "numpy.any",
    "traits.api.on_trait_change"
   ]
  },
  "type": "function"
 },
 "mne.gui._viewer.VGrid": {
  "data": {
   "shadows": "traitsui.api.VGrid"
  },
  "type": "import"
 },
 "mne.gui._viewer.VGroup": {
  "data": {
   "shadows": "traitsui.api.VGroup"
  },
  "type": "import"
 },
 "mne.gui._viewer.VTKDataSource": {
  "data": {
   "shadows": "mayavi.sources.vtk_data_source.VTKDataSource"
  },
  "type": "import"
 },
 "mne.gui._viewer.View": {
  "data": {
   "shadows": "traitsui.api.View"
  },
  "type": "import"
 },
 "mne.gui._viewer.error": {
  "data": {
   "shadows": "pyface.api.error"
  },
  "type": "import"
 },
 "mne.gui._viewer.headview_borders": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.gui._viewer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui._viewer.on_trait_change": {
  "data": {
   "shadows": "traits.api.on_trait_change"
  },
  "type": "import"
 },
 "mne.gui._viewer.pipeline": {
  "data": {
   "shadows": "mayavi.mlab.pipeline"
  },
  "type": "import"
 },
 "mne.gui._viewer.text3d": {
  "data": {
   "shadows": "mayavi.mlab.text3d"
  },
  "type": "import"
 },
 "mne.gui._viewer.tvtk": {
  "data": {
   "shadows": "tvtk.api.tvtk"
  },
  "type": "import"
 },
 "mne.gui.combine_kit_markers": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "CombineMarkersFrame",
    "_check_backend",
    "_check_mayavi_version",
    "mne.gui._initialize_gui"
   ]
  },
  "type": "function"
 },
 "mne.gui.coregistration": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "CoregFrame",
    "_check_backend",
    "_check_mayavi_version",
    "_make_view",
    "float",
    "get_config",
    "int",
    "mne.gui._initialize_gui",
    "mne.gui.os"
   ]
  },
  "type": "function"
 },
 "mne.gui.fiducials": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "FiducialsFrame",
    "_check_backend",
    "_check_mayavi_version",
    "mne.gui._initialize_gui"
   ]
  },
  "type": "function"
 },
 "mne.gui.kit2fiff": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "Kit2FiffFrame",
    "_check_backend",
    "_check_mayavi_version",
    "mne.gui._initialize_gui"
   ]
  },
  "type": "function"
 },
 "mne.gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests": {
  "data": {},
  "type": "module"
 },
 "mne.gui.tests.test_coreg_gui": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "mne.datasets.testing.data_path",
    "mne.gui.tests.test_coreg_gui.data_path",
    "mne.gui.tests.test_coreg_gui.warnings",
    "mne.io.kit.tests.data_dir",
    "mne.utils.run_tests_if_main",
    "os.path.join",
    "traits.etsconfig.api.ETSConfig.toolkit"
   ]
  },
  "type": "module"
 },
 "mne.gui.tests.test_coreg_gui.CoregModel": {
  "data": {
   "shadows": "mne.gui._coreg_gui.CoregModel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.ETSConfig": {
  "data": {
   "shadows": "traits.etsconfig.api.ETSConfig"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui._check_ci": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "mne.gui.tests.test_coreg_gui.os",
    "mne.gui.tests.test_coreg_gui.sys",
    "unittest.SkipTest"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_coreg_gui.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.data_path": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.fname_trans": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.kit_data_dir": {
  "data": {
   "shadows": "mne.io.kit.tests.data_dir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.kit_raw_path": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.raw_path": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.string_types": {
  "data": {
   "shadows": "mne.externals.six.string_types"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.subjects_dir": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.gui.tests.test_coreg_gui.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.test_coreg_gui": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.gui.tests.test_coreg_gui._check_ci",
    "mne.gui.tests.test_coreg_gui.mne",
    "mne.gui.tests.test_coreg_gui.os",
    "mne.gui.tests.test_coreg_gui.raw_path",
    "mne.gui.tests.test_coreg_gui.subjects_dir",
    "mne.gui.tests.test_coreg_gui.warnings",
    "mne.utils._TempDir",
    "mne.utils.requires_mayavi",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_coreg_gui.test_coreg_model": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.string_types",
    "mne.gui._coreg_gui.CoregModel",
    "mne.gui.tests.test_coreg_gui.fname_trans",
    "mne.gui.tests.test_coreg_gui.mne",
    "mne.gui.tests.test_coreg_gui.os",
    "mne.gui.tests.test_coreg_gui.raw_path",
    "mne.gui.tests.test_coreg_gui.re",
    "mne.gui.tests.test_coreg_gui.subjects_dir",
    "mne.utils._TempDir",
    "mne.utils.requires_mayavi",
    "nose.tools.assert_almost_equal",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_coreg_gui.test_coreg_model_with_fsaverage": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._coreg_gui.CoregModel",
    "mne.gui.tests.test_coreg_gui.kit_raw_path",
    "mne.gui.tests.test_coreg_gui.mne",
    "mne.gui.tests.test_coreg_gui.raw_path",
    "mne.gui.tests.test_coreg_gui.subjects_dir",
    "mne.gui.tests.test_coreg_gui.warnings",
    "mne.utils._TempDir",
    "mne.utils.requires_mayavi",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.mean",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_coreg_gui.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.gui.tests.test_coreg_gui.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.gui.tests.test_fiducials_gui.os",
    "mne.gui.tests.test_fiducials_gui.sample_path",
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.gui.tests.test_fiducials_gui.MRIHeadWithFiducialsModel": {
  "data": {
   "shadows": "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_fiducials_gui.sample_path": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.gui.tests.test_fiducials_gui.subjects_dir": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.gui.tests.test_fiducials_gui.test_mri_model": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._fiducials_gui.MRIHeadWithFiducialsModel",
    "mne.gui.tests.test_fiducials_gui.os",
    "mne.gui.tests.test_fiducials_gui.subjects_dir",
    "mne.utils._TempDir",
    "mne.utils.requires_mayavi",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_fiducials_gui.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.gui.tests.test_file_traits.data_path",
    "mne.gui.tests.test_file_traits.os",
    "mne.gui.tests.test_file_traits.subjects_dir",
    "mne.io.tests.data_dir",
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.gui.tests.test_file_traits.DigSource": {
  "data": {
   "shadows": "mne.gui._file_traits.DigSource"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.FiducialsSource": {
  "data": {
   "shadows": "mne.gui._file_traits.FiducialsSource"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.MRISubjectSource": {
  "data": {
   "shadows": "mne.gui._file_traits.MRISubjectSource"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.SurfaceSource": {
  "data": {
   "shadows": "mne.gui._file_traits.SurfaceSource"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.bem_path": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.data_path": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.fid_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.fiff_data_dir": {
  "data": {
   "shadows": "mne.io.tests.data_dir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.inst_path": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.read_dig_montage": {
  "data": {
   "shadows": "mne.channels.read_dig_montage"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.requires_freesurfer": {
  "data": {
   "shadows": "mne.utils.requires_freesurfer"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_file_traits.subjects_dir": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.gui.tests.test_file_traits.test_bem_source": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._file_traits.SurfaceSource",
    "mne.gui.tests.test_file_traits.bem_path",
    "mne.utils.requires_mayavi",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.test_fiducials_source": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._file_traits.FiducialsSource",
    "mne.gui.tests.test_file_traits.fid_path",
    "mne.utils.requires_mayavi",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.test_inst_source": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "mne.channels.read_dig_montage",
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._file_traits.DigSource",
    "mne.gui.tests.test_file_traits.inst_path",
    "mne.gui.tests.test_file_traits.os",
    "mne.utils._TempDir",
    "mne.utils.requires_mayavi",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.test_subject_source": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._file_traits.MRISubjectSource",
    "mne.gui.tests.test_file_traits.subjects_dir",
    "mne.utils.requires_mayavi",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.test_subject_source_with_fsaverage": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.datasets.testing.requires_testing_data",
    "mne.gui._file_traits.MRISubjectSource",
    "mne.utils._TempDir",
    "mne.utils.requires_freesurfer",
    "mne.utils.requires_mayavi",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_file_traits.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui": {
  "data": {
   "symbols_in_volume": [
    "mne.gui.tests.test_kit2fiff_gui.os",
    "mne.gui.tests.test_kit2fiff_gui.warnings",
    "mne.io.kit.tests.data_dir",
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.gui.tests.test_kit2fiff_gui.Kit2FiffModel": {
  "data": {
   "shadows": "mne.gui._kit2fiff_gui.Kit2FiffModel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui._check_ci": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mne.gui.tests.test_kit2fiff_gui.os",
    "mne.gui.tests.test_kit2fiff_gui.sys",
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_kit2fiff_gui.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.fid_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.fif_path": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.hsp_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.kit_data_dir": {
  "data": {
   "shadows": "mne.io.kit.tests.data_dir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.mrk_post_path": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.mrk_pre_path": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.sqd_path": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.gui.tests.test_kit2fiff_gui.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.gui.tests.test_kit2fiff_gui.test_kit2fiff_gui": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "mne.gui.tests.test_kit2fiff_gui._check_ci",
    "mne.gui.tests.test_kit2fiff_gui.mne",
    "mne.gui.tests.test_kit2fiff_gui.mrk_pre_path",
    "mne.gui.tests.test_kit2fiff_gui.os",
    "mne.gui.tests.test_kit2fiff_gui.warnings",
    "mne.utils._TempDir",
    "mne.utils.requires_mayavi",
    "nose.tools.assert_equal",
    "nose.tools.assert_false"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_kit2fiff_gui.test_kit2fiff_model": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "events",
    "list",
    "mne.gui._kit2fiff_gui.Kit2FiffModel",
    "mne.gui.tests.test_kit2fiff_gui.fid_path",
    "mne.gui.tests.test_kit2fiff_gui.fif_path",
    "mne.gui.tests.test_kit2fiff_gui.hsp_path",
    "mne.gui.tests.test_kit2fiff_gui.mne",
    "mne.gui.tests.test_kit2fiff_gui.mrk_post_path",
    "mne.gui.tests.test_kit2fiff_gui.mrk_pre_path",
    "mne.gui.tests.test_kit2fiff_gui.os",
    "mne.gui.tests.test_kit2fiff_gui.sqd_path",
    "mne.io.read_raw_fif",
    "mne.utils._TempDir",
    "mne.utils.requires_mayavi",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_kit2fiff_gui.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui": {
  "data": {
   "symbols_in_volume": [
    "mne.gui.tests.test_marker_gui.os",
    "mne.gui.tests.test_marker_gui.warnings",
    "mne.io.kit.tests.data_dir",
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.gui.tests.test_marker_gui.CombineMarkersModel": {
  "data": {
   "shadows": "mne.gui._marker_gui.CombineMarkersModel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.CombineMarkersPanel": {
  "data": {
   "shadows": "mne.gui._marker_gui.CombineMarkersPanel"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui._check_ci": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mne.gui.tests.test_marker_gui.os",
    "mne.gui.tests.test_marker_gui.sys",
    "unittest.SkipTest"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_marker_gui.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.kit_data_dir": {
  "data": {
   "shadows": "mne.io.kit.tests.data_dir"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.mrk_avg_path": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.gui.tests.test_marker_gui.mrk_post_path": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.gui.tests.test_marker_gui.mrk_pre_path": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.gui.tests.test_marker_gui.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.read_mrk": {
  "data": {
   "shadows": "mne.io.kit.read_mrk"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.gui.tests.test_marker_gui.test_combine_markers_model": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "mne.gui._marker_gui.CombineMarkersModel",
    "mne.gui._marker_gui.CombineMarkersPanel",
    "mne.gui.tests.test_marker_gui._check_ci",
    "mne.gui.tests.test_marker_gui.mrk_avg_path",
    "mne.gui.tests.test_marker_gui.mrk_post_path",
    "mne.gui.tests.test_marker_gui.mrk_pre_path",
    "mne.gui.tests.test_marker_gui.os",
    "mne.gui.tests.test_marker_gui.warnings",
    "mne.io.kit.read_mrk",
    "mne.utils._TempDir",
    "mne.utils.requires_mayavi",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.any",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.gui.tests.test_marker_gui.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.inverse_sparse": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse._gamma_map": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse._gamma_map._gamma_map_opt": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "denom_fun",
    "float",
    "len",
    "numpy.abs",
    "numpy.arange",
    "numpy.dot",
    "numpy.eye",
    "numpy.finfo",
    "numpy.float",
    "numpy.inf",
    "numpy.isnan",
    "numpy.maximum",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "scipy.linalg.norm",
    "scipy.linalg.svd",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse._gamma_map._gamma_map_opt.denom_fun": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "mne.inverse_sparse._gamma_map.gamma_map": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "Exception",
    "_check_loose_forward",
    "_check_reference",
    "_compute_residual",
    "_make_dipoles_sparse",
    "_make_sparse_stc",
    "_prepare_gain",
    "_reapply_source_weighting",
    "convert_forward_solution",
    "is_fixed_orient",
    "len",
    "mne.inverse_sparse._gamma_map._gamma_map_opt",
    "numpy.dot",
    "numpy.unique",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse._gamma_map.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.inverse_sparse._gamma_map.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse._gamma_map.range": {
  "data": {
   "shadows": "xrange"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_debiasing": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.mxne_debiasing.compute_bias": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "math.sqrt",
    "mne.inverse_sparse.mxne_debiasing.power_iteration_kron",
    "numpy.dot",
    "numpy.inf",
    "numpy.maximum",
    "numpy.mean",
    "numpy.ones",
    "numpy.sum",
    "numpy.tile",
    "range",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_debiasing.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_debiasing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_debiasing.power_iteration_kron": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "abs",
    "check_random_state",
    "numpy.dot",
    "numpy.inf",
    "range",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_debiasing.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_inverse": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.mxne_inverse._compute_residual": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "deactivate_proj",
    "len",
    "list",
    "numpy.dot",
    "pick_channels_evoked"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._make_dipoles_sparse": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "Dipole",
    "enumerate",
    "is_fixed_orient",
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._make_sparse_stc": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "SourceEstimate",
    "VolSourceEstimate",
    "combine_xyz",
    "is_fixed_orient",
    "len",
    "numpy.unique",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._prepare_gain": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "mne.inverse_sparse.mxne_inverse._prepare_gain_column",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._prepare_gain_column": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "_prepare_forward",
    "compute_orient_prior",
    "is_fixed_orient",
    "mne.inverse_sparse.mxne_inverse._prepare_weights",
    "numpy.dot",
    "numpy.min",
    "numpy.ones",
    "numpy.repeat",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._prepare_weights": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "is_fixed_orient",
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.max",
    "numpy.ravel",
    "numpy.sum",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._reapply_source_weighting": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse._window_evoked": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.ones",
    "numpy.r_",
    "scipy.signal.hann"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "Dipole",
    "SourceEstimate",
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.all",
    "numpy.array",
    "numpy.concatenate",
    "numpy.where",
    "numpy.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse.mixed_norm": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "_check_loose_forward",
    "_check_reference",
    "all",
    "bool",
    "convert_forward_solution",
    "int",
    "is_fixed_orient",
    "isinstance",
    "iterative_mixed_norm_solver",
    "len",
    "list",
    "mixed_norm_solver",
    "mne.inverse_sparse.mxne_inverse._compute_residual",
    "mne.inverse_sparse.mxne_inverse._make_dipoles_sparse",
    "mne.inverse_sparse.mxne_inverse._make_sparse_stc",
    "mne.inverse_sparse.mxne_inverse._prepare_gain",
    "mne.inverse_sparse.mxne_inverse._reapply_source_weighting",
    "norm_l2inf",
    "numpy.bool",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.zeros",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_inverse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_inverse.range": {
  "data": {
   "shadows": "xrange"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_inverse.signal": {
  "data": {
   "shadows": "scipy.signal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_inverse.tf_mixed_norm": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "Exception",
    "_check_loose_forward",
    "_check_reference",
    "convert_forward_solution",
    "is_fixed_orient",
    "len",
    "mne.inverse_sparse.mxne_inverse._compute_residual",
    "mne.inverse_sparse.mxne_inverse._make_dipoles_sparse",
    "mne.inverse_sparse.mxne_inverse._make_sparse_stc",
    "mne.inverse_sparse.mxne_inverse._prepare_gain",
    "mne.inverse_sparse.mxne_inverse._reapply_source_weighting",
    "mne.inverse_sparse.mxne_inverse._window_evoked",
    "norm_l2inf",
    "numpy.bool",
    "numpy.dot",
    "numpy.zeros",
    "tf_mixed_norm_solver"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.mxne_optim.MultiTaskLasso": {
  "data": {
   "shadows": "sklearn.linear_model.coordinate_descent.MultiTaskLasso"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim._Phi": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.inverse_sparse.mxne_optim._Phi.__call__": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "stft"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._Phi.__init__": {
  "data": {
   "lineno": 721
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._PhiT": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.inverse_sparse.mxne_optim._PhiT.__call__": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "istft"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._PhiT.__init__": {
  "data": {
   "lineno": 734
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._mixed_norm_solver_bcd": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "max",
    "mne.inverse_sparse.mxne_optim.dgap_l21",
    "numpy.any",
    "numpy.asfortranarray",
    "numpy.bool",
    "numpy.dot",
    "numpy.inf",
    "numpy.maximum",
    "numpy.sum",
    "numpy.zeros",
    "scipy.linalg.norm",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._mixed_norm_solver_cd": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "len",
    "mne.inverse_sparse.mxne_optim.dgap_l21",
    "numpy.any",
    "sklearn.linear_model.coordinate_descent.MultiTaskLasso",
    "sum_squared"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._mixed_norm_solver_prox": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "math.sqrt",
    "max",
    "mne.inverse_sparse.mxne_optim.dgap_l21",
    "mne.inverse_sparse.mxne_optim.prox_l21",
    "numpy.bool",
    "numpy.dot",
    "numpy.inf",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._tf_mixed_norm_solver_bcd_": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "dict",
    "float",
    "mne.inverse_sparse.mxne_optim.dgap_l21l1",
    "numpy.Inf",
    "numpy.abs",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.asfortranarray",
    "numpy.dot",
    "numpy.hsplit",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.vstack",
    "numpy.where",
    "phi",
    "phiT",
    "scipy.linalg.norm",
    "stft_norm2",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim._tf_mixed_norm_solver_bcd_active_set": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "dict.fromkeys",
    "len",
    "mne.inverse_sparse.mxne_optim._tf_mixed_norm_solver_bcd_",
    "mne.inverse_sparse.mxne_optim.dgap_l21l1",
    "numpy.any",
    "numpy.arange",
    "numpy.bool",
    "numpy.complex",
    "numpy.inf",
    "numpy.ones",
    "numpy.sum",
    "numpy.vsplit",
    "numpy.vstack",
    "numpy.where",
    "numpy.zeros",
    "phi",
    "phiT",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim.dgap_l21": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "min",
    "mne.inverse_sparse.mxne_optim.norm_l21",
    "mne.inverse_sparse.mxne_optim.norm_l2inf",
    "numpy.dot",
    "numpy.sum",
    "sum_squared"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.dgap_l21l1": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "max",
    "min",
    "mne.inverse_sparse.mxne_optim.norm_l1_tf",
    "mne.inverse_sparse.mxne_optim.norm_l21_tf",
    "mne.inverse_sparse.mxne_optim.prox_l1",
    "numpy.amax",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.sum",
    "phi",
    "phiT",
    "stft_norm2",
    "sum_squared"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.groups_norm2": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.power",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "compute_bias",
    "g",
    "gprime",
    "list",
    "mne.inverse_sparse.mxne_optim.mixed_norm_solver",
    "numpy.abs",
    "numpy.all",
    "numpy.any",
    "numpy.bool",
    "numpy.dot",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.sum",
    "numpy.zeros",
    "numpy.zeros_like",
    "print",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver.g": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "mne.inverse_sparse.mxne_optim.groups_norm2",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver.gprime": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "g",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim.mixed_norm_solver": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "ImportError",
    "compute_bias",
    "float",
    "l21_solver",
    "list",
    "max",
    "mne.inverse_sparse.mxne_optim._mixed_norm_solver_bcd",
    "mne.inverse_sparse.mxne_optim._mixed_norm_solver_cd",
    "mne.inverse_sparse.mxne_optim._mixed_norm_solver_prox",
    "mne.inverse_sparse.mxne_optim.dgap_l21",
    "mne.inverse_sparse.mxne_optim.groups_norm2",
    "mne.inverse_sparse.mxne_optim.norm_l2inf",
    "numpy.any",
    "numpy.arange",
    "numpy.argsort",
    "numpy.asfortranarray",
    "numpy.bool",
    "numpy.dot",
    "numpy.empty",
    "numpy.inf",
    "numpy.newaxis",
    "numpy.searchsorted",
    "numpy.sum",
    "numpy.where",
    "numpy.zeros",
    "scipy.linalg.norm",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_l1_tf": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_l21": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mne.inverse_sparse.mxne_optim.groups_norm2",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_l21_tf": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "numpy.sqrt",
    "stft_norm2"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.norm_l2inf": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "math.sqrt",
    "mne.inverse_sparse.mxne_optim.groups_norm2",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim.prox_l1": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "len",
    "numpy.any",
    "numpy.maximum",
    "numpy.sqrt",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.prox_l21": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "len",
    "numpy.bool",
    "numpy.maximum",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.tile",
    "numpy.zeros",
    "numpy.zeros_like",
    "stft_norm2"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.range": {
  "data": {
   "shadows": "xrange"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim.safe_max_abs": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.safe_max_abs_diff": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.max",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.inverse_sparse.mxne_optim.tf_lipschitz_constant": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "abs",
    "numpy.abs",
    "numpy.dot",
    "numpy.float",
    "numpy.max",
    "numpy.ones",
    "numpy.real",
    "phi",
    "phiT"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "compute_bias",
    "float",
    "int",
    "math.ceil",
    "mne.inverse_sparse.mxne_optim._Phi",
    "mne.inverse_sparse.mxne_optim._PhiT",
    "mne.inverse_sparse.mxne_optim._tf_mixed_norm_solver_bcd_active_set",
    "numpy.any",
    "numpy.dot",
    "numpy.empty",
    "numpy.newaxis",
    "numpy.sum",
    "phi",
    "phiT",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_gamma_map": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.inverse_sparse.tests.test_gamma_map.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_gamma_map.Dipole": {
  "data": {
   "shadows": "mne.dipole.Dipole"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map._check_stc": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "list",
    "nose.tools.assert_true",
    "numpy.argsort",
    "numpy.concatenate",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_gamma_map._check_stcs": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_gamma_map.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.data_path": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.fname_cov": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.fname_evoked": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.fname_fwd": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.gamma_map": {
  "data": {
   "shadows": "mne.inverse_sparse.gamma_map"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.make_stc_from_dipoles": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.regularize": {
  "data": {
   "shadows": "mne.cov.regularize"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_gamma_map.subjects_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_gamma_map.test_gamma_map": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "isinstance",
    "mne.convert_forward_solution",
    "mne.cov.regularize",
    "mne.datasets.testing.requires_testing_data",
    "mne.dipole.Dipole",
    "mne.inverse_sparse.gamma_map",
    "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles",
    "mne.inverse_sparse.tests.test_gamma_map._check_stc",
    "mne.inverse_sparse.tests.test_gamma_map._check_stcs",
    "mne.inverse_sparse.tests.test_gamma_map.fname_cov",
    "mne.inverse_sparse.tests.test_gamma_map.fname_evoked",
    "mne.inverse_sparse.tests.test_gamma_map.fname_fwd",
    "mne.inverse_sparse.tests.test_gamma_map.pytest",
    "mne.pick_types_forward",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.read_forward_solution",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_gamma_map.test_gamma_map_vol_sphere": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "mne.cov.regularize",
    "mne.datasets.testing.requires_testing_data",
    "mne.inverse_sparse.gamma_map",
    "mne.inverse_sparse.tests.test_gamma_map.fname_cov",
    "mne.inverse_sparse.tests.test_gamma_map.fname_evoked",
    "mne.inverse_sparse.tests.test_gamma_map.mne",
    "mne.inverse_sparse.tests.test_gamma_map.pytest",
    "mne.read_cov",
    "mne.read_evokeds",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.argmax",
    "numpy.dot",
    "numpy.max",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_gamma_map.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing": {
  "data": {},
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing.compute_bias": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_debiasing.compute_bias"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_debiasing.test_compute_debiasing": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "mne.inverse_sparse.mxne_debiasing.compute_bias",
    "numpy.arange",
    "numpy.dot",
    "numpy.float",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.inverse_sparse.tests.test_mxne_inverse.data_path",
    "mne.inverse_sparse.tests.test_mxne_inverse.label",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.Dipole": {
  "data": {
   "shadows": "mne.dipole.Dipole"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.VolSourceEstimate": {
  "data": {
   "shadows": "mne.source_estimate.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse._check_stcs": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.apply_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.data_path": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.fname_cov": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.fname_data": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.fname_fwd": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.fname_label": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.label": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.make_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.make_inverse_operator"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.make_stc_from_dipoles": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.mixed_norm": {
  "data": {
   "shadows": "mne.inverse_sparse.mixed_norm"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.read_label": {
  "data": {
   "shadows": "mne.label.read_label"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.test_mxne_inverse": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "isinstance",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.dipole.Dipole",
    "mne.inverse_sparse.mixed_norm",
    "mne.inverse_sparse.mxne_inverse.make_stc_from_dipoles",
    "mne.inverse_sparse.tests.test_mxne_inverse._check_stcs",
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_cov",
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_data",
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_fwd",
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_label",
    "mne.inverse_sparse.tests.test_mxne_inverse.label",
    "mne.inverse_sparse.tests.test_mxne_inverse.pytest",
    "mne.inverse_sparse.tf_mixed_norm",
    "mne.label.read_label",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.make_inverse_operator",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.read_forward_solution",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.test_mxne_vol_sphere": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "mne.datasets.testing.requires_testing_data",
    "mne.inverse_sparse.mixed_norm",
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_cov",
    "mne.inverse_sparse.tests.test_mxne_inverse.fname_data",
    "mne.inverse_sparse.tests.test_mxne_inverse.mne",
    "mne.inverse_sparse.tests.test_mxne_inverse.pytest",
    "mne.inverse_sparse.tf_mixed_norm",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.source_estimate.VolSourceEstimate",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.argmax",
    "numpy.dot",
    "numpy.max",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_inverse.tf_mixed_norm": {
  "data": {
   "shadows": "mne.inverse_sparse.tf_mixed_norm"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim": {
  "data": {
   "symbols_in_volume": [
    "mne.inverse_sparse.tests.test_mxne_optim.warnings"
   ]
  },
  "type": "module"
 },
 "mne.inverse_sparse.tests.test_mxne_optim._generate_tf_data": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.linspace",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.std",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.iterative_mixed_norm_solver": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.mixed_norm_solver": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.mixed_norm_solver"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_iterative_reweighted_mxne": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "mne.inverse_sparse.mxne_optim.iterative_mixed_norm_solver",
    "mne.inverse_sparse.mxne_optim.mixed_norm_solver",
    "mne.inverse_sparse.tests.test_mxne_optim.warnings",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.std",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_l21_mxne": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mne.inverse_sparse.mxne_optim.mixed_norm_solver",
    "mne.inverse_sparse.tests.test_mxne_optim.warnings",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.std",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_array_less",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_tf_mxne": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver",
    "mne.inverse_sparse.tests.test_mxne_optim._generate_tf_data",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_array_less",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.test_tf_mxne_vs_mxne": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "mne.inverse_sparse.mxne_optim.mixed_norm_solver",
    "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver",
    "mne.inverse_sparse.tests.test_mxne_optim._generate_tf_data",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.tf_mixed_norm_solver": {
  "data": {
   "shadows": "mne.inverse_sparse.mxne_optim.tf_mixed_norm_solver"
  },
  "type": "import"
 },
 "mne.inverse_sparse.tests.test_mxne_optim.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io": {
  "data": {},
  "type": "module"
 },
 "mne.io.RawFIF": {
  "data": {
   "shadows": "Raw"
  },
  "type": "import"
 },
 "mne.io.array": {
  "data": {},
  "type": "module"
 },
 "mne.io.array.array": {
  "data": {},
  "type": "module"
 },
 "mne.io.array.array.RawArray": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "mne.io.array.array.RawArray.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "float",
    "int",
    "isinstance",
    "len",
    "mne.io.array.array.RawArray",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.complex128",
    "numpy.float64",
    "numpy.iscomplex",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.array.array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.array.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.array.tests.test_array": {
  "data": {
   "symbols_in_volume": [
    "mne.io.array.tests.test_array.base_dir",
    "mne.io.array.tests.test_array.matplotlib",
    "mne.io.array.tests.test_array.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.array.tests.test_array.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.RawArray": {
  "data": {
   "shadows": "mne.io.array.RawArray"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array._kind_dict": {
  "data": {
   "shadows": "mne.io.meas_info._kind_dict"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.base_dir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.array.tests.test_array.channels": {
  "data": {
   "shadows": "mne.channels"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.create_info": {
  "data": {
   "shadows": "mne.io.meas_info.create_info"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.fif_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.array.tests.test_array.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.array.tests.test_array.test_array_raw": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "dict",
    "events",
    "len",
    "list",
    "matplotlib.pyplot.close",
    "mne.Epochs",
    "mne.channels.DigMontage",
    "mne.find_events",
    "mne.io.array.RawArray",
    "mne.io.array.tests.test_array.fif_fname",
    "mne.io.array.tests.test_array.pytest",
    "mne.io.meas_info._kind_dict",
    "mne.io.meas_info.create_info",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "mne.utils.requires_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.inf",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "numpy.random.randint",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "range",
    "repr",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.array.tests.test_array.test_long_names": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mne.io.array.RawArray",
    "mne.io.meas_info.create_info",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.array.tests.test_array.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.artemis123": {
  "data": {},
  "type": "module"
 },
 "mne.io.artemis123.artemis123": {
  "data": {},
  "type": "module"
 },
 "mne.io.artemis123.artemis123.RawArtemis123": {
  "data": {
   "lineno": 296
  },
  "type": "class"
 },
 "mne.io.artemis123.artemis123.RawArtemis123.__init__": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "RuntimeError",
    "Transform",
    "_fit_coil_order_dev_head_trans",
    "_fit_device_hpi_positions",
    "_make_dig_points",
    "apply_trans",
    "dict",
    "enumerate",
    "get_ras_to_neuromag_trans",
    "len",
    "mne.io.artemis123.artemis123.RawArtemis123",
    "mne.io.artemis123.artemis123._get_artemis123_info",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "os.path.exists",
    "os.path.splitext",
    "scipy.spatial.distance.cdist",
    "super",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.artemis123.RawArtemis123._read_segment_file": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "_read_segments_file"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.artemis123._get_artemis123_info": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ValueError",
    "_empty_info",
    "_load_mne_locs",
    "_read_pos",
    "dict",
    "enumerate",
    "float",
    "int",
    "len",
    "list",
    "mne.io.artemis123.artemis123.calendar",
    "mne.io.artemis123.artemis123.datetime",
    "numpy.zeros",
    "open",
    "os.path.basename",
    "os.path.splitext",
    "range",
    "set",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.artemis123.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.artemis123.artemis123.read_raw_artemis123": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "mne.io.artemis123.artemis123.RawArtemis123"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.artemis123.tests.test_artemis123": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.artemis123.tests.test_artemis123.artemis123_dir",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.artemis123.tests.test_artemis123._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123._angle_between_quats": {
  "data": {
   "shadows": "mne.transforms._angle_between_quats"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123._assert_trans": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mne.transforms._angle_between_quats",
    "mne.transforms.rot_to_quat",
    "nose.tools.assert_true",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.tests.test_artemis123._generate_mne_locs_file": {
  "data": {
   "shadows": "mne.io.artemis123.utils._generate_mne_locs_file"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123._load_mne_locs": {
  "data": {
   "shadows": "mne.io.artemis123.utils._load_mne_locs"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.artemis123_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.io.artemis123.tests.test_artemis123.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.dig_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.artemis123.tests.test_artemis123.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.read_raw_artemis123": {
  "data": {
   "shadows": "mne.io.read_raw_artemis123"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.rot_to_quat": {
  "data": {
   "shadows": "mne.transforms.rot_to_quat"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.short_HPI_dip_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.io.artemis123.tests.test_artemis123.short_hpi_1kz_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.artemis123.tests.test_artemis123.test_data": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.artemis123.tests.test_artemis123._assert_trans",
    "mne.io.artemis123.tests.test_artemis123.dig_fname",
    "mne.io.artemis123.tests.test_artemis123.short_HPI_dip_fname",
    "mne.io.artemis123.tests.test_artemis123.short_hpi_1kz_fname",
    "mne.io.artemis123.tests.test_artemis123.warnings",
    "mne.io.read_raw_artemis123",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.tests.test_artemis123.test_utils": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mne.io.artemis123.utils._generate_mne_locs_file",
    "mne.io.artemis123.utils._load_mne_locs",
    "mne.utils._TempDir",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.tests.test_artemis123.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.artemis123.tests.test_artemis123.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.artemis123.utils": {
  "data": {},
  "type": "module"
 },
 "mne.io.artemis123.utils._compute_mne_loc": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.linalg.norm",
    "numpy.zeros",
    "rotation3d_align_z_axis"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.utils._generate_mne_locs_file": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mne.io.artemis123.utils._compute_mne_loc",
    "mne.io.artemis123.utils._load_tristan_coil_locs",
    "open",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.utils._load_mne_locs": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "IOError",
    "dict",
    "numpy.array",
    "numpy.float",
    "open",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.utils._load_tristan_coil_locs": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "numpy.float",
    "numpy.zeros",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.utils._read_pos": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "_make_dig_points",
    "apply_trans",
    "float",
    "get_ras_to_neuromag_trans",
    "len",
    "list",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.artemis123.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.artemis123.utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.base": {
  "data": {},
  "type": "module"
 },
 "mne.io.base.BaseRaw": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "mne.io.base.TimeMixin",
    "mne.io.base.ToDataFrameMixin"
   ]
  },
  "type": "class"
 },
 "mne.io.base.BaseRaw.__del__": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "OSError",
    "hasattr",
    "mne.io.base.os"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.__enter__": {
  "data": {
   "lineno": 738
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.__exit__": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.__getitem__": {
  "data": {
   "lineno": 799
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.__init__": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.complex128",
    "numpy.empty",
    "numpy.float64",
    "numpy.ndarray",
    "numpy.where",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.__len__": {
  "data": {
   "lineno": 1888
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.__repr__": {
  "data": {
   "lineno": 2055,
   "symbols_in_volume": [
    "len",
    "os.path.basename",
    "sizeof_fmt",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.__setitem__": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "_check_preload"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw._check_bad_segment": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "_sync_onset",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw._dtype": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw._first_time": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "float",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw._get_buffer_size": {
  "data": {
   "lineno": 2103,
   "symbols_in_volume": [
    "int",
    "numpy.ceil"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw._parse_get_set_params": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.integer",
    "range",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw._preload_data": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw._raw_lengths": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw._read_segment": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "min",
    "numpy.all",
    "numpy.array",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.diff",
    "numpy.dot",
    "numpy.greater_equal",
    "numpy.less",
    "numpy.logical_and",
    "numpy.memmap",
    "numpy.min",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.nonzero",
    "numpy.zeros",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw._read_segment_file": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw._update_times": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "float",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.add_events": {
  "data": {
   "lineno": 2065,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_get_stim_channel",
    "all",
    "events",
    "events.astype",
    "events.ndim",
    "events.shape",
    "int",
    "len",
    "numpy.any",
    "numpy.asarray",
    "pick_channels"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.annotations": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "numpy.delete",
    "numpy.isscalar",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.append": {
  "data": {
   "lineno": 1943,
   "symbols_in_volume": [
    "Annotations",
    "RuntimeError",
    "_combine_annotations",
    "_sync_onset",
    "all",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mne.io.base._check_raw_compatibility",
    "numpy.cumsum",
    "numpy.empty",
    "numpy.memmap",
    "numpy.r_",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.apply_function": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "ValueError",
    "_check_preload",
    "_pick_data_channels",
    "callable",
    "enumerate",
    "fun",
    "mne.io.base._check_fun",
    "p_fun",
    "parallel",
    "parallel_func"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.apply_gradient_compensation": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "len",
    "make_compensator",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.dot",
    "set_current_comp",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.apply_hilbert": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "next_fast_len",
    "numpy.complex64",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.ch_names": {
  "data": {
   "lineno": 1873,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.close": {
  "data": {
   "lineno": 2043
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.copy": {
  "data": {
   "lineno": 2051,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.crop": {
  "data": {
   "lineno": 1558,
   "symbols_in_volume": [
    "ValueError",
    "_time_mask",
    "enumerate",
    "mne.io.base.BaseRaw",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.greater_equal",
    "numpy.less",
    "numpy.logical_and",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.estimate_rank": {
  "data": {
   "lineno": 1795,
   "symbols_in_volume": [
    "_estimate_rank_meeg_signals",
    "_pick_data_channels",
    "len",
    "max",
    "min",
    "pick_info",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.filenames": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "property",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.filter": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_annotations_starts_stops",
    "_check_preload",
    "_filt_check_picks",
    "_filt_update_info",
    "any",
    "filter_data",
    "len",
    "numpy.concatenate",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.first_samp": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.get_data": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "ValueError",
    "_annotations_starts_stops",
    "bool",
    "len",
    "min",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.nan",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.last_samp": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "property",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.load_bad_channels": {
  "data": {
   "lineno": 1906,
   "symbols_in_volume": [
    "ValueError",
    "frozenset",
    "len",
    "open",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.load_data": {
  "data": {
   "lineno": 592
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.n_times": {
  "data": {
   "lineno": 1883,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.notch_filter": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "RuntimeError",
    "_check_preload",
    "_pick_data_or_ica",
    "float",
    "len",
    "notch_filter"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.plot": {
  "data": {
   "lineno": 1751,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "events",
    "plot_raw"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.plot_psd": {
  "data": {
   "lineno": 1765,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "numpy.inf",
    "plot_raw_psd"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.plot_psd_topo": {
  "data": {
   "lineno": 1781,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "plot_raw_psd_topo"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.resample": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": [
    "Exception",
    "_check_preload",
    "_resample_stim_channels",
    "events",
    "events.copy",
    "find_events",
    "float",
    "int",
    "len",
    "list",
    "min",
    "numpy.asanyarray",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.minimum",
    "numpy.round",
    "pick_types",
    "range",
    "resample",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.save": {
  "data": {
   "lineno": 1619,
   "symbols_in_volume": [
    "ValueError",
    "_check_fname",
    "_get_split_size",
    "activate_proj",
    "check_fname",
    "dict",
    "float",
    "int",
    "min",
    "mne.io.base._write_raw",
    "mne.io.base.copy",
    "numpy.floor",
    "numpy.inf",
    "numpy.iscomplexobj",
    "os.path.realpath",
    "setup_proj",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.base.BaseRaw.times": {
  "data": {
   "lineno": 1878,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.io.base.TimeMixin": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.io.base.TimeMixin.time_as_index": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "numpy.atleast_1d",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "mne.io.base.ToDataFrameMixin": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.io.base.ToDataFrameMixin._get_check_picks": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "numpy.arange",
    "numpy.in1d",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.base.ToDataFrameMixin.to_data_frame": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "NameError",
    "_check_pandas_index_arguments",
    "_check_pandas_installed",
    "_handle_default",
    "_scale_dep",
    "all",
    "channel_type",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mne.io.base.copy",
    "numpy.arange",
    "numpy.hstack",
    "numpy.int64",
    "numpy.repeat",
    "numpy.round",
    "numpy.tile",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.base._RawShell": {
  "data": {
   "lineno": 2143
  },
  "type": "class"
 },
 "mne.io.base._RawShell.__init__": {
  "data": {
   "lineno": 2146
  },
  "type": "function"
 },
 "mne.io.base._RawShell.n_times": {
  "data": {
   "lineno": 2153,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "mne.io.base._allocate_data": {
  "data": {
   "lineno": 2110,
   "symbols_in_volume": [
    "isinstance",
    "numpy.memmap",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.base._check_fun": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "fun",
    "isinstance",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "mne.io.base._check_maxshield": {
  "data": {
   "lineno": 2513,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.base._check_raw_compatibility": {
  "data": {
   "lineno": 2417,
   "symbols_in_volume": [
    "ValueError",
    "_proj_equal",
    "all",
    "isinstance",
    "len",
    "range",
    "set",
    "type",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.base._check_update_montage": {
  "data": {
   "lineno": 2484,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "_set_montage",
    "isinstance",
    "numpy.unique",
    "read_montage",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.base._index_as_time": {
  "data": {
   "lineno": 2123,
   "symbols_in_volume": [
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "mne.io.base._my_hilbert": {
  "data": {
   "lineno": 2390,
   "symbols_in_volume": [
    "numpy.abs",
    "scipy.signal.hilbert"
   ]
  },
  "type": "function"
 },
 "mne.io.base._start_writing_raw": {
  "data": {
   "lineno": 2267,
   "symbols_in_volume": [
    "end_block",
    "len",
    "pick_info",
    "range",
    "start_block",
    "start_file",
    "write_double",
    "write_float",
    "write_id",
    "write_meas_info",
    "write_name_list"
   ]
  },
  "type": "function"
 },
 "mne.io.base._write_raw": {
  "data": {
   "lineno": 2160,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "end_block",
    "end_file",
    "len",
    "min",
    "mne.io.base._start_writing_raw",
    "mne.io.base._write_raw_buffer",
    "numpy.dot",
    "os.path.basename",
    "os.path.splitext",
    "range",
    "slice",
    "start_block",
    "write_id",
    "write_int",
    "write_string"
   ]
  },
  "type": "function"
 },
 "mne.io.base._write_raw_buffer": {
  "data": {
   "lineno": 2346,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.isrealobj",
    "numpy.ravel",
    "write_double",
    "write_float",
    "write_function",
    "write_int"
   ]
  },
  "type": "function"
 },
 "mne.io.base.concatenate_raws": {
  "data": {
   "lineno": 2443,
   "symbols_in_volume": [
    "ValueError",
    "concatenate_events",
    "events",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.base.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.io.base.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.base.hilbert": {
  "data": {
   "shadows": "scipy.signal.hilbert"
  },
  "type": "import"
 },
 "mne.io.base.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.base.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.brainvision": {
  "data": {},
  "type": "module"
 },
 "mne.io.brainvision.brainvision": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "mne.io.brainvision.brainvision.RawBrainVision": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "mne.io.brainvision.brainvision.RawBrainVision.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "_check_update_montage",
    "dict",
    "events",
    "int",
    "isinstance",
    "len",
    "mne.io.brainvision.brainvision.RawBrainVision",
    "mne.io.brainvision.brainvision._get_vhdr_info",
    "mne.io.brainvision.brainvision._read_vmrk_events",
    "mne.io.brainvision.brainvision.os",
    "numpy.cumsum",
    "open",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision.RawBrainVision._create_event_ch": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "_synthesize_stim_channel",
    "events",
    "events.ndim",
    "events.shape",
    "int",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision.RawBrainVision._get_brainvision_events": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision.RawBrainVision._read_segment_file": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "_mult_cal_one",
    "_read_segments_file",
    "float",
    "isinstance",
    "len",
    "list",
    "map",
    "mne.io.brainvision.brainvision._read_segments_c",
    "numpy.empty",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision.RawBrainVision._set_brainvision_events": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "events"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._check_hdr_version": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._check_mrk_version": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ValueError",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._fmt_byte_dict": {
  "data": {
   "lineno": 327
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision._fmt_dict": {
  "data": {
   "lineno": 326
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision._fmt_dtype_dict": {
  "data": {
   "lineno": 328
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision._get_vhdr_info": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "IOError",
    "Montage",
    "NotImplementedError",
    "RuntimeError",
    "StringIO",
    "UnicodeDecodeError",
    "ZeroDivisionError",
    "_empty_info",
    "_sph_to_cart",
    "dict",
    "enumerate",
    "float",
    "hasattr",
    "int",
    "len",
    "list",
    "map",
    "mne.io.brainvision.brainvision._check_hdr_version",
    "mne.io.brainvision.brainvision._fmt_byte_dict",
    "mne.io.brainvision.brainvision._fmt_dict",
    "mne.io.brainvision.brainvision._orientation_dict",
    "mne.io.brainvision.brainvision._unit_dict",
    "mne.io.brainvision.brainvision.os",
    "mne.io.brainvision.brainvision.re",
    "mne.io.brainvision.brainvision.time",
    "numpy.Inf",
    "numpy.arange",
    "numpy.array",
    "numpy.deg2rad",
    "numpy.empty",
    "numpy.float",
    "numpy.isinf",
    "numpy.isnan",
    "numpy.max",
    "numpy.min",
    "numpy.nan",
    "numpy.zeros",
    "open",
    "set",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._orientation_dict": {
  "data": {
   "lineno": 325
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision._read_segments_c": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "_mult_cal_one",
    "len",
    "numpy.arange",
    "numpy.fromfile",
    "numpy.zeros",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._read_vmrk_events": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "UnicodeDecodeError",
    "dict",
    "events",
    "events.append",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.io.brainvision.brainvision._check_mrk_version",
    "mne.io.brainvision.brainvision.re",
    "numpy.array",
    "numpy.zeros",
    "open",
    "set",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision._unit_dict": {
  "data": {
   "lineno": 329
  },
  "type": "constant"
 },
 "mne.io.brainvision.brainvision.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.brainvision.brainvision.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.brainvision.brainvision.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.brainvision.brainvision.read_raw_brainvision": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "mne.io.brainvision.brainvision.RawBrainVision"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.brainvision.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.brainvision.tests.test_brainvision": {
  "data": {
   "symbols_in_volume": [
    "mne.io.brainvision.tests.test_brainvision.FILE",
    "mne.io.brainvision.tests.test_brainvision.data_dir",
    "mne.io.brainvision.tests.test_brainvision.inspect",
    "mne.io.brainvision.tests.test_brainvision.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.brainvision.tests.test_brainvision.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.FILE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.data_dir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.eeg_bin": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.eeg_path": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.eog": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.event_id": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.montage": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.read_raw_brainvision": {
  "data": {
   "shadows": "mne.io.read_raw_brainvision"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.brainvision.tests.test_brainvision.test_ascii": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "mne.io.brainvision.tests.test_brainvision.event_id",
    "mne.io.brainvision.tests.test_brainvision.shutil",
    "mne.io.brainvision.tests.test_brainvision.vhdr_path",
    "mne.io.read_raw_brainvision",
    "mne.utils._TempDir",
    "numpy.testing.assert_allclose",
    "open",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "ValueError",
    "mne.io.brainvision.tests.test_brainvision.eeg_bin",
    "mne.io.brainvision.tests.test_brainvision.eog",
    "mne.io.brainvision.tests.test_brainvision.event_id",
    "mne.io.brainvision.tests.test_brainvision.montage",
    "mne.io.brainvision.tests.test_brainvision.vhdr_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_v2_path",
    "mne.io.brainvision.tests.test_brainvision.vmrk_path",
    "mne.io.constants.FIFF.FIFFV_EEG_CH",
    "mne.io.constants.FIFF.FIFFV_EOG_CH",
    "mne.io.constants.FIFF.FIFFV_MISC_CH",
    "mne.io.constants.FIFF.FIFFV_STIM_CH",
    "mne.io.constants.FIFF.FIFF_UNIT_CEL",
    "mne.io.constants.FIFF.FIFF_UNIT_NONE",
    "mne.io.constants.FIFF.FIFF_UNIT_V",
    "mne.io.read_raw_brainvision",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data_highpass_filters": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "all",
    "any",
    "mne.io.brainvision.tests.test_brainvision.eog",
    "mne.io.brainvision.tests.test_brainvision.event_id",
    "mne.io.brainvision.tests.test_brainvision.montage",
    "mne.io.brainvision.tests.test_brainvision.vhdr_highpass_hz_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_highpass_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_highpass_hz_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_highpass_path",
    "mne.io.brainvision.tests.test_brainvision.warnings",
    "mne.io.read_raw_brainvision",
    "mne.io.tests.test_raw._test_raw_reader",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data_lowpass_filters": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "all",
    "any",
    "mne.io.brainvision.tests.test_brainvision.eog",
    "mne.io.brainvision.tests.test_brainvision.event_id",
    "mne.io.brainvision.tests.test_brainvision.montage",
    "mne.io.brainvision.tests.test_brainvision.vhdr_lowpass_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_lowpass_s_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_lowpass_path",
    "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_lowpass_s_path",
    "mne.io.brainvision.tests.test_brainvision.warnings",
    "mne.io.read_raw_brainvision",
    "mne.io.tests.test_raw._test_raw_reader",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data_partially_disabled_hw_filters": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "all",
    "any",
    "mne.io.brainvision.tests.test_brainvision.eog",
    "mne.io.brainvision.tests.test_brainvision.montage",
    "mne.io.brainvision.tests.test_brainvision.vhdr_partially_disabled_hw_filter_path",
    "mne.io.brainvision.tests.test_brainvision.warnings",
    "mne.io.read_raw_brainvision",
    "mne.io.tests.test_raw._test_raw_reader",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_data_software_filters_latin1_global_units": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "all",
    "mne.io.brainvision.tests.test_brainvision.vhdr_old_path",
    "mne.io.brainvision.tests.test_brainvision.warnings",
    "mne.io.read_raw_brainvision",
    "mne.io.tests.test_raw._test_raw_reader",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_vectorized_data": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "mne.io.brainvision.tests.test_brainvision.vhdr_old_path",
    "mne.io.brainvision.tests.test_brainvision.warnings",
    "mne.io.read_raw_brainvision",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_brainvision_with_montage": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "mne.io.brainvision.tests.test_brainvision.eog",
    "mne.io.brainvision.tests.test_brainvision.vhdr_v2_path",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.io.constants.FIFF.FIFFV_POINT_EEG",
    "mne.io.read_raw_brainvision",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_events": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "TypeError",
    "events",
    "len",
    "mne.find_events",
    "mne.io.brainvision.tests.test_brainvision.eog",
    "mne.io.brainvision.tests.test_brainvision.event_id",
    "mne.io.brainvision.tests.test_brainvision.vhdr_path",
    "mne.io.brainvision.tests.test_brainvision.warnings",
    "mne.io.read_raw_brainvision",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.empty",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.test_vhdr_codepage_ansi": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mne.io.brainvision.tests.test_brainvision.eeg_path",
    "mne.io.brainvision.tests.test_brainvision.event_id",
    "mne.io.brainvision.tests.test_brainvision.shutil",
    "mne.io.brainvision.tests.test_brainvision.vhdr_path",
    "mne.io.brainvision.tests.test_brainvision.vmrk_path",
    "mne.io.read_raw_brainvision",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "open",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_highpass_hz_path": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_highpass_path": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_lowpass_path": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_lowpass_s_path": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_highpass_hz_path": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_highpass_path": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_lowpass_path": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_mixed_lowpass_s_path": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_old_path": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_partially_disabled_hw_filter_path": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_path": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vhdr_v2_path": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vmrk_old_path": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vmrk_path": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.vmrk_v2_path": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.brainvision.tests.test_brainvision.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.bti": {
  "data": {},
  "type": "module"
 },
 "mne.io.bti.bti": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "list",
    "mne.io.bti.bti.dtypes",
    "numpy.array",
    "numpy.dtype",
    "range",
    "zip"
   ]
  },
  "type": "module"
 },
 "mne.io.bti.bti.BTI_WH2500_REF_GRAD": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.bti.bti.BTI_WH2500_REF_MAG": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.bti.bti.DTYPES": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.bti.bti.FIFF_INFO_CHS_DEFAULTS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.bti.bti.FIFF_INFO_CHS_FIELDS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.bti.bti.FIFF_INFO_DIG_DEFAULTS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.bti.bti.FIFF_INFO_DIG_FIELDS": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.bti.bti.RawBTi": {
  "data": {
   "lineno": 975
  },
  "type": "class"
 },
 "mne.io.bti.bti.RawBTi.__init__": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "isinstance",
    "mne.io.bti.bti.RawBTi",
    "mne.io.bti.bti._get_bti_info",
    "repr",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti.RawBTi._read_segment_file": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "_mult_cal_one",
    "enumerate",
    "int",
    "isinstance",
    "itertools.count",
    "min",
    "mne.io.bti.bti._bti_open",
    "numpy.arange",
    "numpy.dtype",
    "numpy.empty",
    "numpy.fromfile",
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._bti_open": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "RuntimeError",
    "isinstance",
    "mne.io.bti.bti._bytes_io_mock_context",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._bytes_io_mock_context": {
  "data": {
   "lineno": 48
  },
  "type": "class"
 },
 "mne.io.bti.bti._bytes_io_mock_context.__enter__": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "mne.io.bti.bti._bytes_io_mock_context.__exit__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "mne.io.bti.bti._bytes_io_mock_context.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "mne.io.bti.bti._convert_coil_trans": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "combine_transforms",
    "invert_transform",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._convert_hs_points": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "apply_trans",
    "mne.io.bti.bti._flip_fiducials",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._correct_offset": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "mne.io.bti.bti._correct_trans": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._flip_fiducials": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "mne.io.bti.bti._get_bti_dev_t": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.dot",
    "numpy.eye",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._get_bti_info": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "Transform",
    "ValueError",
    "_coil_trans_to_loc",
    "_empty_info",
    "_loc_to_coil_trans",
    "any",
    "combine_transforms",
    "dict",
    "enumerate",
    "invert_transform",
    "isinstance",
    "list",
    "mne.io.bti.bti.FIFF_INFO_CHS_DEFAULTS",
    "mne.io.bti.bti.FIFF_INFO_CHS_FIELDS",
    "mne.io.bti.bti._convert_coil_trans",
    "mne.io.bti.bti._correct_trans",
    "mne.io.bti.bti._get_bti_dev_t",
    "mne.io.bti.bti._process_bti_headshape",
    "mne.io.bti.bti._read_bti_header",
    "mne.io.bti.bti._rename_channels",
    "numpy.ones",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.isabs",
    "os.path.isfile",
    "os.path.join",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._get_bti_info.by_name": {
  "data": {
   "lineno": 1293
  },
  "type": "function"
 },
 "mne.io.bti.bti._get_ctf_head_to_head_t": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "Transform",
    "numpy.array",
    "numpy.sqrt",
    "numpy.sum",
    "sum_squared"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._points_to_dig": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "mne.io.bti.bti.FIFF_INFO_DIG_DEFAULTS",
    "mne.io.bti.bti.FIFF_INFO_DIG_FIELDS",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._process_bti_headshape": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "Transform",
    "len",
    "mne.io.bti.bti._convert_hs_points",
    "mne.io.bti.bti._get_ctf_head_to_head_t",
    "mne.io.bti.bti._points_to_dig",
    "mne.io.bti.bti._read_head_shape",
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_assoc_file": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "read_int16",
    "read_int32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_bti_header": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "RuntimeError",
    "_coil_trans_to_loc",
    "dict",
    "enumerate",
    "float",
    "int",
    "len",
    "mne.io.bti.bti._read_bti_header_pdf",
    "mne.io.bti.bti._read_config",
    "numpy.arange",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_bti_header_pdf": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "mne.io.bti.bti.DTYPES",
    "mne.io.bti.bti._bti_open",
    "mne.io.bti.bti._correct_offset",
    "mne.io.bti.bti._read_assoc_file",
    "mne.io.bti.bti._read_channel",
    "mne.io.bti.bti._read_epoch",
    "mne.io.bti.bti._read_event",
    "mne.io.bti.bti._read_pfid_ed",
    "mne.io.bti.bti._read_process",
    "range",
    "read_float",
    "read_int16",
    "read_int32",
    "read_int64",
    "read_str",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_ch_config": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "dict",
    "mne.io.bti.bti._correct_offset",
    "mne.io.bti.bti._read_coil_def",
    "range",
    "read_char",
    "read_double",
    "read_float",
    "read_int16",
    "read_int32",
    "read_str",
    "read_transform",
    "read_uint16"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_channel": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "read_double",
    "read_float",
    "read_int16",
    "read_int32",
    "read_str"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_coil_def": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "read_double",
    "read_double_matrix",
    "read_int16",
    "read_int32",
    "read_str"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_config": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "any",
    "dict",
    "len",
    "list",
    "mne.io.bti.bti.BTI_WH2500_REF_GRAD",
    "mne.io.bti.bti.BTI_WH2500_REF_MAG",
    "mne.io.bti.bti._bti_open",
    "mne.io.bti.bti._correct_offset",
    "mne.io.bti.bti._correct_trans",
    "numpy.zeros",
    "range",
    "read_char",
    "read_dev_header",
    "read_double",
    "read_double_matrix",
    "read_float",
    "read_float_matrix",
    "read_int16",
    "read_int16_matrix",
    "read_int32",
    "read_str",
    "read_transform",
    "read_uint16",
    "read_uint32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_epoch": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "read_float",
    "read_int32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_event": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "mne.io.bti.bti._correct_offset",
    "read_float",
    "read_int16",
    "read_int32",
    "read_str"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_head_shape": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "mne.io.bti.bti._bti_open",
    "read_double_matrix",
    "read_int32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_pfid_ed": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "read_float",
    "read_int16",
    "read_int32",
    "read_str"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._read_process": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "list",
    "mne.io.bti.bti._correct_offset",
    "range",
    "read_double",
    "read_float",
    "read_int16",
    "read_int32",
    "read_str"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti._rename_channels": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "itertools.count",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.bti.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "mne.io.bti.bti.dtypes": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.bti.bti.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.bti.bti.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.bti.bti.read_raw_bti": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "mne.io.bti.bti.RawBTi"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.constants": {
  "data": {
   "symbols_in_volume": [
    "BunchConst",
    "mne.io.bti.constants.BTI"
   ]
  },
  "type": "module"
 },
 "mne.io.bti.constants.BTI": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mne.io.bti.read": {
  "data": {},
  "type": "module"
 },
 "mne.io.bti.read._unpack_matrix": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "int",
    "numpy.dtype",
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read._unpack_simple": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "len",
    "numpy.dtype",
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.bti.read.read_bool": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.bool"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_char": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_dev_header": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "dict",
    "mne.io.bti.read.read_int32",
    "read_str"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_double": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_double_matrix": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_matrix",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_float": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_float_matrix": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_matrix",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int16": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.int16"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int16_matrix": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_matrix",
    "numpy.int16"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int32": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int64": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_int8": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.int8"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_transform": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "mne.io.bti.read.read_double_matrix"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_uint16": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.uint16"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_uint32": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.uint32"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_uint64": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.uint64"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.read.read_uint8": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "mne.io.bti.read._unpack_simple",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.bti.tests.test_bti": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.bti.tests.test_bti.archs",
    "mne.io.bti.tests.test_bti.base_dir",
    "mne.io.bti.tests.test_bti.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.bti.tests.test_bti.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.NCH": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.Transform": {
  "data": {
   "shadows": "mne.transforms.Transform"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._correct_trans": {
  "data": {
   "shadows": "mne.io.bti.bti._correct_trans"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._get_bti_dev_t": {
  "data": {
   "shadows": "mne.io.bti.bti._get_bti_dev_t"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._get_bti_info": {
  "data": {
   "shadows": "mne.io.bti.bti._get_bti_info"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._process_bti_headshape": {
  "data": {
   "shadows": "mne.io.bti.bti._process_bti_headshape"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._read_bti_header": {
  "data": {
   "shadows": "mne.io.bti.bti._read_bti_header"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._read_config": {
  "data": {
   "shadows": "mne.io.bti.bti._read_config"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.archs": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.assert_dig_allclose": {
  "data": {
   "shadows": "mne.tests.common.assert_dig_allclose"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.base_dir": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.combine_transforms": {
  "data": {
   "shadows": "mne.transforms.combine_transforms"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.config_fnames": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.exported_fnames": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.fname_2500": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.hs_fnames": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.invert_transform": {
  "data": {
   "shadows": "mne.transforms.invert_transform"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.pdf_fnames": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.pick_info": {
  "data": {
   "shadows": "mne.io.pick.pick_info"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.six": {
  "data": {
   "shadows": "mne.externals.six"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.test_bytes_io": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "mne.externals.six.BytesIO",
    "mne.io.bti.tests.test_bti.config_fnames",
    "mne.io.bti.tests.test_bti.hs_fnames",
    "mne.io.bti.tests.test_bti.pdf_fnames",
    "mne.io.read_raw_bti",
    "numpy.testing.assert_array_equal",
    "open",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_crop_append": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "mne.io.bti.tests.test_bti.config_fnames",
    "mne.io.bti.tests.test_bti.hs_fnames",
    "mne.io.bti.tests.test_bti.pdf_fnames",
    "mne.io.read_raw_bti",
    "mne.io.tests.test_raw._test_raw_reader",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_info_no_rename_no_reorder_no_pdf": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "mne.io.bti.bti._get_bti_info",
    "mne.io.bti.tests.test_bti.config_fnames",
    "mne.io.bti.tests.test_bti.hs_fnames",
    "mne.io.bti.tests.test_bti.pdf_fnames",
    "mne.io.pick.pick_info",
    "mne.io.read_raw_bti",
    "mne.pick_types",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_no_conversion": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "functools.partial",
    "get_info",
    "mne.io.bti.bti._correct_trans",
    "mne.io.bti.bti._get_bti_info",
    "mne.io.bti.bti._process_bti_headshape",
    "mne.io.bti.bti._read_bti_header",
    "mne.io.bti.tests.test_bti.config_fnames",
    "mne.io.bti.tests.test_bti.hs_fnames",
    "mne.io.bti.tests.test_bti.pdf_fnames",
    "mne.io.constants.FIFF.FIFFV_COORD_DEVICE",
    "mne.io.constants.FIFF.FIFFV_MNE_COORD_4D_HEAD",
    "mne.io.pick.pick_info",
    "mne.io.read_raw_bti",
    "mne.pick_types",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_raw": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "mne.io.bti.tests.test_bti.NCH",
    "mne.io.bti.tests.test_bti.config_fnames",
    "mne.io.bti.tests.test_bti.exported_fnames",
    "mne.io.bti.tests.test_bti.hs_fnames",
    "mne.io.bti.tests.test_bti.os",
    "mne.io.bti.tests.test_bti.pdf_fnames",
    "mne.io.bti.tests.test_bti.pytest",
    "mne.io.bti.tests.test_bti.tmp_raw_fname",
    "mne.io.read_raw_bti",
    "mne.io.read_raw_fif",
    "mne.tests.common.assert_dig_allclose",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "os.path.exists",
    "print",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_read_2500": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.bti.tests.test_bti.fname_2500",
    "mne.io.read_raw_bti",
    "mne.io.tests.test_raw._test_raw_reader"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_read_config": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "all",
    "mne.io.bti.bti._read_config",
    "mne.io.bti.tests.test_bti.config_fnames",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_setup_headshape": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "functools.reduce",
    "list",
    "mne.io.bti.bti._process_bti_headshape",
    "mne.io.bti.tests.test_bti.hs_fnames",
    "nose.tools.assert_true",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.test_transforms": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "mne.io.bti.bti._get_bti_dev_t",
    "mne.io.bti.tests.test_bti.config_fnames",
    "mne.io.bti.tests.test_bti.hs_fnames",
    "mne.io.bti.tests.test_bti.pdf_fnames",
    "mne.io.read_raw_bti",
    "mne.transforms.Transform",
    "mne.transforms.combine_transforms",
    "mne.transforms.invert_transform",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.bti.tests.test_bti.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.bti.tests.test_bti.tmp_raw_fname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.bti.tests.test_bti.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.cnt": {
  "data": {},
  "type": "module"
 },
 "mne.io.cnt.cnt": {
  "data": {},
  "type": "module"
 },
 "mne.io.cnt.cnt.RawCNT": {
  "data": {
   "lineno": 295
  },
  "type": "class"
 },
 "mne.io.cnt.cnt.RawCNT.__init__": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "_check_update_montage",
    "mne.io.cnt.cnt.RawCNT",
    "mne.io.cnt.cnt._get_cnt_info",
    "os.path.abspath",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt.cnt.RawCNT._read_segment_file": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "_mult_cal_one",
    "enumerate",
    "int",
    "min",
    "numpy.arange",
    "numpy.empty",
    "numpy.fromfile",
    "numpy.zeros",
    "open",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt.cnt._get_cnt_info": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "_create_chs",
    "_empty_info",
    "_find_channels",
    "_topo_to_sphere",
    "dict",
    "enumerate",
    "float",
    "int",
    "len",
    "list",
    "mne.io.cnt.cnt.calendar",
    "mne.io.cnt.cnt.datetime",
    "numpy.array",
    "numpy.fromfile",
    "numpy.zeros",
    "open",
    "range",
    "read_str",
    "str",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt.cnt.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "mne.io.cnt.cnt.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.cnt.cnt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.cnt.cnt.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.cnt.cnt.read_raw_cnt": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "mne.io.cnt.cnt.RawCNT"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.cnt.tests.test_cnt": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.cnt.tests.test_cnt.data_path",
    "mne.io.cnt.tests.test_cnt.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.cnt.tests.test_cnt._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.data_path": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.io.cnt.tests.test_cnt.fname": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.io.cnt.tests.test_cnt.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.read_raw_cnt": {
  "data": {
   "shadows": "mne.io.cnt.read_raw_cnt"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.test_data": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "all",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.cnt.read_raw_cnt",
    "mne.io.cnt.tests.test_cnt.fname",
    "mne.io.cnt.tests.test_cnt.warnings",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.cnt.tests.test_cnt.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.cnt.tests.test_cnt.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.compensator": {
  "data": {},
  "type": "module"
 },
 "mne.io.compensator._make_compensator": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "numpy.dot",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.compensator.get_current_comp": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int"
   ]
  },
  "type": "function"
 },
 "mne.io.compensator.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.io.compensator.make_compensator": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "mne.io.compensator._make_compensator",
    "numpy.dot",
    "numpy.eye",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "mne.io.compensator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.compensator.set_current_comp": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "mne.io.compensator.get_current_comp"
   ]
  },
  "type": "function"
 },
 "mne.io.constants": {
  "data": {
   "symbols_in_volume": [
    "mne.io.constants.BunchConst",
    "mne.io.constants.FIFF"
   ]
  },
  "type": "module"
 },
 "mne.io.constants.Bunch": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "mne.io.constants.Bunch.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dict.__init__"
   ]
  },
  "type": "function"
 },
 "mne.io.constants.BunchConst": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "mne.io.constants.Bunch"
   ]
  },
  "type": "class"
 },
 "mne.io.constants.BunchConst.__setattr__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "mne.io.constants.BunchConst",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.constants.FIFF": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.io.ctf": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.constants": {
  "data": {
   "symbols_in_volume": [
    "BunchConst",
    "mne.io.ctf.constants.CTF"
   ]
  },
  "type": "module"
 },
 "mne.io.ctf.constants.CTF": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.io.ctf.ctf": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.ctf.RawCTF": {
  "data": {
   "lineno": 65
  },
  "type": "class"
 },
 "mne.io.ctf.ctf.RawCTF.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_compose_meas_info",
    "_make_ctf_coord_trans_set",
    "_make_ctf_name",
    "_read_eeg",
    "_read_hc",
    "_read_pos",
    "_read_res4",
    "isinstance",
    "len",
    "list",
    "mne.io.ctf.ctf.RawCTF",
    "mne.io.ctf.ctf._get_sample_info",
    "os.path.isdir",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.ctf.RawCTF._read_segment_file": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "_blk_read_lims",
    "_mult_cal_one",
    "int",
    "len",
    "min",
    "numpy.fromfile",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.ctf._get_sample_info": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "enumerate",
    "len",
    "mne.io.ctf.ctf.os",
    "numpy.fromstring",
    "numpy.where",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.ctf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.ctf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.ctf.ctf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.ctf.ctf.read_raw_ctf": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "mne.io.ctf.ctf.RawCTF"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.eeg": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "mne.io.ctf.eeg._cardinal_dict": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.io.ctf.eeg._read_eeg": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "RuntimeError",
    "_make_ctf_name",
    "dict",
    "float",
    "int",
    "len",
    "list",
    "mne.io.ctf.eeg._cardinal_dict",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.eeg._read_pos": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "apply_trans",
    "dict",
    "float",
    "int",
    "len",
    "list",
    "numpy.array",
    "open",
    "os.listdir",
    "os.path.join",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.eeg.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mne.io.ctf.eeg.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "mne.io.ctf.eeg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.hc": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.hc._coord_dict": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.io.ctf.hc._kind_dict": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.io.ctf.hc._read_hc": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "_make_ctf_name",
    "len",
    "list",
    "mne.io.ctf.hc._read_one_coil_point",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.hc._read_one_coil_point": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "enumerate",
    "float",
    "len",
    "mne.io.ctf.hc._coord_dict",
    "mne.io.ctf.hc._kind_dict",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.hc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.info": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.info._add_eeg_pos": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "RuntimeError",
    "_coord_frame_name",
    "apply_trans",
    "dict",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._at_origin": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._check_comp": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._check_comp_ch": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._comp_sort_keys": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._compose_meas_info": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "_empty_info",
    "combine_transforms",
    "dict",
    "get_new_file_id",
    "invert_transform",
    "len",
    "mne.io.ctf.info._add_eeg_pos",
    "mne.io.ctf.info._convert_channel_info",
    "mne.io.ctf.info._convert_comp_data",
    "mne.io.ctf.info._convert_time",
    "mne.io.ctf.info._filt_map",
    "mne.io.ctf.info._pick_eeg_pos",
    "mne.io.ctf.info._pick_isotrak_and_hpi_coils"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._conv_comp": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "_add_kind",
    "_calibrate_comp",
    "dict",
    "enumerate",
    "len",
    "numpy.array",
    "numpy.empty",
    "numpy.in1d",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._convert_channel_info": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "apply_trans",
    "dict",
    "enumerate",
    "float",
    "list",
    "mne.io.ctf.info._at_origin",
    "mne.io.ctf.info._check_comp_ch",
    "mne.io.ctf.info._get_plane_vectors",
    "numpy.abs",
    "numpy.cross",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._convert_comp_data": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "len",
    "list",
    "mne.io.ctf.info._check_comp",
    "mne.io.ctf.info._comp_sort_keys",
    "mne.io.ctf.info._conv_comp",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._convert_time": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "calendar.timegm",
    "time.strptime"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._ctf_to_fiff": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.ctf.info._filt_map": {
  "data": {
   "lineno": 411
  },
  "type": "constant"
 },
 "mne.io.ctf.info._get_plane_vectors": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "RuntimeError",
    "numpy.abs",
    "numpy.array",
    "numpy.cross",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._pick_eeg_pos": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "dict",
    "list",
    "mne.io.ctf.info._at_origin"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info._pick_isotrak_and_hpi_coils": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "RuntimeError",
    "apply_trans",
    "dict",
    "list",
    "mne.io.ctf.info._ctf_to_fiff"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.info.strptime": {
  "data": {
   "shadows": "time.strptime"
  },
  "type": "import"
 },
 "mne.io.ctf.info.timegm": {
  "data": {
   "shadows": "calendar.timegm"
  },
  "type": "import"
 },
 "mne.io.ctf.res4": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.res4._make_ctf_name": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "IOError",
    "os.path.basename",
    "os.path.isfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._move_to_next": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_channel": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "dict",
    "int",
    "list",
    "mne.io.ctf.res4._read_double",
    "mne.io.ctf.res4._read_int",
    "mne.io.ctf.res4._read_int2",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_comp_coeff": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "dict",
    "list",
    "mne.io.ctf.res4._read_double",
    "mne.io.ctf.res4._read_int",
    "mne.io.ctf.res4._read_int2",
    "mne.io.ctf.res4._read_string",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_double": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_filter": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "dict",
    "mne.io.ctf.res4._read_double",
    "mne.io.ctf.res4._read_int",
    "mne.io.ctf.res4._read_int2"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_int": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_int2": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_res4": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "mne.io.ctf.res4._make_ctf_name",
    "mne.io.ctf.res4._move_to_next",
    "mne.io.ctf.res4._read_channel",
    "mne.io.ctf.res4._read_comp_coeff",
    "mne.io.ctf.res4._read_double",
    "mne.io.ctf.res4._read_filter",
    "mne.io.ctf.res4._read_int",
    "mne.io.ctf.res4._read_int2",
    "mne.io.ctf.res4._read_string",
    "mne.io.ctf.res4._read_ustring",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_string": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "mne.io.ctf.res4._read_ustring": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.res4.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.res4.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.ctf.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.tests.test_ctf": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.ctf.tests.test_ctf.block_sizes",
    "mne.io.ctf.tests.test_ctf.ctf_fname_1_trial",
    "mne.io.ctf.tests.test_ctf.ctf_fname_2_trials",
    "mne.io.ctf.tests.test_ctf.ctf_fname_catch",
    "mne.io.ctf.tests.test_ctf.ctf_fname_continuous",
    "mne.io.ctf.tests.test_ctf.ctf_fname_discont",
    "mne.io.ctf.tests.test_ctf.ctf_fname_somato",
    "mne.utils.run_tests_if_main",
    "os.path.join",
    "sorted",
    "tuple"
   ]
  },
  "type": "module"
 },
 "mne.io.ctf.tests.test_ctf.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.block_sizes": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_dir": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_1_trial": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_2_trials": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_catch": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_continuous": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_discont": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fname_somato": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.ctf_fnames": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.single_trials": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.ctf.tests.test_ctf.spm_face": {
  "data": {
   "shadows": "mne.datasets.spm_face"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.test_read_ctf": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "all",
    "enumerate",
    "int",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.ctf.tests.test_ctf.block_sizes",
    "mne.io.ctf.tests.test_ctf.ctf_dir",
    "mne.io.ctf.tests.test_ctf.ctf_fname_catch",
    "mne.io.ctf.tests.test_ctf.ctf_fname_continuous",
    "mne.io.ctf.tests.test_ctf.ctf_fnames",
    "mne.io.ctf.tests.test_ctf.os",
    "mne.io.ctf.tests.test_ctf.pytest",
    "mne.io.ctf.tests.test_ctf.shutil",
    "mne.io.ctf.tests.test_ctf.single_trials",
    "mne.io.ctf.tests.test_ctf.warnings",
    "mne.io.read_raw_ctf",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "mne.transforms.apply_trans",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "open",
    "os.path.basename",
    "os.path.join",
    "round",
    "slice",
    "str",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.test_read_spm_ctf": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "mne.datasets.spm_face.data_path",
    "mne.datasets.spm_face.requires_spm_data",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.io.read_raw_ctf",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.tests.test_ctf.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.ctf.tests.test_ctf.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.ctf.trans": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf.trans._make_ctf_coord_trans_set": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "RuntimeError",
    "Transform",
    "any",
    "combine_transforms",
    "dict",
    "invert_transform",
    "mne.io.ctf.trans._make_transform_card",
    "mne.io.ctf.trans._quaternion_align",
    "numpy.array",
    "numpy.eye",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.trans._make_transform_card": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Transform",
    "numpy.cross",
    "numpy.dot",
    "numpy.eye",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.trans._quaternion_align": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "RuntimeError",
    "Transform",
    "numpy.argmax",
    "numpy.array",
    "numpy.dot",
    "numpy.eye",
    "numpy.sqrt",
    "numpy.sum",
    "scipy.linalg.eigh",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf.trans.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.io.ctf.trans.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf_comp": {
  "data": {},
  "type": "module"
 },
 "mne.io.ctf_comp._add_kind": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf_comp._calibrate_comp": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "RuntimeError",
    "float",
    "len",
    "numpy.zeros",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf_comp.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.ctf_comp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.ctf_comp.read_ctf_comp": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Exception",
    "_read_named_matrix",
    "bool",
    "dict",
    "dir_tree_find",
    "len",
    "mne.io.ctf_comp._add_kind",
    "mne.io.ctf_comp._calibrate_comp",
    "numpy.float",
    "numpy.ones",
    "range",
    "read_tag"
   ]
  },
  "type": "function"
 },
 "mne.io.ctf_comp.write_ctf_comp": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "copy.deepcopy",
    "end_block",
    "len",
    "start_block",
    "write_int",
    "write_named_matrix"
   ]
  },
  "type": "function"
 },
 "mne.io.diff": {
  "data": {},
  "type": "module"
 },
 "mne.io.diff.is_equal": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "numpy.allclose",
    "numpy.ndarray",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.diff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.edf": {
  "data": {},
  "type": "module"
 },
 "mne.io.edf.edf": {
  "data": {},
  "type": "module"
 },
 "mne.io.edf.edf.RawEDF": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "mne.io.edf.edf.RawEDF.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_check_update_montage",
    "bool",
    "mne.io.edf.edf.RawEDF",
    "mne.io.edf.edf._get_info",
    "mne.io.edf.edf.os",
    "super",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.edf.RawEDF._read_segment_file": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "NotImplementedError",
    "_blk_read_lims",
    "any",
    "dict",
    "enumerate",
    "int",
    "len",
    "max",
    "min",
    "mne.io.edf.edf._parse_tal_channel",
    "mne.io.edf.edf._read_annot",
    "mne.io.edf.edf._read_ch",
    "numpy.append",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.bitwise_and",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.intersect1d",
    "numpy.linspace",
    "numpy.size",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "open",
    "range",
    "resample",
    "scipy.interpolate.interp1d",
    "set",
    "sorted",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.edf.RawEDF.find_edf_events": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "copy_function_doc_to_method_doc",
    "mne.io.edf.edf.find_edf_events"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.edf._check_stim_channel": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.edf._get_info": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "_empty_info",
    "all",
    "any",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.io.edf.edf._check_stim_channel",
    "mne.io.edf.edf._read_edf_header",
    "mne.io.edf.edf._read_gdf_header",
    "mne.io.edf.edf.os",
    "numpy.any",
    "numpy.append",
    "numpy.array",
    "numpy.delete",
    "numpy.isfinite",
    "numpy.logical_and",
    "numpy.logical_or",
    "numpy.max",
    "numpy.min",
    "numpy.ones",
    "numpy.where",
    "numpy.zeros",
    "range",
    "slice",
    "str",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.edf._parse_tal_channel": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "bytearray",
    "events",
    "events.append",
    "float",
    "int",
    "mne.io.edf.edf.re",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.edf._read_annot": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "float",
    "int",
    "mne.io.edf.edf.re",
    "numpy.zeros",
    "open",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.edf._read_ch": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "numpy.fromfile",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.edf._read_edf_header": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "float",
    "int",
    "len",
    "list",
    "mne.io.edf.edf.calendar",
    "mne.io.edf.edf.datetime",
    "mne.io.edf.edf.os",
    "mne.io.edf.edf.re",
    "numpy.array",
    "numpy.int16",
    "numpy.ravel",
    "numpy.sum",
    "numpy.uint8",
    "open",
    "range",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.edf._read_gdf_header": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "enumerate",
    "events",
    "float",
    "id",
    "int",
    "len",
    "list",
    "mne.io.edf.edf.calendar",
    "mne.io.edf.edf.datetime",
    "mne.io.edf.edf.re",
    "numpy.append",
    "numpy.array",
    "numpy.asarray",
    "numpy.clip",
    "numpy.dtype",
    "numpy.equal",
    "numpy.float32",
    "numpy.float64",
    "numpy.fromfile",
    "numpy.fromstring",
    "numpy.inf",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.ma.masked_array",
    "numpy.max",
    "numpy.nan",
    "numpy.ones",
    "numpy.ravel",
    "numpy.sum",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "numpy.where",
    "numpy.zeros",
    "open",
    "pow",
    "range",
    "sum",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.edf.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "mne.io.edf.edf.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.edf.edf.find_edf_events": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "mne.io.edf.edf.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.io.edf.edf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.edf.edf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.edf.edf.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.edf.edf.read_raw_edf": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "mne.io.edf.edf.RawEDF"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.edf.tests.test_edf": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.edf.tests.test_edf.FILE",
    "mne.io.edf.tests.test_edf.data_dir",
    "mne.io.edf.tests.test_edf.data_path",
    "mne.io.edf.tests.test_edf.inspect",
    "mne.io.edf.tests.test_edf.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.edf.tests.test_edf.FILE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf._parse_tal_channel": {
  "data": {
   "shadows": "mne.io.edf.edf._parse_tal_channel"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.bdf_eeglab_path": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.bdf_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.data_dir": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.data_path": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_eeglab_path": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_overlap_annot_path": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_path": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_reduced": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_stim_channel_path": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_stim_resamp_path": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_txt_stim_channel_path": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_uneven_eeglab_path": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.edf_uneven_path": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.eog": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.find_edf_events": {
  "data": {
   "shadows": "mne.io.edf.edf.find_edf_events"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.find_events": {
  "data": {
   "shadows": "mne.event.find_events"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.iterbytes": {
  "data": {
   "shadows": "mne.externals.six.iterbytes"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.misc": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.montage_path": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_edf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.read_raw_edf": {
  "data": {
   "shadows": "mne.io.read_raw_edf"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.test_bdf_data": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "mne.io.edf.tests.test_edf.bdf_eeglab_path",
    "mne.io.edf.tests.test_edf.bdf_path",
    "mne.io.edf.tests.test_edf.eog",
    "mne.io.edf.tests.test_edf.misc",
    "mne.io.edf.tests.test_edf.montage_path",
    "mne.io.read_raw_edf",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "repr",
    "scipy.io.loadmat"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_annotations": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "events",
    "events.shape",
    "int",
    "mne.event.find_events",
    "mne.io.edf.tests.test_edf.edf_path",
    "mne.io.read_raw_edf",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_data": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "bytes",
    "events",
    "events.shape",
    "int",
    "len",
    "mne.event.find_events",
    "mne.io.edf.tests.test_edf.edf_path",
    "mne.io.edf.tests.test_edf.warnings",
    "mne.io.read_raw_edf",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_overlapping_annotations": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.edf.tests.test_edf.edf_overlap_annot_path",
    "mne.io.edf.tests.test_edf.warnings",
    "mne.io.read_raw_edf",
    "nose.tools.assert_equal",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_reduced": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.edf.tests.test_edf.edf_reduced",
    "mne.io.read_raw_edf",
    "mne.io.tests.test_raw._test_raw_reader"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_edf_stim_channel": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "mne.io.edf.tests.test_edf.edf_stim_channel_path",
    "mne.io.edf.tests.test_edf.edf_txt_stim_channel_path",
    "mne.io.read_raw_edf",
    "numpy.loadtxt",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_parse_annotation": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "map",
    "mne.externals.six.iterbytes",
    "mne.io.edf.edf._parse_tal_channel",
    "nose.tools.assert_equal",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_stim_channel": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "events",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.event.find_events",
    "mne.io.edf.edf.find_edf_events",
    "mne.io.edf.tests.test_edf.edf_eeglab_path",
    "mne.io.edf.tests.test_edf.edf_path",
    "mne.io.edf.tests.test_edf.edf_stim_resamp_path",
    "mne.io.edf.tests.test_edf.edf_uneven_eeglab_path",
    "mne.io.edf.tests.test_edf.edf_uneven_path",
    "mne.io.edf.tests.test_edf.warnings",
    "mne.io.read_raw_edf",
    "mne.pick_types",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.repeat",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "print",
    "range",
    "scipy.io.loadmat",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.test_to_data_frame": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "mne.io.edf.tests.test_edf.bdf_path",
    "mne.io.edf.tests.test_edf.edf_path",
    "mne.io.read_raw_edf",
    "mne.utils.requires_pandas",
    "nose.tools.assert_true",
    "numpy.round",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_edf.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_edf.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.edf.tests.test_gdf.data_path",
    "mne.io.edf.tests.test_gdf.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.edf.tests.test_gdf.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.data_path": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_gdf.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.gdf1_path": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_gdf.gdf2_path": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.edf.tests.test_gdf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.read_raw_edf": {
  "data": {
   "shadows": "mne.io.read_raw_edf"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.sio": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.test_gdf2_data": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "events",
    "events.shape",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.edf.tests.test_gdf.gdf2_path",
    "mne.io.edf.tests.test_gdf.warnings",
    "mne.io.read_raw_edf",
    "mne.pick_types",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "scipy.io.loadmat",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_gdf.test_gdf_data": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "all",
    "events",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.edf.tests.test_gdf.gdf1_path",
    "mne.io.edf.tests.test_gdf.warnings",
    "mne.io.read_raw_edf",
    "mne.pick_types",
    "nose.tools.assert_true",
    "numpy.load",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.edf.tests.test_gdf.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.edf.tests.test_gdf.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.eeglab": {
  "data": {},
  "type": "module"
 },
 "mne.io.eeglab.eeglab": {
  "data": {},
  "type": "module"
 },
 "mne.io.eeglab.eeglab.CAL": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.io.eeglab.eeglab.EpochsEEGLAB": {
  "data": {
   "lineno": 408
  },
  "type": "class"
 },
 "mne.io.eeglab.eeglab.EpochsEEGLAB.__init__": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "events",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.io.eeglab.eeglab.CAL",
    "mne.io.eeglab.eeglab.EpochsEEGLAB",
    "mne.io.eeglab.eeglab._check_fname",
    "mne.io.eeglab.eeglab._check_mat_struct",
    "mne.io.eeglab.eeglab._get_info",
    "numpy.float32",
    "numpy.fromfile",
    "numpy.newaxis",
    "numpy.zeros",
    "open",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "range",
    "read_events",
    "scipy.io.loadmat",
    "str",
    "super",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.eeglab.RawEEGLAB": {
  "data": {
   "lineno": 261
  },
  "type": "class"
 },
 "mne.io.eeglab.eeglab.RawEEGLAB.__init__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "TypeError",
    "dict",
    "events",
    "isinstance",
    "len",
    "mne.io.eeglab.eeglab.CAL",
    "mne.io.eeglab.eeglab.RawEEGLAB",
    "mne.io.eeglab.eeglab._check_fname",
    "mne.io.eeglab.eeglab._check_mat_struct",
    "mne.io.eeglab.eeglab._get_info",
    "mne.io.eeglab.eeglab.read_events_eeglab",
    "numpy.double",
    "numpy.empty",
    "numpy.zeros",
    "os.path.dirname",
    "os.path.join",
    "scipy.io.loadmat",
    "super",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.eeglab.RawEEGLAB._create_event_ch": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ValueError",
    "_synthesize_stim_channel",
    "events",
    "events.ndim",
    "events.shape",
    "int",
    "len",
    "numpy.array",
    "set",
    "str",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.eeglab.RawEEGLAB._read_segment_file": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "_read_segments_file",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.eeglab._check_fname": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "IOError",
    "NotImplementedError",
    "os.path.splitext",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.eeglab._check_mat_struct": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "ValueError",
    "check_version",
    "scipy.io.whosmat"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.eeglab._get_info": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Montage",
    "_check_update_montage",
    "_empty_info",
    "_find_channels",
    "all",
    "create_info",
    "enumerate",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "mne.io.eeglab.eeglab.CAL",
    "mne.io.eeglab.eeglab._to_loc",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.isnan",
    "numpy.ndarray",
    "numpy.r_",
    "os.path.dirname",
    "range",
    "scipy.io.matlab.mio5_params.mat_struct"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.eeglab._strip_to_integer": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.eeglab._to_loc": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "len",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.eeglab.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.eeglab.eeglab.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.eeglab.eeglab.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.eeglab.eeglab.read_epochs_eeglab": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "events",
    "mne.io.eeglab.eeglab.EpochsEEGLAB"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.eeglab.read_events_eeglab": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "dict",
    "event_id_func",
    "events",
    "events.append",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.zeros",
    "scipy.io.loadmat",
    "set",
    "str",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.eeglab.read_raw_eeglab": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "mne.io.eeglab.eeglab.RawEEGLAB"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.eeglab.tests.test_eeglab": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.eeglab.tests.test_eeglab.base_dir",
    "mne.io.eeglab.tests.test_eeglab.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.eeglab.tests.test_eeglab.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.base_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.epochs_fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.epochs_fname_onefile": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.montage": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.raw_fname_onefile": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.io.eeglab.tests.test_eeglab.read_epochs_eeglab": {
  "data": {
   "shadows": "mne.read_epochs_eeglab"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.read_events_eeglab": {
  "data": {
   "shadows": "mne.io.eeglab.eeglab.read_events_eeglab"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.read_raw_eeglab": {
  "data": {
   "shadows": "mne.io.read_raw_eeglab"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.test_io_set": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "any",
    "enumerate",
    "len",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.eeglab.eeglab.read_events_eeglab",
    "mne.io.eeglab.tests.test_eeglab.base_dir",
    "mne.io.eeglab.tests.test_eeglab.epochs_fname",
    "mne.io.eeglab.tests.test_eeglab.epochs_fname_onefile",
    "mne.io.eeglab.tests.test_eeglab.montage",
    "mne.io.eeglab.tests.test_eeglab.raw_fname",
    "mne.io.eeglab.tests.test_eeglab.raw_fname_onefile",
    "mne.io.eeglab.tests.test_eeglab.shutil",
    "mne.io.eeglab.tests.test_eeglab.warnings",
    "mne.io.read_raw_eeglab",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.read_epochs_eeglab",
    "mne.utils._TempDir",
    "mne.utils.requires_version",
    "mne.write_events",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.nan",
    "numpy.random.random",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "os.path.join",
    "range",
    "scipy.io.loadmat",
    "scipy.io.savemat",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.eeglab.tests.test_eeglab.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.eeglab.tests.test_eeglab.write_events": {
  "data": {
   "shadows": "mne.write_events"
  },
  "type": "import"
 },
 "mne.io.egi": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.egi": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.egi.RawEGI": {
  "data": {
   "lineno": 171
  },
  "type": "class"
 },
 "mne.io.egi.egi.RawEGI.__init__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "_check_update_montage",
    "_combine_triggers",
    "_create_chs",
    "_empty_info",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mne.io.egi.egi.RawEGI",
    "mne.io.egi.egi._read_events",
    "mne.io.egi.egi._read_header",
    "mne.io.egi.egi.datetime",
    "mne.io.egi.egi.time",
    "numpy.arange",
    "numpy.array",
    "numpy.float32",
    "numpy.repeat",
    "open",
    "range",
    "super",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egi.RawEGI._read_segment_file": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "_read_segments_file"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egi._read_events": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "events",
    "numpy.fromfile",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egi._read_header": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "ValueError",
    "dict",
    "my_fread",
    "numpy.array",
    "numpy.bitwise_and",
    "numpy.dtype",
    "numpy.fromfile",
    "numpy.int32",
    "numpy.uint32",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egi._read_header.my_fread": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egi.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.egi.egi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.egi.read_raw_egi": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "_read_raw_egi_mff",
    "mne.io.egi.egi.RawEGI"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egi.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.io.egi.egimff": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.egimff.RawMff": {
  "data": {
   "lineno": 262
  },
  "type": "class"
 },
 "mne.io.egi.egimff.RawMff.__init__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "_check_update_montage",
    "_combine_triggers",
    "_create_chs",
    "_empty_info",
    "_get_gains",
    "_read_events",
    "dict",
    "enumerate",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "mne.io.egi.egimff.RawMff",
    "mne.io.egi.egimff._read_header",
    "mne.io.egi.egimff._read_locs",
    "mne.io.egi.egimff.datetime",
    "mne.io.egi.egimff.time",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.float32",
    "numpy.repeat",
    "numpy.vstack",
    "numpy.where",
    "os.path.join",
    "range",
    "super",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egimff.RawMff._read_segment_file": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "ValueError",
    "_block_r",
    "_mult_cal_one",
    "enumerate",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.cumsum",
    "numpy.fromfile",
    "numpy.max",
    "numpy.sum",
    "numpy.vstack",
    "open",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egimff._read_header": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "int",
    "mne.io.egi.egimff._read_mff_header",
    "numpy.fromfile",
    "numpy.int32",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egimff._read_locs": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "id",
    "len",
    "numpy.array",
    "numpy.where",
    "os.path.exists",
    "os.path.join",
    "xml.dom.minidom.parse"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egimff._read_mff_header": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "_extract",
    "_get_blocks",
    "_get_ep_info",
    "_get_signalfname",
    "dict",
    "int",
    "len",
    "list",
    "numpy.sum",
    "os.path.isfile",
    "os.path.join",
    "print",
    "xml.dom.minidom.parse"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egimff._read_raw_egi_mff": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "mne.io.egi.egimff.RawMff"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.egimff.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.dateutil.parser": {
  "data": {
   "shadows": "dateutil.parser"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.parse": {
  "data": {
   "shadows": "xml.dom.minidom.parse"
  },
  "type": "import"
 },
 "mne.io.egi.egimff.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.io.egi.events": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.events._combine_triggers": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "bool",
    "numpy.any",
    "numpy.arange",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.events._ns": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "mne.io.egi.events._ns2py_time": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "datetime.datetime.strptime"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.events._parse_xml": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "mne.io.egi.events._xml2list",
    "xml.etree.ElementTree.parse"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.events._read_events": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "enumerate",
    "events",
    "len",
    "mne.io.egi.events._read_mff_events",
    "numpy.asarray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.events._read_mff_events": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "float",
    "glob.glob",
    "int",
    "list",
    "mne.io.egi.events._ns2py_time",
    "mne.io.egi.events._parse_xml",
    "numpy.fix",
    "os.path.basename",
    "os.path.join",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.events._xml2dict": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "dict",
    "len",
    "mne.io.egi.events._ns",
    "mne.io.egi.events._xml2list"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.events._xml2list": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "len",
    "mne.io.egi.events._ns",
    "mne.io.egi.events._xml2dict"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.events.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "mne.io.egi.events.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.io.egi.events.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "mne.io.egi.events.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "mne.io.egi.events.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.events.parse": {
  "data": {
   "shadows": "xml.etree.ElementTree.parse"
  },
  "type": "import"
 },
 "mne.io.egi.events.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "mne.io.egi.general": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.general._block_r": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "int",
    "numpy.dtype",
    "numpy.fromfile"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.general._extract": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "range",
    "xml.dom.minidom.parse"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.general._get_blocks": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "dict",
    "mne.io.egi.general._block_r",
    "mne.io.egi.general.os",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.general._get_ep_info": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "int",
    "list",
    "xml.dom.minidom.parse"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.general._get_gains": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "dict",
    "mne.io.egi.general._extract",
    "numpy.asarray",
    "numpy.float64",
    "xml.dom.minidom.parse"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.general._get_signalfname": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "len",
    "list",
    "mne.io.egi.general.os",
    "mne.io.egi.general.re",
    "xml.dom.minidom.parse"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.general.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.general.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.egi.general.parse": {
  "data": {
   "shadows": "xml.dom.minidom.parse"
  },
  "type": "import"
 },
 "mne.io.egi.general.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.egi.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.egi.tests.test_egi": {
  "data": {
   "symbols_in_volume": [
    "mne.io.egi.tests.test_egi.FILE",
    "mne.io.egi.tests.test_egi.base_dir",
    "mne.io.egi.tests.test_egi.inspect",
    "mne.io.egi.tests.test_egi.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.egi.tests.test_egi.FILE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi._combine_triggers": {
  "data": {
   "shadows": "mne.io.egi.egi._combine_triggers"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.base_dir": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.data_path": {
  "data": {
   "shadows": "mne.datasets.testing.data_path"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.egi_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.egi_txt_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.egi.tests.test_egi.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.read_raw_egi": {
  "data": {
   "shadows": "mne.io.read_raw_egi"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.requires_testing_data": {
  "data": {
   "shadows": "mne.datasets.testing.requires_testing_data"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.sio": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.egi.tests.test_egi.test_io_egi": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "enumerate",
    "events",
    "len",
    "mne.find_events",
    "mne.io.egi.egi._combine_triggers",
    "mne.io.egi.tests.test_egi.egi_fname",
    "mne.io.egi.tests.test_egi.egi_txt_fname",
    "mne.io.egi.tests.test_egi.warnings",
    "mne.io.read_raw_egi",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.loadtxt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "open",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.tests.test_egi.test_io_egi_mff": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "events",
    "len",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.read_raw_egi",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.unique",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.tests.test_egi.test_io_egi_pns_mff": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.data_path",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_egi",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "print",
    "repr",
    "scipy.io.loadmat",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.egi.tests.test_egi.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.fiff": {
  "data": {},
  "type": "module"
 },
 "mne.io.fiff.raw": {
  "data": {},
  "type": "module"
 },
 "mne.io.fiff.raw.Raw": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "mne.io.fiff.raw.Raw.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Annotations",
    "_check_raw_compatibility",
    "_combine_annotations",
    "_sync_onset",
    "any",
    "enumerate",
    "mne.io.fiff.raw.Raw",
    "mne.io.fiff.raw.copy",
    "numpy.r_",
    "os.path.exists",
    "os.path.realpath",
    "super",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.raw.Raw._dtype": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "RuntimeError",
    "_fiff_get_fid",
    "numpy.complex128",
    "numpy.float64",
    "property",
    "read_tag_info",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.raw.Raw._read_raw_file": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "Annotations",
    "ValueError",
    "_RawShell",
    "_check_maxshield",
    "_get_next_fname",
    "check_fname",
    "dict",
    "dir_tree_find",
    "fiff_open",
    "float",
    "int",
    "len",
    "list",
    "mne.io.fiff.raw._check_entry",
    "mne.io.fiff.raw.os",
    "numpy.median",
    "numpy.zeros",
    "range",
    "read_meas_info",
    "read_tag"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.raw.Raw._read_segment_file": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "_fiff_get_fid",
    "_mult_cal_one",
    "read_tag"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.raw.Raw.acqparser": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "AcqParserFIF",
    "getattr",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.raw.Raw.fix_mag_coil_types": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "fix_mag_coil_types"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.raw._check_entry": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "IOError"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.raw.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.io.fiff.raw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.fiff.raw.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.fiff.raw.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.fiff.raw.read_raw_fif": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "mne.io.fiff.raw.Raw"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.fiff.tests.test_raw_fiff": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.fiff.tests.test_raw_fiff.base_dir",
    "mne.io.fiff.tests.test_raw_fiff.data_dir",
    "mne.io.fiff.tests.test_raw_fiff.testing_path",
    "mne.io.fiff.tests.test_raw_fiff.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.fiff.tests.test_raw_fiff.Annotations": {
  "data": {
   "shadows": "mne.annotations.Annotations"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff._compare_combo": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff._get_rank_sss": {
  "data": {
   "shadows": "mne.io.proc_history._get_rank_sss"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff._picks_by_type": {
  "data": {
   "shadows": "mne.io.pick._picks_by_type"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff._test_concat": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_concat"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_naming": {
  "data": {
   "shadows": "mne.tests.common.assert_naming"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.bad_file_works": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.bad_file_wrong": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.base_dir": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.compute_proj_raw": {
  "data": {
   "shadows": "mne.compute_proj_raw"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.concatenate_events": {
  "data": {
   "shadows": "mne.concatenate_events"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.concatenate_raws": {
  "data": {
   "shadows": "mne.io.concatenate_raws"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.ctf_comp_fname": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.ctf_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.data_dir": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.equalize_channels": {
  "data": {
   "shadows": "mne.equalize_channels"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.fif_bad_marked_fname": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.fif_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.hp_fif_fname": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.hp_fname": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.itt": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.ms_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pickle": {
  "data": {
   "shadows": "mne.externals.six.moves.cPickle"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.skip_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_acq_skip": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.skip_fname",
    "mne.io.read_raw_fif",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_add_channels": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "ValueError",
    "all",
    "list",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "mne.utils.object_diff",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_compensation_raw": {
  "data": {
   "lineno": 1235,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "mne.compute_proj_raw",
    "mne.io.fiff.tests.test_raw_fiff.ctf_comp_fname",
    "mne.io.read_raw_fif",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_compensation_raw_mne": {
  "data": {
   "lineno": 1334,
   "symbols_in_volume": [
    "compensate_mne",
    "mne.externals.six.moves.zip",
    "mne.io.fiff.tests.test_raw_fiff.ctf_comp_fname",
    "mne.io.read_raw_fif",
    "mne.utils._TempDir",
    "mne.utils.requires_mne",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_compensation_raw_mne.compensate_mne": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "mne.io.read_raw_fif",
    "mne.utils.run_subprocess",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_concat": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "functools.partial",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_raw._test_concat",
    "mne.utils._TempDir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_copy_append": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_crop": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "mne.create_info",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.moves.zip",
    "mne.io.RawArray",
    "mne.io.concatenate_raws",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.r_",
    "numpy.round",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_drop_channels_mixin": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_equalize_channels": {
  "data": {
   "lineno": 1404,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.equalize_channels",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_fif_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_fif_gz_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_filter": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "dict",
    "mne.create_info",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.RawArray",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.fiff.tests.test_raw_fiff.warnings",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.random.randn",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_filter_picks": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "len",
    "mne.create_info",
    "mne.io.RawArray",
    "nose.tools.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_fix_types": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "len",
    "mne.io.constants.FIFF.FIFFV_COIL_VV_MAG_T2",
    "mne.io.constants.FIFF.FIFFV_COIL_VV_MAG_T3.all",
    "mne.io.fiff.tests.test_raw_fiff.ctf_fname",
    "mne.io.fiff.tests.test_raw_fiff.hp_fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.array",
    "numpy.setdiff1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_getitem": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_hash_raw": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "RuntimeError",
    "hash",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.moves.cPickle.dumps",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_hilbert": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "nose.tools.assert_raises",
    "numpy.abs",
    "numpy.ceil",
    "numpy.log2",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_io_complex": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "enumerate",
    "functools.partial",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.warnings",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.utils._TempDir",
    "numpy.arange",
    "numpy.array",
    "numpy.complex128",
    "numpy.complex64",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_io_raw": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.moves.zip",
    "mne.io.constants.FIFF.FIFFV_COORD_DEVICE",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.io.constants.FIFF.FIFFV_MNE_COORD_CTF_HEAD",
    "mne.io.fiff.tests.test_raw_fiff.ctf_fname",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_gz_fname",
    "mne.io.fiff.tests.test_raw_fiff.warnings",
    "mne.io.read_raw_fif",
    "mne.pick_channels",
    "mne.pick_types",
    "mne.tests.common.assert_naming",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.basename",
    "os.path.join",
    "range",
    "repr",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_load_bad_channels": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "ValueError",
    "mne.io.fiff.tests.test_raw_fiff.bad_file_works",
    "mne.io.fiff.tests.test_raw_fiff.bad_file_wrong",
    "mne.io.fiff.tests.test_raw_fiff.fif_bad_marked_fname",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.warnings",
    "mne.io.read_raw_fif",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_maxshield": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.ms_fname",
    "mne.io.fiff.tests.test_raw_fiff.warnings",
    "mne.io.read_raw_fif",
    "nose.tools.assert_true",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_multiple_files": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "int",
    "len",
    "list",
    "mne.concatenate_events",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.concatenate_raws",
    "mne.io.fiff.tests.test_raw_fiff._compare_combo",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.read_raw_fif",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.round",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "range",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_output_formats": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "IOError",
    "enumerate",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.moves.zip",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_pick_channels_mixin": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "nose.tools.assert_raises",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_preload_modify": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.utils._TempDir",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_proj": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "copy.deepcopy",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_rank_estimation": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "dict",
    "itertools.product",
    "len",
    "mne.compute_proj_raw",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.hp_fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.pytest",
    "mne.io.pick._picks_by_type",
    "mne.io.proc_history._get_rank_sss",
    "mne.io.read_raw_fif",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_raw_copy": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_resample": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "events",
    "int",
    "len",
    "mne.create_info",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.RawArray",
    "mne.io.concatenate_raws",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.warnings",
    "mne.io.read_raw_fif",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.random.randn",
    "numpy.round",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_save": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "all",
    "mne.annotations.Annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.concatenate_raws",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.fiff.tests.test_raw_fiff.os",
    "mne.io.fiff.tests.test_raw_fiff.warnings",
    "mne.io.read_raw_fif",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.abspath",
    "os.path.curdir",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_split_files": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.annotations.Annotations",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_subject_info": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "dict",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.moves.zip",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_to_data_frame": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "mne.io.fiff.tests.test_raw_fiff.test_fif_fname",
    "mne.io.read_raw_fif",
    "mne.utils.requires_pandas",
    "nose.tools.assert_true",
    "numpy.round",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.test_with_statement": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.fiff.tests.test_raw_fiff.fif_fname",
    "mne.io.read_raw_fif",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.io.fiff.tests.test_raw_fiff.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.testing_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.fiff.tests.test_raw_fiff.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.fiff.tests.test_raw_fiff.zip": {
  "data": {
   "shadows": "mne.externals.six.moves.zip"
  },
  "type": "import"
 },
 "mne.io.kit": {
  "data": {},
  "type": "module"
 },
 "mne.io.kit.constants": {
  "data": {
   "symbols_in_volume": [
    "Bunch",
    "mne.io.kit.constants.KIT"
   ]
  },
  "type": "module"
 },
 "mne.io.kit.constants.KIT": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.io.kit.constants.KIT_LAYOUT": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "mne.io.kit.constants.KIT_SYSNAMES": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "mne.io.kit.constants.LEGACY_AMP_PARAMS": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "mne.io.kit.coreg": {
  "data": {},
  "type": "module"
 },
 "mne.io.kit.coreg.SEEK_CUR": {
  "data": {
   "shadows": "os.SEEK_CUR"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.pickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.kit.coreg.read_mrk": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "_read_dig_points",
    "numpy.array",
    "numpy.asarray",
    "numpy.fromfile",
    "open",
    "os.SEEK_CUR",
    "os.path.splitext",
    "range",
    "struct.unpack"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.coreg.read_sns": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "float",
    "mne.io.kit.coreg.re",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.coreg.unpack": {
  "data": {
   "shadows": "struct.unpack"
  },
  "type": "import"
 },
 "mne.io.kit.tests": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.kit.tests.data_dir": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mne.io.kit.tests.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg": {
  "data": {
   "symbols_in_volume": [
    "mne.io.kit.tests.test_coreg.FILE",
    "mne.io.kit.tests.test_coreg.data_dir",
    "mne.io.kit.tests.test_coreg.inspect",
    "mne.io.kit.tests.test_coreg.os",
    "mne.io.kit.tests.test_coreg.parent_dir"
   ]
  },
  "type": "module"
 },
 "mne.io.kit.tests.test_coreg.FILE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_coreg._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg._write_dig_points": {
  "data": {
   "shadows": "mne.io.meas_info._write_dig_points"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.data_dir": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_coreg.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.mrk_fname": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_coreg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.parent_dir": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_coreg.pickle": {
  "data": {
   "shadows": "cPickle"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.read_mrk": {
  "data": {
   "shadows": "mne.io.kit.read_mrk"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_coreg.test_io_mrk": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.io.kit.read_mrk",
    "mne.io.kit.tests.test_coreg.mrk_fname",
    "mne.io.kit.tests.test_coreg.os",
    "mne.io.meas_info._write_dig_points",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_equal",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit": {
  "data": {
   "symbols_in_volume": [
    "mne.io.kit.tests.test_kit.FILE",
    "mne.io.kit.tests.test_kit.data_dir",
    "mne.io.kit.tests.test_kit.data_path",
    "mne.io.kit.tests.test_kit.inspect",
    "mne.io.kit.tests.test_kit.mne",
    "mne.io.kit.tests.test_kit.parent_dir",
    "mne.utils.run_tests_if_main",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.kit.tests.test_kit.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.FILE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.KIT": {
  "data": {
   "shadows": "mne.io.kit.constants.KIT"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit._get_ico_surface": {
  "data": {
   "shadows": "mne.surface._get_ico_surface"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_almost_equal": {
  "data": {
   "shadows": "nose.tools.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_dig_allclose": {
  "data": {
   "shadows": "mne.tests.common.assert_dig_allclose"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.data_dir": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.data_path": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.elp_path": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.elp_txt_path": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.epochs_path": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.events_path": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.hsp_path": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.hsp_txt_path": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.mrk2_path": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.mrk3_path": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.mrk_path": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.parent_dir": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_epochs_kit": {
  "data": {
   "shadows": "mne.io.read_epochs_kit"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.read_sns": {
  "data": {
   "shadows": "mne.io.kit.coreg.read_sns"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.requires_testing_data": {
  "data": {
   "shadows": "mne.datasets.testing.requires_testing_data"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.scipy.io": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.io.kit.tests.test_kit.sqd_as_path": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.sqd_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.sqd_umd_path": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.io.kit.tests.test_kit.test_ch_loc": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mne.io.kit.coreg.read_sns",
    "mne.io.kit.tests.test_kit.data_dir",
    "mne.io.kit.tests.test_kit.elp_txt_path",
    "mne.io.kit.tests.test_kit.hsp_txt_path",
    "mne.io.kit.tests.test_kit.mrk2_path",
    "mne.io.kit.tests.test_kit.mrk3_path",
    "mne.io.kit.tests.test_kit.mrk_path",
    "mne.io.kit.tests.test_kit.sqd_path",
    "mne.io.read_raw_fif",
    "mne.io.read_raw_kit",
    "mne.tests.common.assert_dig_allclose",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_data": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "list",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG",
    "mne.io.constants.FIFF.FIFFV_COIL_KIT_GRAD",
    "mne.io.constants.FIFF.FIFFV_COIL_KIT_REF_MAG",
    "mne.io.constants.FIFF.FIFFV_COIL_NONE",
    "mne.io.constants.FIFF.FIFFV_EEG_CH",
    "mne.io.constants.FIFF.FIFFV_MEG_CH",
    "mne.io.constants.FIFF.FIFFV_MISC_CH",
    "mne.io.constants.FIFF.FIFFV_REF_MEG_CH",
    "mne.io.constants.FIFF.FIFFV_STIM_CH",
    "mne.io.kit.constants.KIT.SYSTEM_AS_2008",
    "mne.io.kit.constants.KIT.SYSTEM_NYU_2010",
    "mne.io.kit.constants.KIT.SYSTEM_UMD_2014_12",
    "mne.io.kit.tests.test_kit.data_dir",
    "mne.io.kit.tests.test_kit.elp_txt_path",
    "mne.io.kit.tests.test_kit.epochs_path",
    "mne.io.kit.tests.test_kit.hsp_txt_path",
    "mne.io.kit.tests.test_kit.mrk2_path",
    "mne.io.kit.tests.test_kit.mrk3_path",
    "mne.io.kit.tests.test_kit.mrk_path",
    "mne.io.kit.tests.test_kit.sqd_as_path",
    "mne.io.kit.tests.test_kit.sqd_path",
    "mne.io.kit.tests.test_kit.sqd_umd_path",
    "mne.io.read_epochs_kit",
    "mne.io.read_raw_fif",
    "mne.io.read_raw_kit",
    "mne.io.tests.test_raw._test_raw_reader",
    "mne.pick_types",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "range",
    "repr",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_decimate": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "any",
    "len",
    "mne.io.kit.tests.test_kit.elp_txt_path",
    "mne.io.kit.tests.test_kit.mrk_path",
    "mne.io.kit.tests.test_kit.sqd_path",
    "mne.io.kit.tests.test_kit.warnings",
    "mne.io.read_raw_kit",
    "mne.surface._get_ico_surface",
    "mne.utils._TempDir",
    "nose.tools.assert_almost_equal",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.mean",
    "numpy.savetxt",
    "numpy.sqrt",
    "numpy.sum",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_epochs": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.io.kit.tests.test_kit.epochs_path",
    "mne.io.kit.tests.test_kit.events_path",
    "mne.io.kit.tests.test_kit.sqd_path",
    "mne.io.read_epochs_kit",
    "mne.io.read_raw_kit",
    "mne.read_events",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_hsp_elp": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "mne.io.kit.tests.test_kit.elp_path",
    "mne.io.kit.tests.test_kit.elp_txt_path",
    "mne.io.kit.tests.test_kit.hsp_path",
    "mne.io.kit.tests.test_kit.hsp_txt_path",
    "mne.io.kit.tests.test_kit.mrk_path",
    "mne.io.kit.tests.test_kit.sqd_path",
    "mne.io.read_raw_kit",
    "mne.transforms.apply_trans",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_raw_events": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "evts",
    "mne.find_events",
    "mne.io.kit.tests.test_kit.sqd_path",
    "mne.io.read_raw_kit",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.test_raw_events.evts": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "mne.io.kit.tests.test_kit.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.matrix": {
  "data": {},
  "type": "module"
 },
 "mne.io.matrix._read_named_matrix": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "find_tag",
    "has_tag",
    "mne.io.matrix._transpose_named_matrix",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.matrix._transpose_named_matrix": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "mne.io.matrix.write_named_matrix": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "end_block",
    "float",
    "len",
    "start_block",
    "write_float_matrix",
    "write_int",
    "write_name_list"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "mne.io.meas_info.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "mne.io.meas_info.Info": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "mne.io.meas_info.Info.__repr__": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "channel_type",
    "collections.Counter",
    "enumerate",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "mne.io.meas_info._stamp_to_dt",
    "mne.io.meas_info._summarize_str",
    "numpy.iterable",
    "range",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.Info._check_ch_name_length": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "len",
    "list",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.Info._check_consistency": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "enumerate",
    "float",
    "int",
    "len",
    "min",
    "numpy.array",
    "numpy.ceil",
    "numpy.log10",
    "numpy.setdiff1d",
    "numpy.unique",
    "numpy.where",
    "range",
    "set",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.Info._update_redundant": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.Info.copy": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "copy.deepcopy",
    "mne.io.meas_info.Info"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.Info.normalize_proj": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "_normalize_proj"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.RAW_INFO_FIELDS": {
  "data": {
   "lineno": 1752
  },
  "type": "constant"
 },
 "mne.io.meas_info._empty_info": {
  "data": {
   "lineno": 1763,
   "symbols_in_volume": [
    "Transform",
    "float",
    "list",
    "mne.io.meas_info.Info"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._force_update_info": {
  "data": {
   "lineno": 1790,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "mne.io.meas_info.Info",
    "numpy.atleast_1d",
    "numpy.hstack",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._kind_dict": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.io.meas_info._make_dig_points": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._merge_dict_values": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "RuntimeError",
    "_check_isinstance",
    "_flatten",
    "_uniquify_projs",
    "_where_isinstance",
    "all",
    "any",
    "dict",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.all",
    "numpy.ndarray",
    "object_diff",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._merge_dict_values._check_isinstance": {
  "data": {
   "lineno": 1496,
   "symbols_in_volume": [
    "func",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._merge_dict_values._flatten": {
  "data": {
   "lineno": 1493
  },
  "type": "function"
 },
 "mne.io.meas_info._merge_dict_values._where_isinstance": {
  "data": {
   "lineno": 1499,
   "symbols_in_volume": [
    "isinstance",
    "numpy.where",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._merge_info": {
  "data": {
   "lineno": 1562,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "copy.deepcopy",
    "len",
    "list",
    "mne.io.meas_info.Info",
    "mne.io.meas_info._force_update_info",
    "mne.io.meas_info._merge_dict_values",
    "numpy.all",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._read_dig_fif": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "dir_tree_find",
    "len",
    "range",
    "read_tag",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._read_dig_points": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mne.io.meas_info.re",
    "numpy.array",
    "numpy.loadtxt",
    "open",
    "os.path.splitext",
    "scipy.io.loadmat",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._simplify_info": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "mne.io.meas_info.Info"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._stamp_to_dt": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "int",
    "len",
    "mne.io.meas_info.datetime"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info._summarize_str": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "mne.io.meas_info._write_dig_points": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "ValueError",
    "b",
    "len",
    "mne.io.meas_info.datetime",
    "numpy.asarray",
    "numpy.savetxt",
    "open",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.anonymize_info": {
  "data": {
   "lineno": 1819,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "mne.io.meas_info.Info"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.create_info": {
  "data": {
   "lineno": 1650,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "_set_montage",
    "dict",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.io.meas_info._empty_info",
    "mne.io.meas_info._kind_dict",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.float32",
    "numpy.int32",
    "numpy.zeros",
    "read_montage",
    "str",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.meas_info.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.meas_info.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.io.meas_info.loadmat": {
  "data": {
   "shadows": "scipy.io.loadmat"
  },
  "type": "import"
 },
 "mne.io.meas_info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.meas_info.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.meas_info.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.io.meas_info.read_bad_channels": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "dir_tree_find",
    "find_tag",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.read_fiducials": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "dir_tree_find",
    "fiff_open",
    "range",
    "read_tag"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.read_info": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "fiff_open",
    "mne.io.meas_info.read_meas_info"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.read_meas_info": {
  "data": {
   "lineno": 844,
   "symbols_in_volume": [
    "Transform",
    "ValueError",
    "_read_proc_history",
    "_read_proj",
    "b",
    "bool",
    "dict",
    "dir_tree_find",
    "events",
    "float",
    "int",
    "len",
    "list",
    "mne.io.meas_info.Info",
    "mne.io.meas_info._read_dig_fif",
    "mne.io.meas_info.read_bad_channels",
    "numpy.array",
    "numpy.dot",
    "range",
    "read_ctf_comp",
    "read_tag",
    "scipy.linalg.inv",
    "str",
    "text_type"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.write_dig": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "ValueError",
    "_to_const",
    "end_file",
    "len",
    "set",
    "start_file",
    "str",
    "tuple",
    "write_dig_points"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.write_fiducials": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "mne.io.meas_info.write_dig"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.write_info": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "end_block",
    "end_file",
    "mne.io.meas_info.write_meas_info",
    "start_block",
    "start_file"
   ]
  },
  "type": "function"
 },
 "mne.io.meas_info.write_meas_info": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "_write_proc_history",
    "_write_proj",
    "copy.deepcopy",
    "end_block",
    "enumerate",
    "len",
    "start_block",
    "write_ch_info",
    "write_coord_trans",
    "write_ctf_comp",
    "write_dig_points",
    "write_float",
    "write_float_matrix",
    "write_int",
    "write_julian",
    "write_name_list",
    "write_string"
   ]
  },
  "type": "function"
 },
 "mne.io.nicolet": {
  "data": {},
  "type": "module"
 },
 "mne.io.nicolet.nicolet": {
  "data": {},
  "type": "module"
 },
 "mne.io.nicolet.nicolet.RawNicolet": {
  "data": {
   "lineno": 128
  },
  "type": "class"
 },
 "mne.io.nicolet.nicolet.RawNicolet.__init__": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "_check_update_montage",
    "mne.io.nicolet.nicolet.RawNicolet",
    "mne.io.nicolet.nicolet._get_nicolet_info",
    "os.path.abspath",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.io.nicolet.nicolet.RawNicolet._read_segment_file": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "_read_segments_file"
   ]
  },
  "type": "function"
 },
 "mne.io.nicolet.nicolet._get_nicolet_info": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "TypeError",
    "_create_chs",
    "_empty_info",
    "_find_channels",
    "dict",
    "float",
    "int",
    "len",
    "mne.io.nicolet.nicolet.calendar",
    "mne.io.nicolet.nicolet.datetime",
    "numpy.repeat",
    "open",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "mne.io.nicolet.nicolet.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "mne.io.nicolet.nicolet.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "mne.io.nicolet.nicolet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.nicolet.nicolet.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.nicolet.nicolet.read_raw_nicolet": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mne.io.nicolet.nicolet.RawNicolet"
   ]
  },
  "type": "function"
 },
 "mne.io.nicolet.tests": {
  "data": {},
  "type": "module"
 },
 "mne.io.nicolet.tests.test_nicolet": {
  "data": {
   "symbols_in_volume": [
    "mne.io.nicolet.tests.test_nicolet.FILE",
    "mne.io.nicolet.tests.test_nicolet.base_dir",
    "mne.io.nicolet.tests.test_nicolet.inspect",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.nicolet.tests.test_nicolet.FILE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.io.nicolet.tests.test_nicolet._test_raw_reader": {
  "data": {
   "shadows": "mne.io.tests.test_raw._test_raw_reader"
  },
  "type": "import"
 },
 "mne.io.nicolet.tests.test_nicolet.base_dir": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.io.nicolet.tests.test_nicolet.fname": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.io.nicolet.tests.test_nicolet.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.nicolet.tests.test_nicolet.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.nicolet.tests.test_nicolet.read_raw_nicolet": {
  "data": {
   "shadows": "mne.io.read_raw_nicolet"
  },
  "type": "import"
 },
 "mne.io.nicolet.tests.test_nicolet.test_data": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mne.io.nicolet.tests.test_nicolet.fname",
    "mne.io.read_raw_nicolet",
    "mne.io.tests.test_raw._test_raw_reader"
   ]
  },
  "type": "function"
 },
 "mne.io.open": {
  "data": {},
  "type": "module"
 },
 "mne.io.open.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "mne.io.open.GzipFile": {
  "data": {
   "shadows": "gzip.GzipFile"
  },
  "type": "import"
 },
 "mne.io.open._fiff_get_fid": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "gzip.GzipFile",
    "isinstance",
    "open",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "mne.io.open._find_type": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "any",
    "int",
    "iteritems",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.io.open._get_next_fname": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "dir_tree_find",
    "int",
    "os.path.dirname",
    "os.path.join",
    "os.path.split",
    "read_tag"
   ]
  },
  "type": "function"
 },
 "mne.io.open._show_tree": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "Exception",
    "Tag",
    "dict",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.io.open._find_type",
    "numpy.ndarray",
    "read_tag",
    "scipy.sparse.issparse",
    "str",
    "text_type",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.open.fiff_open": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "io.BytesIO",
    "list",
    "make_dir_tree",
    "mne.io.open._fiff_get_fid",
    "read_big",
    "read_tag",
    "read_tag_info"
   ]
  },
  "type": "function"
 },
 "mne.io.open.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.open.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.open.show_fiff": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "list",
    "mne.io.open._show_tree",
    "mne.io.open.fiff_open",
    "numpy.inf",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.open.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.io.proj": {
  "data": {},
  "type": "module"
 },
 "mne.io.proj.ProjMixin": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.io.proj.ProjMixin.add_proj": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "any",
    "isinstance",
    "list",
    "mne.io.proj.Projection",
    "mne.io.proj._uniquify_projs",
    "mne.io.proj.deactivate_proj"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.ProjMixin.apply_proj": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "all",
    "copy.deepcopy",
    "enumerate",
    "isinstance",
    "len",
    "mne.io.proj.setup_proj",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.ProjMixin.del_proj": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.atleast_1d",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.ProjMixin.plot_projs_topomap": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ValueError",
    "find_layout",
    "isinstance",
    "len",
    "plot_projs_topomap",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.ProjMixin.proj": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "all",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.Projection": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "mne.io.proj.Projection.__repr__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "mne.io.proj.Projection.plot_topomap": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "plot_projs_topomap"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._check_projs": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "TypeError",
    "copy.deepcopy",
    "enumerate",
    "isinstance",
    "list",
    "mne.io.proj.Projection",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._has_eeg_average_ref_proj": {
  "data": {
   "lineno": 798
  },
  "type": "function"
 },
 "mne.io.proj._make_projector": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "math.sqrt",
    "numpy.dot",
    "numpy.eye",
    "numpy.sum",
    "numpy.unique",
    "numpy.zeros",
    "range",
    "scipy.linalg.svd",
    "set",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._needs_eeg_average_ref_proj": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "len",
    "mne.io.proj._has_eeg_average_ref_proj",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._normalize_proj": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "mne.io.proj._make_projector"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._proj_equal": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._read_proj": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dict",
    "dir_tree_find",
    "find_tag",
    "int",
    "len",
    "list",
    "mne.io.proj.Projection",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._uniquify_projs": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "any",
    "itertools.count",
    "len",
    "mne.io.proj._proj_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._uniquify_projs.sorter": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "int",
    "next"
   ]
  },
  "type": "function"
 },
 "mne.io.proj._write_proj": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "end_block",
    "len",
    "start_block",
    "write_float",
    "write_float_matrix",
    "write_int",
    "write_name_list",
    "write_string"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.activate_proj": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "mne.io.proj.deactivate_proj": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.proj.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.io.proj.make_eeg_average_ref_proj": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "len",
    "mne.io.proj.Projection",
    "numpy.ones",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.make_projector": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "mne.io.proj._make_projector"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.make_projector_info": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "mne.io.proj.make_projector"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.proj.setup_proj": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "mne.io.proj._needs_eeg_average_ref_proj",
    "mne.io.proj.activate_proj",
    "mne.io.proj.make_eeg_average_ref_proj",
    "mne.io.proj.make_projector_info"
   ]
  },
  "type": "function"
 },
 "mne.io.proj.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.io.reference": {
  "data": {},
  "type": "module"
 },
 "mne.io.reference._apply_reference": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "len",
    "numpy.intersect1d",
    "pick_channels",
    "pick_types",
    "setup_proj"
   ]
  },
  "type": "function"
 },
 "mne.io.reference._copy_channel": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "mne.io.reference.add_reference_channels": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "_has_eeg_average_ref_proj",
    "isinstance",
    "len",
    "list",
    "mne.io.reference.set_eeg_reference",
    "numpy.concatenate",
    "numpy.hstack",
    "numpy.vstack",
    "numpy.zeros",
    "pick_types",
    "str",
    "type",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.reference.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.io.reference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.reference.set_bipolar_reference": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "ValueError",
    "copy.deepcopy",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mne.io.reference._apply_reference",
    "mne.io.reference._copy_channel",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.reference.set_eeg_reference": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "DeprecationWarning",
    "Exception",
    "ValueError",
    "_has_eeg_average_ref_proj",
    "isinstance",
    "make_eeg_average_ref_proj",
    "mne.io.reference._apply_reference",
    "pick_types",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.io.tag": {
  "data": {
   "symbols_in_volume": [
    "functools.partial",
    "mne.io.tag._call_dict",
    "mne.io.tag._read_ch_info_struct",
    "mne.io.tag._read_complex_double",
    "mne.io.tag._read_complex_float",
    "mne.io.tag._read_coord_trans_struct",
    "mne.io.tag._read_dig_point_struct",
    "mne.io.tag._read_dir_entry_struct",
    "mne.io.tag._read_id_struct",
    "mne.io.tag._read_julian",
    "mne.io.tag._read_old_pack",
    "mne.io.tag._read_simple",
    "mne.io.tag._read_string",
    "mne.io.tag._simple_dict"
   ]
  },
  "type": "module"
 },
 "mne.io.tag.Tag": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.io.tag.Tag.__cmp__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mne.io.tag.Tag.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "int",
    "next"
   ]
  },
  "type": "function"
 },
 "mne.io.tag.Tag.__repr__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._call_dict": {
  "data": {
   "lineno": 444
  },
  "type": "constant"
 },
 "mne.io.tag._coil_trans_to_loc": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.roll"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._coord_dict": {
  "data": {
   "lineno": 392
  },
  "type": "constant"
 },
 "mne.io.tag._data_type": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "mne.io.tag._fromstring_rows": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.dtype",
    "numpy.fromstring",
    "numpy.prod"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._is_matrix": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "mne.io.tag._loc_to_coil_trans": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "numpy.reshape",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._loc_to_eeg_loc": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.newaxis.copy"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._matrix_coding_CCS": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "mne.io.tag._matrix_coding_RCS": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "mne.io.tag._matrix_coding_dense": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "mne.io.tag._read_ch_info_struct": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "dict",
    "float",
    "int",
    "mne.io.tag._coord_dict",
    "numpy.argmax",
    "numpy.float64",
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_complex_double": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "mne.io.tag._fromstring_rows"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_complex_float": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "mne.io.tag._fromstring_rows"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_coord_trans_struct": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "Transform",
    "int",
    "numpy.array",
    "numpy.c_",
    "numpy.fromstring",
    "numpy.r_"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_dig_point_struct": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "dict",
    "int",
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_dir_entry_struct": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "mne.io.tag._read_tag_header",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_id_struct": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "dict",
    "int",
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_julian": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "int",
    "jd2jcal",
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_matrix": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "int",
    "len",
    "mne.io.tag._data_type",
    "mne.io.tag._matrix_coding_CCS",
    "mne.io.tag._matrix_coding_RCS",
    "mne.io.tag._matrix_coding_dense",
    "mne.io.tag.read_big",
    "numpy.any",
    "numpy.concatenate",
    "numpy.fromstring",
    "scipy.sparse.csc_matrix",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_old_pack": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "float",
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_simple": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "mne.io.tag._fromstring_rows"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_string": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "mne.io.tag._fromstring_rows",
    "text_type"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._read_tag_header": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "len",
    "mne.io.tag.Tag",
    "mne.io.tag.struct"
   ]
  },
  "type": "function"
 },
 "mne.io.tag._simple_dict": {
  "data": {
   "lineno": 458
  },
  "type": "constant"
 },
 "mne.io.tag.find_tag": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "mne.io.tag.read_tag"
   ]
  },
  "type": "function"
 },
 "mne.io.tag.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "mne.io.tag.has_tag": {
  "data": {
   "lineno": 540
  },
  "type": "function"
 },
 "mne.io.tag.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tag.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.io.tag.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.io.tag.read_big": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "bytearray",
    "bytes",
    "int",
    "isinstance",
    "len",
    "mne.io.tag.gzip",
    "mne.io.tag.os",
    "numpy.arange",
    "numpy.r_",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.tag.read_tag": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "Exception",
    "fun",
    "mne.io.tag._call_dict",
    "mne.io.tag._is_matrix",
    "mne.io.tag._read_matrix",
    "mne.io.tag._read_tag_header"
   ]
  },
  "type": "function"
 },
 "mne.io.tag.read_tag_info": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "mne.io.tag._read_tag_header"
   ]
  },
  "type": "function"
 },
 "mne.io.tag.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.io.tag.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "mne.io.tests": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.data_dir": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "mne.io.tests.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_apply_function.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.bad_1": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "mne.io.tests.test_apply_function.bad_2": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "mne.io.tests.test_apply_function.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.logger": {
  "data": {
   "shadows": "mne.utils.logger"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.printer": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mne.utils.logger.info"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_apply_function.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_apply_function.test_apply_function_verbose": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.tests.test_apply_function.bad_1",
    "mne.io.tests.test_apply_function.bad_2",
    "mne.io.tests.test_apply_function.printer",
    "mne.io.tests.test_apply_function.pytest",
    "mne.utils.catch_logging",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.zeros",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_compensator": {
  "data": {
   "symbols_in_volume": [
    "mne.io.tests.test_compensator.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_compensator.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.base_dir": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.io.tests.test_compensator.ctf_comp_fname": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.io.tests.test_compensator.get_current_comp": {
  "data": {
   "shadows": "mne.io.compensator.get_current_comp"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.make_compensator": {
  "data": {
   "shadows": "mne.io.compensator.make_compensator"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_compensator.test_compensation": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "mne.io.compensator.get_current_comp",
    "mne.io.compensator.make_compensator",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_compensator.ctf_comp_fname",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "numpy.dot",
    "numpy.eye",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.join",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_compensator.test_compensation_mne": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "compensate_mne",
    "make_evoked",
    "mne.io.tests.test_compensator.ctf_comp_fname",
    "mne.pick_types",
    "mne.utils._TempDir",
    "mne.utils.requires_mne",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_compensator.test_compensation_mne.compensate_mne": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "mne.read_evokeds",
    "mne.utils.run_subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_compensator.test_compensation_mne.make_evoked": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "numpy.array",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info": {
  "data": {
   "symbols_in_volume": [
    "mne.io.tests.test_meas_info.base_dir",
    "mne.io.tests.test_meas_info.kit_data_dir",
    "mne.io.tests.test_meas_info.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_meas_info.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.Info": {
  "data": {
   "shadows": "mne.io.meas_info.Info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.RAW_INFO_FIELDS": {
  "data": {
   "shadows": "mne.io.meas_info.RAW_INFO_FIELDS"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._coil_trans_to_loc": {
  "data": {
   "shadows": "mne.io._coil_trans_to_loc"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._force_update_info": {
  "data": {
   "shadows": "mne.io.meas_info._force_update_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._loc_to_coil_trans": {
  "data": {
   "shadows": "mne.io._loc_to_coil_trans"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._make_dig_points": {
  "data": {
   "shadows": "mne.io.meas_info._make_dig_points"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._merge_info": {
  "data": {
   "shadows": "mne.io.meas_info._merge_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._read_dig_points": {
  "data": {
   "shadows": "mne.io.meas_info._read_dig_points"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info._write_dig_points": {
  "data": {
   "shadows": "mne.io.meas_info._write_dig_points"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.anonymize_info": {
  "data": {
   "shadows": "mne.io.anonymize_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.base_dir": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.chpi_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.create_info": {
  "data": {
   "shadows": "mne.io.meas_info.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.elp_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.event_name": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.fiducials_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.hsp_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.kit_data_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.raw_fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.io.tests.test_meas_info.read_dig_montage": {
  "data": {
   "shadows": "mne.channels.montage.read_dig_montage"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.read_fiducials": {
  "data": {
   "shadows": "mne.io.read_fiducials"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.read_montage": {
  "data": {
   "shadows": "mne.channels.montage.read_montage"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.test_anonymize": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "mne.Epochs",
    "mne.io.anonymize_info",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_meas_info.event_name",
    "mne.io.tests.test_meas_info.raw_fname",
    "mne.read_events",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.any",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_check_consistency": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "all",
    "float",
    "isinstance",
    "len",
    "mne.io.meas_info.create_info",
    "mne.io.tests.test_meas_info.warnings",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_coil_trans": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "mne.io._coil_trans_to_loc",
    "mne.io._loc_to_coil_trans",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_fiducials_io": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "mne.io.constants.FIFF.FIFFV_COORD_MRI",
    "mne.io.constants.FIFF.FIFFV_POINT_CARDINAL",
    "mne.io.read_fiducials",
    "mne.io.tests.test_meas_info.fiducials_fname",
    "mne.io.write_fiducials",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_info": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "all",
    "dict",
    "events",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.Epochs",
    "mne.io.meas_info.Info",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_meas_info.event_name",
    "mne.io.tests.test_meas_info.raw_fname",
    "mne.read_events",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_io_dig_points": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "mne.io.meas_info._read_dig_points",
    "mne.io.meas_info._write_dig_points",
    "mne.io.tests.test_meas_info.hsp_fname",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.savetxt",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_make_dig_points": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "mne.io.constants.FIFF.FIFFV_POINT_NASION",
    "mne.io.meas_info._make_dig_points",
    "mne.io.meas_info._read_dig_points",
    "mne.io.meas_info.create_info",
    "mne.io.tests.test_meas_info.elp_fname",
    "mne.io.tests.test_meas_info.hsp_fname",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_make_info": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "mne.channels.montage.read_dig_montage",
    "mne.channels.montage.read_montage",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG",
    "mne.io.constants.FIFF.FIFFV_POINT_NASION",
    "mne.io.meas_info.RAW_INFO_FIELDS",
    "mne.io.meas_info.create_info",
    "mne.io.tests.test_meas_info.elp_fname",
    "mne.io.tests.test_meas_info.hsp_fname",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_merge_info": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "mne.io.meas_info._force_update_info",
    "mne.io.meas_info._merge_info",
    "mne.io.meas_info.create_info",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_read_write_info": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len",
    "mne.io.read_info",
    "mne.io.tests.test_meas_info.chpi_fname",
    "mne.io.tests.test_meas_info.raw_fname",
    "mne.io.write_info",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.test_redundant": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "mne.io.meas_info.create_info",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_meas_info.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.write_fiducials": {
  "data": {
   "shadows": "mne.io.write_fiducials"
  },
  "type": "import"
 },
 "mne.io.tests.test_meas_info.write_info": {
  "data": {
   "shadows": "mne.io.write_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.tests.test_pick.data_path",
    "mne.io.tests.test_pick.inspect",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_pick.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick._check_fwd_n_chan_consistent": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick._picks_by_type": {
  "data": {
   "shadows": "mne.io.pick._picks_by_type"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick._root_init_fname": {
  "data": {
   "shadows": "mne.__file__"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.channel_indices_by_type": {
  "data": {
   "shadows": "mne.io.pick.channel_indices_by_type"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.channel_type": {
  "data": {
   "shadows": "mne.io.pick.channel_type"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.data_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.fname_mc": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.fname_meeg": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.io_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.io.tests.test_pick.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_channels_regexp": {
  "data": {
   "shadows": "mne.pick_channels_regexp"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.pick_types_forward": {
  "data": {
   "shadows": "mne.io.pick.pick_types_forward"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.rename_channels": {
  "data": {
   "shadows": "mne.rename_channels"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.test_clean_info_bads": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.__file__",
    "mne.io.read_raw_fif",
    "mne.pick_info",
    "mne.pick_types",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_bio": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "mne.create_info",
    "mne.io.pick.channel_indices_by_type",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_channels_regexp": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mne.pick_channels_regexp",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_chpi": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "mne.io.pick.channel_type",
    "mne.io.read_info",
    "mne.io.tests.test_pick.io_dir",
    "nose.tools.assert_true",
    "os.path.join",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_fnirs": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "mne.create_info",
    "mne.io.pick.channel_indices_by_type",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_forward_seeg_ecog": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG",
    "mne.io.constants.FIFF.FIFFV_ECOG_CH",
    "mne.io.constants.FIFF.FIFFV_SEEG_CH",
    "mne.io.pick.channel_indices_by_type",
    "mne.io.pick.pick_types_forward",
    "mne.io.tests.test_pick._check_fwd_n_chan_consistent",
    "mne.io.tests.test_pick.fname_meeg",
    "mne.read_forward_solution",
    "mne.rename_channels",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_refs": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "mne.io.read_raw_bti",
    "mne.io.read_raw_fif",
    "mne.io.read_raw_kit",
    "mne.io.tests.test_pick.io_dir",
    "mne.io.tests.test_pick.warnings",
    "mne.pick_info",
    "mne.pick_types",
    "nose.tools.assert_raises",
    "numpy.concatenate",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_pick_seeg_ecog": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "enumerate",
    "events",
    "len",
    "mne.Epochs",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.pick.channel_indices_by_type",
    "mne.io.pick.channel_type",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_pick.io_dir",
    "mne.pick_types",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.test_picks_by_channels": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.pick._picks_by_type",
    "mne.pick_channels",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_pick.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.tests.test_pick.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history": {
  "data": {
   "symbols_in_volume": [
    "mne.io.tests.test_proc_history.base_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_proc_history.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history._get_rank_sss": {
  "data": {
   "shadows": "mne.io.proc_history._get_rank_sss"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.base_dir": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.io.tests.test_proc_history.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.raw_fname": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.io.tests.test_proc_history.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_proc_history.test_maxfilter_get_rank": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mne.io.proc_history._get_rank_sss",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_proc_history.raw_fname",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_proc_history.test_maxfilter_io": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "all",
    "len",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.io.constants.FIFF.items",
    "mne.io.read_info",
    "mne.io.tests.test_proc_history.raw_fname",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.diag",
    "numpy.float32",
    "numpy.unique",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw": {
  "data": {},
  "type": "module"
 },
 "mne.io.tests.test_raw._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw._test_concat": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.argmin",
    "numpy.testing.assert_allclose",
    "reader"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw._test_raw_reader": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "int",
    "len",
    "min",
    "mne.concatenate_raws",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_raw.math",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.append",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.where",
    "os.path.join",
    "reader",
    "repr",
    "round",
    "set",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.concatenate_raws": {
  "data": {
   "shadows": "mne.concatenate_raws"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_raw.test_time_index": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "os.path.dirname",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_raw.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.tests.test_reference.data_dir",
    "mne.io.tests.test_reference.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.io.tests.test_reference.BaseEpochs": {
  "data": {
   "shadows": "mne.epochs.BaseEpochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.Projection": {
  "data": {
   "shadows": "mne.io.proj.Projection"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference._apply_reference": {
  "data": {
   "shadows": "mne.io.reference._apply_reference"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference._check_channel_names": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "mne.pick_channels",
    "nose.tools.assert_true",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_reference._has_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj._has_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference._test_reference": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "isinstance",
    "mne.epochs.BaseEpochs",
    "mne.pick_types",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.add_reference_channels": {
  "data": {
   "shadows": "mne.add_reference_channels"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.ave_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.io.tests.test_reference.data_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.io.tests.test_reference.eve_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.io.tests.test_reference.fif_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.io.tests.test_reference.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.set_bipolar_reference": {
  "data": {
   "shadows": "mne.set_bipolar_reference"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.set_eeg_reference": {
  "data": {
   "shadows": "mne.set_eeg_reference"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.test_add_reference": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.add_reference_channels",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_reference._check_channel_names",
    "mne.io.tests.test_reference.eve_fname",
    "mne.io.tests.test_reference.fif_fname",
    "mne.io.tests.test_reference.warnings",
    "mne.pick_types",
    "mne.read_events",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_apply_reference": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "events",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.proj.Projection",
    "mne.io.proj._has_eeg_average_ref_proj",
    "mne.io.read_raw_fif",
    "mne.io.reference._apply_reference",
    "mne.io.tests.test_reference._test_reference",
    "mne.io.tests.test_reference.eve_fname",
    "mne.io.tests.test_reference.fif_fname",
    "mne.pick_types",
    "mne.read_events",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_set_bipolar_reference": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG_BIPOLAR",
    "mne.io.constants.FIFF.FIFFV_EOG_CH",
    "mne.io.constants.FIFF.FIFFV_MEG_CH",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_reference.fif_fname",
    "mne.set_bipolar_reference",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.test_set_eeg_reference": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.proj._has_eeg_average_ref_proj",
    "mne.io.read_raw_fif",
    "mne.io.tests.test_reference._test_reference",
    "mne.io.tests.test_reference.fif_fname",
    "mne.io.tests.test_reference.warnings",
    "mne.pick_types",
    "mne.set_eeg_reference",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.io.tests.test_reference.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.io.tests.test_reference.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.io.tree": {
  "data": {},
  "type": "module"
 },
 "mne.io.tree.copy_tree": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "Tag",
    "_write",
    "end_block",
    "isinstance",
    "len",
    "list",
    "numpy.fromstring",
    "start_block",
    "write_id"
   ]
  },
  "type": "function"
 },
 "mne.io.tree.dir_tree_find": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "mne.io.tree.make_dir_tree": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "dict",
    "len",
    "list",
    "read_tag"
   ]
  },
  "type": "function"
 },
 "mne.io.tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.utils": {
  "data": {},
  "type": "module"
 },
 "mne.io.utils._blk_read_lims": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "all",
    "int",
    "isinstance",
    "numpy.empty",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.io.utils._create_chs": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "enumerate",
    "list",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.utils._find_channels": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "any",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "mne.io.utils._mult_cal_one": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asarray",
    "numpy.dot",
    "numpy.take",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.io.utils._read_segments_file": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "int",
    "min",
    "mne.io.utils._mult_cal_one",
    "numpy.arange",
    "numpy.dtype",
    "numpy.fromfile",
    "numpy.vstack",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.io.utils._synthesize_stim_channel": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "events",
    "int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.io.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.io.utils.read_str": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "b",
    "numpy.dtype",
    "numpy.fromstring",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm.inverse": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm.inverse.InverseOperator": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "mne.minimum_norm.inverse.InverseOperator.__repr__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "len",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.InverseOperator.copy": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "copy.deepcopy",
    "mne.minimum_norm.inverse.InverseOperator"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._apply_inverse_epochs_gen": {
  "data": {
   "lineno": 1014,
   "symbols_in_volume": [
    "_make_stc",
    "enumerate",
    "len",
    "mne.minimum_norm.inverse._assemble_kernel",
    "mne.minimum_norm.inverse._check_ch_names",
    "mne.minimum_norm.inverse._check_method",
    "mne.minimum_norm.inverse._check_ori",
    "mne.minimum_norm.inverse._pick_channels_inverse_operator",
    "mne.minimum_norm.inverse._subject_from_inverse",
    "mne.minimum_norm.inverse.combine_xyz",
    "mne.minimum_norm.inverse.prepare_inverse_operator",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._assemble_kernel": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "ValueError",
    "_get_vertno",
    "label_src_vertno_sel",
    "numpy.c_",
    "numpy.dot",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._check_ch_names": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._check_loose_forward": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "convert_forward_solution",
    "float",
    "is_fixed_orient",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._check_method": {
  "data": {
   "lineno": 718,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._check_ori": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._check_reference": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "ValueError",
    "_needs_eeg_average_ref_proj"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._pick_channels_inverse_operator": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "list"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._prepare_forward": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "_get_whitener",
    "all",
    "len",
    "pick_info"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse._subject_from_inverse": {
  "data": {
   "lineno": 784
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.apply_inverse": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "_make_stc",
    "float",
    "len",
    "mne.minimum_norm.inverse._assemble_kernel",
    "mne.minimum_norm.inverse._check_ch_names",
    "mne.minimum_norm.inverse._check_method",
    "mne.minimum_norm.inverse._check_ori",
    "mne.minimum_norm.inverse._check_reference",
    "mne.minimum_norm.inverse._pick_channels_inverse_operator",
    "mne.minimum_norm.inverse._subject_from_inverse",
    "mne.minimum_norm.inverse.combine_xyz",
    "mne.minimum_norm.inverse.prepare_inverse_operator",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.apply_inverse_epochs": {
  "data": {
   "lineno": 1080,
   "symbols_in_volume": [
    "mne.minimum_norm.inverse._apply_inverse_epochs_gen"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.apply_inverse_raw": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "_make_stc",
    "float",
    "int",
    "len",
    "mne.minimum_norm.inverse._assemble_kernel",
    "mne.minimum_norm.inverse._check_ch_names",
    "mne.minimum_norm.inverse._check_method",
    "mne.minimum_norm.inverse._check_ori",
    "mne.minimum_norm.inverse._check_reference",
    "mne.minimum_norm.inverse._pick_channels_inverse_operator",
    "mne.minimum_norm.inverse._subject_from_inverse",
    "mne.minimum_norm.inverse.combine_xyz",
    "mne.minimum_norm.inverse.prepare_inverse_operator",
    "numpy.ceil",
    "numpy.dot",
    "numpy.empty",
    "numpy.result_type",
    "range",
    "time_func"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.chi2": {
  "data": {
   "shadows": "scipy.stats.chi2"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.combine_xyz": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "ValueError",
    "numpy.abs",
    "numpy.iscomplexobj",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.compute_rank_inverse": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "make_projector",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.estimate_snr": {
  "data": {
   "lineno": 1551,
   "symbols_in_volume": [
    "bool",
    "len",
    "mne.minimum_norm.inverse._check_ch_names",
    "mne.minimum_norm.inverse._check_reference",
    "mne.minimum_norm.inverse._pick_channels_inverse_operator",
    "mne.minimum_norm.inverse.prepare_inverse_operator",
    "numpy.dot",
    "numpy.empty",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "range",
    "scipy.stats.chi2.isf",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.make_inverse_operator": {
  "data": {
   "lineno": 1228,
   "symbols_in_volume": [
    "ValueError",
    "channel_type",
    "compute_depth_prior",
    "compute_orient_prior",
    "convert_forward_solution",
    "copy.deepcopy",
    "dict",
    "enumerate",
    "float",
    "is_fixed_orient",
    "len",
    "math.sqrt",
    "mne.minimum_norm.inverse.InverseOperator",
    "mne.minimum_norm.inverse._check_loose_forward",
    "mne.minimum_norm.inverse._prepare_forward",
    "numpy.dot",
    "numpy.max",
    "numpy.ones",
    "numpy.sqrt",
    "scipy.linalg.norm",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.prepare_inverse_operator": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "make_projector",
    "math.sqrt",
    "mne.minimum_norm.inverse.InverseOperator",
    "mne.minimum_norm.inverse.combine_xyz",
    "nrm2",
    "numpy.abs",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.eye",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "range",
    "scipy.linalg.get_blas_funcs"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.read_inverse_operator": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Covariance",
    "Exception",
    "ValueError",
    "_ensure_trans",
    "_read_cov",
    "_read_forward_meas_info",
    "_read_named_matrix",
    "_read_proj",
    "_read_source_spaces_from_tree",
    "check_fname",
    "dict",
    "dir_tree_find",
    "fiff_open",
    "find_source_space_hemi",
    "find_tag",
    "getattr",
    "int",
    "len",
    "mne.minimum_norm.inverse.InverseOperator",
    "range",
    "transform_surface_to"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.inverse.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.minimum_norm.inverse.write_inverse_operator": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "_transpose_named_matrix",
    "_write_cov",
    "_write_proj",
    "_write_source_spaces_to_fid",
    "check_fname",
    "end_block",
    "end_file",
    "start_block",
    "start_file",
    "write_coord_trans",
    "write_float",
    "write_float_matrix",
    "write_forward_meas_info",
    "write_int",
    "write_named_matrix",
    "write_string"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.psf_ctf": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm.psf_ctf._get_matrix_from_inverse_operator": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "EvokedArray",
    "RuntimeError",
    "apply_inverse",
    "len",
    "mne.minimum_norm.psf_ctf._prepare_info",
    "numpy.concatenate",
    "numpy.eye",
    "numpy.intersect1d",
    "numpy.newaxis",
    "numpy.searchsorted",
    "numpy.sum",
    "numpy.vstack",
    "scipy.linalg.svd",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.psf_ctf._pick_leadfield": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pick_channels"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.psf_ctf._prepare_info": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.psf_ctf.cross_talk_function": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "SourceEstimate",
    "_subject_from_inverse",
    "convert_forward_solution",
    "mne.minimum_norm.psf_ctf._get_matrix_from_inverse_operator",
    "mne.minimum_norm.psf_ctf._pick_leadfield",
    "numpy.abs",
    "numpy.dot",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.psf_ctf.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.minimum_norm.psf_ctf.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.minimum_norm.psf_ctf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.psf_ctf.point_spread_function": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "EvokedArray",
    "ValueError",
    "apply_inverse",
    "convert_forward_solution",
    "len",
    "mne.minimum_norm.psf_ctf._pick_leadfield",
    "mne.minimum_norm.psf_ctf._prepare_info",
    "numpy.concatenate",
    "numpy.intersect1d",
    "numpy.newaxis",
    "numpy.newaxis.T",
    "numpy.r_.T",
    "numpy.searchsorted",
    "numpy.sum",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm.tests.test_inverse": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.minimum_norm.tests.test_inverse.s_path",
    "mne.minimum_norm.tests.test_inverse.s_path_bem",
    "mne.minimum_norm.tests.test_inverse.snr",
    "mne.minimum_norm.tests.test_inverse.test_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_inverse.Covariance": {
  "data": {
   "shadows": "mne.Covariance"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.Epochs": {
  "data": {
   "shadows": "mne.epochs.Epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.EvokedArray": {
  "data": {
   "shadows": "mne.EvokedArray"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.Info": {
  "data": {
   "shadows": "mne.io.Info"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.VolSourceEstimate": {
  "data": {
   "shadows": "mne.source_estimate.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse._compare": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "mne.externals.six.iteritems",
    "mne.io.Info",
    "mne.minimum_norm.tests.test_inverse.last_keys",
    "nose.tools.assert_true",
    "numpy.ndarray",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "print",
    "scipy.sparse.csr.csr_matrix",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse._compare_inverses_approx": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "float",
    "len",
    "mne.EvokedArray",
    "mne.minimum_norm.inverse.apply_inverse",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.corrcoef",
    "numpy.dot",
    "numpy.eye",
    "numpy.max",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse._compare_io": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "ValueError",
    "mne.minimum_norm.inverse.read_inverse_operator",
    "mne.minimum_norm.inverse.write_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._compare",
    "mne.minimum_norm.tests.test_inverse.copy",
    "mne.utils._TempDir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse._get_evoked": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "mne.minimum_norm.tests.test_inverse.fname_data",
    "mne.read_evokeds"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.apply_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.inverse.apply_inverse"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.apply_inverse_epochs": {
  "data": {
   "shadows": "mne.minimum_norm.inverse.apply_inverse_epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.apply_inverse_raw": {
  "data": {
   "shadows": "mne.minimum_norm.inverse.apply_inverse_raw"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_naming": {
  "data": {
   "shadows": "mne.tests.common.assert_naming"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.combine_evoked": {
  "data": {
   "shadows": "mne.combine_evoked"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.compute_rank_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.inverse.compute_rank_inverse"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.fname_bem": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_cov": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_data": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_event": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_full": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_fwd": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_inv": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_depth": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_nodepth": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_inv_meeg_diag": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_label": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_raw": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_trans": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.fname_vol_inv": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.label_sign_flip": {
  "data": {
   "shadows": "mne.label.label_sign_flip"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.lambda2": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.last_keys": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.make_forward_solution": {
  "data": {
   "shadows": "mne.make_forward_solution"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.make_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.inverse.make_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.prepare_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.inverse.prepare_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_events": {
  "data": {
   "shadows": "mne.event.read_events"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_forward_solution_eeg": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "mne.convert_forward_solution",
    "mne.pick_types_forward",
    "mne.read_forward_solution"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "mne.convert_forward_solution",
    "mne.pick_types_forward",
    "mne.read_forward_solution"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.inverse.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_label": {
  "data": {
   "shadows": "mne.label.read_label"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.read_source_estimate": {
  "data": {
   "shadows": "mne.source_estimate.read_source_estimate"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.s_path": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.s_path_bem": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.six": {
  "data": {
   "shadows": "mne.externals.six"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.snr": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.src_fname": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_inverse_operator": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.read_label",
    "mne.minimum_norm.inverse.apply_inverse",
    "mne.minimum_norm.inverse.compute_rank_inverse",
    "mne.minimum_norm.inverse.prepare_inverse_operator",
    "mne.minimum_norm.inverse.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._get_evoked",
    "mne.minimum_norm.tests.test_inverse.fname_full",
    "mne.minimum_norm.tests.test_inverse.fname_label",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_mne_inverse_epochs": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "dict",
    "events",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.epochs.Epochs",
    "mne.event.read_events",
    "mne.io.read_raw_fif",
    "mne.label.label_sign_flip",
    "mne.label.read_label",
    "mne.minimum_norm.inverse.apply_inverse_epochs",
    "mne.minimum_norm.inverse.prepare_inverse_operator",
    "mne.minimum_norm.inverse.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_event",
    "mne.minimum_norm.tests.test_inverse.fname_full",
    "mne.minimum_norm.tests.test_inverse.fname_label",
    "mne.minimum_norm.tests.test_inverse.fname_raw",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.pick_types",
    "nose.tools.assert_true",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.testing.assert_array_almost_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_mne_inverse_fixed_raw": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.label.read_label",
    "mne.minimum_norm.inverse.apply_inverse_raw",
    "mne.minimum_norm.inverse.make_inverse_operator",
    "mne.minimum_norm.inverse.prepare_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_cov",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.fname_label",
    "mne.minimum_norm.tests.test_inverse.fname_raw",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg",
    "mne.read_cov",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_apply_mne_inverse_raw": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.label.read_label",
    "mne.minimum_norm.inverse.apply_inverse_raw",
    "mne.minimum_norm.inverse.prepare_inverse_operator",
    "mne.minimum_norm.inverse.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse.fname_full",
    "mne.minimum_norm.tests.test_inverse.fname_label",
    "mne.minimum_norm.tests.test_inverse.fname_raw",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_operator_channel_ordering": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "len",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.make_forward_solution",
    "mne.minimum_norm.inverse.apply_inverse",
    "mne.minimum_norm.inverse.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._get_evoked",
    "mne.minimum_norm.tests.test_inverse.fname_bem",
    "mne.minimum_norm.tests.test_inverse.fname_cov",
    "mne.minimum_norm.tests.test_inverse.fname_trans",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.minimum_norm.tests.test_inverse.src_fname",
    "mne.read_cov",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.ix_",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_operator_noise_cov_rank": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "dict",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.inverse.compute_rank_inverse",
    "mne.minimum_norm.inverse.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._get_evoked",
    "mne.minimum_norm.tests.test_inverse.fname_cov",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_eeg",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg",
    "mne.read_cov",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_inverse_operator_volume": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "isinstance",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.inverse.apply_inverse",
    "mne.minimum_norm.inverse.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._get_evoked",
    "mne.minimum_norm.tests.test_inverse.fname_vol_inv",
    "mne.minimum_norm.tests.test_inverse.lambda2",
    "mne.source_estimate.VolSourceEstimate",
    "mne.source_estimate.read_source_estimate",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_io_inverse_operator": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "isinstance",
    "mne.Covariance",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.inverse.prepare_inverse_operator",
    "mne.minimum_norm.inverse.read_inverse_operator",
    "mne.minimum_norm.inverse.write_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._compare",
    "mne.minimum_norm.tests.test_inverse._compare_io",
    "mne.minimum_norm.tests.test_inverse.fname_inv",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.minimum_norm.tests.test_inverse.warnings",
    "mne.tests.common.assert_naming",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.inverse.make_inverse_operator",
    "mne.minimum_norm.inverse.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._compare_inverses_approx",
    "mne.minimum_norm.tests.test_inverse._compare_io",
    "mne.minimum_norm.tests.test_inverse._get_evoked",
    "mne.minimum_norm.tests.test_inverse.fname_cov",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.fname_inv",
    "mne.minimum_norm.tests.test_inverse.pytest",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg",
    "mne.read_cov",
    "nose.tools.assert_true",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_bads": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.inverse.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._get_evoked",
    "mne.minimum_norm.tests.test_inverse.fname_cov",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg",
    "mne.read_cov",
    "nose.tools.assert_true",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_diag": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.inverse.compute_rank_inverse",
    "mne.minimum_norm.inverse.make_inverse_operator",
    "mne.minimum_norm.inverse.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._compare_inverses_approx",
    "mne.minimum_norm.tests.test_inverse._compare_io",
    "mne.minimum_norm.tests.test_inverse._get_evoked",
    "mne.minimum_norm.tests.test_inverse.fname_cov",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.fname_inv_meeg_diag",
    "mne.read_cov",
    "mne.read_forward_solution",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_fixed": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.inverse.compute_rank_inverse",
    "mne.minimum_norm.inverse.make_inverse_operator",
    "mne.minimum_norm.inverse.read_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._compare_inverses_approx",
    "mne.minimum_norm.tests.test_inverse._get_evoked",
    "mne.minimum_norm.tests.test_inverse.fname_cov",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_depth",
    "mne.minimum_norm.tests.test_inverse.fname_inv_fixed_nodepth",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg",
    "mne.read_cov",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_allclose",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_free": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "ValueError",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.inverse.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._compare_inverses_approx",
    "mne.minimum_norm.tests.test_inverse._get_evoked",
    "mne.minimum_norm.tests.test_inverse.fname_cov",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg",
    "mne.read_cov",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_make_inverse_operator_vector": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "mne.combine_evoked",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.inverse.apply_inverse",
    "mne.minimum_norm.inverse.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._get_evoked",
    "mne.minimum_norm.tests.test_inverse.fname_cov",
    "mne.minimum_norm.tests.test_inverse.fname_data",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.read_forward_solution_meg",
    "mne.read_cov",
    "mne.read_evokeds",
    "nose.tools.assert_raises",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.test_path": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_inverse.test_warn_inverse_operator": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "len",
    "list",
    "mne.convert_forward_solution",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.inverse.make_inverse_operator",
    "mne.minimum_norm.tests.test_inverse._get_evoked",
    "mne.minimum_norm.tests.test_inverse.copy",
    "mne.minimum_norm.tests.test_inverse.fname_cov",
    "mne.minimum_norm.tests.test_inverse.fname_fwd",
    "mne.minimum_norm.tests.test_inverse.warnings",
    "mne.read_cov",
    "mne.read_forward_solution",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_inverse.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_inverse.write_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.inverse.write_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.minimum_norm.tests.test_psf_ctf.data_path",
    "mne.minimum_norm.tests.test_psf_ctf.snr",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_psf_ctf.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.cross_talk_function": {
  "data": {
   "shadows": "mne.minimum_norm.cross_talk_function"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.data_path": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_psf_ctf.fname_fwd": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_psf_ctf.fname_inv_meeg": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_psf_ctf.fname_inv_meg": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_psf_ctf.fname_label": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_psf_ctf.lambda2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_psf_ctf.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.point_spread_function": {
  "data": {
   "shadows": "mne.minimum_norm.point_spread_function"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_psf_ctf.snr": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_psf_ctf.test_psf_ctf": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.cross_talk_function",
    "mne.minimum_norm.point_spread_function",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_psf_ctf.fname_fwd",
    "mne.minimum_norm.tests.test_psf_ctf.fname_inv_meeg",
    "mne.minimum_norm.tests.test_psf_ctf.fname_inv_meg",
    "mne.minimum_norm.tests.test_psf_ctf.fname_label",
    "mne.minimum_norm.tests.test_psf_ctf.lambda2",
    "mne.minimum_norm.tests.test_psf_ctf.mne",
    "mne.minimum_norm.tests.test_psf_ctf.pytest",
    "mne.read_forward_solution",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_psf_ctf.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.minimum_norm.tests.test_snr.s_path",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_snr._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.estimate_snr": {
  "data": {
   "shadows": "mne.minimum_norm.estimate_snr"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.fname_evoked": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_snr.fname_inv": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_snr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_snr.s_path": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_snr.test_snr": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.estimate_snr",
    "mne.minimum_norm.read_inverse_operator",
    "mne.minimum_norm.tests.test_snr.fname_evoked",
    "mne.minimum_norm.tests.test_snr.fname_inv",
    "mne.minimum_norm.tests.test_snr.os",
    "mne.read_evokeds",
    "mne.utils._TempDir",
    "mne.utils.requires_mne",
    "mne.utils.run_subprocess",
    "numpy.loadtxt",
    "numpy.testing.assert_allclose",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_snr.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.minimum_norm.tests.test_time_frequency.data_path",
    "mne.minimum_norm.tests.test_time_frequency.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.minimum_norm.tests.test_time_frequency.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.apply_inverse_epochs": {
  "data": {
   "shadows": "mne.minimum_norm.inverse.apply_inverse_epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.compute_source_psd": {
  "data": {
   "shadows": "mne.minimum_norm.time_frequency.compute_source_psd"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.compute_source_psd_epochs": {
  "data": {
   "shadows": "mne.minimum_norm.time_frequency.compute_source_psd_epochs"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.data_path": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_time_frequency.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.fname_data": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_time_frequency.fname_inv": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_time_frequency.fname_label": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.minimum_norm.tests.test_time_frequency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.prepare_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.inverse.prepare_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.psd_array_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.multitaper.psd_array_multitaper"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.inverse.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.read_label": {
  "data": {
   "shadows": "mne.label.read_label"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.source_band_induced_power": {
  "data": {
   "shadows": "mne.minimum_norm.time_frequency.source_band_induced_power"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.source_induced_power": {
  "data": {
   "shadows": "mne.minimum_norm.time_frequency.source_induced_power"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.test_source_psd": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.io.constants.FIFF.FIFFV_MNE_FREE_ORI",
    "mne.io.read_raw_fif",
    "mne.minimum_norm.inverse.read_inverse_operator",
    "mne.minimum_norm.tests.test_time_frequency.fname_data",
    "mne.minimum_norm.tests.test_time_frequency.fname_inv",
    "mne.minimum_norm.time_frequency.compute_source_psd",
    "nose.tools.assert_true",
    "numpy.argmax",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_time_frequency.test_source_psd_epochs": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "any",
    "dict",
    "events",
    "len",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.label.read_label",
    "mne.minimum_norm.inverse.apply_inverse_epochs",
    "mne.minimum_norm.inverse.prepare_inverse_operator",
    "mne.minimum_norm.inverse.read_inverse_operator",
    "mne.minimum_norm.tests.test_time_frequency.fname_data",
    "mne.minimum_norm.tests.test_time_frequency.fname_inv",
    "mne.minimum_norm.tests.test_time_frequency.fname_label",
    "mne.minimum_norm.tests.test_time_frequency.warnings",
    "mne.minimum_norm.time_frequency.compute_source_psd_epochs",
    "mne.pick_types",
    "mne.time_frequency.multitaper.psd_array_multitaper",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_time_frequency.test_tfr_with_inverse_operator": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "dict",
    "events",
    "len",
    "list",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.label.read_label",
    "mne.minimum_norm.inverse.prepare_inverse_operator",
    "mne.minimum_norm.inverse.read_inverse_operator",
    "mne.minimum_norm.tests.test_time_frequency.fname_data",
    "mne.minimum_norm.tests.test_time_frequency.fname_inv",
    "mne.minimum_norm.tests.test_time_frequency.fname_label",
    "mne.minimum_norm.time_frequency.source_band_induced_power",
    "mne.minimum_norm.time_frequency.source_induced_power",
    "mne.pick_types",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.arange",
    "numpy.max",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.tests.test_time_frequency.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.minimum_norm.tests.test_time_frequency.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.minimum_norm.time_frequency": {
  "data": {},
  "type": "module"
 },
 "mne.minimum_norm.time_frequency._compute_pow_plv": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "mne.minimum_norm.time_frequency._prepare_tfr",
    "mne.minimum_norm.time_frequency._single_epoch_tfr",
    "numpy.complex",
    "numpy.dot",
    "numpy.float",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._compute_source_psd_epochs": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "_make_stc",
    "_mt_spectra",
    "_psd_from_mt",
    "_subject_from_inverse",
    "combine_xyz",
    "dpss_windows",
    "enumerate",
    "float",
    "int",
    "len",
    "min",
    "mne.minimum_norm.time_frequency._prepare_source_params",
    "my_psd_from_mt_adaptive",
    "numpy.array_split",
    "numpy.concatenate",
    "numpy.diff",
    "numpy.dot",
    "numpy.empty",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.sum",
    "parallel",
    "parallel_func",
    "range",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._prepare_source_params": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "_assemble_kernel",
    "_pick_channels_inverse_operator",
    "len",
    "numpy.sum",
    "prepare_inverse_operator",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._prepare_tfr": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._single_epoch_tfr": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "combine_xyz",
    "cwt",
    "enumerate",
    "len",
    "numpy.abs",
    "numpy.asfortranarray",
    "numpy.complex",
    "numpy.dot",
    "numpy.float",
    "numpy.imag",
    "numpy.real",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency._source_induced_power": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "len",
    "min",
    "mne.minimum_norm.time_frequency._compute_pow_plv",
    "mne.minimum_norm.time_frequency._prepare_source_params",
    "morlet",
    "my_compute_source_tfrs",
    "numpy.abs",
    "numpy.array_split",
    "parallel",
    "parallel_func",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency.compute_source_psd": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "_check_ori",
    "_make_stc",
    "_subject_from_inverse",
    "combine_xyz",
    "int",
    "mne.minimum_norm.time_frequency._prepare_source_params",
    "numpy.arange",
    "numpy.diff",
    "numpy.dot",
    "numpy.log10",
    "numpy.mean",
    "numpy.sum",
    "numpy.zeros",
    "scipy.fftpack.fft",
    "scipy.fftpack.fftfreq",
    "scipy.signal.hanning"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency.compute_source_psd_epochs": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "list",
    "mne.minimum_norm.time_frequency._compute_source_psd_epochs"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency.fftpack": {
  "data": {
   "shadows": "scipy.fftpack"
  },
  "type": "import"
 },
 "mne.minimum_norm.time_frequency.hanning": {
  "data": {
   "shadows": "scipy.signal.hanning"
  },
  "type": "import"
 },
 "mne.minimum_norm.time_frequency.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.minimum_norm.time_frequency.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.minimum_norm.time_frequency.source_band_induced_power": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "_check_method",
    "_log_rescale",
    "_make_stc",
    "_subject_from_inverse",
    "dict",
    "enumerate",
    "float",
    "mne.minimum_norm.time_frequency._source_induced_power",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.mean",
    "rescale"
   ]
  },
  "type": "function"
 },
 "mne.minimum_norm.time_frequency.source_induced_power": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "_check_method",
    "_check_ori",
    "_freqs_dep",
    "mne.minimum_norm.time_frequency._source_induced_power",
    "rescale"
   ]
  },
  "type": "function"
 },
 "mne.misc": {
  "data": {},
  "type": "module"
 },
 "mne.misc.parse_config": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "float",
    "int",
    "len",
    "mne.misc.read_reject_parameters",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.misc.read_flat_parameters": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "float",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.misc.read_reject_parameters": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "float",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.parallel": {
  "data": {
   "symbols_in_volume": [
    "mne.parallel.os"
   ]
  },
  "type": "module"
 },
 "mne.parallel.Parallel": {
  "data": {
   "shadows": "sklearn.externals.joblib.Parallel"
  },
  "type": "import"
 },
 "mne.parallel._force_serial": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.parallel.check_n_jobs": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "int",
    "isinstance",
    "min",
    "mne.parallel._force_serial",
    "mne.parallel.multiprocessing",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.parallel.delayed": {
  "data": {
   "shadows": "sklearn.externals.joblib.delayed"
  },
  "type": "import"
 },
 "mne.parallel.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "mne.parallel.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "mne.parallel.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.parallel.parallel_func": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ImportError",
    "_get_args",
    "get_config",
    "isinstance",
    "list",
    "mne.parallel.check_n_jobs",
    "mne.parallel.logging",
    "sklearn.externals.joblib.Parallel",
    "sklearn.externals.joblib.Parallel.__init__",
    "sklearn.externals.joblib.delayed",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing._fine_cal": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing._fine_cal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing._fine_cal.read_fine_calibration": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_check_fname",
    "check_fname",
    "dict",
    "float",
    "int",
    "len",
    "list",
    "numpy.array",
    "open"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing._fine_cal.write_fine_calibration": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "_check_fname",
    "check_fname",
    "enumerate",
    "map",
    "numpy.concatenate",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.bads": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.bads.find_outliers": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "numpy.any",
    "numpy.bool",
    "numpy.ma.masked_array",
    "numpy.max",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.stats.zscore"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.bads.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.bads.zscore": {
  "data": {
   "shadows": "scipy.stats.zscore"
  },
  "type": "import"
 },
 "mne.preprocessing.ctps_": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.ctps_._compute_normalized_phase": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.angle",
    "numpy.pi",
    "scipy.signal.hilbert"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ctps_._prob_kuiper": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "mne.preprocessing.ctps_.math",
    "numpy.arange",
    "numpy.exp",
    "numpy.log",
    "numpy.size",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ctps_.ctps": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "mne.preprocessing.ctps_._compute_normalized_phase",
    "mne.preprocessing.ctps_.kuiper",
    "numpy.transpose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ctps_.hilbert": {
  "data": {
   "shadows": "scipy.signal.hilbert"
  },
  "type": "import"
 },
 "mne.preprocessing.ctps_.kuiper": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "float",
    "len",
    "mne.preprocessing.ctps_._prob_kuiper",
    "numpy.arange",
    "numpy.float64",
    "numpy.newaxis",
    "numpy.sort"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ctps_.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mne.preprocessing.ctps_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.ecg": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.ecg._get_ecg_channel_index": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pick_channels",
    "pick_types",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ecg._make_ecg": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "isinstance",
    "numpy.hstack",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ecg.create_ecg_epochs": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "Epochs",
    "RawArray",
    "ValueError",
    "create_info",
    "events",
    "mne.preprocessing.ecg.find_ecg_events",
    "numpy.append"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ecg.find_ecg_events": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "int",
    "len",
    "mne.preprocessing.ecg._get_ecg_channel_index",
    "mne.preprocessing.ecg._make_ecg",
    "mne.preprocessing.ecg.qrs_detector",
    "numpy.array",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ecg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.ecg.qrs_detector": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "filter_data",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.array",
    "numpy.diff",
    "numpy.empty",
    "numpy.int",
    "numpy.logical_and",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.sqrt",
    "numpy.std",
    "numpy.sum",
    "numpy.where",
    "round",
    "sum_squared"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.eog": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.eog._find_eog_events": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "filter_data",
    "int",
    "len",
    "numpy.abs",
    "numpy.argmax",
    "numpy.array",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.minimum",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "peak_finder"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.eog._get_eog_channel_index": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_pl",
    "isinstance",
    "len",
    "pick_channels",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.eog.create_eog_epochs": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "Epochs",
    "events",
    "mne.preprocessing.eog.find_eog_events"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.eog.find_eog_events": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "int",
    "mne.preprocessing.eog._find_eog_events",
    "mne.preprocessing.eog._get_eog_channel_index",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.eog.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.infomax_": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.infomax_.infomax": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "int",
    "min",
    "mne.preprocessing.infomax_.math",
    "numpy.abs",
    "numpy.dot",
    "numpy.exp",
    "numpy.fix",
    "numpy.float64",
    "numpy.floor",
    "numpy.identity",
    "numpy.max",
    "numpy.ones",
    "numpy.pi",
    "numpy.reshape",
    "numpy.sign",
    "numpy.sum",
    "numpy.tanh",
    "numpy.zeros",
    "random_permutation",
    "range",
    "scipy.stats.kurtosis"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.infomax_.kurtosis": {
  "data": {
   "shadows": "scipy.stats.kurtosis"
  },
  "type": "import"
 },
 "mne.preprocessing.infomax_.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mne.preprocessing.infomax_.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.maxfilter": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.maxfilter._mxwarn": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.maxfilter.apply_maxfilter": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "RuntimeError",
    "fit_sphere_to_headshape",
    "isinstance",
    "list",
    "map",
    "mne.preprocessing.maxfilter._mxwarn",
    "mne.preprocessing.maxfilter.os",
    "print",
    "read_raw_fif",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.maxfilter.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.preprocessing.peak_finder": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.peak_finder.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "mne.preprocessing.peak_finder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.peak_finder.peak_finder": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "len",
    "math.ceil",
    "numpy.argmax",
    "numpy.asanyarray",
    "numpy.concatenate",
    "numpy.diff",
    "numpy.finfo",
    "numpy.int",
    "numpy.max",
    "numpy.min",
    "numpy.sign",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ssp": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.ssp._compute_exg_proj": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "Epochs",
    "ValueError",
    "compute_proj_epochs",
    "compute_proj_evoked",
    "copy.deepcopy",
    "events",
    "events.shape",
    "find_ecg_events",
    "find_eog_events",
    "len",
    "make_eeg_average_ref_proj",
    "mne.preprocessing.ssp._safe_del_key",
    "pick_types",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ssp._safe_del_key": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "mne.preprocessing.ssp.compute_proj_ecg": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "copy",
    "dict",
    "mne.preprocessing.ssp._compute_exg_proj"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ssp.compute_proj_eog": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "copy",
    "dict",
    "mne.preprocessing.ssp._compute_exg_proj",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.ssp.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.preprocessing.ssp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.stim": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.stim._fix_artifact": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "f",
    "numpy.arange",
    "numpy.array",
    "numpy.newaxis",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.stim._get_window": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.ones",
    "numpy.r_.T",
    "scipy.signal.hann"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.stim.fix_stim_artifact": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "_check_preload",
    "_pick_data_channels",
    "events",
    "find_events",
    "int",
    "isinstance",
    "len",
    "mne.preprocessing.stim._fix_artifact",
    "mne.preprocessing.stim._get_window",
    "numpy.arange",
    "numpy.ceil",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.stim.hann": {
  "data": {
   "shadows": "scipy.signal.hann"
  },
  "type": "import"
 },
 "mne.preprocessing.stim.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.preprocessing.stim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.tests.test_ctps": {
  "data": {
   "symbols_in_volume": [
    "enumerate",
    "len",
    "mne.preprocessing.tests.test_ctps.Ws",
    "mne.preprocessing.tests.test_ctps.n_samples",
    "mne.preprocessing.tests.test_ctps.roll_to",
    "mne.preprocessing.tests.test_ctps.sfreq",
    "mne.preprocessing.tests.test_ctps.single_trial",
    "mne.preprocessing.tests.test_ctps.times",
    "mne.preprocessing.tests.test_ctps.tmin",
    "mne.preprocessing.tests.test_ctps.tstep",
    "mne.time_frequency.morlet",
    "numpy.linspace",
    "numpy.random.RandomState",
    "numpy.real",
    "numpy.roll",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_ctps.Ws": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps._compute_normalized_phase": {
  "data": {
   "shadows": "mne.preprocessing.ctps_._compute_normalized_phase"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps._prob_kuiper": {
  "data": {
   "shadows": "mne.preprocessing.ctps_._prob_kuiper"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.ctps": {
  "data": {
   "shadows": "mne.preprocessing.ctps_.ctps"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.get_data": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mne.preprocessing.tests.test_ctps.rng",
    "mne.preprocessing.tests.test_ctps.single_trial",
    "mne.preprocessing.tests.test_ctps.warnings",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.concatenate",
    "numpy.roll",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ctps.iter_test_ctps": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.morlet": {
  "data": {
   "shadows": "mne.time_frequency.morlet"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.n_samples": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ctps.rng": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.roll_to": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.sfreq": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.single_trial": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.test_ctps": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.preprocessing.ctps_._compute_normalized_phase",
    "mne.preprocessing.ctps_._prob_kuiper",
    "mne.preprocessing.ctps_.ctps",
    "mne.preprocessing.tests.test_ctps.get_data",
    "mne.preprocessing.tests.test_ctps.iter_test_ctps",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ctps.times": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.tmin": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.tstep": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ctps.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg": {
  "data": {
   "symbols_in_volume": [
    "mne.preprocessing.tests.test_ecg.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_ecg.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.create_ecg_epochs": {
  "data": {
   "shadows": "mne.preprocessing.ecg.create_ecg_epochs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.data_path": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ecg.event_fname": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ecg.find_ecg_events": {
  "data": {
   "shadows": "mne.preprocessing.ecg.find_ecg_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.proj_fname": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ecg.raw_fname": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ecg.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ecg.test_find_ecg": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "events",
    "len",
    "list",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ecg.create_ecg_epochs",
    "mne.preprocessing.ecg.find_ecg_events",
    "mne.preprocessing.tests.test_ecg.raw_fname",
    "mne.preprocessing.tests.test_ecg.warnings",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ecg.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.base_dir": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.generate_data_for_comparing_against_eeglab_infomax": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.utils.random_permutation",
    "numpy.dot",
    "numpy.sqrt",
    "numpy.std",
    "os.path.join",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.infomax": {
  "data": {
   "shadows": "mne.preprocessing.infomax_.infomax"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.pinv": {
  "data": {
   "shadows": "scipy.linalg.pinv"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.random_permutation": {
  "data": {
   "shadows": "mne.utils.random_permutation"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.sio": {
  "data": {
   "shadows": "scipy.io"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.svd": {
  "data": {
   "shadows": "scipy.linalg.svd"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.test_mne_python_vs_eeglab": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "dict",
    "int",
    "mne.datasets.testing.requires_testing_data",
    "mne.preprocessing.infomax_.infomax",
    "mne.preprocessing.tests.test_eeglab_infomax.base_dir",
    "mne.preprocessing.tests.test_eeglab_infomax.generate_data_for_comparing_against_eeglab_infomax",
    "mne.preprocessing.tests.test_eeglab_infomax.pytest",
    "numpy.abs",
    "numpy.argsort",
    "numpy.ceil",
    "numpy.dot",
    "numpy.log",
    "numpy.max",
    "numpy.min",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "os.path.join",
    "scipy.io.loadmat",
    "scipy.linalg.pinv"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_eeglab_infomax.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog": {
  "data": {
   "symbols_in_volume": [
    "mne.preprocessing.tests.test_eog.data_path",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_eog.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog.data_path": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eog.event_fname": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eog.find_eog_events": {
  "data": {
   "shadows": "mne.preprocessing.eog.find_eog_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog.proj_fname": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eog.raw_fname": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_eog.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_eog.test_find_eog": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "all",
    "events",
    "len",
    "mne.Annotations",
    "mne.io.read_raw_fif",
    "mne.preprocessing.eog.find_eog_events",
    "mne.preprocessing.tests.test_eog.raw_fname",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_fine_cal": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.preprocessing.tests.test_fine_cal.data_path",
    "mne.preprocessing.tests.test_fine_cal.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_fine_cal._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.data_path": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_fine_cal.fine_cal_fname": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_fine_cal.fine_cal_fname_3d": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_fine_cal.object_hash": {
  "data": {
   "shadows": "mne.utils.object_hash"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.read_fine_calibration": {
  "data": {
   "shadows": "mne.preprocessing._fine_cal.read_fine_calibration"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.test_read_write_fine_cal": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.preprocessing._fine_cal.read_fine_calibration",
    "mne.preprocessing._fine_cal.write_fine_calibration",
    "mne.preprocessing.tests.test_fine_cal.fine_cal_fname",
    "mne.preprocessing.tests.test_fine_cal.fine_cal_fname_3d",
    "mne.utils._TempDir",
    "mne.utils.object_hash",
    "nose.tools.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_fine_cal.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_fine_cal.write_fine_calibration": {
  "data": {
   "shadows": "mne.preprocessing._fine_cal.write_fine_calibration"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "mne.preprocessing.tests.test_ica.data_dir",
    "mne.preprocessing.tests.test_ica.matplotlib",
    "mne.preprocessing.tests.test_ica.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join",
    "sklearn.utils.validation.NonBLASDotWarning"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_ica.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.EvokedArray": {
  "data": {
   "shadows": "mne.EvokedArray"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.ICA": {
  "data": {
   "shadows": "mne.preprocessing.ICA"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.Info": {
  "data": {
   "shadows": "mne.io.Info"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.NonBLASDotWarning": {
  "data": {
   "shadows": "sklearn.utils.validation.NonBLASDotWarning"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica._DATA_CH_TYPES_SPLIT": {
  "data": {
   "shadows": "mne.io.pick._DATA_CH_TYPES_SPLIT"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica._ica_explained_variance": {
  "data": {
   "shadows": "mne.preprocessing.ica._ica_explained_variance"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica._kind_dict": {
  "data": {
   "shadows": "mne.io.meas_info._kind_dict"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica._sort_components": {
  "data": {
   "shadows": "mne.preprocessing.ica._sort_components"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.assert_is_none": {
  "data": {
   "shadows": "nose.tools.assert_is_none"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.assert_naming": {
  "data": {
   "shadows": "mne.tests.common.assert_naming"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.corrmap": {
  "data": {
   "shadows": "mne.preprocessing.ica.corrmap"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.data_dir": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ica.event_name": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ica.get_score_funcs": {
  "data": {
   "shadows": "mne.preprocessing.ica.get_score_funcs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.ica_find_ecg_events": {
  "data": {
   "shadows": "mne.preprocessing.ica_find_ecg_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.ica_find_eog_events": {
  "data": {
   "shadows": "mne.preprocessing.ica_find_eog_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.raw_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ica.read_cov": {
  "data": {
   "shadows": "mne.cov.read_cov"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.read_ica": {
  "data": {
   "shadows": "mne.preprocessing.read_ica"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.run_ica": {
  "data": {
   "shadows": "mne.preprocessing.run_ica"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.score_funcs_unsuited": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ica.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ica.test_bad_channels": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "mne.EpochsArray",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.meas_info._kind_dict",
    "mne.io.pick._DATA_CH_TYPES_SPLIT",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_raises",
    "numpy.random.rand",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.test_cov_name": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ica.test_eog_channel": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "any",
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.preprocessing.tests.test_ica.event_name",
    "mne.preprocessing.tests.test_ica.raw_fname",
    "mne.read_events",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "numpy.append"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.test_fit_params": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.preprocessing.ICA",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.test_ica_additional": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "events",
    "f",
    "getattr",
    "isinstance",
    "itertools.product",
    "len",
    "list",
    "matplotlib.pyplot.close",
    "mne.Annotations",
    "mne.Epochs",
    "mne.EvokedArray",
    "mne.cov.read_cov",
    "mne.io.Info",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.preprocessing.ica._ica_explained_variance",
    "mne.preprocessing.ica._sort_components",
    "mne.preprocessing.ica.corrmap",
    "mne.preprocessing.ica.get_score_funcs",
    "mne.preprocessing.ica_find_ecg_events",
    "mne.preprocessing.ica_find_eog_events",
    "mne.preprocessing.read_ica",
    "mne.preprocessing.tests.test_ica.event_name",
    "mne.preprocessing.tests.test_ica.os",
    "mne.preprocessing.tests.test_ica.pytest",
    "mne.preprocessing.tests.test_ica.raw_fname",
    "mne.preprocessing.tests.test_ica.score_funcs_unsuited",
    "mne.preprocessing.tests.test_ica.test_cov_name",
    "mne.preprocessing.tests.test_ica.warnings",
    "mne.read_events",
    "mne.tests.common.assert_naming",
    "mne.utils._TempDir",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.all",
    "numpy.arange",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "os.path.abspath",
    "os.path.curdir",
    "os.path.dirname",
    "os.path.join",
    "range",
    "scipy.stats.skew",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.test_ica_additional.f": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.test_ica_core": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "events",
    "itertools.product",
    "mne.Epochs",
    "mne.cov.read_cov",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.preprocessing.tests.test_ica.event_name",
    "mne.preprocessing.tests.test_ica.raw_fname",
    "mne.preprocessing.tests.test_ica.test_cov_name",
    "mne.preprocessing.tests.test_ica.warnings",
    "mne.read_events",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.prod",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "print",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.test_ica_full_data_recovery": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "list",
    "mne.Annotations",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.preprocessing.tests.test_ica.event_name",
    "mne.preprocessing.tests.test_ica.raw_fname",
    "mne.preprocessing.tests.test_ica.warnings",
    "mne.read_events",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.max",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.test_ica_rank_reduction": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "len",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.preprocessing.tests.test_ica.raw_fname",
    "mne.preprocessing.tests.test_ica.warnings",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_equal",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.test_ica_reject_buffer": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "dict",
    "len",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.preprocessing.tests.test_ica.raw_fname",
    "mne.preprocessing.tests.test_ica.warnings",
    "mne.utils.catch_logging",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_equal",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.test_ica_reset": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "all",
    "any",
    "hasattr",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.preprocessing.tests.test_ica.raw_fname",
    "mne.preprocessing.tests.test_ica.warnings",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.test_ica_twice": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.preprocessing.tests.test_ica.raw_fname",
    "mne.preprocessing.tests.test_ica.warnings",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.test_max_pca_components_none": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.preprocessing.read_ica",
    "mne.preprocessing.tests.test_ica.event_name",
    "mne.preprocessing.tests.test_ica.raw_fname",
    "mne.preprocessing.tests.test_ica.warnings",
    "mne.read_events",
    "mne.utils._TempDir",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.test_n_components_and_max_pca_components_none": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.preprocessing.read_ica",
    "mne.preprocessing.tests.test_ica.event_name",
    "mne.preprocessing.tests.test_ica.raw_fname",
    "mne.preprocessing.tests.test_ica.warnings",
    "mne.read_events",
    "mne.utils._TempDir",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_equal",
    "nose.tools.assert_is_none",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.test_n_components_none": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.preprocessing.read_ica",
    "mne.preprocessing.tests.test_ica.event_name",
    "mne.preprocessing.tests.test_ica.raw_fname",
    "mne.preprocessing.tests.test_ica.warnings",
    "mne.read_events",
    "mne.utils._TempDir",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_equal",
    "nose.tools.assert_is_none",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.test_run_ica": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "itertools.product",
    "mne.io.read_raw_fif",
    "mne.preprocessing.run_ica",
    "mne.preprocessing.tests.test_ica.raw_fname",
    "mne.preprocessing.tests.test_ica.warnings",
    "mne.utils.requires_sklearn",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ica.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.tests.test_peak_finder.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder.peak_finder": {
  "data": {
   "shadows": "mne.preprocessing.peak_finder.peak_finder"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_peak_finder.test_peak_finder": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "mne.preprocessing.peak_finder.peak_finder",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ssp": {
  "data": {
   "symbols_in_volume": [
    "mne.preprocessing.tests.test_ssp.data_path",
    "mne.preprocessing.tests.test_ssp.warnings",
    "mne.utils.run_tests_if_main",
    "numpy.array",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_ssp.activate_proj": {
  "data": {
   "shadows": "mne.io.proj.activate_proj"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.compute_proj_ecg": {
  "data": {
   "shadows": "mne.preprocessing.ssp.compute_proj_ecg"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.compute_proj_eog": {
  "data": {
   "shadows": "mne.preprocessing.ssp.compute_proj_eog"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.data_path": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ssp.dur_use": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ssp.eog_times": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ssp.make_projector": {
  "data": {
   "shadows": "mne.io.proj.make_projector"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.raw_fname": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_ssp.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_ssp.test_compute_proj_ecg": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "events",
    "events.shape",
    "len",
    "mne.io.read_raw_fif",
    "mne.preprocessing.ssp.compute_proj_ecg",
    "mne.preprocessing.tests.test_ssp.dur_use",
    "mne.preprocessing.tests.test_ssp.raw_fname",
    "mne.preprocessing.tests.test_ssp.warnings",
    "nose.tools.assert_equal",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ssp.test_compute_proj_eog": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "events",
    "events.shape",
    "len",
    "mne.io.read_raw_fif",
    "mne.preprocessing.ssp.compute_proj_eog",
    "mne.preprocessing.tests.test_ssp.dur_use",
    "mne.preprocessing.tests.test_ssp.eog_times",
    "mne.preprocessing.tests.test_ssp.raw_fname",
    "mne.preprocessing.tests.test_ssp.warnings",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.less",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ssp.test_compute_proj_parallel": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "mne.io.proj.activate_proj",
    "mne.io.proj.make_projector",
    "mne.io.read_raw_fif",
    "mne.preprocessing.ssp.compute_proj_eog",
    "mne.preprocessing.tests.test_ssp.dur_use",
    "mne.preprocessing.tests.test_ssp.raw_fname",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_ssp.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim": {
  "data": {
   "symbols_in_volume": [
    "mne.preprocessing.tests.test_stim.data_path",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_stim.Epochs": {
  "data": {
   "shadows": "mne.epochs.Epochs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.data_path": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_stim.event_fname": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_stim.fix_stim_artifact": {
  "data": {
   "shadows": "mne.preprocessing.stim.fix_stim_artifact"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.pick_types": {
  "data": {
   "shadows": "mne.io.pick.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.raw_fname": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_stim.read_events": {
  "data": {
   "shadows": "mne.event.read_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_stim.test_fix_stim_artifact": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "events",
    "int",
    "len",
    "mne.epochs.Epochs",
    "mne.event.read_events",
    "mne.io.pick.pick_types",
    "mne.io.read_raw_fif",
    "mne.preprocessing.stim.fix_stim_artifact",
    "mne.preprocessing.tests.test_stim.event_fname",
    "mne.preprocessing.tests.test_stim.raw_fname",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.array",
    "numpy.ceil",
    "numpy.diff",
    "numpy.mean",
    "numpy.testing.assert_array_almost_equal",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.preprocessing.tests.test_xdawn.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.preprocessing.tests.test_xdawn.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.Xdawn": {
  "data": {
   "shadows": "mne.preprocessing.xdawn.Xdawn"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn._XdawnTransformer": {
  "data": {
   "shadows": "mne.preprocessing.xdawn._XdawnTransformer"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn._get_data": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "events",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.tests.test_xdawn.event_name",
    "mne.preprocessing.tests.test_xdawn.raw_fname",
    "mne.read_events"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.base_dir": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_xdawn.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.event_id": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_xdawn.event_name": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_xdawn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.raw_fname": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.preprocessing.tests.test_xdawn.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.preprocessing.tests.test_xdawn.test_XdawnTransformer": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "len",
    "mne.Epochs",
    "mne.compute_raw_covariance",
    "mne.preprocessing.tests.test_xdawn._get_data",
    "mne.preprocessing.tests.test_xdawn.event_id",
    "mne.preprocessing.xdawn.Xdawn",
    "mne.preprocessing.xdawn._XdawnTransformer",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "mne.preprocessing.xdawn.Xdawn",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn_apply_transform": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "len",
    "mne.Epochs",
    "mne.preprocessing.tests.test_xdawn._get_data",
    "mne.preprocessing.tests.test_xdawn.event_id",
    "mne.preprocessing.xdawn.Xdawn",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.random.seed",
    "numpy.random.shuffle",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn_fit": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "len",
    "mne.Epochs",
    "mne.compute_raw_covariance",
    "mne.preprocessing.tests.test_xdawn._get_data",
    "mne.preprocessing.tests.test_xdawn.event_id",
    "mne.preprocessing.xdawn.Xdawn",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.eye",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.tests.test_xdawn.test_xdawn_regularization": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "len",
    "mne.Epochs",
    "mne.preprocessing.tests.test_xdawn._get_data",
    "mne.preprocessing.tests.test_xdawn.event_id",
    "mne.preprocessing.xdawn.Xdawn",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.eye",
    "numpy.sum",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn": {
  "data": {},
  "type": "module"
 },
 "mne.preprocessing.xdawn.Xdawn": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "mne.preprocessing.xdawn._XdawnTransformer"
   ]
  },
  "type": "class"
 },
 "mne.preprocessing.xdawn.Xdawn.__init__": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "ValueError",
    "mne.preprocessing.xdawn.Xdawn",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn._apply_epochs": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "EpochsArray",
    "ValueError",
    "copy.deepcopy",
    "dict",
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.split"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn._apply_evoked": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn._apply_raw": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "ValueError",
    "dict"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn._pick_sources": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.bool",
    "numpy.dot",
    "numpy.ones",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn.apply": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "ValueError",
    "_pick_data_channels",
    "isinstance",
    "len",
    "list",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn.fit": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "EvokedArray",
    "ValueError",
    "_pick_data_channels",
    "dict",
    "events",
    "int",
    "isinstance",
    "iteritems",
    "len",
    "mne.preprocessing.xdawn._fit_xdawn",
    "numpy.argsort",
    "numpy.diff",
    "numpy.sort",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn.inverse_transform": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.Xdawn.transform": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "itervalues",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer": {
  "data": {
   "lineno": 196
  },
  "type": "class"
 },
 "mne.preprocessing.xdawn._XdawnTransformer.__init__": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer._check_Xy": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer.fit": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "mne.preprocessing.xdawn._fit_xdawn",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer.inverse_transform": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._XdawnTransformer.transform": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._construct_signal_from_epochs": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "events",
    "float",
    "int",
    "numpy.max",
    "numpy.min",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._fit_xdawn": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "_regularized_covariance",
    "events",
    "isinstance",
    "list",
    "mne.preprocessing.xdawn._least_square_evoked",
    "numpy.apply_along_axis",
    "numpy.argsort",
    "numpy.array",
    "numpy.array_equal",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.hstack",
    "numpy.linalg.LinAlgError",
    "numpy.linalg.norm",
    "numpy.linalg.pinv",
    "numpy.matrix",
    "numpy.mean",
    "numpy.ndarray",
    "numpy.tile",
    "numpy.unique",
    "scipy.linalg.eigh",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn._least_square_evoked": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "enumerate",
    "events",
    "events.copy",
    "float",
    "int",
    "len",
    "list",
    "mne.preprocessing.xdawn._construct_signal_from_epochs",
    "numpy.array",
    "numpy.concatenate",
    "numpy.dot",
    "numpy.transpose",
    "numpy.unique",
    "numpy.vsplit",
    "numpy.zeros",
    "scipy.linalg.pinv",
    "scipy.linalg.toeplitz"
   ]
  },
  "type": "function"
 },
 "mne.preprocessing.xdawn.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.preprocessing.xdawn.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.preprocessing.xdawn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.proj": {
  "data": {},
  "type": "module"
 },
 "mne.proj._compute_cov_epochs": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "RuntimeError",
    "_check_n_samples",
    "len",
    "numpy.dot",
    "p_fun",
    "parallel",
    "parallel_func",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.proj._compute_proj": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Projection",
    "dict",
    "enumerate",
    "len",
    "numpy.newaxis",
    "pick_types",
    "scipy.linalg.svd",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.proj.compute_proj_epochs": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "len",
    "list",
    "mne.proj._compute_cov_epochs",
    "mne.proj._compute_proj",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.proj.compute_proj_evoked": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "mne.proj._compute_proj",
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "mne.proj.compute_proj_raw": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "Epochs",
    "_check_n_samples",
    "events",
    "make_fixed_length_events",
    "max",
    "min",
    "mne.proj._compute_cov_epochs",
    "mne.proj._compute_proj",
    "numpy.dot",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.proj.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.proj.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.proj.read_proj": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "check_fname"
   ]
  },
  "type": "function"
 },
 "mne.proj.sensitivity_map": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "RuntimeError",
    "SEClass",
    "ValueError",
    "_has_eeg_average_ref_proj",
    "_subject_from_forward",
    "convert_forward_solution",
    "is_fixed_orient",
    "make_eeg_average_ref_proj",
    "make_projector",
    "numpy.dot",
    "numpy.empty",
    "numpy.max",
    "numpy.newaxis",
    "pick_types_forward",
    "range",
    "scipy.linalg.norm",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.proj.write_proj": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "check_fname"
   ]
  },
  "type": "function"
 },
 "mne.realtime": {
  "data": {},
  "type": "module"
 },
 "mne.realtime.client": {
  "data": {},
  "type": "module"
 },
 "mne.realtime.client.MNE_RT_GET_CLIENT_ID": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.realtime.client.MNE_RT_SET_CLIENT_ALIAS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.realtime.client.RtClient": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.realtime.client.RtClient.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "list",
    "mne.realtime.client.socket"
   ]
  },
  "type": "function"
 },
 "mne.realtime.client.RtClient._push_raw_buffer": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "callback"
   ]
  },
  "type": "function"
 },
 "mne.realtime.client.RtClient._send_command": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "mne.realtime.client.time"
   ]
  },
  "type": "function"
 },
 "mne.realtime.client.RtClient._send_fiff_command": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "len",
    "next",
    "numpy.array",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.realtime.client.RtClient.get_client_id": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "mne.realtime.client.MNE_RT_GET_CLIENT_ID",
    "mne.realtime.client._recv_tag_raw",
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "mne.realtime.client.RtClient.get_measurement_info": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "StringIO",
    "make_dir_tree",
    "mne.realtime.client._recv_tag_raw",
    "numpy.fromstring",
    "read_meas_info"
   ]
  },
  "type": "function"
 },
 "mne.realtime.client.RtClient.raw_buffers": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "mne.realtime.client.RtClient.read_raw_buffer": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "StringIO",
    "mne.realtime.client._recv_tag_raw",
    "read_tag"
   ]
  },
  "type": "function"
 },
 "mne.realtime.client.RtClient.register_receive_callback": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "mne.realtime.client.RtClient.set_client_alias": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "mne.realtime.client.MNE_RT_SET_CLIENT_ALIAS"
   ]
  },
  "type": "function"
 },
 "mne.realtime.client.RtClient.start_measurement": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "mne.realtime.client.RtClient.start_receive_thread": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "mne.realtime.client._buffer_recv_worker",
    "mne.realtime.client.threading"
   ]
  },
  "type": "function"
 },
 "mne.realtime.client.RtClient.stop_measurement": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "mne.realtime.client.RtClient.stop_receive_thread": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "mne.realtime.client.RtClient.unregister_receive_callback": {
  "data": {
   "lineno": 313
  },
  "type": "function"
 },
 "mne.realtime.client._buffer_recv_worker": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "RuntimeError",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.realtime.client._recv_tag_raw": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "RuntimeError",
    "Tag",
    "len",
    "min",
    "numpy.fromstring"
   ]
  },
  "type": "function"
 },
 "mne.realtime.client.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.realtime.client.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.realtime.client.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "mne.realtime.client.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "mne.realtime.client.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.realtime.epochs": {
  "data": {},
  "type": "module"
 },
 "mne.realtime.epochs.RtEpochs": {
  "data": {
   "lineno": 19
  },
  "type": "class"
 },
 "mne.realtime.epochs.RtEpochs.__init__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "mne.realtime.epochs.RtEpochs",
    "mne.realtime.epochs.copy",
    "mne.realtime.epochs.time",
    "numpy.zeros",
    "pick_channels",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.realtime.epochs.RtEpochs.__repr__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.realtime.epochs.RtEpochs._append_epoch_to_queue": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "mne.realtime.epochs.RtEpochs._get_data": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "list",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.realtime.epochs.RtEpochs._process_raw_buffer": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "RuntimeError",
    "_find_events",
    "events",
    "events.extend",
    "events.sort",
    "int",
    "len",
    "list",
    "numpy.abs",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.c_",
    "numpy.concatenate",
    "numpy.int",
    "numpy.where",
    "round",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.realtime.epochs.RtEpochs.events": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.array",
    "property"
   ]
  },
  "type": "function"
 },
 "mne.realtime.epochs.RtEpochs.next": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "mne.realtime.epochs.time"
   ]
  },
  "type": "function"
 },
 "mne.realtime.epochs.RtEpochs.start": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "mne.realtime.epochs.RtEpochs.stop": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "mne.realtime.epochs.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.realtime.epochs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.realtime.epochs.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.realtime.fieldtrip_client": {
  "data": {},
  "type": "module"
 },
 "mne.realtime.fieldtrip_client.FieldTripClient": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.realtime.fieldtrip_client.FieldTripClient.__enter__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "max",
    "mne.realtime.fieldtrip_client.time",
    "numpy.iinfo",
    "numpy.inf",
    "numpy.uint32",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.realtime.fieldtrip_client.FieldTripClient.__exit__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "mne.realtime.fieldtrip_client.FieldTripClient.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "list",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "mne.realtime.fieldtrip_client.FieldTripClient._guess_measurement_info": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "_empty_info",
    "dict",
    "enumerate",
    "int",
    "list",
    "mne.realtime.fieldtrip_client.copy",
    "mne.realtime.fieldtrip_client.re",
    "numpy.zeros",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.realtime.fieldtrip_client.FieldTripClient._push_raw_buffer": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "callback"
   ]
  },
  "type": "function"
 },
 "mne.realtime.fieldtrip_client.FieldTripClient.get_data_as_epoch": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "EpochsArray",
    "events",
    "numpy.array",
    "numpy.expand_dims",
    "numpy.newaxis",
    "pick_info",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.realtime.fieldtrip_client.FieldTripClient.get_measurement_info": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "mne.realtime.fieldtrip_client.FieldTripClient.iter_raw_buffers": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "enumerate",
    "numpy.iinfo",
    "numpy.uint32",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.realtime.fieldtrip_client.FieldTripClient.register_receive_callback": {
  "data": {
   "lineno": 282
  },
  "type": "function"
 },
 "mne.realtime.fieldtrip_client.FieldTripClient.start_receive_thread": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "mne.realtime.fieldtrip_client._buffer_recv_worker",
    "mne.realtime.fieldtrip_client.threading"
   ]
  },
  "type": "function"
 },
 "mne.realtime.fieldtrip_client.FieldTripClient.stop_receive_thread": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "mne.realtime.fieldtrip_client.FieldTripClient.unregister_receive_callback": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "mne.realtime.fieldtrip_client.FtClient": {
  "data": {
   "shadows": "Client"
  },
  "type": "import"
 },
 "mne.realtime.fieldtrip_client._buffer_recv_worker": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "RuntimeError",
    "print"
   ]
  },
  "type": "function"
 },
 "mne.realtime.fieldtrip_client.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.realtime.fieldtrip_client.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.realtime.fieldtrip_client.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.realtime.fieldtrip_client.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "mne.realtime.fieldtrip_client.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.realtime.mockclient": {
  "data": {},
  "type": "module"
 },
 "mne.realtime.mockclient.MockRtClient": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.realtime.mockclient.MockRtClient.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "dict",
    "mne.realtime.mockclient.copy"
   ]
  },
  "type": "function"
 },
 "mne.realtime.mockclient.MockRtClient._stop_receive_thread": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "mne.realtime.mockclient.MockRtClient.get_event_data": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "events",
    "find_events",
    "int",
    "len",
    "numpy.where",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.realtime.mockclient.MockRtClient.get_measurement_info": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "mne.realtime.mockclient.MockRtClient.register_receive_callback": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "mne.realtime.mockclient.MockRtClient.send_data": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "list",
    "numpy.array",
    "range",
    "round",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.realtime.mockclient.MockRtClient.start_receive_thread": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "mne.realtime.mockclient.MockRtClient.unregister_receive_callback": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "mne.realtime.mockclient.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.realtime.mockclient.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.realtime.stim_server_client": {
  "data": {},
  "type": "module"
 },
 "mne.realtime.stim_server_client.StimClient": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.realtime.stim_server_client.StimClient.__init__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "len",
    "mne.realtime.stim_server_client.socket"
   ]
  },
  "type": "function"
 },
 "mne.realtime.stim_server_client.StimClient.close": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "mne.realtime.stim_server_client.StimClient.get_trigger": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "RuntimeError",
    "int",
    "mne.realtime.stim_server_client.time",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.realtime.stim_server_client.StimServer": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.realtime.stim_server_client.StimServer.__enter__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "list",
    "mne.realtime.stim_server_client.threading"
   ]
  },
  "type": "function"
 },
 "mne.realtime.stim_server_client.StimServer.__exit__": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "mne.realtime.stim_server_client.StimServer.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "mne.realtime.stim_server_client._ThreadedTCPServer",
    "mne.realtime.stim_server_client._TriggerHandler"
   ]
  },
  "type": "function"
 },
 "mne.realtime.stim_server_client.StimServer._add_client": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.realtime.stim_server_client.StimServer.add_trigger": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "mne.realtime.stim_server_client.StimServer.shutdown": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "mne.realtime.stim_server_client.StimServer.start": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "StopIteration",
    "len",
    "mne.realtime.stim_server_client.time",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "mne.realtime.stim_server_client._ThreadedTCPServer": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "mne.realtime.stim_server_client._ThreadedTCPServer.__init__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "mne.realtime.stim_server_client._TriggerHandler": {
  "data": {
   "lineno": 42
  },
  "type": "class"
 },
 "mne.realtime.stim_server_client._TriggerHandler.handle": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.realtime.stim_server_client.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.realtime.stim_server_client.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "mne.realtime.stim_server_client.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "mne.realtime.stim_server_client.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.realtime.tests": {
  "data": {},
  "type": "module"
 },
 "mne.realtime.tests.test_fieldtrip_client": {
  "data": {
   "symbols_in_volume": [
    "mne.realtime.tests.test_fieldtrip_client.base_dir",
    "mne.realtime.tests.test_fieldtrip_client.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join",
    "os.path.realpath"
   ]
  },
  "type": "module"
 },
 "mne.realtime.tests.test_fieldtrip_client.FieldTripClient": {
  "data": {
   "shadows": "mne.realtime.FieldTripClient"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_fieldtrip_client._run_buffer": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "mne.realtime.tests.test_fieldtrip_client.raw_fname",
    "mne.realtime.tests.test_fieldtrip_client.subprocess"
   ]
  },
  "type": "function"
 },
 "mne.realtime.tests.test_fieldtrip_client.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_fieldtrip_client.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_fieldtrip_client.base_dir": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.realtime.tests.test_fieldtrip_client.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_fieldtrip_client.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_fieldtrip_client.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_fieldtrip_client.queue": {
  "data": {
   "shadows": "mne.externals.six.moves.queue"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_fieldtrip_client.raw_fname": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.realtime.tests.test_fieldtrip_client.requires_neuromag2ft": {
  "data": {
   "shadows": "mne.utils.requires_neuromag2ft"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_fieldtrip_client.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_fieldtrip_client.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_fieldtrip_client.test_fieldtrip_client": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "len",
    "mne.externals.six.moves.queue.Queue",
    "mne.realtime.FieldTripClient",
    "mne.realtime.tests.test_fieldtrip_client._run_buffer",
    "mne.realtime.tests.test_fieldtrip_client.mne",
    "mne.realtime.tests.test_fieldtrip_client.os",
    "mne.realtime.tests.test_fieldtrip_client.threading",
    "mne.realtime.tests.test_fieldtrip_client.time",
    "mne.realtime.tests.test_fieldtrip_client.warnings",
    "mne.utils.requires_neuromag2ft",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "os.path.join",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "mne.realtime.tests.test_fieldtrip_client.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_fieldtrip_client.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_fieldtrip_client.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_mockclient": {
  "data": {
   "symbols_in_volume": [
    "mne.read_events",
    "mne.realtime.tests.test_mockclient.base_dir",
    "mne.realtime.tests.test_mockclient.event_name",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.realtime.tests.test_mockclient.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_mockclient.MockRtClient": {
  "data": {
   "shadows": "mne.realtime.MockRtClient"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_mockclient.RtEpochs": {
  "data": {
   "shadows": "mne.realtime.RtEpochs"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_mockclient.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_mockclient.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_mockclient.base_dir": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.realtime.tests.test_mockclient.event_name": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.realtime.tests.test_mockclient.events": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.realtime.tests.test_mockclient.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_mockclient.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_mockclient.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_mockclient.raw_fname": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.realtime.tests.test_mockclient.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_mockclient.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_mockclient.test_find_events": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "mne.pick_channels",
    "mne.realtime.MockRtClient",
    "mne.realtime.RtEpochs",
    "mne.realtime.tests.test_mockclient.events",
    "mne.realtime.tests.test_mockclient.mne",
    "mne.realtime.tests.test_mockclient.raw_fname",
    "nose.tools.assert_true",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.realtime.tests.test_mockclient.test_get_event_data": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "mne.Epochs",
    "mne.realtime.MockRtClient",
    "mne.realtime.tests.test_mockclient.events",
    "mne.realtime.tests.test_mockclient.mne",
    "mne.realtime.tests.test_mockclient.raw_fname",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.realtime.tests.test_mockclient.test_mockclient": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mne.Epochs",
    "mne.realtime.MockRtClient",
    "mne.realtime.RtEpochs",
    "mne.realtime.tests.test_mockclient.events",
    "mne.realtime.tests.test_mockclient.mne",
    "mne.realtime.tests.test_mockclient.raw_fname",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.realtime.tests.test_stim_client_server": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.realtime.tests.test_stim_client_server.StimClient": {
  "data": {
   "shadows": "mne.realtime.StimClient"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_stim_client_server.StimServer": {
  "data": {
   "shadows": "mne.realtime.StimServer"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_stim_client_server._connect_client": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mne.realtime.StimClient",
    "mne.realtime.tests.test_stim_client_server._have_put_in_trigger",
    "mne.realtime.tests.test_stim_client_server._max_wait",
    "mne.realtime.tests.test_stim_client_server._server",
    "mne.realtime.tests.test_stim_client_server.time",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.realtime.tests.test_stim_client_server._have_put_in_trigger": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.realtime.tests.test_stim_client_server._max_wait": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "mne.realtime.tests.test_stim_client_server._server": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.realtime.tests.test_stim_client_server.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_stim_client_server.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_stim_client_server.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_stim_client_server.queue": {
  "data": {
   "shadows": "mne.externals.six.moves.queue"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_stim_client_server.requires_good_network": {
  "data": {
   "shadows": "mne.utils.requires_good_network"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_stim_client_server.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_stim_client_server.test_connection": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "StopIteration",
    "mne.externals.six.moves.queue.Queue",
    "mne.realtime.StimServer",
    "mne.realtime.tests.test_stim_client_server._have_put_in_trigger",
    "mne.realtime.tests.test_stim_client_server._max_wait",
    "mne.realtime.tests.test_stim_client_server._server",
    "mne.realtime.tests.test_stim_client_server.threading",
    "mne.utils.requires_good_network",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.realtime.tests.test_stim_client_server.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "mne.realtime.tests.test_stim_client_server.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.report": {
  "data": {
   "symbols_in_volume": [
    "HTMLTemplate",
    "Template"
   ]
  },
  "type": "module"
 },
 "mne.report.Figure": {
  "data": {
   "shadows": "matplotlib.figure.Figure"
  },
  "type": "import"
 },
 "mne.report.FigureCanvas": {
  "data": {
   "shadows": "matplotlib.backends.backend_agg.FigureCanvasAgg"
  },
  "type": "import"
 },
 "mne.report.Report": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "mne.report.Report.__init__": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "get_subjects_dir",
    "mne.report._check_image_format"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.__len__": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.__repr__": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "len",
    "mne.report._get_fname"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._add_figs_to_section": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "mne.report._check_scale",
    "mne.report._fig_to_img",
    "mne.report.image_template",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._get_id": {
  "data": {
   "lineno": 862
  },
  "type": "function"
 },
 "mne.report.Report._init_render": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "list",
    "open",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_array": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "mne.report._iterate_axial_slices",
    "mne.report._iterate_coronal_slices",
    "mne.report._iterate_sagittal_slices"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_bem": {
  "data": {
   "lineno": 1725,
   "symbols_in_volume": [
    "get_subjects_dir",
    "glob.glob",
    "len",
    "nibabel.load",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_cov": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "mne.report._fig_to_img",
    "mne.report.image_template",
    "plot_cov",
    "read_cov"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_epochs": {
  "data": {
   "lineno": 1658,
   "symbols_in_volume": [
    "dict",
    "mne.report._fig_to_img",
    "mne.report.image_template",
    "read_epochs"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_eve": {
  "data": {
   "lineno": 1645,
   "symbols_in_volume": [
    "dict",
    "events",
    "mne.report._fig_to_img",
    "mne.report.image_template",
    "read_events"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_evoked": {
  "data": {
   "lineno": 1608,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "len",
    "mne.report._fig_to_img",
    "mne.report.image_template",
    "pick_types",
    "read_evokeds"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_forward": {
  "data": {
   "lineno": 1582,
   "symbols_in_volume": [
    "mne.report.re",
    "mne.report.repr_template",
    "read_forward_solution",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_image_png": {
  "data": {
   "lineno": 1526,
   "symbols_in_volume": [
    "nibabel.load",
    "os.path.basename",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_inverse": {
  "data": {
   "lineno": 1595,
   "symbols_in_volume": [
    "mne.report.re",
    "mne.report.repr_template",
    "read_inverse_operator",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_one_axis": {
  "data": {
   "lineno": 1173,
   "symbols_in_volume": [
    "max",
    "min",
    "mne.report._build_html_slider",
    "mne.report._iterate_mri_slices",
    "p_fun",
    "parallel",
    "parallel_func",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_one_bem_axis": {
  "data": {
   "lineno": 1487,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "mne.report._build_html_image",
    "mne.report._build_html_slider",
    "mne.report._figs_to_mrislices",
    "numpy.arange",
    "numpy.roll"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_raw": {
  "data": {
   "lineno": 1550,
   "symbols_in_volume": [
    "Raw",
    "_stamp_to_dt",
    "len",
    "mne.report.raw_template",
    "numpy.array",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_toc": {
  "data": {
   "lineno": 1379,
   "symbols_in_volume": [
    "list",
    "mne.report.SECTION_ORDER",
    "mne.report.VALID_EXTENSIONS",
    "mne.report._get_fname",
    "mne.report._get_toc_property",
    "mne.report._is_bad_fname",
    "mne.report.header_template",
    "mne.report.os",
    "mne.report.toc_list",
    "numpy.array",
    "read_evokeds",
    "set",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_trans": {
  "data": {
   "lineno": 1707,
   "symbols_in_volume": [
    "IOError",
    "dict",
    "mne.report._iterate_trans_views",
    "mne.report.image_template"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._render_whitened_evoked": {
  "data": {
   "lineno": 1686,
   "symbols_in_volume": [
    "dict",
    "mne.report._fig_to_img",
    "mne.report.image_template",
    "read_evokeds"
   ]
  },
  "type": "function"
 },
 "mne.report.Report._validate_input": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "mne.report._clean_varnames",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.add_bem_to_section": {
  "data": {
   "lineno": 1040
  },
  "type": "function"
 },
 "mne.report.Report.add_figs_to_section": {
  "data": {
   "lineno": 918,
   "symbols_in_volume": [
    "mne.report._check_image_format"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.add_htmls_to_section": {
  "data": {
   "lineno": 1010,
   "symbols_in_volume": [
    "mne.report.html_template",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.add_images_to_section": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "ValueError",
    "mne.report._check_scale",
    "mne.report.base64",
    "mne.report.image_template",
    "mne.report.os",
    "open",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.add_slider_to_section": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "mne.report._build_html_image",
    "mne.report._build_html_slider",
    "mne.report._check_image_format",
    "mne.report._check_scale",
    "mne.report._fig_to_img",
    "mne.report.slider_full_template",
    "numpy.arange",
    "numpy.ndarray",
    "tuple",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.parse_folder": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "ValueError",
    "check_n_jobs",
    "dict",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "mne.report._check_image_format",
    "mne.report._iterate_files",
    "mne.report._recursive_search",
    "numpy.array_split",
    "p_fun",
    "parallel",
    "parallel_func",
    "read_cov",
    "read_info",
    "set",
    "sorted",
    "sum",
    "tuple",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report.Report.save": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "hasattr",
    "mne.report._fix_global_ids",
    "mne.report.codecs",
    "mne.report.footer_template",
    "mne.report.time",
    "mne.report.webbrowser",
    "os.path.dirname",
    "os.path.isfile",
    "os.path.join",
    "os.path.realpath",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.report.SECTION_ORDER": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.report.VALID_EXTENSIONS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.report._build_html_image": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "id"
   ]
  },
  "type": "function"
 },
 "mne.report._build_html_slider": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "len",
    "mne.report.slider_template"
   ]
  },
  "type": "function"
 },
 "mne.report._build_image_png": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "BytesIO",
    "getattr",
    "matplotlib.backends.backend_agg.FigureCanvasAgg",
    "matplotlib.figure.Figure",
    "matplotlib.pyplot.cm",
    "matplotlib.pyplot.cm.gray",
    "mne.report.base64",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.report._check_image_format": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mne.report._check_scale": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "ValueError",
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "mne.report._clean_varnames": {
  "data": {
   "lineno": 1787,
   "symbols_in_volume": [
    "mne.report.re"
   ]
  },
  "type": "function"
 },
 "mne.report._fig_to_img": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "BytesIO",
    "Exception",
    "_TempDir",
    "_import_mlab",
    "function",
    "isinstance",
    "matplotlib.figure.Figure",
    "matplotlib.pyplot.axis",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.imshow",
    "mne.report._scale_mpl_figure",
    "mne.report.base64",
    "mne.report.os",
    "numpy.zeros",
    "os.path.join",
    "scipy.misc.imread",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.report._figs_to_mrislices": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.close",
    "max",
    "min",
    "numpy.array_split",
    "p_fun",
    "parallel",
    "parallel_func"
   ]
  },
  "type": "function"
 },
 "mne.report._fix_global_ids": {
  "data": {
   "lineno": 1809,
   "symbols_in_volume": [
    "len",
    "mne.report.re"
   ]
  },
  "type": "function"
 },
 "mne.report._get_fname": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "os.path.basename"
   ]
  },
  "type": "function"
 },
 "mne.report._get_toc_property": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "os.path.basename"
   ]
  },
  "type": "function"
 },
 "mne.report._is_bad_fname": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "mne.report.VALID_EXTENSIONS",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.report._iterate_axial_slices": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "mne.report._iterate_coronal_slices": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "numpy.flipud",
    "numpy.rot90",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.report._iterate_files": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "Exception",
    "_update_html",
    "os.path.join",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.report._iterate_files._update_html": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "mne.report._iterate_mri_slices": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "mne.report._build_html_image",
    "mne.report._build_image_png"
   ]
  },
  "type": "function"
 },
 "mne.report._iterate_sagittal_slices": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "mne.report._iterate_trans_views": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "_TempDir",
    "function",
    "isinstance",
    "len",
    "matplotlib.pyplot.subplots",
    "mne.report._fig_to_img",
    "mne.report.mayavi",
    "numpy.zeros",
    "os.path.join",
    "scipy.misc.imread",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.report._recursive_search": {
  "data": {
   "lineno": 1796,
   "symbols_in_volume": [
    "list",
    "mne.report.VALID_EXTENSIONS",
    "mne.report.fnmatch",
    "mne.report.os",
    "os.path.join",
    "os.path.realpath",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.report._scale_mpl_figure": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.text.Text"
   ]
  },
  "type": "function"
 },
 "mne.report.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "mne.report.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "mne.report.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "mne.report.footer_template": {
  "data": {
   "lineno": 601
  },
  "type": "constant"
 },
 "mne.report.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "mne.report.header_template": {
  "data": {
   "lineno": 459
  },
  "type": "constant"
 },
 "mne.report.html_template": {
  "data": {
   "lineno": 611
  },
  "type": "constant"
 },
 "mne.report.image_template": {
  "data": {
   "lineno": 618
  },
  "type": "constant"
 },
 "mne.report.imread": {
  "data": {
   "shadows": "scipy.misc.imread"
  },
  "type": "import"
 },
 "mne.report.mayavi": {
  "data": {
   "shadows": "mayavi"
  },
  "type": "import"
 },
 "mne.report.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.report.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.report.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.report.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.report.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.report.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.report.raw_template": {
  "data": {
   "lineno": 681
  },
  "type": "constant"
 },
 "mne.report.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.report.repr_template": {
  "data": {
   "lineno": 674
  },
  "type": "constant"
 },
 "mne.report.slider_full_template": {
  "data": {
   "lineno": 423
  },
  "type": "constant"
 },
 "mne.report.slider_template": {
  "data": {
   "lineno": 405
  },
  "type": "constant"
 },
 "mne.report.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "mne.report.toc_list": {
  "data": {
   "lineno": 744
  },
  "type": "constant"
 },
 "mne.report.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "mne.selection": {
  "data": {},
  "type": "module"
 },
 "mne.selection._EEG_SELECTIONS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.selection._SELECTIONS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.selection._divide_side": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.median",
    "numpy.sort",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.selection._divide_to_regions": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "_get_stim_channel",
    "_pick_data_channels",
    "abs",
    "len",
    "list",
    "mne.selection._divide_side",
    "numpy.abs",
    "numpy.append",
    "numpy.argsort",
    "numpy.array",
    "numpy.errstate",
    "numpy.mean",
    "numpy.setdiff1d",
    "numpy.where",
    "scipy.stats.zscore"
   ]
  },
  "type": "function"
 },
 "mne.selection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.selection.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.selection.read_selection": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "list",
    "open",
    "os.path.dirname",
    "os.path.isfile",
    "os.path.join",
    "pick_types",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.selection.zscore": {
  "data": {
   "shadows": "scipy.stats.zscore"
  },
  "type": "import"
 },
 "mne.simulation": {
  "data": {},
  "type": "module"
 },
 "mne.simulation.evoked": {
  "data": {},
  "type": "module"
 },
 "mne.simulation.evoked._generate_noise": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "len",
    "mne.simulation.evoked.warnings",
    "numpy.diag",
    "numpy.setdiff1d",
    "numpy.zeros",
    "pick_channels_cov",
    "scipy.signal.lfilter",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.simulation.evoked.add_noise_evoked": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "_time_mask",
    "deprecated",
    "float",
    "mne.simulation.evoked.copy",
    "numpy.log10",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.simulation.evoked.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.simulation.evoked.lfilter": {
  "data": {
   "shadows": "scipy.signal.lfilter"
  },
  "type": "import"
 },
 "mne.simulation.evoked.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mne.simulation.evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.evoked.simulate_evoked": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "DeprecationWarning",
    "_time_mask",
    "apply_forward",
    "float",
    "mne.simulation.evoked.math",
    "mne.simulation.evoked.simulate_noise_evoked",
    "numpy.inf",
    "numpy.int",
    "numpy.log10",
    "numpy.mean",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.simulation.evoked.simulate_noise_evoked": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "mne.simulation.evoked._generate_noise"
   ]
  },
  "type": "function"
 },
 "mne.simulation.evoked.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.simulation.metrics": {
  "data": {},
  "type": "module"
 },
 "mne.simulation.metrics._check_stc": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "mne.simulation.metrics.norm": {
  "data": {
   "shadows": "scipy.linalg.norm"
  },
  "type": "import"
 },
 "mne.simulation.metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.metrics.source_estimate_quantification": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "mne.simulation.metrics._check_stc",
    "numpy.dot",
    "numpy.mean",
    "numpy.sqrt",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.simulation.raw": {
  "data": {},
  "type": "module"
 },
 "mne.simulation.raw._iter_forward_solutions": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "RuntimeError",
    "_compute_forwards",
    "_get_trans",
    "_magnetic_dipole_field_vec",
    "_merge_meg_eeg_fwds",
    "_points_outside_surface",
    "_prepare_for_forward",
    "_to_forward_dict",
    "_transform_orig_meg_coils",
    "enumerate",
    "len",
    "numpy.array",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.where",
    "pick_types",
    "transform_surface_to"
   ]
  },
  "type": "function"
 },
 "mne.simulation.raw._log_ch": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "mne.simulation.raw._restrict_source_space_to": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.simulation.raw.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.simulation.raw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.raw.simulate_raw": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "RawArray",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "_Interp2",
    "_ensure_src",
    "_generate_noise",
    "_get_hpi_info",
    "_get_hpi_initial_fit",
    "_get_stim_channel",
    "_pl",
    "_stc_src_sel",
    "bool",
    "check_n_jobs",
    "check_random_state",
    "convert_forward_solution",
    "dict",
    "enumerate",
    "fit_sphere_to_headshape",
    "float",
    "head_pos_to_trans_rot_t",
    "int",
    "isinstance",
    "len",
    "list",
    "make_ad_hoc_cov",
    "make_sphere_model",
    "mne.simulation.raw._iter_forward_solutions",
    "mne.simulation.raw._log_ch",
    "mne.simulation.raw._restrict_source_space_to",
    "numpy.abs",
    "numpy.allclose",
    "numpy.arange",
    "numpy.argmin",
    "numpy.array",
    "numpy.array_equal",
    "numpy.c_",
    "numpy.ceil",
    "numpy.concatenate",
    "numpy.convolve",
    "numpy.cos",
    "numpy.cumsum",
    "numpy.dot",
    "numpy.hanning",
    "numpy.ndarray",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.r_",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "numpy.zeros",
    "pick_channels",
    "pick_info",
    "pick_types",
    "range",
    "read_bem_solution",
    "read_cov",
    "read_head_pos",
    "slice",
    "sum",
    "tuple",
    "type",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.simulation.source": {
  "data": {},
  "type": "module"
 },
 "mne.simulation.source.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.source.select_source_in_label": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "isinstance",
    "len",
    "list",
    "numpy.intersect1d"
   ]
  },
  "type": "function"
 },
 "mne.simulation.source.simulate_sparse_stc": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "_ensure_src",
    "check_random_state",
    "cls",
    "data_fun",
    "enumerate",
    "int",
    "len",
    "min",
    "mne.simulation.source.select_source_in_label",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.concatenate",
    "numpy.diff",
    "numpy.empty",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sin",
    "numpy.sort",
    "numpy.zeros",
    "range",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.simulation.source.simulate_stc": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "RuntimeError",
    "SourceEstimate",
    "ValueError",
    "enumerate",
    "len",
    "list",
    "numpy.argsort",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.concatenate",
    "numpy.intersect1d",
    "numpy.outer",
    "numpy.searchsorted",
    "numpy.tile",
    "numpy.unique",
    "value_fun",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests": {
  "data": {},
  "type": "module"
 },
 "mne.simulation.tests.test_evoked": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.simulation.tests.test_evoked.data_path",
    "mne.simulation.tests.test_evoked.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.simulation.tests.test_evoked.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.ave_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.cov_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.data_path": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.fwd_fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.raw_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_evoked.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.regularize": {
  "data": {
   "shadows": "mne.cov.regularize"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.simulate_evoked": {
  "data": {
   "shadows": "mne.simulation.simulate_evoked"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.simulate_sparse_stc": {
  "data": {
   "shadows": "mne.simulation.simulate_sparse_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.test_simulate_evoked": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mne.convert_forward_solution",
    "mne.cov.regularize",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.pick_types_forward",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.read_forward_solution",
    "mne.simulation.simulate_evoked",
    "mne.simulation.simulate_sparse_stc",
    "mne.simulation.tests.test_evoked.ave_fname",
    "mne.simulation.tests.test_evoked.cov_fname",
    "mne.simulation.tests.test_evoked.fwd_fname",
    "mne.simulation.tests.test_evoked.raw_fname",
    "mne.simulation.tests.test_evoked.warnings",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.inf",
    "numpy.linalg.norm",
    "numpy.linspace",
    "numpy.max",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_evoked.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_evoked.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.simulation.tests.test_metrics.data_path",
    "mne.simulation.tests.test_metrics.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.simulation.tests.test_metrics.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.data_path": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_metrics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.simulate_sparse_stc": {
  "data": {
   "shadows": "mne.simulation.simulate_sparse_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.source_estimate_quantification": {
  "data": {
   "shadows": "mne.simulation.source_estimate_quantification"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.src_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_metrics.test_metrics": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.simulation.simulate_sparse_stc",
    "mne.simulation.source_estimate_quantification",
    "mne.simulation.tests.test_metrics.src_fname",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_metrics.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_metrics.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.simulation.tests.test_raw.bem_path",
    "mne.simulation.tests.test_raw.data_path",
    "mne.simulation.tests.test_raw.subjects_dir",
    "mne.simulation.tests.test_raw.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.simulation.tests.test_raw.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._assert_quats": {
  "data": {
   "shadows": "mne.tests.test_chpi._assert_quats"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._calculate_chpi_positions": {
  "data": {
   "shadows": "mne.chpi._calculate_chpi_positions"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._get_data": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "len",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.read_raw_fif",
    "mne.make_sphere_model",
    "mne.pick_types",
    "mne.read_source_spaces",
    "mne.read_trans",
    "mne.simulation.tests.test_raw._make_stc",
    "mne.simulation.tests.test_raw.raw_fname",
    "mne.simulation.tests.test_raw.src_fname",
    "mne.simulation.tests.test_raw.trans_fname",
    "numpy.concatenate",
    "numpy.sort",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw._get_hpi_info": {
  "data": {
   "shadows": "mne.chpi._get_hpi_info"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw._make_stc": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "mne.simulation.simulate_sparse_stc",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.bem_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.bem_path": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.cov_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.data_path": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.fit_dipole": {
  "data": {
   "shadows": "mne.fit_dipole"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.make_ad_hoc_cov": {
  "data": {
   "shadows": "mne.make_ad_hoc_cov"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.pos_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.psd_welch": {
  "data": {
   "shadows": "mne.time_frequency.psd_welch"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.raw_chpi_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.raw_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.read_head_pos": {
  "data": {
   "shadows": "mne.chpi.read_head_pos"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.read_trans": {
  "data": {
   "shadows": "mne.read_trans"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.setup_source_space": {
  "data": {
   "shadows": "mne.setup_source_space"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.simulate_raw": {
  "data": {
   "shadows": "mne.simulation.simulate_raw"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.simulate_sparse_stc": {
  "data": {
   "shadows": "mne.simulation.simulate_sparse_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.src_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.subjects_dir": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.test_simulate_raw_bem": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.SourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.fit_dipole",
    "mne.make_ad_hoc_cov",
    "mne.pick_types",
    "mne.setup_source_space",
    "mne.simulation.simulate_raw",
    "mne.simulation.tests.test_raw._get_data",
    "mne.simulation.tests.test_raw.bem_fname",
    "mne.simulation.tests.test_raw.pytest",
    "mne.simulation.tests.test_raw.subjects_dir",
    "mne.transform_surface_to",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.concatenate",
    "numpy.corrcoef",
    "numpy.diag",
    "numpy.eye",
    "numpy.median",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_simulate_raw_chpi": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "len",
    "mne.chpi._calculate_chpi_positions",
    "mne.chpi._get_hpi_info",
    "mne.chpi.read_head_pos",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.make_sphere_model",
    "mne.pick_types",
    "mne.setup_volume_source_space",
    "mne.simulation.simulate_raw",
    "mne.simulation.tests.test_raw._make_stc",
    "mne.simulation.tests.test_raw.pos_fname",
    "mne.simulation.tests.test_raw.pytest",
    "mne.simulation.tests.test_raw.raw_chpi_fname",
    "mne.tests.test_chpi._assert_quats",
    "mne.time_frequency.psd_welch",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmin",
    "numpy.setdiff1d",
    "numpy.sort",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.test_simulate_raw_sphere": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "copy.deepcopy",
    "dict",
    "enumerate",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_cov",
    "mne.simulation.simulate_raw",
    "mne.simulation.tests.test_raw._get_data",
    "mne.simulation.tests.test_raw.bem_fname",
    "mne.simulation.tests.test_raw.cov_fname",
    "mne.simulation.tests.test_raw.pos_fname",
    "mne.simulation.tests.test_raw.src_fname",
    "mne.simulation.tests.test_raw.trans_fname",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.isclose",
    "numpy.mean",
    "numpy.setdiff1d",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_raw.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.trans_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_raw.transform_surface_to": {
  "data": {
   "shadows": "mne.transform_surface_to"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_raw.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.simulation.tests.test_source.data_path",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.simulation.tests.test_source.Label": {
  "data": {
   "shadows": "mne.label.Label"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.convert_forward_solution": {
  "data": {
   "shadows": "mne.convert_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.data_path": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_source.fname_fwd": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_source.label_names": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_source.label_names_single_hemi": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_source.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.pick_types_forward": {
  "data": {
   "shadows": "mne.pick_types_forward"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.read_forward_solution": {
  "data": {
   "shadows": "mne.read_forward_solution"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.read_forward_solution_meg": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "mne.convert_forward_solution",
    "mne.pick_types_forward",
    "mne.read_forward_solution"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.read_label": {
  "data": {
   "shadows": "mne.read_label"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.simulate_sparse_stc": {
  "data": {
   "shadows": "mne.simulation.source.simulate_sparse_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.simulate_stc": {
  "data": {
   "shadows": "mne.simulation.source.simulate_stc"
  },
  "type": "import"
 },
 "mne.simulation.tests.test_source.subjects_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.simulation.tests.test_source.test_generate_stc_single_hemi": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.Label",
    "mne.read_label",
    "mne.simulation.source.simulate_stc",
    "mne.simulation.tests.test_source.data_path",
    "mne.simulation.tests.test_source.fname_fwd",
    "mne.simulation.tests.test_source.label_names_single_hemi",
    "mne.simulation.tests.test_source.read_forward_solution_meg",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.intersect1d",
    "numpy.ones",
    "numpy.searchsorted",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_generate_stc_single_hemi.fun": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_simulate_sparse_stc": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_label",
    "mne.simulation.source.simulate_sparse_stc",
    "mne.simulation.tests.test_source.data_path",
    "mne.simulation.tests.test_source.fname_fwd",
    "mne.simulation.tests.test_source.label_names",
    "mne.simulation.tests.test_source.read_forward_solution_meg",
    "mne.simulation.tests.test_source.subjects_dir",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.float",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_simulate_sparse_stc_single_hemi": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_label",
    "mne.simulation.source.simulate_sparse_stc",
    "mne.simulation.tests.test_source.data_path",
    "mne.simulation.tests.test_source.fname_fwd",
    "mne.simulation.tests.test_source.label_names_single_hemi",
    "mne.simulation.tests.test_source.read_forward_solution_meg",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.float",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_simulate_stc": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "enumerate",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.Label",
    "mne.read_label",
    "mne.simulation.source.simulate_stc",
    "mne.simulation.tests.test_source.data_path",
    "mne.simulation.tests.test_source.fname_fwd",
    "mne.simulation.tests.test_source.label_names",
    "mne.simulation.tests.test_source.read_forward_solution_meg",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.concatenate",
    "numpy.intersect1d",
    "numpy.ones",
    "numpy.searchsorted",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.test_simulate_stc.fun": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "mne.simulation.tests.test_source.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.source_space": {
  "data": {},
  "type": "module"
 },
 "mne.source_space.GzipFile": {
  "data": {
   "shadows": "gzip.GzipFile"
  },
  "type": "import"
 },
 "mne.source_space.SourceSpaces": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "mne.source_space.SourceSpaces.__add__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "list.__add__",
    "mne.source_space.SourceSpaces"
   ]
  },
  "type": "function"
 },
 "mne.source_space.SourceSpaces.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "dict",
    "mne.source_space.SourceSpaces",
    "super"
   ]
  },
  "type": "function"
 },
 "mne.source_space.SourceSpaces.__repr__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "_coord_frame_name",
    "int",
    "mne.source_space._get_hemi",
    "mne.source_space._src_kind_dict"
   ]
  },
  "type": "function"
 },
 "mne.source_space.SourceSpaces.copy": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "mne.source_space.SourceSpaces.export_volume": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "_get_trans",
    "apply_trans",
    "combine_transforms",
    "dict",
    "enumerate",
    "int",
    "invert_transform",
    "len",
    "mne.source_space._get_lut",
    "mne.source_space._get_lut_id",
    "nibabel.Nifti1Header",
    "nibabel.Nifti1Image",
    "nibabel.freesurfer.mghformat.MGHImage",
    "nibabel.load",
    "nibabel.save",
    "numpy.array",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.prod",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.source_space.SourceSpaces.kind": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "len",
    "list",
    "mne.source_space._src_kind_dict",
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.source_space.SourceSpaces.plot": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "create_info",
    "dict",
    "isinstance",
    "list",
    "plot_alignment"
   ]
  },
  "type": "function"
 },
 "mne.source_space.SourceSpaces.save": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "mne.source_space.write_source_spaces"
   ]
  },
  "type": "function"
 },
 "mne.source_space._add_interpolator": {
  "data": {
   "lineno": 1989,
   "symbols_in_volume": [
    "Transform",
    "_print_coord_trans",
    "apply_trans",
    "combine_transforms",
    "dict",
    "int",
    "invert_transform",
    "len",
    "mne.source_space._get_mgz_header",
    "mne.source_space._vol_vertex",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.concatenate",
    "numpy.cumsum",
    "numpy.dot",
    "numpy.empty",
    "numpy.float32",
    "numpy.floor",
    "numpy.int32",
    "numpy.logical_and",
    "numpy.newaxis",
    "numpy.tile",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.linalg.inv",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "mne.source_space._add_patch_info": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.argsort",
    "numpy.r_",
    "numpy.searchsorted",
    "numpy.sort",
    "numpy.where",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.source_space._check_spacing": {
  "data": {
   "lineno": 1291,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "_get_ico_surface",
    "_tessellate_sphere_surf",
    "float",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.source_space._compare_source_spaces": {
  "data": {
   "lineno": 2693,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "enumerate",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.mean",
    "numpy.min",
    "numpy.setdiff1d",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.where",
    "numpy.zeros",
    "scipy.spatial.distance.cdist",
    "set",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.source_space._complete_source_space_info": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "_normalize_vectors",
    "fast_cross_3d",
    "numpy.linalg.norm",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.source_space._do_src_distances": {
  "data": {
   "lineno": 2352,
   "symbols_in_volume": [
    "enumerate",
    "func",
    "functools.partial",
    "len",
    "numpy.arange",
    "numpy.argmin",
    "numpy.empty",
    "numpy.float32",
    "numpy.inf",
    "numpy.int32",
    "numpy.r_",
    "scipy.sparse.csgraph.dijkstra",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.source_space._ensure_src": {
  "data": {
   "lineno": 2209,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "isinstance",
    "len",
    "mne.source_space.SourceSpaces",
    "mne.source_space.read_source_spaces",
    "os.path.isfile"
   ]
  },
  "type": "function"
 },
 "mne.source_space._ensure_src_subject": {
  "data": {
   "lineno": 2229,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mne.source_space._filter_source_spaces": {
  "data": {
   "lineno": 2115,
   "symbols_in_volume": [
    "RuntimeError",
    "_compute_nearest",
    "apply_trans",
    "invert_transform",
    "mne.source_space._add_patch_info",
    "mne.source_space._points_outside_surface",
    "numpy.logical_and",
    "numpy.logical_not",
    "numpy.logical_or",
    "numpy.sum",
    "numpy.where",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.source_space._get_hemi": {
  "data": {
   "lineno": 2496,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mne.source_space._get_lut": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.genfromtxt",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.source_space._get_lut_id": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.source_space._get_mgz_header": {
  "data": {
   "lineno": 1952,
   "symbols_in_volume": [
    "IOError",
    "dict",
    "float",
    "gzip.GzipFile",
    "int",
    "len",
    "numpy.array",
    "numpy.diag",
    "numpy.dot",
    "numpy.dtype",
    "numpy.eye",
    "numpy.float32",
    "numpy.ndarray",
    "scipy.linalg.inv"
   ]
  },
  "type": "function"
 },
 "mne.source_space._get_morph_src_reordering": {
  "data": {
   "lineno": 2628,
   "symbols_in_volume": [
    "RuntimeError",
    "enumerate",
    "get_subjects_dir",
    "len",
    "list",
    "mne.source_space._get_vertex_map_nn",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array_equal",
    "numpy.concatenate",
    "numpy.in1d",
    "numpy.sort",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.source_space._get_mri_header": {
  "data": {
   "lineno": 1942,
   "symbols_in_volume": [
    "AttributeError",
    "nibabel.load"
   ]
  },
  "type": "function"
 },
 "mne.source_space._get_vertex_map_nn": {
  "data": {
   "lineno": 2508,
   "symbols_in_volume": [
    "RuntimeError",
    "_compute_nearest",
    "_get_surf_neighbors",
    "_triangle_neighbors",
    "bool",
    "int",
    "len",
    "numpy.where",
    "numpy.zeros",
    "os.path.join",
    "read_surface",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.source_space._get_vertno": {
  "data": {
   "lineno": 951
  },
  "type": "function"
 },
 "mne.source_space._make_discrete_source_space": {
  "data": {
   "lineno": 1667,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "_normalize_vectors",
    "dict",
    "float",
    "int",
    "list",
    "numpy.arange",
    "numpy.array",
    "numpy.ones",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.source_space._make_volume_source_space": {
  "data": {
   "lineno": 1711,
   "symbols_in_volume": [
    "ImportError",
    "RuntimeError",
    "_compute_nearest",
    "apply_trans",
    "dict",
    "int",
    "len",
    "mne.source_space._filter_source_spaces",
    "mne.source_space._get_lut",
    "mne.source_space._get_lut_id",
    "mne.source_space._get_mgz_header",
    "mne.source_space._make_voxel_ras_trans",
    "nibabel.load",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.empty",
    "numpy.eye",
    "numpy.floor",
    "numpy.in1d",
    "numpy.linalg.norm",
    "numpy.logical_and",
    "numpy.logical_not",
    "numpy.logical_or",
    "numpy.max",
    "numpy.mean",
    "numpy.meshgrid",
    "numpy.min",
    "numpy.ones",
    "numpy.prod",
    "numpy.where",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.source_space._make_voxel_ras_trans": {
  "data": {
   "lineno": 1654,
   "symbols_in_volume": [
    "Transform",
    "numpy.c_",
    "numpy.newaxis",
    "numpy.r_",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.source_space._points_outside_surface": {
  "data": {
   "lineno": 2184,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.array_split",
    "numpy.atleast_2d",
    "numpy.pi",
    "numpy.sum",
    "p_fun",
    "parallel",
    "parallel_func"
   ]
  },
  "type": "function"
 },
 "mne.source_space._read_one_source_space": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "dir_tree_find",
    "find_tag",
    "int",
    "len",
    "mne.source_space._add_patch_info",
    "numpy.float",
    "numpy.int",
    "numpy.where",
    "numpy.zeros",
    "read_tag",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.source_space._read_source_spaces_from_tree": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "ValueError",
    "dir_tree_find",
    "len",
    "list",
    "mne.source_space.SourceSpaces",
    "mne.source_space._complete_source_space_info",
    "mne.source_space._read_one_source_space"
   ]
  },
  "type": "function"
 },
 "mne.source_space._read_talxfm": {
  "data": {
   "lineno": 1185,
   "symbols_in_volume": [
    "IOError",
    "ImportError",
    "Transform",
    "ValueError",
    "combine_transforms",
    "enumerate",
    "float",
    "has_nibabel",
    "invert_transform",
    "len",
    "list",
    "mne.source_space._get_mri_header",
    "numpy.array",
    "numpy.fromstring",
    "open",
    "os.path.isfile",
    "os.path.join",
    "run_subprocess"
   ]
  },
  "type": "function"
 },
 "mne.source_space._src_kind_dict": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "mne.source_space._vol_vertex": {
  "data": {
   "lineno": 1938
  },
  "type": "function"
 },
 "mne.source_space._write_one_source_space": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "ValueError",
    "end_block",
    "len",
    "numpy.array",
    "numpy.concatenate",
    "scipy.sparse.triu",
    "start_block",
    "write_coord_trans",
    "write_float_matrix",
    "write_float_sparse_rcs",
    "write_int",
    "write_int_matrix",
    "write_string"
   ]
  },
  "type": "function"
 },
 "mne.source_space._write_source_spaces_to_fid": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "end_block",
    "len",
    "mne.source_space._write_one_source_space",
    "start_block"
   ]
  },
  "type": "function"
 },
 "mne.source_space.add_source_space_distances": {
  "data": {
   "lineno": 2243,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "all",
    "any",
    "check_n_jobs",
    "check_version",
    "len",
    "list",
    "mesh_dist",
    "mne.source_space._add_patch_info",
    "mne.source_space._ensure_src",
    "numpy.any",
    "numpy.arange",
    "numpy.argmin",
    "numpy.array",
    "numpy.array_split",
    "numpy.concatenate",
    "numpy.float32",
    "numpy.inf",
    "numpy.isinf",
    "numpy.isscalar",
    "numpy.meshgrid",
    "numpy.zeros",
    "p_fun",
    "parallel",
    "parallel_func",
    "repr",
    "scipy.sparse.csgraph.dijkstra",
    "scipy.sparse.csr_matrix",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.source_space.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.source_space.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.source_space.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.source_space.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.source_space.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.source_space.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.source_space.dijkstra": {
  "data": {
   "shadows": "scipy.sparse.csgraph.dijkstra"
  },
  "type": "import"
 },
 "mne.source_space.find_source_space_hemi": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mne.source_space.get_volume_labels_from_aseg": {
  "data": {
   "lineno": 2381,
   "symbols_in_volume": [
    "mne.source_space._get_lut",
    "nibabel.load",
    "numpy.argsort",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mne.source_space.get_volume_labels_from_src": {
  "data": {
   "lineno": 2429,
   "symbols_in_volume": [
    "IOError",
    "Label",
    "ValueError",
    "any",
    "len",
    "list",
    "mne.source_space.get_volume_labels_from_aseg",
    "numpy.any",
    "numpy.array",
    "os.path.isfile",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.source_space.label_src_vertno_sel": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "Exception",
    "int",
    "len",
    "numpy.array",
    "numpy.hstack",
    "numpy.intersect1d",
    "numpy.searchsorted"
   ]
  },
  "type": "function"
 },
 "mne.source_space.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.source_space.morph_source_spaces": {
  "data": {
   "lineno": 2552,
   "symbols_in_volume": [
    "_get_call_line",
    "complete_surface_info",
    "dict",
    "get_subjects_dir",
    "int",
    "len",
    "list",
    "mne.source_space.SourceSpaces",
    "mne.source_space._ensure_src",
    "mne.source_space._ensure_src_subject",
    "mne.source_space._get_hemi",
    "mne.source_space._get_vertex_map_nn",
    "mne.source_space.os",
    "numpy.sort",
    "numpy.zeros",
    "os.path.join",
    "read_surface"
   ]
  },
  "type": "function"
 },
 "mne.source_space.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.source_space.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.source_space.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.source_space.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.source_space.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.source_space.read_source_spaces": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "check_fname",
    "dir_tree_find",
    "fiff_open",
    "mne.source_space._read_source_spaces_from_tree",
    "range",
    "read_tag"
   ]
  },
  "type": "function"
 },
 "mne.source_space.setup_source_space": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "IOError",
    "_create_surf_spacing",
    "dict",
    "get_subjects_dir",
    "mne.source_space.SourceSpaces",
    "mne.source_space._check_spacing",
    "mne.source_space.add_source_space_distances",
    "mne.source_space.os",
    "os.path.isfile",
    "os.path.join",
    "os.path.split",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.source_space.setup_volume_source_space": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "IOError",
    "KeyError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "all",
    "complete_surface_info",
    "copy.deepcopy",
    "dict",
    "float",
    "get_subjects_dir",
    "isinstance",
    "list",
    "mne.source_space.SourceSpaces",
    "mne.source_space._add_interpolator",
    "mne.source_space._make_discrete_source_space",
    "mne.source_space._make_volume_source_space",
    "mne.source_space.get_volume_labels_from_aseg",
    "mne.source_space.os",
    "numpy.asarray",
    "os.path.isfile",
    "os.path.join",
    "read_bem_surfaces",
    "read_surface"
   ]
  },
  "type": "function"
 },
 "mne.source_space.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.source_space.vertex_to_mni": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "apply_trans",
    "get_subjects_dir",
    "has_freesurfer",
    "has_nibabel",
    "isinstance",
    "len",
    "list",
    "mne.source_space._read_talxfm",
    "numpy.array",
    "numpy.ndarray",
    "os.path.join",
    "read_surface",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.source_space.write_source_spaces": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "_check_fname",
    "check_fname",
    "end_block",
    "end_file",
    "mne.source_space._write_source_spaces_to_fid",
    "start_block",
    "start_file",
    "write_id",
    "write_string"
   ]
  },
  "type": "function"
 },
 "mne.stats": {
  "data": {},
  "type": "module"
 },
 "mne.stats.multi_comp": {
  "data": {},
  "type": "module"
 },
 "mne.stats.multi_comp._ecdf": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.stats.multi_comp.bonferroni_correction": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "float",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "mne.stats.multi_comp.fdr_correction": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "mne.stats.multi_comp._ecdf",
    "numpy.arange",
    "numpy.argsort",
    "numpy.asarray",
    "numpy.minimum.accumulate",
    "numpy.nonzero",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.stats.multi_comp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.parametric": {
  "data": {},
  "type": "module"
 },
 "mne.stats.parametric._f_oneway": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "functools.reduce",
    "len",
    "numpy.array",
    "numpy.sum",
    "scipy.stats.f.sf",
    "sf"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric._get_contrast_indices": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.binary_repr"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric._iter_contrasts": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "len",
    "mne.stats.parametric._get_contrast_indices",
    "numpy.eye",
    "numpy.kron",
    "numpy.linalg.matrix_rank",
    "numpy.ones",
    "range",
    "scipy.signal.detrend"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric._map_effects": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "mne.stats.parametric._get_contrast_indices",
    "numpy.arange",
    "numpy.where",
    "string.ascii_uppercase"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric._parametric_ci": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "numpy.asarray",
    "scipy.stats.sem",
    "scipy.stats.t.interval",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric.ascii_uppercase": {
  "data": {
   "shadows": "string.ascii_uppercase"
  },
  "type": "import"
 },
 "mne.stats.parametric.detrend": {
  "data": {
   "shadows": "scipy.signal.detrend"
  },
  "type": "import"
 },
 "mne.stats.parametric.f": {
  "data": {
   "shadows": "scipy.stats.f"
  },
  "type": "import"
 },
 "mne.stats.parametric.f_mway_rm": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "len",
    "mne.stats.parametric._iter_contrasts",
    "mne.stats.parametric._map_effects",
    "numpy.array",
    "numpy.asarray",
    "numpy.dot",
    "numpy.empty",
    "numpy.maximum",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.prod",
    "numpy.rollaxis",
    "numpy.squeeze",
    "numpy.sum",
    "numpy.trace",
    "numpy.zeros",
    "scipy.stats.f"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric.f_oneway": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "mne.stats.parametric._f_oneway"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric.f_threshold_mway_rm": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "len",
    "mne.stats.parametric._iter_contrasts",
    "mne.stats.parametric._map_effects",
    "scipy.stats.f"
   ]
  },
  "type": "function"
 },
 "mne.stats.parametric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.parametric.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "mne.stats.parametric.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.permutations": {
  "data": {},
  "type": "module"
 },
 "mne.stats.permutations._bootstrap_ci": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "check_random_state",
    "int",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.percentile",
    "stat_fun"
   ]
  },
  "type": "function"
 },
 "mne.stats.permutations._bootstrap_ci.stat_fun": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "mne.stats.permutations._ci": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "_parametric_ci",
    "mne.stats.permutations._bootstrap_ci"
   ]
  },
  "type": "function"
 },
 "mne.stats.permutations._max_stat": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "float",
    "len",
    "math.sqrt",
    "numpy.abs",
    "numpy.dot",
    "numpy.max",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.stats.permutations.bin_perm_rep": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.empty",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.stats.permutations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.permutations.permutation_t_test": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "float",
    "math.sqrt",
    "mne.stats.permutations._max_stat",
    "mne.stats.permutations.bin_perm_rep",
    "my_max_stat",
    "numpy.abs",
    "numpy.array_split",
    "numpy.concatenate",
    "numpy.mean",
    "numpy.random.rand",
    "numpy.searchsorted",
    "numpy.sign",
    "numpy.sort",
    "numpy.sqrt",
    "parallel",
    "parallel_func"
   ]
  },
  "type": "function"
 },
 "mne.stats.permutations.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "mne.stats.regression": {
  "data": {},
  "type": "module"
 },
 "mne.stats.regression._clean_rerp_input": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "_reject_data_segments",
    "numpy.setdiff1d",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression._fit_lm": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "numpy.abs",
    "numpy.clip",
    "numpy.diag",
    "numpy.dot",
    "numpy.empty_like",
    "numpy.finfo",
    "numpy.float64",
    "numpy.inf",
    "numpy.log10",
    "numpy.product",
    "numpy.reshape",
    "numpy.sign",
    "numpy.sqrt",
    "range",
    "scipy.linalg.inv",
    "scipy.linalg.lstsq",
    "scipy.stats.t.cdf",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression._make_evokeds": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "EvokedArray",
    "dict",
    "float"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression._prepare_rerp_data": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "events.copy",
    "int",
    "len",
    "pick_info",
    "pick_types",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression._prepare_rerp_preds": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.in1d",
    "numpy.newaxis",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.where",
    "scipy.sparse.dia_matrix",
    "scipy.sparse.hstack"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression.isgenerator": {
  "data": {
   "shadows": "inspect.isgenerator"
  },
  "type": "import"
 },
 "mne.stats.regression.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.stats.regression.linear_regression": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "EvokedArray",
    "RuntimeError",
    "ValueError",
    "collections.namedtuple",
    "enumerate",
    "inspect.isgenerator",
    "isinstance",
    "len",
    "list",
    "lm",
    "mne.stats.regression._fit_lm",
    "next",
    "numpy.array",
    "numpy.product",
    "numpy.zeros",
    "pick_types",
    "range",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression.linear_regression_raw": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "callable",
    "dict",
    "events",
    "isinstance",
    "mne.stats.regression._clean_rerp_input",
    "mne.stats.regression._make_evokeds",
    "mne.stats.regression._prepare_rerp_data",
    "mne.stats.regression._prepare_rerp_preds",
    "set",
    "solver",
    "str",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression.linear_regression_raw.solver": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "scipy.linalg.solve"
   ]
  },
  "type": "function"
 },
 "mne.stats.regression.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mne.stats.regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.regression.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.stats.regression.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.tests": {
  "data": {},
  "type": "module"
 },
 "mne.stats.tests.test_cluster_level": {
  "data": {
   "symbols_in_volume": [
    "mne.stats.tests.test_cluster_level.warnings",
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.stats.tests.test_cluster_level._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level._force_serial": {
  "data": {
   "shadows": "mne.parallel._force_serial"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level._get_conditions": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "mne.stats.tests.test_cluster_level.n_space",
    "numpy.convolve",
    "numpy.hanning",
    "numpy.newaxis",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.grid_to_graph": {
  "data": {
   "shadows": "scikits.learn.feature_extraction.image.grid_to_graph"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.n_space": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.stats.tests.test_cluster_level.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.permutation_cluster_1samp_test": {
  "data": {
   "shadows": "mne.stats.cluster_level.permutation_cluster_1samp_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.permutation_cluster_test": {
  "data": {
   "shadows": "mne.stats.cluster_level.permutation_cluster_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.spatio_temporal_cluster_1samp_test": {
  "data": {
   "shadows": "mne.stats.cluster_level.spatio_temporal_cluster_1samp_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.spatio_temporal_cluster_test": {
  "data": {
   "shadows": "mne.stats.cluster_level.spatio_temporal_cluster_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.summarize_clusters_stc": {
  "data": {
   "shadows": "mne.stats.cluster_level.summarize_clusters_stc"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.test_cache_dir": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "functools.partial",
    "mne.stats.cluster_level.permutation_cluster_1samp_test",
    "mne.stats.cluster_level.ttest_1samp_no_p",
    "mne.stats.tests.test_cluster_level.os",
    "mne.stats.tests.test_cluster_level.warnings",
    "mne.utils._TempDir",
    "mne.utils.catch_logging",
    "nose.tools.assert_true",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_cluster_permutation_t_test": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "functools.partial",
    "mne.stats.cluster_level.permutation_cluster_1samp_test",
    "mne.stats.cluster_level.ttest_1samp_no_p",
    "mne.stats.tests.test_cluster_level._get_conditions",
    "mne.stats.tests.test_cluster_level.warnings",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_cluster_permutation_test": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "mne.stats.cluster_level.permutation_cluster_test",
    "mne.stats.tests.test_cluster_level._get_conditions",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_cluster_permutation_with_connectivity": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "TypeError",
    "ValueError",
    "dict",
    "func",
    "isinstance",
    "len",
    "list",
    "mne.parallel._force_serial",
    "mne.stats.cluster_level.permutation_cluster_1samp_test",
    "mne.stats.cluster_level.permutation_cluster_test",
    "mne.stats.cluster_level.spatio_temporal_cluster_1samp_test",
    "mne.stats.cluster_level.spatio_temporal_cluster_test",
    "mne.stats.tests.test_cluster_level._get_conditions",
    "mne.stats.tests.test_cluster_level.n_space",
    "mne.stats.tests.test_cluster_level.warnings",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.concatenate",
    "numpy.min",
    "numpy.reshape",
    "numpy.sort",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "scikits.learn.feature_extraction.image.grid_to_graph",
    "scipy.linalg.block_diag",
    "scipy.sparse.coo_matrix",
    "set",
    "spatio_temporal_func",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_permutation_connectivity_equiv": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "ImportError",
    "bool",
    "dict",
    "enumerate",
    "functools.partial",
    "isinstance",
    "len",
    "mne.stats.cluster_level.permutation_cluster_1samp_test",
    "mne.stats.cluster_level.ttest_1samp_no_p",
    "mne.stats.tests.test_cluster_level.n_space",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.ndarray",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.where",
    "numpy.zeros",
    "scikits.learn.feature_extraction.image.grid_to_graph",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_permutation_large_n_samples": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "len",
    "mne.stats.cluster_level.permutation_cluster_1samp_test",
    "numpy.random.RandomState",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_permutation_step_down_p": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ImportError",
    "mne.stats.cluster_level.permutation_cluster_1samp_test",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.random.RandomState",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_permutation_test_H0": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "min",
    "mne.stats.cluster_level.spatio_temporal_cluster_1samp_test",
    "mne.stats.tests.test_cluster_level.warnings",
    "nose.tools.assert_true",
    "numpy.ndarray",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal",
    "str",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_spatio_temporal_cluster_connectivity": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "dict",
    "mne.stats.cluster_level.spatio_temporal_cluster_test",
    "mne.stats.tests.test_cluster_level._get_conditions",
    "nose.tools.assert_raises",
    "numpy.dstack",
    "numpy.random.RandomState",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.transpose",
    "scikits.learn.feature_extraction.image.grid_to_graph"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.test_summarize_clusters": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.stats.cluster_level.summarize_clusters_stc",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.random.random"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.ttest_1samp": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "scipy.stats.ttest_1samp"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_cluster_level.ttest_1samp_no_p": {
  "data": {
   "shadows": "mne.stats.cluster_level.ttest_1samp_no_p"
  },
  "type": "import"
 },
 "mne.stats.tests.test_cluster_level.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp": {
  "data": {},
  "type": "module"
 },
 "mne.stats.tests.test_multi_comp.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.bonferroni_correction": {
  "data": {
   "shadows": "mne.stats.bonferroni_correction"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.fdr_correction": {
  "data": {
   "shadows": "mne.stats.fdr_correction"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.tests.test_multi_comp.test_multi_pval_correction": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "mne.stats.bonferroni_correction",
    "mne.stats.fdr_correction",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.all",
    "numpy.mean",
    "numpy.min",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "scipy.stats.t.ppf",
    "scipy.stats.ttest_1samp"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_parametric": {
  "data": {
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "module"
 },
 "mne.stats.tests.test_parametric._map_effects": {
  "data": {
   "shadows": "mne.stats.parametric._map_effects"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.f_mway_rm": {
  "data": {
   "shadows": "mne.stats.parametric.f_mway_rm"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.f_threshold_mway_rm": {
  "data": {
   "shadows": "mne.stats.parametric.f_threshold_mway_rm"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.generate_data": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_parametric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mne.stats.tests.test_parametric.test_external": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.stats.tests.test_parametric.test_f_twoway_rm": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "itertools.product",
    "len",
    "mne.stats.parametric._map_effects",
    "mne.stats.parametric.f_mway_rm",
    "mne.stats.parametric.f_threshold_mway_rm",
    "mne.stats.tests.test_parametric.generate_data",
    "mne.stats.tests.test_parametric.test_external",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_parametric.test_map_effects": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "mne.stats.parametric._map_effects",
    "nose.tools.assert_raises",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_permutations": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.stats.tests.test_permutations._bootstrap_ci": {
  "data": {
   "shadows": "mne.stats.permutations._bootstrap_ci"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations._ci": {
  "data": {
   "shadows": "mne.stats.permutations._ci"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.permutation_t_test": {
  "data": {
   "shadows": "mne.stats.permutations.permutation_t_test"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "mne.stats.tests.test_permutations.test_ci": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "mne.stats.permutations._bootstrap_ci",
    "mne.stats.permutations._ci",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_permutations.test_permutation_t_test": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "mne.stats.permutations.permutation_t_test",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_equal",
    "scipy.stats.ttest_1samp"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.stats.tests.test_regression.data_path",
    "mne.stats.tests.test_regression.warnings",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.stats.tests.test_regression.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.data_path": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.stats.tests.test_regression.event_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.stats.tests.test_regression.hann": {
  "data": {
   "shadows": "scipy.signal.hann"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.linear_regression": {
  "data": {
   "shadows": "mne.stats.regression.linear_regression"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.linear_regression_raw": {
  "data": {
   "shadows": "mne.stats.regression.linear_regression_raw"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.raw_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.stats.tests.test_regression.read_source_estimate": {
  "data": {
   "shadows": "mne.read_source_estimate"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.ridge_regression": {
  "data": {
   "shadows": "sklearn.linear_model.ridge.ridge_regression"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.stc_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.stats.tests.test_regression.test_continuous_regression_no_overlap": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.stats.regression.linear_regression_raw",
    "mne.stats.tests.test_regression.event_fname",
    "mne.stats.tests.test_regression.mne",
    "mne.stats.tests.test_regression.raw_fname",
    "nose.tools.assert_raises",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.test_continuous_regression_with_overlap": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "events",
    "int",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.RawArray",
    "mne.stats.regression.linear_regression_raw",
    "mne.stats.tests.test_regression.mne",
    "mne.stats.tests.test_regression.warnings",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_raises",
    "numpy.convolve",
    "numpy.newaxis",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "scipy.signal.hann"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.test_continuous_regression_with_overlap.solT": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge.ridge_regression"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.test_continuous_regression_with_overlap.solver": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "sklearn.linear_model.ridge.ridge_regression"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.test_regression": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "RuntimeWarning",
    "ValueError",
    "dict",
    "events",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_estimate",
    "mne.stats.regression.linear_regression",
    "mne.stats.tests.test_regression.event_fname",
    "mne.stats.tests.test_regression.mne",
    "mne.stats.tests.test_regression.raw_fname",
    "mne.stats.tests.test_regression.stc_fname",
    "mne.stats.tests.test_regression.warnings",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.stats.tests.test_regression.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.stats.tests.test_regression.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests": {
  "data": {},
  "type": "module"
 },
 "mne.tests.common": {
  "data": {},
  "type": "module"
 },
 "mne.tests.common._check_snr": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "mne.tests.common._get_data",
    "nose.tools.assert_true",
    "numpy.clip",
    "numpy.inf",
    "numpy.mean",
    "numpy.median",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "mne.tests.common._dig_sort_key": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "mne.tests.common._get_data": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.tests.common.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.common.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.common.assert_dig_allclose": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "any",
    "enumerate",
    "fit_sphere_to_headshape",
    "len",
    "mne.tests.common._dig_sort_key",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.common.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.common.assert_meg_snr": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "mne.tests.common._check_snr",
    "mne.tests.common._get_data",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.setdiff1d",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.tests.common.assert_naming": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.tests.common.assert_snr": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.tests.common.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.common.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.tests.common.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_annotations": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_annotations.data_dir",
    "mne.utils.run_tests_if_main",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_annotations.Annotations": {
  "data": {
   "shadows": "mne.annotations.Annotations"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_annotations._sync_onset": {
  "data": {
   "shadows": "mne.annotations._sync_onset"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.concatenate_raws": {
  "data": {
   "shadows": "mne.io.concatenate_raws"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.data_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.tests.test_annotations.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.fif_fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.tests.test_annotations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.test_annotation_epoching": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.concatenate_raws",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotation_filtering": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "dict",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.io.concatenate_raws",
    "numpy.concatenate",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotation_omit": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ValueError",
    "mne.annotations.Annotations",
    "mne.create_info",
    "mne.io.RawArray",
    "nose.tools.assert_raises",
    "numpy.concatenate",
    "numpy.isfinite",
    "numpy.nan",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_annotations": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "datetime.datetime.utcnow",
    "enumerate",
    "len",
    "mne.annotations.Annotations",
    "mne.create_info",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.RawArray",
    "mne.io.concatenate_raws",
    "mne.io.read_raw_fif",
    "mne.tests.test_annotations.fif_fname",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.ones",
    "numpy.random.randn",
    "numpy.repeat",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.where",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.test_raw_reject": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "mne.annotations.Annotations",
    "mne.annotations._sync_onset",
    "mne.create_info",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.RawArray",
    "mne.io.read_raw_fif",
    "mne.tests.test_annotations.fif_fname",
    "mne.tests.test_annotations.warnings",
    "nose.tools.assert_true",
    "numpy.isnan",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_annotations.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_annotations.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_bem": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_bem.matplotlib",
    "mne.tests.test_bem.subjects_dir",
    "mne.tests.test_bem.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_bem.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_bem.Info": {
  "data": {
   "shadows": "mne.Info"
  },
  "type": "import"
 },
 "mne.tests.test_bem.Transform": {
  "data": {
   "shadows": "mne.Transform"
  },
  "type": "import"
 },
 "mne.tests.test_bem._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_bem._assert_complete_surface": {
  "data": {
   "shadows": "mne.bem._assert_complete_surface"
  },
  "type": "import"
 },
 "mne.tests.test_bem._assert_inside": {
  "data": {
   "shadows": "mne.bem._assert_inside"
  },
  "type": "import"
 },
 "mne.tests.test_bem._bem_find_surface": {
  "data": {
   "shadows": "mne.bem._bem_find_surface"
  },
  "type": "import"
 },
 "mne.tests.test_bem._check_surface_size": {
  "data": {
   "shadows": "mne.bem._check_surface_size"
  },
  "type": "import"
 },
 "mne.tests.test_bem._compare_bem_solutions": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "mne.tests.test_bem._compare_bem_surfaces",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem._compare_bem_surfaces": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem._get_ico_map": {
  "data": {
   "shadows": "mne.bem._get_ico_map"
  },
  "type": "import"
 },
 "mne.tests.test_bem._ico_downsample": {
  "data": {
   "shadows": "mne.bem._ico_downsample"
  },
  "type": "import"
 },
 "mne.tests.test_bem._order_surfaces": {
  "data": {
   "shadows": "mne.bem._order_surfaces"
  },
  "type": "import"
 },
 "mne.tests.test_bem.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_bem.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_bem.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_bem.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_bem.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_bem.copy": {
  "data": {
   "shadows": "shutil.copy"
  },
  "type": "import"
 },
 "mne.tests.test_bem.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_bem.fit_sphere_to_headshape": {
  "data": {
   "shadows": "mne.preprocessing.maxfilter.fit_sphere_to_headshape"
  },
  "type": "import"
 },
 "mne.tests.test_bem.fname_bem_1": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.tests.test_bem.fname_bem_3": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_bem.fname_bem_sol_1": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.tests.test_bem.fname_bem_sol_3": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.tests.test_bem.fname_raw": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_bem.make_bem_model": {
  "data": {
   "shadows": "mne.make_bem_model"
  },
  "type": "import"
 },
 "mne.tests.test_bem.make_bem_solution": {
  "data": {
   "shadows": "mne.make_bem_solution"
  },
  "type": "import"
 },
 "mne.tests.test_bem.make_flash_bem": {
  "data": {
   "shadows": "mne.bem.make_flash_bem"
  },
  "type": "import"
 },
 "mne.tests.test_bem.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.tests.test_bem.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.tests.test_bem.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_bem.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_bem.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.tests.test_bem.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_bem.read_bem_solution": {
  "data": {
   "shadows": "mne.read_bem_solution"
  },
  "type": "import"
 },
 "mne.tests.test_bem.read_bem_surfaces": {
  "data": {
   "shadows": "mne.read_bem_surfaces"
  },
  "type": "import"
 },
 "mne.tests.test_bem.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.tests.test_bem.read_surface": {
  "data": {
   "shadows": "mne.surface.read_surface"
  },
  "type": "import"
 },
 "mne.tests.test_bem.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "mne.tests.test_bem.requires_freesurfer": {
  "data": {
   "shadows": "mne.utils.requires_freesurfer"
  },
  "type": "import"
 },
 "mne.tests.test_bem.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_bem.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_bem.subjects_dir": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_bem.test_bem_model": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.datasets.testing.requires_testing_data",
    "mne.make_bem_model",
    "mne.read_bem_surfaces",
    "mne.tests.test_bem._compare_bem_surfaces",
    "mne.tests.test_bem.fname_bem_1",
    "mne.tests.test_bem.fname_bem_3",
    "mne.tests.test_bem.subjects_dir",
    "mne.utils._TempDir",
    "mne.write_bem_surfaces",
    "nose.tools.assert_raises",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_bem_solution": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "len",
    "mne.bem._assert_complete_surface",
    "mne.bem._assert_inside",
    "mne.bem._check_surface_size",
    "mne.bem._get_ico_map",
    "mne.bem._ico_downsample",
    "mne.bem._order_surfaces",
    "mne.datasets.testing.requires_testing_data",
    "mne.make_bem_model",
    "mne.make_bem_solution",
    "mne.read_bem_solution",
    "mne.read_bem_surfaces",
    "mne.tests.test_bem._compare_bem_solutions",
    "mne.tests.test_bem.fname_bem_1",
    "mne.tests.test_bem.fname_bem_3",
    "mne.tests.test_bem.fname_bem_sol_1",
    "mne.tests.test_bem.fname_bem_sol_3",
    "mne.tests.test_bem.pytest",
    "mne.tests.test_bem.subjects_dir",
    "mne.utils._TempDir",
    "mne.write_bem_solution",
    "nose.tools.assert_raises",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_fit_sphere_to_headshape": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "copy.deepcopy",
    "dict",
    "len",
    "mne.Info",
    "mne.Transform",
    "mne.io.constants.FIFF.FIFFV_COORD_DEVICE",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.io.constants.FIFF.FIFFV_POINT_CARDINAL",
    "mne.io.constants.FIFF.FIFFV_POINT_EEG",
    "mne.io.constants.FIFF.FIFFV_POINT_EXTRA",
    "mne.io.constants.FIFF.FIFFV_POINT_HPI",
    "mne.io.constants.FIFF.FIFFV_POINT_LPA",
    "mne.io.constants.FIFF.FIFFV_POINT_NASION",
    "mne.io.constants.FIFF.FIFFV_POINT_RPA",
    "mne.preprocessing.maxfilter.fit_sphere_to_headshape",
    "mne.tests.test_bem.warnings",
    "mne.transforms.translation",
    "mne.utils.catch_logging",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_io_bem": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "mne.bem._bem_find_surface",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_bem_solution",
    "mne.read_bem_surfaces",
    "mne.tests.test_bem._compare_bem_solutions",
    "mne.tests.test_bem._compare_bem_surfaces",
    "mne.tests.test_bem.fname_bem_3",
    "mne.tests.test_bem.fname_bem_sol_1",
    "mne.tests.test_bem.fname_bem_sol_3",
    "mne.tests.test_bem.fname_raw",
    "mne.utils._TempDir",
    "mne.write_bem_solution",
    "mne.write_bem_surfaces",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_make_flash_bem": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "mne.bem.make_flash_bem",
    "mne.datasets.testing.requires_testing_data",
    "mne.surface.read_surface",
    "mne.tests.test_bem.subjects_dir",
    "mne.utils._TempDir",
    "mne.utils.requires_freesurfer",
    "mne.utils.requires_nibabel",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.join",
    "os.remove",
    "shutil.copy"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem.test_make_sphere_model": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "mne.io.read_info",
    "mne.make_sphere_model",
    "mne.tests.test_bem.fname_raw",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_bem.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_bem.translation": {
  "data": {
   "shadows": "mne.transforms.translation"
  },
  "type": "import"
 },
 "mne.tests.test_bem.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_bem.write_bem_solution": {
  "data": {
   "shadows": "mne.write_bem_solution"
  },
  "type": "import"
 },
 "mne.tests.test_bem.write_bem_surfaces": {
  "data": {
   "shadows": "mne.write_bem_surfaces"
  },
  "type": "import"
 },
 "mne.tests.test_chpi": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_chpi.base_dir",
    "mne.tests.test_chpi.data_path",
    "mne.tests.test_chpi.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_chpi.Dipole": {
  "data": {
   "shadows": "mne.Dipole"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._angle_between_quats": {
  "data": {
   "shadows": "mne.transforms._angle_between_quats"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._assert_quats": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "AssertionError",
    "mne.chpi.head_pos_to_trans_rot_t",
    "mne.transforms._angle_between_quats",
    "mne.transforms.rot_to_quat",
    "nose.tools.assert_true",
    "numpy.argmax",
    "numpy.isclose",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "scipy.interpolate.interp1d"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi._calculate_chpi_coil_locs": {
  "data": {
   "shadows": "mne.chpi._calculate_chpi_coil_locs"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._calculate_chpi_positions": {
  "data": {
   "shadows": "mne.chpi._calculate_chpi_positions"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._decimate_chpi": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "mne.io.RawArray",
    "numpy.mod"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi._get_hpi_info": {
  "data": {
   "shadows": "mne.chpi._get_hpi_info"
  },
  "type": "import"
 },
 "mne.tests.test_chpi._get_hpi_initial_fit": {
  "data": {
   "shadows": "mne.chpi._get_hpi_initial_fit"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.art_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.art_mc_fname": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.assert_meg_snr": {
  "data": {
   "shadows": "mne.tests.common.assert_meg_snr"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.assert_raises_regex": {
  "data": {
   "shadows": "mne.fixes.assert_raises_regex"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.base_dir": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.chpi5_fif_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.chpi5_pos_fname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.chpi_fif_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.ctf_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.data_path": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.filter_chpi": {
  "data": {
   "shadows": "mne.chpi.filter_chpi"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.head_pos_to_trans_rot_t": {
  "data": {
   "shadows": "mne.chpi.head_pos_to_trans_rot_t"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.hp_fif_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.hp_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.interp1d": {
  "data": {
   "shadows": "scipy.interpolate.interp1d"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.make_forward_dipole": {
  "data": {
   "shadows": "mne.make_forward_dipole"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.pos_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.raw_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.read_head_pos": {
  "data": {
   "shadows": "mne.chpi.read_head_pos"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.read_raw_artemis123": {
  "data": {
   "shadows": "mne.io.read_raw_artemis123"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.rot_to_quat": {
  "data": {
   "shadows": "mne.transforms.rot_to_quat"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.simulate_raw": {
  "data": {
   "shadows": "mne.simulation.simulate_raw"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.sss_fif_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.sss_hpisubt_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.test_calculate_chpi_coil_locs": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "mne.chpi._calculate_chpi_coil_locs",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_artemis123",
    "mne.io.read_raw_fif",
    "mne.tests.test_chpi._decimate_chpi",
    "mne.tests.test_chpi.art_fname",
    "mne.tests.test_chpi.chpi_fif_fname",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_calculate_chpi_positions": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "mne.chpi._calculate_chpi_positions",
    "mne.chpi.read_head_pos",
    "mne.datasets.testing.requires_testing_data",
    "mne.fixes.assert_raises_regex",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.io.constants.FIFF.FIFFV_COORD_UNKNOWN",
    "mne.io.constants.FIFF.FIFFV_POINT_HPI",
    "mne.io.read_raw_artemis123",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.tests.test_chpi._assert_quats",
    "mne.tests.test_chpi._decimate_chpi",
    "mne.tests.test_chpi.art_fname",
    "mne.tests.test_chpi.art_mc_fname",
    "mne.tests.test_chpi.chpi_fif_fname",
    "mne.tests.test_chpi.pos_fname",
    "mne.tests.test_chpi.pytest",
    "mne.tests.test_chpi.test_fif_fname",
    "mne.tests.test_chpi.warnings",
    "mne.utils.catch_logging",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_calculate_chpi_positions_on_chpi5_in_one_second_steps": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "mne.chpi._calculate_chpi_positions",
    "mne.chpi.read_head_pos",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.tests.test_chpi._assert_quats",
    "mne.tests.test_chpi._decimate_chpi",
    "mne.tests.test_chpi.chpi5_fif_fname",
    "mne.tests.test_chpi.chpi5_pos_fname"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_calculate_chpi_positions_on_chpi5_in_shorter_steps": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "mne.chpi._calculate_chpi_positions",
    "mne.chpi.read_head_pos",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.tests.test_chpi._assert_quats",
    "mne.tests.test_chpi._decimate_chpi",
    "mne.tests.test_chpi.chpi5_fif_fname",
    "mne.tests.test_chpi.chpi5_pos_fname",
    "mne.tests.test_chpi.pytest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_chpi_adjust": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "mne.chpi._get_hpi_info",
    "mne.chpi._get_hpi_initial_fit",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.tests.test_chpi.chpi_fif_fname",
    "mne.utils.catch_logging",
    "nose.tools.assert_true",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_chpi_subtraction": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "mne.chpi.filter_chpi",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.tests.common.assert_meg_snr",
    "mne.tests.test_chpi.chpi_fif_fname",
    "mne.tests.test_chpi.sss_hpisubt_fname",
    "mne.tests.test_chpi.test_fif_fname",
    "mne.tests.test_chpi.warnings",
    "mne.utils.catch_logging",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_fif_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_chpi.test_hpi_info": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_info",
    "mne.io.read_raw_fif",
    "mne.tests.test_chpi.chpi_fif_fname",
    "mne.tests.test_chpi.sss_fif_fname",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_read_write_head_pos": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "ValueError",
    "mne.chpi.read_head_pos",
    "mne.chpi.write_head_pos",
    "mne.datasets.testing.requires_testing_data",
    "mne.tests.test_chpi.pos_fname",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.test_simulate_calculate_chpi_positions": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "mne.Dipole",
    "mne.chpi._calculate_chpi_positions",
    "mne.io.RawArray",
    "mne.io.read_info",
    "mne.make_forward_dipole",
    "mne.make_sphere_model",
    "mne.pick_info",
    "mne.pick_types",
    "mne.simulation.simulate_raw",
    "mne.tests.test_chpi._assert_quats",
    "mne.tests.test_chpi.raw_fname",
    "mne.transforms.rot_to_quat",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.int32",
    "numpy.outer",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_chpi.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_chpi.write_head_pos": {
  "data": {
   "shadows": "mne.chpi.write_head_pos"
  },
  "type": "import"
 },
 "mne.tests.test_coreg": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_coreg.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.Transform": {
  "data": {
   "shadows": "mne.transforms.Transform"
  },
  "type": "import"
 },
 "mne.tests.test_coreg._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_coreg._decimate_points": {
  "data": {
   "shadows": "mne.coreg._decimate_points"
  },
  "type": "import"
 },
 "mne.tests.test_coreg._is_mri_subject": {
  "data": {
   "shadows": "mne.coreg._is_mri_subject"
  },
  "type": "import"
 },
 "mne.tests.test_coreg._point_cloud_error": {
  "data": {
   "shadows": "mne.coreg._point_cloud_error"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.coregister_fiducials": {
  "data": {
   "shadows": "mne.coreg.coregister_fiducials"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.create_default_subject": {
  "data": {
   "shadows": "mne.coreg.create_default_subject"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.fit_matched_points": {
  "data": {
   "shadows": "mne.coreg.fit_matched_points"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.fit_point_cloud": {
  "data": {
   "shadows": "mne.coreg.fit_point_cloud"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.requires_freesurfer": {
  "data": {
   "shadows": "mne.utils.requires_freesurfer"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.rotation": {
  "data": {
   "shadows": "mne.transforms.rotation"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.scale_labels": {
  "data": {
   "shadows": "mne.coreg.scale_labels"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.scale_mri": {
  "data": {
   "shadows": "mne.coreg.scale_mri"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.scale_source_space": {
  "data": {
   "shadows": "mne.coreg.scale_source_space"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.scaling": {
  "data": {
   "shadows": "mne.transforms.scaling"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.test_coregister_fiducials": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "make_dig",
    "mne.coreg.coregister_fiducials",
    "mne.io.constants.FIFF.FIFFV_COORD_HEAD",
    "mne.io.constants.FIFF.FIFFV_COORD_MRI",
    "mne.transforms.Transform",
    "mne.transforms.apply_trans",
    "mne.transforms.rotation",
    "mne.transforms.translation",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_coreg.test_coregister_fiducials.make_dig": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "mne.tests.test_coreg.test_fit_matched_points": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "RuntimeError",
    "functools.reduce",
    "mne.coreg.fit_matched_points",
    "mne.transforms.apply_trans",
    "mne.transforms.rotation",
    "mne.transforms.scaling",
    "mne.transforms.translation",
    "nose.tools.assert_raises",
    "numpy.dot",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_coreg.test_fit_point_cloud": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "mne.coreg._decimate_points",
    "mne.coreg._point_cloud_error",
    "mne.coreg.fit_point_cloud",
    "mne.transforms.apply_trans",
    "mne.transforms.rotation",
    "mne.transforms.scaling",
    "mne.transforms.translation",
    "numpy.cos",
    "numpy.dot",
    "numpy.hstack",
    "numpy.linspace",
    "numpy.ones",
    "numpy.outer",
    "numpy.pi",
    "numpy.sin",
    "numpy.size",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_coreg.test_scale_mri": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "glob.glob",
    "mne.coreg._is_mri_subject",
    "mne.coreg.create_default_subject",
    "mne.coreg.scale_labels",
    "mne.coreg.scale_mri",
    "mne.coreg.scale_source_space",
    "mne.source_space.write_source_spaces",
    "mne.tests.test_coreg.mne",
    "mne.tests.test_coreg.os",
    "mne.utils._TempDir",
    "mne.utils.requires_freesurfer",
    "mne.utils.requires_version",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_coreg.translation": {
  "data": {
   "shadows": "mne.transforms.translation"
  },
  "type": "import"
 },
 "mne.tests.test_coreg.write_source_spaces": {
  "data": {
   "shadows": "mne.source_space.write_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_cov": {
  "data": {
   "symbols_in_volume": [
    "mne.tests.test_cov.base_dir",
    "mne.tests.test_cov.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_cov.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_cov.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_cov._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_cov._apply_scaling_array": {
  "data": {
   "shadows": "mne.cov._apply_scaling_array"
  },
  "type": "import"
 },
 "mne.tests.test_cov._apply_scaling_cov": {
  "data": {
   "shadows": "mne.cov._apply_scaling_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov._assert_cov": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.testing.assert_equal",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov._assert_reorder": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov._auto_low_rank_model": {
  "data": {
   "shadows": "mne.cov._auto_low_rank_model"
  },
  "type": "import"
 },
 "mne.tests.test_cov._estimate_rank_meeg_cov": {
  "data": {
   "shadows": "mne.cov._estimate_rank_meeg_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov._get_sss_rank": {
  "data": {
   "shadows": "mne.io.proc_history._get_sss_rank"
  },
  "type": "import"
 },
 "mne.tests.test_cov._picks_by_type": {
  "data": {
   "shadows": "mne.io.pick._picks_by_type"
  },
  "type": "import"
 },
 "mne.tests.test_cov._undo_scaling_array": {
  "data": {
   "shadows": "mne.cov._undo_scaling_array"
  },
  "type": "import"
 },
 "mne.tests.test_cov._undo_scaling_cov": {
  "data": {
   "shadows": "mne.cov._undo_scaling_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_naming": {
  "data": {
   "shadows": "mne.tests.common.assert_naming"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_snr": {
  "data": {
   "shadows": "mne.tests.common.assert_snr"
  },
  "type": "import"
 },
 "mne.tests.test_cov.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_cov.ave_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_cov.base_dir": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_cov.channel_type": {
  "data": {
   "shadows": "mne.io.pick.channel_type"
  },
  "type": "import"
 },
 "mne.tests.test_cov.compute_covariance": {
  "data": {
   "shadows": "mne.compute_covariance"
  },
  "type": "import"
 },
 "mne.tests.test_cov.compute_proj_raw": {
  "data": {
   "shadows": "mne.compute_proj_raw"
  },
  "type": "import"
 },
 "mne.tests.test_cov.compute_raw_covariance": {
  "data": {
   "shadows": "mne.compute_raw_covariance"
  },
  "type": "import"
 },
 "mne.tests.test_cov.compute_whitener": {
  "data": {
   "shadows": "mne.cov.compute_whitener"
  },
  "type": "import"
 },
 "mne.tests.test_cov.cov_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_cov.cov_gz_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_cov.cov_km_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_cov.erm_cov_fname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.tests.test_cov.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.tests.test_cov.hp_fif_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_cov.itt": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.tests.test_cov.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.tests.test_cov.make_ad_hoc_cov": {
  "data": {
   "shadows": "mne.make_ad_hoc_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov.merge_events": {
  "data": {
   "shadows": "mne.merge_events"
  },
  "type": "import"
 },
 "mne.tests.test_cov.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_cov.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_cov.pick_channels_cov": {
  "data": {
   "shadows": "mne.pick_channels_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov.pick_info": {
  "data": {
   "shadows": "mne.pick_info"
  },
  "type": "import"
 },
 "mne.tests.test_cov.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_cov.prepare_noise_cov": {
  "data": {
   "shadows": "mne.cov.prepare_noise_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_cov.raw_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_cov.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.tests.test_cov.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_cov.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.tests.test_cov.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_cov.regularize": {
  "data": {
   "shadows": "mne.cov.regularize"
  },
  "type": "import"
 },
 "mne.tests.test_cov.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.tests.test_cov.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_cov.test_ad_hoc_cov": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "mne.make_ad_hoc_cov",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.tests.test_cov.ave_fname",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_arithmetic_cov": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "mne.read_cov",
    "mne.tests.test_cov.cov_fname",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_auto_low_rank": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "ValueError",
    "get_data",
    "len",
    "mne.cov._auto_low_rank_model",
    "mne.tests.test_cov.warnings",
    "mne.utils.requires_version",
    "nose.tools.assert_raises",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_auto_low_rank.get_data": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "numpy.dot",
    "numpy.random.RandomState",
    "scipy.linalg.svd"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_compute_covariance_auto_reg": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "dict",
    "events",
    "itertools.combinations",
    "len",
    "mne.Epochs",
    "mne.compute_covariance",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.merge_events",
    "mne.pick_types",
    "mne.tests.test_cov.pytest",
    "mne.tests.test_cov.raw_fname",
    "mne.utils.requires_version",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.any",
    "numpy.diff",
    "numpy.eye",
    "numpy.invert",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_estimation_on_raw": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "dict",
    "mne.compute_raw_covariance",
    "mne.io.read_raw_fif",
    "mne.read_cov",
    "mne.tests.common.assert_snr",
    "mne.tests.test_cov.erm_cov_fname",
    "mne.tests.test_cov.raw_fname",
    "mne.tests.test_cov.warnings",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_estimation_on_raw_reg": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "mne.compute_raw_covariance",
    "mne.io.RawArray",
    "mne.io.read_raw_fif",
    "mne.read_cov",
    "mne.tests.common.assert_snr",
    "mne.tests.test_cov.erm_cov_fname",
    "mne.tests.test_cov.pytest",
    "mne.tests.test_cov.raw_fname",
    "mne.tests.test_cov.warnings",
    "mne.utils.requires_version"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_estimation_with_triggers": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "events",
    "len",
    "mne.Epochs",
    "mne.compute_covariance",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.merge_events",
    "mne.read_cov",
    "mne.tests.test_cov._assert_cov",
    "mne.tests.test_cov.cov_fname",
    "mne.tests.test_cov.cov_km_fname",
    "mne.tests.test_cov.pytest",
    "mne.tests.test_cov.raw_fname",
    "mne.tests.test_cov.warnings",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_mismatch": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "events",
    "len",
    "mne.Epochs",
    "mne.compute_covariance",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.tests.test_cov.raw_fname",
    "mne.tests.test_cov.warnings",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_order": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "len",
    "mne.cov.compute_whitener",
    "mne.cov.prepare_noise_cov",
    "mne.cov.regularize",
    "mne.cov.whiten_evoked",
    "mne.io.read_info",
    "mne.pick_types",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.tests.test_cov._assert_reorder",
    "mne.tests.test_cov.ave_fname",
    "mne.tests.test_cov.cov_fname",
    "mne.tests.test_cov.raw_fname",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_cov_scaling": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "dict",
    "mne.cov._apply_scaling_array",
    "mne.cov._apply_scaling_cov",
    "mne.cov._undo_scaling_array",
    "mne.cov._undo_scaling_cov",
    "mne.io.pick._picks_by_type",
    "mne.pick_types",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.tests.test_cov.ave_fname",
    "mne.tests.test_cov.cov_fname",
    "nose.tools.assert_true",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_io_cov": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "len",
    "mne.pick_channels_cov",
    "mne.read_cov",
    "mne.tests.common.assert_naming",
    "mne.tests.test_cov.cov_fname",
    "mne.tests.test_cov.cov_gz_fname",
    "mne.tests.test_cov.warnings",
    "mne.utils._TempDir",
    "mne.write_cov",
    "nose.tools.assert_true",
    "numpy.inf",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_rank": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "dict",
    "itertools.product",
    "len",
    "list",
    "mne.compute_proj_raw",
    "mne.compute_raw_covariance",
    "mne.cov._estimate_rank_meeg_cov",
    "mne.cov.prepare_noise_cov",
    "mne.io.pick.channel_type",
    "mne.io.proc_history._get_sss_rank",
    "mne.io.read_raw_fif",
    "mne.pick_info",
    "mne.pick_types",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.tests.test_cov.ave_fname",
    "mne.tests.test_cov.cov_fname",
    "mne.tests.test_cov.hp_fif_fname",
    "mne.tests.test_cov.pytest",
    "mne.tests.test_cov.raw_fname",
    "nose.tools.assert_true",
    "numpy.ix_",
    "numpy.testing.assert_equal",
    "range",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_regularize_cov": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "mne.cov.regularize",
    "mne.io.read_raw_fif",
    "mne.read_cov",
    "mne.tests.test_cov.cov_fname",
    "mne.tests.test_cov.raw_fname",
    "nose.tools.assert_true",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.test_whiten_evoked": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.cov.regularize",
    "mne.cov.whiten_evoked",
    "mne.pick_channels_cov",
    "mne.pick_types",
    "mne.read_cov",
    "mne.read_evokeds",
    "mne.tests.test_cov.ave_fname",
    "mne.tests.test_cov.cov_fname",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.all",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_cov.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_cov.whiten_evoked": {
  "data": {
   "shadows": "mne.cov.whiten_evoked"
  },
  "type": "import"
 },
 "mne.tests.test_cov.write_cov": {
  "data": {
   "shadows": "mne.write_cov"
  },
  "type": "import"
 },
 "mne.tests.test_defaults": {
  "data": {},
  "type": "module"
 },
 "mne.tests.test_defaults._handle_default": {
  "data": {
   "shadows": "mne.defaults._handle_default"
  },
  "type": "import"
 },
 "mne.tests.test_defaults.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_defaults.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_defaults.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_defaults.test_handle_default": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "copy.deepcopy",
    "dict",
    "mne.defaults._handle_default",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_docstring_parameters.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters._doc_special_members": {
  "data": {
   "shadows": "mne.utils._doc_special_members"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters._docstring_ignores": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters._get_args": {
  "data": {
   "shadows": "mne.fixes._get_args"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters._tab_ignores": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.check_parameters_match": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "any",
    "len",
    "list",
    "mne.fixes._get_args",
    "mne.tests.test_docstring_parameters._docstring_ignores",
    "mne.tests.test_docstring_parameters.get_name",
    "mne.tests.test_docstring_parameters.inspect",
    "mne.tests.test_docstring_parameters.re",
    "mne.tests.test_docstring_parameters.warnings",
    "numpydoc.docscrape.FunctionDoc",
    "set",
    "sorted",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters.docscrape": {
  "data": {
   "shadows": "numpydoc.docscrape"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.documented_ignored_mods": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.documented_ignored_names": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.get_name": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "hasattr",
    "mne.tests.test_docstring_parameters.inspect"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters.getsource": {
  "data": {
   "shadows": "inspect.getsource"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.mayavi": {
  "data": {
   "shadows": "mayavi"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.public_modules": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.tests.test_docstring_parameters.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.requires_numpydoc": {
  "data": {
   "shadows": "mne.utils.requires_numpydoc"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.test_docstring_parameters": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "AssertionError",
    "ImportError",
    "RuntimeError",
    "__import__",
    "getattr",
    "globals",
    "hasattr",
    "len",
    "list",
    "mne.tests.test_docstring_parameters.check_parameters_match",
    "mne.tests.test_docstring_parameters.inspect",
    "mne.tests.test_docstring_parameters.public_modules",
    "mne.tests.test_docstring_parameters.warnings",
    "mne.utils._doc_special_members",
    "mne.utils.requires_numpydoc",
    "numpydoc.docscrape.ClassDoc",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters.test_documented": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "AssertionError",
    "ImportError",
    "__import__",
    "getattr",
    "globals",
    "len",
    "list",
    "mne.tests.test_docstring_parameters.documented_ignored_mods",
    "mne.tests.test_docstring_parameters.documented_ignored_names",
    "mne.tests.test_docstring_parameters.inspect",
    "mne.tests.test_docstring_parameters.public_modules",
    "mne.tests.test_docstring_parameters.warnings",
    "open",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.isfile",
    "os.path.join",
    "set",
    "sorted",
    "unittest.SkipTest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters.test_tabs": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Exception",
    "IOError",
    "ImportError",
    "__import__",
    "inspect.getsource",
    "mne.tests.test_docstring_parameters._tab_ignores",
    "mne.tests.test_docstring_parameters.mne",
    "mne.tests.test_docstring_parameters.sys",
    "mne.tests.test_docstring_parameters.warnings",
    "pkgutil.walk_packages"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_docstring_parameters.walk_packages": {
  "data": {
   "shadows": "pkgutil.walk_packages"
  },
  "type": "import"
 },
 "mne.tests.test_docstring_parameters.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_epochs": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "mne.datasets.testing.data_path",
    "mne.tests.test_epochs.base_dir",
    "mne.tests.test_epochs.data_path",
    "mne.tests.test_epochs.matplotlib",
    "mne.tests.test_epochs.warnings",
    "mne.utils.run_tests_if_main",
    "numpy.int64",
    "numpy.random.RandomState",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_epochs.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.BaseEpochs": {
  "data": {
   "shadows": "mne.epochs.BaseEpochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.EpochsArray": {
  "data": {
   "shadows": "mne.epochs.EpochsArray"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_epochs._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_epochs._get_data": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "events",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.tests.test_epochs.event_name",
    "mne.tests.test_epochs.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs._has_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj._has_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.add_channels_epochs": {
  "data": {
   "shadows": "mne.epochs.add_channels_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_meg_snr": {
  "data": {
   "shadows": "mne.tests.common.assert_meg_snr"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_naming": {
  "data": {
   "shadows": "mne.tests.common.assert_naming"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.average_movements": {
  "data": {
   "shadows": "mne.epochs.average_movements"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.base_dir": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.bootstrap": {
  "data": {
   "shadows": "mne.epochs.bootstrap"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.combine_event_ids": {
  "data": {
   "shadows": "mne.epochs.combine_event_ids"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.combine_evoked": {
  "data": {
   "shadows": "mne.combine_evoked"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.concatenate_epochs": {
  "data": {
   "shadows": "mne.epochs.concatenate_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.data_path": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.equalize_channels": {
  "data": {
   "shadows": "mne.equalize_channels"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.equalize_epoch_counts": {
  "data": {
   "shadows": "mne.epochs.equalize_epoch_counts"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.event_id_2": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.event_name": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.evoked_nf_name": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.flat": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.fname_raw_move": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.fname_raw_move_pos": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.fname_raw_movecomp_sss": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.head_pos_to_trans_rot_t": {
  "data": {
   "shadows": "mne.chpi.head_pos_to_trans_rot_t"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.maxwell_filter": {
  "data": {
   "shadows": "mne.preprocessing.maxwell_filter"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.merge_events": {
  "data": {
   "shadows": "mne.event.merge_events"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pick_events": {
  "data": {
   "shadows": "mne.pick_events"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pickle": {
  "data": {
   "shadows": "mne.externals.six.moves.cPickle"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.raw_fname": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.read_epochs": {
  "data": {
   "shadows": "mne.read_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.read_head_pos": {
  "data": {
   "shadows": "mne.chpi.read_head_pos"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.reject": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.rescale": {
  "data": {
   "shadows": "mne.baseline.rescale"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.rng": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "mne.tests.test_epochs.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.test_access_by_name": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "all",
    "dict",
    "events",
    "int",
    "len",
    "list",
    "mne.Epochs",
    "mne.read_epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.warnings",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.logical_or",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_add_channels": {
  "data": {
   "lineno": 2093,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "ValueError",
    "all",
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_add_channels_epochs": {
  "data": {
   "lineno": 1840,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "ValueError",
    "events",
    "len",
    "make_epochs",
    "mne.epochs.add_channels_epochs",
    "mne.pick_types",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.warnings",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.concatenate",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_add_channels_epochs.make_epochs": {
  "data": {
   "lineno": 1844,
   "symbols_in_volume": [
    "events",
    "mne.Epochs"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_array_epochs": {
  "data": {
   "lineno": 1947,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "int",
    "len",
    "matplotlib.pyplot.close",
    "mne.create_info",
    "mne.epochs.EpochsArray",
    "mne.read_epochs",
    "mne.tests.test_epochs.rng",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.array",
    "numpy.c_",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "numpy.zeros",
    "numpy.zeros_like",
    "os.path.join",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_average_movements": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "TypeError",
    "copy.deepcopy",
    "events",
    "len",
    "mne.Epochs",
    "mne.chpi.head_pos_to_trans_rot_t",
    "mne.chpi.read_head_pos",
    "mne.datasets.testing.requires_testing_data",
    "mne.epochs.average_movements",
    "mne.io.read_raw_fif",
    "mne.make_fixed_length_events",
    "mne.pick_types",
    "mne.preprocessing.maxwell_filter",
    "mne.tests.common.assert_meg_snr",
    "mne.tests.test_epochs.fname_raw_move",
    "mne.tests.test_epochs.fname_raw_move_pos",
    "mne.tests.test_epochs.fname_raw_movecomp_sss",
    "mne.tests.test_epochs.pytest",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_base_epochs": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "float",
    "int",
    "mne.epochs.BaseEpochs",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_raises",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_bootstrap": {
  "data": {
   "lineno": 1269,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.epochs.bootstrap",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.reject",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_comparision_with_c": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.pick_channels",
    "mne.read_evokeds",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.evoked_nf_name",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_concatenate_epochs": {
  "data": {
   "lineno": 2029,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "events",
    "len",
    "list",
    "mne.Epochs",
    "mne.epochs.concatenate_epochs",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.delete",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "range",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_contains": {
  "data": {
   "lineno": 1740,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "events",
    "len",
    "mne.Epochs",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.pick_types",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_crop": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "events",
    "int",
    "len",
    "mne.Epochs",
    "mne.create_info",
    "mne.epochs.EpochsArray",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.reject",
    "mne.tests.test_epochs.warnings",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_decim": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "float",
    "mne.Epochs",
    "mne.create_info",
    "mne.epochs.EpochsArray",
    "mne.externals.six.moves.zip",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.rng",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.array",
    "numpy.isclose",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_default_values": {
  "data": {
   "lineno": 2143,
   "symbols_in_volume": [
    "events",
    "hash",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_delayed_epochs": {
  "data": {
   "lineno": 1618,
   "symbols_in_volume": [
    "events",
    "int",
    "len",
    "mne.Epochs",
    "mne.epochs.EpochsArray",
    "mne.pick_types",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.reject",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.sort",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_detrend": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.pick_types",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_drop_channels_mixin": {
  "data": {
   "lineno": 1773,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_drop_epochs": {
  "data": {
   "lineno": 1680,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "all",
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal",
    "numpy.where",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_drop_epochs_mult": {
  "data": {
   "lineno": 1710,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.externals.six.moves.zip",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.reject",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epoch_combine_ids": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.epochs.combine_event_ids",
    "mne.event.merge_events",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epoch_eq": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "copy.deepcopy",
    "events",
    "len",
    "mne.Epochs",
    "mne.epochs.combine_event_ids",
    "mne.epochs.equalize_epoch_counts",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.event_id_2",
    "mne.tests.test_epochs.reject",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.logical_or",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epoch_multi_ids": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_bad_baseline": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "events",
    "float",
    "mne.Epochs",
    "mne.baseline.rescale",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_raises",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_copy": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.reject",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_hash": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "RuntimeError",
    "events",
    "hash",
    "mne.Epochs",
    "mne.externals.six.moves.cPickle.dumps",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_equal",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_proj": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "AssertionError",
    "all",
    "events",
    "len",
    "mne.Epochs",
    "mne.io.proj._has_eeg_average_ref_proj",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.raw_fname",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_epochs_proj_mixin": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "copy.deepcopy",
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.reject",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_equalize_channels": {
  "data": {
   "lineno": 1816,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.equalize_channels",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_event_ordering": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "RuntimeError",
    "dict",
    "enumerate",
    "events",
    "events.copy",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.reject",
    "mne.tests.test_epochs.rng",
    "mne.tests.test_epochs.warnings",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_evoked_arithmetic": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.combine_evoked",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_evoked_io_from_epochs": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.read_evokeds",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.warnings",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.testing.assert_allclose",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_evoked_standard_error": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.externals.six.moves.zip",
    "mne.io.constants.FIFF.FIFFV_ASPECT_AVERAGE",
    "mne.io.constants.FIFF.FIFFV_ASPECT_STD_ERR",
    "mne.read_evokeds",
    "mne.tests.test_epochs._get_data",
    "mne.utils._TempDir",
    "mne.write_evokeds",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_filter": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "RuntimeError",
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.fft.rfft",
    "numpy.fft.rfftfreq",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_hierarchical": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_illegal_event_id": {
  "data": {
   "lineno": 1831,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_indexing_slicing": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.reject",
    "mne.tests.test_epochs.rng",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_iter_evoked": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "enumerate",
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_pick_channels_mixin": {
  "data": {
   "lineno": 1792,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_preload_epochs": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.reject",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_read_epochs_bad_events": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.warnings",
    "nose.tools.assert_true",
    "numpy.array",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_read_write_epochs": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "isinstance",
    "len",
    "mne.Epochs",
    "mne.epochs.BaseEpochs",
    "mne.externals.six.text_type",
    "mne.pick_events",
    "mne.pick_types",
    "mne.read_epochs",
    "mne.tests.common.assert_naming",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.pytest",
    "mne.tests.test_epochs.reject",
    "mne.tests.test_epochs.warnings",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_reject": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "dict",
    "events",
    "len",
    "mne.Annotations",
    "mne.Epochs",
    "mne.pick_types",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.reject",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.inf",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_reject_epochs": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "all",
    "dict",
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.reject",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_resample": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "RuntimeError",
    "copy.deepcopy",
    "events",
    "int",
    "len",
    "mne.Epochs",
    "mne.create_info",
    "mne.epochs.EpochsArray",
    "mne.epochs.concatenate_epochs",
    "mne.tests.test_epochs._get_data",
    "mne.tests.test_epochs.flat",
    "mne.tests.test_epochs.reject",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_savgol_filter": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "RuntimeError",
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.utils.requires_version",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.fft.rfft",
    "numpy.fft.rfftfreq",
    "numpy.mean",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_seeg_ecog": {
  "data": {
   "lineno": 2128,
   "symbols_in_volume": [
    "dict",
    "events",
    "len",
    "mne.create_info",
    "mne.epochs.EpochsArray",
    "mne.pick_types",
    "nose.tools.assert_equal",
    "numpy.arange",
    "numpy.array",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_subtract_evoked": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "nose.tools.assert_raises",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.test_to_data_frame": {
  "data": {
   "lineno": 1512,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "isinstance",
    "list",
    "mne.Epochs",
    "mne.tests.test_epochs._get_data",
    "mne.utils.requires_pandas",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.hstack",
    "numpy.testing.assert_array_equal",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_epochs.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.text_type": {
  "data": {
   "shadows": "mne.externals.six.text_type"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.write_evokeds": {
  "data": {
   "shadows": "mne.write_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_epochs.zip": {
  "data": {
   "shadows": "mne.externals.six.moves.zip"
  },
  "type": "import"
 },
 "mne.tests.test_event": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_event.base_dir",
    "mne.tests.test_event.elekta_base_dir",
    "mne.tests.test_event.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_event.AcqParserFIF": {
  "data": {
   "shadows": "mne.event.AcqParserFIF"
  },
  "type": "import"
 },
 "mne.tests.test_event.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_event._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_naming": {
  "data": {
   "shadows": "mne.tests.common.assert_naming"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_event.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_event.base_dir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.tests.test_event.define_target_events": {
  "data": {
   "shadows": "mne.event.define_target_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.elekta_base_dir": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_event.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.find_stim_steps": {
  "data": {
   "shadows": "mne.find_stim_steps"
  },
  "type": "import"
 },
 "mne.tests.test_event.fname": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_1": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_ave_elekta": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_gz": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_old_txt": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_raw_elekta": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_txt": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_txt_1": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.tests.test_event.fname_txt_mpr": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_event.make_fixed_length_events": {
  "data": {
   "shadows": "mne.make_fixed_length_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.merge_events": {
  "data": {
   "shadows": "mne.event.merge_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_event.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_event.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_event.pick_channels": {
  "data": {
   "shadows": "mne.pick_channels"
  },
  "type": "import"
 },
 "mne.tests.test_event.pick_events": {
  "data": {
   "shadows": "mne.pick_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.raw_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_event.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_event.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_event.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_event.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_event.test_acqparser": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.event.AcqParserFIF",
    "mne.io.read_raw_fif",
    "mne.tests.test_event.fname_raw_elekta",
    "mne.tests.test_event.raw_fname",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_acqparser_averaging": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.event.AcqParserFIF",
    "mne.io.read_raw_fif",
    "mne.read_evokeds",
    "mne.tests.test_event.fname_ave_elekta",
    "mne.tests.test_event.fname_raw_elekta",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_add_events": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "events",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.tests.test_event.raw_fname",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.concatenate",
    "numpy.newaxis",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_define_events": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "events",
    "events.shape",
    "mne.event.define_target_events",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.tests.test_event.fname",
    "mne.tests.test_event.raw_fname",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_find_events": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "events",
    "mne.find_events",
    "mne.find_stim_steps",
    "mne.io.read_raw_fif",
    "mne.pick_channels",
    "mne.read_events",
    "mne.tests.test_event.fname",
    "mne.tests.test_event.os",
    "mne.tests.test_event.raw_fname",
    "mne.tests.test_event.warnings",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.empty",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "str",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_fix_stim": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "any",
    "events",
    "len",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.tests.test_event.raw_fname",
    "mne.tests.test_event.warnings",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_io_events": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "events",
    "events.copy",
    "mne.read_events",
    "mne.tests.common.assert_naming",
    "mne.tests.test_event.fname",
    "mne.tests.test_event.fname_1",
    "mne.tests.test_event.fname_gz",
    "mne.tests.test_event.fname_old_txt",
    "mne.tests.test_event.fname_txt_mpr",
    "mne.tests.test_event.warnings",
    "mne.utils._TempDir",
    "mne.write_events",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "range",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_make_fixed_length_events": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "events.shape",
    "mne.io.read_raw_fif",
    "mne.make_fixed_length_events",
    "mne.tests.test_event.raw_fname",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_merge_events": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "events",
    "mne.event.merge_events",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.test_pick_events": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "events",
    "mne.pick_events",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_event.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_event.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_event.write_events": {
  "data": {
   "shadows": "mne.write_events"
  },
  "type": "import"
 },
 "mne.tests.test_evoked": {
  "data": {
   "symbols_in_volume": [
    "mne.tests.test_evoked.base_dir",
    "mne.tests.test_evoked.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_evoked.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.Evoked": {
  "data": {
   "shadows": "mne.evoked.Evoked"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.EvokedArray": {
  "data": {
   "shadows": "mne.evoked.EvokedArray"
  },
  "type": "import"
 },
 "mne.tests.test_evoked._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_evoked._get_peak": {
  "data": {
   "shadows": "mne.evoked._get_peak"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_naming": {
  "data": {
   "shadows": "mne.tests.common.assert_naming"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.base_dir": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.combine_evoked": {
  "data": {
   "shadows": "mne.combine_evoked"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.equalize_channels": {
  "data": {
   "shadows": "mne.equalize_channels"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.event_name": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.fftpack": {
  "data": {
   "shadows": "scipy.fftpack"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.fname_gz": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.grand_average": {
  "data": {
   "shadows": "mne.grand_average"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.pickle": {
  "data": {
   "shadows": "mne.externals.six.moves.cPickle"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.raw_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_evoked.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.test_add_channels": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "ValueError",
    "all",
    "dict",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_arithmetic": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "mne.combine_evoked",
    "mne.evoked.EvokedArray",
    "mne.grand_average",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.ones_like",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros_like",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_array_epochs": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "events",
    "mne.EpochsArray",
    "mne.create_info",
    "mne.evoked.EvokedArray",
    "mne.read_evokeds",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "numpy.c_",
    "numpy.newaxis",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_decim": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "events",
    "float",
    "mne.Epochs",
    "mne.EpochsArray",
    "mne.create_info",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.tests.test_evoked.event_name",
    "mne.tests.test_evoked.raw_fname",
    "numpy.arange",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_drop_channels_mixin": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "nose.tools.assert_raises",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_equalize_channels": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "mne.equalize_channels",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_baseline": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "mne.evoked.EvokedArray",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "numpy.ones_like",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_detrend": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "mne.pick_types",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.mean",
    "numpy.newaxis"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_filter": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "numpy.testing.assert_allclose",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_proj": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "copy.deepcopy",
    "len",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.dot",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_evoked_resample": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "len",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.utils._TempDir",
    "mne.write_evokeds",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_get_peak": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mne.evoked._get_peak",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_hash_evoked": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "hash",
    "mne.externals.six.moves.cPickle.dumps",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_true",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_io_evoked": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "len",
    "mne.evoked.Evoked",
    "mne.read_evokeds",
    "mne.tests.common.assert_naming",
    "mne.tests.test_evoked.fname",
    "mne.tests.test_evoked.fname_gz",
    "mne.tests.test_evoked.pytest",
    "mne.tests.test_evoked.warnings",
    "mne.utils._TempDir",
    "mne.write_evokeds",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "repr",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_pick_channels_mixin": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "len",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "nose.tools.assert_true",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_savgol_filter": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.utils.requires_version",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.logical_and",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "scipy.fftpack.fft",
    "scipy.fftpack.fftfreq"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_shift_time_evoked": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "int",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.utils._TempDir",
    "mne.write_evokeds",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_time_as_index": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "len",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.test_to_data_frame": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "ValueError",
    "mne.read_evokeds",
    "mne.tests.test_evoked.fname",
    "mne.utils.requires_pandas",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_evoked.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_evoked.write_evokeds": {
  "data": {
   "shadows": "mne.write_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_filter": {
  "data": {
   "symbols_in_volume": [
    "mne.tests.test_filter.warnings",
    "mne.utils.run_tests_if_main",
    "numpy.random.RandomState"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_filter.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.tests.test_filter._Interp2": {
  "data": {
   "shadows": "mne.filter._Interp2"
  },
  "type": "import"
 },
 "mne.tests.test_filter._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_filter._cuda_capable": {
  "data": {
   "shadows": "mne.cuda._cuda_capable"
  },
  "type": "import"
 },
 "mne.tests.test_filter._overlap_add_filter": {
  "data": {
   "shadows": "mne.filter._overlap_add_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter._resample_stim_channels": {
  "data": {
   "shadows": "mne.filter._resample_stim_channels"
  },
  "type": "import"
 },
 "mne.tests.test_filter._smart_pad": {
  "data": {
   "shadows": "mne.filter._smart_pad"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_filter.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_filter.butter": {
  "data": {
   "shadows": "scipy.signal.butter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.tests.test_filter.construct_iir_filter": {
  "data": {
   "shadows": "mne.filter.construct_iir_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.create_filter": {
  "data": {
   "shadows": "mne.filter.create_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.tests.test_filter.design_mne_c_filter": {
  "data": {
   "shadows": "mne.filter.design_mne_c_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.detrend": {
  "data": {
   "shadows": "mne.filter.detrend"
  },
  "type": "import"
 },
 "mne.tests.test_filter.estimate_ringing_samples": {
  "data": {
   "shadows": "mne.filter.estimate_ringing_samples"
  },
  "type": "import"
 },
 "mne.tests.test_filter.fft": {
  "data": {
   "shadows": "scipy.fftpack.fft"
  },
  "type": "import"
 },
 "mne.tests.test_filter.fftfreq": {
  "data": {
   "shadows": "scipy.fftpack.fftfreq"
  },
  "type": "import"
 },
 "mne.tests.test_filter.filter_data": {
  "data": {
   "shadows": "mne.filter.filter_data"
  },
  "type": "import"
 },
 "mne.tests.test_filter.notch_filter": {
  "data": {
   "shadows": "mne.filter.notch_filter"
  },
  "type": "import"
 },
 "mne.tests.test_filter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_filter.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_filter.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_filter.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_filter.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.tests.test_filter.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.tests.test_filter.resample": {
  "data": {
   "shadows": "mne.filter.resample"
  },
  "type": "import"
 },
 "mne.tests.test_filter.rng": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.tests.test_filter.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.tests.test_filter.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_filter.sp_resample": {
  "data": {
   "shadows": "scipy.signal.resample"
  },
  "type": "import"
 },
 "mne.tests.test_filter.sum_squared": {
  "data": {
   "shadows": "mne.utils.sum_squared"
  },
  "type": "import"
 },
 "mne.tests.test_filter.test_1d_filter": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "max",
    "mne.filter._overlap_add_filter",
    "mne.filter._smart_pad",
    "mne.tests.test_filter.rng",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.concatenate",
    "numpy.convolve",
    "numpy.newaxis",
    "numpy.newaxis.copy",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_cuda": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "dict",
    "mne.cuda._cuda_capable",
    "mne.filter.filter_data",
    "mne.filter.resample",
    "mne.tests.test_filter.rng",
    "mne.utils.catch_logging",
    "nose.tools.assert_true",
    "numpy.float32",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_detrend": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "mne.filter.detrend",
    "numpy.arange",
    "numpy.ones",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_estimate_ringing": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "any",
    "mne.filter.estimate_ringing_samples",
    "mne.tests.test_filter.warnings",
    "mne.utils.requires_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "scipy.signal.butter",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_filter_auto": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "mne.filter.filter_data",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.float32",
    "numpy.ones",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_filters": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "dict",
    "float",
    "list",
    "mne.filter.construct_iir_filter",
    "mne.filter.create_filter",
    "mne.filter.filter_data",
    "mne.filter.resample",
    "mne.tests.test_filter.pytest",
    "mne.tests.test_filter.rng",
    "mne.tests.test_filter.warnings",
    "mne.utils.requires_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.array",
    "numpy.mean",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "range",
    "scipy.fftpack.fft",
    "scipy.fftpack.fftfreq",
    "scipy.signal.resample",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_iir_stability": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "dict",
    "mne.filter.construct_iir_filter",
    "mne.filter.filter_data",
    "mne.utils.requires_version",
    "nose.tools.assert_raises",
    "numpy.empty",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_interp2": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "mne.filter._Interp2",
    "numpy.array",
    "numpy.linspace",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_mne_c_design": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "dict",
    "mne.create_info",
    "mne.filter.design_mne_c_filter",
    "mne.io.RawArray",
    "mne.io.read_raw_fif",
    "mne.utils._TempDir",
    "mne.utils.requires_mne",
    "mne.utils.run_subprocess",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "os.path.join",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_notch_filters": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "mne.filter.notch_filter",
    "mne.tests.test_filter.rng",
    "mne.tests.test_filter.warnings",
    "mne.utils.catch_logging",
    "mne.utils.sum_squared",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.fromstring",
    "numpy.mean",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_resample": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "mne.filter.resample",
    "mne.tests.test_filter.rng",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.test_resample_stim_channel": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "mne.filter._resample_stim_channels",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_filter.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_fixes": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_fixes._sph_harm": {
  "data": {
   "shadows": "mne.fixes._sph_harm"
  },
  "type": "import"
 },
 "mne.tests.test_fixes.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_fixes.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_fixes.filtfilt": {
  "data": {
   "shadows": "scipy.signal.filtfilt"
  },
  "type": "import"
 },
 "mne.tests.test_fixes.mne_sosfiltfilt": {
  "data": {
   "shadows": "mne.fixes._sosfiltfilt"
  },
  "type": "import"
 },
 "mne.tests.test_fixes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_fixes.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.tests.test_fixes.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_fixes.sph_harm": {
  "data": {
   "shadows": "scipy.special.sph_harm"
  },
  "type": "import"
 },
 "mne.tests.test_fixes.test_filtfilt": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "mne.fixes._sosfiltfilt",
    "numpy.array",
    "numpy.r_",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "scipy.signal.filtfilt"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_fixes.test_spherical_harmonics": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mne.fixes._sph_harm",
    "mne.utils.requires_version",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "range",
    "scipy.special.sph_harm"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_import_nesting": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_import_nesting.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "mne.tests.test_import_nesting.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "mne.tests.test_import_nesting.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.tests.test_import_nesting.run_script": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "mne.tests.test_import_nesting.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_import_nesting.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.tests.test_import_nesting.test_module_nesting": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "AssertionError",
    "mne.tests.test_import_nesting.run_script",
    "mne.tests.test_import_nesting.sys",
    "mne.utils.requires_version",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_label.data_path",
    "mne.tests.test_label.subjects_dir",
    "mne.tests.test_label.test_path",
    "mne.tests.test_label.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_label.Label": {
  "data": {
   "shadows": "mne.label.Label"
  },
  "type": "import"
 },
 "mne.tests.test_label.SourceSpaces": {
  "data": {
   "shadows": "mne.source_space.SourceSpaces"
  },
  "type": "import"
 },
 "mne.tests.test_label._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_label._assert_labels_equal": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label._blend_colors": {
  "data": {
   "shadows": "mne.label._blend_colors"
  },
  "type": "import"
 },
 "mne.tests.test_label._n_colors": {
  "data": {
   "shadows": "mne.label._n_colors"
  },
  "type": "import"
 },
 "mne.tests.test_label._stc_to_label": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "isinstance",
    "len",
    "mne.externals.six.string_types",
    "mne.label.Label",
    "mne.label._n_colors",
    "mne.read_surface",
    "mne.source_estimate.mesh_edges",
    "mne.source_space.SourceSpaces",
    "mne.tests.test_label.subjects_dir",
    "mne.utils.get_subjects_dir",
    "numpy.any",
    "numpy.ones",
    "numpy.where",
    "os.path.join",
    "range",
    "scipy.sparse.eye",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_label.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_label.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_label.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "mne.tests.test_label.assert_is": {
  "data": {
   "shadows": "mne.fixes.assert_is"
  },
  "type": "import"
 },
 "mne.tests.test_label.assert_is_not": {
  "data": {
   "shadows": "mne.fixes.assert_is_not"
  },
  "type": "import"
 },
 "mne.tests.test_label.assert_labels_equal": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "getattr",
    "nose.tools.assert_equal",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_label.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_label.data_path": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_label.fwd_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.tests.test_label.get_subjects_dir": {
  "data": {
   "shadows": "mne.utils.get_subjects_dir"
  },
  "type": "import"
 },
 "mne.tests.test_label.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.tests.test_label.grow_labels": {
  "data": {
   "shadows": "mne.grow_labels"
  },
  "type": "import"
 },
 "mne.tests.test_label.label_dir": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.tests.test_label.label_fname": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.tests.test_label.label_rh_fname": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.tests.test_label.label_sign_flip": {
  "data": {
   "shadows": "mne.label.label_sign_flip"
  },
  "type": "import"
 },
 "mne.tests.test_label.mesh_edges": {
  "data": {
   "shadows": "mne.source_estimate.mesh_edges"
  },
  "type": "import"
 },
 "mne.tests.test_label.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_label.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_label.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_label.pickle": {
  "data": {
   "shadows": "mne.externals.six.moves.cPickle"
  },
  "type": "import"
 },
 "mne.tests.test_label.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_label": {
  "data": {
   "shadows": "mne.read_label"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_labels_from_annot": {
  "data": {
   "shadows": "mne.read_labels_from_annot"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_source_estimate": {
  "data": {
   "shadows": "mne.read_source_estimate"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_label.read_surface": {
  "data": {
   "shadows": "mne.read_surface"
  },
  "type": "import"
 },
 "mne.tests.test_label.real_label_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_label.real_label_rh_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_label.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.tests.test_label.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_label.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.tests.test_label.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.tests.test_label.spatial_tris_connectivity": {
  "data": {
   "shadows": "mne.spatial_tris_connectivity"
  },
  "type": "import"
 },
 "mne.tests.test_label.split_label": {
  "data": {
   "shadows": "mne.split_label"
  },
  "type": "import"
 },
 "mne.tests.test_label.src_bad_fname": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.tests.test_label.src_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_label.stc_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_label.stc_to_label": {
  "data": {
   "shadows": "mne.stc_to_label"
  },
  "type": "import"
 },
 "mne.tests.test_label.string_types": {
  "data": {
   "shadows": "mne.externals.six.string_types"
  },
  "type": "import"
 },
 "mne.tests.test_label.subjects_dir": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_label.test_annot_io": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "IOError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_labels_from_annot",
    "mne.tests.test_label.assert_labels_equal",
    "mne.tests.test_label.label_dir",
    "mne.tests.test_label.os",
    "mne.tests.test_label.shutil",
    "mne.tests.test_label.subjects_dir",
    "mne.utils._TempDir",
    "mne.write_labels_to_annot",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_copy": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "mne.read_label",
    "mne.tests.test_label.label_fname",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_grow_labels": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.grow_labels",
    "mne.tests.test_label.subjects_dir",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.any",
    "numpy.in1d",
    "numpy.intersect1d",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_addition": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "list",
    "mne.label.Label",
    "mne.label._blend_colors",
    "mne.tests.test_label.assert_labels_equal",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "numpy.where",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_center_of_mass": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.Label",
    "mne.read_labels_from_annot",
    "mne.read_source_estimate",
    "mne.read_source_spaces",
    "mne.tests.test_label.src_fname",
    "mne.tests.test_label.stc_fname",
    "mne.tests.test_label.subjects_dir",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.argmin",
    "numpy.intersect1d",
    "numpy.sum",
    "numpy.where",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_in_src": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.Label",
    "mne.read_label",
    "mne.read_source_spaces",
    "mne.tests.test_label.src_fname",
    "mne.tests.test_label.v1_label_fname",
    "nose.tools.assert_raises",
    "numpy.append",
    "numpy.array",
    "numpy.digitize",
    "numpy.in1d",
    "numpy.intersect1d",
    "numpy.logical_not",
    "numpy.nonzero",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_io": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.moves.cPickle.HIGHEST_PROTOCOL",
    "mne.externals.six.moves.cPickle.dump",
    "mne.externals.six.moves.cPickle.load",
    "mne.fixes.assert_is",
    "mne.read_label",
    "mne.tests.test_label.assert_labels_equal",
    "mne.tests.test_label.label_fname",
    "mne.utils._TempDir",
    "nose.tools.assert_equal",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_io_and_time_course_estimates": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_label",
    "mne.read_source_estimate",
    "mne.tests.test_label.real_label_fname",
    "mne.tests.test_label.stc_fname",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_sign_flip": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.Label",
    "mne.label.label_sign_flip",
    "mne.read_source_spaces",
    "mne.tests.test_label.src_fname",
    "numpy.array",
    "numpy.dot",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_label_subject": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "mne.fixes.assert_is",
    "mne.read_label",
    "mne.tests.test_label.label_fname",
    "nose.tools.assert_true",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_morph": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "list",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_label",
    "mne.tests.test_label.pytest",
    "mne.tests.test_label.real_label_fname",
    "mne.tests.test_label.subjects_dir",
    "mne.tests.test_label.warnings",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.in1d",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_path": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.tests.test_label.test_read_labels_from_annot": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "list",
    "mne.datasets.testing.requires_testing_data",
    "mne.fixes.assert_is_not",
    "mne.read_labels_from_annot",
    "mne.tests.test_label._assert_labels_equal",
    "mne.tests.test_label.subjects_dir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "os.path.join",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_read_labels_from_annot_annot2labels": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.read_label",
    "mne.read_labels_from_annot",
    "mne.tests.test_label._assert_labels_equal",
    "mne.tests.test_label.glob",
    "mne.tests.test_label.label_dir",
    "mne.tests.test_label.subjects_dir"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_split_label": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_label",
    "mne.read_labels_from_annot",
    "mne.split_label",
    "mne.tests.test_label.assert_labels_equal",
    "mne.tests.test_label.subjects_dir",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_stc_to_label": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_estimate",
    "mne.read_source_spaces",
    "mne.source_space.SourceSpaces",
    "mne.spatial_tris_connectivity",
    "mne.stc_to_label",
    "mne.tests.test_label._stc_to_label",
    "mne.tests.test_label.assert_labels_equal",
    "mne.tests.test_label.data_path",
    "mne.tests.test_label.fwd_fname",
    "mne.tests.test_label.os",
    "mne.tests.test_label.pytest",
    "mne.tests.test_label.src_bad_fname",
    "mne.tests.test_label.stc_fname",
    "mne.tests.test_label.subjects_dir",
    "mne.tests.test_label.warnings",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.test_write_labels_to_annot": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_labels_from_annot",
    "mne.tests.test_label.assert_labels_equal",
    "mne.tests.test_label.os",
    "mne.tests.test_label.shutil",
    "mne.tests.test_label.subjects_dir",
    "mne.tests.test_label.warnings",
    "mne.utils._TempDir",
    "mne.write_labels_to_annot",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.in1d",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_label.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_label.v1_label_fname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.tests.test_label.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_label.write_labels_to_annot": {
  "data": {
   "shadows": "mne.write_labels_to_annot"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_line_endings.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings._assert_line_endings": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "AssertionError",
    "UnicodeDecodeError",
    "len",
    "list",
    "mne.tests.test_line_endings.os",
    "mne.tests.test_line_endings.skip_files",
    "mne.tests.test_line_endings.sys",
    "open",
    "os.path.join",
    "os.path.relpath",
    "os.path.splitext",
    "unittest.SkipTest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_line_endings._get_root_dir": {
  "data": {
   "shadows": "mne.utils._get_root_dir"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.skip_files": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.tests.test_line_endings.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "mne.tests.test_line_endings.test_line_endings": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "AssertionError",
    "mne.tests.test_line_endings._assert_line_endings",
    "mne.utils._TempDir",
    "mne.utils._get_root_dir",
    "nose.tools.assert_raises",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_misc": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_misc.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_misc.ave_fname": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "mne.tests.test_misc.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_misc.parse_config": {
  "data": {
   "shadows": "mne.misc.parse_config"
  },
  "type": "import"
 },
 "mne.tests.test_misc.test_parse_ave": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "len",
    "mne.misc.parse_config",
    "mne.tests.test_misc.ave_fname",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_proj.base_dir",
    "mne.tests.test_proj.sample_path",
    "mne.tests.test_proj.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_proj.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_proj._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_proj._check_warnings": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "dict",
    "events",
    "len",
    "mne.Epochs",
    "mne.tests.test_proj.warnings",
    "nose.tools.assert_true",
    "numpy.testing.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj._has_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.proj._has_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj._needs_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj._needs_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj.activate_proj": {
  "data": {
   "shadows": "mne.io.proj.activate_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_proj.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_proj.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_proj.assert_naming": {
  "data": {
   "shadows": "mne.tests.common.assert_naming"
  },
  "type": "import"
 },
 "mne.tests.test_proj.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_proj.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_proj.bads_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_proj.base_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.tests.test_proj.compute_proj_epochs": {
  "data": {
   "shadows": "mne.compute_proj_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_proj.compute_proj_evoked": {
  "data": {
   "shadows": "mne.compute_proj_evoked"
  },
  "type": "import"
 },
 "mne.tests.test_proj.compute_proj_raw": {
  "data": {
   "shadows": "mne.compute_proj_raw"
  },
  "type": "import"
 },
 "mne.tests.test_proj.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.tests.test_proj.ecg_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_proj.eog_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_proj.event_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_proj.fwd_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_proj.make_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.proj.make_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj.make_projector": {
  "data": {
   "shadows": "mne.io.proj.make_projector"
  },
  "type": "import"
 },
 "mne.tests.test_proj.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.tests.test_proj.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_proj.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_proj.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.tests.test_proj.proj_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_proj.proj_gz_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_proj.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_proj.raw_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_proj.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_proj.read_proj": {
  "data": {
   "shadows": "mne.proj.read_proj"
  },
  "type": "import"
 },
 "mne.tests.test_proj.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_proj.read_source_estimate": {
  "data": {
   "shadows": "mne.read_source_estimate"
  },
  "type": "import"
 },
 "mne.tests.test_proj.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_proj.sample_path": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_proj.sensitivity_map": {
  "data": {
   "shadows": "mne.sensitivity_map"
  },
  "type": "import"
 },
 "mne.tests.test_proj.sensmap_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_proj.test_bad_proj": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "events",
    "len",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.tests.test_proj._check_warnings",
    "mne.tests.test_proj.event_fname",
    "mne.tests.test_proj.mne",
    "mne.tests.test_proj.raw_fname",
    "mne.tests.test_proj.warnings",
    "nose.tools.assert_raises",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_compute_proj_epochs": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "all",
    "events",
    "len",
    "mne.Epochs",
    "mne.compute_proj_epochs",
    "mne.compute_proj_evoked",
    "mne.io.proj.activate_proj",
    "mne.io.proj.make_projector",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.proj.read_proj",
    "mne.proj.write_proj",
    "mne.read_events",
    "mne.tests.common.assert_naming",
    "mne.tests.test_proj.event_fname",
    "mne.tests.test_proj.proj_fname",
    "mne.tests.test_proj.proj_gz_fname",
    "mne.tests.test_proj.raw_fname",
    "mne.tests.test_proj.warnings",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "numpy.bool",
    "numpy.corrcoef",
    "numpy.ones",
    "numpy.sign",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_compute_proj_raw": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len",
    "mne.compute_proj_raw",
    "mne.io.proj.activate_proj",
    "mne.io.proj.make_projector",
    "mne.io.read_raw_fif",
    "mne.tests.test_proj.bads_fname",
    "mne.tests.test_proj.pytest",
    "mne.tests.test_proj.raw_fname",
    "mne.tests.test_proj.warnings",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "numpy.eye",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_has_eeg_average_ref_proj": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "mne.io.read_raw_fif",
    "mne.proj._has_eeg_average_ref_proj",
    "mne.tests.test_proj.raw_fname",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_make_eeg_average_ref_proj": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.io.read_raw_fif",
    "mne.proj.make_eeg_average_ref_proj",
    "mne.tests.test_proj.mne",
    "mne.tests.test_proj.raw_fname",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_needs_eeg_average_ref_proj": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "mne.io.proj._needs_eeg_average_ref_proj",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.tests.test_proj.raw_fname",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.test_sensitivity_maps": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.proj.make_eeg_average_ref_proj",
    "mne.proj.read_proj",
    "mne.read_source_estimate",
    "mne.sensitivity_map",
    "mne.tests.test_proj.ecg_fname",
    "mne.tests.test_proj.eog_fname",
    "mne.tests.test_proj.fwd_fname",
    "mne.tests.test_proj.mne",
    "mne.tests.test_proj.sample_path",
    "mne.tests.test_proj.sensmap_fname",
    "mne.tests.test_proj.warnings",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_proj.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_proj.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_proj.write_proj": {
  "data": {
   "shadows": "mne.proj.write_proj"
  },
  "type": "import"
 },
 "mne.tests.test_report": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_report.base_dir",
    "mne.tests.test_report.data_dir",
    "mne.tests.test_report.matplotlib",
    "mne.tests.test_report.report_dir",
    "mne.tests.test_report.subjects_dir",
    "mne.tests.test_report.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join",
    "os.path.realpath"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_report.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_report.Image": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "mne.tests.test_report.Report": {
  "data": {
   "shadows": "mne.report.Report"
  },
  "type": "import"
 },
 "mne.tests.test_report._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_report.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_report.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_report.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_report.base_dir": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_report.cov_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_report.data_dir": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.tests.test_report.event_fname": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.tests.test_report.evoked_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_report.fwd_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_report.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "mne.tests.test_report.inv_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_report.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.tests.test_report.mri_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_report.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_report.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_report.plot_alignment": {
  "data": {
   "shadows": "mne.viz.plot_alignment"
  },
  "type": "import"
 },
 "mne.tests.test_report.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.tests.test_report.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_report.raw_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.tests.test_report.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.tests.test_report.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_report.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_report.report_dir": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_report.requires_PIL": {
  "data": {
   "shadows": "mne.utils.requires_PIL"
  },
  "type": "import"
 },
 "mne.tests.test_report.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.tests.test_report.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_report.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_report.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "mne.tests.test_report.subjects_dir": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.tests.test_report.test_add_htmls_to_section": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.report.Report",
    "mne.tests.test_report.raw_fname",
    "mne.tests.test_report.subjects_dir",
    "mne.utils.requires_nibabel",
    "nose.tools.assert_true",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_add_slider_to_section": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "list",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.plot",
    "mne.report.Report",
    "mne.tests.test_report.raw_fname",
    "mne.tests.test_report.subjects_dir",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_render_add_sections": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "PIL.Image.open",
    "ValueError",
    "matplotlib.pyplot.plot",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_evokeds",
    "mne.report.Report",
    "mne.tests.test_report.evoked_fname",
    "mne.tests.test_report.subjects_dir",
    "mne.tests.test_report.trans_fname",
    "mne.utils._TempDir",
    "mne.utils.requires_PIL",
    "mne.utils.requires_mayavi",
    "mne.viz.plot_alignment",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_render_mri": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.report.Report",
    "mne.tests.test_report.pytest",
    "mne.tests.test_report.raw_fname",
    "mne.tests.test_report.shutil",
    "mne.tests.test_report.subjects_dir",
    "mne.tests.test_report.trans_fname",
    "mne.tests.test_report.warnings",
    "mne.utils._TempDir",
    "mne.utils.requires_mayavi",
    "mne.utils.requires_nibabel",
    "nose.tools.assert_true",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_render_mri_without_bem": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.report.Report",
    "mne.tests.test_report.mri_fname",
    "mne.tests.test_report.os",
    "mne.tests.test_report.raw_fname",
    "mne.tests.test_report.shutil",
    "mne.tests.test_report.warnings",
    "mne.utils._TempDir",
    "mne.utils.requires_nibabel",
    "nose.tools.assert_true",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_render_report": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.report.Report",
    "mne.tests.test_report.cov_fname",
    "mne.tests.test_report.event_fname",
    "mne.tests.test_report.evoked_fname",
    "mne.tests.test_report.fwd_fname",
    "mne.tests.test_report.glob",
    "mne.tests.test_report.inv_fname",
    "mne.tests.test_report.pytest",
    "mne.tests.test_report.raw_fname",
    "mne.tests.test_report.shutil",
    "mne.tests.test_report.subjects_dir",
    "mne.tests.test_report.warnings",
    "mne.utils._TempDir",
    "mne.utils.requires_PIL",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "os.path.basename",
    "os.path.isfile",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.test_validate_input": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.report.Report",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_report.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_report.trans_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_report.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_selection": {
  "data": {
   "symbols_in_volume": [
    "mne.tests.test_selection.test_path",
    "mne.utils.run_tests_if_main",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_selection.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_selection.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_selection.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_selection.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_selection.raw_fname": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "mne.tests.test_selection.raw_new_fname": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "mne.tests.test_selection.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_selection.read_selection": {
  "data": {
   "shadows": "mne.read_selection"
  },
  "type": "import"
 },
 "mne.tests.test_selection.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_selection.test_path": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "mne.tests.test_selection.test_read_selection": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "TypeError",
    "enumerate",
    "len",
    "mne.io.read_raw_fif",
    "mne.read_selection",
    "mne.tests.test_selection.raw_fname",
    "mne.tests.test_selection.raw_new_fname",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_source_estimate.data_path",
    "mne.tests.test_source_estimate.warnings",
    "mne.utils.run_tests_if_main",
    "numpy.random.RandomState",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_source_estimate.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.Label": {
  "data": {
   "shadows": "mne.Label"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.MixedSourceEstimate": {
  "data": {
   "shadows": "mne.MixedSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.VectorSourceEstimate": {
  "data": {
   "shadows": "mne.VectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.VolSourceEstimate": {
  "data": {
   "shadows": "mne.VolSourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate._fake_stc": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "mne.SourceEstimate",
    "numpy.arange",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate._fake_vec_stc": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "mne.VectorSourceEstimate",
    "numpy.arange",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate._get_vol_mask": {
  "data": {
   "shadows": "mne.source_estimate._get_vol_mask"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate._my_trans": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "numpy.concatenate",
    "scipy.fftpack.fft"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate._real_vec_stc": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.read_inverse_operator",
    "mne.read_evokeds",
    "mne.tests.test_source_estimate.fname_evoked",
    "mne.tests.test_source_estimate.fname_inv"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate._test_stc_integrety": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "len",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.apply_inverse": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.apply_inverse_epochs": {
  "data": {
   "shadows": "mne.minimum_norm.apply_inverse_epochs"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.compute_morph_matrix": {
  "data": {
   "shadows": "mne.source_estimate.compute_morph_matrix"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.data_path": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.extract_label_time_course": {
  "data": {
   "shadows": "mne.extract_label_time_course"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.fft": {
  "data": {
   "shadows": "scipy.fftpack.fft"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.find_events": {
  "data": {
   "shadows": "mne.find_events"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.fname_evoked": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_fmorph": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_inv": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_raw": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_smorph": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_src": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_src_3": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_stc": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_t1": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_vol": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.fname_vsrc": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.grade_to_tris": {
  "data": {
   "shadows": "mne.source_estimate.grade_to_tris"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.grade_to_vertices": {
  "data": {
   "shadows": "mne.source_estimate.grade_to_vertices"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.label_sign_flip": {
  "data": {
   "shadows": "mne.label.label_sign_flip"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.morph_data": {
  "data": {
   "shadows": "mne.morph_data"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_labels_from_annot": {
  "data": {
   "shadows": "mne.label.read_labels_from_annot"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_source_estimate": {
  "data": {
   "shadows": "mne.read_source_estimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.requires_pandas": {
  "data": {
   "shadows": "mne.utils.requires_pandas"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.rng": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.spatial_inter_hemi_connectivity": {
  "data": {
   "shadows": "mne.spatial_inter_hemi_connectivity"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.spatial_src_connectivity": {
  "data": {
   "shadows": "mne.spatial_src_connectivity"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.spatio_temporal_src_connectivity": {
  "data": {
   "shadows": "mne.spatio_temporal_src_connectivity"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.spatio_temporal_tris_connectivity": {
  "data": {
   "shadows": "mne.spatio_temporal_tris_connectivity"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.stats": {
  "data": {
   "shadows": "mne.stats"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.subjects_dir": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_source_estimate.test_center_of_mass": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_estimate",
    "mne.tests.test_source_estimate.fname_stc",
    "mne.tests.test_source_estimate.subjects_dir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.round",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_epochs_vector_inverse": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "dict",
    "events",
    "len",
    "mne.Epochs",
    "mne.datasets.testing.requires_testing_data",
    "mne.find_events",
    "mne.io.read_raw_fif",
    "mne.minimum_norm.apply_inverse",
    "mne.minimum_norm.apply_inverse_epochs",
    "mne.minimum_norm.read_inverse_operator",
    "mne.tests.test_source_estimate.fname_inv",
    "mne.tests.test_source_estimate.fname_raw",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_expand": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "mne.VectorSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.read_labels_from_annot",
    "mne.read_source_estimate",
    "mne.tests.test_source_estimate.fname_stc",
    "mne.tests.test_source_estimate.subjects_dir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.zeros",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_extract_label_time_course": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "list",
    "mne.Label",
    "mne.SourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.extract_label_time_course",
    "mne.label.label_sign_flip",
    "mne.label.read_labels_from_annot",
    "mne.minimum_norm.read_inverse_operator",
    "mne.tests.test_source_estimate.fname_inv",
    "mne.tests.test_source_estimate.subjects_dir",
    "mne.tests.test_source_estimate.warnings",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.allclose",
    "numpy.arange",
    "numpy.intersect1d",
    "numpy.mean",
    "numpy.ones",
    "numpy.searchsorted",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_get_peak": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "mne.SourceEstimate",
    "mne.VolSourceEstimate",
    "mne.tests.test_source_estimate.rng",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_io_stc": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "len",
    "mne.read_source_estimate",
    "mne.tests.test_source_estimate._fake_stc",
    "mne.utils._TempDir",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_io_stc_h5": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mne.read_source_estimate",
    "mne.tests.test_source_estimate._fake_stc",
    "mne.tests.test_source_estimate._fake_vec_stc",
    "mne.utils._TempDir",
    "mne.utils.requires_h5py",
    "nose.tools.assert_raises",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_io_w": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "mne.read_source_estimate",
    "mne.tests.test_source_estimate._fake_stc",
    "mne.utils._TempDir",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_mixed_stc": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "ValueError",
    "mne.MixedSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.tests.test_source_estimate.fname_vsrc",
    "mne.tests.test_source_estimate.rng",
    "nose.tools.assert_raises",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_morph_data": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.morph_data",
    "mne.read_source_estimate",
    "mne.source_estimate.compute_morph_matrix",
    "mne.source_estimate.grade_to_vertices",
    "mne.tests.test_source_estimate._real_vec_stc",
    "mne.tests.test_source_estimate.fname_fmorph",
    "mne.tests.test_source_estimate.fname_smorph",
    "mne.tests.test_source_estimate.pytest",
    "mne.tests.test_source_estimate.subjects_dir",
    "mne.tests.test_source_estimate.warnings",
    "mne.utils._TempDir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.corrcoef",
    "numpy.int64",
    "numpy.sort",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_spatial_inter_hemi_connectivity": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "enumerate",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.read_labels_from_annot",
    "mne.read_source_spaces",
    "mne.spatial_inter_hemi_connectivity",
    "mne.tests.test_source_estimate.fname_src_3",
    "mne.tests.test_source_estimate.subjects_dir",
    "nose.tools.assert_true",
    "numpy.any",
    "numpy.in1d",
    "numpy.prod",
    "numpy.testing.assert_equal",
    "numpy.where",
    "set"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_spatio_temporal_src_connectivity": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "dict",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.read_inverse_operator",
    "mne.source_estimate.grade_to_tris",
    "mne.spatio_temporal_src_connectivity",
    "mne.spatio_temporal_tris_connectivity",
    "mne.tests.test_source_estimate.fname_inv",
    "mne.tests.test_source_estimate.warnings",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_spatio_temporal_tris_connectivity": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "len",
    "mne.spatio_temporal_tris_connectivity",
    "mne.stats.cluster_level._get_components",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.nonzero",
    "numpy.testing.assert_array_equal",
    "numpy.unique",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_arithmetic": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "abs",
    "list",
    "mne.tests.test_source_estimate._fake_stc",
    "mne.tests.test_source_estimate._fake_vec_stc",
    "mne.tests.test_source_estimate.warnings",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_attributes": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mne.tests.test_source_estimate._fake_stc",
    "mne.tests.test_source_estimate._fake_vec_stc",
    "mne.tests.test_source_estimate._test_stc_integrety",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.random.rand",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_attributes.attempt_assignment": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_attributes.attempt_times_mutation": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_stc_methods": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "copy.deepcopy",
    "isinstance",
    "len",
    "mne.VectorSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.label.read_labels_from_annot",
    "mne.read_source_estimate",
    "mne.tests.test_source_estimate.fname_stc",
    "mne.tests.test_source_estimate.pytest",
    "mne.tests.test_source_estimate.subjects_dir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.concatenate",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.searchsorted",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_to_data_frame": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "list",
    "mne.SourceEstimate",
    "mne.VolSourceEstimate",
    "mne.tests.test_source_estimate.rng",
    "mne.utils.requires_pandas",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.empty",
    "numpy.int",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_transform": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "ValueError",
    "copy.deepcopy",
    "isinstance",
    "len",
    "list",
    "mne.SourceEstimate",
    "mne.tests.test_source_estimate._my_trans",
    "mne.tests.test_source_estimate.rng",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.round",
    "numpy.searchsorted",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_transform_data": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "mne.VolSourceEstimate",
    "mne.tests.test_source_estimate._my_trans",
    "mne.tests.test_source_estimate.rng",
    "numpy.arange",
    "numpy.dot",
    "numpy.testing.assert_allclose",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vec_stc": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "dict",
    "mne.VectorSourceEstimate",
    "numpy.array",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vol_connectivity": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.spatial_src_connectivity",
    "mne.spatio_temporal_src_connectivity",
    "mne.tests.test_source_estimate.fname_vsrc",
    "mne.utils.requires_sklearn",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.testing.assert_equal",
    "scipy.sparse.coo_matrix"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_vol_mask": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "len",
    "mne.VolSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.source_estimate._get_vol_mask",
    "mne.tests.test_source_estimate.fname_vsrc",
    "mne.utils.requires_nibabel",
    "mne.utils.requires_sklearn",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.testing.assert_array_equal",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.test_volume_stc": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "isinstance",
    "len",
    "mne.VolSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_estimate",
    "mne.read_source_spaces",
    "mne.tests.test_source_estimate.fname_t1",
    "mne.tests.test_source_estimate.fname_vol",
    "mne.tests.test_source_estimate.fname_vsrc",
    "mne.tests.test_source_estimate.pytest",
    "mne.tests.test_source_estimate.warnings",
    "mne.utils._TempDir",
    "nibabel.load",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.newaxis",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "os.path.join",
    "print",
    "range",
    "repr",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_estimate.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_source_estimate.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_source_space": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_source_space.base_dir",
    "mne.tests.test_source_space.data_path",
    "mne.tests.test_source_space.subjects_dir",
    "mne.tests.test_source_space.warnings",
    "mne.utils.run_tests_if_main",
    "numpy.random.RandomState",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_source_space.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.SourceSpaces": {
  "data": {
   "shadows": "mne.source_space.SourceSpaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._accumulate_normals": {
  "data": {
   "shadows": "mne.surface._accumulate_normals"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._compare_source_spaces": {
  "data": {
   "shadows": "mne.source_space._compare_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._get_mgz_header": {
  "data": {
   "shadows": "mne.source_space._get_mgz_header"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._get_mri_header": {
  "data": {
   "shadows": "mne.source_space._get_mri_header"
  },
  "type": "import"
 },
 "mne.tests.test_source_space._triangle_neighbors": {
  "data": {
   "shadows": "mne.surface._triangle_neighbors"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.add_source_space_distances": {
  "data": {
   "shadows": "mne.add_source_space_distances"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.assert_naming": {
  "data": {
   "shadows": "mne.tests.common.assert_naming"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.base_dir": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.data_path": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_bem": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_fs": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_morph": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_mri": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_small": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.fname_vol": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.get_volume_labels_from_aseg": {
  "data": {
   "shadows": "mne.source_space.get_volume_labels_from_aseg"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.get_volume_labels_from_src": {
  "data": {
   "shadows": "mne.source_space.get_volume_labels_from_src"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.morph_source_spaces": {
  "data": {
   "shadows": "mne.morph_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.read_bem_surfaces": {
  "data": {
   "shadows": "mne.read_bem_surfaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.requires_freesurfer": {
  "data": {
   "shadows": "mne.utils.requires_freesurfer"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.requires_fs_or_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_fs_or_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.requires_mne": {
  "data": {
   "shadows": "mne.utils.requires_mne"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.rng": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.run_subprocess": {
  "data": {
   "shadows": "mne.utils.run_subprocess"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.setup_source_space": {
  "data": {
   "shadows": "mne.setup_source_space"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.setup_volume_source_space": {
  "data": {
   "shadows": "mne.setup_volume_source_space"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.subjects_dir": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_source_space.test_accumulate_normals": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "dict",
    "int",
    "mne.surface._accumulate_normals",
    "mne.tests.test_source_space.rng",
    "numpy.c_",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_add_patch_info": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "len",
    "mne.add_source_space_distances",
    "mne.externals.six.moves.zip",
    "mne.read_source_spaces",
    "mne.tests.test_source_space.fname_small",
    "mne.utils.requires_version",
    "nose.tools.assert_true",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_add_source_space_distances": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "list",
    "mne.add_source_space_distances",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.moves.zip",
    "mne.read_source_spaces",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.pytest",
    "mne.utils._TempDir",
    "mne.utils.requires_version",
    "mne.write_source_spaces",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.float32",
    "numpy.inf",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_add_source_space_distances_limited": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.add_source_space_distances",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.moves.zip",
    "mne.read_source_spaces",
    "mne.tests.test_source_space.fname",
    "mne.utils._TempDir",
    "mne.utils.requires_version",
    "mne.write_source_spaces",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.float32",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "os.path.join",
    "unittest.SkipTest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_combine_source_spaces": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.constants.FIFF.FIFFV_COORD_MRI.all",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space",
    "mne.source_space.SourceSpaces",
    "mne.source_space._compare_source_spaces",
    "mne.source_space.get_volume_labels_from_aseg",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.rng",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils._TempDir",
    "mne.utils.requires_freesurfer",
    "mne.utils.requires_nibabel",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.random.rand",
    "numpy.testing.assert_equal",
    "numpy.zeros",
    "os.path.join",
    "range",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_discrete_source_space": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space",
    "mne.source_space._compare_source_spaces",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.fname_mri",
    "mne.tests.test_source_space.os",
    "mne.utils._TempDir",
    "mne.utils.requires_mne",
    "mne.utils.run_subprocess",
    "mne.write_source_spaces",
    "nose.tools.assert_raises",
    "numpy.c_",
    "numpy.savetxt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "os.path.isfile",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_get_volume_label_names": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space.get_volume_labels_from_aseg",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils.requires_freesurfer",
    "mne.utils.requires_nibabel",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_mgz_header": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space._get_mgz_header",
    "mne.source_space._get_mri_header",
    "mne.tests.test_source_space.fname_mri",
    "mne.utils.requires_nibabel",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_morph_source_spaces": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.morph_source_spaces",
    "mne.read_source_spaces",
    "mne.source_space._compare_source_spaces",
    "mne.tests.test_source_space.fname_fs",
    "mne.tests.test_source_space.fname_morph",
    "mne.tests.test_source_space.subjects_dir"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_morphed_source_space_return": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mne.SourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.moves.zip",
    "mne.morph_source_spaces",
    "mne.read_source_spaces",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.fname_fs",
    "mne.tests.test_source_space.pytest",
    "mne.tests.test_source_space.rng",
    "mne.tests.test_source_space.subjects_dir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.concatenate",
    "numpy.corrcoef",
    "numpy.sort",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_other_volume_source_spaces": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space",
    "mne.source_space._compare_source_spaces",
    "mne.tests.test_source_space.fname_mri",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils._TempDir",
    "mne.utils.requires_mne",
    "mne.utils.run_subprocess",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.in1d",
    "numpy.testing.assert_equal",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_read_source_spaces": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.tests.test_source_space.fname",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_read_volume_from_src": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space",
    "mne.source_space.get_volume_labels_from_src",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.fname_bem",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils.requires_freesurfer",
    "mne.utils.requires_nibabel",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_setup_source_space": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.setup_source_space",
    "mne.source_space._compare_source_spaces",
    "mne.tests.test_source_space.data_path",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.pytest",
    "mne.tests.test_source_space.subjects_dir",
    "mne.tests.test_source_space.warnings",
    "mne.utils._TempDir",
    "mne.write_source_spaces",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_source_space_from_label": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "int",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space",
    "mne.source_space._compare_source_spaces",
    "mne.source_space.get_volume_labels_from_aseg",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils._TempDir",
    "mne.utils.requires_freesurfer",
    "mne.utils.requires_nibabel",
    "mne.write_source_spaces",
    "nose.tools.assert_raises",
    "numpy.random.rand",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_triangle_neighbors": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "int",
    "list",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.moves.zip",
    "mne.read_source_spaces",
    "mne.surface._triangle_neighbors",
    "mne.tests.test_source_space.fname",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_vertex_to_mni": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils.requires_fs_or_nibabel",
    "mne.vertex_to_mni",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_vertex_to_mni_fs_nibabel": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.tests.test_source_space.rng",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils.requires_freesurfer",
    "mne.utils.requires_nibabel",
    "mne.vertex_to_mni",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_volume_source_space": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "IOError",
    "mne.datasets.testing.requires_testing_data",
    "mne.externals.six.moves.zip",
    "mne.io.constants.FIFF.FIFFV_BEM_SURF_ID_BRAIN",
    "mne.read_bem_surfaces",
    "mne.read_source_spaces",
    "mne.setup_volume_source_space",
    "mne.source_space._compare_source_spaces",
    "mne.tests.test_source_space.fname_bem",
    "mne.tests.test_source_space.fname_mri",
    "mne.tests.test_source_space.fname_vol",
    "mne.tests.test_source_space.pytest",
    "mne.tests.test_source_space.subjects_dir",
    "mne.utils._TempDir",
    "mne.write_source_spaces",
    "nose.tools.assert_raises",
    "numpy.testing.assert_equal",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.test_write_source_space": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.source_space._compare_source_spaces",
    "mne.tests.common.assert_naming",
    "mne.tests.test_source_space.fname",
    "mne.tests.test_source_space.pytest",
    "mne.tests.test_source_space.warnings",
    "mne.utils._TempDir",
    "mne.write_source_spaces",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_source_space.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.vertex_to_mni": {
  "data": {
   "shadows": "mne.vertex_to_mni"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.write_source_spaces": {
  "data": {
   "shadows": "mne.write_source_spaces"
  },
  "type": "import"
 },
 "mne.tests.test_source_space.zip": {
  "data": {
   "shadows": "mne.externals.six.moves.zip"
  },
  "type": "import"
 },
 "mne.tests.test_surface": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_surface.data_path",
    "mne.tests.test_surface.subjects_dir",
    "mne.tests.test_surface.warnings",
    "mne.utils.run_tests_if_main",
    "numpy.random.RandomState",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_surface._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_surface._compute_nearest": {
  "data": {
   "shadows": "mne.surface._compute_nearest"
  },
  "type": "import"
 },
 "mne.tests.test_surface._get_trans": {
  "data": {
   "shadows": "mne.transforms._get_trans"
  },
  "type": "import"
 },
 "mne.tests.test_surface.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_surface.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_surface.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_surface.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_surface.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_surface.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "mne.tests.test_surface.data_path": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.tests.test_surface.decimate_surface": {
  "data": {
   "shadows": "mne.decimate_surface"
  },
  "type": "import"
 },
 "mne.tests.test_surface.fast_cross_3d": {
  "data": {
   "shadows": "mne.surface.fast_cross_3d"
  },
  "type": "import"
 },
 "mne.tests.test_surface.fname": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.tests.test_surface.get_head_surf": {
  "data": {
   "shadows": "mne.surface.get_head_surf"
  },
  "type": "import"
 },
 "mne.tests.test_surface.get_meg_helmet_surf": {
  "data": {
   "shadows": "mne.surface.get_meg_helmet_surf"
  },
  "type": "import"
 },
 "mne.tests.test_surface.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_surface.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.tests.test_surface.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_surface.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_surface.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.tests.test_surface.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.tests.test_surface.read_curvature": {
  "data": {
   "shadows": "mne.surface.read_curvature"
  },
  "type": "import"
 },
 "mne.tests.test_surface.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.tests.test_surface.read_morph_map": {
  "data": {
   "shadows": "mne.surface.read_morph_map"
  },
  "type": "import"
 },
 "mne.tests.test_surface.read_surface": {
  "data": {
   "shadows": "mne.read_surface"
  },
  "type": "import"
 },
 "mne.tests.test_surface.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.tests.test_surface.requires_tvtk": {
  "data": {
   "shadows": "mne.utils.requires_tvtk"
  },
  "type": "import"
 },
 "mne.tests.test_surface.rng": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_surface.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_surface.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.tests.test_surface.subjects_dir": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.tests.test_surface.test_compute_nearest": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "mne.surface._compute_nearest",
    "mne.tests.test_surface.rng",
    "numpy.arange",
    "numpy.int",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "numpy.zeros_like",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_decimate_surface": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.decimate_surface",
    "mne.utils.requires_mayavi",
    "mne.utils.requires_tvtk",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_head": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.surface.get_head_surf",
    "mne.tests.test_surface.subjects_dir",
    "nose.tools.assert_raises",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_helmet": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "len",
    "mne.io.read_info",
    "mne.surface.get_meg_helmet_surf",
    "mne.tests.test_surface.fname",
    "mne.transforms._get_trans",
    "numpy.testing.assert_equal",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_huge_cross": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "mne.surface.fast_cross_3d",
    "mne.tests.test_surface.rng",
    "numpy.cross",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_io_surface": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "all",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_surface",
    "mne.tests.test_surface.data_path",
    "mne.tests.test_surface.fname",
    "mne.tests.test_surface.warnings",
    "mne.utils._TempDir",
    "mne.utils.object_diff",
    "mne.write_surface",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_make_morph_maps": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.surface.read_morph_map",
    "mne.tests.test_surface.os",
    "mne.tests.test_surface.pytest",
    "mne.tests.test_surface.subjects_dir",
    "mne.tests.test_surface.warnings",
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "numpy.zeros_like",
    "os.path.join",
    "scipy.sparse.eye",
    "shutil.copyfile",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.test_read_curv": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "len",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_surface",
    "mne.surface.read_curvature",
    "mne.tests.test_surface.data_path",
    "nose.tools.assert_true",
    "numpy.logical_or",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_surface.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_surface.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_surface.write_surface": {
  "data": {
   "shadows": "mne.write_surface"
  },
  "type": "import"
 },
 "mne.tests.test_transforms": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_transforms.base_dir",
    "mne.tests.test_transforms.data_path",
    "mne.tests.test_transforms.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_transforms.SphericalSurfaceWarp": {
  "data": {
   "shadows": "mne.transforms._SphericalSurfaceWarp"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._angle_between_quats": {
  "data": {
   "shadows": "mne.transforms._angle_between_quats"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._cart_to_sph": {
  "data": {
   "shadows": "mne.transforms._cart_to_sph"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._cartesian_to_sphere": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "numpy.arctan2",
    "numpy.hypot"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms._find_trans": {
  "data": {
   "shadows": "mne.transforms._find_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._find_vector_rotation": {
  "data": {
   "shadows": "mne.transforms._find_vector_rotation"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._get_trans": {
  "data": {
   "shadows": "mne.transforms._get_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._pol_to_cart": {
  "data": {
   "shadows": "mne.transforms._pol_to_cart"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._polar_to_cartesian": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms._sph_to_cart": {
  "data": {
   "shadows": "mne.transforms._sph_to_cart"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._sphere_to_cartesian": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms._topo_to_sph": {
  "data": {
   "shadows": "mne.transforms._topo_to_sph"
  },
  "type": "import"
 },
 "mne.tests.test_transforms._topo_to_sphere": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "mne.tests.test_transforms.apply_trans": {
  "data": {
   "shadows": "mne.transforms.apply_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.assert_naming": {
  "data": {
   "shadows": "mne.tests.common.assert_naming"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.base_dir": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.combine_transforms": {
  "data": {
   "shadows": "mne.transforms.combine_transforms"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.ctf_fname": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.data_path": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.fname_eve": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.fname_trans": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.get_ras_to_neuromag_trans": {
  "data": {
   "shadows": "mne.transforms.get_ras_to_neuromag_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.hp_fif_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.invert_transform": {
  "data": {
   "shadows": "mne.transforms.invert_transform"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.quat_to_rot": {
  "data": {
   "shadows": "mne.transforms.quat_to_rot"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.read_trans": {
  "data": {
   "shadows": "mne.read_trans"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rot_to_quat": {
  "data": {
   "shadows": "mne.transforms.rot_to_quat"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rotation": {
  "data": {
   "shadows": "mne.transforms.rotation"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rotation3d": {
  "data": {
   "shadows": "mne.transforms.rotation3d"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rotation3d_align_z_axis": {
  "data": {
   "shadows": "mne.transforms.rotation3d_align_z_axis"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.rotation_angles": {
  "data": {
   "shadows": "mne.transforms.rotation_angles"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.test_combine": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_trans",
    "mne.tests.test_transforms.fname",
    "mne.transforms.combine_transforms",
    "mne.transforms.invert_transform",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_fif_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.tests.test_transforms.test_get_ras_to_neuromag_trans": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "mne.transforms.apply_trans",
    "mne.transforms.get_ras_to_neuromag_trans",
    "mne.transforms.rotation",
    "mne.transforms.translation",
    "numpy.dot",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_get_trans": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.read_trans",
    "mne.tests.test_transforms.fname",
    "mne.tests.test_transforms.fname_trans",
    "mne.transforms._get_trans",
    "mne.transforms.invert_transform",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_io_trans": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "IOError",
    "RuntimeError",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_trans",
    "mne.tests.common.assert_naming",
    "mne.tests.test_transforms.fname",
    "mne.tests.test_transforms.fname_eve",
    "mne.tests.test_transforms.os",
    "mne.tests.test_transforms.warnings",
    "mne.transforms._find_trans",
    "mne.utils._TempDir",
    "mne.write_trans",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_array_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_polar_to_cartesian": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "mne.tests.test_transforms._polar_to_cartesian",
    "mne.transforms._pol_to_cart",
    "numpy.array",
    "numpy.cos",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_quaternions": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "mne.io.read_info",
    "mne.tests.test_transforms.ctf_fname",
    "mne.tests.test_transforms.fname",
    "mne.tests.test_transforms.hp_fif_fname",
    "mne.tests.test_transforms.test_fif_fname",
    "mne.transforms._angle_between_quats",
    "mne.transforms.quat_to_rot",
    "mne.transforms.rot_to_quat",
    "numpy.array",
    "numpy.eye",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_rotation": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "mne.transforms.rotation",
    "mne.transforms.rotation3d",
    "mne.transforms.rotation_angles",
    "numpy.pi",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_rotation3d_align_z_axis": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "mne.transforms.rotation3d_align_z_axis",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_sph_to_cart": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "mne.tests.test_transforms._cartesian_to_sphere",
    "mne.tests.test_transforms._sphere_to_cartesian",
    "mne.transforms._cart_to_sph",
    "mne.transforms._sph_to_cart",
    "numpy.array",
    "numpy.cos",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_topo_to_sph": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "enumerate",
    "mne.tests.test_transforms._sphere_to_cartesian",
    "mne.tests.test_transforms._topo_to_sphere",
    "mne.transforms._sph_to_cart",
    "mne.transforms._topo_to_sph",
    "numpy.array",
    "numpy.ones_like",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_tps": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mne.transforms._SphericalSurfaceWarp",
    "mne.transforms._sph_to_cart",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.test_vector_rotation": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "mne.transforms._angle_between_quats",
    "mne.transforms._find_vector_rotation",
    "mne.transforms.rot_to_quat",
    "numpy.array",
    "numpy.eye",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_transforms.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.translation": {
  "data": {
   "shadows": "mne.transforms.translation"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_transforms.write_trans": {
  "data": {
   "shadows": "mne.write_trans"
  },
  "type": "import"
 },
 "mne.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.tests.test_utils.base_dir",
    "mne.tests.test_utils.data_path",
    "mne.tests.test_utils.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.tests.test_utils.ArgvSetter": {
  "data": {
   "shadows": "mne.utils.ArgvSetter"
  },
  "type": "import"
 },
 "mne.tests.test_utils.ProgressBar": {
  "data": {
   "shadows": "mne.utils.ProgressBar"
  },
  "type": "import"
 },
 "mne.tests.test_utils.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "mne.tests.test_utils.StringIO": {
  "data": {
   "shadows": "mne.externals.six.moves.StringIO"
  },
  "type": "import"
 },
 "mne.tests.test_utils._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.tests.test_utils._check_fname": {
  "data": {
   "shadows": "mne.utils._check_fname"
  },
  "type": "import"
 },
 "mne.tests.test_utils._check_mayavi_version": {
  "data": {
   "shadows": "mne.utils._check_mayavi_version"
  },
  "type": "import"
 },
 "mne.tests.test_utils._check_subject": {
  "data": {
   "shadows": "mne.utils._check_subject"
  },
  "type": "import"
 },
 "mne.tests.test_utils._check_type_picks": {
  "data": {
   "shadows": "mne.utils._check_type_picks"
  },
  "type": "import"
 },
 "mne.tests.test_utils._fetch_file": {
  "data": {
   "shadows": "mne.utils._fetch_file"
  },
  "type": "import"
 },
 "mne.tests.test_utils._get_call_line": {
  "data": {
   "shadows": "mne.utils._get_call_line"
  },
  "type": "import"
 },
 "mne.tests.test_utils._get_inst_data": {
  "data": {
   "shadows": "mne.utils._get_inst_data"
  },
  "type": "import"
 },
 "mne.tests.test_utils._get_stim_channel": {
  "data": {
   "shadows": "mne.utils._get_stim_channel"
  },
  "type": "import"
 },
 "mne.tests.test_utils._memory_usage": {
  "data": {
   "shadows": "mne.utils._memory_usage"
  },
  "type": "import"
 },
 "mne.tests.test_utils._segment_raw": {
  "data": {
   "shadows": "mne.epochs._segment_raw"
  },
  "type": "import"
 },
 "mne.tests.test_utils._test_fetch": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "ValueError",
    "mne.tests.test_utils.os",
    "mne.utils.ArgvSetter",
    "mne.utils._TempDir",
    "mne.utils._fetch_file",
    "nose.tools.assert_raises",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils._time_mask": {
  "data": {
   "shadows": "mne.utils._time_mask"
  },
  "type": "import"
 },
 "mne.tests.test_utils._url_to_local_path": {
  "data": {
   "shadows": "mne.utils._url_to_local_path"
  },
  "type": "import"
 },
 "mne.tests.test_utils.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.tests.test_utils.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.tests.test_utils.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.tests.test_utils.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "mne.tests.test_utils.assert_not_in": {
  "data": {
   "shadows": "nose.tools.assert_not_in"
  },
  "type": "import"
 },
 "mne.tests.test_utils.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.tests.test_utils.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.tests.test_utils.base_dir": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.tests.test_utils.buggy_mkl_svd": {
  "data": {
   "shadows": "mne.utils.buggy_mkl_svd"
  },
  "type": "import"
 },
 "mne.tests.test_utils.check_fname": {
  "data": {
   "shadows": "mne.utils.check_fname"
  },
  "type": "import"
 },
 "mne.tests.test_utils.check_random_state": {
  "data": {
   "shadows": "mne.utils.check_random_state"
  },
  "type": "import"
 },
 "mne.tests.test_utils.clean_lines": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "mne.tests.test_utils.compute_corr": {
  "data": {
   "shadows": "mne.utils.compute_corr"
  },
  "type": "import"
 },
 "mne.tests.test_utils.copy_doc": {
  "data": {
   "shadows": "mne.utils.copy_doc"
  },
  "type": "import"
 },
 "mne.tests.test_utils.copy_function_doc_to_method_doc": {
  "data": {
   "shadows": "mne.utils.copy_function_doc_to_method_doc"
  },
  "type": "import"
 },
 "mne.tests.test_utils.create_slices": {
  "data": {
   "shadows": "mne.utils.create_slices"
  },
  "type": "import"
 },
 "mne.tests.test_utils.data_path": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.tests.test_utils.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.tests.test_utils.deprecated": {
  "data": {
   "shadows": "mne.utils.deprecated"
  },
  "type": "import"
 },
 "mne.tests.test_utils.deprecated_class": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "mne.utils.deprecated",
    "object"
   ]
  },
  "type": "class"
 },
 "mne.tests.test_utils.deprecated_class.__init__": {
  "data": {
   "lineno": 465
  },
  "type": "function"
 },
 "mne.tests.test_utils.deprecated_func": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "mne.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.estimate_rank": {
  "data": {
   "shadows": "mne.utils.estimate_rank"
  },
  "type": "import"
 },
 "mne.tests.test_utils.fname_evoked": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.tests.test_utils.fname_fsaverage_trans": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.tests.test_utils.fname_log": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.tests.test_utils.fname_log_2": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.tests.test_utils.fname_raw": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.tests.test_utils.get_config": {
  "data": {
   "shadows": "mne.utils.get_config"
  },
  "type": "import"
 },
 "mne.tests.test_utils.get_config_path": {
  "data": {
   "shadows": "mne.utils.get_config_path"
  },
  "type": "import"
 },
 "mne.tests.test_utils.md5sum": {
  "data": {
   "shadows": "mne.utils.md5sum"
  },
  "type": "import"
 },
 "mne.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.tests.test_utils.object_diff": {
  "data": {
   "shadows": "mne.utils.object_diff"
  },
  "type": "import"
 },
 "mne.tests.test_utils.object_hash": {
  "data": {
   "shadows": "mne.utils.object_hash"
  },
  "type": "import"
 },
 "mne.tests.test_utils.object_size": {
  "data": {
   "shadows": "mne.utils.object_size"
  },
  "type": "import"
 },
 "mne.tests.test_utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.tests.test_utils.open_docs": {
  "data": {
   "shadows": "mne.open_docs"
  },
  "type": "import"
 },
 "mne.tests.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "mne.tests.test_utils.random_permutation": {
  "data": {
   "shadows": "mne.utils.random_permutation"
  },
  "type": "import"
 },
 "mne.tests.test_utils.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.tests.test_utils.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.tests.test_utils.requires_ftp": {
  "data": {
   "shadows": "mne.utils.requires_ftp"
  },
  "type": "import"
 },
 "mne.tests.test_utils.requires_good_network": {
  "data": {
   "shadows": "mne.utils.requires_good_network"
  },
  "type": "import"
 },
 "mne.tests.test_utils.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.tests.test_utils.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.tests.test_utils.set_config": {
  "data": {
   "shadows": "mne.utils.set_config"
  },
  "type": "import"
 },
 "mne.tests.test_utils.set_log_file": {
  "data": {
   "shadows": "mne.utils.set_log_file"
  },
  "type": "import"
 },
 "mne.tests.test_utils.set_log_level": {
  "data": {
   "shadows": "mne.utils.set_log_level"
  },
  "type": "import"
 },
 "mne.tests.test_utils.set_memmap_min_size": {
  "data": {
   "shadows": "mne.utils.set_memmap_min_size"
  },
  "type": "import"
 },
 "mne.tests.test_utils.show_fiff": {
  "data": {
   "shadows": "mne.io.show_fiff"
  },
  "type": "import"
 },
 "mne.tests.test_utils.sizeof_fmt": {
  "data": {
   "shadows": "mne.utils.sizeof_fmt"
  },
  "type": "import"
 },
 "mne.tests.test_utils.sparse": {
  "data": {
   "shadows": "scipy.sparse"
  },
  "type": "import"
 },
 "mne.tests.test_utils.sum_squared": {
  "data": {
   "shadows": "mne.utils.sum_squared"
  },
  "type": "import"
 },
 "mne.tests.test_utils.sys_info": {
  "data": {
   "shadows": "mne.utils.sys_info"
  },
  "type": "import"
 },
 "mne.tests.test_utils.test_buggy_mkl": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "mne.tests.test_utils.warnings",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "str",
    "unittest.SkipTest"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_buggy_mkl.bar": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.utils.buggy_mkl_svd"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_buggy_mkl.foo": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "mne.utils.buggy_mkl_svd",
    "numpy.linalg.LinAlgError"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_check_mayavi": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.utils._check_mayavi_version",
    "mne.utils.requires_mayavi",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_check_type_picks": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "mne.utils._check_type_picks",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_compute_corr": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.utils.compute_corr",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.corrcoef",
    "numpy.testing.assert_allclose",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_config": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "any",
    "len",
    "mne.tests.test_utils.os",
    "mne.tests.test_utils.warnings",
    "mne.utils._TempDir",
    "mne.utils.get_config",
    "mne.utils.get_config_path",
    "mne.utils.set_config",
    "nose.tools.assert_not_in",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_equal",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_copy_doc": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "ValueError",
    "mne.utils.copy_doc",
    "nose.tools.assert_raises",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_copy_doc.A": {
  "data": {
   "lineno": 644
  },
  "type": "class"
 },
 "mne.tests.test_utils.test_copy_doc.A.m1": {
  "data": {
   "lineno": 645
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_copy_doc.B": {
  "data": {
   "lineno": 649
  },
  "type": "class"
 },
 "mne.tests.test_utils.test_copy_doc.B.m1": {
  "data": {
   "lineno": 650
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_copy_doc.C": {
  "data": {
   "lineno": 653
  },
  "type": "class"
 },
 "mne.tests.test_utils.test_copy_doc.C.m1": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "mne.utils.copy_doc"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_copy_function_doc_to_method_doc": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "ValueError",
    "mne.utils.copy_function_doc_to_method_doc",
    "nose.tools.assert_raises",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_copy_function_doc_to_method_doc.A": {
  "data": {
   "lineno": 719
  },
  "type": "class"
 },
 "mne.tests.test_utils.test_copy_function_doc_to_method_doc.A.method_f1": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "mne.utils.copy_function_doc_to_method_doc"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_copy_function_doc_to_method_doc.A.method_f2": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "mne.utils.copy_function_doc_to_method_doc"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_copy_function_doc_to_method_doc.A.method_f3": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "mne.utils.copy_function_doc_to_method_doc"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_copy_function_doc_to_method_doc.f1": {
  "data": {
   "lineno": 664
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_copy_function_doc_to_method_doc.f2": {
  "data": {
   "lineno": 680
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_copy_function_doc_to_method_doc.f3": {
  "data": {
   "lineno": 694
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_copy_function_doc_to_method_doc.f4": {
  "data": {
   "lineno": 704
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_copy_function_doc_to_method_doc.f5": {
  "data": {
   "lineno": 708
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_create_slices": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "len",
    "mne.utils.create_slices",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_deprecated": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "len",
    "mne.tests.test_utils.deprecated_class",
    "mne.tests.test_utils.deprecated_func",
    "mne.tests.test_utils.warnings",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_estimate_rank": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "ValueError",
    "mne.utils.estimate_rank",
    "nose.tools.assert_raises",
    "numpy.eye",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_fetch_file_ftp": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "mne.tests.test_utils._test_fetch",
    "mne.utils.requires_ftp",
    "mne.utils.requires_good_network"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_fetch_file_html": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "mne.tests.test_utils._test_fetch",
    "mne.utils.requires_good_network"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_get_call_line": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bar",
    "foo",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_get_call_line.bar": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "mne.utils._get_call_line"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_get_call_line.foo": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "mne.utils._get_call_line",
    "mne.utils.verbose"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_get_inst_data": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "TypeError",
    "list",
    "mne.epochs._segment_raw",
    "mne.io.read_raw_fif",
    "mne.tests.test_utils.fname_raw",
    "mne.time_frequency.tfr_morlet",
    "mne.utils._get_inst_data",
    "nose.tools.assert_raises",
    "numpy.array",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_hash": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "RuntimeError",
    "copy.deepcopy",
    "dict",
    "int",
    "len",
    "mne.externals.six.moves.StringIO",
    "mne.utils.object_diff",
    "mne.utils.object_hash",
    "nose.tools.assert_not_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "scipy.sparse.eye"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_logging": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.read_evokeds",
    "mne.tests.test_utils.clean_lines",
    "mne.tests.test_utils.fname_evoked",
    "mne.tests.test_utils.fname_log",
    "mne.tests.test_utils.fname_log_2",
    "mne.tests.test_utils.os",
    "mne.tests.test_utils.warnings",
    "mne.utils._TempDir",
    "mne.utils.set_log_file",
    "mne.utils.set_log_level",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.testing.assert_equal",
    "open",
    "os.path.isfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_md5sum": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "mne.utils._TempDir",
    "mne.utils.md5sum",
    "nose.tools.assert_true",
    "numpy.testing.assert_equal",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_misc": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "ValueError",
    "mne.tests.test_utils.clean_lines",
    "mne.utils._check_fname",
    "mne.utils._check_subject",
    "mne.utils._get_stim_channel",
    "mne.utils._memory_usage",
    "mne.utils.check_fname",
    "mne.utils.check_random_state",
    "mne.utils.get_config",
    "mne.utils.set_config",
    "mne.utils.set_memmap_min_size",
    "nose.tools.assert_raises",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_object_size": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "dict",
    "mne.utils.object_size",
    "nose.tools.assert_true",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.ones",
    "scipy.sparse.eye"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_open_docs": {
  "data": {
   "lineno": 778,
   "symbols_in_volume": [
    "ValueError",
    "mne.open_docs",
    "mne.tests.test_utils.webbrowser",
    "nose.tools.assert_raises",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_progressbar": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "ValueError",
    "mne.utils.ProgressBar",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_progressbar.iter_func": {
  "data": {
   "lineno": 772
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_random_permutation": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "mne.utils.random_permutation",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_run_tests_if_main": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "RuntimeError",
    "__name__",
    "len",
    "mne.utils.run_tests_if_main",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_run_tests_if_main.test_a": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_run_tests_if_main.test_b": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "numpy.testing.dec.skipif"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_run_tests_if_main.test_c": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_show_fiff": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "all",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.show_fiff",
    "mne.tests.test_utils.fname_evoked",
    "mne.tests.test_utils.fname_fsaverage_trans",
    "mne.tests.test_utils.fname_raw",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_sizeof_fmt": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "mne.utils.sizeof_fmt",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_sum_squared": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "mne.utils.sum_squared",
    "numpy.random.RandomState",
    "numpy.sum",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_sys_info": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "mne.externals.six.moves.StringIO",
    "mne.utils.sys_info",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_tempdir": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "mne.utils._TempDir",
    "nose.tools.assert_true",
    "os.path.isdir",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_time_mask": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "mne.utils._time_mask",
    "nose.tools.assert_raises",
    "numpy.arange",
    "numpy.array",
    "numpy.inf",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.test_url_to_local_path": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "mne.utils._url_to_local_path",
    "numpy.testing.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.tests.test_utils.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.tests.test_utils.tfr_morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr_morlet"
  },
  "type": "import"
 },
 "mne.tests.test_utils.verbose": {
  "data": {
   "shadows": "mne.utils.verbose"
  },
  "type": "import"
 },
 "mne.tests.test_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.tests.test_utils.webbrowser": {
  "data": {
   "shadows": "webbrowser"
  },
  "type": "import"
 },
 "mne.time_frequency": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency._stockwell": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency._stockwell._check_input_st": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "_is_power_of_two",
    "int",
    "mne.time_frequency._stockwell.math",
    "numpy.concatenate",
    "numpy.zeros",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell._check_input_st._is_power_of_two": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell._precompute_st_windows": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.complex",
    "numpy.empty",
    "numpy.exp",
    "numpy.ones",
    "numpy.pi",
    "numpy.r_",
    "numpy.sqrt",
    "scipy.fftpack.fft",
    "scipy.fftpack.fftfreq"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell._st": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.complex",
    "numpy.concatenate",
    "numpy.empty",
    "scipy.fftpack.fft",
    "scipy.fftpack.ifft"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell._st_power_itc": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "len",
    "numpy.abs",
    "numpy.concatenate",
    "numpy.empty",
    "numpy.empty_like",
    "numpy.mean",
    "scipy.fftpack.fft",
    "scipy.fftpack.ifft"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.time_frequency._stockwell.fftpack": {
  "data": {
   "shadows": "scipy.fftpack"
  },
  "type": "import"
 },
 "mne.time_frequency._stockwell.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "mne.time_frequency._stockwell.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency._stockwell.tfr_array_stockwell": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "bool",
    "enumerate",
    "iter",
    "mne.time_frequency._stockwell._check_input_st",
    "mne.time_frequency._stockwell._precompute_st_windows",
    "mne.time_frequency._stockwell._st_power_itc",
    "my_st",
    "numpy.abs",
    "numpy.empty",
    "parallel",
    "parallel_func",
    "range",
    "scipy.fftpack.fftfreq"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency._stockwell.tfr_stockwell": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "AverageTFR",
    "_get_data",
    "check_n_jobs",
    "copy.deepcopy",
    "len",
    "mne.time_frequency._stockwell.tfr_array_stockwell",
    "pick_info",
    "pick_types"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.ar": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.ar._yule_walker": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.arange",
    "numpy.dot",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.linalg.solve",
    "scipy.linalg.toeplitz"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.ar.fit_iir_model_raw": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_apply_scaling_array",
    "_handle_default",
    "_pick_data_channels",
    "_picks_by_type",
    "mne.time_frequency.ar._yule_walker",
    "numpy.array",
    "numpy.concatenate",
    "pick_info"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.ar.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.time_frequency.ar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.multitaper": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.multitaper._csd_from_mt": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper._mt_spectra": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.complex128",
    "numpy.fft.rfft",
    "numpy.fft.rfftfreq",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper._psd_from_mt": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper._psd_from_mt_adaptive": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "mne.time_frequency.multitaper._psd_from_mt",
    "numpy.empty",
    "numpy.max",
    "numpy.mean",
    "numpy.newaxis",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.trapz",
    "numpy.zeros_like",
    "range",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper.dpss_windows": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "I",
    "ValueError",
    "enumerate",
    "float",
    "int",
    "len",
    "mne.time_frequency.multitaper.tridi_inverse_iteration",
    "next_fast_len",
    "numpy.abs",
    "numpy.arange",
    "numpy.argmax",
    "numpy.array",
    "numpy.cos",
    "numpy.dot",
    "numpy.fft.irfft",
    "numpy.fft.rfft",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sin",
    "numpy.sinc",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "scipy.interpolate.interp1d",
    "scipy.linalg.eigvals_banded",
    "sum_squared",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "mne.time_frequency.multitaper.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.time_frequency.multitaper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.multitaper.psd_array_multitaper": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "len",
    "max",
    "min",
    "mne.time_frequency.multitaper._mt_spectra",
    "mne.time_frequency.multitaper._psd_from_mt",
    "mne.time_frequency.multitaper._psd_from_mt_adaptive",
    "mne.time_frequency.multitaper.dpss_windows",
    "my_psd_from_mt_adaptive",
    "numpy.arange",
    "numpy.array_split",
    "numpy.atleast_2d",
    "numpy.concatenate",
    "numpy.fft.rfftfreq",
    "numpy.inf",
    "numpy.newaxis",
    "numpy.sqrt",
    "numpy.zeros",
    "parallel",
    "parallel_func",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper.tfr_array_multitaper": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "_compute_tfr"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper.tridi_inverse_iteration": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "len",
    "mne.time_frequency.multitaper.tridisolve",
    "numpy.abs",
    "numpy.linalg.norm",
    "numpy.random.randn",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.multitaper.tridisolve": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.psd": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.psd._check_nfft": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.psd._check_psd_data": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "_pick_data_channels",
    "_time_mask",
    "isinstance",
    "numpy.where",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.psd._psd_func": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.psd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.psd.psd_array_welch": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "float",
    "get_spectrogram",
    "mne.time_frequency.psd._check_nfft",
    "mne.time_frequency.psd._psd_func",
    "my_psd_func",
    "numpy.arange",
    "numpy.array_split",
    "numpy.concatenate",
    "numpy.hstack",
    "numpy.inf",
    "numpy.nanmean",
    "parallel",
    "parallel_func"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.psd.psd_multitaper": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "mne.time_frequency.psd._check_psd_data",
    "numpy.inf",
    "psd_array_multitaper"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.psd.psd_welch": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "mne.time_frequency.psd._check_psd_data",
    "mne.time_frequency.psd.psd_array_welch",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.stft": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.stft.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "mne.time_frequency.stft.fft": {
  "data": {
   "shadows": "scipy.fftpack.fft"
  },
  "type": "import"
 },
 "mne.time_frequency.stft.fftfreq": {
  "data": {
   "shadows": "scipy.fftpack.fftfreq"
  },
  "type": "import"
 },
 "mne.time_frequency.stft.ifft": {
  "data": {
   "shadows": "scipy.fftpack.ifft"
  },
  "type": "import"
 },
 "mne.time_frequency.stft.istft": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.conj",
    "numpy.empty",
    "numpy.float",
    "numpy.pi",
    "numpy.real",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.fftpack.ifft"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.stft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.stft.stft": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "math.ceil",
    "numpy.arange",
    "numpy.complex",
    "numpy.isrealobj",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "scipy.fftpack.fft"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.stft.stft_norm2": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.stft.stftfreq": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "float",
    "numpy.abs",
    "scipy.fftpack.fftfreq"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.tests.test_ar": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_ar._yule_walker": {
  "data": {
   "shadows": "mne.time_frequency.ar._yule_walker"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.fit_iir_model_raw": {
  "data": {
   "shadows": "mne.time_frequency.ar.fit_iir_model_raw"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.io": {
  "data": {
   "shadows": "mne.io"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.lfilter": {
  "data": {
   "shadows": "scipy.signal.lfilter"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.raw_fname": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_ar.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.sm_yw": {
  "data": {
   "shadows": "statsmodels.regression.linear_model.yule_walker"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_ar.test_ar_raw": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mne.io.read_raw_fif",
    "mne.time_frequency.ar.fit_iir_model_raw",
    "mne.time_frequency.tests.test_ar.raw_fname",
    "nose.tools.assert_equal",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose",
    "scipy.signal.lfilter"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_ar.test_yule_walker": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "mne.time_frequency.ar._yule_walker",
    "mne.utils.requires_version",
    "numpy.newaxis",
    "numpy.random.randn",
    "numpy.testing.assert_array_almost_equal",
    "statsmodels.regression.linear_model.yule_walker"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd": {
  "data": {
   "symbols_in_volume": [
    "mne.time_frequency.tests.test_csd.base_dir",
    "mne.time_frequency.tests.test_csd.warnings",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_csd._get_data": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "dict",
    "events",
    "mne.io.read_raw_fif",
    "mne.time_frequency.tests.test_csd.event_fname",
    "mne.time_frequency.tests.test_csd.mne",
    "mne.time_frequency.tests.test_csd.raw_fname",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.base_dir": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_csd.csd_array": {
  "data": {
   "shadows": "mne.time_frequency.csd_array"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.csd_epochs": {
  "data": {
   "shadows": "mne.time_frequency.csd_epochs"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.event_fname": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_csd.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.raw_fname": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_csd.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.sum_squared": {
  "data": {
   "shadows": "mne.utils.sum_squared"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.test_compute_csd": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.time_frequency.csd_array",
    "mne.time_frequency.tests.test_csd._get_data",
    "mne.time_frequency.tests.test_csd.mne",
    "mne.time_frequency.tfr_morlet",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.abs",
    "numpy.argmax",
    "numpy.concatenate",
    "numpy.logical_and",
    "numpy.mean",
    "numpy.random.randn",
    "numpy.reshape",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "numpy.tril",
    "numpy.triu",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_epochs": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.time_frequency.csd_epochs",
    "mne.time_frequency.tests.test_csd._get_data",
    "mne.time_frequency.tfr_morlet",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "numpy.abs",
    "numpy.argmax",
    "numpy.mean",
    "numpy.testing.assert_array_equal",
    "numpy.tril",
    "numpy.triu",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_epochs_on_artificial_data": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "abs",
    "float",
    "len",
    "mne.time_frequency.csd_epochs",
    "mne.time_frequency.tests.test_csd._get_data",
    "mne.utils.sum_squared",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.inf",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.test_csd_on_artificial_data": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "abs",
    "float",
    "len",
    "mne.time_frequency.csd_array",
    "mne.time_frequency.tests.test_csd._get_data",
    "mne.utils.sum_squared",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.inf",
    "numpy.where",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_csd.tfr_morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr_morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_csd.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.tests.test_multitaper.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.dpss_windows": {
  "data": {
   "shadows": "mne.time_frequency.multitaper.dpss_windows"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.ni": {
  "data": {
   "shadows": "nitime"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.psd_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.psd_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.requires_nitime": {
  "data": {
   "shadows": "mne.utils.requires_nitime"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_multitaper.test_dpss_windows": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "int",
    "mne.time_frequency.multitaper.dpss_windows",
    "mne.utils.requires_nitime",
    "nitime.algorithms.dpss_windows",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_multitaper.test_multitaper_psd": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "distutils.version.LooseVersion",
    "mne.create_info",
    "mne.io.RawArray",
    "mne.time_frequency.psd_multitaper",
    "mne.time_frequency.tests.test_multitaper.warnings",
    "mne.utils.requires_nitime",
    "nitime.__version__",
    "nitime.algorithms.spectral.multi_taper_psd",
    "nose.tools.assert_raises",
    "numpy.random.RandomState",
    "numpy.testing.assert_array_almost_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_multitaper.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd": {
  "data": {
   "symbols_in_volume": [
    "mne.time_frequency.tests.test_psd.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_psd.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.RawArray": {
  "data": {
   "shadows": "mne.io.RawArray"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.base_dir": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_psd.event_fname": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_psd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.psd": {
  "data": {
   "shadows": "matplotlib.pyplot.psd"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.psd_array_welch": {
  "data": {
   "shadows": "mne.time_frequency.psd_array_welch"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.psd_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.psd_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.psd_welch": {
  "data": {
   "shadows": "mne.time_frequency.psd_welch"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.raw_fname": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_psd.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_psd.test_compares_psd": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.psd",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.time_frequency.psd_welch",
    "mne.time_frequency.tests.test_psd.pytest",
    "mne.time_frequency.tests.test_psd.raw_fname",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_psd.test_psd": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "func",
    "len",
    "mne.Epochs",
    "mne.io.RawArray",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.time_frequency.psd_multitaper",
    "mne.time_frequency.psd_welch",
    "mne.time_frequency.tests.test_psd.event_fname",
    "mne.time_frequency.tests.test_psd.raw_fname",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.floor",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_raises",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_psd.test_psd_nan": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "float",
    "mne.time_frequency.psd_array_welch",
    "numpy.nan",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stft": {
  "data": {},
  "type": "module"
 },
 "mne.time_frequency.tests.test_stft.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.istft": {
  "data": {
   "shadows": "mne.time_frequency.stft.istft"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.stft": {
  "data": {
   "shadows": "mne.time_frequency.stft.stft"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.stft_norm2": {
  "data": {
   "shadows": "mne.time_frequency.stft.stft_norm2"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.stftfreq": {
  "data": {
   "shadows": "mne.time_frequency.stft.stftfreq"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stft.test_stft": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len",
    "mne.time_frequency.stft.istft",
    "mne.time_frequency.stft.stft",
    "mne.time_frequency.stft.stft_norm2",
    "mne.time_frequency.stft.stftfreq",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.all",
    "numpy.arange",
    "numpy.argmax",
    "numpy.array",
    "numpy.float",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.testing.assert_almost_equal",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "scipy.linalg.norm"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell": {
  "data": {
   "symbols_in_volume": [
    "mne.time_frequency.tests.test_stockwell.base_dir",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_stockwell.AverageTFR": {
  "data": {
   "shadows": "mne.time_frequency.tfr.AverageTFR"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell._check_input_st": {
  "data": {
   "shadows": "mne.time_frequency._stockwell._check_input_st"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell._precompute_st_windows": {
  "data": {
   "shadows": "mne.time_frequency._stockwell._precompute_st_windows"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell._st": {
  "data": {
   "shadows": "mne.time_frequency._stockwell._st"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell._st_power_itc": {
  "data": {
   "shadows": "mne.time_frequency._stockwell._st_power_itc"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.base_dir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_stockwell.fftpack": {
  "data": {
   "shadows": "scipy.fftpack"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.raw_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_stockwell.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.test_stockwell_api": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "events",
    "isinstance",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.time_frequency._stockwell.tfr_stockwell",
    "mne.time_frequency.tests.test_stockwell.base_dir",
    "mne.time_frequency.tests.test_stockwell.raw_fname",
    "mne.time_frequency.tests.test_stockwell.warnings",
    "mne.time_frequency.tfr.AverageTFR",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.log",
    "numpy.testing.assert_array_almost_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell.test_stockwell_check_input": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mne.time_frequency._stockwell._check_input_st",
    "mne.time_frequency.tests.test_stockwell.warnings",
    "nose.tools.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell.test_stockwell_core": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "int",
    "len",
    "mne.time_frequency._stockwell._precompute_st_windows",
    "mne.time_frequency._stockwell._st",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.arange",
    "numpy.cos",
    "numpy.pi",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_almost_equal",
    "scipy.fftpack.fftfreq",
    "scipy.fftpack.ifft"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell.test_stockwell_st_no_zero_pad": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mne.time_frequency._stockwell._precompute_st_windows",
    "mne.time_frequency._stockwell._st_power_itc",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_stockwell.tfr_stockwell": {
  "data": {
   "shadows": "mne.time_frequency._stockwell.tfr_stockwell"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_stockwell.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr": {
  "data": {
   "symbols_in_volume": [
    "mne.time_frequency.tests.test_tfr.matplotlib",
    "mne.utils.run_tests_if_main",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.time_frequency.tests.test_tfr.AverageTFR": {
  "data": {
   "shadows": "mne.time_frequency.tfr.AverageTFR"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.EpochsArray": {
  "data": {
   "shadows": "mne.EpochsArray"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.EpochsTFR": {
  "data": {
   "shadows": "mne.time_frequency.tfr.EpochsTFR"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr._compute_tfr": {
  "data": {
   "shadows": "mne.time_frequency.tfr._compute_tfr"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr._make_dpss": {
  "data": {
   "shadows": "mne.time_frequency.tfr._make_dpss"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.assert_array_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_almost_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.combine_tfr": {
  "data": {
   "shadows": "mne.time_frequency.tfr.combine_tfr"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.create_info": {
  "data": {
   "shadows": "mne.create_info"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.cwt": {
  "data": {
   "shadows": "mne.time_frequency.tfr.cwt"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.event_fname": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_tfr.grand_average": {
  "data": {
   "shadows": "mne.utils.grand_average"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.mne": {
  "data": {
   "shadows": "mne"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr.morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.raw_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.time_frequency.tests.test_tfr.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.read_tfrs": {
  "data": {
   "shadows": "mne.time_frequency.tfr.read_tfrs"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.requires_h5py": {
  "data": {
   "shadows": "mne.utils.requires_h5py"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.test_add_channels": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "ValueError",
    "all",
    "mne.time_frequency.tests.test_tfr.mne",
    "mne.time_frequency.tfr.AverageTFR",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_compute_tfr": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "events",
    "float",
    "func",
    "int",
    "isinstance",
    "itertools.product",
    "len",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.time_frequency.tests.test_tfr.event_fname",
    "mne.time_frequency.tests.test_tfr.raw_fname",
    "mne.time_frequency.tfr._compute_tfr",
    "mne.time_frequency.tfr_array_morlet",
    "mne.time_frequency.tfr_array_multitaper",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.all",
    "numpy.arange",
    "numpy.complex",
    "numpy.float",
    "numpy.isfinite",
    "numpy.r_",
    "numpy.sum",
    "numpy.testing.assert_array_equal",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_crop": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "mne.time_frequency.tests.test_tfr.mne",
    "mne.time_frequency.tfr.AverageTFR",
    "nose.tools.assert_equal",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_dpsswavelet": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "len",
    "mne.time_frequency.tfr._make_dpss",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.arange",
    "numpy.mean",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_io": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "isinstance",
    "len",
    "mne.time_frequency.tests.test_tfr.mne",
    "mne.time_frequency.tfr.AverageTFR",
    "mne.time_frequency.tfr.EpochsTFR",
    "mne.time_frequency.tfr.read_tfrs",
    "mne.time_frequency.tfr.write_tfrs",
    "mne.utils._TempDir",
    "mne.utils.requires_h5py",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_morlet": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "mne.time_frequency.tfr.morlet",
    "nose.tools.assert_true",
    "numpy.abs",
    "numpy.mean",
    "numpy.real"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_plot": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplot2grid",
    "mne.time_frequency.tests.test_tfr.mne",
    "mne.time_frequency.tfr.AverageTFR",
    "mne.viz.utils._fake_click",
    "numpy.array",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_tfr_multitaper": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "ValueError",
    "dict",
    "events",
    "int",
    "len",
    "mne.EpochsArray",
    "mne.create_info",
    "mne.time_frequency.tests.test_tfr.pytest",
    "mne.time_frequency.tfr.tfr_multitaper",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.any",
    "numpy.arange",
    "numpy.argmax",
    "numpy.empty",
    "numpy.float",
    "numpy.hanning",
    "numpy.logical_and",
    "numpy.logical_or",
    "numpy.pi",
    "numpy.random.RandomState",
    "numpy.sin",
    "numpy.testing.assert_array_almost_equal",
    "numpy.testing.assert_array_equal",
    "print",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.test_time_frequency": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "abs",
    "events",
    "float",
    "len",
    "list",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.time_frequency.tests.test_tfr.event_fname",
    "mne.time_frequency.tests.test_tfr.mne",
    "mne.time_frequency.tests.test_tfr.raw_fname",
    "mne.time_frequency.tests.test_tfr.warnings",
    "mne.time_frequency.tfr.combine_tfr",
    "mne.time_frequency.tfr.cwt",
    "mne.time_frequency.tfr.morlet",
    "mne.time_frequency.tfr.tfr_morlet",
    "mne.utils.grand_average",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.ceil",
    "numpy.inf",
    "numpy.mean",
    "numpy.ones",
    "numpy.sum",
    "numpy.testing.assert_array_almost_equal",
    "numpy.zeros",
    "print",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "mne.time_frequency.tests.test_tfr.tfr_array_morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr_array_morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.tfr_array_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.tfr_array_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.tfr_morlet": {
  "data": {
   "shadows": "mne.time_frequency.tfr.tfr_morlet"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.tfr_multitaper": {
  "data": {
   "shadows": "mne.time_frequency.tfr.tfr_multitaper"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.time_frequency.tests.test_tfr.write_tfrs": {
  "data": {
   "shadows": "mne.time_frequency.tfr.write_tfrs"
  },
  "type": "import"
 },
 "mne.viz": {
  "data": {},
  "type": "module"
 },
 "mne.viz.circle": {
  "data": {},
  "type": "module"
 },
 "mne.viz.circle._plot_connectivity_circle_onpick": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "enumerate",
    "numpy.abs",
    "numpy.argmin",
    "numpy.pi",
    "numpy.size",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.circle.circular_layout": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.any",
    "numpy.array",
    "numpy.cumsum",
    "numpy.diff",
    "numpy.float",
    "numpy.int",
    "numpy.ones",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mne.viz.circle.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mne.viz.circle.m_patches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "mne.viz.circle.m_path": {
  "data": {
   "shadows": "matplotlib.path"
  },
  "type": "import"
 },
 "mne.viz.circle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.circle.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.circle.plot_connectivity_circle": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "_set_ax_facecolor",
    "colormap",
    "enumerate",
    "float",
    "functools.partial",
    "isinstance",
    "itertools.cycle",
    "len",
    "matplotlib.patches.PathPatch",
    "matplotlib.path.Path",
    "matplotlib.path.Path.CURVE4",
    "matplotlib.path.Path.LINETO",
    "matplotlib.path.Path.MOVETO",
    "matplotlib.pyplot.Normalize",
    "matplotlib.pyplot.cm.ScalarMappable",
    "matplotlib.pyplot.cm.spectral",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.get_cmap",
    "matplotlib.pyplot.getp",
    "matplotlib.pyplot.setp",
    "matplotlib.pyplot.subplot",
    "matplotlib.pyplot.title",
    "matplotlib.pyplot.xticks",
    "matplotlib.pyplot.ylim",
    "matplotlib.pyplot.yticks",
    "mne.viz.circle._plot_connectivity_circle_onpick",
    "numpy.abs",
    "numpy.argsort",
    "numpy.diag_indices",
    "numpy.int",
    "numpy.linspace",
    "numpy.max",
    "numpy.min",
    "numpy.ones",
    "numpy.pi",
    "numpy.random.mtrand.RandomState",
    "numpy.sort",
    "numpy.tril_indices",
    "numpy.where",
    "numpy.zeros",
    "numpy.zeros_like",
    "plt_show",
    "range",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.circle.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.circle.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.viz.decoding": {
  "data": {},
  "type": "module"
 },
 "mne.viz.decoding._get_chance_level": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.mean",
    "numpy.nan",
    "numpy.unique",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.viz.decoding._plot_gat_time": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "float",
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.all",
    "numpy.nan",
    "numpy.unique",
    "numpy.zeros",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz.decoding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.decoding.plot_gat_matrix": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "RuntimeError",
    "deprecated",
    "hasattr",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.subplots",
    "plt_show"
   ]
  },
  "type": "function"
 },
 "mne.viz.decoding.plot_gat_times": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "deprecated",
    "float",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.subplots",
    "mne.viz.decoding._get_chance_level",
    "mne.viz.decoding._plot_gat_time",
    "numpy.isfinite",
    "numpy.ndarray",
    "numpy.tile",
    "plt_show",
    "repr",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.decoding.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.decoding.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.viz.evoked": {
  "data": {},
  "type": "module"
 },
 "mne.viz.evoked.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "mne.viz.evoked.Line2D": {
  "data": {
   "shadows": "matplotlib.lines.Line2D"
  },
  "type": "import"
 },
 "mne.viz.evoked.SpanSelector": {
  "data": {
   "shadows": "matplotlib.widgets.SpanSelector"
  },
  "type": "import"
 },
 "mne.viz.evoked._animate_evoked_topomap": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "_topomap_animation"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._butterfly_on_button_press": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "len",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._butterfly_onpick": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "len",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._check_estimated_rank": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "_get_rank_sss",
    "len",
    "mne.viz.evoked._match_proj_type",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._connection_line": {
  "data": {
   "lineno": 1214,
   "symbols_in_volume": [
    "matplotlib.lines.Line2D"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._handle_spatial_colors": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "_auto_topomap_coords",
    "_check_outlines",
    "_clean_names",
    "mne.viz.evoked._plot_legend",
    "numpy.array",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._line_plot_onselect": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "_merge_grad_data",
    "_pair_grad_sensors",
    "_prepare_topo_plot",
    "enumerate",
    "functools.partial",
    "len",
    "list",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.subplots",
    "max",
    "min",
    "numpy.abs",
    "numpy.average",
    "plot_topomap",
    "plt_show",
    "tight_layout"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._match_proj_type": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_evoked": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_check_delayed_ssp",
    "_draw_proj_checkbox",
    "_handle_default",
    "all",
    "channel_type",
    "dict",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.Axes",
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.subplots_adjust",
    "mne.viz.evoked._plot_image",
    "mne.viz.evoked._plot_lines",
    "numpy.array",
    "numpy.ndarray",
    "plt_show",
    "range",
    "set",
    "sorted",
    "tight_layout",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_evoked_white": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_estimate_rank_meeg_cov",
    "_handle_default",
    "_picks_by_type",
    "any",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.cm.Set1",
    "matplotlib.pyplot.subplots",
    "mne.viz.evoked._check_estimated_rank",
    "numpy.ix_",
    "numpy.linspace",
    "pick_info",
    "pick_types",
    "plt_show",
    "read_cov",
    "sorted",
    "tuple",
    "whiten_evoked",
    "whitened_gfp",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_evoked_white.whitened_gfp": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "len",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_image": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "DraggableColorbar",
    "_pl",
    "_setup_cmap",
    "len",
    "matplotlib.pyplot.colorbar"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_legend": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "_draw_outlines",
    "_prepare_topomap",
    "mpl_toolkits.axes_grid1.inset_locator.inset_axes",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_lines": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "TypeError",
    "_pl",
    "bool",
    "callable",
    "dict",
    "enumerate",
    "functools.partial",
    "isinstance",
    "len",
    "list",
    "matplotlib.patheffects.withStroke",
    "matplotlib.pyplot.get_backend",
    "matplotlib.widgets.SpanSelector",
    "mne.viz.evoked._butterfly_on_button_press",
    "mne.viz.evoked._butterfly_onpick",
    "mne.viz.evoked._handle_spatial_colors",
    "mne.viz.evoked._line_plot_onselect",
    "mne.viz.evoked._rgb",
    "numpy.array",
    "numpy.diff",
    "numpy.ones",
    "numpy.sqrt",
    "range",
    "tuple",
    "type",
    "warn",
    "zip",
    "zorder"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._plot_update_evoked": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.where",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._rgb": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.maximum"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._setup_styles": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked._topo_closed": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "mne.viz.evoked._truncate_yaxis": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "numpy.abs",
    "round"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.colorConverter": {
  "data": {
   "shadows": "matplotlib.colors.colorConverter"
  },
  "type": "import"
 },
 "mne.viz.evoked.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.viz.evoked.inset_axes": {
  "data": {
   "shadows": "mpl_toolkits.axes_grid1.inset_locator.inset_axes"
  },
  "type": "import"
 },
 "mne.viz.evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.evoked.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.evoked.patheffects": {
  "data": {
   "shadows": "matplotlib.patheffects"
  },
  "type": "import"
 },
 "mne.viz.evoked.plot_compare_evokeds": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_auto_topomap_coords",
    "_check_outlines",
    "_ci_fun",
    "_grad_pair_pick_and_name",
    "_handle_default",
    "_merge_grad_data",
    "_pick_data_channels",
    "_setup_ax_spines",
    "_validate_if_list_of_axes",
    "all",
    "any",
    "bool",
    "callable",
    "channel_type",
    "combine_evoked",
    "copy.deepcopy",
    "dict",
    "enumerate",
    "functools.partial",
    "int",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.subplots",
    "mne.viz.evoked._plot_legend",
    "mne.viz.evoked._setup_styles",
    "mne.viz.evoked._truncate_yaxis",
    "numbers.Integral",
    "numpy.any",
    "numpy.array",
    "numpy.asarray",
    "numpy.float",
    "numpy.int",
    "numpy.integer",
    "numpy.sqrt",
    "plt_show",
    "set",
    "sorted",
    "str",
    "type",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "mne.viz.evoked._plot_evoked",
    "zorder"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked_image": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "mne.viz.evoked._plot_evoked"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked_joint": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_pick_data_channels",
    "_process_times",
    "_set_contour_locator",
    "_setup_vmin_vmax",
    "any",
    "channel_type",
    "dict",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.subplot",
    "matplotlib.pyplot.subplots_adjust",
    "matplotlib.ticker.MaxNLocator",
    "mne.viz.evoked._connection_line",
    "mne.viz.evoked._plot_evoked",
    "numpy.ndarray",
    "plt_show",
    "range",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked_topo": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "_plot_evoked_topo",
    "len",
    "list",
    "matplotlib.colors.colorConverter.to_rgb",
    "numpy.mean",
    "tuple",
    "type",
    "warn"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_evoked_white": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "mne.viz.evoked._plot_evoked_white"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plot_snr_estimate": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "estimate_snr",
    "matplotlib.pyplot.draw",
    "matplotlib.pyplot.subplots",
    "numpy.concatenate",
    "plt_show"
   ]
  },
  "type": "function"
 },
 "mne.viz.evoked.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.evoked.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.viz.evoked.ticker": {
  "data": {
   "shadows": "matplotlib.ticker"
  },
  "type": "import"
 },
 "mne.viz.ica": {
  "data": {},
  "type": "module"
 },
 "mne.viz.ica.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "mne.viz.ica._close_epochs_event": {
  "data": {
   "lineno": 913
  },
  "type": "function"
 },
 "mne.viz.ica._close_event": {
  "data": {
   "lineno": 828
  },
  "type": "function"
 },
 "mne.viz.ica._create_properties_layout": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "list",
    "matplotlib.pyplot.figure"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._label_clicked": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "Exception",
    "_hide_frame",
    "_merge_grad_data",
    "_prepare_topo_plot",
    "_prepare_trellis",
    "enumerate",
    "len",
    "list",
    "matplotlib.pyplot.close",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.dot",
    "numpy.searchsorted",
    "pick_types",
    "plot_topomap",
    "plt_show",
    "tight_layout",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._pick_bads": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "_select_bads"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._plot_ica_overlay_evoked": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "matplotlib.pyplot.subplots",
    "numpy.ndarray",
    "plt_show",
    "tight_layout"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._plot_ica_overlay_raw": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.suptitle",
    "plt_show",
    "tight_layout"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._plot_ica_sources_evoked": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "dict",
    "functools.partial",
    "len",
    "list",
    "matplotlib.patheffects.withStroke",
    "matplotlib.pyplot.cm.rainbow",
    "matplotlib.pyplot.legend",
    "matplotlib.pyplot.subplots",
    "numpy.arange",
    "numpy.linspace",
    "numpy.sort",
    "plt_show",
    "set",
    "tight_layout",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._plot_sources_epochs": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "_handle_default",
    "_prepare_mne_browse_epochs",
    "create_info",
    "functools.partial",
    "int",
    "len",
    "list",
    "min",
    "mne.viz.ica._update_epoch_data",
    "numpy.append",
    "numpy.concatenate",
    "numpy.repeat",
    "pick_types",
    "plt_show",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._plot_sources_raw": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "_handle_default",
    "_layout_figure",
    "_prepare_mne_browse_raw",
    "create_info",
    "dict",
    "functools.partial",
    "int",
    "len",
    "list",
    "min",
    "numpy.append",
    "numpy.array",
    "pick_types",
    "plt_show",
    "range",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._update_data": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica._update_epoch_data": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.ica.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.ica.patheffects": {
  "data": {
   "shadows": "matplotlib.patheffects"
  },
  "type": "import"
 },
 "mne.viz.ica.plot_ica_overlay": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "ValueError",
    "_check_start_stop",
    "isinstance",
    "mne.viz.ica._plot_ica_overlay_evoked",
    "mne.viz.ica._plot_ica_overlay_raw"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica.plot_ica_properties": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "_plot_ica_topomap",
    "_segment_raw",
    "_validate_if_list_of_axes",
    "bool",
    "dict",
    "enumerate",
    "float",
    "int",
    "isinstance",
    "len",
    "list",
    "min",
    "mne.viz.ica._create_properties_layout",
    "numbers.Integral",
    "numpy.array",
    "numpy.diff",
    "numpy.log10",
    "numpy.sqrt",
    "numpy.swapaxes",
    "numpy.var",
    "plot_epochs_image",
    "plt_show",
    "psd_multitaper",
    "range",
    "set_title_and_labels",
    "type"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica.plot_ica_properties.set_title_and_labels": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "mne.viz.ica.plot_ica_scores": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.subplots",
    "numpy.arange",
    "numpy.isscalar",
    "numpy.ndarray",
    "numpy.unique",
    "plt_show",
    "tight_layout",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica.plot_ica_sources": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "isinstance",
    "len",
    "mne.viz.ica._plot_ica_sources_evoked",
    "mne.viz.ica._plot_sources_epochs",
    "mne.viz.ica._plot_sources_raw",
    "numpy.union1d"
   ]
  },
  "type": "function"
 },
 "mne.viz.ica.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.ica.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.viz.misc": {
  "data": {},
  "type": "module"
 },
 "mne.viz.misc._check_fscale": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "ValueError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc._filter_ticks": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "int",
    "list",
    "numpy.array",
    "numpy.floor",
    "numpy.log10",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc._get_flim": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc._get_presser": {
  "data": {
   "lineno": 570
  },
  "type": "function"
 },
 "mne.viz.misc._handle_event_colors": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "itertools.cycle",
    "len",
    "sorted",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc._plot_mri_contours": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "ValueError",
    "_prepare_trellis",
    "bool",
    "dict",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.cm.gray",
    "matplotlib.pyplot.subplots_adjust",
    "nibabel.affines.apply_affine",
    "nibabel.load",
    "numpy.int",
    "numpy.linspace",
    "numpy.logical_and",
    "plt_show",
    "read_surface",
    "repr",
    "scipy.linalg.inv",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.adjust_axes": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.viz.misc.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mne.viz.misc.freqz": {
  "data": {
   "shadows": "scipy.signal.freqz"
  },
  "type": "import"
 },
 "mne.viz.misc.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "mne.viz.misc.group_delay": {
  "data": {
   "shadows": "scipy.signal.group_delay"
  },
  "type": "import"
 },
 "mne.viz.misc.lfilter": {
  "data": {
   "shadows": "scipy.signal.lfilter"
  },
  "type": "import"
 },
 "mne.viz.misc.linalg": {
  "data": {
   "shadows": "scipy.linalg"
  },
  "type": "import"
 },
 "mne.viz.misc.nib": {
  "data": {
   "shadows": "nibabel"
  },
  "type": "import"
 },
 "mne.viz.misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.misc.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.misc.plot_bem": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "get_subjects_dir",
    "glob.glob",
    "isinstance",
    "len",
    "mne.viz.misc._plot_mri_contours",
    "os.path.exists",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.join",
    "read_source_spaces",
    "repr"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plot_cov": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "make_projector",
    "matplotlib.pyplot.subplots",
    "mne.viz.misc.copy",
    "numpy.dot",
    "numpy.sqrt",
    "pick_types",
    "plt_show",
    "scipy.linalg.svd",
    "tight_layout"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plot_dipole_amplitudes": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "itertools.cycle",
    "matplotlib.pyplot.subplots",
    "max",
    "min",
    "numpy.inf",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plot_events": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "events",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.gcf",
    "mne.viz.misc._handle_event_colors",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.max",
    "numpy.min",
    "numpy.ones",
    "numpy.sum",
    "numpy.unique",
    "plt_show",
    "sorted",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plot_filter": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "dict",
    "estimate_ringing_samples",
    "float",
    "isinstance",
    "len",
    "matplotlib.pyplot.subplots",
    "mne.viz.misc._check_fscale",
    "mne.viz.misc._filter_ticks",
    "mne.viz.misc._get_flim",
    "mne.viz.misc.adjust_axes",
    "mne.viz.misc.plot_ideal_filter",
    "mne.viz.misc.warnings",
    "numpy.arange",
    "numpy.complex128",
    "numpy.linspace",
    "numpy.log10",
    "numpy.logspace",
    "numpy.maximum",
    "numpy.ones",
    "numpy.pi",
    "numpy.zeros",
    "plt_show",
    "scipy.signal.freqz",
    "scipy.signal.group_delay",
    "scipy.signal.lfilter",
    "scipy.signal.sosfilt",
    "slice",
    "tight_layout",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plot_ideal_filter": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "list",
    "matplotlib.pyplot.subplots",
    "min",
    "mne.viz.misc._check_fscale",
    "mne.viz.misc._filter_ticks",
    "mne.viz.misc._get_flim",
    "mne.viz.misc.adjust_axes",
    "numpy.array",
    "numpy.linspace",
    "numpy.log10",
    "numpy.maximum",
    "plt_show",
    "range",
    "tight_layout"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plot_source_spectrogram": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.pyplot.barh",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.grid",
    "matplotlib.pyplot.pcolor",
    "matplotlib.pyplot.title",
    "matplotlib.pyplot.xlabel",
    "matplotlib.pyplot.xlim",
    "matplotlib.pyplot.ylabel",
    "matplotlib.pyplot.ylim",
    "matplotlib.pyplot.yscale",
    "mne.viz.misc.copy",
    "numpy.arange",
    "numpy.array",
    "numpy.meshgrid",
    "numpy.ravel",
    "numpy.round",
    "numpy.unravel_index",
    "plt_show",
    "range",
    "set",
    "sorted",
    "str",
    "tight_layout"
   ]
  },
  "type": "function"
 },
 "mne.viz.misc.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.misc.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.viz.misc.sosfilt": {
  "data": {
   "shadows": "scipy.signal.sosfilt"
  },
  "type": "import"
 },
 "mne.viz.misc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.montage": {
  "data": {},
  "type": "module"
 },
 "mne.viz.montage.cdist": {
  "data": {
   "shadows": "scipy.spatial.distance.cdist"
  },
  "type": "import"
 },
 "mne.viz.montage.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.viz.montage.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.montage.plot_montage": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "check_version",
    "copy.deepcopy",
    "create_info",
    "isinstance",
    "numpy.arange",
    "numpy.argwhere",
    "numpy.isclose",
    "numpy.nan",
    "numpy.setdiff1d",
    "numpy.tril_indices",
    "plot_sensors",
    "scipy.spatial.distance.cdist"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw": {
  "data": {},
  "type": "module"
 },
 "mne.viz.raw.RadioButtons": {
  "data": {
   "shadows": "matplotlib.widgets.RadioButtons"
  },
  "type": "import"
 },
 "mne.viz.raw.ScalarFormatter": {
  "data": {
   "shadows": "matplotlib.ticker.ScalarFormatter"
  },
  "type": "import"
 },
 "mne.viz.raw._close_event": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "matplotlib.pyplot.close"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._convert_psds": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.finfo",
    "numpy.log10",
    "numpy.maximum",
    "numpy.sqrt",
    "numpy.where",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._label_clicked": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "_find_channel_idx",
    "_handle_topomap_bads",
    "len",
    "mne.viz.raw._plot_update_raw_proj",
    "numpy.array",
    "numpy.searchsorted",
    "vars"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._pick_bad_channels": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "_select_bads",
    "mne.viz.raw._plot_update_raw_proj"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._plot_raw_traces": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "bool",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "numpy.any",
    "numpy.logical_and",
    "numpy.nan",
    "numpy.zeros",
    "range",
    "sorted",
    "vars",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._plot_update_raw_proj": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "mne.viz.raw.copy",
    "numpy.where",
    "setup_proj"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._prepare_mne_browse_raw": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "_setup_browser_offsets",
    "dict",
    "enumerate",
    "figure_nobar",
    "float",
    "functools.partial",
    "get_config",
    "isinstance",
    "len",
    "matplotlib.patches.Rectangle",
    "matplotlib.pyplot.subplot2grid",
    "matplotlib.widgets.Button",
    "max",
    "numpy.nan",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._selection_key_press": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "_change_channel_group",
    "mne.viz.raw._close_event"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._selection_scroll": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "_change_channel_group"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._set_custom_selection": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": [
    "_set_radio_button",
    "len",
    "numpy.in1d",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._set_psd_plot_params": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "_handle_default",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.Axes",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.subplot",
    "pick_types",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._setup_browser_selection": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "ValueError",
    "_divide_to_regions",
    "_get_stim_channel",
    "dict",
    "figure_nobar",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.subplot2grid",
    "matplotlib.widgets.RadioButtons",
    "numpy.concatenate",
    "pick_channels",
    "pick_types",
    "plot_sensors",
    "read_selection"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw._update_raw_data": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "_pick_data_channels",
    "float",
    "max",
    "numpy.clip",
    "numpy.dot",
    "numpy.logical_or",
    "numpy.mean",
    "numpy.nan",
    "numpy.newaxis",
    "range",
    "scipy.signal.filtfilt"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw.butter": {
  "data": {
   "shadows": "scipy.signal.butter"
  },
  "type": "import"
 },
 "mne.viz.raw.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "mne.viz.raw.filtfilt": {
  "data": {
   "shadows": "scipy.signal.filtfilt"
  },
  "type": "import"
 },
 "mne.viz.raw.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.raw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.raw.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.raw.plot_raw": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "_compute_scalings",
    "_ensure_int",
    "_handle_decim",
    "_handle_default",
    "_layout_figure",
    "_plot_annotations",
    "_radio_clicked",
    "_setup_butterfly",
    "_toggle_options",
    "callback_proj",
    "dict",
    "events",
    "events.astype",
    "float",
    "functools.partial",
    "int",
    "isinstance",
    "len",
    "list",
    "matplotlib.pyplot.subplot2grid",
    "matplotlib.widgets.Button",
    "min",
    "mne.viz.raw._pick_bad_channels",
    "mne.viz.raw._plot_update_raw_proj",
    "mne.viz.raw._prepare_mne_browse_raw",
    "mne.viz.raw._setup_browser_selection",
    "mne.viz.raw._update_raw_data",
    "numpy.arange",
    "numpy.argsort",
    "numpy.concatenate",
    "numpy.intersect1d",
    "numpy.nan",
    "numpy.ndarray",
    "pick_types",
    "plt_show",
    "scipy.signal.butter",
    "sorted",
    "type",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw.plot_raw_psd": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "_plot_lines",
    "channel_type",
    "create_info",
    "enumerate",
    "float",
    "len",
    "list",
    "matplotlib.ticker.ScalarFormatter",
    "min",
    "mne.viz.raw._convert_psds",
    "mne.viz.raw._set_psd_plot_params",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.diff",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.std",
    "plt_show",
    "psd_welch",
    "tight_layout",
    "warnings.warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw.plot_raw_psd_topo": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "TypeError",
    "_pick_data_channels",
    "_plot_topo",
    "find_layout",
    "functools.partial",
    "numpy.log10",
    "pick_info",
    "plt_show",
    "psd_welch"
   ]
  },
  "type": "function"
 },
 "mne.viz.raw.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.raw.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.viz.raw.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "mne.viz.tests": {
  "data": {},
  "type": "module"
 },
 "mne.viz.tests.test_3d": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_3d.base_dir",
    "mne.viz.tests.test_3d.data_dir",
    "mne.viz.tests.test_3d.io_dir",
    "mne.viz.tests.test_3d.matplotlib",
    "mne.viz.tests.test_3d.warnings",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_3d.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.VectorSourceEstimate": {
  "data": {
   "shadows": "mne.VectorSourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d._TempDir": {
  "data": {
   "shadows": "mne.utils._TempDir"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d._import_mlab": {
  "data": {
   "shadows": "mne.utils._import_mlab"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.base_dir": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.check_version": {
  "data": {
   "shadows": "mne.utils.check_version"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.config_fname": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.ctf_fname": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.data_dir": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.dip_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.evoked_fname": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.hs_fname": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.io_dir": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.make_field_map": {
  "data": {
   "shadows": "mne.make_field_map"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.make_sphere_model": {
  "data": {
   "shadows": "mne.make_sphere_model"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.pdf_fname": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.pick_channels_evoked": {
  "data": {
   "shadows": "mne.pick_channels_evoked"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_alignment": {
  "data": {
   "shadows": "mne.viz.plot_alignment"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_head_positions": {
  "data": {
   "shadows": "mne.viz.plot_head_positions"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_source_estimates": {
  "data": {
   "shadows": "mne.viz.plot_source_estimates"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_sparse_source_estimates": {
  "data": {
   "shadows": "mne.viz.plot_sparse_source_estimates"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plot_trans": {
  "data": {
   "shadows": "mne.viz.plot_trans"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_bem_solution": {
  "data": {
   "shadows": "mne.bem.read_bem_solution"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_bem_surfaces": {
  "data": {
   "shadows": "mne.bem.read_bem_surfaces"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_dipole": {
  "data": {
   "shadows": "mne.read_dipole"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_raw_bti": {
  "data": {
   "shadows": "mne.io.read_raw_bti"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_raw_kit": {
  "data": {
   "shadows": "mne.io.read_raw_kit"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_source_spaces": {
  "data": {
   "shadows": "mne.source_space.read_source_spaces"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.read_trans": {
  "data": {
   "shadows": "mne.read_trans"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.requires_mayavi": {
  "data": {
   "shadows": "mne.utils.requires_mayavi"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.requires_pysurfer": {
  "data": {
   "shadows": "mne.utils.requires_pysurfer"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.snapshot_brain_montage": {
  "data": {
   "shadows": "mne.viz.snapshot_brain_montage"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.sqd_fname": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.src_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.subjects_dir": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.test_limits_to_control_points": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "dict",
    "len",
    "mne.SourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space.read_source_spaces",
    "mne.utils._import_mlab",
    "mne.utils.requires_mayavi",
    "mne.utils.requires_pysurfer",
    "mne.viz.plot_source_estimates",
    "mne.viz.tests.test_3d.src_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "mne.viz.tests.test_3d.warnings",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_alignment": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "mne.bem.read_bem_solution",
    "mne.bem.read_bem_surfaces",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.meas_info.write_dig",
    "mne.io.read_raw_bti",
    "mne.io.read_raw_ctf",
    "mne.io.read_raw_kit",
    "mne.make_sphere_model",
    "mne.read_evokeds",
    "mne.source_space.read_source_spaces",
    "mne.utils._TempDir",
    "mne.utils._import_mlab",
    "mne.utils.requires_mayavi",
    "mne.viz.plot_alignment",
    "mne.viz.plot_trans",
    "mne.viz.tests.test_3d.config_fname",
    "mne.viz.tests.test_3d.ctf_fname",
    "mne.viz.tests.test_3d.evoked_fname",
    "mne.viz.tests.test_3d.hs_fname",
    "mne.viz.tests.test_3d.pdf_fname",
    "mne.viz.tests.test_3d.sqd_fname",
    "mne.viz.tests.test_3d.src_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "mne.viz.tests.test_3d.trans_fname",
    "mne.viz.tests.test_3d.warnings",
    "nose.tools.assert_true",
    "numpy.testing.assert_raises",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_dipole_mri_orthoview": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplot",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_dipole",
    "mne.read_trans",
    "mne.utils.requires_nibabel",
    "mne.viz.tests.test_3d.dip_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "mne.viz.tests.test_3d.trans_fname",
    "numpy.testing.assert_raises",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_evoked_field": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.make_field_map",
    "mne.pick_channels_evoked",
    "mne.read_evokeds",
    "mne.utils.requires_mayavi",
    "mne.viz.tests.test_3d.evoked_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "mne.viz.tests.test_3d.trans_fname",
    "mne.viz.tests.test_3d.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_head_positions": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "len",
    "matplotlib.pyplot.close",
    "mne.utils.check_version",
    "mne.viz.plot_head_positions",
    "mne.viz.tests.test_3d.warnings",
    "numpy.arange",
    "numpy.random.RandomState",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_sparse_source_estimates": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "len",
    "mne.SourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space.read_source_spaces",
    "mne.utils.requires_mayavi",
    "mne.utils.requires_pysurfer",
    "mne.viz.plot_source_estimates",
    "mne.viz.plot_sparse_source_estimates",
    "mne.viz.tests.test_3d.src_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "numpy.empty",
    "numpy.int",
    "numpy.random.RandomState",
    "numpy.random.rand",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_plot_vec_source_estimates": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "len",
    "mne.VectorSourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space.read_source_spaces",
    "mne.utils.requires_mayavi",
    "mne.utils.requires_version",
    "mne.viz.tests.test_3d.src_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "mne.viz.tests.test_3d.warnings",
    "numpy.random.RandomState",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_snapshot_brain_montage": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "mne.io.read_info",
    "mne.utils.requires_mayavi",
    "mne.viz.plot_trans",
    "mne.viz.snapshot_brain_montage",
    "mne.viz.tests.test_3d.evoked_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "mne.viz.tests.test_3d.warnings",
    "numpy.testing.assert_raises",
    "numpy.vstack",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.test_stc_mpl": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.pyplot.close",
    "mne.SourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.source_space.read_source_spaces",
    "mne.utils.requires_nibabel",
    "mne.viz.tests.test_3d.src_fname",
    "mne.viz.tests.test_3d.subjects_dir",
    "mne.viz.tests.test_3d.warnings",
    "mne.viz.utils._fake_click",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_3d.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.trans_fname": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.viz.tests.test_3d.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.tests.test_3d.write_dig": {
  "data": {
   "shadows": "mne.io.meas_info.write_dig"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle": {
  "data": {
   "symbols_in_volume": [
    "mne.viz.tests.test_circle.matplotlib"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_circle.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.circular_layout": {
  "data": {
   "shadows": "mne.viz.circular_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.plot_connectivity_circle": {
  "data": {
   "shadows": "mne.viz.plot_connectivity_circle"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_circle.test_plot_connectivity_circle": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.pyplot.close",
    "mne.viz.circular_layout",
    "mne.viz.plot_connectivity_circle",
    "numpy.random.RandomState",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_decoding": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_decoding.data_dir",
    "mne.viz.tests.test_decoding.matplotlib",
    "mne.viz.tests.test_decoding.warnings",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_decoding.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_decoding.GeneralizationAcrossTime": {
  "data": {
   "shadows": "mne.decoding.GeneralizationAcrossTime"
  },
  "type": "import"
 },
 "mne.viz.tests.test_decoding._get_data": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "dict",
    "events",
    "mne.Epochs",
    "mne.decoding.GeneralizationAcrossTime",
    "mne.epochs.concatenate_epochs",
    "mne.epochs.equalize_epoch_counts",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.viz.tests.test_decoding.event_name",
    "mne.viz.tests.test_decoding.raw_fname",
    "mne.viz.tests.test_decoding.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_decoding.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_decoding.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.viz.tests.test_decoding.chance": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "mne.viz.tests.test_decoding.concatenate_epochs": {
  "data": {
   "shadows": "mne.epochs.concatenate_epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_decoding.data_dir": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "mne.viz.tests.test_decoding.equalize_epoch_counts": {
  "data": {
   "shadows": "mne.epochs.equalize_epoch_counts"
  },
  "type": "import"
 },
 "mne.viz.tests.test_decoding.event_name": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "mne.viz.tests.test_decoding.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_decoding.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_decoding.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_decoding.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_decoding.raw_fname": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "mne.viz.tests.test_decoding.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_decoding.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_decoding.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.viz.tests.test_decoding.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_decoding.test_gat_chance_level": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "mne.utils.requires_version",
    "mne.viz.tests.test_decoding._get_data",
    "mne.viz.tests.test_decoding.chance",
    "mne.viz.tests.test_decoding.warnings",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_decoding.test_gat_plot_diagonal": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.utils.requires_version",
    "mne.viz.tests.test_decoding._get_data",
    "mne.viz.tests.test_decoding.warnings",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_decoding.test_gat_plot_matrix": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "RuntimeError",
    "mne.utils.requires_version",
    "mne.viz.tests.test_decoding._get_data",
    "mne.viz.tests.test_decoding.warnings",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_decoding.test_gat_plot_nonsquared": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "dict",
    "len",
    "mne.utils.requires_version",
    "mne.viz.tests.test_decoding._get_data",
    "mne.viz.tests.test_decoding.warnings",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_decoding.test_gat_plot_times": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "int",
    "len",
    "mne.utils.requires_version",
    "mne.viz.tests.test_decoding._get_data",
    "mne.viz.tests.test_decoding.warnings",
    "nose.tools.assert_raises",
    "numpy.ceil",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_decoding.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs": {
  "data": {
   "symbols_in_volume": [
    "mne.channels.read_layout",
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_epochs.base_dir",
    "mne.viz.tests.test_epochs.matplotlib",
    "mne.viz.tests.test_epochs.warnings",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_epochs.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs._get_epochs": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "events",
    "int",
    "len",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.read_events",
    "mne.viz.tests.test_epochs.event_name",
    "mne.viz.tests.test_epochs.n_chan",
    "mne.viz.tests.test_epochs.raw_fname",
    "mne.viz.tests.test_epochs.warnings",
    "numpy.linspace",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.base_dir": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.cov_fname": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.event_name": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.evoked_fname": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.layout": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.n_chan": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.plot_drop_log": {
  "data": {
   "shadows": "mne.viz.plot_drop_log"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.raw_fname": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "mne.viz.tests.test_epochs.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.read_layout": {
  "data": {
   "shadows": "mne.channels.read_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_epochs.test_plot_drop_log": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "matplotlib.pyplot.close",
    "mne.viz.plot_drop_log",
    "mne.viz.tests.test_epochs._get_epochs",
    "mne.viz.tests.test_epochs.warnings",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_epochs": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "matplotlib.pyplot.close",
    "mne.viz.tests.test_epochs._get_epochs",
    "mne.viz.tests.test_epochs.warnings",
    "mne.viz.utils._fake_click",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_epochs_image": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "list",
    "matplotlib.pyplot.close",
    "mne.viz.tests.test_epochs._get_epochs",
    "mne.viz.tests.test_epochs.warnings",
    "nose.tools.assert_raises",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.test_plot_psd_epochs": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "RuntimeError",
    "matplotlib.pyplot.close",
    "mne.utils.requires_version",
    "mne.viz.tests.test_epochs._get_epochs",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_epochs.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked": {
  "data": {
   "symbols_in_volume": [
    "mne.channels.read_layout",
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_evoked.base_dir",
    "mne.viz.tests.test_evoked.matplotlib",
    "mne.viz.tests.test_evoked.warnings",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_evoked.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked._get_epochs": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "events",
    "int",
    "len",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.viz.tests.test_evoked._get_picks",
    "mne.viz.tests.test_evoked.event_name",
    "mne.viz.tests.test_evoked.n_chan",
    "mne.viz.tests.test_evoked.raw_fname",
    "numpy.concatenate",
    "numpy.linspace",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked._get_epochs_delayed_ssp": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dict",
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.read_events",
    "mne.viz.tests.test_evoked._get_picks",
    "mne.viz.tests.test_evoked.event_name",
    "mne.viz.tests.test_evoked.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked._get_picks": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "mne.pick_types"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked._line_plot_onselect": {
  "data": {
   "shadows": "mne.viz.evoked._line_plot_onselect"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked._parametric_ci": {
  "data": {
   "shadows": "mne.stats._parametric_ci"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.base_dir": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.catch_logging": {
  "data": {
   "shadows": "mne.utils.catch_logging"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.cov_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.event_name": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.evoked_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.layout": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.n_chan": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.plot_compare_evokeds": {
  "data": {
   "shadows": "mne.viz.evoked.plot_compare_evokeds"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.raw_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.viz.tests.test_evoked.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.read_layout": {
  "data": {
   "shadows": "mne.channels.read_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_evoked.test_plot_evoked": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "dict",
    "len",
    "list",
    "matplotlib.pyplot.close",
    "mne.read_cov",
    "mne.stats._parametric_ci",
    "mne.utils.catch_logging",
    "mne.viz.evoked._line_plot_onselect",
    "mne.viz.evoked.plot_compare_evokeds",
    "mne.viz.tests.test_evoked._get_epochs",
    "mne.viz.tests.test_evoked._get_epochs_delayed_ssp",
    "mne.viz.tests.test_evoked.cov_fname",
    "mne.viz.tests.test_evoked.pytest",
    "mne.viz.tests.test_evoked.warnings",
    "mne.viz.utils._fake_click",
    "nose.tools.assert_true",
    "numpy.arange",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_evoked.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_ica.base_dir",
    "mne.viz.tests.test_ica.matplotlib",
    "mne.viz.tests.test_ica.warnings",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_ica.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.ICA": {
  "data": {
   "shadows": "mne.preprocessing.ICA"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica._create_properties_layout": {
  "data": {
   "shadows": "mne.viz.ica._create_properties_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica._get_epochs": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.viz.tests.test_ica._get_events",
    "mne.viz.tests.test_ica._get_picks",
    "mne.viz.tests.test_ica._get_raw",
    "mne.viz.tests.test_ica.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica._get_events": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "mne.read_events",
    "mne.viz.tests.test_ica.event_name"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica._get_picks": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica._get_raw": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mne.io.read_raw_fif",
    "mne.viz.tests.test_ica.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.base_dir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.cov_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.create_ecg_epochs": {
  "data": {
   "shadows": "mne.preprocessing.create_ecg_epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.create_eog_epochs": {
  "data": {
   "shadows": "mne.preprocessing.create_eog_epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.event_name": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.evoked_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.plot_ica_properties": {
  "data": {
   "shadows": "mne.viz.ica.plot_ica_properties"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.raw_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.viz.tests.test_ica.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.requires_sklearn": {
  "data": {
   "shadows": "mne.utils.requires_sklearn"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_ica.test_plot_ica_components": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "RuntimeError",
    "UserWarning",
    "ValueError",
    "isinstance",
    "matplotlib.pyplot.Axes",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.gcf",
    "mne.preprocessing.ICA",
    "mne.read_cov",
    "mne.utils.requires_sklearn",
    "mne.viz.tests.test_ica._get_picks",
    "mne.viz.tests.test_ica._get_raw",
    "mne.viz.tests.test_ica.cov_fname",
    "mne.viz.tests.test_ica.warnings",
    "mne.viz.utils._fake_click",
    "nose.tools.assert_true",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_ica_overlay": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.close",
    "mne.preprocessing.ICA",
    "mne.preprocessing.create_ecg_epochs",
    "mne.preprocessing.create_eog_epochs",
    "mne.read_cov",
    "mne.utils.requires_sklearn",
    "mne.viz.tests.test_ica._get_picks",
    "mne.viz.tests.test_ica._get_raw",
    "mne.viz.tests.test_ica.cov_fname",
    "mne.viz.tests.test_ica.warnings",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_ica_properties": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "events",
    "len",
    "list",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplots",
    "mne.Epochs",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.read_cov",
    "mne.utils.requires_sklearn",
    "mne.viz.ica._create_properties_layout",
    "mne.viz.ica.plot_ica_properties",
    "mne.viz.tests.test_ica._get_events",
    "mne.viz.tests.test_ica._get_picks",
    "mne.viz.tests.test_ica._get_raw",
    "mne.viz.tests.test_ica.cov_fname",
    "mne.viz.tests.test_ica.warnings",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_ica_scores": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "matplotlib.pyplot.close",
    "mne.preprocessing.ICA",
    "mne.read_cov",
    "mne.utils.requires_sklearn",
    "mne.viz.tests.test_ica._get_picks",
    "mne.viz.tests.test_ica._get_raw",
    "mne.viz.tests.test_ica.cov_fname",
    "mne.viz.tests.test_ica.warnings",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_ica_sources": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "dict",
    "matplotlib.pyplot.close",
    "mne.io.read_raw_fif",
    "mne.pick_types",
    "mne.preprocessing.ICA",
    "mne.utils.requires_sklearn",
    "mne.viz.tests.test_ica._get_epochs",
    "mne.viz.tests.test_ica._get_picks",
    "mne.viz.tests.test_ica.raw_fname",
    "mne.viz.tests.test_ica.warnings",
    "mne.viz.utils._fake_click",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.test_plot_instance_components": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "mne.preprocessing.ICA",
    "mne.read_cov",
    "mne.utils.requires_sklearn",
    "mne.viz.tests.test_ica._get_epochs",
    "mne.viz.tests.test_ica._get_picks",
    "mne.viz.tests.test_ica._get_raw",
    "mne.viz.tests.test_ica.cov_fname",
    "mne.viz.tests.test_ica.warnings",
    "mne.viz.utils._fake_click"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_ica.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_misc.base_dir",
    "mne.viz.tests.test_misc.data_path",
    "mne.viz.tests.test_misc.matplotlib",
    "mne.viz.tests.test_misc.subjects_dir",
    "mne.viz.tests.test_misc.warnings",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_misc.SourceEstimate": {
  "data": {
   "shadows": "mne.SourceEstimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc._get_events": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "mne.read_events",
    "mne.viz.tests.test_misc.event_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc._get_raw": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "mne.io.read_raw_fif",
    "mne.viz.tests.test_misc.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.base_dir": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.cov_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.create_filter": {
  "data": {
   "shadows": "mne.filter.create_filter"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.data_path": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.dip_fname": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.event_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.evoked_fname": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.inv_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_bem": {
  "data": {
   "shadows": "mne.viz.plot_bem"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_events": {
  "data": {
   "shadows": "mne.viz.plot_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_filter": {
  "data": {
   "shadows": "mne.viz.plot_filter"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_snr_estimate": {
  "data": {
   "shadows": "mne.viz.plot_snr_estimate"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plot_source_spectrogram": {
  "data": {
   "shadows": "mne.viz.plot_source_spectrogram"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.raw_fname": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.read_cov": {
  "data": {
   "shadows": "mne.read_cov"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_dipole": {
  "data": {
   "shadows": "mne.read_dipole"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_inverse_operator": {
  "data": {
   "shadows": "mne.minimum_norm.read_inverse_operator"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.read_source_spaces": {
  "data": {
   "shadows": "mne.read_source_spaces"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.requires_nibabel": {
  "data": {
   "shadows": "mne.utils.requires_nibabel"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.src_fname": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.subjects_dir": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "mne.viz.tests.test_misc.test_plot_bem": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "mne.datasets.testing.requires_testing_data",
    "mne.utils.requires_nibabel",
    "mne.viz.plot_bem",
    "mne.viz.tests.test_misc.src_fname",
    "mne.viz.tests.test_misc.subjects_dir",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_cov": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "mne.read_cov",
    "mne.viz.tests.test_misc._get_raw",
    "mne.viz.tests.test_misc.cov_fname",
    "mne.viz.tests.test_misc.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_dipole_amplitudes": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.read_dipole",
    "mne.viz.tests.test_misc.dip_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_events": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "events",
    "mne.viz.plot_events",
    "mne.viz.tests.test_misc._get_events",
    "mne.viz.tests.test_misc._get_raw",
    "mne.viz.tests.test_misc.warnings",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_filter": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "dict",
    "matplotlib.pyplot.close",
    "mne.filter.create_filter",
    "mne.utils.requires_version",
    "mne.viz.plot_filter",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_snr": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "mne.datasets.testing.requires_testing_data",
    "mne.minimum_norm.read_inverse_operator",
    "mne.read_evokeds",
    "mne.viz.plot_snr_estimate",
    "mne.viz.tests.test_misc.evoked_fname",
    "mne.viz.tests.test_misc.inv_fname",
    "mne.viz.tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.test_plot_source_spectrogram": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "mne.SourceEstimate",
    "mne.datasets.testing.requires_testing_data",
    "mne.read_source_spaces",
    "mne.viz.plot_source_spectrogram",
    "mne.viz.tests.test_misc.subjects_dir",
    "numpy.ones",
    "numpy.testing.assert_raises",
    "os.path.join",
    "sum"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_misc.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_misc.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage": {
  "data": {
   "symbols_in_volume": [
    "mne.viz.tests.test_montage.matplotlib",
    "mne.viz.tests.test_montage.p_dir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_montage.elp": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.hpi": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.hsp": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.p_dir": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.point_names": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "mne.viz.tests.test_montage.read_dig_montage": {
  "data": {
   "shadows": "mne.channels.read_dig_montage"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.read_montage": {
  "data": {
   "shadows": "mne.channels.read_montage"
  },
  "type": "import"
 },
 "mne.viz.tests.test_montage.test_plot_defect_montage": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "mne.channels.read_montage"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_montage.test_plot_montage": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "mne.channels.read_dig_montage",
    "mne.channels.read_montage",
    "mne.viz.tests.test_montage.elp",
    "mne.viz.tests.test_montage.hpi",
    "mne.viz.tests.test_montage.hsp",
    "mne.viz.tests.test_montage.point_names"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw": {
  "data": {
   "symbols_in_volume": [
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_raw.base_dir",
    "mne.viz.tests.test_raw.ctf_dir",
    "mne.viz.tests.test_raw.matplotlib",
    "mne.viz.tests.test_raw.warnings",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_raw.Annotations": {
  "data": {
   "shadows": "mne.Annotations"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw._annotation_helper": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.gcf",
    "mne.viz.utils._annotation_radio_clicked",
    "mne.viz.utils._fake_click",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw._annotation_radio_clicked": {
  "data": {
   "shadows": "mne.viz.utils._annotation_radio_clicked"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw._get_events": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "mne.read_events",
    "mne.viz.tests.test_raw.event_name"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw._get_raw": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mne.io.read_raw_fif",
    "mne.viz.tests.test_raw.raw_fname",
    "mne.viz.tests.test_raw.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.base_dir": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.ctf_dir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.ctf_fname_continuous": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.event_name": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.pick_types": {
  "data": {
   "shadows": "mne.pick_types"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.plot_raw": {
  "data": {
   "shadows": "mne.viz.plot_raw"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.plot_sensors": {
  "data": {
   "shadows": "mne.viz.plot_sensors"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.raw_fname": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "mne.viz.tests.test_raw.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.read_raw_ctf": {
  "data": {
   "shadows": "mne.io.read_raw_ctf"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.requires_version": {
  "data": {
   "shadows": "mne.utils.requires_version"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.test_plot_annotations": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "mne.Annotations",
    "mne.viz.tests.test_raw._annotation_helper",
    "mne.viz.tests.test_raw._get_raw",
    "mne.viz.tests.test_raw.warnings"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_raw": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "events",
    "hasattr",
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.get_fignums",
    "mne.Annotations",
    "mne.viz.plot_raw",
    "mne.viz.tests.test_raw._get_events",
    "mne.viz.tests.test_raw._get_raw",
    "mne.viz.tests.test_raw.warnings",
    "mne.viz.utils._fake_click",
    "numpy.arange",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_raises",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_raw_filtered": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "ValueError",
    "mne.utils.requires_version",
    "mne.viz.tests.test_raw._get_raw",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_raw_psd": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplot",
    "matplotlib.pyplot.subplots",
    "mne.pick_types",
    "mne.utils.requires_version",
    "mne.viz.tests.test_raw._get_raw",
    "mne.viz.tests.test_raw.itertools",
    "mne.viz.tests.test_raw.warnings",
    "numpy.inf",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_ref_meg": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.close",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.read_raw_ctf",
    "mne.viz.tests.test_raw.ctf_fname_continuous",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.test_plot_sensors": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.draw",
    "matplotlib.pyplot.subplot",
    "mne.viz.plot_sensors",
    "mne.viz.tests.test_raw._get_raw",
    "mne.viz.utils._fake_click",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_raw.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_raw.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo": {
  "data": {
   "symbols_in_volume": [
    "mne.channels.read_layout",
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_topo.base_dir",
    "mne.viz.tests.test_topo.matplotlib",
    "mne.viz.tests.test_topo.warnings",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_topo.AverageTFR": {
  "data": {
   "shadows": "mne.time_frequency.tfr.AverageTFR"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.Epochs": {
  "data": {
   "shadows": "mne.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo._get_epochs": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.viz.tests.test_topo._get_events",
    "mne.viz.tests.test_topo._get_picks",
    "mne.viz.tests.test_topo.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo._get_epochs_delayed_ssp": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "dict",
    "events",
    "mne.Epochs",
    "mne.io.read_raw_fif",
    "mne.viz.tests.test_topo._get_events",
    "mne.viz.tests.test_topo._get_picks",
    "mne.viz.tests.test_topo.raw_fname"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo._get_events": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "mne.read_events",
    "mne.viz.tests.test_topo.event_name"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo._get_picks": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo._get_presser": {
  "data": {
   "shadows": "mne.viz._get_presser"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo._imshow_tfr": {
  "data": {
   "shadows": "mne.viz.topo._imshow_tfr"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo._plot_update_evoked_topo_proj": {
  "data": {
   "shadows": "mne.viz.topo._plot_update_evoked_topo_proj"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.base_dir": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.event_name": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.evoked_fname": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.iter_topography": {
  "data": {
   "shadows": "mne.viz.topo.iter_topography"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.layout": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.mne_analyze_colormap": {
  "data": {
   "shadows": "mne.viz.mne_analyze_colormap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.pick_channels_evoked": {
  "data": {
   "shadows": "mne.pick_channels_evoked"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.plot_evoked_topo": {
  "data": {
   "shadows": "mne.viz.plot_evoked_topo"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.plot_topo_image_epochs": {
  "data": {
   "shadows": "mne.viz.plot_topo_image_epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.raw_fname": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topo.read_events": {
  "data": {
   "shadows": "mne.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.read_layout": {
  "data": {
   "shadows": "mne.channels.read_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topo.test_plot_tfr_topo": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.get_fignums",
    "matplotlib.pyplot.subplots",
    "mne.time_frequency.tfr.AverageTFR",
    "mne.viz.tests.test_topo._get_epochs",
    "mne.viz.topo._imshow_tfr",
    "mne.viz.utils._fake_click",
    "numpy.arange",
    "numpy.log10",
    "numpy.logspace",
    "numpy.random.RandomState",
    "numpy.testing.assert_equal",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_topo": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "UserWarning",
    "ValueError",
    "collections.namedtuple",
    "dict",
    "event",
    "func",
    "len",
    "matplotlib.pyplot.close",
    "mne.pick_channels_evoked",
    "mne.viz._get_presser",
    "mne.viz.plot_evoked_topo",
    "mne.viz.tests.test_topo._get_epochs",
    "mne.viz.tests.test_topo._get_epochs_delayed_ssp",
    "mne.viz.tests.test_topo.layout",
    "mne.viz.tests.test_topo.warnings",
    "mne.viz.topo._plot_update_evoked_topo_proj",
    "mne.viz.topo.iter_topography",
    "numpy.testing.assert_raises",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_topo.return_inds": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_topo_image_epochs": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.get_fignums",
    "mne.viz.mne_analyze_colormap",
    "mne.viz.plot_topo_image_epochs",
    "mne.viz.tests.test_topo._get_epochs",
    "mne.viz.utils._fake_click",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.test_plot_topo_single_ch": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.get_fignums",
    "mne.viz.plot_evoked_topo",
    "mne.viz.tests.test_topo._get_epochs",
    "mne.viz.tests.test_topo.matplotlib",
    "mne.viz.utils._fake_click",
    "nose.tools.assert_true",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topo.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap": {
  "data": {
   "symbols_in_volume": [
    "mne.channels.read_layout",
    "mne.datasets.testing.data_path",
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_topomap.base_dir",
    "mne.viz.tests.test_topomap.data_dir",
    "mne.viz.tests.test_topomap.matplotlib",
    "mne.viz.tests.test_topomap.warnings",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_topomap.AverageTFR": {
  "data": {
   "shadows": "mne.time_frequency.tfr.AverageTFR"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.Circle": {
  "data": {
   "shadows": "matplotlib.patches.Circle"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.FIFF": {
  "data": {
   "shadows": "mne.io.constants.FIFF"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap._check_outlines": {
  "data": {
   "shadows": "mne.viz.topomap._check_outlines"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap._find_peaks": {
  "data": {
   "shadows": "mne.viz.utils._find_peaks"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap._onselect": {
  "data": {
   "shadows": "mne.viz.topomap._onselect"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.assert_raises": {
  "data": {
   "shadows": "numpy.testing.assert_raises"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.base_dir": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.channel_indices_by_type": {
  "data": {
   "shadows": "mne.io.pick.channel_indices_by_type"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.data_dir": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.ecg_fname": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.event_name": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.evoked_fname": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.layout": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.make_eeg_average_ref_proj": {
  "data": {
   "shadows": "mne.io.proj.make_eeg_average_ref_proj"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.make_eeg_layout": {
  "data": {
   "shadows": "mne.channels.make_eeg_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.mpl": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.pick_info": {
  "data": {
   "shadows": "mne.io.pick.pick_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plot_evoked_topomap": {
  "data": {
   "shadows": "mne.viz.plot_evoked_topomap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plot_projs_topomap": {
  "data": {
   "shadows": "mne.viz.plot_projs_topomap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plot_psds_topomap": {
  "data": {
   "shadows": "mne.viz.topomap.plot_psds_topomap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plot_topomap": {
  "data": {
   "shadows": "mne.viz.topomap.plot_topomap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.raw_fname": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.read_evokeds": {
  "data": {
   "shadows": "mne.read_evokeds"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.read_info": {
  "data": {
   "shadows": "mne.io.read_info"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.read_layout": {
  "data": {
   "shadows": "mne.channels.read_layout"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.read_proj": {
  "data": {
   "shadows": "mne.read_proj"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.subjects_dir": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.test_plot_projs_topomap": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "RuntimeError",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplot",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.proj.make_eeg_average_ref_proj",
    "mne.io.read_info",
    "mne.read_proj",
    "mne.viz.plot_projs_topomap",
    "mne.viz.tests.test_topomap.ecg_fname",
    "mne.viz.tests.test_topomap.raw_fname",
    "mne.viz.tests.test_topomap.triux_fname",
    "mne.viz.tests.test_topomap.warnings",
    "numpy.testing.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_tfr_topomap": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "len",
    "list",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.subplots",
    "mne.io.pick.channel_indices_by_type",
    "mne.io.pick.pick_info",
    "mne.io.read_raw_fif",
    "mne.time_frequency.tfr.AverageTFR",
    "mne.viz.tests.test_topomap.matplotlib",
    "mne.viz.tests.test_topomap.raw_fname",
    "mne.viz.topomap._onselect",
    "mne.viz.topomap.plot_psds_topomap",
    "numpy.arange",
    "numpy.linspace",
    "numpy.random.RandomState",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "all",
    "bool",
    "dict",
    "functools.partial",
    "get_texts",
    "isinstance",
    "len",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.gcf",
    "matplotlib.pyplot.subplot",
    "mne.channels.make_eeg_layout",
    "mne.datasets.testing.requires_testing_data",
    "mne.io.constants.FIFF.FIFFV_COIL_EEG",
    "mne.read_evokeds",
    "mne.viz.plot_evoked_topomap",
    "mne.viz.tests.test_topomap.evoked_fname",
    "mne.viz.tests.test_topomap.layout",
    "mne.viz.tests.test_topomap.matplotlib",
    "mne.viz.tests.test_topomap.pytest",
    "mne.viz.tests.test_topomap.warnings",
    "mne.viz.topomap._check_outlines",
    "mne.viz.topomap.plot_topomap",
    "mne.viz.utils._fake_click",
    "mne.viz.utils._find_peaks",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "numpy.c_",
    "numpy.max",
    "numpy.newaxis",
    "numpy.ones",
    "numpy.repeat",
    "numpy.testing.assert_array_equal",
    "numpy.testing.assert_raises",
    "numpy.zeros",
    "numpy.zeros_like",
    "plt_topomap",
    "sorted"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap.get_texts": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "isinstance",
    "mne.viz.tests.test_topomap.matplotlib"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap.patch": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "matplotlib.patches.Circle",
    "matplotlib.pyplot.gca"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.test_plot_topomap.proc_names": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "mne.viz.tests.test_topomap.testing": {
  "data": {
   "shadows": "mne.datasets.testing"
  },
  "type": "import"
 },
 "mne.viz.tests.test_topomap.triux_fname": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "mne.viz.tests.test_topomap.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "mne.utils.run_tests_if_main",
    "mne.viz.tests.test_utils.base_dir",
    "mne.viz.tests.test_utils.matplotlib",
    "mne.viz.tests.test_utils.warnings",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "mne.viz.tests.test_utils.ClickableImage": {
  "data": {
   "shadows": "mne.viz.ClickableImage"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.Epochs": {
  "data": {
   "shadows": "mne.epochs.Epochs"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils._compute_scalings": {
  "data": {
   "shadows": "mne.viz.utils._compute_scalings"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils._fake_click": {
  "data": {
   "shadows": "mne.viz.utils._fake_click"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils._validate_if_list_of_axes": {
  "data": {
   "shadows": "mne.viz.utils._validate_if_list_of_axes"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.add_background_image": {
  "data": {
   "shadows": "mne.viz.add_background_image"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.base_dir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "mne.viz.tests.test_utils.compare_fiff": {
  "data": {
   "shadows": "mne.viz.utils.compare_fiff"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.cov_fname": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "mne.viz.tests.test_utils.ev_fname": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "mne.viz.tests.test_utils.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.mne_analyze_colormap": {
  "data": {
   "shadows": "mne.viz.mne_analyze_colormap"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.raw_fname": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "mne.viz.tests.test_utils.read_events": {
  "data": {
   "shadows": "mne.event.read_events"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.read_raw_fif": {
  "data": {
   "shadows": "mne.io.read_raw_fif"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.run_tests_if_main": {
  "data": {
   "shadows": "mne.utils.run_tests_if_main"
  },
  "type": "import"
 },
 "mne.viz.tests.test_utils.test_add_background_image": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplots",
    "mne.viz.add_background_image",
    "nose.tools.assert_true",
    "numpy.random.RandomState",
    "range"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_auto_scale": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "mne.epochs.Epochs",
    "mne.event.read_events",
    "mne.io.read_raw_fif",
    "mne.viz.tests.test_utils.ev_fname",
    "mne.viz.tests.test_utils.raw_fname",
    "mne.viz.utils._compute_scalings",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_clickable_image": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "float",
    "len",
    "matplotlib.pyplot.close",
    "mne.viz.ClickableImage",
    "mne.viz.utils._fake_click",
    "nose.tools.assert_true",
    "numpy.array",
    "numpy.random.RandomState",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_compare_fiff": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "matplotlib.pyplot.close",
    "mne.viz.tests.test_utils.cov_fname",
    "mne.viz.tests.test_utils.raw_fname",
    "mne.viz.utils.compare_fiff"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_mne_analyze_colormap": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "mne.viz.mne_analyze_colormap",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.test_validate_if_list_of_axes": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "matplotlib.pyplot.close",
    "matplotlib.pyplot.subplots",
    "mne.viz.utils._validate_if_list_of_axes",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "mne.viz.tests.test_utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "mne.viz.topo": {
  "data": {},
  "type": "module"
 },
 "mne.viz.topo.RectangleSelector": {
  "data": {
   "shadows": "matplotlib.widgets.RectangleSelector"
  },
  "type": "import"
 },
 "mne.viz.topo._check_vlim": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "numpy.isscalar"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._compute_scalings": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.ndarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._erfimage_imshow": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "callable",
    "len",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.gca",
    "order",
    "scipy.ndimage.gaussian_filter1d"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._erfimage_imshow_unified": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "callable",
    "len",
    "mne.viz.topo._compute_scalings",
    "order",
    "scipy.ndimage.gaussian_filter1d"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._imshow_tfr": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "DraggableColorbar",
    "ValueError",
    "isinstance",
    "len",
    "matplotlib.pyplot.colorbar",
    "matplotlib.ticker.NullFormatter",
    "matplotlib.ticker.NullLocator",
    "matplotlib.ticker.ScalarFormatter",
    "matplotlib.widgets.RectangleSelector",
    "numpy.allclose",
    "numpy.concatenate",
    "numpy.diff",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.sqrt",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._imshow_tfr_unified": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "mne.viz.topo._compute_scalings"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._iter_topography": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Bunch",
    "_clean_names",
    "enumerate",
    "find_layout",
    "functools.partial",
    "list",
    "matplotlib.collections.PolyCollection",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.setp",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_evoked_topo": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_check_delayed_ssp",
    "_clean_names",
    "_draw_proj_checkbox",
    "_handle_default",
    "_merge_grad_data",
    "_pair_grad_sensors",
    "add_background_image",
    "all",
    "channel_type",
    "dict",
    "find_layout",
    "functools.partial",
    "isinstance",
    "itertools.cycle",
    "len",
    "list",
    "matplotlib.pyplot.legend",
    "mne.viz.topo._plot_timeseries",
    "mne.viz.topo._plot_timeseries_unified",
    "mne.viz.topo._plot_topo",
    "numpy.array",
    "pick_types",
    "plt_show",
    "range",
    "set",
    "set.difference",
    "set.intersection",
    "set_ylim",
    "show_func",
    "slice",
    "tuple",
    "type",
    "warn",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_evoked_topo.set_ylim": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "AttributeError",
    "_format_coord",
    "_setup_ax_spines",
    "isinstance",
    "list",
    "matplotlib.colors.colorConverter.to_rgb",
    "matplotlib.pyplot.axhline",
    "matplotlib.pyplot.axvline",
    "matplotlib.pyplot.colorbar",
    "matplotlib.pyplot.connect",
    "matplotlib.pyplot.xlabel",
    "numpy.array",
    "numpy.dot",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries._cursor_vline": {
  "data": {
   "lineno": 404
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries._format_coord": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "len",
    "numpy.abs",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries._rm_cursor": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "mne.viz.topo._plot_timeseries_unified": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "any",
    "isinstance",
    "list",
    "matplotlib.pyplot.colorbar",
    "mne.viz.topo._compute_scalings",
    "numpy.array",
    "numpy.max",
    "numpy.min",
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_topo": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "_set_ax_facecolor",
    "channel_type",
    "copy.deepcopy",
    "functools.partial",
    "matplotlib.pyplot.Normalize",
    "matplotlib.pyplot.axes",
    "matplotlib.pyplot.cm.ScalarMappable",
    "matplotlib.pyplot.figtext",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.getp",
    "matplotlib.pyplot.setp",
    "mne.viz.topo._check_vlim",
    "mne.viz.topo._iter_topography",
    "numpy.linspace",
    "show_func"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_topo_onpick": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "Exception",
    "_set_ax_facecolor",
    "hasattr",
    "matplotlib.pyplot.subplots",
    "matplotlib.pyplot.title",
    "print",
    "show_func"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo._plot_update_evoked_topo_proj": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "zip"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo.collections": {
  "data": {
   "shadows": "matplotlib.collections"
  },
  "type": "import"
 },
 "mne.viz.topo.colorConverter": {
  "data": {
   "shadows": "matplotlib.colors.colorConverter"
  },
  "type": "import"
 },
 "mne.viz.topo.cycle": {
  "data": {
   "shadows": "itertools.cycle"
  },
  "type": "import"
 },
 "mne.viz.topo.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "mne.viz.topo.iter_topography": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "mne.viz.topo._iter_topography"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "mne.viz.topo.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "mne.viz.topo.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "mne.viz.topo.plot_topo_image_epochs": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "_handle_default",
    "_setup_vmin_vmax",
    "add_background_image",
    "channel_type",
    "find_layout",
    "functools.partial",
    "list",
    "mne.viz.topo._erfimage_imshow",
    "mne.viz.topo._erfimage_imshow_unified",
    "mne.viz.topo._plot_topo",
    "order",
    "plt_show",
    "range",
    "show_func"
   ]
  },
  "type": "function"
 },
 "mne.viz.topo.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "mne.viz.topo.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "mne.viz.topo.ticker": {
  "data": {
   "shadows": "matplotlib.ticker"
  },
  "type": "import"
 }
}